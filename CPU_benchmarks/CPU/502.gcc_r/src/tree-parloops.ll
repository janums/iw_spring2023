; ModuleID = 'tree-parloops.bc'
source_filename = "tree-parloops.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type opaque
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_niter_desc = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.double_int, %struct.affine_iv, %union.tree_node*, i32 }
%struct.affine_iv = type { %union.tree_node*, %union.tree_node*, i8 }
%struct.loop_iterator = type { %struct.VEC_int_heap*, i32 }
%struct.VEC_int_heap = type { %struct.VEC_int_base }
%struct.VEC_int_base = type { i32, i32, [1 x i32] }
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.immediate_use_iterator_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* }
%struct.reduction_info = type { %union.gimple_statement_d*, %union.gimple_statement_d*, i32, %union.gimple_statement_d*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.gimple_statement_d* }
%struct.VEC_ddr_p_heap = type { %struct.VEC_ddr_p_base }
%struct.VEC_ddr_p_base = type { i32, i32, [1 x %struct.data_dependence_relation*] }
%struct.data_dependence_relation = type { %struct.data_reference*, %struct.data_reference*, %union.tree_node*, %struct.VEC_subscript_p_heap*, %struct.VEC_loop_p_heap*, %struct.VEC_lambda_vector_heap*, %struct.VEC_lambda_vector_heap*, i32, i8, i8, i8 }
%struct.data_reference = type { %union.gimple_statement_d*, %union.tree_node*, i8*, i8, %struct.innermost_loop_behavior, %struct.indices, %struct.dr_alias, %struct.access_matrix* }
%struct.innermost_loop_behavior = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.indices = type { %union.tree_node*, %struct.VEC_tree_heap* }
%struct.VEC_tree_heap = type { %struct.VEC_tree_base }
%struct.dr_alias = type { %struct.ptr_info_def*, %struct.bitmap_head_def* }
%struct.ptr_info_def = type { %struct.pt_solution }
%struct.access_matrix = type { %struct.VEC_loop_p_heap*, i32, %struct.VEC_tree_heap*, %struct.VEC_lambda_vector_gc* }
%struct.VEC_lambda_vector_gc = type { %struct.VEC_lambda_vector_base }
%struct.VEC_lambda_vector_base = type { i32, i32, [1 x i32*] }
%struct.VEC_subscript_p_heap = type { %struct.VEC_subscript_p_base }
%struct.VEC_subscript_p_base = type { i32, i32, [1 x %struct.subscript*] }
%struct.subscript = type { %struct.conflict_function*, %struct.conflict_function*, %union.tree_node*, %union.tree_node* }
%struct.conflict_function = type { i32, [2 x %struct.VEC_tree_heap*] }
%struct.VEC_loop_p_heap = type { %struct.VEC_loop_p_base }
%struct.VEC_lambda_vector_heap = type { %struct.VEC_lambda_vector_base }
%struct.VEC_data_reference_p_heap = type { %struct.VEC_data_reference_p_base }
%struct.VEC_data_reference_p_base = type { i32, i32, [1 x %struct.data_reference*] }
%struct.lambda_trans_matrix_s = type { i32**, i32, i32, i32 }
%struct.clsn_data = type { %union.tree_node*, %union.tree_node*, %struct.basic_block_def*, %struct.basic_block_def* }
%struct._loop_vec_info = type { %struct.loop*, %struct.basic_block_def**, %union.tree_node*, %union.tree_node*, i32, i8, i32, %struct.data_reference*, i32, i32, %struct.VEC_data_reference_p_heap*, %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap*, %struct.VEC_gimple_heap*, i32, %struct.VEC_gimple_heap*, %struct.VEC_slp_instance_heap*, i32 }
%struct.VEC_gimple_heap = type { %struct.VEC_gimple_base }
%struct.VEC_slp_instance_heap = type { %struct.VEC_slp_instance_base }
%struct.VEC_slp_instance_base = type { i32, i32, [1 x %struct._slp_instance*] }
%struct._slp_instance = type { %struct._slp_tree*, i32, i32, %struct.anon.0, %struct.VEC_int_heap*, %struct.VEC_slp_tree_heap*, %union.gimple_statement_d* }
%struct._slp_tree = type { %struct._slp_tree*, %struct._slp_tree*, %struct.VEC_gimple_heap*, %struct.VEC_gimple_heap*, i32, %struct.anon }
%struct.anon = type { i32, i32 }
%struct.anon.0 = type { i32, i32 }
%struct.VEC_slp_tree_heap = type { %struct.VEC_slp_tree_base }
%struct.VEC_slp_tree_base = type { i32, i32, [1 x %struct._slp_tree*] }
%struct.VEC_basic_block_heap = type { %struct.VEC_basic_block_base }
%struct.elv_data = type { %struct.walk_stmt_info, %struct.edge_def*, %struct.htab*, i8 }
%struct.walk_stmt_info = type { %struct.gimple_stmt_iterator, i8*, %struct.pointer_set_t*, i8, i8, i8, i8, %union.tree_node* }
%struct.pointer_set_t = type opaque
%struct.int_tree_map = type { i32, %union.tree_node* }
%struct.ssa_operand_iterator_d = type { i8, i32, %struct.def_optype_d*, %struct.use_optype_d*, i32, i32, %union.gimple_statement_d* }
%struct.name_to_copy_elt = type { i32, %union.tree_node*, %union.tree_node* }
%struct.tree_ssa_name = type { %struct.tree_common, %union.tree_node*, %union.gimple_statement_d*, i32, %struct.ptr_info_def*, %struct.ssa_use_operand_d }
%struct.gimple_omp_for_iter = type { i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@flag_tree_parallelize_loops = external dso_local local_unnamed_addr global i32, align 4
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@dump_flags = external dso_local local_unnamed_addr global i32, align 4
@.str = private unnamed_addr constant [29 x i8] c"Trying loop %d as candidate\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"loop %d is not innermost\0A\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"loop %d is innermost\0A\00", align 1
@flag_loop_parallelize_all = external dso_local local_unnamed_addr global i32, align 4
@.str.3 = private unnamed_addr constant [44 x i8] c"loop is not parallel according to graphite\0A\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"loop is !single_dom_exit\0A\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"parallelizing outer loop %d\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"parallelizing inner loop %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"\0Aloop at %s:%d: \00", align 1
@parallelized_functions = internal global %struct.bitmap_head_def* null, align 8, !dbg !0
@gt_ggc_r_gt_tree_parloops_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.bitmap_head_def** @parallelized_functions to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_bitmap_head_def, void (i8*)* @gt_pch_nx_bitmap_head_def }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2048
@htab_hash_pointer = external dso_local local_unnamed_addr global i32 (i8*)*, align 8
@.str.8 = private unnamed_addr constant [16 x i8] c"tree-parloops.c\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"  FAILED: number of iterations not known\0A\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"phi is \00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"arg of phi to exit:   value \00", align 1
@.str.13 = private unnamed_addr constant [20 x i8] c" used outside loop\0A\00", align 1
@.str.14 = private unnamed_addr constant [49 x i8] c"  checking if it a part of reduction pattern:  \0A\00", align 1
@.str.15 = private unnamed_addr constant [42 x i8] c"  FAILED: it is not a part of reduction.\0A\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"reduction phi is  \00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"reduction stmt is  \00", align 1
@.str.18 = private unnamed_addr constant [48 x i8] c"  FAILED: scalar dependency between iterations\0A\00", align 1
@vect_dump = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str.19 = private unnamed_addr constant [41 x i8] c"Detected reduction. reduction stmt is: \0A\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gimple_rhs_class_table = external dso_local local_unnamed_addr constant [0 x i8], align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.22 = private unnamed_addr constant [21 x i8] c"Considering loop %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [19 x i8] c"loop is innermost\0A\00", align 1
@.str.24 = private unnamed_addr constant [20 x i8] c"loop NOT innermost\0A\00", align 1
@.str.25 = private unnamed_addr constant [32 x i8] c"  SUCCESS: may be parallelized\0A\00", align 1
@.str.26 = private unnamed_addr constant [53 x i8] c"  FAILED: data dependencies exist across iterations\0A\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.27 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"reduction\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@.str.29 = private unnamed_addr constant [12 x i8] c".paral_data\00", align 1
@.str.30 = private unnamed_addr constant [18 x i8] c".paral_data_store\00", align 1
@.str.31 = private unnamed_addr constant [17 x i8] c".paral_data_load\00", align 1
@.str.32 = private unnamed_addr constant [21 x i8] c"./tree-flow-inline.h\00", align 1
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@create_loop_fn.loopfn_num = internal unnamed_addr global i32 0, align 4, !dbg !2062
@.str.33 = private unnamed_addr constant [11 x i8] c"%s.$loopfn\00", align 1
@.str.34 = private unnamed_addr constant [7 x i8] c"%s.%lu\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c".paral_data_param\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2087 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2100, metadata !DIExpression()), !dbg !2102
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2101, metadata !DIExpression()), !dbg !2102
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2103
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2104
  ret i32 %call, !dbg !2105
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2106 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2110
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2111
  ret i32 %call, !dbg !2112
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2113 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2168, metadata !DIExpression()), !dbg !2169
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2170
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2170
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2170
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2170
  %cmp = icmp uge i8* %0, %1, !dbg !2170
  %conv1 = zext i1 %cmp to i64, !dbg !2170
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2170
  %tobool = icmp eq i64 %expval, 0, !dbg !2170
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2170

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2170
  br label %cond.end, !dbg !2170

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2170
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2170
  %2 = load i8, i8* %0, align 1, !dbg !2170
  %conv3 = zext i8 %2 to i32, !dbg !2170
  br label %cond.end, !dbg !2170

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2170
  ret i32 %cond, !dbg !2171
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2172 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2174, metadata !DIExpression()), !dbg !2175
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2176
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2176
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2176
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2176
  %cmp = icmp uge i8* %0, %1, !dbg !2176
  %conv1 = zext i1 %cmp to i64, !dbg !2176
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2176
  %tobool = icmp eq i64 %expval, 0, !dbg !2176
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2176

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2176
  br label %cond.end, !dbg !2176

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2176
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2176
  %2 = load i8, i8* %0, align 1, !dbg !2176
  %conv3 = zext i8 %2 to i32, !dbg !2176
  br label %cond.end, !dbg !2176

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2176
  ret i32 %cond, !dbg !2177
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2178 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2179
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2179
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2179
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2179
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2179
  %cmp = icmp uge i8* %1, %2, !dbg !2179
  %conv1 = zext i1 %cmp to i64, !dbg !2179
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2179
  %tobool = icmp eq i64 %expval, 0, !dbg !2179
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2179

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2179
  br label %cond.end, !dbg !2179

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2179
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2179
  %3 = load i8, i8* %1, align 1, !dbg !2179
  %conv3 = zext i8 %3 to i32, !dbg !2179
  br label %cond.end, !dbg !2179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2179
  ret i32 %cond, !dbg !2180
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2181 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2185, metadata !DIExpression()), !dbg !2186
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2187
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2188
  ret i32 %call, !dbg !2189
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2190 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2194, metadata !DIExpression()), !dbg !2196
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2195, metadata !DIExpression()), !dbg !2196
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2197
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2197
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2197
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2197
  %cmp = icmp uge i8* %0, %1, !dbg !2197
  %conv1 = zext i1 %cmp to i64, !dbg !2197
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2197
  %tobool = icmp eq i64 %expval, 0, !dbg !2197
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2197

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2197
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2197
  br label %cond.end, !dbg !2197

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2197
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2197
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2197
  store i8 %conv2, i8* %0, align 1, !dbg !2197
  %conv6 = and i32 %__c, 255, !dbg !2197
  br label %cond.end, !dbg !2197

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2197
  ret i32 %cond, !dbg !2198
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2199 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2201, metadata !DIExpression()), !dbg !2203
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2202, metadata !DIExpression()), !dbg !2203
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2204
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2204
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2204
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2204
  %cmp = icmp uge i8* %0, %1, !dbg !2204
  %conv1 = zext i1 %cmp to i64, !dbg !2204
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2204
  %tobool = icmp eq i64 %expval, 0, !dbg !2204
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2204

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2204
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2204
  br label %cond.end, !dbg !2204

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2204
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2204
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2204
  store i8 %conv2, i8* %0, align 1, !dbg !2204
  %conv6 = and i32 %__c, 255, !dbg !2204
  br label %cond.end, !dbg !2204

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2204
  ret i32 %cond, !dbg !2205
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2206 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2208, metadata !DIExpression()), !dbg !2209
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2210
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2210
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2210
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2210
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2210
  %cmp = icmp uge i8* %1, %2, !dbg !2210
  %conv1 = zext i1 %cmp to i64, !dbg !2210
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2210
  %tobool = icmp eq i64 %expval, 0, !dbg !2210
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2210

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2210
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2210
  br label %cond.end, !dbg !2210

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2210
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2210
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2210
  store i8 %conv4, i8* %1, align 1, !dbg !2210
  %conv6 = and i32 %__c, 255, !dbg !2210
  br label %cond.end, !dbg !2210

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2210
  ret i32 %cond, !dbg !2211
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2212 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2218, metadata !DIExpression()), !dbg !2221
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2219, metadata !DIExpression()), !dbg !2221
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2220, metadata !DIExpression()), !dbg !2221
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2222
  ret i64 %call, !dbg !2223
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2224 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2226, metadata !DIExpression()), !dbg !2227
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2228
  %0 = load i32, i32* %_flags, align 8, !dbg !2228
  %and = lshr i32 %0, 4, !dbg !2228
  %and.lobit = and i32 %and, 1, !dbg !2228
  ret i32 %and.lobit, !dbg !2229
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2230 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2232, metadata !DIExpression()), !dbg !2233
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2234
  %0 = load i32, i32* %_flags, align 8, !dbg !2234
  %and = lshr i32 %0, 5, !dbg !2234
  %and.lobit = and i32 %and, 1, !dbg !2234
  ret i32 %and.lobit, !dbg !2235
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2236 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2239, metadata !DIExpression()), !dbg !2240
  %__c.off = add i32 %__c, 128, !dbg !2241
  %0 = icmp ult i32 %__c.off, 384, !dbg !2241
  br i1 %0, label %cond.true, label %cond.end, !dbg !2241

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2242
  %1 = load i32*, i32** %call, align 8, !dbg !2243
  %idxprom = sext i32 %__c to i64, !dbg !2244
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2244
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2244
  br label %cond.end, !dbg !2245

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2245
  ret i32 %cond, !dbg !2246
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2247 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2249, metadata !DIExpression()), !dbg !2250
  %__c.off = add i32 %__c, 128, !dbg !2251
  %0 = icmp ult i32 %__c.off, 384, !dbg !2251
  br i1 %0, label %cond.true, label %cond.end, !dbg !2251

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2252
  %1 = load i32*, i32** %call, align 8, !dbg !2253
  %idxprom = sext i32 %__c to i64, !dbg !2254
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2254
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2254
  br label %cond.end, !dbg !2255

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2255
  ret i32 %cond, !dbg !2256
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2257 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2262, metadata !DIExpression()), !dbg !2263
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2264
  %conv = trunc i64 %call to i32, !dbg !2265
  ret i32 %conv, !dbg !2266
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2267 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2271, metadata !DIExpression()), !dbg !2272
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2273
  ret i64 %call, !dbg !2274
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2275 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2280, metadata !DIExpression()), !dbg !2281
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2282
  ret i64 %call, !dbg !2283
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2284 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2290, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2291, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2292, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2293, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2294, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i64 0, metadata !2295, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2296, metadata !DIExpression()), !dbg !2300
  br label %while.cond, !dbg !2301

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2302
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2300
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2296, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2295, metadata !DIExpression()), !dbg !2300
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2303
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2301

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2304
  %div = lshr i64 %add, 1, !dbg !2306
  call void @llvm.dbg.value(metadata i64 %div, metadata !2297, metadata !DIExpression()), !dbg !2300
  %mul = mul i64 %div, %__size, !dbg !2307
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2308
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2298, metadata !DIExpression()), !dbg !2300
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2309
  call void @llvm.dbg.value(metadata i32 %call, metadata !2299, metadata !DIExpression()), !dbg !2300
  %cmp1 = icmp slt i32 %call, 0, !dbg !2310
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2312

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2313
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2315

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2316
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2295, metadata !DIExpression()), !dbg !2300
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2300
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2300
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2296, metadata !DIExpression()), !dbg !2300
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2295, metadata !DIExpression()), !dbg !2300
  br label %while.cond, !dbg !2301, !llvm.loop !2317

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2300
  ret i8* %retval.0, !dbg !2319
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2320 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2326, metadata !DIExpression()), !dbg !2327
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2328
  ret double %call, !dbg !2329
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2330 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2339, metadata !DIExpression()), !dbg !2342
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2340, metadata !DIExpression()), !dbg !2342
  call void @llvm.dbg.value(metadata i32 %base, metadata !2341, metadata !DIExpression()), !dbg !2342
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2343
  ret i64 %call, !dbg !2344
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2345 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2351, metadata !DIExpression()), !dbg !2354
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2352, metadata !DIExpression()), !dbg !2354
  call void @llvm.dbg.value(metadata i32 %base, metadata !2353, metadata !DIExpression()), !dbg !2354
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2355
  ret i64 %call, !dbg !2356
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2357 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2368, metadata !DIExpression()), !dbg !2371
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2369, metadata !DIExpression()), !dbg !2371
  call void @llvm.dbg.value(metadata i32 %base, metadata !2370, metadata !DIExpression()), !dbg !2371
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2372
  ret i64 %call, !dbg !2373
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2374 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2378, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2379, metadata !DIExpression()), !dbg !2381
  call void @llvm.dbg.value(metadata i32 %base, metadata !2380, metadata !DIExpression()), !dbg !2381
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2382
  ret i64 %call, !dbg !2383
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2384 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2424, metadata !DIExpression()), !dbg !2426
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2425, metadata !DIExpression()), !dbg !2426
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2427
  ret i32 %call, !dbg !2428
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2429 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2431, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2432, metadata !DIExpression()), !dbg !2433
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2434
  ret i32 %call, !dbg !2435
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2436 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2440, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2441, metadata !DIExpression()), !dbg !2442
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2443
  ret i32 %call, !dbg !2444
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2445 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2449, metadata !DIExpression()), !dbg !2453
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2450, metadata !DIExpression()), !dbg !2453
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2451, metadata !DIExpression()), !dbg !2453
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2452, metadata !DIExpression()), !dbg !2453
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2454
  ret i32 %call, !dbg !2455
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2456 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2460, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2461, metadata !DIExpression()), !dbg !2463
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2462, metadata !DIExpression()), !dbg !2463
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2462, metadata !DIExpression(DW_OP_deref)), !dbg !2463
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2464
  ret i32 %call, !dbg !2465
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2466 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2470, metadata !DIExpression()), !dbg !2474
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2471, metadata !DIExpression()), !dbg !2474
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2472, metadata !DIExpression()), !dbg !2474
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2473, metadata !DIExpression()), !dbg !2474
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2473, metadata !DIExpression(DW_OP_deref)), !dbg !2474
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2475
  ret i32 %call, !dbg !2476
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2477 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2501, metadata !DIExpression()), !dbg !2503
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2502, metadata !DIExpression()), !dbg !2503
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2504
  ret i32 %call, !dbg !2505
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2506 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2508, metadata !DIExpression()), !dbg !2510
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2509, metadata !DIExpression()), !dbg !2510
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2511
  ret i32 %call, !dbg !2512
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2513 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2517, metadata !DIExpression()), !dbg !2519
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2518, metadata !DIExpression()), !dbg !2519
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2520
  ret i32 %call, !dbg !2521
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2522 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2526, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2527, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2528, metadata !DIExpression()), !dbg !2530
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2529, metadata !DIExpression()), !dbg !2530
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2531
  ret i32 %call, !dbg !2532
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @parallelize_loops() local_unnamed_addr #5 !dbg !2533 {
entry:
  %loop = alloca %struct.loop*, align 8
  %niter_desc = alloca %struct.tree_niter_desc, align 8
  %li = alloca %struct.loop_iterator, align 8
  %tmp = alloca %struct.expanded_location, align 8
  %tmp102 = alloca %struct.expanded_location, align 8
  %0 = load i32, i32* @flag_tree_parallelize_loops, align 4, !dbg !2567
  call void @llvm.dbg.value(metadata i32 %0, metadata !2537, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata i8 0, metadata !2538, metadata !DIExpression()), !dbg !2568
  %1 = bitcast %struct.loop** %loop to i8*, !dbg !2569
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2569
  %2 = bitcast %struct.tree_niter_desc* %niter_desc to i8*, !dbg !2570
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %2) #7, !dbg !2570
  %3 = bitcast %struct.loop_iterator* %li to i8*, !dbg !2571
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #7, !dbg !2571
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2572
  %decl = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 6, !dbg !2574
  %5 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !2574
  %call = tail call fastcc zeroext i8 @parallelized_function_p(%union.tree_node* %5) #8, !dbg !2575
  %tobool = icmp eq i8 %call, 0, !dbg !2575
  br i1 %tobool, label %if.end, label %cleanup, !dbg !2576

if.end:                                           ; preds = %entry
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2577
  %has_nonlocal_label = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 20, !dbg !2579
  %bf.load = load i32, i32* %has_nonlocal_label, align 8, !dbg !2579
  %bf.clear = and i32 %bf.load, 1048576, !dbg !2579
  %tobool2 = icmp eq i32 %bf.clear, 0, !dbg !2577
  br i1 %tobool2, label %if.end4, label %cleanup, !dbg !2580

if.end4:                                          ; preds = %if.end
  %call5 = tail call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @reduction_info_hash, i32 (i8*, i8*)* nonnull @reduction_info_eq, void (i8*)* nonnull @free) #6, !dbg !2581
  call void @llvm.dbg.value(metadata %struct.htab* %call5, metadata !2562, metadata !DIExpression()), !dbg !2568
  tail call void @init_stmt_vec_info_vec() #6, !dbg !2582
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2539, metadata !DIExpression(DW_OP_deref)), !dbg !2568
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2556, metadata !DIExpression(DW_OP_deref)), !dbg !2568
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop, i32 0) #8, !dbg !2583
  %conv61 = zext i32 %0 to i64, !dbg !2585
  %mul = mul nuw nsw i64 %conv61, 100, !dbg !2585
  %file = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp, i64 0, i32 0, !dbg !2589
  %line = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp102, i64 0, i32 1, !dbg !2589
  br label %for.cond, !dbg !2583

for.cond:                                         ; preds = %for.inc, %if.end4
  %changed.0 = phi i8 [ 0, %if.end4 ], [ %changed.1, %for.inc ], !dbg !2593
  call void @llvm.dbg.value(metadata i8 %changed.0, metadata !2538, metadata !DIExpression()), !dbg !2568
  %7 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2594
  call void @llvm.dbg.value(metadata %struct.loop* %7, metadata !2539, metadata !DIExpression()), !dbg !2568
  %tobool6 = icmp eq %struct.loop* %7, null, !dbg !2583
  br i1 %tobool6, label %for.end, label %for.body, !dbg !2583

for.body:                                         ; preds = %for.cond
  call void @htab_empty(%struct.htab* %call5) #6, !dbg !2595
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2596
  %tobool7 = icmp eq %struct._IO_FILE* %8, null, !dbg !2596
  br i1 %tobool7, label %if.end18, label %land.lhs.true, !dbg !2598

land.lhs.true:                                    ; preds = %for.body
  %9 = load i32, i32* @dump_flags, align 4, !dbg !2599
  %and = and i32 %9, 8, !dbg !2600
  %tobool8 = icmp eq i32 %and, 0, !dbg !2600
  br i1 %tobool8, label %if.end18, label %if.then9, !dbg !2601

if.then9:                                         ; preds = %land.lhs.true
  %10 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2602
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !2539, metadata !DIExpression()), !dbg !2568
  %num = getelementptr inbounds %struct.loop, %struct.loop* %10, i64 0, i32 0, !dbg !2604
  %11 = load i32, i32* %num, align 8, !dbg !2604
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 %11) #6, !dbg !2605
  %12 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2606
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !2539, metadata !DIExpression()), !dbg !2568
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 8, !dbg !2608
  %13 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !2608
  %tobool11 = icmp eq %struct.loop* %13, null, !dbg !2606
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2609
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !2539, metadata !DIExpression()), !dbg !2568
  %num13 = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 0, !dbg !2609
  %15 = load i32, i32* %num13, align 8, !dbg !2609
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !2610

if.then12:                                        ; preds = %if.then9
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0), i32 %15) #6, !dbg !2611
  br label %if.end18, !dbg !2611

if.else:                                          ; preds = %if.then9
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), i32 %15) #6, !dbg !2612
  br label %if.end18

if.end18:                                         ; preds = %land.lhs.true, %for.body, %if.then12, %if.else
  %16 = load i32, i32* @flag_loop_parallelize_all, align 4, !dbg !2613
  %tobool19 = icmp eq i32 %16, 0, !dbg !2613
  br i1 %tobool19, label %if.end18.if.end30_crit_edge, label %land.lhs.true20, !dbg !2615

if.end18.if.end30_crit_edge:                      ; preds = %if.end18
  %.pre = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2616
  br label %if.end30, !dbg !2615

land.lhs.true20:                                  ; preds = %if.end18
  %17 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2618
  call void @llvm.dbg.value(metadata %struct.loop* %17, metadata !2539, metadata !DIExpression()), !dbg !2568
  %can_be_parallel = getelementptr inbounds %struct.loop, %struct.loop* %17, i64 0, i32 19, !dbg !2619
  %18 = load i8, i8* %can_be_parallel, align 8, !dbg !2619
  %tobool21 = icmp eq i8 %18, 0, !dbg !2618
  br i1 %tobool21, label %if.then22, label %if.end30, !dbg !2620

if.then22:                                        ; preds = %land.lhs.true20
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2621
  %tobool23 = icmp eq %struct._IO_FILE* %19, null, !dbg !2621
  br i1 %tobool23, label %for.inc, label %land.lhs.true24, !dbg !2624

land.lhs.true24:                                  ; preds = %if.then22
  %20 = load i32, i32* @dump_flags, align 4, !dbg !2625
  %and25 = and i32 %20, 8, !dbg !2626
  %tobool26 = icmp eq i32 %and25, 0, !dbg !2626
  br i1 %tobool26, label %for.inc, label %if.then27, !dbg !2627

if.then27:                                        ; preds = %land.lhs.true24
  %call28 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %19, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0)) #6, !dbg !2628
  br label %for.inc, !dbg !2628

if.end30:                                         ; preds = %if.end18.if.end30_crit_edge, %land.lhs.true20
  %21 = phi %struct.loop* [ %.pre, %if.end18.if.end30_crit_edge ], [ %17, %land.lhs.true20 ], !dbg !2616
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call31 = call %struct.edge_def* @single_dom_exit(%struct.loop* %21) #6, !dbg !2629
  %tobool32 = icmp eq %struct.edge_def* %call31, null, !dbg !2629
  br i1 %tobool32, label %if.then33, label %if.end41, !dbg !2630

if.then33:                                        ; preds = %if.end30
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2631
  %tobool34 = icmp eq %struct._IO_FILE* %22, null, !dbg !2631
  br i1 %tobool34, label %for.inc, label %land.lhs.true35, !dbg !2634

land.lhs.true35:                                  ; preds = %if.then33
  %23 = load i32, i32* @dump_flags, align 4, !dbg !2635
  %and36 = and i32 %23, 8, !dbg !2636
  %tobool37 = icmp eq i32 %and36, 0, !dbg !2636
  br i1 %tobool37, label %for.inc, label %if.then38, !dbg !2637

if.then38:                                        ; preds = %land.lhs.true35
  %call39 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %22, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2638
  br label %for.inc, !dbg !2638

if.end41:                                         ; preds = %if.end30
  %24 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2639
  call void @llvm.dbg.value(metadata %struct.loop* %24, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call42 = call zeroext i8 @can_duplicate_loop_p(%struct.loop* %24) #6, !dbg !2641
  %tobool43 = icmp eq i8 %call42, 0, !dbg !2641
  br i1 %tobool43, label %for.inc, label %lor.lhs.false, !dbg !2642

lor.lhs.false:                                    ; preds = %if.end41
  %25 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2643
  call void @llvm.dbg.value(metadata %struct.loop* %25, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call44 = call fastcc zeroext i8 @loop_has_blocks_with_irreducible_flag(%struct.loop* %25) #8, !dbg !2644
  %tobool45 = icmp eq i8 %call44, 0, !dbg !2644
  br i1 %tobool45, label %lor.lhs.false46, label %for.inc, !dbg !2645

lor.lhs.false46:                                  ; preds = %lor.lhs.false
  %26 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2646
  call void @llvm.dbg.value(metadata %struct.loop* %26, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call47 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %26) #6, !dbg !2647
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call47, i64 0, i32 0, !dbg !2648
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !2648
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i64 0, i32 13, !dbg !2649
  %28 = load i32, i32* %flags, align 8, !dbg !2649
  %and48 = and i32 %28, 4, !dbg !2650
  %tobool49 = icmp eq i32 %and48, 0, !dbg !2650
  br i1 %tobool49, label %lor.lhs.false50, label %for.inc, !dbg !2651

lor.lhs.false50:                                  ; preds = %lor.lhs.false46
  %29 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2652
  call void @llvm.dbg.value(metadata %struct.loop* %29, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call51 = call fastcc zeroext i8 @loop_has_vector_phi_nodes(%struct.loop* %29) #8, !dbg !2653
  %tobool53 = icmp eq i8 %call51, 0, !dbg !2653
  br i1 %tobool53, label %if.end55, label %for.inc, !dbg !2654

if.end55:                                         ; preds = %lor.lhs.false50
  %30 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2655
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call56 = call i64 @estimated_loop_iterations_int(%struct.loop* %30, i8 zeroext 0) #6, !dbg !2656
  call void @llvm.dbg.value(metadata i64 %call56, metadata !2563, metadata !DIExpression()), !dbg !2568
  %31 = load i32, i32* @flag_loop_parallelize_all, align 4, !dbg !2657
  %tobool57 = icmp eq i32 %31, 0, !dbg !2657
  br i1 %tobool57, label %land.lhs.true58, label %if.end69, !dbg !2658

land.lhs.true58:                                  ; preds = %if.end55
  %cmp = icmp eq i64 %call56, -1, !dbg !2659
  br i1 %cmp, label %lor.lhs.false64, label %land.lhs.true60, !dbg !2660

land.lhs.true60:                                  ; preds = %land.lhs.true58
  %cmp62 = icmp sgt i64 %call56, %mul, !dbg !2661
  br i1 %cmp62, label %lor.lhs.false64, label %for.inc, !dbg !2662

lor.lhs.false64:                                  ; preds = %land.lhs.true60, %land.lhs.true58
  %32 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2663
  call void @llvm.dbg.value(metadata %struct.loop* %32, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call65 = call zeroext i8 @optimize_loop_nest_for_size_p(%struct.loop* %32) #6, !dbg !2664
  %tobool67 = icmp eq i8 %call65, 0, !dbg !2664
  br i1 %tobool67, label %if.end69, label %for.inc, !dbg !2665

if.end69:                                         ; preds = %lor.lhs.false64, %if.end55
  %33 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2666
  call void @llvm.dbg.value(metadata %struct.loop* %33, metadata !2539, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %niter_desc, metadata !2540, metadata !DIExpression(DW_OP_deref)), !dbg !2568
  %call70 = call fastcc zeroext i8 @try_get_loop_niter(%struct.loop* %33, %struct.tree_niter_desc* nonnull %niter_desc) #8, !dbg !2668
  %tobool71 = icmp eq i8 %call70, 0, !dbg !2668
  br i1 %tobool71, label %for.inc, label %if.end73, !dbg !2669

if.end73:                                         ; preds = %if.end69
  %34 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2670
  call void @llvm.dbg.value(metadata %struct.loop* %34, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call74 = call fastcc zeroext i8 @try_create_reduction_list(%struct.loop* %34, %struct.htab* %call5) #8, !dbg !2672
  %tobool75 = icmp eq i8 %call74, 0, !dbg !2672
  br i1 %tobool75, label %for.inc, label %if.end77, !dbg !2673

if.end77:                                         ; preds = %if.end73
  %35 = load i32, i32* @flag_loop_parallelize_all, align 4, !dbg !2674
  %tobool78 = icmp eq i32 %35, 0, !dbg !2674
  br i1 %tobool78, label %land.lhs.true79, label %if.end83, !dbg !2676

land.lhs.true79:                                  ; preds = %if.end77
  %36 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2677
  call void @llvm.dbg.value(metadata %struct.loop* %36, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call80 = call fastcc zeroext i8 @loop_parallel_p(%struct.loop* %36) #8, !dbg !2678
  %tobool81 = icmp eq i8 %call80, 0, !dbg !2678
  br i1 %tobool81, label %for.inc, label %if.end83, !dbg !2679

if.end83:                                         ; preds = %land.lhs.true79, %if.end77
  call void @llvm.dbg.value(metadata i8 1, metadata !2538, metadata !DIExpression()), !dbg !2568
  %37 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2680
  %tobool84 = icmp eq %struct._IO_FILE* %37, null, !dbg !2680
  br i1 %tobool84, label %if.end105, label %land.lhs.true85, !dbg !2681

land.lhs.true85:                                  ; preds = %if.end83
  %38 = load i32, i32* @dump_flags, align 4, !dbg !2682
  %and86 = and i32 %38, 8, !dbg !2683
  %tobool87 = icmp eq i32 %and86, 0, !dbg !2683
  br i1 %tobool87, label %if.end105, label %if.then88, !dbg !2684

if.then88:                                        ; preds = %land.lhs.true85
  %39 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2685
  call void @llvm.dbg.value(metadata %struct.loop* %39, metadata !2539, metadata !DIExpression()), !dbg !2568
  %inner89 = getelementptr inbounds %struct.loop, %struct.loop* %39, i64 0, i32 8, !dbg !2687
  %40 = load %struct.loop*, %struct.loop** %inner89, align 8, !dbg !2687
  %tobool90 = icmp eq %struct.loop* %40, null, !dbg !2685
  call void @llvm.dbg.value(metadata %struct.loop* %39, metadata !2539, metadata !DIExpression()), !dbg !2568
  %header = getelementptr inbounds %struct.loop, %struct.loop* %39, i64 0, i32 2, !dbg !2688
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !2688
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %41, i64 0, i32 9, !dbg !2688
  %42 = load i32, i32* %index, align 8, !dbg !2688
  br i1 %tobool90, label %if.else93, label %if.then91, !dbg !2689

if.then91:                                        ; preds = %if.then88
  %call92 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %37, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i32 %42) #6, !dbg !2690
  br label %if.end97, !dbg !2690

if.else93:                                        ; preds = %if.then88
  %call96 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %37, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 %42) #6, !dbg !2691
  br label %if.end97

if.end97:                                         ; preds = %if.else93, %if.then91
  %43 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2692
  call void @llvm.dbg.value(metadata %struct.loop* %43, metadata !2539, metadata !DIExpression()), !dbg !2568
  %call98 = call i32 @find_loop_location(%struct.loop* %43) #6, !dbg !2693
  call void @llvm.dbg.value(metadata i32 %call98, metadata !2564, metadata !DIExpression()), !dbg !2568
  %cmp99 = icmp eq i32 %call98, 0, !dbg !2694
  br i1 %cmp99, label %if.end105, label %if.then101, !dbg !2695

if.then101:                                       ; preds = %if.end97
  %44 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2696
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp, i32 %call98) #6, !dbg !2697
  %45 = load i8*, i8** %file, align 8, !dbg !2697
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp102, i32 %call98) #6, !dbg !2698
  %46 = load i32, i32* %line, align 8, !dbg !2698
  %call103 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %44, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i8* %45, i32 %46) #6, !dbg !2699
  br label %if.end105, !dbg !2699

if.end105:                                        ; preds = %if.end97, %land.lhs.true85, %if.end83, %if.then101
  %47 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !2700
  call void @llvm.dbg.value(metadata %struct.loop* %47, metadata !2539, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %niter_desc, metadata !2540, metadata !DIExpression(DW_OP_deref)), !dbg !2568
  call fastcc void @gen_parallel_loop(%struct.loop* %47, %struct.htab* %call5, i32 %0, %struct.tree_niter_desc* nonnull %niter_desc) #8, !dbg !2701
  call void @verify_flow_info() #6, !dbg !2702
  call void @verify_dominators(i32 1) #6, !dbg !2703
  call void @verify_loop_structure() #6, !dbg !2704
  call void @verify_loop_closed_ssa() #6, !dbg !2705
  br label %for.inc, !dbg !2706

for.inc:                                          ; preds = %land.lhs.true24, %if.then22, %land.lhs.true60, %land.lhs.true79, %if.end73, %if.end69, %lor.lhs.false64, %lor.lhs.false50, %lor.lhs.false46, %lor.lhs.false, %if.end41, %land.lhs.true35, %if.then33, %if.then38, %if.then27, %if.end105
  %changed.1 = phi i8 [ 1, %if.end105 ], [ %changed.0, %if.then27 ], [ %changed.0, %land.lhs.true24 ], [ %changed.0, %if.then22 ], [ %changed.0, %if.then38 ], [ %changed.0, %land.lhs.true35 ], [ %changed.0, %if.then33 ], [ %changed.0, %lor.lhs.false50 ], [ %changed.0, %lor.lhs.false46 ], [ %changed.0, %lor.lhs.false ], [ %changed.0, %if.end41 ], [ %changed.0, %lor.lhs.false64 ], [ %changed.0, %land.lhs.true60 ], [ %changed.0, %if.end69 ], [ %changed.0, %if.end73 ], [ %changed.0, %land.lhs.true79 ], !dbg !2568
  call void @llvm.dbg.value(metadata i8 %changed.1, metadata !2538, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2539, metadata !DIExpression(DW_OP_deref)), !dbg !2568
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2556, metadata !DIExpression(DW_OP_deref)), !dbg !2568
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop) #8, !dbg !2594
  br label %for.cond, !dbg !2594, !llvm.loop !2707

for.end:                                          ; preds = %for.cond
  %changed.0.lcssa = phi i8 [ %changed.0, %for.cond ], !dbg !2593
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2538, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2538, metadata !DIExpression()), !dbg !2568
  call void @llvm.dbg.value(metadata i8 %changed.0.lcssa, metadata !2538, metadata !DIExpression()), !dbg !2568
  call void @free_stmt_vec_info_vec() #6, !dbg !2709
  call void @htab_delete(%struct.htab* %call5) #6, !dbg !2710
  %tobool106 = icmp eq i8 %changed.0.lcssa, 0, !dbg !2711
  br i1 %tobool106, label %cleanup, label %if.then107, !dbg !2713

if.then107:                                       ; preds = %for.end
  %48 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2714
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %48, i64 0, i32 3, !dbg !2716
  %49 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !2716
  %escaped = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %49, i64 0, i32 4, !dbg !2717
  call void @pt_solution_reset(%struct.pt_solution* nonnull %escaped) #6, !dbg !2718
  %50 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2719
  %gimple_df110 = getelementptr inbounds %struct.function, %struct.function* %50, i64 0, i32 3, !dbg !2720
  %51 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df110, align 8, !dbg !2720
  %callused = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %51, i64 0, i32 5, !dbg !2721
  call void @pt_solution_reset(%struct.pt_solution* nonnull %callused) #6, !dbg !2722
  br label %cleanup, !dbg !2723

cleanup:                                          ; preds = %for.end, %if.end, %entry, %if.then107
  %retval.0 = phi i8 [ 0, %entry ], [ 0, %if.end ], [ %changed.0.lcssa, %if.then107 ], [ 0, %for.end ], !dbg !2568
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #7, !dbg !2724
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %2) #7, !dbg !2724
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !2724
  ret i8 %retval.0, !dbg !2724
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @parallelized_function_p(%union.tree_node* %fn) unnamed_addr #5 !dbg !2725 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !2729, metadata !DIExpression()), !dbg !2730
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @parallelized_functions, align 8, !dbg !2731
  %tobool = icmp eq %struct.bitmap_head_def* %0, null, !dbg !2731
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !2733

lor.lhs.false:                                    ; preds = %entry
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2734
  %1 = bitcast i40* %artificial_flag to i64*, !dbg !2734
  %bf.load = load i64, i64* %1, align 8, !dbg !2734
  %bf.cast1 = and i64 %bf.load, 4096, !dbg !2734
  %tobool1 = icmp eq i64 %bf.cast1, 0, !dbg !2734
  br i1 %tobool1, label %return, label %if.end, !dbg !2735

if.end:                                           ; preds = %lor.lhs.false
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2736
  %2 = load i32, i32* %uid, align 4, !dbg !2736
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* nonnull %0, i32 %2) #6, !dbg !2737
  %conv = trunc i32 %call to i8, !dbg !2737
  br label %return, !dbg !2738

return:                                           ; preds = %lor.lhs.false, %entry, %if.end
  %retval.0 = phi i8 [ %conv, %if.end ], [ 0, %lor.lhs.false ], [ 0, %entry ], !dbg !2730
  ret i8 %retval.0, !dbg !2739
}

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @reduction_info_hash(i8* %aa) #5 !dbg !2740 {
entry:
  call void @llvm.dbg.value(metadata i8* %aa, metadata !2742, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata i8* %aa, metadata !2743, metadata !DIExpression()), !dbg !2744
  %0 = load i32 (i8*)*, i32 (i8*)** @htab_hash_pointer, align 8, !dbg !2745
  %reduc_phi = getelementptr inbounds i8, i8* %aa, i64 8, !dbg !2746
  %1 = bitcast i8* %reduc_phi to i8**, !dbg !2746
  %2 = load i8*, i8** %1, align 8, !dbg !2746
  %call = tail call i32 %0(i8* %2) #6, !dbg !2745
  ret i32 %call, !dbg !2747
}

; Function Attrs: nounwind uwtable
define internal i32 @reduction_info_eq(i8* %aa, i8* %bb) #5 !dbg !2748 {
entry:
  call void @llvm.dbg.value(metadata i8* %aa, metadata !2750, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.value(metadata i8* %bb, metadata !2751, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.value(metadata i8* %aa, metadata !2752, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.value(metadata i8* %bb, metadata !2753, metadata !DIExpression()), !dbg !2754
  %reduc_phi = getelementptr inbounds i8, i8* %aa, i64 8, !dbg !2755
  %0 = bitcast i8* %reduc_phi to %union.gimple_statement_d**, !dbg !2755
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %0, align 8, !dbg !2755
  %reduc_phi1 = getelementptr inbounds i8, i8* %bb, i64 8, !dbg !2756
  %2 = bitcast i8* %reduc_phi1 to %union.gimple_statement_d**, !dbg !2756
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %2, align 8, !dbg !2756
  %cmp = icmp eq %union.gimple_statement_d* %1, %3, !dbg !2757
  %conv = zext i1 %cmp to i32, !dbg !2757
  ret i32 %conv, !dbg !2758
}

declare dso_local void @free(i8*) #2

declare dso_local void @init_stmt_vec_info_vec() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_init(%struct.loop_iterator* %li, %struct.loop** %loop, i32 %flags) unnamed_addr #0 !dbg !2759 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !2765, metadata !DIExpression()), !dbg !2771
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !2766, metadata !DIExpression()), !dbg !2771
  call void @llvm.dbg.value(metadata i32 0, metadata !2767, metadata !DIExpression()), !dbg !2771
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !2772
  store i32 0, i32* %idx, align 8, !dbg !2773
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2774
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !2774
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !2774
  %tobool = icmp eq %struct.loops* %1, null, !dbg !2774
  br i1 %tobool, label %if.then, label %if.end, !dbg !2776

if.then:                                          ; preds = %entry
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !2777
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %to_visit, align 8, !dbg !2779
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !2780
  br label %cleanup, !dbg !2781

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @number_of_loops() #8, !dbg !2782
  %call1 = tail call fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %call) #8, !dbg !2782
  %to_visit2 = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !2783
  store %struct.VEC_int_heap* %call1, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !2784
  call void @llvm.dbg.value(metadata i32 1, metadata !2770, metadata !DIExpression()), !dbg !2771
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2785
  %x_current_loops35 = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 4, !dbg !2785
  %3 = load %struct.loops*, %struct.loops** %x_current_loops35, align 8, !dbg !2785
  %tree_root = getelementptr inbounds %struct.loops, %struct.loops* %3, i64 0, i32 3, !dbg !2785
  %4 = load %struct.loop*, %struct.loop** %tree_root, align 8, !dbg !2785
  br label %while.cond79, !dbg !2788

while.cond79:                                     ; preds = %if.end, %if.end111
  %5 = phi %struct.loop* [ %4, %if.end ], [ %25, %if.end111 ]
  %6 = phi %struct.loop* [ %4, %if.end ], [ %26, %if.end111 ]
  %7 = phi %struct.loop* [ %4, %if.end ], [ %27, %if.end111 ]
  %8 = phi %struct.loop* [ %4, %if.end ], [ %28, %if.end111 ]
  %9 = phi %struct.loop* [ %4, %if.end ], [ %29, %if.end111 ]
  %10 = phi %struct.loop* [ %4, %if.end ], [ %30, %if.end111 ]
  %11 = phi %struct.loop* [ %4, %if.end ], [ %31, %if.end111 ]
  %12 = phi %struct.loop* [ %4, %if.end ], [ %32, %if.end111 ], !dbg !2790
  call void @llvm.dbg.value(metadata %struct.loop* %12, metadata !2768, metadata !DIExpression()), !dbg !2771
  %num81 = getelementptr inbounds %struct.loop, %struct.loop* %12, i64 0, i32 0, !dbg !2793
  %13 = load i32, i32* %num81, align 8, !dbg !2793
  %cmp82 = icmp slt i32 %13, 1, !dbg !2794
  br i1 %cmp82, label %if.end94, label %if.then83, !dbg !2795

if.then83:                                        ; preds = %while.cond79
  %14 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit2, align 8, !dbg !2796
  %tobool85 = icmp eq %struct.VEC_int_heap* %14, null, !dbg !2796
  br i1 %tobool85, label %cond.end90, label %cond.true86, !dbg !2796

cond.true86:                                      ; preds = %if.then83
  %base88 = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %14, i64 0, i32 0, !dbg !2796
  br label %cond.end90, !dbg !2796

cond.end90:                                       ; preds = %if.then83, %cond.true86
  %cond91 = phi %struct.VEC_int_base* [ %base88, %cond.true86 ], [ null, %if.then83 ], !dbg !2796
  call void @llvm.dbg.value(metadata %struct.loop* %11, metadata !2768, metadata !DIExpression()), !dbg !2771
  %num92 = getelementptr inbounds %struct.loop, %struct.loop* %11, i64 0, i32 0, !dbg !2796
  %15 = load i32, i32* %num92, align 8, !dbg !2796
  %call93 = tail call fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %cond91, i32 %15) #8, !dbg !2796
  br label %if.end94, !dbg !2796

if.end94:                                         ; preds = %while.cond79, %cond.end90
  call void @llvm.dbg.value(metadata %struct.loop* %10, metadata !2768, metadata !DIExpression()), !dbg !2771
  %inner95 = getelementptr inbounds %struct.loop, %struct.loop* %10, i64 0, i32 8, !dbg !2797
  %16 = load %struct.loop*, %struct.loop** %inner95, align 8, !dbg !2797
  %cmp96 = icmp eq %struct.loop* %16, null, !dbg !2799
  br i1 %cmp96, label %while.cond100.preheader, label %if.then97, !dbg !2800

while.cond100.preheader:                          ; preds = %if.end94
  br label %while.cond100, !dbg !2801

if.then97:                                        ; preds = %if.end94
  call void @llvm.dbg.value(metadata %struct.loop* %9, metadata !2768, metadata !DIExpression()), !dbg !2771
  %inner98 = getelementptr inbounds %struct.loop, %struct.loop* %9, i64 0, i32 8, !dbg !2803
  %17 = load %struct.loop*, %struct.loop** %inner98, align 8, !dbg !2803
  br label %if.end111, !dbg !2804

while.cond100:                                    ; preds = %while.cond100.preheader, %while.body104
  %18 = phi %struct.loop* [ %5, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %19 = phi %struct.loop* [ %6, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %20 = phi %struct.loop* [ %7, %while.cond100.preheader ], [ %call105, %while.body104 ]
  %21 = phi %struct.loop* [ %8, %while.cond100.preheader ], [ %call105, %while.body104 ], !dbg !2805
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !2768, metadata !DIExpression()), !dbg !2771
  %cmp101 = icmp eq %struct.loop* %21, null, !dbg !2806
  br i1 %cmp101, label %land.end, label %land.rhs, !dbg !2807

land.rhs:                                         ; preds = %while.cond100
  call void @llvm.dbg.value(metadata %struct.loop* %20, metadata !2768, metadata !DIExpression()), !dbg !2771
  %next102 = getelementptr inbounds %struct.loop, %struct.loop* %20, i64 0, i32 9, !dbg !2808
  %22 = load %struct.loop*, %struct.loop** %next102, align 8, !dbg !2808
  %cmp103 = icmp eq %struct.loop* %22, null, !dbg !2809
  br label %land.end

land.end:                                         ; preds = %while.cond100, %land.rhs
  %23 = phi i1 [ false, %while.cond100 ], [ %cmp103, %land.rhs ], !dbg !2810
  call void @llvm.dbg.value(metadata %struct.loop* %19, metadata !2768, metadata !DIExpression()), !dbg !2771
  br i1 %23, label %while.body104, label %while.end106, !dbg !2801

while.body104:                                    ; preds = %land.end
  %call105 = tail call fastcc %struct.loop* @loop_outer(%struct.loop* %19) #8, !dbg !2811
  call void @llvm.dbg.value(metadata %struct.loop* %call105, metadata !2768, metadata !DIExpression()), !dbg !2771
  br label %while.cond100, !dbg !2801, !llvm.loop !2812

while.end106:                                     ; preds = %land.end
  %.lcssa4 = phi %struct.loop* [ %18, %land.end ]
  %.lcssa = phi %struct.loop* [ %19, %land.end ]
  %cmp107 = icmp eq %struct.loop* %.lcssa, null, !dbg !2814
  br i1 %cmp107, label %if.end114.loopexit, label %if.end109, !dbg !2816

if.end109:                                        ; preds = %while.end106
  call void @llvm.dbg.value(metadata %struct.loop* %.lcssa4, metadata !2768, metadata !DIExpression()), !dbg !2771
  %next110 = getelementptr inbounds %struct.loop, %struct.loop* %.lcssa4, i64 0, i32 9, !dbg !2817
  %24 = load %struct.loop*, %struct.loop** %next110, align 8, !dbg !2817
  br label %if.end111

if.end111:                                        ; preds = %if.end109, %if.then97
  %25 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %26 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %27 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %28 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %29 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %30 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %31 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  %32 = phi %struct.loop* [ %24, %if.end109 ], [ %17, %if.then97 ]
  br label %while.cond79, !dbg !2788, !llvm.loop !2818

if.end114.loopexit:                               ; preds = %while.end106
  call fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) #8, !dbg !2820
  br label %cleanup, !dbg !2821

cleanup:                                          ; preds = %if.end114.loopexit, %if.then
  ret void, !dbg !2821
}

declare dso_local void @htab_empty(%struct.htab*) local_unnamed_addr #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local %struct.edge_def* @single_dom_exit(%struct.loop*) local_unnamed_addr #2

declare dso_local zeroext i8 @can_duplicate_loop_p(%struct.loop*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @loop_has_blocks_with_irreducible_flag(%struct.loop* %loop) unnamed_addr #0 !dbg !2822 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2826, metadata !DIExpression()), !dbg !2831
  %call = tail call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %loop) #6, !dbg !2832
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !2828, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.value(metadata i8 1, metadata !2829, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.value(metadata i32 0, metadata !2827, metadata !DIExpression()), !dbg !2831
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !2833
  %0 = load i32, i32* %num_nodes, align 4, !dbg !2833
  br label %for.cond, !dbg !2836

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !2837
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !2827, metadata !DIExpression()), !dbg !2831
  %exitcond = icmp eq i32 %i.0, %0, !dbg !2838
  br i1 %exitcond, label %end, label %for.body, !dbg !2839

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %i.0 to i64, !dbg !2840
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %idxprom, !dbg !2840
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !2840
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 13, !dbg !2842
  %2 = load i32, i32* %flags, align 8, !dbg !2842
  %and = and i32 %2, 4, !dbg !2843
  %tobool = icmp eq i32 %and, 0, !dbg !2843
  br i1 %tobool, label %for.inc, label %end, !dbg !2844

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !2845
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2827, metadata !DIExpression()), !dbg !2831
  br label %for.cond, !dbg !2846, !llvm.loop !2847

end:                                              ; preds = %for.cond, %for.body
  %res.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !2831
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !2829, metadata !DIExpression()), !dbg !2831
  call void @llvm.dbg.label(metadata !2830), !dbg !2849
  %3 = bitcast %struct.basic_block_def** %call to i8*, !dbg !2850
  tail call void @free(i8* %3) #6, !dbg !2851
  ret i8 %res.0, !dbg !2852
}

declare dso_local %struct.edge_def* @loop_preheader_edge(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @loop_has_vector_phi_nodes(%struct.loop* %loop) unnamed_addr #5 !dbg !2853 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2855, metadata !DIExpression()), !dbg !2861
  %call = tail call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %loop) #6, !dbg !2862
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call, metadata !2857, metadata !DIExpression()), !dbg !2861
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !2863
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2863
  call void @llvm.dbg.value(metadata i8 1, metadata !2859, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.value(metadata i32 0, metadata !2856, metadata !DIExpression()), !dbg !2861
  %num_nodes = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 6, !dbg !2864
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2867
  br label %for.cond, !dbg !2869

for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc8 ], [ 0, %entry ], !dbg !2870
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2856, metadata !DIExpression()), !dbg !2861
  %2 = load i32, i32* %num_nodes, align 4, !dbg !2871
  %3 = zext i32 %2 to i64, !dbg !2872
  %cmp = icmp ult i64 %indvars.iv, %3, !dbg !2872
  br i1 %cmp, label %for.body, label %end.loopexit2, !dbg !2873

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2874
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call, i64 %indvars.iv, !dbg !2875
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !2875
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %4) #6, !dbg !2874
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !2874
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2874
  br label %for.cond1, !dbg !2876

for.cond1:                                        ; preds = %for.inc, %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2858, metadata !DIExpression(DW_OP_deref)), !dbg !2861
  %call2 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2877
  %tobool = icmp eq i8 %call2, 0, !dbg !2879
  br i1 %tobool, label %for.body3, label %for.inc8, !dbg !2880

for.body3:                                        ; preds = %for.cond1
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2858, metadata !DIExpression(DW_OP_deref)), !dbg !2861
  %call4 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2881
  %call5 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call4) #8, !dbg !2881
  %call6 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call5) #8, !dbg !2881
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !2881
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !2881
  %6 = load i64*, i64** %5, align 8, !dbg !2881
  %bf.load = load i64, i64* %6, align 8, !dbg !2881
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !2883
  %cmp7 = icmp eq i64 %bf.cast1, 14, !dbg !2883
  br i1 %cmp7, label %end.loopexit, label %for.inc, !dbg !2884

for.inc:                                          ; preds = %for.body3
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2858, metadata !DIExpression(DW_OP_deref)), !dbg !2861
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !2885
  br label %for.cond1, !dbg !2886, !llvm.loop !2887

for.inc8:                                         ; preds = %for.cond1
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2889
  br label %for.cond, !dbg !2890, !llvm.loop !2891

end.loopexit:                                     ; preds = %for.body3
  br label %end, !dbg !2893

end.loopexit2:                                    ; preds = %for.cond
  br label %end, !dbg !2893

end:                                              ; preds = %end.loopexit2, %end.loopexit
  %res.0 = phi i8 [ 1, %end.loopexit ], [ 0, %end.loopexit2 ], !dbg !2861
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !2859, metadata !DIExpression()), !dbg !2861
  call void @llvm.dbg.label(metadata !2860), !dbg !2894
  %7 = bitcast %struct.basic_block_def** %call to i8*, !dbg !2893
  call void @free(i8* %7) #6, !dbg !2895
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2896
  ret i8 %res.0, !dbg !2897
}

declare dso_local i64 @estimated_loop_iterations_int(%struct.loop*, i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @optimize_loop_nest_for_size_p(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_get_loop_niter(%struct.loop* %loop, %struct.tree_niter_desc* %niter) unnamed_addr #5 !dbg !2898 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2903, metadata !DIExpression()), !dbg !2906
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %niter, metadata !2904, metadata !DIExpression()), !dbg !2906
  %call = tail call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #6, !dbg !2907
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !2905, metadata !DIExpression()), !dbg !2906
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !2908
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2908

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1766, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2908
  br label %cond.end, !dbg !2908

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call zeroext i8 @number_of_iterations_exit(%struct.loop* %loop, %struct.edge_def* %call, %struct.tree_niter_desc* %niter, i8 zeroext 0) #6, !dbg !2909
  %tobool2 = icmp eq i8 %call1, 0, !dbg !2909
  br i1 %tobool2, label %if.then, label %cleanup, !dbg !2911

if.then:                                          ; preds = %cond.end
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2912
  %tobool3 = icmp eq %struct._IO_FILE* %0, null, !dbg !2912
  br i1 %tobool3, label %cleanup, label %land.lhs.true, !dbg !2915

land.lhs.true:                                    ; preds = %if.then
  %1 = load i32, i32* @dump_flags, align 4, !dbg !2916
  %and = and i32 %1, 8, !dbg !2917
  %tobool4 = icmp eq i32 %and, 0, !dbg !2917
  br i1 %tobool4, label %cleanup, label %if.then5, !dbg !2918

if.then5:                                         ; preds = %land.lhs.true
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !2919
  br label %cleanup, !dbg !2919

cleanup:                                          ; preds = %land.lhs.true, %if.then, %cond.end, %if.then5
  %retval.0 = phi i8 [ 0, %if.then5 ], [ 0, %land.lhs.true ], [ 0, %if.then ], [ 1, %cond.end ], !dbg !2906
  ret i8 %retval.0, !dbg !2920
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @try_create_reduction_list(%struct.loop* %loop, %struct.htab* %reduction_list) unnamed_addr #5 !dbg !2921 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %imm_iter = alloca %struct.immediate_use_iterator_d, align 8
  %tmp67 = alloca %struct.gimple_stmt_iterator, align 8
  %iv = alloca %struct.affine_iv, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !2925, metadata !DIExpression()), !dbg !2954
  call void @llvm.dbg.value(metadata %struct.htab* %reduction_list, metadata !2926, metadata !DIExpression()), !dbg !2954
  %call = tail call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #6, !dbg !2955
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !2927, metadata !DIExpression()), !dbg !2954
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !2956
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !2956
  %tobool = icmp eq %struct.edge_def* %call, null, !dbg !2957
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2957

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1790, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !2957
  br label %cond.end, !dbg !2957

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @gather_scalar_reductions(%struct.loop* %loop, %struct.htab* %reduction_list) #8, !dbg !2958
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !2959
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2959
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !2960
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2960
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %2) #6, !dbg !2959
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !2959
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !2959
  %3 = bitcast %struct.immediate_use_iterator_d* %imm_iter to i8*, !dbg !2961
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 6, !dbg !2961
  br label %for.cond, !dbg !2962

for.cond:                                         ; preds = %for.inc65, %cond.end
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2928, metadata !DIExpression(DW_OP_deref)), !dbg !2954
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2963
  %tobool2 = icmp eq i8 %call1, 0, !dbg !2964
  br i1 %tobool2, label %for.body, label %for.end66, !dbg !2965

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2928, metadata !DIExpression(DW_OP_deref)), !dbg !2954
  %call3 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !2966
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !2929, metadata !DIExpression()), !dbg !2961
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %3) #7, !dbg !2967
  %4 = load i32, i32* %dest_idx, align 4, !dbg !2968
  %call4 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call3, i32 %4) #8, !dbg !2968
  %call5 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call4) #8, !dbg !2968
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !2944, metadata !DIExpression()), !dbg !2961
  %call6 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call5) #6, !dbg !2969
  %tobool7 = icmp eq i8 %call6, 0, !dbg !2969
  br i1 %tobool7, label %cleanup, label %if.then, !dbg !2971

if.then:                                          ; preds = %for.body
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2972
  %tobool8 = icmp eq %struct._IO_FILE* %5, null, !dbg !2972
  br i1 %tobool8, label %if.end, label %land.lhs.true, !dbg !2975

land.lhs.true:                                    ; preds = %if.then
  %6 = load i32, i32* @dump_flags, align 4, !dbg !2976
  %and = and i32 %6, 8, !dbg !2977
  %tobool9 = icmp eq i32 %and, 0, !dbg !2977
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !2978

if.then10:                                        ; preds = %land.lhs.true
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !2979
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2981
  call void @print_gimple_stmt(%struct._IO_FILE* %7, %union.gimple_statement_d* %call3, i32 0, i32 0) #6, !dbg !2982
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2983
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0)) #6, !dbg !2984
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2985
  call void @print_generic_expr(%struct._IO_FILE* %9, %union.tree_node* %call5, i32 0) #6, !dbg !2986
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2987
  %call13 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !2988
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2989
  %call14 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !2990
  br label %if.end, !dbg !2991

if.end:                                           ; preds = %land.lhs.true, %if.then, %if.then10
  %call15 = call i64 @htab_elements(%struct.htab* %reduction_list) #6, !dbg !2992
  %cmp = icmp eq i64 %call15, 0, !dbg !2994
  br i1 %cmp, label %if.then16, label %if.end24, !dbg !2995

if.then16:                                        ; preds = %if.end
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2996
  %tobool17 = icmp eq %struct._IO_FILE* %12, null, !dbg !2996
  br i1 %tobool17, label %cleanup, label %land.lhs.true18, !dbg !2999

land.lhs.true18:                                  ; preds = %if.then16
  %13 = load i32, i32* @dump_flags, align 4, !dbg !3000
  %and19 = and i32 %13, 8, !dbg !3001
  %tobool20 = icmp eq i32 %and19, 0, !dbg !3001
  br i1 %tobool20, label %cleanup, label %if.then21, !dbg !3002

if.then21:                                        ; preds = %land.lhs.true18
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %12, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !3003
  br label %cleanup, !dbg !3003

if.end24:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* null, metadata !2943, metadata !DIExpression()), !dbg !2961
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2934, metadata !DIExpression(DW_OP_deref)), !dbg !2961
  %call25 = call fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter, %union.tree_node* %call5) #8, !dbg !3004
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call25, metadata !2942, metadata !DIExpression()), !dbg !2961
  br label %for.cond26, !dbg !3004

for.cond26:                                       ; preds = %for.inc, %if.end24
  %use_p.0 = phi %struct.ssa_use_operand_d* [ %call25, %if.end24 ], [ %call38, %for.inc ], !dbg !3006
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !2942, metadata !DIExpression()), !dbg !2961
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2934, metadata !DIExpression(DW_OP_deref)), !dbg !2961
  %call27 = call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !3007
  %tobool28 = icmp eq i8 %call27, 0, !dbg !3007
  br i1 %tobool28, label %for.body30, label %for.end.loopexit, !dbg !3004

for.body30:                                       ; preds = %for.cond26
  %stmt = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use_p.0, i64 0, i32 2, i32 0, !dbg !3009
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3009
  %call31 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %14) #8, !dbg !3012
  %call32 = call zeroext i8 @flow_bb_inside_loop_p(%struct.loop* %loop, %struct.basic_block_def* %call31) #6, !dbg !3013
  %tobool33 = icmp eq i8 %call32, 0, !dbg !3013
  br i1 %tobool33, label %for.inc, label %if.then34, !dbg !3014

if.then34:                                        ; preds = %for.body30
  %stmt.lcssa = phi %union.gimple_statement_d** [ %stmt, %for.body30 ], !dbg !3009
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_p.0, metadata !2942, metadata !DIExpression()), !dbg !2961
  %15 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt.lcssa, align 8, !dbg !3015
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %15, metadata !2943, metadata !DIExpression()), !dbg !2961
  br label %for.end, !dbg !3017

for.inc:                                          ; preds = %for.body30
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm_iter, metadata !2934, metadata !DIExpression(DW_OP_deref)), !dbg !2961
  %call38 = call fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* nonnull %imm_iter) #8, !dbg !3007
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call38, metadata !2942, metadata !DIExpression()), !dbg !2961
  br label %for.cond26, !dbg !3007, !llvm.loop !3018

for.end.loopexit:                                 ; preds = %for.cond26
  br label %for.end, !dbg !3020

for.end:                                          ; preds = %for.end.loopexit, %if.then34
  %reduc_phi.0 = phi %union.gimple_statement_d* [ %15, %if.then34 ], [ null, %for.end.loopexit ], !dbg !3021
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %reduc_phi.0, metadata !2943, metadata !DIExpression()), !dbg !2961
  %call39 = call fastcc %struct.reduction_info* @reduction_phi(%struct.htab* %reduction_list, %union.gimple_statement_d* %reduc_phi.0) #8, !dbg !3020
  call void @llvm.dbg.value(metadata %struct.reduction_info* %call39, metadata !2933, metadata !DIExpression()), !dbg !2961
  %cmp40 = icmp eq %struct.reduction_info* %call39, null, !dbg !3022
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3021
  %tobool42 = icmp ne %struct._IO_FILE* %16, null, !dbg !3021
  br i1 %cmp40, label %if.then41, label %if.end49, !dbg !3024

if.then41:                                        ; preds = %for.end
  br i1 %tobool42, label %land.lhs.true43, label %cleanup, !dbg !3025

land.lhs.true43:                                  ; preds = %if.then41
  %17 = load i32, i32* @dump_flags, align 4, !dbg !3028
  %and44 = and i32 %17, 8, !dbg !3029
  %tobool45 = icmp eq i32 %and44, 0, !dbg !3029
  br i1 %tobool45, label %cleanup, label %if.then46, !dbg !3030

if.then46:                                        ; preds = %land.lhs.true43
  %call47 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !3031
  br label %cleanup, !dbg !3031

if.end49:                                         ; preds = %for.end
  br i1 %tobool42, label %land.lhs.true51, label %cleanup, !dbg !3032

land.lhs.true51:                                  ; preds = %if.end49
  %18 = load i32, i32* @dump_flags, align 4, !dbg !3034
  %and52 = and i32 %18, 8, !dbg !3035
  %tobool53 = icmp eq i32 %and52, 0, !dbg !3035
  br i1 %tobool53, label %cleanup, label %if.then54, !dbg !3036

if.then54:                                        ; preds = %land.lhs.true51
  %call55 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %16, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !3037
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3039
  %reduc_phi56 = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %call39, i64 0, i32 1, !dbg !3040
  %20 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_phi56, align 8, !dbg !3040
  call void @print_gimple_stmt(%struct._IO_FILE* %19, %union.gimple_statement_d* %20, i32 0, i32 0) #6, !dbg !3041
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3042
  %call57 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !3043
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3044
  %reduc_stmt = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %call39, i64 0, i32 0, !dbg !3045
  %23 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !3045
  call void @print_gimple_stmt(%struct._IO_FILE* %22, %union.gimple_statement_d* %23, i32 0, i32 0) #6, !dbg !3046
  br label %cleanup, !dbg !3047

cleanup:                                          ; preds = %land.lhs.true18, %if.then16, %land.lhs.true43, %land.lhs.true51, %for.body, %if.then54, %if.end49, %if.then41, %if.then46, %if.then21
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then21 ], [ false, %land.lhs.true18 ], [ false, %if.then16 ], [ false, %if.then46 ], [ false, %land.lhs.true43 ], [ false, %if.then41 ], [ true, %if.end49 ], [ true, %land.lhs.true51 ], [ true, %if.then54 ], [ true, %for.body ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %3) #7, !dbg !3048
  br i1 %cleanup.dest.slot.0, label %for.inc65, label %cleanup107.loopexit4

for.inc65:                                        ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2928, metadata !DIExpression(DW_OP_deref)), !dbg !2954
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3049
  br label %for.cond, !dbg !3050, !llvm.loop !3051

for.end66:                                        ; preds = %for.cond
  %24 = bitcast %struct.gimple_stmt_iterator* %tmp67 to i8*, !dbg !3053
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #7, !dbg !3053
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3054
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3054
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp67, %struct.basic_block_def* %25) #6, !dbg !3053
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %24, i64 24, i1 false), !dbg !3053
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #7, !dbg !3053
  %26 = bitcast %struct.affine_iv* %iv to i8*, !dbg !3055
  br label %for.cond68, !dbg !3056

for.cond68:                                       ; preds = %for.inc105, %for.end66
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2928, metadata !DIExpression(DW_OP_deref)), !dbg !2954
  %call69 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3057
  %tobool70 = icmp eq i8 %call69, 0, !dbg !3058
  br i1 %tobool70, label %for.body72, label %cleanup107.loopexit, !dbg !3059

for.body72:                                       ; preds = %for.cond68
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2928, metadata !DIExpression(DW_OP_deref)), !dbg !2954
  %call74 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3060
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call74, metadata !2945, metadata !DIExpression()), !dbg !3055
  %call75 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call74) #8, !dbg !3061
  %call76 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call75) #8, !dbg !3061
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !2949, metadata !DIExpression()), !dbg !3055
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #7, !dbg !3062
  %call77 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call76) #6, !dbg !3063
  %tobool78 = icmp eq i8 %call77, 0, !dbg !3063
  br i1 %tobool78, label %if.end99, label %land.lhs.true79, !dbg !3064

land.lhs.true79:                                  ; preds = %for.body72
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !2950, metadata !DIExpression(DW_OP_deref)), !dbg !3055
  %call80 = call zeroext i8 @simple_iv(%struct.loop* %loop, %struct.loop* %loop, %union.tree_node* %call76, %struct.affine_iv* nonnull %iv, i8 zeroext 1) #6, !dbg !3065
  %tobool81 = icmp eq i8 %call80, 0, !dbg !3065
  br i1 %tobool81, label %if.then82, label %if.end99, !dbg !3066

if.then82:                                        ; preds = %land.lhs.true79
  %call84 = call fastcc %struct.reduction_info* @reduction_phi(%struct.htab* %reduction_list, %union.gimple_statement_d* %call74) #8, !dbg !3067
  call void @llvm.dbg.value(metadata %struct.reduction_info* %call84, metadata !2951, metadata !DIExpression()), !dbg !3068
  %cmp85 = icmp eq %struct.reduction_info* %call84, null, !dbg !3069
  br i1 %cmp85, label %if.then87, label %cleanup96, !dbg !3071

if.then87:                                        ; preds = %if.then82
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3072
  %tobool88 = icmp eq %struct._IO_FILE* %27, null, !dbg !3072
  br i1 %tobool88, label %cleanup96, label %land.lhs.true89, !dbg !3075

land.lhs.true89:                                  ; preds = %if.then87
  %28 = load i32, i32* @dump_flags, align 4, !dbg !3076
  %and90 = and i32 %28, 8, !dbg !3077
  %tobool91 = icmp eq i32 %and90, 0, !dbg !3077
  br i1 %tobool91, label %cleanup96, label %if.then92, !dbg !3078

if.then92:                                        ; preds = %land.lhs.true89
  %call93 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %27, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.18, i64 0, i64 0)) #6, !dbg !3079
  br label %cleanup96, !dbg !3079

cleanup96:                                        ; preds = %land.lhs.true89, %if.then87, %if.then82, %if.then92
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then92 ], [ 1, %land.lhs.true89 ], [ 1, %if.then87 ], [ 0, %if.then82 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %if.end99, label %cleanup100

if.end99:                                         ; preds = %land.lhs.true79, %for.body72, %cleanup96
  br label %cleanup100, !dbg !3080

cleanup100:                                       ; preds = %cleanup96, %if.end99
  %cleanup.dest.slot.2 = phi i32 [ 0, %if.end99 ], [ %cleanup.dest.slot.1, %cleanup96 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #7, !dbg !3080
  %cond1 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond1, label %for.inc105, label %cleanup107.loopexit

for.inc105:                                       ; preds = %cleanup100
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !2928, metadata !DIExpression(DW_OP_deref)), !dbg !2954
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3081
  br label %for.cond68, !dbg !3082, !llvm.loop !3083

cleanup107.loopexit:                              ; preds = %cleanup100, %for.cond68
  %retval.6.ph = phi i8 [ 1, %for.cond68 ], [ 0, %cleanup100 ]
  br label %cleanup107, !dbg !3085

cleanup107.loopexit4:                             ; preds = %cleanup
  br label %cleanup107, !dbg !3085

cleanup107:                                       ; preds = %cleanup107.loopexit4, %cleanup107.loopexit
  %retval.6 = phi i8 [ %retval.6.ph, %cleanup107.loopexit ], [ 0, %cleanup107.loopexit4 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3085
  ret i8 %retval.6, !dbg !3085
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @loop_parallel_p(%struct.loop* %loop) unnamed_addr #5 !dbg !3086 {
entry:
  %dependence_relations = alloca %struct.VEC_ddr_p_heap*, align 8
  %datarefs = alloca %struct.VEC_data_reference_p_heap*, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3088, metadata !DIExpression()), !dbg !3103
  %0 = bitcast %struct.VEC_ddr_p_heap** %dependence_relations to i8*, !dbg !3104
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3104
  %1 = bitcast %struct.VEC_data_reference_p_heap** %datarefs to i8*, !dbg !3105
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3105
  call void @llvm.dbg.value(metadata i8 0, metadata !3102, metadata !DIExpression()), !dbg !3103
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3106
  %tobool = icmp eq %struct._IO_FILE* %2, null, !dbg !3106
  br i1 %tobool, label %if.end6, label %land.lhs.true, !dbg !3108

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* @dump_flags, align 4, !dbg !3109
  %and = and i32 %3, 8, !dbg !3110
  %tobool1 = icmp eq i32 %and, 0, !dbg !3110
  br i1 %tobool1, label %if.end6, label %if.then, !dbg !3111

if.then:                                          ; preds = %land.lhs.true
  %num = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 0, !dbg !3112
  %4 = load i32, i32* %num, align 8, !dbg !3112
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i64 0, i64 0), i32 %4) #6, !dbg !3114
  %inner = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 8, !dbg !3115
  %5 = load %struct.loop*, %struct.loop** %inner, align 8, !dbg !3115
  %tobool2 = icmp eq %struct.loop* %5, null, !dbg !3117
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3118
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !3119

if.then3:                                         ; preds = %if.then
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !3120
  br label %if.end6, !dbg !3120

if.else:                                          ; preds = %if.then
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !3121
  br label %if.end6

if.end6:                                          ; preds = %land.lhs.true, %entry, %if.then3, %if.else
  %call7 = tail call fastcc %struct.VEC_data_reference_p_heap* @VEC_data_reference_p_heap_alloc(i32 10) #8, !dbg !3122
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %call7, metadata !3090, metadata !DIExpression()), !dbg !3103
  store %struct.VEC_data_reference_p_heap* %call7, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !3123
  %call8 = tail call fastcc %struct.VEC_ddr_p_heap* @VEC_ddr_p_heap_alloc(i32 100) #8, !dbg !3124
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %call8, metadata !3089, metadata !DIExpression()), !dbg !3103
  store %struct.VEC_ddr_p_heap* %call8, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !3125
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap** %dependence_relations, metadata !3089, metadata !DIExpression(DW_OP_deref)), !dbg !3103
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap** %datarefs, metadata !3090, metadata !DIExpression(DW_OP_deref)), !dbg !3103
  %call9 = call zeroext i8 @compute_data_dependences_for_loop(%struct.loop* %loop, i8 zeroext 1, %struct.VEC_data_reference_p_heap** nonnull %datarefs, %struct.VEC_ddr_p_heap** nonnull %dependence_relations) #6, !dbg !3126
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3127
  %tobool10 = icmp eq %struct._IO_FILE* %7, null, !dbg !3127
  br i1 %tobool10, label %if.end15, label %land.lhs.true11, !dbg !3129

land.lhs.true11:                                  ; preds = %if.end6
  %8 = load i32, i32* @dump_flags, align 4, !dbg !3130
  %and12 = and i32 %8, 8, !dbg !3131
  %tobool13 = icmp eq i32 %and12, 0, !dbg !3131
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !3132

if.then14:                                        ; preds = %land.lhs.true11
  %9 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !3133
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %9, metadata !3089, metadata !DIExpression()), !dbg !3103
  call void @dump_data_dependence_relations(%struct._IO_FILE* nonnull %7, %struct.VEC_ddr_p_heap* %9) #6, !dbg !3134
  br label %if.end15, !dbg !3134

if.end15:                                         ; preds = %land.lhs.true11, %if.end6, %if.then14
  %call16 = call %struct.lambda_trans_matrix_s* @lambda_trans_matrix_new(i32 1, i32 1) #6, !dbg !3135
  call void @llvm.dbg.value(metadata %struct.lambda_trans_matrix_s* %call16, metadata !3091, metadata !DIExpression()), !dbg !3103
  %matrix = getelementptr inbounds %struct.lambda_trans_matrix_s, %struct.lambda_trans_matrix_s* %call16, i64 0, i32 0, !dbg !3136
  %10 = load i32**, i32*** %matrix, align 8, !dbg !3136
  %11 = load i32*, i32** %10, align 8, !dbg !3136
  store i32 -1, i32* %11, align 4, !dbg !3137
  %12 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !3138
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %12, metadata !3089, metadata !DIExpression()), !dbg !3103
  %call18 = call zeroext i8 @lambda_transform_legal_p(%struct.lambda_trans_matrix_s* %call16, i32 1, %struct.VEC_ddr_p_heap* %12) #6, !dbg !3140
  %tobool19 = icmp eq i8 %call18, 0, !dbg !3140
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3141
  %tobool21 = icmp ne %struct._IO_FILE* %13, null, !dbg !3141
  br i1 %tobool19, label %if.else28, label %if.then20, !dbg !3142

if.then20:                                        ; preds = %if.end15
  call void @llvm.dbg.value(metadata i8 1, metadata !3102, metadata !DIExpression()), !dbg !3103
  br i1 %tobool21, label %land.lhs.true22, label %if.end36, !dbg !3143

land.lhs.true22:                                  ; preds = %if.then20
  %14 = load i32, i32* @dump_flags, align 4, !dbg !3146
  %and23 = and i32 %14, 8, !dbg !3147
  %tobool24 = icmp eq i32 %and23, 0, !dbg !3147
  br i1 %tobool24, label %if.end36, label %if.then25, !dbg !3148

if.then25:                                        ; preds = %land.lhs.true22
  %call26 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %13, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !3149
  br label %if.end36, !dbg !3149

if.else28:                                        ; preds = %if.end15
  br i1 %tobool21, label %land.lhs.true30, label %if.end36, !dbg !3150

land.lhs.true30:                                  ; preds = %if.else28
  %15 = load i32, i32* @dump_flags, align 4, !dbg !3152
  %and31 = and i32 %15, 8, !dbg !3153
  %tobool32 = icmp eq i32 %and31, 0, !dbg !3153
  br i1 %tobool32, label %if.end36, label %if.then33, !dbg !3154

if.then33:                                        ; preds = %land.lhs.true30
  %call34 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %13, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !3155
  br label %if.end36, !dbg !3155

if.end36:                                         ; preds = %land.lhs.true22, %land.lhs.true30, %if.else28, %if.then33, %if.then20, %if.then25
  %ret.0 = phi i8 [ 1, %if.then25 ], [ 1, %land.lhs.true22 ], [ 1, %if.then20 ], [ 0, %if.then33 ], [ 0, %land.lhs.true30 ], [ 0, %if.else28 ], !dbg !3103
  call void @llvm.dbg.value(metadata i8 %ret.0, metadata !3102, metadata !DIExpression()), !dbg !3103
  %16 = load %struct.VEC_ddr_p_heap*, %struct.VEC_ddr_p_heap** %dependence_relations, align 8, !dbg !3156
  call void @llvm.dbg.value(metadata %struct.VEC_ddr_p_heap* %16, metadata !3089, metadata !DIExpression()), !dbg !3103
  call void @free_dependence_relations(%struct.VEC_ddr_p_heap* %16) #6, !dbg !3157
  %17 = load %struct.VEC_data_reference_p_heap*, %struct.VEC_data_reference_p_heap** %datarefs, align 8, !dbg !3158
  call void @llvm.dbg.value(metadata %struct.VEC_data_reference_p_heap* %17, metadata !3090, metadata !DIExpression()), !dbg !3103
  call void @free_data_refs(%struct.VEC_data_reference_p_heap* %17) #6, !dbg !3159
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3160
  ret i8 %ret.0, !dbg !3161
}

declare dso_local i32 @find_loop_location(%struct.loop*) local_unnamed_addr #2

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gen_parallel_loop(%struct.loop* %loop, %struct.htab* %reduction_list, i32 %n_threads, %struct.tree_niter_desc* %niter) unnamed_addr #5 !dbg !3162 {
entry:
  %loop.addr = alloca %struct.loop*, align 8
  %li = alloca %struct.loop_iterator, align 8
  %nit = alloca %union.tree_node*, align 8
  %arg_struct = alloca %union.tree_node*, align 8
  %new_arg_struct = alloca %union.tree_node*, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  %clsn_data = alloca %struct.clsn_data, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3166, metadata !DIExpression()), !dbg !3182
  store %struct.loop* %loop, %struct.loop** %loop.addr, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %reduction_list, metadata !3167, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata i32 %n_threads, metadata !3168, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.tree_niter_desc* %niter, metadata !3169, metadata !DIExpression()), !dbg !3182
  %0 = bitcast %struct.loop_iterator* %li to i8*, !dbg !3183
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !3183
  %1 = bitcast %union.tree_node** %nit to i8*, !dbg !3184
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3184
  %2 = bitcast %union.tree_node** %arg_struct to i8*, !dbg !3185
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !3185
  %3 = bitcast %union.tree_node** %new_arg_struct to i8*, !dbg !3185
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !3185
  %4 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !3186
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7, !dbg !3186
  %5 = bitcast %struct.clsn_data* %clsn_data to i8*, !dbg !3187
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #7, !dbg !3187
  %niter2 = getelementptr inbounds %struct.tree_niter_desc, %struct.tree_niter_desc* %niter, i64 0, i32 2, !dbg !3188
  %6 = bitcast %union.tree_node** %niter2 to %struct.tree_common**, !dbg !3188
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !3188
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !3188
  %8 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !3188
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !3172, metadata !DIExpression()), !dbg !3182
  %.cast = bitcast %struct.tree_common* %7 to %union.tree_node*, !dbg !3189
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* %.cast) #6, !dbg !3190
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !3176, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  %call5 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !3191
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3173, metadata !DIExpression()), !dbg !3182
  store %union.tree_node* %call5, %union.tree_node** %nit, align 8, !dbg !3192
  %9 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3193
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %9, metadata !3176, metadata !DIExpression()), !dbg !3182
  %tobool = icmp eq %struct.gimple_seq_d* %9, null, !dbg !3193
  br i1 %tobool, label %if.end, label %if.then, !dbg !3195

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3166, metadata !DIExpression()), !dbg !3182
  %call6 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !3196
  %10 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3197
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %10, metadata !3176, metadata !DIExpression()), !dbg !3182
  %call7 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call6, %struct.gimple_seq_d* %10) #6, !dbg !3198
  %.pre = load %union.tree_node*, %union.tree_node** %nit, align 8, !dbg !3199
  br label %if.end, !dbg !3198

if.end:                                           ; preds = %entry, %if.then
  %11 = phi %union.tree_node* [ %call5, %entry ], [ %.pre, %if.then ], !dbg !3199
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3199
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !3173, metadata !DIExpression()), !dbg !3182
  %mul = mul i32 %n_threads, 100, !dbg !3199
  %conv = zext i32 %mul to i64, !dbg !3199
  %call8 = call %union.tree_node* @build_int_cst(%union.tree_node* %8, i64 %conv) #6, !dbg !3199
  %call9 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 100, %union.tree_node* %12, %union.tree_node* %11, %union.tree_node* %call8) #6, !dbg !3199
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !3171, metadata !DIExpression()), !dbg !3182
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !3200
  %may_be_zero = getelementptr inbounds %struct.tree_niter_desc, %struct.tree_niter_desc* %niter, i64 0, i32 1, !dbg !3200
  %14 = load %union.tree_node*, %union.tree_node** %may_be_zero, align 8, !dbg !3200
  %call10 = call %union.tree_node* @unshare_expr(%union.tree_node* %14) #6, !dbg !3200
  %call11 = call %union.tree_node* @invert_truthvalue_loc(i32 0, %union.tree_node* %call10) #6, !dbg !3200
  %call12 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 93, %union.tree_node* %13, %union.tree_node* %call11, %union.tree_node* %call9) #6, !dbg !3200
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !3171, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !3176, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  %call13 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call12, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 0, %union.tree_node* null) #6, !dbg !3201
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3171, metadata !DIExpression()), !dbg !3182
  %15 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3202
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %15, metadata !3176, metadata !DIExpression()), !dbg !3182
  %tobool14 = icmp eq %struct.gimple_seq_d* %15, null, !dbg !3202
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !3204

if.then15:                                        ; preds = %if.end
  %16 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !3205
  call void @llvm.dbg.value(metadata %struct.loop* %16, metadata !3166, metadata !DIExpression()), !dbg !3182
  %call16 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %16) #6, !dbg !3206
  %17 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3207
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %17, metadata !3176, metadata !DIExpression()), !dbg !3182
  %call17 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call16, %struct.gimple_seq_d* %17) #6, !dbg !3208
  br label %if.end18, !dbg !3208

if.end18:                                         ; preds = %if.end, %if.then15
  %call19 = call zeroext i8 @is_gimple_condexpr(%union.tree_node* %call13) #6, !dbg !3209
  %tobool20 = icmp eq i8 %call19, 0, !dbg !3209
  br i1 %tobool20, label %if.then21, label %if.end28, !dbg !3211

if.then21:                                        ; preds = %if.end18
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !3176, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  %call22 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call13, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !3212
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !3171, metadata !DIExpression()), !dbg !3182
  %18 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3214
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %18, metadata !3176, metadata !DIExpression()), !dbg !3182
  %tobool23 = icmp eq %struct.gimple_seq_d* %18, null, !dbg !3214
  br i1 %tobool23, label %if.end28, label %if.then24, !dbg !3216

if.then24:                                        ; preds = %if.then21
  %19 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !3217
  call void @llvm.dbg.value(metadata %struct.loop* %19, metadata !3166, metadata !DIExpression()), !dbg !3182
  %call25 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %19) #6, !dbg !3218
  %20 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !3219
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %20, metadata !3176, metadata !DIExpression()), !dbg !3182
  %call26 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %call25, %struct.gimple_seq_d* %20) #6, !dbg !3220
  br label %if.end28, !dbg !3220

if.end28:                                         ; preds = %if.then21, %if.end18, %if.then24
  %many_iterations_cond.0 = phi %union.tree_node* [ %call13, %if.end18 ], [ %call22, %if.then24 ], [ %call22, %if.then21 ], !dbg !3182
  call void @llvm.dbg.value(metadata %union.tree_node* %many_iterations_cond.0, metadata !3171, metadata !DIExpression()), !dbg !3182
  call void @initialize_original_copy_tables() #6, !dbg !3221
  call void @llvm.dbg.value(metadata i32 8000, metadata !3181, metadata !DIExpression()), !dbg !3182
  %21 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !3222
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !3166, metadata !DIExpression()), !dbg !3182
  %22 = bitcast %union.tree_node* %many_iterations_cond.0 to i8*, !dbg !3223
  %call29 = call %struct.loop* @loop_version(%struct.loop* %21, i8* %22, %struct.basic_block_def** null, i32 8000, i32 8000, i32 2000, i8 zeroext 1) #6, !dbg !3224
  call void @update_ssa(i32 2048) #6, !dbg !3225
  call void @free_original_copy_tables() #6, !dbg !3226
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !3166, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata %union.tree_node** %nit, metadata !3173, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  %call30 = call %union.tree_node* @canonicalize_loop_ivs(%struct.loop* %21, %union.tree_node** nonnull %nit, i8 zeroext 1) #6, !dbg !3227
  call void @llvm.dbg.value(metadata %struct.loop* %21, metadata !3166, metadata !DIExpression()), !dbg !3182
  %23 = load %union.tree_node*, %union.tree_node** %nit, align 8, !dbg !3228
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !3173, metadata !DIExpression()), !dbg !3182
  call fastcc void @transform_to_exit_first_loop(%struct.loop* %21, %struct.htab* %reduction_list, %union.tree_node* %23) #8, !dbg !3229
  %call31 = call i64 @htab_elements(%struct.htab* %reduction_list) #6, !dbg !3230
  %cmp = icmp eq i64 %call31, 0, !dbg !3232
  br i1 %cmp, label %if.end34, label %if.then33, !dbg !3233

if.then33:                                        ; preds = %if.end28
  %24 = bitcast %struct.loop* %21 to i8*, !dbg !3233
  call void @htab_traverse(%struct.htab* %reduction_list, i32 (i8**, i8*)* nonnull @initialize_reductions, i8* %24) #6, !dbg !3234
  %.pre1 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !3235
  br label %if.end34, !dbg !3234

if.end34:                                         ; preds = %if.end28, %if.then33
  %25 = phi %struct.loop* [ %21, %if.end28 ], [ %.pre1, %if.then33 ], !dbg !3235
  call void @llvm.dbg.value(metadata %struct.loop* %25, metadata !3166, metadata !DIExpression()), !dbg !3182
  %call35 = call %struct.edge_def* @single_exit(%struct.loop* %25) #6, !dbg !3235
  %tobool36 = icmp eq %struct.edge_def* %call35, null, !dbg !3235
  br i1 %tobool36, label %cond.true, label %cond.end, !dbg !3235

cond.true:                                        ; preds = %if.end34
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1643, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3235
  %.pre2 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !3236
  br label %cond.end, !dbg !3235

cond.end:                                         ; preds = %if.end34, %cond.true
  %26 = phi %struct.loop* [ %25, %if.end34 ], [ %.pre2, %cond.true ], !dbg !3237
  call void @llvm.dbg.value(metadata %struct.loop* %26, metadata !3166, metadata !DIExpression()), !dbg !3182
  %call37 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %26) #6, !dbg !3238
  call void @llvm.dbg.value(metadata %struct.edge_def* %call37, metadata !3178, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.loop* %26, metadata !3166, metadata !DIExpression()), !dbg !3182
  %call38 = call %struct.edge_def* @single_dom_exit(%struct.loop* %26) #6, !dbg !3239
  call void @llvm.dbg.value(metadata %struct.edge_def* %call38, metadata !3179, metadata !DIExpression()), !dbg !3182
  call fastcc void @eliminate_local_variables(%struct.edge_def* %call37, %struct.edge_def* %call38) #8, !dbg !3240
  call void @llvm.dbg.value(metadata %union.tree_node** %arg_struct, metadata !3174, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  call void @llvm.dbg.value(metadata %union.tree_node** %new_arg_struct, metadata !3175, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.clsn_data* %clsn_data, metadata !3180, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  call fastcc void @separate_decls_in_region(%struct.edge_def* %call37, %struct.edge_def* %call38, %struct.htab* %reduction_list, %union.tree_node** nonnull %arg_struct, %union.tree_node** nonnull %new_arg_struct, %struct.clsn_data* nonnull %clsn_data) #8, !dbg !3241
  call void @llvm.dbg.value(metadata %struct.loop* %26, metadata !3166, metadata !DIExpression()), !dbg !3182
  %call39 = call fastcc %union.tree_node* @create_loop_fn() #8, !dbg !3242
  %27 = load %union.tree_node*, %union.tree_node** %arg_struct, align 8, !dbg !3243
  call void @llvm.dbg.value(metadata %union.tree_node* %27, metadata !3174, metadata !DIExpression()), !dbg !3182
  %28 = load %union.tree_node*, %union.tree_node** %new_arg_struct, align 8, !dbg !3244
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !3175, metadata !DIExpression()), !dbg !3182
  %call40 = call fastcc %struct.basic_block_def* @create_parallel_loop(%struct.loop* %26, %union.tree_node* %call39, %union.tree_node* %27, %union.tree_node* %28, i32 %n_threads) #8, !dbg !3245
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call40, metadata !3177, metadata !DIExpression()), !dbg !3182
  %call41 = call i64 @htab_elements(%struct.htab* %reduction_list) #6, !dbg !3246
  %cmp42 = icmp eq i64 %call41, 0, !dbg !3248
  br i1 %cmp42, label %if.end45, label %if.then44, !dbg !3249

if.then44:                                        ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.loop* %26, metadata !3166, metadata !DIExpression()), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.clsn_data* %clsn_data, metadata !3180, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  call fastcc void @create_call_for_reduction(%struct.loop* %26, %struct.htab* %reduction_list, %struct.clsn_data* nonnull %clsn_data) #8, !dbg !3250
  %.pre3 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !3251
  br label %if.end45, !dbg !3250

if.end45:                                         ; preds = %cond.end, %if.then44
  %29 = phi %struct.loop* [ %26, %cond.end ], [ %.pre3, %if.then44 ], !dbg !3251
  call void @scev_reset() #6, !dbg !3252
  call void @llvm.dbg.value(metadata %struct.loop* %29, metadata !3166, metadata !DIExpression()), !dbg !3182
  call void @cancel_loop_tree(%struct.loop* %29) #6, !dbg !3253
  call void @llvm.dbg.value(metadata %struct.loop** %loop.addr, metadata !3166, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3170, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  call fastcc void @fel_init(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop.addr, i32 0) #8, !dbg !3254
  br label %for.cond, !dbg !3254

for.cond:                                         ; preds = %for.body, %if.end45
  %30 = load %struct.loop*, %struct.loop** %loop.addr, align 8, !dbg !3256
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !3166, metadata !DIExpression()), !dbg !3182
  %tobool46 = icmp eq %struct.loop* %30, null, !dbg !3254
  br i1 %tobool46, label %for.end, label %for.body, !dbg !3254

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.loop* %30, metadata !3166, metadata !DIExpression()), !dbg !3182
  call void @free_numbers_of_iterations_estimates_loop(%struct.loop* nonnull %30) #6, !dbg !3258
  call void @llvm.dbg.value(metadata %struct.loop** %loop.addr, metadata !3166, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3170, metadata !DIExpression(DW_OP_deref)), !dbg !3182
  call fastcc void @fel_next(%struct.loop_iterator* nonnull %li, %struct.loop** nonnull %loop.addr) #8, !dbg !3256
  br label %for.cond, !dbg !3256, !llvm.loop !3259

for.end:                                          ; preds = %for.cond
  call void @omp_expand_local(%struct.basic_block_def* %call40) #6, !dbg !3261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #7, !dbg !3262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7, !dbg !3262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !3262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !3262
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3262
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !3262
  ret void, !dbg !3262
}

declare dso_local void @verify_flow_info() local_unnamed_addr #2

declare dso_local void @verify_dominators(i32) local_unnamed_addr #2

declare dso_local void @verify_loop_structure() local_unnamed_addr #2

declare dso_local void @verify_loop_closed_ssa() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @fel_next(%struct.loop_iterator* %li, %struct.loop** %loop) unnamed_addr #0 !dbg !3263 {
entry:
  %anum = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.loop_iterator* %li, metadata !3267, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.value(metadata %struct.loop** %loop, metadata !3268, metadata !DIExpression()), !dbg !3270
  %0 = bitcast i32* %anum to i8*, !dbg !3271
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3271
  %to_visit = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 0, !dbg !3270
  %idx = getelementptr inbounds %struct.loop_iterator, %struct.loop_iterator* %li, i64 0, i32 1, !dbg !3270
  br label %while.cond, !dbg !3272

while.cond:                                       ; preds = %while.body, %entry
  %1 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %to_visit, align 8, !dbg !3273
  %tobool = icmp eq %struct.VEC_int_heap* %1, null, !dbg !3273
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3273

cond.true:                                        ; preds = %while.cond
  %base = getelementptr inbounds %struct.VEC_int_heap, %struct.VEC_int_heap* %1, i64 0, i32 0, !dbg !3273
  br label %cond.end, !dbg !3273

cond.end:                                         ; preds = %while.cond, %cond.true
  %cond = phi %struct.VEC_int_base* [ %base, %cond.true ], [ null, %while.cond ], !dbg !3273
  %2 = load i32, i32* %idx, align 8, !dbg !3273
  call void @llvm.dbg.value(metadata i32* %anum, metadata !3269, metadata !DIExpression(DW_OP_deref)), !dbg !3270
  %call = call fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %cond, i32 %2, i32* nonnull %anum) #8, !dbg !3273
  %tobool2 = icmp eq i32 %call, 0, !dbg !3272
  br i1 %tobool2, label %while.end, label %while.body, !dbg !3272

while.body:                                       ; preds = %cond.end
  %3 = load i32, i32* %idx, align 8, !dbg !3274
  %inc = add i32 %3, 1, !dbg !3274
  store i32 %inc, i32* %idx, align 8, !dbg !3274
  %4 = load i32, i32* %anum, align 4, !dbg !3276
  call void @llvm.dbg.value(metadata i32 %4, metadata !3269, metadata !DIExpression()), !dbg !3270
  %call4 = call fastcc %struct.loop* @get_loop(i32 %4) #8, !dbg !3277
  store %struct.loop* %call4, %struct.loop** %loop, align 8, !dbg !3278
  %tobool5 = icmp eq %struct.loop* %call4, null, !dbg !3279
  br i1 %tobool5, label %while.cond, label %cleanup.loopexit, !dbg !3281, !llvm.loop !3282

while.end:                                        ; preds = %cond.end
  call fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %to_visit) #8, !dbg !3284
  store %struct.loop* null, %struct.loop** %loop, align 8, !dbg !3285
  br label %cleanup, !dbg !3286

cleanup.loopexit:                                 ; preds = %while.body
  br label %cleanup, !dbg !3286

cleanup:                                          ; preds = %cleanup.loopexit, %while.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #7, !dbg !3286
  ret void, !dbg !3286
}

declare dso_local void @free_stmt_vec_info_vec() local_unnamed_addr #2

declare dso_local void @htab_delete(%struct.htab*) local_unnamed_addr #2

declare dso_local void @pt_solution_reset(%struct.pt_solution*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_bitmap_head_def(i8*) #2

declare dso_local void @gt_pch_nx_bitmap_head_def(i8*) #2

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_int_heap* @VEC_int_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3287 {
entry:
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !3291, metadata !DIExpression()), !dbg !3292
  %call = tail call i8* @vec_heap_o_reserve_exact(i8* null, i32 %alloc_, i64 8, i64 4) #6, !dbg !3293
  %0 = bitcast i8* %call to %struct.VEC_int_heap*, !dbg !3293
  ret %struct.VEC_int_heap* %0, !dbg !3293
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @number_of_loops() unnamed_addr #0 !dbg !3294 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3297
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !3297
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !3297
  %tobool = icmp eq %struct.loops* %1, null, !dbg !3297
  br i1 %tobool, label %return, label %if.end, !dbg !3299

if.end:                                           ; preds = %entry
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !3300
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !3300
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !3300
  br i1 %tobool3, label %cond.end, label %cond.true, !dbg !3300

cond.true:                                        ; preds = %if.end
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !3300
  br label %cond.end, !dbg !3300

cond.end:                                         ; preds = %if.end, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %if.end ], !dbg !3300
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !3300
  br label %return, !dbg !3301

return:                                           ; preds = %entry, %cond.end
  %retval.0 = phi i32 [ %call, %cond.end ], [ 0, %entry ], !dbg !3302
  ret i32 %retval.0, !dbg !3303
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_iterate(%struct.VEC_loop_p_base* %vec_, i32 %ix_, %struct.loop** %ptr) unnamed_addr #0 !dbg !3304 {
entry:
  unreachable, !dbg !3313
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32* @VEC_int_base_quick_push(%struct.VEC_int_base* %vec_, i32 %obj_) unnamed_addr #0 !dbg !3314 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !3319, metadata !DIExpression()), !dbg !3322
  call void @llvm.dbg.value(metadata i32 %obj_, metadata !3320, metadata !DIExpression()), !dbg !3322
  %num1 = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !3323
  %0 = load i32, i32* %num1, align 4, !dbg !3323
  %inc = add i32 %0, 1, !dbg !3323
  store i32 %inc, i32* %num1, align 4, !dbg !3323
  %idxprom = zext i32 %0 to i64, !dbg !3323
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3323
  call void @llvm.dbg.value(metadata i32* %arrayidx, metadata !3321, metadata !DIExpression()), !dbg !3322
  store i32 %obj_, i32* %arrayidx, align 4, !dbg !3323
  ret i32* %arrayidx, !dbg !3323
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @loop_outer(%struct.loop* %loop) unnamed_addr #0 !dbg !3324 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3328, metadata !DIExpression()), !dbg !3330
  %superloops = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 7, !dbg !3331
  %0 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3331
  %tobool = icmp eq %struct.VEC_loop_p_gc* %0, null, !dbg !3331
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3331

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %0, i64 0, i32 0, !dbg !3331
  br label %cond.end, !dbg !3331

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3331
  %call = tail call fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %cond) #8, !dbg !3331
  call void @llvm.dbg.value(metadata i32 %call, metadata !3329, metadata !DIExpression()), !dbg !3330
  %cmp = icmp eq i32 %call, 0, !dbg !3332
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3334

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %superloops, align 8, !dbg !3335
  %tobool3 = icmp eq %struct.VEC_loop_p_gc* %1, null, !dbg !3335
  br i1 %tobool3, label %cond.end8, label %cond.true4, !dbg !3335

cond.true4:                                       ; preds = %if.end
  %base6 = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %1, i64 0, i32 0, !dbg !3335
  br label %cond.end8, !dbg !3335

cond.end8:                                        ; preds = %if.end, %cond.true4
  %cond9 = phi %struct.VEC_loop_p_base* [ %base6, %cond.true4 ], [ null, %if.end ], !dbg !3335
  %sub = add i32 %call, -1, !dbg !3335
  %call10 = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond9, i32 %sub) #8, !dbg !3335
  br label %cleanup, !dbg !3336

cleanup:                                          ; preds = %cond.end, %cond.end8
  %retval.0 = phi %struct.loop* [ %call10, %cond.end8 ], [ null, %cond.end ], !dbg !3330
  ret %struct.loop* %retval.0, !dbg !3337
}

declare dso_local i8* @vec_heap_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_loop_p_base_length(%struct.VEC_loop_p_base* %vec_) unnamed_addr #0 !dbg !3338 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3342, metadata !DIExpression()), !dbg !3343
  %tobool = icmp eq %struct.VEC_loop_p_base* %vec_, null, !dbg !3344
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3344

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 0, !dbg !3344
  %0 = load i32, i32* %num, align 8, !dbg !3344
  br label %cond.end, !dbg !3344

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !3344
  ret i32 %cond, !dbg !3344
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !3345 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_loop_p_base* %vec_, metadata !3349, metadata !DIExpression()), !dbg !3351
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !3350, metadata !DIExpression()), !dbg !3351
  br label %land.end, !dbg !3352

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !3352
  %arrayidx = getelementptr inbounds %struct.VEC_loop_p_base, %struct.VEC_loop_p_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !3352
  %0 = load %struct.loop*, %struct.loop** %arrayidx, align 8, !dbg !3352
  ret %struct.loop* %0, !dbg !3352
}

declare dso_local %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @gsi_start_phis(%struct.gimple_stmt_iterator* sret, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3353 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3357, metadata !DIExpression()), !dbg !3358
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3359
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3359
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !3360
  %conv1 = zext i1 %cmp to i8, !dbg !3361
  ret i8 %conv1, !dbg !3362
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def) unnamed_addr #0 !dbg !3363 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %def, metadata !3368, metadata !DIExpression()), !dbg !3369
  %0 = load %union.tree_node*, %union.tree_node** %def, align 8, !dbg !3370
  ret %union.tree_node* %0, !dbg !3371
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3372 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3376, metadata !DIExpression()), !dbg !3377
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !3378
  ret %union.tree_node** %result, !dbg !3379
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !3380 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !3384, metadata !DIExpression()), !dbg !3385
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3386
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3386
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !3387
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !3387
  ret %union.gimple_statement_d* %1, !dbg !3388
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !3389 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !3394, metadata !DIExpression()), !dbg !3395
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !3396
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !3396
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !3397
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !3397
  %2 = load i64, i64* %1, align 8, !dbg !3397
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !3398
  store i64 %2, i64* %3, align 8, !dbg !3398
  ret void, !dbg !3399
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @number_of_iterations_exit(%struct.loop*, %struct.edge_def*, %struct.tree_niter_desc*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @gather_scalar_reductions(%struct.loop* %loop, %struct.htab* %reduction_list) unnamed_addr #5 !dbg !3400 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %iv = alloca %struct.affine_iv, align 8
  %double_reduc = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3404, metadata !DIExpression()), !dbg !3498
  call void @llvm.dbg.value(metadata %struct.htab* %reduction_list, metadata !3405, metadata !DIExpression()), !dbg !3498
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3499
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3499
  store %struct._IO_FILE* null, %struct._IO_FILE** @vect_dump, align 8, !dbg !3500
  %call = tail call %struct._loop_vec_info* @vect_analyze_loop_form(%struct.loop* %loop) #6, !dbg !3501
  call void @llvm.dbg.value(metadata %struct._loop_vec_info* %call, metadata !3407, metadata !DIExpression()), !dbg !3498
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3502
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !3502
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3503
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3503
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %2) #6, !dbg !3502
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !3502
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !3502
  %3 = bitcast %struct.affine_iv* %iv to i8*, !dbg !3504
  %tobool9 = icmp eq %struct._loop_vec_info* %call, null, !dbg !3505
  br i1 %tobool9, label %entry.entry.split_crit_edge, label %entry.split.us, !dbg !3506

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.cond, !dbg !3506

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !3506

for.cond.us:                                      ; preds = %cleanup.us, %entry.split.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3406, metadata !DIExpression(DW_OP_deref)), !dbg !3498
  %call1.us = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3507
  %tobool.us = icmp eq i8 %call1.us, 0, !dbg !3508
  br i1 %tobool.us, label %for.body.us, label %for.end.us-lcssa.us, !dbg !3509

for.body.us:                                      ; preds = %for.cond.us
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3406, metadata !DIExpression(DW_OP_deref)), !dbg !3498
  %call2.us = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3510
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2.us, metadata !3488, metadata !DIExpression()), !dbg !3504
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7, !dbg !3511
  %call3.us = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call2.us) #8, !dbg !3512
  %call4.us = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call3.us) #8, !dbg !3512
  call void @llvm.dbg.value(metadata %union.tree_node* %call4.us, metadata !3493, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata i8* %double_reduc, metadata !3494, metadata !DIExpression(DW_OP_deref)), !dbg !3504
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %double_reduc) #7, !dbg !3513
  %call5.us = call zeroext i8 @is_gimple_reg(%union.tree_node* %call4.us) #6, !dbg !3514
  %tobool6.us = icmp eq i8 %call5.us, 0, !dbg !3514
  br i1 %tobool6.us, label %cleanup.us, label %if.end.us, !dbg !3516

if.end.us:                                        ; preds = %for.body.us
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !3492, metadata !DIExpression(DW_OP_deref)), !dbg !3504
  %call7.us = call zeroext i8 @simple_iv(%struct.loop* %loop, %struct.loop* %loop, %union.tree_node* %call4.us, %struct.affine_iv* nonnull %iv, i8 zeroext 1) #6, !dbg !3517
  %tobool8.us = icmp eq i8 %call7.us, 0, !dbg !3517
  br i1 %tobool8.us, label %if.then10.us, label %cleanup.us, !dbg !3518

if.then10.us:                                     ; preds = %if.end.us
  call void @llvm.dbg.value(metadata i8* %double_reduc, metadata !3494, metadata !DIExpression(DW_OP_deref)), !dbg !3504
  %call11.us = call %union.gimple_statement_d* @vect_is_simple_reduction(%struct._loop_vec_info* nonnull %call, %union.gimple_statement_d* %call2.us, i8 zeroext 1, i8* nonnull %double_reduc) #6, !dbg !3519
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11.us, metadata !3495, metadata !DIExpression()), !dbg !3520
  %tobool12.us = icmp eq %union.gimple_statement_d* %call11.us, null, !dbg !3521
  %4 = load i8, i8* %double_reduc, align 1, !dbg !3523
  call void @llvm.dbg.value(metadata i8 %4, metadata !3494, metadata !DIExpression()), !dbg !3504
  %tobool14.us = icmp ne i8 %4, 0, !dbg !3523
  %or.cond1.us = or i1 %tobool12.us, %tobool14.us, !dbg !3524
  br i1 %or.cond1.us, label %cleanup.us, label %if.then15.us, !dbg !3524

if.then15.us:                                     ; preds = %if.then10.us
  call fastcc void @build_new_reduction(%struct.htab* %reduction_list, %union.gimple_statement_d* %call11.us, %union.gimple_statement_d* %call2.us) #8, !dbg !3525
  br label %cleanup.us, !dbg !3525

cleanup.us:                                       ; preds = %if.then15.us, %if.then10.us, %if.end.us, %for.body.us
  call void @llvm.dbg.value(metadata i8* %double_reduc, metadata !3494, metadata !DIExpression(DW_OP_deref)), !dbg !3504
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %double_reduc) #7, !dbg !3526
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7, !dbg !3526
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3406, metadata !DIExpression(DW_OP_deref)), !dbg !3498
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3527
  br label %for.cond.us, !dbg !3528, !llvm.loop !3529

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !3531

for.cond:                                         ; preds = %cleanup, %entry.entry.split_crit_edge
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3406, metadata !DIExpression(DW_OP_deref)), !dbg !3498
  %call1 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3507
  %tobool = icmp eq i8 %call1, 0, !dbg !3508
  br i1 %tobool, label %for.body, label %for.end.us-lcssa, !dbg !3509

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3406, metadata !DIExpression(DW_OP_deref)), !dbg !3498
  %call2 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3510
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call2, metadata !3488, metadata !DIExpression()), !dbg !3504
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #7, !dbg !3511
  %call3 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call2) #8, !dbg !3512
  %call4 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call3) #8, !dbg !3512
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !3493, metadata !DIExpression()), !dbg !3504
  call void @llvm.dbg.value(metadata i8* %double_reduc, metadata !3494, metadata !DIExpression(DW_OP_deref)), !dbg !3504
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %double_reduc) #7, !dbg !3513
  %call5 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call4) #6, !dbg !3514
  %tobool6 = icmp eq i8 %call5, 0, !dbg !3514
  br i1 %tobool6, label %cleanup, label %if.end, !dbg !3516

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.affine_iv* %iv, metadata !3492, metadata !DIExpression(DW_OP_deref)), !dbg !3504
  %call7 = call zeroext i8 @simple_iv(%struct.loop* %loop, %struct.loop* %loop, %union.tree_node* %call4, %struct.affine_iv* nonnull %iv, i8 zeroext 1) #6, !dbg !3517
  br label %cleanup, !dbg !3518

cleanup:                                          ; preds = %if.end, %for.body
  call void @llvm.dbg.value(metadata i8* %double_reduc, metadata !3494, metadata !DIExpression(DW_OP_deref)), !dbg !3504
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %double_reduc) #7, !dbg !3526
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #7, !dbg !3526
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3406, metadata !DIExpression(DW_OP_deref)), !dbg !3498
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3527
  br label %for.cond, !dbg !3528, !llvm.loop !3529

for.end.us-lcssa:                                 ; preds = %for.cond
  br label %for.end, !dbg !3531

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  call void @destroy_loop_vec_info(%struct._loop_vec_info* %call, i8 zeroext 1) #6, !dbg !3531
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3532
  ret void, !dbg !3532
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use) unnamed_addr #0 !dbg !3533 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !3537, metadata !DIExpression()), !dbg !3538
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !3539
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !3539
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !3540
  ret %union.tree_node* %1, !dbg !3541
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !3542 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3546, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.value(metadata i32 %i, metadata !3547, metadata !DIExpression()), !dbg !3548
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %i) #8, !dbg !3549
  %imm_use = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 0, !dbg !3550
  ret %struct.ssa_use_operand_d* %imm_use, !dbg !3551
}

declare dso_local zeroext i8 @is_gimple_reg(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @print_gimple_stmt(%struct._IO_FILE*, %union.gimple_statement_d*, i32, i32) local_unnamed_addr #2

declare dso_local void @print_generic_expr(%struct._IO_FILE*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @htab_elements(%struct.htab*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @first_readonly_imm_use(%struct.immediate_use_iterator_d* %imm, %union.tree_node* %var) unnamed_addr #0 !dbg !3552 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3557, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !3558, metadata !DIExpression()), !dbg !3559
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %var, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3560
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !3561
  %0 = bitcast %struct.ssa_use_operand_d** %end_p to i40**, !dbg !3562
  store i40* %imm_uses, i40** %0, align 8, !dbg !3562
  %next = getelementptr inbounds i40, i40* %imm_uses, i64 1, !dbg !3563
  %1 = bitcast i40* %next to i64*, !dbg !3563
  %2 = load i64, i64* %1, align 8, !dbg !3563
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !3564
  store i64 %2, i64* %3, align 8, !dbg !3564
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !3565
  %tobool = icmp eq i8 %call, 0, !dbg !3565
  br i1 %tobool, label %if.end, label %return, !dbg !3567

if.end:                                           ; preds = %entry
  %imm_use2 = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3568
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use2, align 8, !dbg !3568
  br label %return, !dbg !3569

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !3559
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !3570
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3571 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3577, metadata !DIExpression()), !dbg !3578
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3579
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !3579
  %end_p = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 1, !dbg !3580
  %1 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %end_p, align 8, !dbg !3580
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, %1, !dbg !3581
  %conv1 = zext i1 %cmp to i8, !dbg !3582
  ret i8 %conv1, !dbg !3583
}

declare dso_local zeroext i8 @flow_bb_inside_loop_p(%struct.loop*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3584 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3589, metadata !DIExpression()), !dbg !3590
  %bb = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 4, !dbg !3591
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3591
  ret %struct.basic_block_def* %0, !dbg !3592
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @next_readonly_imm_use(%struct.immediate_use_iterator_d* %imm) unnamed_addr #0 !dbg !3593 {
entry:
  call void @llvm.dbg.value(metadata %struct.immediate_use_iterator_d* %imm, metadata !3597, metadata !DIExpression()), !dbg !3599
  %imm_use = getelementptr inbounds %struct.immediate_use_iterator_d, %struct.immediate_use_iterator_d* %imm, i64 0, i32 0, !dbg !3600
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !3600
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %0, metadata !3598, metadata !DIExpression()), !dbg !3599
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !3601
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !3601
  %2 = load i64, i64* %1, align 8, !dbg !3601
  %3 = bitcast %struct.immediate_use_iterator_d* %imm to i64*, !dbg !3602
  store i64 %2, i64* %3, align 8, !dbg !3602
  %call = tail call fastcc zeroext i8 @end_readonly_imm_use_p(%struct.immediate_use_iterator_d* %imm) #8, !dbg !3603
  %tobool = icmp eq i8 %call, 0, !dbg !3603
  br i1 %tobool, label %if.end, label %cleanup, !dbg !3605

if.end:                                           ; preds = %entry
  %4 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %imm_use, align 8, !dbg !3606
  br label %cleanup, !dbg !3607

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.ssa_use_operand_d* [ %4, %if.end ], [ null, %entry ], !dbg !3599
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !3608
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.reduction_info* @reduction_phi(%struct.htab* %reduction_list, %union.gimple_statement_d* %phi) unnamed_addr #5 !dbg !3609 {
entry:
  %tmpred = alloca %struct.reduction_info, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %reduction_list, metadata !3613, metadata !DIExpression()), !dbg !3617
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !3614, metadata !DIExpression()), !dbg !3617
  %0 = bitcast %struct.reduction_info* %tmpred to i8*, !dbg !3618
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %0) #7, !dbg !3618
  %call = tail call i64 @htab_elements(%struct.htab* %reduction_list) #6, !dbg !3619
  %cmp = icmp eq i64 %call, 0, !dbg !3621
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3622

if.end:                                           ; preds = %entry
  %reduc_phi = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %tmpred, i64 0, i32 1, !dbg !3623
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %reduc_phi, align 8, !dbg !3624
  %call1 = call i8* @htab_find(%struct.htab* %reduction_list, i8* nonnull %0) #6, !dbg !3625
  %1 = bitcast i8* %call1 to %struct.reduction_info*, !dbg !3626
  call void @llvm.dbg.value(metadata %struct.reduction_info* %1, metadata !3616, metadata !DIExpression()), !dbg !3617
  br label %cleanup, !dbg !3627

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %struct.reduction_info* [ %1, %if.end ], [ null, %entry ], !dbg !3617
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %0) #7, !dbg !3628
  ret %struct.reduction_info* %retval.0, !dbg !3628
}

declare dso_local zeroext i8 @simple_iv(%struct.loop*, %struct.loop*, %union.tree_node*, %struct.affine_iv*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct._loop_vec_info* @vect_analyze_loop_form(%struct.loop*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @vect_is_simple_reduction(%struct._loop_vec_info*, %union.gimple_statement_d*, i8 zeroext, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @build_new_reduction(%struct.htab* %reduction_list, %union.gimple_statement_d* %reduc_stmt, %union.gimple_statement_d* %phi) unnamed_addr #5 !dbg !3629 {
entry:
  call void @llvm.dbg.value(metadata %struct.htab* %reduction_list, metadata !3633, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %reduc_stmt, metadata !3634, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !3635, metadata !DIExpression()), !dbg !3638
  %tobool = icmp eq %union.gimple_statement_d* %reduc_stmt, null, !dbg !3639
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3639

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1708, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3639
  br label %cond.end, !dbg !3639

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3640
  %tobool1 = icmp eq %struct._IO_FILE* %0, null, !dbg !3640
  br i1 %tobool1, label %if.end, label %land.lhs.true, !dbg !3642

land.lhs.true:                                    ; preds = %cond.end
  %1 = load i32, i32* @dump_flags, align 4, !dbg !3643
  %and = and i32 %1, 8, !dbg !3644
  %tobool2 = icmp eq i32 %and, 0, !dbg !3644
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3645

if.then:                                          ; preds = %land.lhs.true
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.19, i64 0, i64 0)) #6, !dbg !3646
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3648
  tail call void @print_gimple_stmt(%struct._IO_FILE* %2, %union.gimple_statement_d* %reduc_stmt, i32 0, i32 0) #6, !dbg !3649
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3650
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !3651
  br label %if.end, !dbg !3652

if.end:                                           ; preds = %land.lhs.true, %cond.end, %if.then
  %call4 = tail call i8* @xcalloc(i64 1, i64 64) #6, !dbg !3653
  call void @llvm.dbg.value(metadata i8* %call4, metadata !3637, metadata !DIExpression()), !dbg !3638
  %reduc_stmt5 = bitcast i8* %call4 to %union.gimple_statement_d**, !dbg !3654
  store %union.gimple_statement_d* %reduc_stmt, %union.gimple_statement_d** %reduc_stmt5, align 8, !dbg !3655
  %reduc_phi = getelementptr inbounds i8, i8* %call4, i64 8, !dbg !3656
  %4 = bitcast i8* %reduc_phi to %union.gimple_statement_d**, !dbg !3656
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %4, align 8, !dbg !3657
  %call6 = tail call fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %reduc_stmt) #8, !dbg !3658
  %reduction_code = getelementptr inbounds i8, i8* %call4, i64 16, !dbg !3659
  %5 = bitcast i8* %reduction_code to i32*, !dbg !3659
  store i32 %call6, i32* %5, align 8, !dbg !3660
  %call7 = tail call i8** @htab_find_slot(%struct.htab* %reduction_list, i8* %call4, i32 1) #6, !dbg !3661
  call void @llvm.dbg.value(metadata i8** %call7, metadata !3636, metadata !DIExpression()), !dbg !3638
  store i8* %call4, i8** %call7, align 8, !dbg !3662
  ret void, !dbg !3663
}

declare dso_local void @destroy_loop_vec_info(%struct._loop_vec_info*, i8 zeroext) local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_assign_rhs_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3664 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3668, metadata !DIExpression()), !dbg !3670
  %call = tail call fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %gs) #8, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %call, metadata !3669, metadata !DIExpression()), !dbg !3670
  %call1 = tail call fastcc i32 @get_gimple_rhs_class(i32 %call) #8, !dbg !3672
  %cmp = icmp eq i32 %call1, 3, !dbg !3674
  br i1 %cmp, label %if.then, label %if.end, !dbg !3675

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) #8, !dbg !3676
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3676
  %bf.load = load i64, i64* %0, align 8, !dbg !3676
  %1 = trunc i64 %bf.load to i32, !dbg !3676
  %bf.cast = and i32 %1, 65535, !dbg !3676
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !3669, metadata !DIExpression()), !dbg !3670
  br label %if.end, !dbg !3677

if.end:                                           ; preds = %if.then, %entry
  %code.0 = phi i32 [ %bf.cast, %if.then ], [ %call, %entry ], !dbg !3670
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !3669, metadata !DIExpression()), !dbg !3670
  ret i32 %code.0, !dbg !3678
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_expr_code(%union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !3679 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !3681, metadata !DIExpression()), !dbg !3683
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !3684
  call void @llvm.dbg.value(metadata i32 %call, metadata !3682, metadata !DIExpression()), !dbg !3683
  switch i32 %call, label %if.else4 [
    i32 6, label %if.then
    i32 1, label %if.then
    i32 8, label %cleanup
  ], !dbg !3685

if.then:                                          ; preds = %entry, %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %stmt, i64 0, i32 0, i32 0, i32 0, !dbg !3687
  %bf.load = load i32, i32* %0, align 8, !dbg !3687
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3687
  br label %cleanup, !dbg !3688

if.else4:                                         ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 1446, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3689
  br label %cleanup, !dbg !3691

cleanup:                                          ; preds = %entry, %if.else4, %if.then
  %retval.0 = phi i32 [ %bf.lshr, %if.then ], [ 0, %if.else4 ], [ 59, %entry ], !dbg !3683
  ret i32 %retval.0, !dbg !3692
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @get_gimple_rhs_class(i32 %code) unnamed_addr #0 !dbg !3693 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !3697, metadata !DIExpression()), !dbg !3698
  %idxprom = sext i32 %code to i64, !dbg !3699
  %arrayidx = getelementptr inbounds [0 x i8], [0 x i8]* @gimple_rhs_class_table, i64 0, i64 %idxprom, !dbg !3699
  %0 = load i8, i8* %arrayidx, align 1, !dbg !3699
  %conv = zext i8 %0 to i32, !dbg !3700
  ret i32 %conv, !dbg !3701
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3702 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3706, metadata !DIExpression()), !dbg !3707
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !3708
  ret %union.tree_node* %call, !dbg !3709
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3710 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3714, metadata !DIExpression()), !dbg !3715
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !3716
  %bf.load = load i32, i32* %0, align 8, !dbg !3716
  %bf.clear = and i32 %bf.load, 255, !dbg !3716
  ret i32 %bf.clear, !dbg !3717
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !3718 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3722, metadata !DIExpression()), !dbg !3724
  call void @llvm.dbg.value(metadata i32 %i, metadata !3723, metadata !DIExpression()), !dbg !3724
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !3725
  %tobool = icmp eq i8 %call, 0, !dbg !3725
  br i1 %tobool, label %return, label %if.then, !dbg !3727

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !3728
  %idxprom = zext i32 %i to i64, !dbg !3728
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !3728
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !3728
  br label %return, !dbg !3730

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !3731
  ret %union.tree_node* %retval.0, !dbg !3732
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !3733 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !3737, metadata !DIExpression()), !dbg !3738
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !3739
  %cmp = icmp eq i32 %call, 0, !dbg !3740
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !3741

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !3742
  %cmp2 = icmp ult i32 %call1, 10, !dbg !3743
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !3744
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3745 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3747, metadata !DIExpression()), !dbg !3749
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !3750
  %idxprom = zext i32 %call to i64, !dbg !3751
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !3751
  %0 = load i64, i64* %arrayidx, align 8, !dbg !3751
  call void @llvm.dbg.value(metadata i64 %0, metadata !3748, metadata !DIExpression()), !dbg !3749
  %cmp = icmp eq i64 %0, 0, !dbg !3752
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3752

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3752
  br label %cond.end, !dbg !3752

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !3753
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !3754
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !3755
  ret %union.tree_node** %2, !dbg !3756
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !3757 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3761, metadata !DIExpression()), !dbg !3762
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !3763
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !3764
  ret i32 %call1, !dbg !3765
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !3766 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !3770, metadata !DIExpression()), !dbg !3771
  %idxprom = zext i32 %code to i64, !dbg !3772
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !3772
  %0 = load i32, i32* %arrayidx, align 4, !dbg !3772
  ret i32 %0, !dbg !3773
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !3774 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !3779, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.value(metadata i32 %index, metadata !3780, metadata !DIExpression()), !dbg !3781
  %capacity = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !3782
  %0 = load i32, i32* %capacity, align 8, !dbg !3782
  %cmp = icmp ult i32 %0, %index, !dbg !3782
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3782

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 3103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3782
  br label %cond.end, !dbg !3782

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom = zext i32 %index to i64, !dbg !3783
  %arrayidx = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 %idxprom, !dbg !3783
  ret %struct.phi_arg_d* %arrayidx, !dbg !3784
}

declare dso_local i8* @htab_find(%struct.htab*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_data_reference_p_heap* @VEC_data_reference_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3785 {
entry:
  call void @llvm.dbg.value(metadata i32 10, metadata !3789, metadata !DIExpression()), !dbg !3790
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 10) #6, !dbg !3791
  %0 = bitcast i8* %call to %struct.VEC_data_reference_p_heap*, !dbg !3791
  ret %struct.VEC_data_reference_p_heap* %0, !dbg !3791
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_ddr_p_heap* @VEC_ddr_p_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !3792 {
entry:
  call void @llvm.dbg.value(metadata i32 100, metadata !3796, metadata !DIExpression()), !dbg !3797
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 100) #6, !dbg !3798
  %0 = bitcast i8* %call to %struct.VEC_ddr_p_heap*, !dbg !3798
  ret %struct.VEC_ddr_p_heap* %0, !dbg !3798
}

declare dso_local zeroext i8 @compute_data_dependences_for_loop(%struct.loop*, i8 zeroext, %struct.VEC_data_reference_p_heap**, %struct.VEC_ddr_p_heap**) local_unnamed_addr #2

declare dso_local void @dump_data_dependence_relations(%struct._IO_FILE*, %struct.VEC_ddr_p_heap*) local_unnamed_addr #2

declare dso_local %struct.lambda_trans_matrix_s* @lambda_trans_matrix_new(i32, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @lambda_transform_legal_p(%struct.lambda_trans_matrix_s*, i32, %struct.VEC_ddr_p_heap*) local_unnamed_addr #2

declare dso_local void @free_dependence_relations(%struct.VEC_ddr_p_heap*) local_unnamed_addr #2

declare dso_local void @free_data_refs(%struct.VEC_data_reference_p_heap*) local_unnamed_addr #2

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @force_gimple_operand(%union.tree_node*, %struct.gimple_seq_d**, i8 zeroext, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @unshare_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def*, %struct.gimple_seq_d*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @invert_truthvalue_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_condexpr(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @initialize_original_copy_tables() local_unnamed_addr #2

declare dso_local %struct.loop* @loop_version(%struct.loop*, i8*, %struct.basic_block_def**, i32, i32, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

declare dso_local void @free_original_copy_tables() local_unnamed_addr #2

declare dso_local %union.tree_node* @canonicalize_loop_ivs(%struct.loop*, %union.tree_node**, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @transform_to_exit_first_loop(%struct.loop* %loop, %struct.htab* %reduction_list, %union.tree_node* %nit) unnamed_addr #5 !dbg !3799 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp35 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp82 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !3803, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %struct.htab* %reduction_list, metadata !3804, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %union.tree_node* %nit, metadata !3805, metadata !DIExpression()), !dbg !3832
  %call = tail call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #6, !dbg !3833
  call void @llvm.dbg.value(metadata %struct.edge_def* %call, metadata !3812, metadata !DIExpression()), !dbg !3832
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !3834
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3834
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !3835
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3835
  %call1 = tail call %struct.edge_def* @split_block_after_labels(%struct.basic_block_def* %1) #6, !dbg !3836
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3837
  %call3 = tail call fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %2) #8, !dbg !3838
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !3809, metadata !DIExpression()), !dbg !3832
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3839
  %call5 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %3) #8, !dbg !3840
  call void @llvm.dbg.value(metadata %struct.edge_def* %call5, metadata !3813, metadata !DIExpression()), !dbg !3832
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !3841
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3841
  %call6 = tail call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %4) #6, !dbg !3842
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call6, metadata !3820, metadata !DIExpression()), !dbg !3832
  %call7 = tail call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %call6) #8, !dbg !3843
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !3814, metadata !DIExpression()), !dbg !3832
  %call8 = tail call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call6) #8, !dbg !3844
  %cmp = icmp eq %union.tree_node* %call8, %nit, !dbg !3844
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3844

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1311, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3844
  br label %cond.end, !dbg !3844

cond.end:                                         ; preds = %entry, %cond.true
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !3845
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !3845
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3847
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %6) #6, !dbg !3845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !3845
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !3845
  br label %for.cond, !dbg !3848

for.cond:                                         ; preds = %for.inc, %cond.end
  %control.0 = phi %union.tree_node* [ %call7, %cond.end ], [ %control.1, %for.inc ], !dbg !3832
  call void @llvm.dbg.value(metadata %union.tree_node* %control.0, metadata !3814, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  %call10 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3849
  %tobool = icmp eq i8 %call10, 0, !dbg !3851
  br i1 %tobool, label %for.body, label %for.end, !dbg !3852

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  %call11 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3853
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !3818, metadata !DIExpression()), !dbg !3832
  %call12 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call11) #8, !dbg !3855
  %call13 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call12) #8, !dbg !3855
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3816, metadata !DIExpression()), !dbg !3832
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3856
  %7 = bitcast i32* %var to %union.tree_node**, !dbg !3856
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !3856
  %call14 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %8, %union.gimple_statement_d* %call11) #8, !dbg !3857
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !3817, metadata !DIExpression()), !dbg !3832
  %call15 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call11) #8, !dbg !3858
  store %union.tree_node* %call14, %union.tree_node** %call15, align 8, !dbg !3858
  %call16 = call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %call13, %struct.basic_block_def* %call3) #6, !dbg !3859
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call16, metadata !3819, metadata !DIExpression()), !dbg !3832
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3860
  %9 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !3860
  store %union.gimple_statement_d* %call16, %union.gimple_statement_d** %9, align 8, !dbg !3861
  call void @add_phi_arg(%union.gimple_statement_d* %call16, %union.tree_node* %call14, %struct.edge_def* %call5, i32 0) #6, !dbg !3862
  %cmp18 = icmp eq %union.tree_node* %call13, %control.0, !dbg !3863
  br i1 %cmp18, label %if.then, label %for.inc, !dbg !3865

if.then:                                          ; preds = %for.body
  call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %call6, %union.tree_node* %call14) #8, !dbg !3866
  call fastcc void @update_stmt(%union.gimple_statement_d* %call6) #8, !dbg !3868
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !3814, metadata !DIExpression()), !dbg !3832
  br label %for.inc, !dbg !3869

for.inc:                                          ; preds = %for.body, %if.then
  %control.1 = phi %union.tree_node* [ %call14, %if.then ], [ %control.0, %for.body ], !dbg !3832
  call void @llvm.dbg.value(metadata %union.tree_node* %control.1, metadata !3814, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3870
  br label %for.cond, !dbg !3871, !llvm.loop !3872

for.end:                                          ; preds = %for.cond
  %control.0.lcssa = phi %union.tree_node* [ %control.0, %for.cond ], !dbg !3832
  call void @llvm.dbg.value(metadata %union.tree_node* %control.0.lcssa, metadata !3814, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %union.tree_node* %control.0.lcssa, metadata !3814, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %union.tree_node* %control.0.lcssa, metadata !3814, metadata !DIExpression()), !dbg !3832
  %call19 = call %struct.basic_block_def** @get_loop_body_in_dom_order(%struct.loop* %loop) #6, !dbg !3874
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %call19, metadata !3806, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata i32 0, metadata !3810, metadata !DIExpression()), !dbg !3832
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !3875
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !3875
  br label %for.cond20, !dbg !3878

for.cond20:                                       ; preds = %for.inc23, %for.end
  %n.0 = phi i32 [ 0, %for.end ], [ %inc, %for.inc23 ], !dbg !3879
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !3810, metadata !DIExpression()), !dbg !3832
  %idxprom = zext i32 %n.0 to i64, !dbg !3880
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call19, i64 %idxprom, !dbg !3880
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !3880
  %cmp21 = icmp eq %struct.basic_block_def* %11, %10, !dbg !3881
  br i1 %cmp21, label %for.end24, label %for.inc23, !dbg !3882

for.inc23:                                        ; preds = %for.cond20
  %inc = add i32 %n.0, 1, !dbg !3883
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3810, metadata !DIExpression()), !dbg !3832
  br label %for.cond20, !dbg !3884, !llvm.loop !3885

for.end24:                                        ; preds = %for.cond20
  %n.0.lcssa = phi i32 [ %n.0, %for.cond20 ], !dbg !3879
  %idxprom.lcssa = phi i64 [ %idxprom, %for.cond20 ], !dbg !3880
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !3810, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !3810, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !3810, metadata !DIExpression()), !dbg !3832
  %mul = shl nuw nsw i64 %idxprom.lcssa, 3, !dbg !3887
  %call25 = call i8* @xmalloc(i64 %mul) #6, !dbg !3887
  %12 = bitcast i8* %call25 to %struct.basic_block_def**, !dbg !3887
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %12, metadata !3807, metadata !DIExpression()), !dbg !3832
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !3888
  %call27 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %13) #8, !dbg !3889
  %add.ptr = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call19, i64 1, !dbg !3890
  %call28 = call zeroext i8 @gimple_duplicate_sese_tail(%struct.edge_def* %call27, %struct.edge_def* %call, %struct.basic_block_def** nonnull %add.ptr, i32 %n.0.lcssa, %struct.basic_block_def** %12) #6, !dbg !3891
  call void @llvm.dbg.value(metadata i8 %call28, metadata !3811, metadata !DIExpression()), !dbg !3832
  %tobool29 = icmp eq i8 %call28, 0, !dbg !3892
  br i1 %tobool29, label %cond.true30, label %cond.end32, !dbg !3892

cond.true30:                                      ; preds = %for.end24
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1339, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3892
  br label %cond.end32, !dbg !3892

cond.end32:                                       ; preds = %for.end24, %cond.true30
  %14 = bitcast %struct.basic_block_def** %call19 to i8*, !dbg !3893
  call void @free(i8* %14) #6, !dbg !3894
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %12, align 8, !dbg !3895
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %15, metadata !3808, metadata !DIExpression()), !dbg !3832
  call void @free(i8* %call25) #6, !dbg !3896
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3815, metadata !DIExpression()), !dbg !3832
  %16 = bitcast %struct.gimple_stmt_iterator* %tmp35 to i8*, !dbg !3897
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #7, !dbg !3897
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp35, %struct.basic_block_def* %15) #6, !dbg !3897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %16, i64 24, i1 false), !dbg !3897
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #7, !dbg !3897
  %var68 = getelementptr inbounds %union.tree_node, %union.tree_node* %control.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3898
  %17 = bitcast i32* %var68 to %union.tree_node**, !dbg !3898
  br label %for.cond36.outer.outer, !dbg !3899

for.cond36.outer.outer:                           ; preds = %cond.end32, %cond.end73
  %exit.0.ph.ph = phi %struct.edge_def* [ %call, %cond.end32 ], [ %call48.lcssa, %cond.end73 ]
  %control_name.0.ph.ph = phi %union.tree_node* [ null, %cond.end32 ], [ %call43.lcssa.lcssa, %cond.end73 ]
  br label %for.cond36.outer, !dbg !3900

for.cond36.outer:                                 ; preds = %for.cond36.outer.outer, %cleanup
  %exit.0.ph = phi %struct.edge_def* [ %call48, %cleanup ], [ %exit.0.ph.ph, %for.cond36.outer.outer ]
  br label %for.cond36, !dbg !3900

for.cond36:                                       ; preds = %for.cond36.outer, %if.then46
  call void @llvm.dbg.value(metadata %union.tree_node* %control_name.0.ph.ph, metadata !3815, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit.0.ph, metadata !3812, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  %call37 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3901
  %tobool38 = icmp eq i8 %call37, 0, !dbg !3902
  br i1 %tobool38, label %for.body40, label %for.end75, !dbg !3900

for.body40:                                       ; preds = %for.cond36
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  %call41 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !3903
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call41, metadata !3818, metadata !DIExpression()), !dbg !3832
  %call42 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %call41) #8, !dbg !3904
  %call43 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call42) #8, !dbg !3904
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !3816, metadata !DIExpression()), !dbg !3832
  %call44 = call zeroext i8 @is_gimple_reg(%union.tree_node* %call43) #6, !dbg !3905
  %tobool45 = icmp eq i8 %call44, 0, !dbg !3905
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !3907

if.then46:                                        ; preds = %for.body40
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3908
  br label %for.cond36, !dbg !3910, !llvm.loop !3911

if.end47:                                         ; preds = %for.body40
  %call41.lcssa = phi %union.gimple_statement_d* [ %call41, %for.body40 ], !dbg !3903
  %call43.lcssa = phi %union.tree_node* [ %call43, %for.body40 ], !dbg !3904
  %call48 = call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #6, !dbg !3913
  call void @llvm.dbg.value(metadata %struct.edge_def* %call48, metadata !3812, metadata !DIExpression()), !dbg !3832
  %call49 = call i64 @htab_elements(%struct.htab* %reduction_list) #6, !dbg !3914
  %cmp50 = icmp eq i64 %call49, 0, !dbg !3915
  br i1 %cmp50, label %if.end62, label %if.then52, !dbg !3916

if.then52:                                        ; preds = %if.end47
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call48, i64 0, i32 6, !dbg !3917
  %18 = load i32, i32* %dest_idx, align 4, !dbg !3917
  %call53 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call41.lcssa, i32 %18) #8, !dbg !3917
  %call54 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call53) #8, !dbg !3917
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !3831, metadata !DIExpression()), !dbg !3918
  %def_stmt56 = getelementptr inbounds %union.tree_node, %union.tree_node* %call54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3919
  %19 = bitcast %union.tree_node** %def_stmt56 to %union.gimple_statement_d**, !dbg !3919
  %20 = load %union.gimple_statement_d*, %union.gimple_statement_d** %19, align 8, !dbg !3919
  %call57 = call fastcc %struct.reduction_info* @reduction_phi(%struct.htab* %reduction_list, %union.gimple_statement_d* %20) #8, !dbg !3920
  call void @llvm.dbg.value(metadata %struct.reduction_info* %call57, metadata !3825, metadata !DIExpression()), !dbg !3918
  %tobool58 = icmp eq %struct.reduction_info* %call57, null, !dbg !3921
  br i1 %tobool58, label %cleanup, label %if.then59, !dbg !3923

if.then59:                                        ; preds = %if.then52
  %keep_res = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %call57, i64 0, i32 3, !dbg !3924
  store %union.gimple_statement_d* %call41.lcssa, %union.gimple_statement_d** %keep_res, align 8, !dbg !3926
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !3927
  br label %cleanup, !dbg !3928, !llvm.loop !3911

cleanup:                                          ; preds = %if.then52, %if.then59
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then59 ], [ true, %if.then52 ]
  br i1 %cleanup.dest.slot.0, label %if.end62, label %for.cond36.outer

if.end62:                                         ; preds = %if.end47, %cleanup
  %call48.lcssa = phi %struct.edge_def* [ %call48, %if.end47 ], [ %call48, %cleanup ], !dbg !3913
  %call43.lcssa.lcssa = phi %union.tree_node* [ %call43.lcssa, %if.end47 ], [ %call43.lcssa, %cleanup ], !dbg !3904
  %cmp63 = icmp eq %union.tree_node* %control_name.0.ph.ph, null, !dbg !3929
  br i1 %cmp63, label %land.lhs.true, label %cond.true71, !dbg !3929

land.lhs.true:                                    ; preds = %if.end62
  %var66 = getelementptr inbounds %union.tree_node, %union.tree_node* %call43.lcssa.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3929
  %21 = bitcast i32* %var66 to %union.tree_node**, !dbg !3929
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !3929
  %23 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !3929
  %cmp69 = icmp eq %union.tree_node* %22, %23, !dbg !3929
  br i1 %cmp69, label %cond.end73, label %cond.true71, !dbg !3929

cond.true71:                                      ; preds = %land.lhs.true, %if.end62
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1379, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3929
  br label %cond.end73, !dbg !3929

cond.end73:                                       ; preds = %land.lhs.true, %cond.true71
  call void @llvm.dbg.value(metadata %union.tree_node* %call43.lcssa.lcssa, metadata !3815, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 0) #6, !dbg !3930
  br label %for.cond36.outer.outer, !dbg !3931, !llvm.loop !3911

for.end75:                                        ; preds = %for.cond36
  %control_name.0.ph.ph.lcssa = phi %union.tree_node* [ %control_name.0.ph.ph, %for.cond36 ]
  %exit.0.ph.lcssa = phi %struct.edge_def* [ %exit.0.ph, %for.cond36 ]
  %cmp76 = icmp eq %union.tree_node* %control_name.0.ph.ph.lcssa, null, !dbg !3932
  br i1 %cmp76, label %cond.true78, label %cond.end80, !dbg !3932

cond.true78:                                      ; preds = %for.end75
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1383, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !3932
  br label %cond.end80, !dbg !3932

cond.end80:                                       ; preds = %for.end75, %cond.true78
  %24 = bitcast %struct.gimple_stmt_iterator* %tmp82 to i8*, !dbg !3933
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #7, !dbg !3933
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp82, %struct.basic_block_def* %15) #8, !dbg !3933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %24, i64 24, i1 false), !dbg !3933
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #7, !dbg !3933
  %src83 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit.0.ph.lcssa, i64 0, i32 0, !dbg !3934
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %src83, align 8, !dbg !3934
  %call84 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %25) #6, !dbg !3935
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call84, metadata !3822, metadata !DIExpression()), !dbg !3832
  %call85 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call84) #8, !dbg !3936
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !3824, metadata !DIExpression()), !dbg !3832
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %control_name.0.ph.ph.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3937
  %26 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3937
  %call86 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %26, %union.tree_node* %call85) #6, !dbg !3937
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  %call87 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %call86, i8 zeroext 0, %union.tree_node* null, i8 zeroext 0, i32 1) #6, !dbg !3938
  call void @llvm.dbg.value(metadata %union.tree_node* %call87, metadata !3824, metadata !DIExpression()), !dbg !3832
  %call88 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %control_name.0.ph.ph.lcssa, %union.tree_node* %call87) #6, !dbg !3939
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call88, metadata !3821, metadata !DIExpression()), !dbg !3832
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3823, metadata !DIExpression(DW_OP_deref)), !dbg !3832
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call88, i32 0) #6, !dbg !3940
  %def_stmt90 = getelementptr inbounds %union.tree_node, %union.tree_node* %control_name.0.ph.ph.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3941
  %27 = bitcast %union.tree_node** %def_stmt90 to %union.gimple_statement_d**, !dbg !3941
  store %union.gimple_statement_d* %call88, %union.gimple_statement_d** %27, align 8, !dbg !3942
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !3943
  ret void, !dbg !3943
}

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @initialize_reductions(i8** %slot, i8* %data) #5 !dbg !3944 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !3948, metadata !DIExpression()), !dbg !3959
  call void @llvm.dbg.value(metadata i8* %data, metadata !3949, metadata !DIExpression()), !dbg !3959
  %0 = bitcast i8** %slot to %struct.reduction_info**, !dbg !3960
  %1 = load %struct.reduction_info*, %struct.reduction_info** %0, align 8, !dbg !3960
  call void @llvm.dbg.value(metadata %struct.reduction_info* %1, metadata !3956, metadata !DIExpression()), !dbg !3959
  %2 = bitcast i8* %data to %struct.loop*, !dbg !3961
  call void @llvm.dbg.value(metadata %struct.loop* %2, metadata !3958, metadata !DIExpression()), !dbg !3959
  %reduc_phi = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 1, !dbg !3962
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_phi, align 8, !dbg !3962
  %call = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %3) #8, !dbg !3962
  %call1 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call) #8, !dbg !3962
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3962
  %4 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !3962
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !3953, metadata !DIExpression()), !dbg !3959
  %call3 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !3963
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !3952, metadata !DIExpression()), !dbg !3959
  %call4 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call3) #6, !dbg !3964
  %reduc_stmt = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 0, !dbg !3965
  %5 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !3965
  %call5 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %5) #8, !dbg !3966
  %call6 = tail call %union.tree_node* @build_omp_clause(i32 %call5, i32 5) #6, !dbg !3967
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !3951, metadata !DIExpression()), !dbg !3959
  %reduction_code = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 2, !dbg !3968
  %6 = load i32, i32* %reduction_code, align 8, !dbg !3968
  %subcode = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !3969
  %reduction_code7 = bitcast %union.tree_node** %subcode to i32*, !dbg !3969
  store i32 %6, i32* %reduction_code7, align 8, !dbg !3970
  %7 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !3971
  %call9 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %7) #8, !dbg !3971
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3971
  %8 = bitcast i32* %var to i64*, !dbg !3971
  %9 = load i64, i64* %8, align 8, !dbg !3971
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3972
  %10 = bitcast i40* %ops to i64*, !dbg !3973
  store i64 %9, i64* %10, align 8, !dbg !3973
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3974
  %11 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !3974
  %call13 = tail call %union.tree_node* @omp_reduction_init(%union.tree_node* %call6, %union.tree_node* %11) #6, !dbg !3975
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3950, metadata !DIExpression()), !dbg !3959
  %init14 = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 6, !dbg !3976
  store %union.tree_node* %call13, %union.tree_node** %init14, align 8, !dbg !3977
  %call15 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %2) #6, !dbg !3978
  call void @llvm.dbg.value(metadata %struct.edge_def* %call15, metadata !3955, metadata !DIExpression()), !dbg !3959
  %12 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_phi, align 8, !dbg !3979
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call15, i64 0, i32 6, !dbg !3979
  %13 = load i32, i32* %dest_idx, align 4, !dbg !3979
  %call17 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %12, i32 %13) #8, !dbg !3979
  %call18 = tail call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call17) #8, !dbg !3979
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !3954, metadata !DIExpression()), !dbg !3959
  %14 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_phi, align 8, !dbg !3980
  %call20 = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %2) #6, !dbg !3980
  %dest_idx21 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i64 0, i32 6, !dbg !3980
  %15 = load i32, i32* %dest_idx21, align 4, !dbg !3980
  %call22 = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %14, i32 %15) #8, !dbg !3980
  tail call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %call22, %union.tree_node* %call13) #8, !dbg !3980
  %initial_value = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 4, !dbg !3981
  store %union.tree_node* %call18, %union.tree_node** %initial_value, align 8, !dbg !3982
  ret i32 1, !dbg !3983
}

declare dso_local %struct.edge_def* @single_exit(%struct.loop*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @eliminate_local_variables(%struct.edge_def* %entry1, %struct.edge_def* %exit) unnamed_addr #5 !dbg !3984 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %body = alloca %struct.VEC_basic_block_heap*, align 8
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !3988, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !3989, metadata !DIExpression()), !dbg !3997
  %0 = bitcast %struct.basic_block_def** %bb to i8*, !dbg !3998
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #7, !dbg !3998
  %1 = bitcast %struct.VEC_basic_block_heap** %body to i8*, !dbg !3999
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !3999
  %call = tail call fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 3) #8, !dbg !4000
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call, metadata !3991, metadata !DIExpression()), !dbg !3997
  store %struct.VEC_basic_block_heap* %call, %struct.VEC_basic_block_heap** %body, align 8, !dbg !4001
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4002
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !4002
  %call2 = tail call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @int_tree_map_hash, i32 (i8*, i8*)* nonnull @int_tree_map_eq, void (i8*)* nonnull @free) #6, !dbg !4003
  call void @llvm.dbg.value(metadata %struct.htab* %call2, metadata !3994, metadata !DIExpression()), !dbg !3997
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 0, !dbg !4004
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4004
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !3995, metadata !DIExpression()), !dbg !3997
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 1, !dbg !4005
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4005
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !3996, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %body, metadata !3991, metadata !DIExpression(DW_OP_deref)), !dbg !3997
  call void @gather_blocks_in_sese_region(%struct.basic_block_def* %3, %struct.basic_block_def* %4, %struct.VEC_basic_block_heap** nonnull %body) #6, !dbg !4006
  call void @llvm.dbg.value(metadata i32 0, metadata !3992, metadata !DIExpression()), !dbg !3997
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4007
  br label %for.cond, !dbg !4012

for.cond:                                         ; preds = %for.inc11, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc11 ], !dbg !4013
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3992, metadata !DIExpression()), !dbg !3997
  %6 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %body, align 8, !dbg !4014
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %6, metadata !3991, metadata !DIExpression()), !dbg !3997
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %6, metadata !3991, metadata !DIExpression()), !dbg !3997
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %6, i64 0, i32 0, !dbg !4014
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !3990, metadata !DIExpression(DW_OP_deref)), !dbg !3997
  %call3 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base, i32 %i.0, %struct.basic_block_def** nonnull %bb) #8, !dbg !4014
  %tobool4 = icmp eq i32 %call3, 0, !dbg !4015
  br i1 %tobool4, label %for.end12, label %for.body, !dbg !4015

for.body:                                         ; preds = %for.cond
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4016
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %7, metadata !3990, metadata !DIExpression()), !dbg !3997
  %cmp = icmp ne %struct.basic_block_def* %7, %3, !dbg !4017
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %7, metadata !3990, metadata !DIExpression()), !dbg !3997
  %cmp5 = icmp ne %struct.basic_block_def* %7, %4, !dbg !4018
  %or.cond = and i1 %cmp, %cmp5, !dbg !4019
  br i1 %or.cond, label %if.then, label %for.inc11, !dbg !4019

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !4020
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %7, metadata !3990, metadata !DIExpression()), !dbg !3997
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %7) #8, !dbg !4020
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !4020
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !4020
  br label %for.cond6, !dbg !4021

for.cond6:                                        ; preds = %for.body9, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3993, metadata !DIExpression(DW_OP_deref)), !dbg !3997
  %call7 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4022
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4024
  br i1 %tobool8, label %for.body9, label %for.inc11.loopexit, !dbg !4025

for.body9:                                        ; preds = %for.cond6
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3993, metadata !DIExpression(DW_OP_deref)), !dbg !3997
  %call10 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4026
  call fastcc void @eliminate_local_variables_stmt(%struct.edge_def* %entry1, %union.gimple_statement_d* %call10, %struct.htab* %call2) #8, !dbg !4027
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !3993, metadata !DIExpression(DW_OP_deref)), !dbg !3997
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !4028
  br label %for.cond6, !dbg !4029, !llvm.loop !4030

for.inc11.loopexit:                               ; preds = %for.cond6
  br label %for.inc11, !dbg !4032

for.inc11:                                        ; preds = %for.inc11.loopexit, %for.body
  %inc = add i32 %i.0, 1, !dbg !4032
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3992, metadata !DIExpression()), !dbg !3997
  br label %for.cond, !dbg !4033, !llvm.loop !4034

for.end12:                                        ; preds = %for.cond
  call void @htab_delete(%struct.htab* %call2) #6, !dbg !4036
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %body, metadata !3991, metadata !DIExpression(DW_OP_deref)), !dbg !3997
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %body) #8, !dbg !4037
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !4038
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4038
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #7, !dbg !4038
  ret void, !dbg !4038
}

; Function Attrs: nounwind uwtable
define internal fastcc void @separate_decls_in_region(%struct.edge_def* %entry1, %struct.edge_def* %exit, %struct.htab* %reduction_list, %union.tree_node** %arg_struct, %union.tree_node** %new_arg_struct, %struct.clsn_data* %ld_st_data) unnamed_addr #5 !dbg !4039 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %clsn_data = alloca %struct.clsn_data, align 8
  %body = alloca %struct.VEC_basic_block_heap*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp15 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp46 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !4043, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !4044, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %struct.htab* %reduction_list, metadata !4045, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %union.tree_node** %arg_struct, metadata !4046, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %union.tree_node** %new_arg_struct, metadata !4047, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %struct.clsn_data* %ld_st_data, metadata !4048, metadata !DIExpression()), !dbg !4082
  %call = tail call %struct.basic_block_def* @split_edge(%struct.edge_def* %entry1) #6, !dbg !4083
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4049, metadata !DIExpression()), !dbg !4082
  %call2 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %call) #8, !dbg !4084
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call2, metadata !4050, metadata !DIExpression()), !dbg !4082
  %call3 = tail call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @name_to_copy_elt_hash, i32 (i8*, i8*)* nonnull @name_to_copy_elt_eq, void (i8*)* nonnull @free) #6, !dbg !4085
  call void @llvm.dbg.value(metadata %struct.htab* %call3, metadata !4051, metadata !DIExpression()), !dbg !4082
  %call4 = tail call %struct.htab* @htab_create(i64 10, i32 (i8*)* nonnull @int_tree_map_hash, i32 (i8*, i8*)* nonnull @int_tree_map_eq, void (i8*)* nonnull @free) #6, !dbg !4086
  call void @llvm.dbg.value(metadata %struct.htab* %call4, metadata !4052, metadata !DIExpression()), !dbg !4082
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4087
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4087
  %1 = bitcast %struct.clsn_data* %clsn_data to i8*, !dbg !4088
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #7, !dbg !4088
  %2 = bitcast %struct.VEC_basic_block_heap** %body to i8*, !dbg !4089
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4089
  %call5 = tail call fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 3) #8, !dbg !4090
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %call5, metadata !4059, metadata !DIExpression()), !dbg !4082
  store %struct.VEC_basic_block_heap* %call5, %struct.VEC_basic_block_heap** %body, align 8, !dbg !4091
  %3 = bitcast %struct.basic_block_def** %bb to i8*, !dbg !4092
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #7, !dbg !4092
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4061, metadata !DIExpression()), !dbg !4082
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 1, !dbg !4093
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4093
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %4, metadata !4062, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i8 0, metadata !4063, metadata !DIExpression()), !dbg !4082
  %call6 = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %call) #8, !dbg !4094
  call void @llvm.dbg.value(metadata %struct.edge_def* %call6, metadata !4043, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %body, metadata !4059, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  call void @gather_blocks_in_sese_region(%struct.basic_block_def* %call, %struct.basic_block_def* %4, %struct.VEC_basic_block_heap** nonnull %body) #6, !dbg !4095
  call void @llvm.dbg.value(metadata i32 0, metadata !4053, metadata !DIExpression()), !dbg !4082
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4096
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp15 to i8*, !dbg !4098
  br label %for.cond, !dbg !4099

for.cond:                                         ; preds = %for.inc28, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc28 ], !dbg !4100
  %has_debug_stmt.0 = phi i8 [ 0, %entry ], [ %has_debug_stmt.3, %for.inc28 ], !dbg !4101
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.0, metadata !4063, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4053, metadata !DIExpression()), !dbg !4082
  %7 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %body, align 8, !dbg !4102
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %7, metadata !4059, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %7, metadata !4059, metadata !DIExpression()), !dbg !4082
  %base = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %7, i64 0, i32 0, !dbg !4102
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !4060, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  %call7 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base, i32 %i.0, %struct.basic_block_def** nonnull %bb) #8, !dbg !4102
  %tobool8 = icmp eq i32 %call7, 0, !dbg !4103
  br i1 %tobool8, label %for.end29, label %for.body, !dbg !4103

for.body:                                         ; preds = %for.cond
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4104
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !4060, metadata !DIExpression()), !dbg !4082
  %cmp = icmp ne %struct.basic_block_def* %8, %call, !dbg !4105
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !4060, metadata !DIExpression()), !dbg !4082
  %cmp9 = icmp ne %struct.basic_block_def* %8, %4, !dbg !4106
  %or.cond = and i1 %cmp, %cmp9, !dbg !4107
  br i1 %or.cond, label %if.then, label %for.inc28, !dbg !4107

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !4108
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !4060, metadata !DIExpression()), !dbg !4082
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %8) #6, !dbg !4108
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !4108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !4108
  br label %for.cond10, !dbg !4109

for.cond10:                                       ; preds = %for.body13, %if.then
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  %call11 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4110
  %tobool12 = icmp eq i8 %call11, 0, !dbg !4112
  br i1 %tobool12, label %for.body13, label %for.end, !dbg !4113

for.body13:                                       ; preds = %for.cond10
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  %call14 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4114
  call fastcc void @separate_decls_in_region_stmt(%struct.edge_def* %call6, %struct.edge_def* %exit, %union.gimple_statement_d* %call14, %struct.htab* %call3, %struct.htab* %call4) #8, !dbg !4115
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !4116
  br label %for.cond10, !dbg !4117, !llvm.loop !4118

for.end:                                          ; preds = %for.cond10
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7, !dbg !4120
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4121
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %9, metadata !4060, metadata !DIExpression()), !dbg !4082
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp15, %struct.basic_block_def* %9) #8, !dbg !4120
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !4120
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7, !dbg !4120
  br label %for.cond16, !dbg !4122

for.cond16:                                       ; preds = %for.inc25, %for.end
  %has_debug_stmt.1 = phi i8 [ %has_debug_stmt.0, %for.end ], [ %has_debug_stmt.2, %for.inc25 ], !dbg !4082
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.1, metadata !4063, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  %call17 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4123
  %tobool18 = icmp eq i8 %call17, 0, !dbg !4124
  br i1 %tobool18, label %for.body20, label %for.inc28.loopexit, !dbg !4125

for.body20:                                       ; preds = %for.cond16
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  %call21 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4126
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call21, metadata !4064, metadata !DIExpression()), !dbg !4127
  %call22 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call21) #8, !dbg !4128
  %tobool23 = icmp eq i8 %call22, 0, !dbg !4128
  br i1 %tobool23, label %if.else, label %for.inc25, !dbg !4130

if.else:                                          ; preds = %for.body20
  call fastcc void @separate_decls_in_region_stmt(%struct.edge_def* %call6, %struct.edge_def* %exit, %union.gimple_statement_d* %call21, %struct.htab* %call3, %struct.htab* %call4) #8, !dbg !4131
  br label %for.inc25

for.inc25:                                        ; preds = %for.body20, %if.else
  %has_debug_stmt.2 = phi i8 [ %has_debug_stmt.1, %if.else ], [ 1, %for.body20 ], !dbg !4082
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.2, metadata !4063, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !4132
  br label %for.cond16, !dbg !4133, !llvm.loop !4134

for.inc28.loopexit:                               ; preds = %for.cond16
  %has_debug_stmt.1.lcssa = phi i8 [ %has_debug_stmt.1, %for.cond16 ], !dbg !4082
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.1.lcssa, metadata !4063, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.1.lcssa, metadata !4063, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.1.lcssa, metadata !4063, metadata !DIExpression()), !dbg !4082
  br label %for.inc28, !dbg !4136

for.inc28:                                        ; preds = %for.inc28.loopexit, %for.body
  %has_debug_stmt.3 = phi i8 [ %has_debug_stmt.0, %for.body ], [ %has_debug_stmt.1.lcssa, %for.inc28.loopexit ], !dbg !4101
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.3, metadata !4063, metadata !DIExpression()), !dbg !4082
  %inc = add i32 %i.0, 1, !dbg !4136
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4053, metadata !DIExpression()), !dbg !4082
  br label %for.cond, !dbg !4137, !llvm.loop !4138

for.end29:                                        ; preds = %for.cond
  %has_debug_stmt.0.lcssa = phi i8 [ %has_debug_stmt.0, %for.cond ], !dbg !4101
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.0.lcssa, metadata !4063, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.0.lcssa, metadata !4063, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata i8 %has_debug_stmt.0.lcssa, metadata !4063, metadata !DIExpression()), !dbg !4082
  %tobool30 = icmp eq i8 %has_debug_stmt.0.lcssa, 0, !dbg !4140
  br i1 %tobool30, label %if.end67, label %for.cond32.preheader, !dbg !4141

for.cond32.preheader:                             ; preds = %for.end29
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp46 to i8*, !dbg !4142
  br label %for.cond32, !dbg !4143

for.cond32:                                       ; preds = %for.cond32.preheader, %for.inc64
  %i.1 = phi i32 [ %inc65, %for.inc64 ], [ 0, %for.cond32.preheader ], !dbg !4144
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !4053, metadata !DIExpression()), !dbg !4082
  %11 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %body, align 8, !dbg !4145
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %11, metadata !4059, metadata !DIExpression()), !dbg !4082
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap* %11, metadata !4059, metadata !DIExpression()), !dbg !4082
  %base35 = getelementptr inbounds %struct.VEC_basic_block_heap, %struct.VEC_basic_block_heap* %11, i64 0, i32 0, !dbg !4145
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %bb, metadata !4060, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  %call39 = call fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %base35, i32 %i.1, %struct.basic_block_def** nonnull %bb) #8, !dbg !4145
  %tobool40 = icmp eq i32 %call39, 0, !dbg !4143
  br i1 %tobool40, label %if.end67.loopexit, label %for.body41, !dbg !4143

for.body41:                                       ; preds = %for.cond32
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4146
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !4060, metadata !DIExpression()), !dbg !4082
  %cmp42 = icmp ne %struct.basic_block_def* %12, %call, !dbg !4147
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !4060, metadata !DIExpression()), !dbg !4082
  %cmp44 = icmp ne %struct.basic_block_def* %12, %4, !dbg !4148
  %or.cond1 = and i1 %cmp42, %cmp44, !dbg !4149
  br i1 %or.cond1, label %if.then45, label %for.inc64, !dbg !4149

if.then45:                                        ; preds = %for.body41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7, !dbg !4150
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !4060, metadata !DIExpression()), !dbg !4082
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp46, %struct.basic_block_def* %12) #8, !dbg !4150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !4150
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7, !dbg !4150
  br label %for.cond47, !dbg !4151

for.cond47:                                       ; preds = %cleanup, %if.then45
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  %call48 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4152
  %tobool49 = icmp eq i8 %call48, 0, !dbg !4153
  br i1 %tobool49, label %for.body51, label %for.inc64.loopexit, !dbg !4154

for.body51:                                       ; preds = %for.cond47
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  %call53 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4155
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call53, metadata !4073, metadata !DIExpression()), !dbg !4156
  %call54 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %call53) #8, !dbg !4157
  %tobool55 = icmp eq i8 %call54, 0, !dbg !4157
  br i1 %tobool55, label %if.end61, label %if.then56, !dbg !4159

if.then56:                                        ; preds = %for.body51
  %call57 = call fastcc zeroext i8 @separate_decls_in_region_debug_bind(%union.gimple_statement_d* %call53, %struct.htab* %call3, %struct.htab* %call4) #8, !dbg !4160
  %tobool58 = icmp eq i8 %call57, 0, !dbg !4160
  br i1 %tobool58, label %if.end61, label %if.then59, !dbg !4163

if.then59:                                        ; preds = %if.then56
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !4164
  br label %cleanup, !dbg !4166, !llvm.loop !4167

if.end61:                                         ; preds = %if.then56, %for.body51
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4057, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !4169
  br label %cleanup, !dbg !4170

cleanup:                                          ; preds = %if.end61, %if.then59
  br label %for.cond47

for.inc64.loopexit:                               ; preds = %for.cond47
  br label %for.inc64, !dbg !4171

for.inc64:                                        ; preds = %for.inc64.loopexit, %for.body41
  %inc65 = add i32 %i.1, 1, !dbg !4171
  call void @llvm.dbg.value(metadata i32 %inc65, metadata !4053, metadata !DIExpression()), !dbg !4082
  br label %for.cond32, !dbg !4172, !llvm.loop !4173

if.end67.loopexit:                                ; preds = %for.cond32
  br label %if.end67, !dbg !4175

if.end67:                                         ; preds = %if.end67.loopexit, %for.end29
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %body, metadata !4059, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  call fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** nonnull %body) #8, !dbg !4175
  %call68 = call i64 @htab_elements(%struct.htab* %call3) #6, !dbg !4176
  %cmp69 = icmp eq i64 %call68, 0, !dbg !4178
  br i1 %cmp69, label %land.lhs.true70, label %if.else74, !dbg !4179

land.lhs.true70:                                  ; preds = %if.end67
  %call71 = call i64 @htab_elements(%struct.htab* %reduction_list) #6, !dbg !4180
  %cmp72 = icmp eq i64 %call71, 0, !dbg !4181
  br i1 %cmp72, label %if.then73, label %if.else74, !dbg !4182

if.then73:                                        ; preds = %land.lhs.true70
  store %union.tree_node* null, %union.tree_node** %arg_struct, align 8, !dbg !4183
  store %union.tree_node* null, %union.tree_node** %new_arg_struct, align 8, !dbg !4185
  br label %if.end103, !dbg !4186

if.else74:                                        ; preds = %land.lhs.true70, %if.end67
  %13 = load %union.tree_node* (i32)*, %union.tree_node* (i32)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 0), align 8, !dbg !4187
  %call75 = call %union.tree_node* %13(i32 16) #6, !dbg !4189
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !4054, metadata !DIExpression()), !dbg !4082
  %call76 = call %union.tree_node* @create_tmp_var_name(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !4190
  %call77 = call %union.tree_node* @build_decl_stat(i32 1, i32 35, %union.tree_node* %call76, %union.tree_node* %call75) #6, !dbg !4190
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !4055, metadata !DIExpression()), !dbg !4082
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !4191
  store %union.tree_node* %call77, %union.tree_node** %14, align 8, !dbg !4192
  %15 = bitcast %union.tree_node* %call75 to i8*, !dbg !4193
  call void @htab_traverse(%struct.htab* %call3, i32 (i8**, i8*)* nonnull @add_field_for_name, i8* %15) #6, !dbg !4194
  %tobool79 = icmp eq %struct.htab* %reduction_list, null, !dbg !4195
  br i1 %tobool79, label %if.end84, label %land.lhs.true80, !dbg !4197

land.lhs.true80:                                  ; preds = %if.else74
  %call81 = call i64 @htab_elements(%struct.htab* nonnull %reduction_list) #6, !dbg !4198
  %cmp82 = icmp eq i64 %call81, 0, !dbg !4199
  br i1 %cmp82, label %if.end84, label %if.then83, !dbg !4200

if.then83:                                        ; preds = %land.lhs.true80
  call void @htab_traverse(%struct.htab* nonnull %reduction_list, i32 (i8**, i8*)* nonnull @add_field_for_reduction, i8* %15) #6, !dbg !4201
  br label %if.end84, !dbg !4203

if.end84:                                         ; preds = %land.lhs.true80, %if.else74, %if.then83
  call void @layout_type(%union.tree_node* %call75) #6, !dbg !4204
  %call85 = call %union.tree_node* @create_tmp_var(%union.tree_node* %call75, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !4205
  store %union.tree_node* %call85, %union.tree_node** %arg_struct, align 8, !dbg !4206
  %call86 = call zeroext i8 @add_referenced_var(%union.tree_node* %call85) #6, !dbg !4207
  %call87 = call %union.tree_node* @build_pointer_type(%union.tree_node* %call75) #6, !dbg !4208
  %call88 = call %union.tree_node* @create_tmp_var(%union.tree_node* %call87, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !4209
  call void @llvm.dbg.value(metadata %union.tree_node* %call88, metadata !4056, metadata !DIExpression()), !dbg !4082
  %call89 = call zeroext i8 @add_referenced_var(%union.tree_node* %call88) #6, !dbg !4210
  %call90 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call88, %union.gimple_statement_d* null) #8, !dbg !4211
  store %union.tree_node* %call90, %union.tree_node** %new_arg_struct, align 8, !dbg !4212
  %16 = bitcast %union.tree_node** %arg_struct to i64*, !dbg !4213
  %17 = load i64, i64* %16, align 8, !dbg !4213
  %18 = bitcast %struct.clsn_data* %ld_st_data to i64*, !dbg !4214
  store i64 %17, i64* %18, align 8, !dbg !4214
  %19 = bitcast %union.tree_node** %new_arg_struct to i64*, !dbg !4215
  %20 = load i64, i64* %19, align 8, !dbg !4215
  %load = getelementptr inbounds %struct.clsn_data, %struct.clsn_data* %ld_st_data, i64 0, i32 1, !dbg !4216
  %21 = bitcast %union.tree_node** %load to i64*, !dbg !4217
  store i64 %20, i64* %21, align 8, !dbg !4217
  %store_bb = getelementptr inbounds %struct.clsn_data, %struct.clsn_data* %ld_st_data, i64 0, i32 2, !dbg !4218
  store %struct.basic_block_def* %call2, %struct.basic_block_def** %store_bb, align 8, !dbg !4219
  %load_bb = getelementptr inbounds %struct.clsn_data, %struct.clsn_data* %ld_st_data, i64 0, i32 3, !dbg !4220
  store %struct.basic_block_def* %call, %struct.basic_block_def** %load_bb, align 8, !dbg !4221
  %22 = bitcast %struct.clsn_data* %ld_st_data to i8*, !dbg !4222
  call void @htab_traverse(%struct.htab* %call3, i32 (i8**, i8*)* nonnull @create_loads_and_stores_for_name, i8* %22) #6, !dbg !4223
  br i1 %tobool79, label %if.end103, label %land.lhs.true92, !dbg !4224

land.lhs.true92:                                  ; preds = %if.end84
  %call93 = call i64 @htab_elements(%struct.htab* nonnull %reduction_list) #6, !dbg !4226
  %cmp94 = icmp eq i64 %call93, 0, !dbg !4227
  br i1 %cmp94, label %if.end103, label %if.then95, !dbg !4228

if.then95:                                        ; preds = %land.lhs.true92
  call void @htab_traverse(%struct.htab* nonnull %reduction_list, i32 (i8**, i8*)* nonnull @create_stores_for_reduction, i8* %22) #6, !dbg !4229
  %call96 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call88, %union.gimple_statement_d* null) #8, !dbg !4231
  %load97 = getelementptr inbounds %struct.clsn_data, %struct.clsn_data* %clsn_data, i64 0, i32 1, !dbg !4232
  store %union.tree_node* %call96, %union.tree_node** %load97, align 8, !dbg !4233
  %23 = bitcast %struct.basic_block_def** %dest to i64*, !dbg !4234
  %24 = load i64, i64* %23, align 8, !dbg !4234
  %load_bb99 = getelementptr inbounds %struct.clsn_data, %struct.clsn_data* %clsn_data, i64 0, i32 3, !dbg !4235
  %25 = bitcast %struct.basic_block_def** %load_bb99 to i64*, !dbg !4236
  store i64 %24, i64* %25, align 8, !dbg !4236
  %26 = load i64, i64* %18, align 8, !dbg !4237
  %27 = bitcast %struct.clsn_data* %clsn_data to i64*, !dbg !4238
  store i64 %26, i64* %27, align 8, !dbg !4238
  call void @llvm.dbg.value(metadata %struct.clsn_data* %clsn_data, metadata !4058, metadata !DIExpression(DW_OP_deref)), !dbg !4082
  call fastcc void @create_final_loads_for_reduction(%struct.htab* nonnull %reduction_list, %struct.clsn_data* nonnull %clsn_data) #8, !dbg !4239
  br label %if.end103, !dbg !4240

if.end103:                                        ; preds = %land.lhs.true92, %if.end84, %if.then95, %if.then73
  call void @htab_delete(%struct.htab* %call4) #6, !dbg !4241
  call void @htab_delete(%struct.htab* %call3) #6, !dbg !4242
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #7, !dbg !4243
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4243
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #7, !dbg !4243
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4243
  ret void, !dbg !4243
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @create_parallel_loop(%struct.loop* %loop, %union.tree_node* %loop_fn, %union.tree_node* %data, %union.tree_node* %new_data, i32 %n_threads) unnamed_addr #5 !dbg !4244 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %exit = alloca %struct.edge_def*, align 8
  %nexit = alloca %struct.edge_def*, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp5 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp16 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp38 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp65 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp96 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp99 = alloca %struct.gimple_stmt_iterator, align 8
  %tmp104 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4248, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %union.tree_node* %loop_fn, metadata !4249, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %union.tree_node* %data, metadata !4250, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %union.tree_node* %new_data, metadata !4251, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata i32 %n_threads, metadata !4252, metadata !DIExpression()), !dbg !4280
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !4281
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4281
  %1 = bitcast %struct.edge_def** %exit to i8*, !dbg !4282
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4282
  %2 = bitcast %struct.edge_def** %nexit to i8*, !dbg !4282
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4282
  %call = tail call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !4283
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !4284
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4284
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %3, metadata !4254, metadata !DIExpression()), !dbg !4280
  %call1 = tail call fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %3) #8, !dbg !4285
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call1, metadata !4255, metadata !DIExpression()), !dbg !4280
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4286
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7, !dbg !4286
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call1) #8, !dbg !4286
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !4286
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7, !dbg !4286
  %call2 = call %union.tree_node* @build_omp_clause(i32 1, i32 9) #6, !dbg !4287
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4258, metadata !DIExpression()), !dbg !4280
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !4288
  %conv = zext i32 %n_threads to i64, !dbg !4289
  %call3 = call %union.tree_node* @build_int_cst(%union.tree_node* %5, i64 %conv) #6, !dbg !4290
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4291
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !4291
  store %union.tree_node* %call3, %union.tree_node** %arrayidx, align 8, !dbg !4292
  %call4 = call %union.gimple_statement_d* @gimple_build_omp_parallel(%struct.gimple_seq_d* null, %union.tree_node* %call2, %union.tree_node* %loop_fn, %union.tree_node* %data) #6, !dbg !4293
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call4, metadata !4260, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call4, i32 0) #6, !dbg !4294
  %tobool = icmp eq %union.tree_node* %data, null, !dbg !4295
  br i1 %tobool, label %if.end, label %if.then, !dbg !4297

if.then:                                          ; preds = %entry
  %6 = bitcast %struct.gimple_stmt_iterator* %tmp5 to i8*, !dbg !4298
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7, !dbg !4298
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp5, %struct.basic_block_def* %3) #8, !dbg !4298
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !4298
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7, !dbg !4298
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %loop_fn, i64 0, i32 0, i32 0, i32 2, !dbg !4300
  %7 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !4300
  %call6 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %7, %union.gimple_statement_d* null) #8, !dbg !4301
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !4259, metadata !DIExpression()), !dbg !4280
  %call7 = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* nonnull %data) #6, !dbg !4302
  %call8 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call6, %union.tree_node* %call7) #6, !dbg !4302
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call8, metadata !4260, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call8, i32 1) #6, !dbg !4303
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4304
  %8 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !4304
  store %union.gimple_statement_d* %call8, %union.gimple_statement_d** %8, align 8, !dbg !4305
  %type9 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_data, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4306
  %9 = load %union.tree_node*, %union.tree_node** %type9, align 8, !dbg !4306
  %call10 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %9, %union.tree_node* %call6) #6, !dbg !4306
  %call11 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %new_data, %union.tree_node* %call10) #6, !dbg !4306
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !4260, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call11, i32 1) #6, !dbg !4307
  %def_stmt13 = getelementptr inbounds %union.tree_node, %union.tree_node* %new_data, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4308
  %10 = bitcast %union.tree_node** %def_stmt13 to %union.gimple_statement_d**, !dbg !4308
  store %union.gimple_statement_d* %call11, %union.gimple_statement_d** %10, align 8, !dbg !4309
  br label %if.end, !dbg !4310

if.end:                                           ; preds = %entry, %if.then
  %call14 = call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #6, !dbg !4311
  %call15 = call %struct.basic_block_def* @split_loop_exit_edge(%struct.edge_def* %call14) #6, !dbg !4312
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call15, metadata !4254, metadata !DIExpression()), !dbg !4280
  %11 = bitcast %struct.gimple_stmt_iterator* %tmp16 to i8*, !dbg !4313
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7, !dbg !4313
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp16, %struct.basic_block_def* %call15) #8, !dbg !4313
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !4313
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7, !dbg !4313
  %call17 = call %union.gimple_statement_d* @gimple_build_omp_return(i8 zeroext 0) #6, !dbg !4314
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call17, i32 0) #6, !dbg !4315
  %header = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 2, !dbg !4316
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4316
  %call18 = call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #6, !dbg !4316
  %src19 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call18, i64 0, i32 0, !dbg !4316
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %src19, align 8, !dbg !4316
  %cmp = icmp eq %struct.basic_block_def* %12, %13, !dbg !4316
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4316

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1449, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4316
  br label %cond.end, !dbg !4316

cond.end:                                         ; preds = %if.end, %cond.true
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4317
  %call22 = call %union.gimple_statement_d* @last_stmt(%struct.basic_block_def* %14) #6, !dbg !4318
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call22, metadata !4263, metadata !DIExpression()), !dbg !4280
  %call23 = call fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %call22) #8, !dbg !4319
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !4264, metadata !DIExpression()), !dbg !4280
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4320
  %15 = bitcast i32* %var to %union.tree_node**, !dbg !4320
  %16 = load %union.tree_node*, %union.tree_node** %15, align 8, !dbg !4320
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4268, metadata !DIExpression()), !dbg !4280
  %def_stmt26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4321
  %17 = bitcast %union.tree_node** %def_stmt26 to %union.gimple_statement_d**, !dbg !4321
  %18 = load %union.gimple_statement_d*, %union.gimple_statement_d** %17, align 8, !dbg !4321
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %18, metadata !4262, metadata !DIExpression()), !dbg !4280
  %call27 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !4322
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call27, i64 0, i32 6, !dbg !4322
  %19 = load i32, i32* %dest_idx, align 4, !dbg !4322
  %call28 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %18, i32 %19) #8, !dbg !4322
  %call29 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call28) #8, !dbg !4322
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4265, metadata !DIExpression()), !dbg !4280
  %call30 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %16, %union.gimple_statement_d* null) #8, !dbg !4323
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !4266, metadata !DIExpression()), !dbg !4280
  %call31 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !4324
  %dest_idx32 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call31, i64 0, i32 6, !dbg !4324
  %20 = load i32, i32* %dest_idx32, align 4, !dbg !4324
  %call33 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %18, i32 %20) #8, !dbg !4324
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %call33, %union.tree_node* %call30) #8, !dbg !4324
  %call34 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %loop) #6, !dbg !4325
  %dest_idx35 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call34, i64 0, i32 6, !dbg !4325
  %21 = load i32, i32* %dest_idx35, align 4, !dbg !4325
  %call36 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %18, i32 %21) #8, !dbg !4325
  %call37 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call36) #8, !dbg !4325
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !4267, metadata !DIExpression()), !dbg !4280
  %22 = bitcast %struct.gimple_stmt_iterator* %tmp38 to i8*, !dbg !4326
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #7, !dbg !4326
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !4327
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !4327
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp38, %struct.basic_block_def* %23) #8, !dbg !4326
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %22, i64 24, i1 false), !dbg !4326
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #7, !dbg !4326
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  %call39 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4328
  %def_stmt41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4328
  %24 = bitcast %union.tree_node** %def_stmt41 to %union.gimple_statement_d**, !dbg !4328
  %25 = load %union.gimple_statement_d*, %union.gimple_statement_d** %24, align 8, !dbg !4328
  %cmp42 = icmp eq %union.gimple_statement_d* %call39, %25, !dbg !4328
  br i1 %cmp42, label %cond.end46, label %cond.true44, !dbg !4328

cond.true44:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1462, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4328
  br label %cond.end46, !dbg !4328

cond.end46:                                       ; preds = %cond.end, %cond.true44
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @gsi_remove(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 1) #6, !dbg !4329
  %call48 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !4330
  %call49 = call %struct.basic_block_def* @split_edge(%struct.edge_def* %call48) #6, !dbg !4331
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call49, metadata !4256, metadata !DIExpression()), !dbg !4280
  %call50 = call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #6, !dbg !4332
  %call51 = call %struct.basic_block_def* @split_loop_exit_edge(%struct.edge_def* %call50) #6, !dbg !4333
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call51, metadata !4257, metadata !DIExpression()), !dbg !4280
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %header, align 8, !dbg !4334
  call void @llvm.dbg.value(metadata %struct.edge_def** %exit, metadata !4270, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.edge_def** %nexit, metadata !4271, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @extract_true_false_edges_from_block(%struct.basic_block_def* %26, %struct.edge_def** nonnull %nexit, %struct.edge_def** nonnull %exit) #6, !dbg !4335
  %27 = load %struct.edge_def*, %struct.edge_def** %exit, align 8, !dbg !4336
  call void @llvm.dbg.value(metadata %struct.edge_def* %27, metadata !4270, metadata !DIExpression()), !dbg !4280
  %call53 = call %struct.edge_def* @single_dom_exit(%struct.loop* %loop) #6, !dbg !4336
  %cmp54 = icmp eq %struct.edge_def* %27, %call53, !dbg !4336
  br i1 %cmp54, label %cond.end58, label %cond.true56, !dbg !4336

cond.true56:                                      ; preds = %cond.end46
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 1469, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4336
  br label %cond.end58, !dbg !4336

cond.end58:                                       ; preds = %cond.end46, %cond.true56
  %call60 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %call49, %struct.basic_block_def* %call51, i32 0) #6, !dbg !4337
  call void @llvm.dbg.value(metadata %struct.edge_def* %call60, metadata !4272, metadata !DIExpression()), !dbg !4280
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !4338
  %call62 = call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %28) #8, !dbg !4339
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call62, i64 0, i32 7, !dbg !4340
  store i32 0, i32* %flags, align 8, !dbg !4341
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !4342
  %call64 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %29, %struct.basic_block_def* %call51, i32 1) #6, !dbg !4343
  call void @llvm.dbg.value(metadata %struct.edge_def* %call64, metadata !4273, metadata !DIExpression()), !dbg !4280
  %30 = bitcast %struct.gimple_stmt_iterator* %tmp65 to i8*, !dbg !4344
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #7, !dbg !4344
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp65, %struct.basic_block_def* %call51) #6, !dbg !4344
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %30, i64 24, i1 false), !dbg !4344
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #7, !dbg !4344
  br label %for.cond, !dbg !4345

for.cond:                                         ; preds = %for.body, %cond.end58
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  %call66 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4346
  %tobool67 = icmp eq i8 %call66, 0, !dbg !4347
  br i1 %tobool67, label %for.body, label %for.end, !dbg !4348

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  %call68 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !4349
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call68, metadata !4262, metadata !DIExpression()), !dbg !4280
  %31 = load %struct.edge_def*, %struct.edge_def** %exit, align 8, !dbg !4350
  call void @llvm.dbg.value(metadata %struct.edge_def* %31, metadata !4270, metadata !DIExpression()), !dbg !4280
  %dest_idx69 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %31, i64 0, i32 6, !dbg !4350
  %32 = load i32, i32* %dest_idx69, align 4, !dbg !4350
  %call70 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %call68, i32 %32) #8, !dbg !4350
  %call71 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call70) #8, !dbg !4350
  %def_stmt73 = getelementptr inbounds %union.tree_node, %union.tree_node* %call71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4350
  %33 = bitcast %union.tree_node** %def_stmt73 to %union.gimple_statement_d**, !dbg !4350
  %34 = load %union.gimple_statement_d*, %union.gimple_statement_d** %33, align 8, !dbg !4350
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %34, metadata !4260, metadata !DIExpression()), !dbg !4280
  %call74 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !4351
  %dest_idx75 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call74, i64 0, i32 6, !dbg !4351
  %35 = load i32, i32* %dest_idx75, align 4, !dbg !4351
  %call76 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %34, i32 %35) #8, !dbg !4351
  %call77 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call76) #8, !dbg !4351
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !4279, metadata !DIExpression()), !dbg !4352
  %call78 = call %struct.edge_def* @loop_preheader_edge(%struct.loop* %loop) #6, !dbg !4353
  %call79 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %34, %struct.edge_def* %call78) #8, !dbg !4354
  call void @llvm.dbg.value(metadata i32 %call79, metadata !4275, metadata !DIExpression()), !dbg !4352
  call void @add_phi_arg(%union.gimple_statement_d* %call68, %union.tree_node* %call77, %struct.edge_def* %call60, i32 %call79) #6, !dbg !4355
  %call80 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %loop) #6, !dbg !4356
  %dest_idx81 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call80, i64 0, i32 6, !dbg !4356
  %36 = load i32, i32* %dest_idx81, align 4, !dbg !4356
  %call82 = call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %34, i32 %36) #8, !dbg !4356
  %call83 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %call82) #8, !dbg !4356
  call void @llvm.dbg.value(metadata %union.tree_node* %call83, metadata !4279, metadata !DIExpression()), !dbg !4352
  %call84 = call %struct.edge_def* @loop_latch_edge(%struct.loop* %loop) #6, !dbg !4357
  %call85 = call fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %34, %struct.edge_def* %call84) #8, !dbg !4358
  call void @llvm.dbg.value(metadata i32 %call85, metadata !4275, metadata !DIExpression()), !dbg !4352
  call void @add_phi_arg(%union.gimple_statement_d* %call68, %union.tree_node* %call83, %struct.edge_def* %call64, i32 %call85) #6, !dbg !4359
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !4360
  br label %for.cond, !dbg !4361, !llvm.loop !4362

for.end:                                          ; preds = %for.cond
  %37 = load %struct.edge_def*, %struct.edge_def** %exit, align 8, !dbg !4364
  call void @llvm.dbg.value(metadata %struct.edge_def* %37, metadata !4270, metadata !DIExpression()), !dbg !4280
  %38 = load %struct.edge_def*, %struct.edge_def** %nexit, align 8, !dbg !4365
  call void @llvm.dbg.value(metadata %struct.edge_def* %38, metadata !4271, metadata !DIExpression()), !dbg !4280
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %38, i64 0, i32 1, !dbg !4366
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4366
  %call86 = call %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def* %37, %struct.basic_block_def* %39) #6, !dbg !4367
  call void @llvm.dbg.value(metadata %struct.edge_def* %call86, metadata !4274, metadata !DIExpression()), !dbg !4280
  %g = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call86, i64 0, i32 2, i32 0, !dbg !4368
  store %struct.gimple_seq_d* null, %struct.gimple_seq_d** %g, align 8, !dbg !4369
  call fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %call22, %union.tree_node* %16) #8, !dbg !4370
  %type88 = getelementptr inbounds %union.tree_node, %union.tree_node* %call23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4371
  %40 = load %union.tree_node*, %union.tree_node** %type88, align 8, !dbg !4371
  call void @llvm.dbg.value(metadata %union.tree_node* %40, metadata !4269, metadata !DIExpression()), !dbg !4280
  %call89 = call %union.tree_node* @build_omp_clause(i32 1, i32 10) #6, !dbg !4372
  call void @llvm.dbg.value(metadata %union.tree_node* %call89, metadata !4258, metadata !DIExpression()), !dbg !4280
  %subcode = getelementptr inbounds %union.tree_node, %union.tree_node* %call89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4373
  %schedule_kind = bitcast %union.tree_node** %subcode to i32*, !dbg !4373
  store i32 0, i32* %schedule_kind, align 8, !dbg !4374
  %call91 = call %union.gimple_statement_d* @gimple_build_omp_for(%struct.gimple_seq_d* null, %union.tree_node* %call89, i64 1, %struct.gimple_seq_d* null) #6, !dbg !4375
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call91, metadata !4261, metadata !DIExpression()), !dbg !4280
  call fastcc void @gimple_omp_for_set_index(%union.gimple_statement_d* %call91, i64 0, %union.tree_node* %call30) #8, !dbg !4376
  call fastcc void @gimple_omp_for_set_initial(%union.gimple_statement_d* %call91, i64 0, %union.tree_node* %call29) #8, !dbg !4377
  %call92 = call fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %call22) #8, !dbg !4378
  call fastcc void @gimple_omp_for_set_final(%union.gimple_statement_d* %call91, i64 0, %union.tree_node* %call92) #8, !dbg !4379
  %call93 = call fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %call22) #8, !dbg !4380
  call fastcc void @gimple_omp_for_set_cond(%union.gimple_statement_d* %call91, i64 0, i32 %call93) #8, !dbg !4381
  %call94 = call %union.tree_node* @build_int_cst(%union.tree_node* %40, i64 1) #6, !dbg !4382
  %call95 = call %union.tree_node* @build2_stat(i32 63, %union.tree_node* %40, %union.tree_node* %16, %union.tree_node* %call94) #6, !dbg !4382
  call fastcc void @gimple_omp_for_set_incr(%union.gimple_statement_d* %call91, i64 0, %union.tree_node* %call95) #8, !dbg !4383
  %41 = bitcast %struct.gimple_stmt_iterator* %tmp96 to i8*, !dbg !4384
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #7, !dbg !4384
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp96, %struct.basic_block_def* %call49) #8, !dbg !4384
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %41, i64 24, i1 false), !dbg !4384
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #7, !dbg !4384
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call91, i32 0) #6, !dbg !4385
  %def_stmt98 = getelementptr inbounds %union.tree_node, %union.tree_node* %call30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4386
  %42 = bitcast %union.tree_node** %def_stmt98 to %union.gimple_statement_d**, !dbg !4386
  store %union.gimple_statement_d* %call91, %union.gimple_statement_d** %42, align 8, !dbg !4387
  %43 = bitcast %struct.gimple_stmt_iterator* %tmp99 to i8*, !dbg !4388
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #7, !dbg !4388
  %44 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !4389
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp99, %struct.basic_block_def* %44) #8, !dbg !4388
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %43, i64 24, i1 false), !dbg !4388
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #7, !dbg !4388
  %call101 = call %union.gimple_statement_d* @gimple_build_omp_continue(%union.tree_node* %call37, %union.tree_node* %call23) #6, !dbg !4390
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call101, metadata !4260, metadata !DIExpression()), !dbg !4280
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call101, i32 0) #6, !dbg !4391
  store %union.gimple_statement_d* %call101, %union.gimple_statement_d** %24, align 8, !dbg !4392
  %45 = bitcast %struct.gimple_stmt_iterator* %tmp104 to i8*, !dbg !4393
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #7, !dbg !4393
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp104, %struct.basic_block_def* %call51) #8, !dbg !4393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %45, i64 24, i1 false), !dbg !4393
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #7, !dbg !4393
  %call105 = call %union.gimple_statement_d* @gimple_build_omp_return(i8 zeroext 1) #6, !dbg !4394
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4280
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call105, i32 0) #6, !dbg !4395
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #7, !dbg !4396
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4396
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !4396
  ret %struct.basic_block_def* %call1, !dbg !4397
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @create_loop_fn() unnamed_addr #5 !dbg !2064 {
entry:
  %buf = alloca [100 x i8], align 16
  %0 = getelementptr inbounds [100 x i8], [100 x i8]* %buf, i64 0, i64 0, !dbg !4398
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %0) #7, !dbg !4398
  call void @llvm.dbg.declare(metadata [100 x i8]* %buf, metadata !2068, metadata !DIExpression()), !dbg !4399
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4400
  call void @llvm.dbg.value(metadata %struct.function* %1, metadata !2077, metadata !DIExpression()), !dbg !4401
  %call = tail call i8* @current_function_name() #6, !dbg !4402
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %0, i64 100, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0), i8* %call) #6, !dbg !4403
  call void @llvm.dbg.value(metadata i8* %0, metadata !2078, metadata !DIExpression()), !dbg !4404
  %call3 = call i64 @strlen(i8* nonnull %0) #6, !dbg !4405
  %add = add i64 %call3, 32, !dbg !4405
  %2 = alloca i8, i64 %add, align 16, !dbg !4405
  call void @llvm.dbg.value(metadata i8* %2, metadata !2072, metadata !DIExpression()), !dbg !4401
  call void @llvm.dbg.value(metadata i8* %2, metadata !2081, metadata !DIExpression()), !dbg !4404
  %3 = load i32, i32* @create_loop_fn.loopfn_num, align 4, !dbg !4405
  %inc = add i32 %3, 1, !dbg !4405
  store i32 %inc, i32* @create_loop_fn.loopfn_num, align 4, !dbg !4405
  %conv = zext i32 %3 to i64, !dbg !4405
  %call4 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.34, i64 0, i64 0), i8* nonnull %0, i64 %conv) #6, !dbg !4405
  call void @clean_symbol_name(i8* nonnull %2) #6, !dbg !4406
  %call5 = call %union.tree_node* @get_identifier(i8* nonnull %2) #6, !dbg !4407
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !2075, metadata !DIExpression()), !dbg !4401
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !4408
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !4409
  %call6 = call %union.tree_node* (%union.tree_node*, ...) @build_function_type_list(%union.tree_node* %4, %union.tree_node* %5, %union.tree_node* null) #6, !dbg !4410
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !2074, metadata !DIExpression()), !dbg !4401
  %call7 = call %union.tree_node* @build_decl_stat(i32 1, i32 29, %union.tree_node* %call5, %union.tree_node* %call6) #6, !dbg !4411
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !2073, metadata !DIExpression()), !dbg !4401
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @parallelized_functions, align 8, !dbg !4412
  %tobool = icmp eq %struct.bitmap_head_def* %6, null, !dbg !4412
  br i1 %tobool, label %if.then, label %if.end, !dbg !4414

if.then:                                          ; preds = %entry
  %call8 = call %struct.bitmap_head_def* @bitmap_gc_alloc_stat() #6, !dbg !4415
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** @parallelized_functions, align 8, !dbg !4416
  br label %if.end, !dbg !4417

if.end:                                           ; preds = %entry, %if.then
  %7 = phi %struct.bitmap_head_def* [ %6, %entry ], [ %call8, %if.then ], !dbg !4418
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4419
  %8 = load i32, i32* %uid, align 4, !dbg !4419
  %call9 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %7, i32 %8) #6, !dbg !4420
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4421
  %bf.load = load i64, i64* %9, align 8, !dbg !4422
  %artificial_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4423
  %10 = bitcast i40* %artificial_flag to i64*, !dbg !4423
  %bf.load14 = load i64, i64* %10, align 8, !dbg !4424
  %bf.set16 = and i64 %bf.load14, -33559553, !dbg !4425
  %bf.clear19 = or i64 %bf.set16, 4096, !dbg !4425
  %bf.set13 = and i64 %bf.load, -218103809, !dbg !4426
  %bf.clear22 = or i64 %bf.set13, 83886080, !dbg !4426
  store i64 %bf.clear22, i64* %9, align 8, !dbg !4426
  %uninlinable = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 5, !dbg !4427
  %bf.load23 = load i32, i32* %uninlinable, align 8, !dbg !4428
  %bf.set25 = or i32 %bf.load23, 32768, !dbg !4428
  store i32 %bf.set25, i32* %uninlinable, align 8, !dbg !4428
  store i64 %bf.clear19, i64* %10, align 8, !dbg !4429
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4430
  store %union.tree_node* null, %union.tree_node** %context, align 8, !dbg !4431
  %call30 = call %union.tree_node* @make_node_stat(i32 4) #6, !dbg !4432
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4433
  store %union.tree_node* %call30, %union.tree_node** %initial, align 8, !dbg !4434
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !4435
  %call32 = call %union.tree_node* @build_decl_stat(i32 1, i32 36, %union.tree_node* null, %union.tree_node* %11) #6, !dbg !4435
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !2076, metadata !DIExpression()), !dbg !4401
  %artificial_flag34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4436
  %12 = bitcast i40* %artificial_flag34 to i64*, !dbg !4436
  %bf.load35 = load i64, i64* %12, align 8, !dbg !4437
  %bf.set42 = or i64 %bf.load35, 5120, !dbg !4438
  store i64 %bf.set42, i64* %12, align 8, !dbg !4438
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 3, !dbg !4439
  store %union.tree_node* %call32, %union.tree_node** %result, align 8, !dbg !4440
  %call43 = call %union.tree_node* @get_identifier(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !4441
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !4441
  %call44 = call %union.tree_node* @build_decl_stat(i32 1, i32 34, %union.tree_node* %call43, %union.tree_node* %13) #6, !dbg !4441
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !2076, metadata !DIExpression()), !dbg !4401
  %artificial_flag46 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4442
  %14 = bitcast i40* %artificial_flag46 to i64*, !dbg !4442
  %bf.load47 = load i64, i64* %14, align 8, !dbg !4443
  %bf.set49 = or i64 %bf.load47, 4096, !dbg !4443
  store i64 %bf.set49, i64* %14, align 8, !dbg !4443
  %15 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39) to i64*), align 8, !dbg !4444
  %initial51 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4445
  %16 = bitcast %union.tree_node** %initial51 to i64*, !dbg !4446
  store i64 %15, i64* %16, align 8, !dbg !4446
  %context53 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4447
  store %union.tree_node* %call7, %union.tree_node** %context53, align 8, !dbg !4448
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4449
  %bf.load55 = load i64, i64* %17, align 8, !dbg !4450
  %bf.set57 = or i64 %bf.load55, 16777216, !dbg !4450
  store i64 %bf.set57, i64* %17, align 8, !dbg !4450
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 2, !dbg !4451
  store %union.tree_node* %call44, %union.tree_node** %arguments, align 8, !dbg !4452
  call void @allocate_struct_function(%union.tree_node* %call7, i8 zeroext 0) #6, !dbg !4453
  call void @set_cfun(%struct.function* %1) #6, !dbg !4454
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %0) #7, !dbg !4455
  ret %union.tree_node* %call7, !dbg !4456
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_call_for_reduction(%struct.loop* %loop, %struct.htab* %reduction_list, %struct.clsn_data* %ld_st_data) unnamed_addr #5 !dbg !4457 {
entry:
  call void @llvm.dbg.value(metadata %struct.loop* %loop, metadata !4461, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.value(metadata %struct.htab* %reduction_list, metadata !4462, metadata !DIExpression()), !dbg !4464
  call void @llvm.dbg.value(metadata %struct.clsn_data* %ld_st_data, metadata !4463, metadata !DIExpression()), !dbg !4464
  %0 = bitcast %struct.loop* %loop to i8*, !dbg !4465
  tail call void @htab_traverse(%struct.htab* %reduction_list, i32 (i8**, i8*)* nonnull @create_phi_for_local_result, i8* %0) #6, !dbg !4466
  %latch = getelementptr inbounds %struct.loop, %struct.loop* %loop, i64 0, i32 3, !dbg !4467
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !4467
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i64 0, i32 1, !dbg !4467
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4467
  %tobool = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !4467
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4467

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !4467
  br label %cond.end, !dbg !4467

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4467
  %call = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #8, !dbg !4467
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 7, !dbg !4467
  %3 = load i32, i32* %flags, align 8, !dbg !4467
  %and = and i32 %3, 1, !dbg !4467
  %tobool3 = icmp eq i32 %and, 0, !dbg !4467
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %latch, align 8, !dbg !4467
  %succs6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 1, !dbg !4467
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs6, align 8, !dbg !4467
  %tobool7 = icmp ne %struct.VEC_edge_gc* %5, null, !dbg !4467
  br i1 %tobool3, label %cond.false16, label %cond.true4, !dbg !4467

cond.true4:                                       ; preds = %cond.end
  br i1 %tobool7, label %cond.true8, label %cond.end13, !dbg !4467

cond.true8:                                       ; preds = %cond.true4
  %base11 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !4467
  br label %cond.end13, !dbg !4467

cond.end13:                                       ; preds = %cond.true4, %cond.true8
  %cond14 = phi %struct.VEC_edge_base* [ %base11, %cond.true8 ], [ null, %cond.true4 ], !dbg !4467
  %call15 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond14, i32 0) #8, !dbg !4467
  br label %cond.end28, !dbg !4467

cond.false16:                                     ; preds = %cond.end
  br i1 %tobool7, label %cond.true20, label %cond.end25, !dbg !4467

cond.true20:                                      ; preds = %cond.false16
  %base23 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %5, i64 0, i32 0, !dbg !4467
  br label %cond.end25, !dbg !4467

cond.end25:                                       ; preds = %cond.false16, %cond.true20
  %cond26 = phi %struct.VEC_edge_base* [ %base23, %cond.true20 ], [ null, %cond.false16 ], !dbg !4467
  %call27 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond26, i32 1) #8, !dbg !4467
  br label %cond.end28, !dbg !4467

cond.end28:                                       ; preds = %cond.end25, %cond.end13
  %cond29 = phi %struct.edge_def* [ %call15, %cond.end13 ], [ %call27, %cond.end25 ], !dbg !4467
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond29, i64 0, i32 1, !dbg !4468
  %6 = bitcast %struct.basic_block_def** %dest to i64*, !dbg !4468
  %7 = load i64, i64* %6, align 8, !dbg !4468
  %load_bb = getelementptr inbounds %struct.clsn_data, %struct.clsn_data* %ld_st_data, i64 0, i32 3, !dbg !4469
  %8 = bitcast %struct.basic_block_def** %load_bb to i64*, !dbg !4470
  store i64 %7, i64* %8, align 8, !dbg !4470
  %9 = bitcast %struct.clsn_data* %ld_st_data to i8*, !dbg !4471
  tail call void @htab_traverse(%struct.htab* %reduction_list, i32 (i8**, i8*)* nonnull @create_call_for_reduction_1, i8* %9) #6, !dbg !4472
  ret void, !dbg !4473
}

declare dso_local void @scev_reset() local_unnamed_addr #2

declare dso_local void @cancel_loop_tree(%struct.loop*) local_unnamed_addr #2

declare dso_local void @free_numbers_of_iterations_estimates_loop(%struct.loop*) local_unnamed_addr #2

declare dso_local void @omp_expand_local(%struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %struct.edge_def* @split_block_after_labels(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4474 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4481, metadata !DIExpression()), !dbg !4482
  %call = tail call fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #8, !dbg !4483
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 1, !dbg !4484
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4484
  ret %struct.basic_block_def* %0, !dbg !4485
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4486 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4490, metadata !DIExpression()), !dbg !4491
  %call = tail call fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #8, !dbg !4492
  %tobool = icmp eq i8 %call, 0, !dbg !4492
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4492

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4492
  br label %cond.end, !dbg !4492

cond.end:                                         ; preds = %entry, %cond.true
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4493
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4493
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4493
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !4493

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4493
  br label %cond.end5, !dbg !4493

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !4493
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !4493
  ret %struct.edge_def* %call7, !dbg !4494
}

declare dso_local %union.gimple_statement_d* @last_stmt(%struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4495 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4497, metadata !DIExpression()), !dbg !4498
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !4499
  ret %union.tree_node* %call, !dbg !4500
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_cond_rhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4501 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4503, metadata !DIExpression()), !dbg !4504
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !4505
  ret %union.tree_node* %call, !dbg !4506
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %var, %union.gimple_statement_d* %stmt) unnamed_addr #0 !dbg !4507 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !4511, metadata !DIExpression()), !dbg !4513
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4512, metadata !DIExpression()), !dbg !4513
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4514
  %call = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %0, %union.tree_node* %var, %union.gimple_statement_d* %stmt) #6, !dbg !4515
  ret %union.tree_node* %call, !dbg !4516
}

declare dso_local %union.gimple_statement_d* @create_phi_node(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_cond_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !4517 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4521, metadata !DIExpression()), !dbg !4523
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !4522, metadata !DIExpression()), !dbg !4523
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #8, !dbg !4524
  ret void, !dbg !4525
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @update_stmt(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !4526 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !4530, metadata !DIExpression()), !dbg !4531
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %s) #8, !dbg !4532
  %tobool = icmp eq i8 %call, 0, !dbg !4532
  br i1 %tobool, label %if.end, label %if.then, !dbg !4534

if.then:                                          ; preds = %entry
  tail call void @gimple_set_modified(%union.gimple_statement_d* %s, i8 zeroext 1) #6, !dbg !4535
  tail call void @update_stmt_operands(%union.gimple_statement_d* %s) #6, !dbg !4537
  br label %if.end, !dbg !4538

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4539
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local zeroext i8 @gimple_duplicate_sese_tail(%struct.edge_def*, %struct.edge_def*, %struct.basic_block_def**, i32, %struct.basic_block_def**) local_unnamed_addr #2

declare dso_local void @remove_phi_node(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4540 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4544, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4545, metadata !DIExpression()), !dbg !4547
  tail call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* sret %agg.result, %struct.basic_block_def* %bb) #8, !dbg !4548
  br label %while.cond, !dbg !4549

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #8, !dbg !4550
  %tobool = icmp eq i8 %call, 0, !dbg !4550
  br i1 %tobool, label %land.rhs, label %while.end, !dbg !4551

land.rhs:                                         ; preds = %while.cond
  %call1 = tail call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %agg.result) #8, !dbg !4552
  %call2 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %call1) #8, !dbg !4553
  %cmp = icmp eq i32 %call2, 4, !dbg !4554
  br i1 %cmp, label %while.body, label %while.end, !dbg !4549

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @gsi_next(%struct.gimple_stmt_iterator* %agg.result) #8, !dbg !4555
  br label %while.cond, !dbg !4549, !llvm.loop !4556

while.end:                                        ; preds = %while.cond, %land.rhs
  ret void, !dbg !4558
}

declare dso_local %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator*, %union.tree_node*, i8 zeroext, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_before(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4559 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4563, metadata !DIExpression()), !dbg !4564
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !4565
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !4565
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !4565
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4565

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !4565
  br label %cond.end, !dbg !4565

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4565
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !4565
  %cmp = icmp eq i32 %call, 1, !dbg !4566
  %conv2 = zext i1 %cmp to i8, !dbg !4565
  ret i8 %conv2, !dbg !4567
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4568 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4574, metadata !DIExpression()), !dbg !4576
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4575, metadata !DIExpression()), !dbg !4576
  br label %land.end, !dbg !4577

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4577
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4577
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4577
  ret %struct.edge_def* %0, !dbg !4577
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4578 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4582, metadata !DIExpression()), !dbg !4583
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4584
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4584

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4584
  %0 = load i32, i32* %num, align 8, !dbg !4584
  br label %cond.end, !dbg !4584

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4584
  ret i32 %cond, !dbg !4584
}

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !4585 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4589, metadata !DIExpression()), !dbg !4592
  call void @llvm.dbg.value(metadata i32 %i, metadata !4590, metadata !DIExpression()), !dbg !4592
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !4591, metadata !DIExpression()), !dbg !4592
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !4593
  %tobool = icmp eq i8 %call, 0, !dbg !4593
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !4593

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !4593
  %cmp = icmp ugt i32 %call1, %i, !dbg !4593
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4593

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4593
  br label %cond.end, !dbg !4593

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !4594
  %idxprom = zext i32 %i to i64, !dbg !4594
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !4594
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !4595
  ret void, !dbg !4596
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4597 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4601, metadata !DIExpression()), !dbg !4602
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !4603
  %0 = load i32, i32* %num_ops, align 4, !dbg !4603
  ret i32 %0, !dbg !4604
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @update_stmt_operands(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4605 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4607, metadata !DIExpression()), !dbg !4610
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4608, metadata !DIExpression()), !dbg !4611
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !4612
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4609, metadata !DIExpression()), !dbg !4610
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #8, !dbg !4613
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4614
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4615
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4616
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4617
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4618
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4619
  ret void, !dbg !4620
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4621 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4625, metadata !DIExpression()), !dbg !4626
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !4627
  %0 = load i32, i32* %flags, align 8, !dbg !4627
  %and = and i32 %0, 512, !dbg !4628
  %tobool = icmp eq i32 %and, 0, !dbg !4628
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !4629

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !4630
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !4630
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !4631
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !4632

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !4633
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !4633
  br label %cond.end, !dbg !4632

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !4632
  ret %struct.gimple_seq_d* %cond, !dbg !4634
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !4635 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !4642, metadata !DIExpression()), !dbg !4643
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !4644
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4644

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !4645
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !4645
  br label %cond.end, !dbg !4644

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !4644
  ret %struct.gimple_seq_node_d* %cond, !dbg !4646
}

declare dso_local %union.tree_node* @create_tmp_var(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @add_referenced_var(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_omp_clause(i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4647 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4651, metadata !DIExpression()), !dbg !4652
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !4653
  %0 = load i32, i32* %location, align 8, !dbg !4653
  ret i32 %0, !dbg !4654
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4655 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4657, metadata !DIExpression()), !dbg !4658
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !4659
  ret %union.tree_node* %call, !dbg !4660
}

declare dso_local %union.tree_node* @omp_reduction_init(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) unnamed_addr #0 !dbg !4661 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use, metadata !4665, metadata !DIExpression()), !dbg !4667
  call void @llvm.dbg.value(metadata %union.tree_node* %val, metadata !4666, metadata !DIExpression()), !dbg !4667
  tail call fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %use) #8, !dbg !4668
  %use1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %use, i64 0, i32 3, !dbg !4669
  %0 = load %union.tree_node**, %union.tree_node*** %use1, align 8, !dbg !4669
  store %union.tree_node* %val, %union.tree_node** %0, align 8, !dbg !4670
  tail call fastcc void @link_imm_use(%struct.ssa_use_operand_d* %use, %union.tree_node* %val) #8, !dbg !4671
  ret void, !dbg !4672
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @delink_imm_use(%struct.ssa_use_operand_d* %linknode) unnamed_addr #0 !dbg !4673 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !4677, metadata !DIExpression()), !dbg !4678
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !4679
  %0 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4679
  %cmp = icmp eq %struct.ssa_use_operand_d* %0, null, !dbg !4681
  br i1 %cmp, label %return, label %if.end, !dbg !4682

if.end:                                           ; preds = %entry
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !4683
  %1 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !4683
  %2 = load i64, i64* %1, align 8, !dbg !4683
  %next2 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %0, i64 0, i32 1, !dbg !4684
  %3 = bitcast %struct.ssa_use_operand_d** %next2 to i64*, !dbg !4685
  store i64 %2, i64* %3, align 8, !dbg !4685
  %4 = bitcast %struct.ssa_use_operand_d* %linknode to i64*, !dbg !4686
  %5 = load i64, i64* %4, align 8, !dbg !4686
  %6 = bitcast %struct.ssa_use_operand_d** %next to i64**, !dbg !4687
  %7 = load i64*, i64** %6, align 8, !dbg !4687
  store i64 %5, i64* %7, align 8, !dbg !4688
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4689
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %next, align 8, !dbg !4690
  br label %return, !dbg !4691

return:                                           ; preds = %entry, %if.end
  ret void, !dbg !4691
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use(%struct.ssa_use_operand_d* %linknode, %union.tree_node* %def) unnamed_addr #0 !dbg !4692 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !4696, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.value(metadata %union.tree_node* %def, metadata !4697, metadata !DIExpression()), !dbg !4699
  %tobool = icmp eq %union.tree_node* %def, null, !dbg !4700
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !4702

lor.lhs.false:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4703
  %bf.load = load i64, i64* %0, align 8, !dbg !4703
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4704
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !4704
  br i1 %cmp, label %if.else, label %if.then, !dbg !4705

if.then:                                          ; preds = %lor.lhs.false, %entry
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !4706
  store %struct.ssa_use_operand_d* null, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4707
  br label %if.end, !dbg !4708

if.else:                                          ; preds = %lor.lhs.false
  %imm_uses = getelementptr inbounds %union.tree_node, %union.tree_node* %def, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4709
  %1 = bitcast i40* %imm_uses to %struct.ssa_use_operand_d*, !dbg !4709
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %1, metadata !4698, metadata !DIExpression()), !dbg !4699
  tail call fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* nonnull %1) #8, !dbg !4711
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4712
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @link_imm_use_to_list(%struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d* %list) unnamed_addr #0 !dbg !4713 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %linknode, metadata !4717, metadata !DIExpression()), !dbg !4719
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %list, metadata !4718, metadata !DIExpression()), !dbg !4719
  %prev = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 0, !dbg !4720
  store %struct.ssa_use_operand_d* %list, %struct.ssa_use_operand_d** %prev, align 8, !dbg !4721
  %next = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %list, i64 0, i32 1, !dbg !4722
  %0 = bitcast %struct.ssa_use_operand_d** %next to i64*, !dbg !4722
  %1 = load i64, i64* %0, align 8, !dbg !4722
  %next1 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %linknode, i64 0, i32 1, !dbg !4723
  %2 = bitcast %struct.ssa_use_operand_d** %next1 to i64*, !dbg !4724
  store i64 %1, i64* %2, align 8, !dbg !4724
  %3 = load %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d** %next, align 8, !dbg !4725
  %prev3 = getelementptr inbounds %struct.ssa_use_operand_d, %struct.ssa_use_operand_d* %3, i64 0, i32 0, !dbg !4726
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %prev3, align 8, !dbg !4727
  store %struct.ssa_use_operand_d* %linknode, %struct.ssa_use_operand_d** %next, align 8, !dbg !4728
  ret void, !dbg !4729
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_basic_block_heap* @VEC_basic_block_heap_alloc(i32 %alloc_) unnamed_addr #0 !dbg !4730 {
entry:
  call void @llvm.dbg.value(metadata i32 3, metadata !4734, metadata !DIExpression()), !dbg !4735
  %call = tail call i8* @vec_heap_p_reserve_exact(i8* null, i32 3) #6, !dbg !4736
  %0 = bitcast i8* %call to %struct.VEC_basic_block_heap*, !dbg !4736
  ret %struct.VEC_basic_block_heap* %0, !dbg !4736
}

declare dso_local i32 @int_tree_map_hash(i8*) #2

declare dso_local i32 @int_tree_map_eq(i8*, i8*) #2

declare dso_local void @gather_blocks_in_sese_region(%struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_heap**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_iterate(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def** %ptr) unnamed_addr #0 !dbg !4737 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !4743, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4744, metadata !DIExpression()), !dbg !4746
  call void @llvm.dbg.value(metadata %struct.basic_block_def** %ptr, metadata !4745, metadata !DIExpression()), !dbg !4746
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !4747
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !4747

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !4747
  %0 = load i32, i32* %num, align 8, !dbg !4747
  %cmp = icmp ugt i32 %0, %ix_, !dbg !4747
  br i1 %cmp, label %if.then, label %if.else, !dbg !4749

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !4750
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4750
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4750
  br label %return, !dbg !4750

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !4752

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.basic_block_def* [ null, %if.else ], [ %1, %if.then ], !dbg !4754
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !4754
  store %struct.basic_block_def* %storemerge, %struct.basic_block_def** %ptr, align 8, !dbg !4754
  ret i32 %retval.0, !dbg !4749
}

; Function Attrs: nounwind uwtable
define internal fastcc void @eliminate_local_variables_stmt(%struct.edge_def* %entry1, %union.gimple_statement_d* %stmt, %struct.htab* %decl_address) unnamed_addr #5 !dbg !4755 {
entry:
  %dta = alloca %struct.elv_data, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !4759, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !4760, metadata !DIExpression()), !dbg !4763
  call void @llvm.dbg.value(metadata %struct.htab* %decl_address, metadata !4761, metadata !DIExpression()), !dbg !4763
  %0 = bitcast %struct.elv_data* %dta to i8*, !dbg !4764
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %0) #7, !dbg !4764
  %call = call i8* @memset(i8* nonnull %0, i32 0, i64 56) #6, !dbg !4765
  %entry2 = getelementptr inbounds %struct.elv_data, %struct.elv_data* %dta, i64 0, i32 1, !dbg !4766
  store %struct.edge_def* %entry1, %struct.edge_def** %entry2, align 8, !dbg !4767
  %decl_address3 = getelementptr inbounds %struct.elv_data, %struct.elv_data* %dta, i64 0, i32 2, !dbg !4768
  store %struct.htab* %decl_address, %struct.htab** %decl_address3, align 8, !dbg !4769
  %changed = getelementptr inbounds %struct.elv_data, %struct.elv_data* %dta, i64 0, i32 3, !dbg !4770
  store i8 0, i8* %changed, align 8, !dbg !4771
  %call4 = call fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %stmt) #8, !dbg !4772
  %tobool = icmp eq i8 %call4, 0, !dbg !4772
  br i1 %tobool, label %if.else, label %if.then, !dbg !4774

if.then:                                          ; preds = %entry
  %call5 = call fastcc %union.tree_node** @gimple_debug_bind_get_value_ptr(%union.gimple_statement_d* %stmt) #8, !dbg !4775
  %call7 = call %union.tree_node* @walk_tree_1(%union.tree_node** %call5, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @eliminate_local_variables_1, i8* nonnull %0, %struct.pointer_set_t* null, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)* null) #6, !dbg !4775
  br label %if.end, !dbg !4775

if.else:                                          ; preds = %entry
  %info8 = getelementptr inbounds %struct.elv_data, %struct.elv_data* %dta, i64 0, i32 0, !dbg !4776
  %call9 = call %union.tree_node* @walk_gimple_op(%union.gimple_statement_d* %stmt, %union.tree_node* (%union.tree_node**, i32*, i8*)* nonnull @eliminate_local_variables_1, %struct.walk_stmt_info* nonnull %info8) #6, !dbg !4777
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load i8, i8* %changed, align 8, !dbg !4778
  %tobool11 = icmp eq i8 %1, 0, !dbg !4780
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !4781

if.then12:                                        ; preds = %if.end
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !4782
  br label %if.end13, !dbg !4782

if.end13:                                         ; preds = %if.end, %if.then12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %0) #7, !dbg !4783
  ret void, !dbg !4783
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_heap_free(%struct.VEC_basic_block_heap** %vec_) unnamed_addr #0 !dbg !4784 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_heap** %vec_, metadata !4789, metadata !DIExpression()), !dbg !4790
  %0 = load %struct.VEC_basic_block_heap*, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !4791
  %tobool = icmp eq %struct.VEC_basic_block_heap* %0, null, !dbg !4791
  br i1 %tobool, label %if.end, label %if.then, !dbg !4793

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_basic_block_heap* %0 to i8*, !dbg !4793
  tail call void @free(i8* nonnull %1) #6, !dbg !4791
  br label %if.end, !dbg !4791

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_basic_block_heap* null, %struct.VEC_basic_block_heap** %vec_, align 8, !dbg !4793
  ret void, !dbg !4793
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_debug_bind_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !4794 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !4796, metadata !DIExpression()), !dbg !4797
  %call = tail call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %s) #8, !dbg !4798
  %tobool = icmp eq i8 %call, 0, !dbg !4798
  br i1 %tobool, label %return, label %if.then, !dbg !4800

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !4801
  %bf.load = load i32, i32* %0, align 8, !dbg !4801
  %cmp = icmp ult i32 %bf.load, 65536, !dbg !4802
  %conv1 = zext i1 %cmp to i8, !dbg !4803
  br label %return, !dbg !4804

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi i8 [ %conv1, %if.then ], [ 0, %entry ], !dbg !4797
  ret i8 %retval.0, !dbg !4805
}

declare dso_local %union.tree_node* @walk_tree_1(%union.tree_node**, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*, %union.tree_node* (%union.tree_node**, i32*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, i8*, %struct.pointer_set_t*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_debug_bind_get_value_ptr(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !4806 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !4808, metadata !DIExpression()), !dbg !4809
  %call = tail call fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %dbg, i32 1) #8, !dbg !4810
  ret %union.tree_node** %call, !dbg !4811
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @eliminate_local_variables_1(%union.tree_node** %tp, i32* %walk_subtrees, i8* %data) #5 !dbg !4812 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %tp, metadata !4816, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.value(metadata i32* %walk_subtrees, metadata !4817, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.value(metadata i8* %data, metadata !4818, metadata !DIExpression()), !dbg !4827
  call void @llvm.dbg.value(metadata i8* %data, metadata !4819, metadata !DIExpression()), !dbg !4827
  %0 = load %union.tree_node*, %union.tree_node** %tp, align 8, !dbg !4828
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4821, metadata !DIExpression()), !dbg !4827
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4829
  %bf.load = load i64, i64* %1, align 8, !dbg !4829
  %bf.cast = and i64 %bf.load, 65535, !dbg !4829
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !4829
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4829
  %cmp = icmp eq i32 %2, 3, !dbg !4829
  br i1 %cmp, label %if.then, label %if.end56, !dbg !4831

if.then:                                          ; preds = %entry
  store i32 0, i32* %walk_subtrees, align 4, !dbg !4832
  %bf.load2 = load i64, i64* %1, align 8, !dbg !4834
  %bf.cast410 = and i64 %bf.load2, 65535, !dbg !4834
  %cmp5 = icmp eq i64 %bf.cast410, 32, !dbg !4834
  br i1 %cmp5, label %lor.lhs.false45, label %lor.lhs.false, !dbg !4834

lor.lhs.false:                                    ; preds = %if.then
  %cmp10 = icmp eq i64 %bf.cast410, 34, !dbg !4834
  br i1 %cmp10, label %lor.lhs.false45, label %lor.lhs.false11, !dbg !4834

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %cmp16 = icmp eq i64 %bf.cast410, 36, !dbg !4834
  br i1 %cmp16, label %lor.lhs.false45, label %lor.lhs.false17, !dbg !4834

lor.lhs.false17:                                  ; preds = %lor.lhs.false11
  %cmp22 = icmp eq i64 %bf.cast410, 141, !dbg !4834
  br i1 %cmp22, label %land.lhs.true, label %cleanup, !dbg !4834

land.lhs.true:                                    ; preds = %lor.lhs.false17
  %var23 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4834
  %3 = bitcast i32* %var23 to i64**, !dbg !4834
  %4 = load i64*, i64** %3, align 8, !dbg !4834
  %bf.load25 = load i64, i64* %4, align 8, !dbg !4834
  %bf.cast2714 = and i64 %bf.load25, 65535, !dbg !4834
  %cmp28 = icmp eq i64 %bf.cast2714, 32, !dbg !4834
  br i1 %cmp28, label %lor.lhs.false45, label %lor.lhs.false29, !dbg !4834

lor.lhs.false29:                                  ; preds = %land.lhs.true
  %cmp36 = icmp eq i64 %bf.cast2714, 34, !dbg !4834
  br i1 %cmp36, label %lor.lhs.false45, label %lor.lhs.false37, !dbg !4834

lor.lhs.false37:                                  ; preds = %lor.lhs.false29
  %cmp44 = icmp eq i64 %bf.cast2714, 36, !dbg !4834
  br i1 %cmp44, label %lor.lhs.false45, label %cleanup, !dbg !4836

lor.lhs.false45:                                  ; preds = %lor.lhs.false37, %lor.lhs.false29, %land.lhs.true, %lor.lhs.false11, %lor.lhs.false, %if.then
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4837
  %5 = bitcast i40* %decl_flag_1 to i64*, !dbg !4837
  %bf.load46 = load i64, i64* %5, align 8, !dbg !4837
  %bf.cast4817 = and i64 %bf.load46, 33554432, !dbg !4837
  %tobool = icmp eq i64 %bf.cast4817, 0, !dbg !4837
  br i1 %tobool, label %if.end, label %cleanup, !dbg !4838

if.end:                                           ; preds = %lor.lhs.false45
  %type50 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4839
  %6 = load %union.tree_node*, %union.tree_node** %type50, align 8, !dbg !4839
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4825, metadata !DIExpression()), !dbg !4827
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %6) #6, !dbg !4840
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4824, metadata !DIExpression()), !dbg !4827
  %entry51 = getelementptr inbounds i8, i8* %data, i64 56, !dbg !4841
  %7 = bitcast i8* %entry51 to %struct.edge_def**, !dbg !4841
  %8 = load %struct.edge_def*, %struct.edge_def** %7, align 8, !dbg !4841
  %decl_address = getelementptr inbounds i8, i8* %data, i64 64, !dbg !4842
  %9 = bitcast i8* %decl_address to %struct.htab**, !dbg !4842
  %10 = load %struct.htab*, %struct.htab** %9, align 8, !dbg !4842
  %call52 = tail call fastcc %union.tree_node* @take_address_of(%union.tree_node* %0, %union.tree_node* %call, %struct.edge_def* %8, %struct.htab* %10) #8, !dbg !4843
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !4823, metadata !DIExpression()), !dbg !4827
  %11 = bitcast %union.tree_node** %tp to %struct.tree_common**, !dbg !4844
  %12 = load %struct.tree_common*, %struct.tree_common** %11, align 8, !dbg !4844
  %type54 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %12, i64 0, i32 2, !dbg !4844
  %13 = load %union.tree_node*, %union.tree_node** %type54, align 8, !dbg !4844
  %call55 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %13, %union.tree_node* %call52) #6, !dbg !4844
  store %union.tree_node* %call55, %union.tree_node** %tp, align 8, !dbg !4845
  %14 = getelementptr inbounds i8, i8* %data, i64 72, !dbg !4846
  store i8 1, i8* %14, align 8, !dbg !4847
  br label %cleanup, !dbg !4848

if.end56:                                         ; preds = %entry
  %cmp61 = icmp eq i64 %bf.cast, 121, !dbg !4849
  br i1 %cmp61, label %if.then62, label %if.end134, !dbg !4851

if.then62:                                        ; preds = %if.end56
  %call63 = tail call zeroext i8 @is_gimple_val(%union.tree_node* %0) #6, !dbg !4852
  %tobool64 = icmp eq i8 %call63, 0, !dbg !4852
  br i1 %tobool64, label %cleanup, label %if.end66, !dbg !4855

if.end66:                                         ; preds = %if.then62
  store i32 0, i32* %walk_subtrees, align 4, !dbg !4856
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4857
  %15 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4857
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !4826, metadata !DIExpression()), !dbg !4827
  %call68 = tail call %union.tree_node* @get_base_address(%union.tree_node* %15) #6, !dbg !4858
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !4822, metadata !DIExpression()), !dbg !4827
  %tobool69 = icmp eq %union.tree_node* %call68, null, !dbg !4859
  br i1 %tobool69, label %cleanup, label %lor.lhs.false70, !dbg !4861

lor.lhs.false70:                                  ; preds = %if.end66
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4862
  %bf.load72 = load i64, i64* %16, align 8, !dbg !4862
  %bf.cast742 = and i64 %bf.load72, 65535, !dbg !4862
  %cmp75 = icmp eq i64 %bf.cast742, 32, !dbg !4862
  br i1 %cmp75, label %lor.lhs.false118, label %lor.lhs.false76, !dbg !4862

lor.lhs.false76:                                  ; preds = %lor.lhs.false70
  %cmp81 = icmp eq i64 %bf.cast742, 34, !dbg !4862
  br i1 %cmp81, label %lor.lhs.false118, label %lor.lhs.false82, !dbg !4862

lor.lhs.false82:                                  ; preds = %lor.lhs.false76
  %cmp87 = icmp eq i64 %bf.cast742, 36, !dbg !4862
  br i1 %cmp87, label %lor.lhs.false118, label %lor.lhs.false88, !dbg !4862

lor.lhs.false88:                                  ; preds = %lor.lhs.false82
  %cmp93 = icmp eq i64 %bf.cast742, 141, !dbg !4862
  br i1 %cmp93, label %land.lhs.true94, label %cleanup, !dbg !4862

land.lhs.true94:                                  ; preds = %lor.lhs.false88
  %var96 = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4862
  %17 = bitcast i32* %var96 to i64**, !dbg !4862
  %18 = load i64*, i64** %17, align 8, !dbg !4862
  %bf.load98 = load i64, i64* %18, align 8, !dbg !4862
  %bf.cast1006 = and i64 %bf.load98, 65535, !dbg !4862
  %cmp101 = icmp eq i64 %bf.cast1006, 32, !dbg !4862
  br i1 %cmp101, label %lor.lhs.false118, label %lor.lhs.false102, !dbg !4862

lor.lhs.false102:                                 ; preds = %land.lhs.true94
  %cmp109 = icmp eq i64 %bf.cast1006, 34, !dbg !4862
  br i1 %cmp109, label %lor.lhs.false118, label %lor.lhs.false110, !dbg !4862

lor.lhs.false110:                                 ; preds = %lor.lhs.false102
  %cmp117 = icmp eq i64 %bf.cast1006, 36, !dbg !4862
  br i1 %cmp117, label %lor.lhs.false118, label %cleanup, !dbg !4863

lor.lhs.false118:                                 ; preds = %lor.lhs.false110, %lor.lhs.false102, %land.lhs.true94, %lor.lhs.false82, %lor.lhs.false76, %lor.lhs.false70
  %decl_flag_1120 = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4864
  %19 = bitcast i40* %decl_flag_1120 to i64*, !dbg !4864
  %bf.load121 = load i64, i64* %19, align 8, !dbg !4864
  %bf.cast1249 = and i64 %bf.load121, 33554432, !dbg !4864
  %tobool125 = icmp eq i64 %bf.cast1249, 0, !dbg !4864
  br i1 %tobool125, label %if.end127, label %cleanup, !dbg !4865

if.end127:                                        ; preds = %lor.lhs.false118
  %type129 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4866
  %20 = load %union.tree_node*, %union.tree_node** %type129, align 8, !dbg !4866
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !4824, metadata !DIExpression()), !dbg !4827
  %entry130 = getelementptr inbounds i8, i8* %data, i64 56, !dbg !4867
  %21 = bitcast i8* %entry130 to %struct.edge_def**, !dbg !4867
  %22 = load %struct.edge_def*, %struct.edge_def** %21, align 8, !dbg !4867
  %decl_address131 = getelementptr inbounds i8, i8* %data, i64 64, !dbg !4868
  %23 = bitcast i8* %decl_address131 to %struct.htab**, !dbg !4868
  %24 = load %struct.htab*, %struct.htab** %23, align 8, !dbg !4868
  %call132 = tail call fastcc %union.tree_node* @take_address_of(%union.tree_node* %15, %union.tree_node* %20, %struct.edge_def* %22, %struct.htab* %24) #8, !dbg !4869
  call void @llvm.dbg.value(metadata %union.tree_node* %call132, metadata !4823, metadata !DIExpression()), !dbg !4827
  store %union.tree_node* %call132, %union.tree_node** %tp, align 8, !dbg !4870
  %25 = getelementptr inbounds i8, i8* %data, i64 72, !dbg !4871
  store i8 1, i8* %25, align 8, !dbg !4872
  br label %cleanup, !dbg !4873

if.end134:                                        ; preds = %if.end56
  %cmp141 = icmp ugt i32 %2, 3, !dbg !4874
  br i1 %cmp141, label %land.lhs.true142, label %if.then150, !dbg !4874

land.lhs.true142:                                 ; preds = %if.end134
  %cmp149 = icmp ult i32 %2, 11, !dbg !4874
  br i1 %cmp149, label %cleanup, label %if.then150, !dbg !4876

if.then150:                                       ; preds = %land.lhs.true142, %if.end134
  store i32 0, i32* %walk_subtrees, align 4, !dbg !4877
  br label %cleanup, !dbg !4878

cleanup:                                          ; preds = %lor.lhs.false45, %lor.lhs.false118, %if.end66, %if.then62, %land.lhs.true142, %if.then150, %lor.lhs.false88, %lor.lhs.false110, %lor.lhs.false17, %lor.lhs.false37, %if.end127, %if.end
  ret %union.tree_node* null, !dbg !4879
}

declare dso_local %union.tree_node* @walk_gimple_op(%union.gimple_statement_d*, %union.tree_node* (%union.tree_node**, i32*, i8*)*, %struct.walk_stmt_info*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !4880 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4882, metadata !DIExpression()), !dbg !4883
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !4884
  %cmp = icmp eq i32 %call, 2, !dbg !4885
  %conv1 = zext i1 %cmp to i8, !dbg !4884
  ret i8 %conv1, !dbg !4886
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_op_ptr(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !4887 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !4891, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.value(metadata i32 1, metadata !4892, metadata !DIExpression()), !dbg !4893
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !4894
  %tobool = icmp eq i8 %call, 0, !dbg !4894
  br i1 %tobool, label %return, label %if.then, !dbg !4896

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !4897
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 1, !dbg !4899
  br label %return, !dbg !4900

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node** [ %add.ptr, %if.then ], [ null, %entry ], !dbg !4901
  ret %union.tree_node** %retval.0, !dbg !4902
}

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @take_address_of(%union.tree_node* %obj, %union.tree_node* %type, %struct.edge_def* %entry1, %struct.htab* %decl_address) unnamed_addr #5 !dbg !4903 {
entry:
  %obj.addr = alloca %union.tree_node*, align 8
  %ielt = alloca %struct.int_tree_map, align 8
  %stmts = alloca %struct.gimple_seq_d*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %obj, metadata !4907, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !4908, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !4909, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata %struct.htab* %decl_address, metadata !4910, metadata !DIExpression()), !dbg !4921
  %0 = bitcast %struct.int_tree_map* %ielt to i8*, !dbg !4922
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !4922
  %1 = bitcast %struct.gimple_seq_d** %stmts to i8*, !dbg !4923
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4923
  call void @llvm.dbg.value(metadata %union.tree_node* %obj, metadata !4907, metadata !DIExpression()), !dbg !4921
  %call = tail call %union.tree_node* @unshare_expr(%union.tree_node* %obj) #6, !dbg !4924
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4907, metadata !DIExpression()), !dbg !4921
  store %union.tree_node* %call, %union.tree_node** %obj.addr, align 8, !dbg !4925
  call void @llvm.dbg.value(metadata %union.tree_node** %obj.addr, metadata !4915, metadata !DIExpression()), !dbg !4921
  br label %for.cond, !dbg !4926

for.cond:                                         ; preds = %for.inc, %entry
  %2 = phi %union.tree_node* [ %call, %entry ], [ %.pre, %for.inc ], !dbg !4928
  %var_p.0 = phi %union.tree_node** [ %obj.addr, %entry ], [ %operands, %for.inc ], !dbg !4930
  call void @llvm.dbg.value(metadata %union.tree_node** %var_p.0, metadata !4915, metadata !DIExpression()), !dbg !4921
  %call2 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %2) #8, !dbg !4931
  %tobool = icmp eq i8 %call2, 0, !dbg !4932
  %3 = load %union.tree_node*, %union.tree_node** %var_p.0, align 8, !dbg !4921
  br i1 %tobool, label %for.end, label %for.inc, !dbg !4932

for.inc:                                          ; preds = %for.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4933
  call void @llvm.dbg.value(metadata %union.tree_node** %operands, metadata !4915, metadata !DIExpression()), !dbg !4921
  %.pre = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !4928
  br label %for.cond, !dbg !4934, !llvm.loop !4935

for.end:                                          ; preds = %for.cond
  %var_p.0.lcssa = phi %union.tree_node** [ %var_p.0, %for.cond ], !dbg !4930
  %.lcssa = phi %union.tree_node* [ %3, %for.cond ], !dbg !4921
  call void @llvm.dbg.value(metadata %union.tree_node** %var_p.0.lcssa, metadata !4915, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata %union.tree_node** %var_p.0.lcssa, metadata !4915, metadata !DIExpression()), !dbg !4921
  call void @llvm.dbg.value(metadata %union.tree_node** %var_p.0.lcssa, metadata !4915, metadata !DIExpression()), !dbg !4921
  %uid3 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4937
  %4 = load i32, i32* %uid3, align 4, !dbg !4937
  call void @llvm.dbg.value(metadata i32 %4, metadata !4911, metadata !DIExpression()), !dbg !4921
  %uid4 = getelementptr inbounds %struct.int_tree_map, %struct.int_tree_map* %ielt, i64 0, i32 0, !dbg !4938
  store i32 %4, i32* %uid4, align 8, !dbg !4939
  %call5 = call i8** @htab_find_slot_with_hash(%struct.htab* %decl_address, i8* nonnull %0, i32 %4, i32 1) #6, !dbg !4940
  call void @llvm.dbg.value(metadata i8** %call5, metadata !4912, metadata !DIExpression()), !dbg !4921
  %5 = load i8*, i8** %call5, align 8, !dbg !4941
  %tobool6 = icmp eq i8* %5, null, !dbg !4941
  br i1 %tobool6, label %if.then, label %if.else, !dbg !4943

if.then:                                          ; preds = %for.end
  %6 = load %union.tree_node*, %union.tree_node** %var_p.0.lcssa, align 8, !dbg !4944
  %7 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4946
  %call7 = call %union.tree_node* @build_addr(%union.tree_node* %6, %union.tree_node* %7) #6, !dbg !4947
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !4918, metadata !DIExpression()), !dbg !4921
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4948
  %8 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !4948
  %9 = load %union.tree_node*, %union.tree_node** %var_p.0.lcssa, align 8, !dbg !4949
  %call9 = call i8* @get_name(%union.tree_node* %9) #6, !dbg !4950
  %call10 = call %union.tree_node* @create_tmp_var(%union.tree_node* %8, i8* %call9) #6, !dbg !4951
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !4917, metadata !DIExpression()), !dbg !4921
  %call11 = call zeroext i8 @add_referenced_var(%union.tree_node* %call10) #6, !dbg !4952
  %call12 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call10, %union.tree_node* %call7) #6, !dbg !4953
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !4919, metadata !DIExpression()), !dbg !4921
  %call13 = call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call10, %union.gimple_statement_d* %call12) #8, !dbg !4954
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !4916, metadata !DIExpression()), !dbg !4921
  call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %call12, %union.tree_node* %call13) #8, !dbg !4955
  %call14 = call %struct.basic_block_def* @gsi_insert_on_edge_immediate(%struct.edge_def* %entry1, %union.gimple_statement_d* %call12) #6, !dbg !4956
  %call15 = call i8* @xmalloc(i64 16) #6, !dbg !4957
  call void @llvm.dbg.value(metadata i8* %call15, metadata !4914, metadata !DIExpression()), !dbg !4921
  %uid16 = bitcast i8* %call15 to i32*, !dbg !4958
  store i32 %4, i32* %uid16, align 8, !dbg !4959
  %to = getelementptr inbounds i8, i8* %call15, i64 8, !dbg !4960
  %10 = bitcast i8* %to to %union.tree_node**, !dbg !4960
  store %union.tree_node* %call13, %union.tree_node** %10, align 8, !dbg !4961
  store i8* %call15, i8** %call5, align 8, !dbg !4962
  br label %if.end, !dbg !4963

if.else:                                          ; preds = %for.end
  %to17 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !4964
  %11 = bitcast i8* %to17 to %union.tree_node**, !dbg !4964
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !4964
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !4916, metadata !DIExpression()), !dbg !4921
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %name.0 = phi %union.tree_node* [ %12, %if.else ], [ %call13, %if.then ], !dbg !4965
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0, metadata !4916, metadata !DIExpression()), !dbg !4921
  %cmp = icmp eq %union.tree_node** %var_p.0.lcssa, %obj.addr, !dbg !4966
  br i1 %cmp, label %if.end29, label %if.then18, !dbg !4968

if.then18:                                        ; preds = %if.end
  %13 = bitcast %union.tree_node** %var_p.0.lcssa to %struct.tree_common**, !dbg !4969
  %14 = load %struct.tree_common*, %struct.tree_common** %13, align 8, !dbg !4969
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i64 0, i32 2, !dbg !4969
  %15 = load %union.tree_node*, %union.tree_node** %type20, align 8, !dbg !4969
  %call21 = call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %15, %union.tree_node* %name.0) #6, !dbg !4969
  store %union.tree_node* %call21, %union.tree_node** %var_p.0.lcssa, align 8, !dbg !4971
  %16 = load %union.tree_node*, %union.tree_node** %obj.addr, align 8, !dbg !4972
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !4907, metadata !DIExpression()), !dbg !4921
  %17 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4973
  %call22 = call %union.tree_node* @build_addr(%union.tree_node* %16, %union.tree_node* %17) #6, !dbg !4974
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !4920, metadata !DIExpression(DW_OP_deref)), !dbg !4921
  %call23 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call22, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !4975
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !4916, metadata !DIExpression()), !dbg !4921
  %18 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4976
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %18, metadata !4920, metadata !DIExpression()), !dbg !4921
  %call24 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %18) #8, !dbg !4978
  %tobool25 = icmp eq i8 %call24, 0, !dbg !4978
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !4979

if.then26:                                        ; preds = %if.then18
  %19 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4980
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %19, metadata !4920, metadata !DIExpression()), !dbg !4921
  %call27 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %entry1, %struct.gimple_seq_d* %19) #6, !dbg !4981
  br label %if.end29, !dbg !4981

if.end29:                                         ; preds = %if.then18, %if.end, %if.then26
  %name.1 = phi %union.tree_node* [ %name.0, %if.end ], [ %call23, %if.then26 ], [ %call23, %if.then18 ], !dbg !4921
  call void @llvm.dbg.value(metadata %union.tree_node* %name.1, metadata !4916, metadata !DIExpression()), !dbg !4921
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %name.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4982
  %20 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !4982
  %cmp32 = icmp eq %union.tree_node* %20, %type, !dbg !4984
  br i1 %cmp32, label %if.end41, label %if.then33, !dbg !4985

if.then33:                                        ; preds = %if.end29
  %call34 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %type, %union.tree_node* %name.1) #6, !dbg !4986
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %stmts, metadata !4920, metadata !DIExpression(DW_OP_deref)), !dbg !4921
  %call35 = call %union.tree_node* @force_gimple_operand(%union.tree_node* %call34, %struct.gimple_seq_d** nonnull %stmts, i8 zeroext 1, %union.tree_node* null) #6, !dbg !4988
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !4916, metadata !DIExpression()), !dbg !4921
  %21 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4989
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %21, metadata !4920, metadata !DIExpression()), !dbg !4921
  %call36 = call fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %21) #8, !dbg !4991
  %tobool37 = icmp eq i8 %call36, 0, !dbg !4991
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !4992

if.then38:                                        ; preds = %if.then33
  %22 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %stmts, align 8, !dbg !4993
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %22, metadata !4920, metadata !DIExpression()), !dbg !4921
  %call39 = call %struct.basic_block_def* @gsi_insert_seq_on_edge_immediate(%struct.edge_def* %entry1, %struct.gimple_seq_d* %22) #6, !dbg !4994
  br label %if.end41, !dbg !4994

if.end41:                                         ; preds = %if.then33, %if.end29, %if.then38
  %name.2 = phi %union.tree_node* [ %name.1, %if.end29 ], [ %call35, %if.then38 ], [ %call35, %if.then33 ], !dbg !4921
  call void @llvm.dbg.value(metadata %union.tree_node* %name.2, metadata !4916, metadata !DIExpression()), !dbg !4921
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #7, !dbg !4995
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !4995
  ret %union.tree_node* %name.2, !dbg !4996
}

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_val(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !4997 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5004, metadata !DIExpression()), !dbg !5005
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5006
  %bf.load = load i64, i64* %0, align 8, !dbg !5006
  %1 = trunc i64 %bf.load to i16, !dbg !5006
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !5007

sw.default:                                       ; preds = %entry
  br label %return, !dbg !5008

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !5010
  ret i8 %retval.0, !dbg !5011
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_addr(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i8* @get_name(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !5012 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5014, metadata !DIExpression()), !dbg !5016
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !5015, metadata !DIExpression()), !dbg !5016
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #8, !dbg !5017
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !5018
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5020

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5021
  %bf.load = load i64, i64* %0, align 8, !dbg !5021
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5022
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5022
  br i1 %cmp, label %if.then, label %if.end, !dbg !5023

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5024
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5024
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !5025
  br label %if.end, !dbg !5024

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !5026
}

declare dso_local %struct.basic_block_def* @gsi_insert_on_edge_immediate(%struct.edge_def*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_seq_empty_p(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5027 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5031, metadata !DIExpression()), !dbg !5032
  %cmp = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5033
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !5034

lor.rhs:                                          ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !5035
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !5035
  %cmp1 = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !5036
  %phitmp = zext i1 %cmp1 to i8, !dbg !5034
  br label %lor.end, !dbg !5034

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %1, !dbg !5037
}

declare dso_local %struct.basic_block_def* @split_edge(%struct.edge_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @single_pred(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5038 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5040, metadata !DIExpression()), !dbg !5041
  %call = tail call fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) #8, !dbg !5042
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 0, !dbg !5043
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5043
  ret %struct.basic_block_def* %0, !dbg !5044
}

; Function Attrs: nounwind uwtable
define internal i32 @name_to_copy_elt_hash(i8* %aa) #5 !dbg !5045 {
entry:
  call void @llvm.dbg.value(metadata i8* %aa, metadata !5047, metadata !DIExpression()), !dbg !5049
  call void @llvm.dbg.value(metadata i8* %aa, metadata !5048, metadata !DIExpression()), !dbg !5049
  %version = bitcast i8* %aa to i32*, !dbg !5050
  %0 = load i32, i32* %version, align 8, !dbg !5050
  ret i32 %0, !dbg !5051
}

; Function Attrs: nounwind uwtable
define internal i32 @name_to_copy_elt_eq(i8* %aa, i8* %bb) #5 !dbg !5052 {
entry:
  call void @llvm.dbg.value(metadata i8* %aa, metadata !5054, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8* %bb, metadata !5055, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8* %aa, metadata !5056, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i8* %bb, metadata !5057, metadata !DIExpression()), !dbg !5058
  %version = bitcast i8* %aa to i32*, !dbg !5059
  %0 = load i32, i32* %version, align 8, !dbg !5059
  %version1 = bitcast i8* %bb to i32*, !dbg !5060
  %1 = load i32, i32* %version1, align 8, !dbg !5060
  %cmp = icmp eq i32 %0, %1, !dbg !5061
  %conv = zext i1 %cmp to i32, !dbg !5061
  ret i32 %conv, !dbg !5062
}

; Function Attrs: nounwind uwtable
define internal fastcc void @separate_decls_in_region_stmt(%struct.edge_def* %entry1, %struct.edge_def* %exit, %union.gimple_statement_d* %stmt, %struct.htab* %name_copies, %struct.htab* %decl_copies) unnamed_addr #5 !dbg !5063 {
entry:
  %oi = alloca %struct.ssa_operand_iterator_d, align 8
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !5067, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !5068, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5069, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.htab* %name_copies, metadata !5070, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.htab* %decl_copies, metadata !5071, metadata !DIExpression()), !dbg !5090
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %oi, i64 0, i32 0, !dbg !5091
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #7, !dbg !5091
  tail call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %stmt) #6, !dbg !5092
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !5093
  %cmp = icmp eq i32 %call, 16, !dbg !5093
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5093

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5074, metadata !DIExpression(DW_OP_deref)), !dbg !5090
  %call2 = call fastcc %union.tree_node** @op_iter_init_phidef(%struct.ssa_operand_iterator_d* nonnull %oi, %union.gimple_statement_d* %stmt, i32 2) #8, !dbg !5093
  br label %cond.end, !dbg !5093

cond.false:                                       ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5074, metadata !DIExpression(DW_OP_deref)), !dbg !5090
  %call3 = call fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* nonnull %oi, %union.gimple_statement_d* %stmt, i32 2) #8, !dbg !5093
  br label %cond.end, !dbg !5093

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node** [ %call2, %cond.true ], [ %call3, %cond.false ], !dbg !5093
  call void @llvm.dbg.value(metadata %union.tree_node** %cond, metadata !5073, metadata !DIExpression()), !dbg !5090
  br label %for.cond, !dbg !5093

for.cond:                                         ; preds = %for.inc, %cond.end
  %def.0 = phi %union.tree_node** [ %cond, %cond.end ], [ %call17, %for.inc ], !dbg !5095
  call void @llvm.dbg.value(metadata %union.tree_node** %def.0, metadata !5073, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5074, metadata !DIExpression(DW_OP_deref)), !dbg !5090
  %call4 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %oi) #8, !dbg !5096
  %tobool = icmp eq i8 %call4, 0, !dbg !5096
  br i1 %tobool, label %for.body, label %for.end, !dbg !5093

for.body:                                         ; preds = %for.cond
  %call5 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %def.0) #8, !dbg !5098
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5087, metadata !DIExpression()), !dbg !5090
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5100
  %bf.load = load i64, i64* %1, align 8, !dbg !5100
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5100
  %cmp6 = icmp eq i64 %bf.cast2, 141, !dbg !5100
  br i1 %cmp6, label %cond.end9, label %cond.true7, !dbg !5100

cond.true7:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5100
  br label %cond.end9, !dbg !5100

cond.end9:                                        ; preds = %for.body, %cond.true7
  %call11 = call fastcc %union.tree_node* @separate_decls_in_region_name(%union.tree_node* %call5, %struct.htab* %name_copies, %struct.htab* %decl_copies, i8 zeroext 0) #8, !dbg !5101
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5088, metadata !DIExpression()), !dbg !5090
  %cmp12 = icmp eq %union.tree_node* %call11, %call5, !dbg !5102
  br i1 %cmp12, label %for.inc, label %cond.true13, !dbg !5102

cond.true13:                                      ; preds = %cond.end9
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 690, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5102
  br label %for.inc, !dbg !5102

for.inc:                                          ; preds = %cond.true13, %cond.end9
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5074, metadata !DIExpression(DW_OP_deref)), !dbg !5090
  %call17 = call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* nonnull %oi) #8, !dbg !5096
  call void @llvm.dbg.value(metadata %union.tree_node** %call17, metadata !5073, metadata !DIExpression()), !dbg !5090
  br label %for.cond, !dbg !5096, !llvm.loop !5103

for.end:                                          ; preds = %for.cond
  %call18 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !5105
  %cmp19 = icmp eq i32 %call18, 16, !dbg !5105
  br i1 %cmp19, label %cond.true20, label %cond.false22, !dbg !5105

cond.true20:                                      ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5074, metadata !DIExpression(DW_OP_deref)), !dbg !5090
  %call21 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %oi, %union.gimple_statement_d* %stmt, i32 1) #8, !dbg !5105
  br label %cond.end24, !dbg !5105

cond.false22:                                     ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5074, metadata !DIExpression(DW_OP_deref)), !dbg !5090
  %call23 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %oi, %union.gimple_statement_d* %stmt, i32 1) #8, !dbg !5105
  br label %cond.end24, !dbg !5105

cond.end24:                                       ; preds = %cond.false22, %cond.true20
  %cond25 = phi %struct.ssa_use_operand_d* [ %call21, %cond.true20 ], [ %call23, %cond.false22 ], !dbg !5105
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %cond25, metadata !5072, metadata !DIExpression()), !dbg !5090
  br label %for.cond26, !dbg !5105

for.cond26:                                       ; preds = %for.inc39, %cond.end24
  %use.0 = phi %struct.ssa_use_operand_d* [ %cond25, %cond.end24 ], [ %call40, %for.inc39 ], !dbg !5107
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use.0, metadata !5072, metadata !DIExpression()), !dbg !5090
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5074, metadata !DIExpression(DW_OP_deref)), !dbg !5090
  %call27 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %oi) #8, !dbg !5108
  %tobool28 = icmp eq i8 %call27, 0, !dbg !5108
  br i1 %tobool28, label %for.body30, label %for.end41, !dbg !5105

for.body30:                                       ; preds = %for.cond26
  %call31 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use.0) #8, !dbg !5110
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !5087, metadata !DIExpression()), !dbg !5090
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5112
  %bf.load33 = load i64, i64* %2, align 8, !dbg !5112
  %bf.cast351 = and i64 %bf.load33, 65535, !dbg !5114
  %cmp36 = icmp eq i64 %bf.cast351, 141, !dbg !5114
  br i1 %cmp36, label %if.end, label %for.inc39, !dbg !5115

if.end:                                           ; preds = %for.body30
  %call37 = call fastcc zeroext i8 @expr_invariant_in_region_p(%struct.edge_def* %entry1, %struct.edge_def* %exit, %union.tree_node* %call31) #8, !dbg !5116
  call void @llvm.dbg.value(metadata i8 %call37, metadata !5089, metadata !DIExpression()), !dbg !5090
  %call38 = call fastcc %union.tree_node* @separate_decls_in_region_name(%union.tree_node* %call31, %struct.htab* %name_copies, %struct.htab* %decl_copies, i8 zeroext %call37) #8, !dbg !5117
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !5088, metadata !DIExpression()), !dbg !5090
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use.0, %union.tree_node* %call38) #8, !dbg !5118
  br label %for.inc39, !dbg !5119

for.inc39:                                        ; preds = %for.body30, %if.end
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5074, metadata !DIExpression(DW_OP_deref)), !dbg !5090
  %call40 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %oi) #8, !dbg !5108
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call40, metadata !5072, metadata !DIExpression()), !dbg !5090
  br label %for.cond26, !dbg !5108, !llvm.loop !5120

for.end41:                                        ; preds = %for.cond26
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #7, !dbg !5122
  ret void, !dbg !5122
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @separate_decls_in_region_debug_bind(%union.gimple_statement_d* %stmt, %struct.htab* %name_copies, %struct.htab* %decl_copies) unnamed_addr #5 !dbg !5123 {
entry:
  %oi = alloca %struct.ssa_operand_iterator_d, align 8
  %ielt = alloca %struct.int_tree_map, align 8
  %elt = alloca %struct.name_to_copy_elt, align 8
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5127, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata %struct.htab* %name_copies, metadata !5128, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata %struct.htab* %decl_copies, metadata !5129, metadata !DIExpression()), !dbg !5138
  %0 = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %oi, i64 0, i32 0, !dbg !5139
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %0) #7, !dbg !5139
  %1 = bitcast %struct.int_tree_map* %ielt to i8*, !dbg !5140
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5140
  %2 = bitcast %struct.name_to_copy_elt* %elt to i8*, !dbg !5141
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5141
  %call = tail call fastcc %union.tree_node* @gimple_debug_bind_get_var(%union.gimple_statement_d* %stmt) #8, !dbg !5142
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5132, metadata !DIExpression()), !dbg !5138
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5143
  %bf.load = load i64, i64* %3, align 8, !dbg !5143
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5145
  %cmp = icmp eq i64 %bf.cast1, 37, !dbg !5145
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5146

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast1, !dbg !5147
  %4 = load i32, i32* %arrayidx, align 4, !dbg !5147
  %cmp5 = icmp eq i32 %4, 3, !dbg !5147
  br i1 %cmp5, label %land.lhs.true, label %cond.true, !dbg !5147

land.lhs.true:                                    ; preds = %if.end
  %cmp10 = icmp eq i64 %bf.cast1, 32, !dbg !5147
  br i1 %cmp10, label %cond.end, label %lor.lhs.false, !dbg !5147

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp15 = icmp eq i64 %bf.cast1, 34, !dbg !5147
  br i1 %cmp15, label %cond.end, label %lor.lhs.false16, !dbg !5147

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %cmp21 = icmp eq i64 %bf.cast1, 36, !dbg !5147
  br i1 %cmp21, label %cond.end, label %lor.lhs.false22, !dbg !5147

lor.lhs.false22:                                  ; preds = %lor.lhs.false16
  %cmp27 = icmp eq i64 %bf.cast1, 141, !dbg !5147
  br i1 %cmp27, label %land.lhs.true28, label %cond.true, !dbg !5147

land.lhs.true28:                                  ; preds = %lor.lhs.false22
  %var29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5147
  %5 = bitcast i32* %var29 to i64**, !dbg !5147
  %6 = load i64*, i64** %5, align 8, !dbg !5147
  %bf.load31 = load i64, i64* %6, align 8, !dbg !5147
  %bf.cast337 = and i64 %bf.load31, 65535, !dbg !5147
  %cmp34 = icmp eq i64 %bf.cast337, 32, !dbg !5147
  br i1 %cmp34, label %cond.end, label %lor.lhs.false35, !dbg !5147

lor.lhs.false35:                                  ; preds = %land.lhs.true28
  %cmp42 = icmp eq i64 %bf.cast337, 34, !dbg !5147
  br i1 %cmp42, label %cond.end, label %lor.lhs.false43, !dbg !5147

lor.lhs.false43:                                  ; preds = %lor.lhs.false35
  %cmp50 = icmp eq i64 %bf.cast337, 36, !dbg !5147
  br i1 %cmp50, label %cond.end, label %cond.true, !dbg !5147

cond.true:                                        ; preds = %lor.lhs.false43, %lor.lhs.false22, %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 727, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5147
  br label %cond.end, !dbg !5147

cond.end:                                         ; preds = %land.lhs.true, %lor.lhs.false, %lor.lhs.false16, %land.lhs.true28, %lor.lhs.false35, %lor.lhs.false43, %cond.true
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5148
  %7 = load i32, i32* %uid, align 4, !dbg !5148
  %uid51 = getelementptr inbounds %struct.int_tree_map, %struct.int_tree_map* %ielt, i64 0, i32 0, !dbg !5149
  store i32 %7, i32* %uid51, align 8, !dbg !5150
  %call53 = call i8** @htab_find_slot_with_hash(%struct.htab* %decl_copies, i8* nonnull %1, i32 %7, i32 0) #6, !dbg !5151
  call void @llvm.dbg.value(metadata i8** %call53, metadata !5137, metadata !DIExpression()), !dbg !5138
  %tobool = icmp eq i8** %call53, null, !dbg !5152
  br i1 %tobool, label %cleanup, label %if.end55, !dbg !5154

if.end55:                                         ; preds = %cond.end
  %8 = bitcast i8** %call53 to %struct.int_tree_map**, !dbg !5155
  %9 = load %struct.int_tree_map*, %struct.int_tree_map** %8, align 8, !dbg !5155
  %to = getelementptr inbounds %struct.int_tree_map, %struct.int_tree_map* %9, i64 0, i32 1, !dbg !5156
  %10 = load %union.tree_node*, %union.tree_node** %to, align 8, !dbg !5156
  call fastcc void @gimple_debug_bind_set_var(%union.gimple_statement_d* %stmt, %union.tree_node* %10) #8, !dbg !5157
  %call56 = call fastcc i32 @gimple_code(%union.gimple_statement_d* %stmt) #8, !dbg !5158
  %cmp57 = icmp eq i32 %call56, 16, !dbg !5158
  br i1 %cmp57, label %cond.true58, label %cond.false60, !dbg !5158

cond.true58:                                      ; preds = %if.end55
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5131, metadata !DIExpression(DW_OP_deref)), !dbg !5138
  %call59 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* nonnull %oi, %union.gimple_statement_d* %stmt, i32 1) #8, !dbg !5158
  br label %cond.end62, !dbg !5158

cond.false60:                                     ; preds = %if.end55
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5131, metadata !DIExpression(DW_OP_deref)), !dbg !5138
  %call61 = call fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* nonnull %oi, %union.gimple_statement_d* %stmt, i32 1) #8, !dbg !5158
  br label %cond.end62, !dbg !5158

cond.end62:                                       ; preds = %cond.false60, %cond.true58
  %cond63 = phi %struct.ssa_use_operand_d* [ %call59, %cond.true58 ], [ %call61, %cond.false60 ], !dbg !5158
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %cond63, metadata !5130, metadata !DIExpression()), !dbg !5138
  %version75 = getelementptr inbounds %struct.name_to_copy_elt, %struct.name_to_copy_elt* %elt, i64 0, i32 0, !dbg !5160
  br label %for.cond, !dbg !5158

for.cond:                                         ; preds = %for.inc, %cond.end62
  %use.0 = phi %struct.ssa_use_operand_d* [ %cond63, %cond.end62 ], [ %call81, %for.inc ], !dbg !5163
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use.0, metadata !5130, metadata !DIExpression()), !dbg !5138
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5131, metadata !DIExpression(DW_OP_deref)), !dbg !5138
  %call64 = call fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* nonnull %oi) #8, !dbg !5164
  %tobool65 = icmp eq i8 %call64, 0, !dbg !5164
  br i1 %tobool65, label %for.body, label %cleanup.loopexit, !dbg !5158

for.body:                                         ; preds = %for.cond
  %call66 = call fastcc %union.tree_node* @get_use_from_ptr(%struct.ssa_use_operand_d* %use.0) #8, !dbg !5165
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !5133, metadata !DIExpression()), !dbg !5138
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5166
  %bf.load68 = load i64, i64* %11, align 8, !dbg !5166
  %bf.cast702 = and i64 %bf.load68, 65535, !dbg !5168
  %cmp71 = icmp eq i64 %bf.cast702, 141, !dbg !5168
  br i1 %cmp71, label %if.end73, label %for.inc, !dbg !5169

if.end73:                                         ; preds = %for.body
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %call66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5170
  %12 = bitcast %union.tree_node** %version to i32*, !dbg !5170
  %13 = load i32, i32* %12, align 8, !dbg !5170
  store i32 %13, i32* %version75, align 8, !dbg !5171
  %call77 = call i8** @htab_find_slot_with_hash(%struct.htab* %name_copies, i8* nonnull %2, i32 %13, i32 0) #6, !dbg !5172
  call void @llvm.dbg.value(metadata i8** %call77, metadata !5136, metadata !DIExpression()), !dbg !5138
  %tobool78 = icmp eq i8** %call77, null, !dbg !5173
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !5175

if.then79:                                        ; preds = %if.end73
  call fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %stmt) #8, !dbg !5176
  call fastcc void @update_stmt(%union.gimple_statement_d* %stmt) #8, !dbg !5178
  br label %cleanup, !dbg !5179

if.end80:                                         ; preds = %if.end73
  %14 = bitcast i8** %call77 to %struct.name_to_copy_elt**, !dbg !5180
  %15 = load %struct.name_to_copy_elt*, %struct.name_to_copy_elt** %14, align 8, !dbg !5180
  %new_name = getelementptr inbounds %struct.name_to_copy_elt, %struct.name_to_copy_elt* %15, i64 0, i32 1, !dbg !5180
  %16 = load %union.tree_node*, %union.tree_node** %new_name, align 8, !dbg !5180
  call fastcc void @set_ssa_use_from_ptr(%struct.ssa_use_operand_d* %use.0, %union.tree_node* %16) #8, !dbg !5180
  br label %for.inc, !dbg !5181

for.inc:                                          ; preds = %for.body, %if.end80
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %oi, metadata !5131, metadata !DIExpression(DW_OP_deref)), !dbg !5138
  %call81 = call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* nonnull %oi) #8, !dbg !5164
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %call81, metadata !5130, metadata !DIExpression()), !dbg !5138
  br label %for.cond, !dbg !5164, !llvm.loop !5182

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !5184

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end, %if.then79, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ 1, %cond.end ], [ 0, %if.then79 ], [ 0, %cleanup.loopexit ], !dbg !5138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5184
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #7, !dbg !5184
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %0) #7, !dbg !5184
  ret i8 %retval.0, !dbg !5184
}

declare dso_local void @gsi_remove(%struct.gimple_stmt_iterator*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_decl_stat(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @create_tmp_var_name(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @add_field_for_name(i8** %slot, i8* %data) #5 !dbg !5185 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5187, metadata !DIExpression()), !dbg !5195
  call void @llvm.dbg.value(metadata i8* %data, metadata !5188, metadata !DIExpression()), !dbg !5195
  %0 = bitcast i8** %slot to %struct.name_to_copy_elt**, !dbg !5196
  %1 = load %struct.name_to_copy_elt*, %struct.name_to_copy_elt** %0, align 8, !dbg !5196
  call void @llvm.dbg.value(metadata %struct.name_to_copy_elt* %1, metadata !5189, metadata !DIExpression()), !dbg !5195
  %2 = bitcast i8* %data to %union.tree_node*, !dbg !5197
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5191, metadata !DIExpression()), !dbg !5195
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5198
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 3, !dbg !5198
  %4 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5198
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %4, i64 0, i32 2, !dbg !5198
  %5 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !5198
  %tobool = icmp eq %struct.VEC_tree_gc* %5, null, !dbg !5198
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5198

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %5, i64 0, i32 0, !dbg !5198
  br label %cond.end, !dbg !5198

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5198
  %version = getelementptr inbounds %struct.name_to_copy_elt, %struct.name_to_copy_elt* %1, i64 0, i32 0, !dbg !5198
  %6 = load i32, i32* %version, align 8, !dbg !5198
  %call = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %6) #8, !dbg !5198
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5192, metadata !DIExpression()), !dbg !5195
  %var4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5199
  %7 = bitcast i32* %var4 to %union.tree_node**, !dbg !5199
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !5199
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5193, metadata !DIExpression()), !dbg !5195
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5200
  %9 = load i32, i32* %locus, align 8, !dbg !5200
  %name6 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5200
  %10 = load %union.tree_node*, %union.tree_node** %name6, align 8, !dbg !5200
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5200
  %11 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !5200
  %call8 = tail call %union.tree_node* @build_decl_stat(i32 %9, i32 31, %union.tree_node* %10, %union.tree_node* %11) #6, !dbg !5200
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5194, metadata !DIExpression()), !dbg !5195
  tail call void @insert_field_into_struct(%union.tree_node* %2, %union.tree_node* %call8) #6, !dbg !5201
  %field9 = getelementptr inbounds %struct.name_to_copy_elt, %struct.name_to_copy_elt* %1, i64 0, i32 2, !dbg !5202
  store %union.tree_node* %call8, %union.tree_node** %field9, align 8, !dbg !5203
  ret i32 1, !dbg !5204
}

; Function Attrs: nounwind uwtable
define internal i32 @add_field_for_reduction(i8** %slot, i8* %data) #5 !dbg !5205 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5207, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.value(metadata i8* %data, metadata !5208, metadata !DIExpression()), !dbg !5214
  %0 = bitcast i8** %slot to %struct.reduction_info**, !dbg !5215
  %1 = load %struct.reduction_info*, %struct.reduction_info** %0, align 8, !dbg !5215
  call void @llvm.dbg.value(metadata %struct.reduction_info* %1, metadata !5209, metadata !DIExpression()), !dbg !5214
  %2 = bitcast i8* %data to %union.tree_node*, !dbg !5216
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !5210, metadata !DIExpression()), !dbg !5214
  %reduc_stmt = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 0, !dbg !5217
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !5217
  %call = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %3) #8, !dbg !5217
  %var1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5217
  %4 = bitcast i32* %var1 to %union.tree_node**, !dbg !5217
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5217
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5212, metadata !DIExpression()), !dbg !5214
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !5218
  %call3 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %6) #8, !dbg !5218
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5218
  %7 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !5218
  %type4 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5218
  %8 = load %union.tree_node*, %union.tree_node** %type4, align 8, !dbg !5218
  %call5 = tail call %union.tree_node* @build_decl_stat(i32 %call3, i32 31, %union.tree_node* %7, %union.tree_node* %8) #6, !dbg !5218
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5213, metadata !DIExpression()), !dbg !5214
  tail call void @insert_field_into_struct(%union.tree_node* %2, %union.tree_node* %call5) #6, !dbg !5219
  %field6 = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 5, !dbg !5220
  store %union.tree_node* %call5, %union.tree_node** %field6, align 8, !dbg !5221
  ret i32 1, !dbg !5222
}

declare dso_local void @layout_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @create_loads_and_stores_for_name(i8** %slot, i8* %data) #5 !dbg !5223 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp11 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5225, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8* %data, metadata !5226, metadata !DIExpression()), !dbg !5236
  %0 = bitcast i8** %slot to %struct.name_to_copy_elt**, !dbg !5237
  %1 = load %struct.name_to_copy_elt*, %struct.name_to_copy_elt** %0, align 8, !dbg !5237
  call void @llvm.dbg.value(metadata %struct.name_to_copy_elt* %1, metadata !5227, metadata !DIExpression()), !dbg !5236
  call void @llvm.dbg.value(metadata i8* %data, metadata !5228, metadata !DIExpression()), !dbg !5236
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5238
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5238
  %new_name = getelementptr inbounds %struct.name_to_copy_elt, %struct.name_to_copy_elt* %1, i64 0, i32 1, !dbg !5239
  %3 = bitcast %union.tree_node** %new_name to %struct.tree_common**, !dbg !5239
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !5239
  %type1 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !5239
  %5 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5239
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5233, metadata !DIExpression()), !dbg !5236
  %load = getelementptr inbounds i8, i8* %data, i64 8, !dbg !5240
  %6 = bitcast i8* %load to %struct.tree_common**, !dbg !5240
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !5240
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !5240
  %8 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !5240
  %9 = load %struct.tree_common*, %struct.tree_common** %8, align 8, !dbg !5240
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !5240
  %10 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !5240
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !5234, metadata !DIExpression()), !dbg !5236
  %11 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5241
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #7, !dbg !5241
  %store_bb = getelementptr inbounds i8, i8* %data, i64 16, !dbg !5242
  %12 = bitcast i8* %store_bb to %struct.basic_block_def**, !dbg !5242
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %12, align 8, !dbg !5242
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %13) #8, !dbg !5241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !5241
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #7, !dbg !5241
  %store = bitcast i8* %data to %union.tree_node**, !dbg !5243
  %14 = load %union.tree_node*, %union.tree_node** %store, align 8, !dbg !5243
  %field = getelementptr inbounds %struct.name_to_copy_elt, %struct.name_to_copy_elt* %1, i64 0, i32 2, !dbg !5243
  %15 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !5243
  %call = call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %5, %union.tree_node* %14, %union.tree_node* %15, %union.tree_node* null) #6, !dbg !5243
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5230, metadata !DIExpression()), !dbg !5236
  %16 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5244
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %16, i64 0, i32 3, !dbg !5244
  %17 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5244
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %17, i64 0, i32 2, !dbg !5244
  %18 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !5244
  %tobool = icmp eq %struct.VEC_tree_gc* %18, null, !dbg !5244
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5244

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %18, i64 0, i32 0, !dbg !5244
  br label %cond.end, !dbg !5244

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5244
  %version = getelementptr inbounds %struct.name_to_copy_elt, %struct.name_to_copy_elt* %1, i64 0, i32 0, !dbg !5244
  %19 = load i32, i32* %version, align 8, !dbg !5244
  %call9 = call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %19) #8, !dbg !5244
  %call10 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call, %union.tree_node* %call9) #6, !dbg !5244
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call10, metadata !5231, metadata !DIExpression()), !dbg !5236
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %call10) #6, !dbg !5245
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5232, metadata !DIExpression(DW_OP_deref)), !dbg !5236
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call10, i32 0) #6, !dbg !5246
  %20 = bitcast %struct.gimple_stmt_iterator* %tmp11 to i8*, !dbg !5247
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #7, !dbg !5247
  %load_bb = getelementptr inbounds i8, i8* %data, i64 24, !dbg !5248
  %21 = bitcast i8* %load_bb to %struct.basic_block_def**, !dbg !5248
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %21, align 8, !dbg !5248
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp11, %struct.basic_block_def* %22) #8, !dbg !5247
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %20, i64 24, i1 false), !dbg !5247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #7, !dbg !5247
  %23 = bitcast i8* %load to %union.tree_node**, !dbg !5249
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !5249
  %call13 = call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 47, %union.tree_node* %10, %union.tree_node* %24) #6, !dbg !5249
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !5235, metadata !DIExpression()), !dbg !5236
  %25 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !5250
  %call15 = call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %5, %union.tree_node* %call13, %union.tree_node* %25, %union.tree_node* null) #6, !dbg !5250
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !5230, metadata !DIExpression()), !dbg !5236
  %26 = load %union.tree_node*, %union.tree_node** %new_name, align 8, !dbg !5251
  %call17 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %26, %union.tree_node* %call15) #6, !dbg !5251
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call17, metadata !5231, metadata !DIExpression()), !dbg !5236
  %27 = bitcast %union.tree_node** %new_name to %struct.tree_ssa_name**, !dbg !5252
  %28 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %27, align 8, !dbg !5252
  %def_stmt = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %28, i64 0, i32 2, !dbg !5252
  store %union.gimple_statement_d* %call17, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5253
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5232, metadata !DIExpression(DW_OP_deref)), !dbg !5236
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call17, i32 0) #6, !dbg !5254
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5255
  ret i32 1, !dbg !5256
}

; Function Attrs: nounwind uwtable
define internal i32 @create_stores_for_reduction(i8** %slot, i8* %data) #5 !dbg !5257 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5259, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8* %data, metadata !5260, metadata !DIExpression()), !dbg !5267
  %0 = bitcast i8** %slot to %struct.reduction_info**, !dbg !5268
  %1 = load %struct.reduction_info*, %struct.reduction_info** %0, align 8, !dbg !5268
  call void @llvm.dbg.value(metadata %struct.reduction_info* %1, metadata !5261, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.value(metadata i8* %data, metadata !5262, metadata !DIExpression()), !dbg !5267
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5269
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5269
  %reduc_stmt = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 0, !dbg !5270
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !5270
  %call = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %3) #8, !dbg !5270
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5270
  %4 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5270
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5266, metadata !DIExpression()), !dbg !5267
  %5 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5271
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #7, !dbg !5271
  %store_bb = getelementptr inbounds i8, i8* %data, i64 16, !dbg !5272
  %6 = bitcast i8* %store_bb to %struct.basic_block_def**, !dbg !5272
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %6, align 8, !dbg !5272
  call fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %7) #8, !dbg !5271
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !5271
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #7, !dbg !5271
  %store = bitcast i8* %data to %union.tree_node**, !dbg !5273
  %8 = load %union.tree_node*, %union.tree_node** %store, align 8, !dbg !5273
  %field = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 5, !dbg !5273
  %9 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !5273
  %call2 = call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %4, %union.tree_node* %8, %union.tree_node* %9, %union.tree_node* null) #6, !dbg !5273
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !5263, metadata !DIExpression()), !dbg !5267
  %initial_value = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 4, !dbg !5274
  %10 = load %union.tree_node*, %union.tree_node** %initial_value, align 8, !dbg !5274
  %call3 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call2, %union.tree_node* %10) #6, !dbg !5274
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !5264, metadata !DIExpression()), !dbg !5267
  call void @mark_virtual_ops_for_renaming(%union.gimple_statement_d* %call3) #6, !dbg !5275
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5265, metadata !DIExpression(DW_OP_deref)), !dbg !5267
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call3, i32 0) #6, !dbg !5276
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5277
  ret i32 1, !dbg !5278
}

; Function Attrs: nounwind uwtable
define internal fastcc void @create_final_loads_for_reduction(%struct.htab* %reduction_list, %struct.clsn_data* %ld_st_data) unnamed_addr #5 !dbg !5279 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.htab* %reduction_list, metadata !5283, metadata !DIExpression()), !dbg !5288
  call void @llvm.dbg.value(metadata %struct.clsn_data* %ld_st_data, metadata !5284, metadata !DIExpression()), !dbg !5288
  %0 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5289
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5289
  %1 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5290
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !5290
  %load_bb = getelementptr inbounds %struct.clsn_data, %struct.clsn_data* %ld_st_data, i64 0, i32 3, !dbg !5291
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %load_bb, align 8, !dbg !5291
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %2) #8, !dbg !5290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5290
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !5290
  %store = getelementptr inbounds %struct.clsn_data, %struct.clsn_data* %ld_st_data, i64 0, i32 0, !dbg !5292
  %3 = load %union.tree_node*, %union.tree_node** %store, align 8, !dbg !5292
  %call = call %union.tree_node* @build_fold_addr_expr_loc(i32 0, %union.tree_node* %3) #6, !dbg !5292
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5286, metadata !DIExpression()), !dbg !5288
  %load = getelementptr inbounds %struct.clsn_data, %struct.clsn_data* %ld_st_data, i64 0, i32 1, !dbg !5293
  %4 = load %union.tree_node*, %union.tree_node** %load, align 8, !dbg !5293
  %call1 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %4, %union.tree_node* %call) #6, !dbg !5293
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call1, metadata !5287, metadata !DIExpression()), !dbg !5288
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5285, metadata !DIExpression(DW_OP_deref)), !dbg !5288
  call void @gsi_insert_before(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call1, i32 0) #6, !dbg !5294
  %5 = bitcast %union.tree_node** %load to %struct.tree_ssa_name**, !dbg !5295
  %6 = load %struct.tree_ssa_name*, %struct.tree_ssa_name** %5, align 8, !dbg !5295
  %def_stmt = getelementptr inbounds %struct.tree_ssa_name, %struct.tree_ssa_name* %6, i64 0, i32 2, !dbg !5295
  store %union.gimple_statement_d* %call1, %union.gimple_statement_d** %def_stmt, align 8, !dbg !5296
  %7 = bitcast %struct.clsn_data* %ld_st_data to i8*, !dbg !5297
  call void @htab_traverse(%struct.htab* %reduction_list, i32 (i8**, i8*)* nonnull @create_loads_for_reductions, i8* %7) #6, !dbg !5298
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #7, !dbg !5299
  ret void, !dbg !5299
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @single_pred_edge(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5300 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5302, metadata !DIExpression()), !dbg !5303
  %call = tail call fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #8, !dbg !5304
  %tobool = icmp eq i8 %call, 0, !dbg !5304
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5304

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0), i32 655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5304
  br label %cond.end, !dbg !5304

cond.end:                                         ; preds = %entry, %cond.true
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5305
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5305
  %tobool1 = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5305
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !5305

cond.true2:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5305
  br label %cond.end5, !dbg !5305

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.end ], !dbg !5305
  %call7 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0) #8, !dbg !5305
  ret %struct.edge_def* %call7, !dbg !5306
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5307 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5309, metadata !DIExpression()), !dbg !5310
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5311
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5311
  %tobool = icmp eq %struct.VEC_edge_gc* %0, null, !dbg !5311
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5311

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %0, i64 0, i32 0, !dbg !5311
  br label %cond.end, !dbg !5311

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5311
  %call = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #8, !dbg !5311
  %cmp = icmp eq i32 %call, 1, !dbg !5312
  %conv2 = zext i1 %cmp to i8, !dbg !5311
  ret i8 %conv2, !dbg !5313
}

declare dso_local void @mark_virtual_ops_for_renaming(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_phidef(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !5314 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5319, metadata !DIExpression()), !dbg !5324
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !5320, metadata !DIExpression()), !dbg !5324
  call void @llvm.dbg.value(metadata i32 2, metadata !5321, metadata !DIExpression()), !dbg !5324
  %call = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #8, !dbg !5325
  %call1 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call) #8, !dbg !5325
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5322, metadata !DIExpression()), !dbg !5324
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5326
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5327
  store i8 0, i8* %done, align 8, !dbg !5328
  %call2 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call1) #6, !dbg !5329
  %tobool = icmp eq i8 %call2, 0, !dbg !5329
  br i1 %tobool, label %if.then, label %if.end, !dbg !5330

if.then:                                          ; preds = %entry
  store i8 1, i8* %done, align 8, !dbg !5331
  br label %cleanup, !dbg !5334

if.end:                                           ; preds = %entry
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5335
  store i32 3, i32* %iter_type, align 4, !dbg !5336
  %call8 = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %phi) #8, !dbg !5337
  br label %cleanup, !dbg !5338

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ null, %if.then ], [ %call8, %if.end ], !dbg !5324
  ret %union.tree_node** %retval.0, !dbg !5339
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_init_def(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5340 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5342, metadata !DIExpression()), !dbg !5345
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5343, metadata !DIExpression()), !dbg !5345
  call void @llvm.dbg.value(metadata i32 2, metadata !5344, metadata !DIExpression()), !dbg !5345
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 2) #8, !dbg !5346
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5347
  store i32 3, i32* %iter_type, align 4, !dbg !5348
  %call = tail call fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5349
  ret %union.tree_node** %call, !dbg !5350
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @op_iter_done(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5351 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5357, metadata !DIExpression()), !dbg !5358
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5359
  %0 = load i8, i8* %done, align 8, !dbg !5359
  ret i8 %0, !dbg !5360
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @separate_decls_in_region_name(%union.tree_node* %name, %struct.htab* %name_copies, %struct.htab* %decl_copies, i8 zeroext %copy_name_p) unnamed_addr #5 !dbg !5361 {
entry:
  %ielt = alloca %struct.int_tree_map, align 8
  %elt = alloca %struct.name_to_copy_elt, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %name, metadata !5365, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata %struct.htab* %name_copies, metadata !5366, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata %struct.htab* %decl_copies, metadata !5367, metadata !DIExpression()), !dbg !5381
  call void @llvm.dbg.value(metadata i8 %copy_name_p, metadata !5368, metadata !DIExpression()), !dbg !5381
  %0 = bitcast %struct.int_tree_map* %ielt to i8*, !dbg !5382
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #7, !dbg !5382
  %1 = bitcast %struct.name_to_copy_elt* %elt to i8*, !dbg !5383
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #7, !dbg !5383
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5384
  %bf.load = load i64, i64* %2, align 8, !dbg !5384
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5386
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5386
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5387

if.end:                                           ; preds = %entry
  %version = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5388
  %3 = bitcast %union.tree_node** %version to i32*, !dbg !5388
  %4 = load i32, i32* %3, align 8, !dbg !5388
  call void @llvm.dbg.value(metadata i32 %4, metadata !5372, metadata !DIExpression()), !dbg !5381
  %version1 = getelementptr inbounds %struct.name_to_copy_elt, %struct.name_to_copy_elt* %elt, i64 0, i32 0, !dbg !5389
  store i32 %4, i32* %version1, align 8, !dbg !5390
  %tobool = icmp ne i8 %copy_name_p, 0, !dbg !5391
  %cond = zext i1 %tobool to i32, !dbg !5391
  %call = call i8** @htab_find_slot_with_hash(%struct.htab* %name_copies, i8* nonnull %1, i32 %4, i32 %cond) #6, !dbg !5392
  call void @llvm.dbg.value(metadata i8** %call, metadata !5379, metadata !DIExpression()), !dbg !5381
  %tobool2 = icmp eq i8** %call, null, !dbg !5393
  br i1 %tobool2, label %if.end5, label %land.lhs.true, !dbg !5395

land.lhs.true:                                    ; preds = %if.end
  %5 = load i8*, i8** %call, align 8, !dbg !5396
  %tobool3 = icmp eq i8* %5, null, !dbg !5396
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !5397

if.then4:                                         ; preds = %land.lhs.true
  %new_name = getelementptr inbounds i8, i8* %5, i64 8, !dbg !5398
  %6 = bitcast i8* %new_name to %union.tree_node**, !dbg !5398
  %7 = load %union.tree_node*, %union.tree_node** %6, align 8, !dbg !5398
  br label %cleanup, !dbg !5399

if.end5:                                          ; preds = %land.lhs.true, %if.end
  %var7 = getelementptr inbounds %union.tree_node, %union.tree_node* %name, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5400
  %8 = bitcast i32* %var7 to %union.tree_node**, !dbg !5400
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !5400
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5370, metadata !DIExpression()), !dbg !5381
  %uid8 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5401
  %10 = load i32, i32* %uid8, align 4, !dbg !5401
  call void @llvm.dbg.value(metadata i32 %10, metadata !5373, metadata !DIExpression()), !dbg !5381
  %uid9 = getelementptr inbounds %struct.int_tree_map, %struct.int_tree_map* %ielt, i64 0, i32 0, !dbg !5402
  store i32 %10, i32* %uid9, align 8, !dbg !5403
  %call10 = call i8** @htab_find_slot_with_hash(%struct.htab* %decl_copies, i8* nonnull %0, i32 %10, i32 1) #6, !dbg !5404
  call void @llvm.dbg.value(metadata i8** %call10, metadata !5380, metadata !DIExpression()), !dbg !5381
  %11 = load i8*, i8** %call10, align 8, !dbg !5405
  %tobool11 = icmp eq i8* %11, null, !dbg !5405
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !5407

if.then12:                                        ; preds = %if.end5
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5408
  %12 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5408
  %call13 = call i8* @get_name(%union.tree_node* %9) #6, !dbg !5410
  %call14 = call %union.tree_node* @create_tmp_var(%union.tree_node* %12, i8* %call13) #6, !dbg !5411
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !5371, metadata !DIExpression()), !dbg !5381
  %gimple_reg_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5412
  %13 = bitcast i40* %gimple_reg_flag to i64*, !dbg !5412
  %bf.load15 = load i64, i64* %13, align 8, !dbg !5412
  %bf.cast17 = and i64 %bf.load15, 134217728, !dbg !5412
  %gimple_reg_flag19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5413
  %14 = bitcast i40* %gimple_reg_flag19 to i64*, !dbg !5413
  %bf.load20 = load i64, i64* %14, align 8, !dbg !5414
  %bf.clear21 = and i64 %bf.load20, -134217729, !dbg !5414
  %bf.set = or i64 %bf.clear21, %bf.cast17, !dbg !5414
  store i64 %bf.set, i64* %14, align 8, !dbg !5414
  %call22 = call zeroext i8 @add_referenced_var(%union.tree_node* %call14) #6, !dbg !5415
  %call23 = call i8* @xmalloc(i64 16) #6, !dbg !5416
  call void @llvm.dbg.value(metadata i8* %call23, metadata !5376, metadata !DIExpression()), !dbg !5381
  %uid24 = bitcast i8* %call23 to i32*, !dbg !5417
  store i32 %10, i32* %uid24, align 8, !dbg !5418
  %to = getelementptr inbounds i8, i8* %call23, i64 8, !dbg !5419
  %15 = bitcast i8* %to to %union.tree_node**, !dbg !5419
  store %union.tree_node* %call14, %union.tree_node** %15, align 8, !dbg !5420
  store i8* %call23, i8** %call10, align 8, !dbg !5421
  %uid26 = getelementptr inbounds %union.tree_node, %union.tree_node* %call14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5422
  %16 = load i32, i32* %uid26, align 4, !dbg !5422
  call void @llvm.dbg.value(metadata i32 %16, metadata !5374, metadata !DIExpression()), !dbg !5381
  store i32 %16, i32* %uid9, align 8, !dbg !5423
  %call28 = call i8** @htab_find_slot_with_hash(%struct.htab* %decl_copies, i8* nonnull %0, i32 %16, i32 1) #6, !dbg !5424
  call void @llvm.dbg.value(metadata i8** %call28, metadata !5380, metadata !DIExpression()), !dbg !5381
  %17 = load i8*, i8** %call28, align 8, !dbg !5425
  %tobool29 = icmp eq i8* %17, null, !dbg !5425
  br i1 %tobool29, label %cond.end, label %cond.true, !dbg !5425

cond.true:                                        ; preds = %if.then12
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 637, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5425
  br label %cond.end, !dbg !5425

cond.end:                                         ; preds = %if.then12, %cond.true
  %call31 = call i8* @xmalloc(i64 16) #6, !dbg !5426
  call void @llvm.dbg.value(metadata i8* %call31, metadata !5376, metadata !DIExpression()), !dbg !5381
  %uid32 = bitcast i8* %call31 to i32*, !dbg !5427
  store i32 %16, i32* %uid32, align 8, !dbg !5428
  %to33 = getelementptr inbounds i8, i8* %call31, i64 8, !dbg !5429
  %18 = bitcast i8* %to33 to %union.tree_node**, !dbg !5429
  store %union.tree_node* %call14, %union.tree_node** %18, align 8, !dbg !5430
  store i8* %call31, i8** %call28, align 8, !dbg !5431
  br label %if.end35, !dbg !5432

if.else:                                          ; preds = %if.end5
  %to34 = getelementptr inbounds i8, i8* %11, i64 8, !dbg !5433
  %19 = bitcast i8* %to34 to %union.tree_node**, !dbg !5433
  %20 = load %union.tree_node*, %union.tree_node** %19, align 8, !dbg !5433
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !5371, metadata !DIExpression()), !dbg !5381
  br label %if.end35

if.end35:                                         ; preds = %if.else, %cond.end
  %var_copy.0 = phi %union.tree_node* [ %20, %if.else ], [ %call14, %cond.end ], !dbg !5434
  call void @llvm.dbg.value(metadata %union.tree_node* %var_copy.0, metadata !5371, metadata !DIExpression()), !dbg !5381
  %tobool36 = icmp eq i8 %copy_name_p, 0, !dbg !5435
  br i1 %tobool36, label %if.else42, label %if.then37, !dbg !5437

if.then37:                                        ; preds = %if.end35
  %call38 = call %union.tree_node* @duplicate_ssa_name(%union.tree_node* %name, %union.gimple_statement_d* null) #6, !dbg !5438
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !5369, metadata !DIExpression()), !dbg !5381
  %call39 = call i8* @xmalloc(i64 24) #6, !dbg !5440
  call void @llvm.dbg.value(metadata i8* %call39, metadata !5378, metadata !DIExpression()), !dbg !5381
  %version40 = bitcast i8* %call39 to i32*, !dbg !5441
  store i32 %4, i32* %version40, align 8, !dbg !5442
  %new_name41 = getelementptr inbounds i8, i8* %call39, i64 8, !dbg !5443
  %21 = bitcast i8* %new_name41 to %union.tree_node**, !dbg !5443
  store %union.tree_node* %call38, %union.tree_node** %21, align 8, !dbg !5444
  %field = getelementptr inbounds i8, i8* %call39, i64 16, !dbg !5445
  %22 = bitcast i8* %field to %union.tree_node**, !dbg !5445
  store %union.tree_node* null, %union.tree_node** %22, align 8, !dbg !5446
  store i8* %call39, i8** %call, align 8, !dbg !5447
  br label %if.end48, !dbg !5448

if.else42:                                        ; preds = %if.end35
  br i1 %tobool2, label %if.end48, label %cond.true44, !dbg !5449

cond.true44:                                      ; preds = %if.else42
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 657, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5449
  br label %if.end48, !dbg !5449

if.end48:                                         ; preds = %if.else42, %cond.true44, %if.then37
  %copy.0 = phi %union.tree_node* [ %call38, %if.then37 ], [ %name, %if.else42 ], [ %name, %cond.true44 ], !dbg !5451
  call void @llvm.dbg.value(metadata %union.tree_node* %copy.0, metadata !5369, metadata !DIExpression()), !dbg !5381
  %var50 = getelementptr inbounds %union.tree_node, %union.tree_node* %copy.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5452
  %23 = bitcast i32* %var50 to %union.tree_node**, !dbg !5452
  store %union.tree_node* %var_copy.0, %union.tree_node** %23, align 8, !dbg !5453
  br label %cleanup, !dbg !5454

cleanup:                                          ; preds = %entry, %if.end48, %if.then4
  %retval.0 = phi %union.tree_node* [ %7, %if.then4 ], [ %copy.0, %if.end48 ], [ %name, %entry ], !dbg !5381
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #7, !dbg !5455
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #7, !dbg !5455
  ret %union.tree_node* %retval.0, !dbg !5455
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @op_iter_next_def(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5456 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5460, metadata !DIExpression()), !dbg !5462
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5463
  %0 = load %struct.def_optype_d*, %struct.def_optype_d** %defs, align 8, !dbg !5463
  %tobool = icmp eq %struct.def_optype_d* %0, null, !dbg !5465
  br i1 %tobool, label %if.end, label %if.then, !dbg !5466

if.then:                                          ; preds = %entry
  %def_ptr = getelementptr inbounds %struct.def_optype_d, %struct.def_optype_d* %0, i64 0, i32 1, !dbg !5467
  %1 = load %union.tree_node**, %union.tree_node*** %def_ptr, align 8, !dbg !5467
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !5461, metadata !DIExpression()), !dbg !5462
  %2 = bitcast %struct.def_optype_d* %0 to i64*, !dbg !5469
  %3 = load i64, i64* %2, align 8, !dbg !5469
  %4 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5470
  store i64 %3, i64* %4, align 8, !dbg !5470
  br label %cleanup, !dbg !5471

if.end:                                           ; preds = %entry
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5472
  store i8 1, i8* %done, align 8, !dbg !5473
  br label %cleanup, !dbg !5474

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node** [ %1, %if.then ], [ null, %if.end ], !dbg !5462
  ret %union.tree_node** %retval.0, !dbg !5475
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_phiuse(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %phi, i32 %flags) unnamed_addr #0 !dbg !5476 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5480, metadata !DIExpression()), !dbg !5485
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %phi, metadata !5481, metadata !DIExpression()), !dbg !5485
  call void @llvm.dbg.value(metadata i32 1, metadata !5482, metadata !DIExpression()), !dbg !5485
  %call = tail call fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %phi) #8, !dbg !5486
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5483, metadata !DIExpression()), !dbg !5485
  tail call fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5487
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5488
  store i8 0, i8* %done, align 8, !dbg !5489
  %call1 = tail call zeroext i8 @is_gimple_reg(%union.tree_node* %call) #6, !dbg !5490
  %tobool = icmp eq i8 %call1, 0, !dbg !5490
  call void @llvm.dbg.value(metadata i1 %tobool, metadata !5484, metadata !DIExpression()), !dbg !5485
  br i1 %tobool, label %if.then, label %if.end, !dbg !5491

if.then:                                          ; preds = %entry
  store i8 1, i8* %done, align 8, !dbg !5492
  br label %cleanup, !dbg !5495

if.end:                                           ; preds = %entry
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5496
  store %union.gimple_statement_d* %phi, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5497
  %call7 = tail call fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %phi) #8, !dbg !5498
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5499
  store i32 %call7, i32* %num_phi, align 4, !dbg !5500
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5501
  store i32 2, i32* %iter_type, align 4, !dbg !5502
  %call8 = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5503
  br label %cleanup, !dbg !5504

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ null, %if.then ], [ %call8, %if.end ], !dbg !5485
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5505
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_init_use(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5506 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5508, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5509, metadata !DIExpression()), !dbg !5511
  call void @llvm.dbg.value(metadata i32 1, metadata !5510, metadata !DIExpression()), !dbg !5511
  tail call fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 1) #8, !dbg !5512
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5513
  store i32 2, i32* %iter_type, align 4, !dbg !5514
  %call = tail call fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) #8, !dbg !5515
  ret %struct.ssa_use_operand_d* %call, !dbg !5516
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @expr_invariant_in_region_p(%struct.edge_def* %entry1, %struct.edge_def* %exit, %union.tree_node* %expr) unnamed_addr #5 !dbg !5517 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %entry1, metadata !5521, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.value(metadata %struct.edge_def* %exit, metadata !5522, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !5523, metadata !DIExpression()), !dbg !5527
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %entry1, i64 0, i32 0, !dbg !5528
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5528
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !5524, metadata !DIExpression()), !dbg !5527
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %exit, i64 0, i32 1, !dbg !5529
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5529
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %1, metadata !5525, metadata !DIExpression()), !dbg !5527
  %call = tail call zeroext i8 @is_gimple_min_invariant(%union.tree_node* %expr) #6, !dbg !5530
  %tobool = icmp eq i8 %call, 0, !dbg !5530
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5532

if.end:                                           ; preds = %entry
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5533
  %bf.load = load i64, i64* %2, align 8, !dbg !5533
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5535
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !5535
  br i1 %cmp, label %if.then2, label %cleanup, !dbg !5536

if.then2:                                         ; preds = %if.end
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5537
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5537
  %4 = load %union.gimple_statement_d*, %union.gimple_statement_d** %3, align 8, !dbg !5537
  %call3 = tail call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %4) #8, !dbg !5539
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call3, metadata !5526, metadata !DIExpression()), !dbg !5527
  %tobool4 = icmp eq %struct.basic_block_def* %call3, null, !dbg !5540
  br i1 %tobool4, label %if.end11, label %land.lhs.true, !dbg !5542

land.lhs.true:                                    ; preds = %if.then2
  %call5 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* nonnull %call3, %struct.basic_block_def* %0) #6, !dbg !5543
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5543
  br i1 %tobool6, label %if.end11, label %land.lhs.true7, !dbg !5544

land.lhs.true7:                                   ; preds = %land.lhs.true
  %call8 = tail call zeroext i8 @dominated_by_p(i32 1, %struct.basic_block_def* nonnull %call3, %struct.basic_block_def* %1) #6, !dbg !5545
  %tobool9 = icmp eq i8 %call8, 0, !dbg !5545
  br i1 %tobool9, label %cleanup, label %if.end11, !dbg !5546

if.end11:                                         ; preds = %land.lhs.true7, %land.lhs.true, %if.then2
  br label %cleanup, !dbg !5547

cleanup:                                          ; preds = %land.lhs.true7, %entry, %if.end, %if.end11
  %retval.0 = phi i8 [ 1, %if.end11 ], [ 1, %entry ], [ 0, %land.lhs.true7 ], [ 0, %if.end ], !dbg !5527
  ret i8 %retval.0, !dbg !5548
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.ssa_use_operand_d* @op_iter_next_use(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5549 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5553, metadata !DIExpression()), !dbg !5555
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5556
  %0 = load %struct.use_optype_d*, %struct.use_optype_d** %uses, align 8, !dbg !5556
  %tobool = icmp eq %struct.use_optype_d* %0, null, !dbg !5558
  br i1 %tobool, label %if.end, label %if.then, !dbg !5559

if.then:                                          ; preds = %entry
  %use_ptr = getelementptr inbounds %struct.use_optype_d, %struct.use_optype_d* %0, i64 0, i32 1, !dbg !5560
  call void @llvm.dbg.value(metadata %struct.ssa_use_operand_d* %use_ptr, metadata !5554, metadata !DIExpression()), !dbg !5555
  %1 = bitcast %struct.use_optype_d* %0 to i64*, !dbg !5562
  %2 = load i64, i64* %1, align 8, !dbg !5562
  %3 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5563
  store i64 %2, i64* %3, align 8, !dbg !5563
  br label %cleanup, !dbg !5564

if.end:                                           ; preds = %entry
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5565
  %4 = load i32, i32* %phi_i, align 8, !dbg !5565
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5567
  %5 = load i32, i32* %num_phi, align 4, !dbg !5567
  %cmp = icmp slt i32 %4, %5, !dbg !5568
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !5569

if.then4:                                         ; preds = %if.end
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5570
  %6 = load %union.gimple_statement_d*, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5570
  %inc = add nsw i32 %4, 1, !dbg !5570
  store i32 %inc, i32* %phi_i, align 8, !dbg !5570
  %call = tail call fastcc %struct.ssa_use_operand_d* @gimple_phi_arg_imm_use_ptr(%union.gimple_statement_d* %6, i32 %4) #8, !dbg !5570
  br label %cleanup, !dbg !5572

if.end6:                                          ; preds = %if.end
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5573
  store i8 1, i8* %done, align 8, !dbg !5574
  br label %cleanup, !dbg !5575

cleanup:                                          ; preds = %if.end6, %if.then4, %if.then
  %retval.0 = phi %struct.ssa_use_operand_d* [ %use_ptr, %if.then ], [ %call, %if.then4 ], [ null, %if.end6 ], !dbg !5555
  ret %struct.ssa_use_operand_d* %retval.0, !dbg !5576
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @clear_and_done_ssa_iter(%struct.ssa_operand_iterator_d* %ptr) unnamed_addr #0 !dbg !5577 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5581, metadata !DIExpression()), !dbg !5582
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5583
  store %struct.def_optype_d* null, %struct.def_optype_d** %defs, align 8, !dbg !5584
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5585
  store %struct.use_optype_d* null, %struct.use_optype_d** %uses, align 8, !dbg !5586
  %iter_type = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 1, !dbg !5587
  store i32 0, i32* %iter_type, align 4, !dbg !5588
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5589
  store i32 0, i32* %phi_i, align 8, !dbg !5590
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5591
  store i32 0, i32* %num_phi, align 4, !dbg !5592
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5593
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5594
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5595
  store i8 1, i8* %done, align 8, !dbg !5596
  ret void, !dbg !5597
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @op_iter_init(%struct.ssa_operand_iterator_d* %ptr, %union.gimple_statement_d* %stmt, i32 %flags) unnamed_addr #0 !dbg !5598 {
entry:
  call void @llvm.dbg.value(metadata %struct.ssa_operand_iterator_d* %ptr, metadata !5602, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !5603, metadata !DIExpression()), !dbg !5605
  call void @llvm.dbg.value(metadata i32 %flags, metadata !5604, metadata !DIExpression()), !dbg !5605
  %0 = and i32 %flags, 10, !dbg !5606
  %1 = icmp eq i32 %0, 8, !dbg !5606
  br i1 %1, label %cond.true, label %land.lhs.true, !dbg !5606

land.lhs.true:                                    ; preds = %entry
  %2 = and i32 %flags, 5, !dbg !5606
  %3 = icmp eq i32 %2, 4, !dbg !5606
  br i1 %3, label %cond.true, label %cond.end, !dbg !5606

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.32, i64 0, i64 0), i32 747, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5606
  br label %cond.end, !dbg !5606

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %tobool9 = icmp eq i32 %0, 0, !dbg !5607
  br i1 %tobool9, label %cond.end12, label %cond.true10, !dbg !5608

cond.true10:                                      ; preds = %cond.end
  %call = tail call fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5609
  br label %cond.end12, !dbg !5608

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %4 = phi %struct.def_optype_d* [ %call, %cond.true10 ], [ null, %cond.end ], !dbg !5608
  %defs = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 2, !dbg !5610
  store %struct.def_optype_d* %4, %struct.def_optype_d** %defs, align 8, !dbg !5611
  %and14 = and i32 %flags, 8, !dbg !5612
  %tobool15 = icmp eq i32 %and14, 0, !dbg !5612
  br i1 %tobool15, label %land.lhs.true16, label %if.end, !dbg !5614

land.lhs.true16:                                  ; preds = %cond.end12
  %tobool18 = icmp eq %struct.def_optype_d* %4, null, !dbg !5615
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !5616

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %call20 = tail call fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %stmt) #8, !dbg !5617
  %cmp = icmp eq %union.tree_node* %call20, null, !dbg !5618
  br i1 %cmp, label %if.end, label %if.then, !dbg !5619

if.then:                                          ; preds = %land.lhs.true19
  %5 = bitcast %struct.def_optype_d** %defs to i64**, !dbg !5620
  %6 = load i64*, i64** %5, align 8, !dbg !5620
  %7 = load i64, i64* %6, align 8, !dbg !5621
  %8 = bitcast %struct.def_optype_d** %defs to i64*, !dbg !5622
  store i64 %7, i64* %8, align 8, !dbg !5622
  br label %if.end, !dbg !5623

if.end:                                           ; preds = %land.lhs.true19, %land.lhs.true16, %cond.end12, %if.then
  %and23 = and i32 %flags, 5, !dbg !5624
  %tobool24 = icmp eq i32 %and23, 0, !dbg !5624
  br i1 %tobool24, label %cond.end28, label %cond.true25, !dbg !5625

cond.true25:                                      ; preds = %if.end
  %call26 = tail call fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %stmt) #8, !dbg !5626
  br label %cond.end28, !dbg !5625

cond.end28:                                       ; preds = %if.end, %cond.true25
  %9 = phi %struct.use_optype_d* [ %call26, %cond.true25 ], [ null, %if.end ], !dbg !5625
  %uses = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 3, !dbg !5627
  store %struct.use_optype_d* %9, %struct.use_optype_d** %uses, align 8, !dbg !5628
  %and30 = and i32 %flags, 4, !dbg !5629
  %tobool31 = icmp eq i32 %and30, 0, !dbg !5629
  br i1 %tobool31, label %land.lhs.true32, label %if.end42, !dbg !5631

land.lhs.true32:                                  ; preds = %cond.end28
  %tobool34 = icmp eq %struct.use_optype_d* %9, null, !dbg !5632
  br i1 %tobool34, label %if.end42, label %land.lhs.true35, !dbg !5633

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %call36 = tail call fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %stmt) #8, !dbg !5634
  %cmp37 = icmp eq %union.tree_node* %call36, null, !dbg !5635
  br i1 %cmp37, label %if.end42, label %if.then38, !dbg !5636

if.then38:                                        ; preds = %land.lhs.true35
  %10 = bitcast %struct.use_optype_d** %uses to i64**, !dbg !5637
  %11 = load i64*, i64** %10, align 8, !dbg !5637
  %12 = load i64, i64* %11, align 8, !dbg !5638
  %13 = bitcast %struct.use_optype_d** %uses to i64*, !dbg !5639
  store i64 %12, i64* %13, align 8, !dbg !5639
  br label %if.end42, !dbg !5640

if.end42:                                         ; preds = %land.lhs.true35, %land.lhs.true32, %cond.end28, %if.then38
  %done = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 0, !dbg !5641
  store i8 0, i8* %done, align 8, !dbg !5642
  %phi_i = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 4, !dbg !5643
  store i32 0, i32* %phi_i, align 8, !dbg !5644
  %num_phi = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 5, !dbg !5645
  store i32 0, i32* %num_phi, align 4, !dbg !5646
  %phi_stmt = getelementptr inbounds %struct.ssa_operand_iterator_d, %struct.ssa_operand_iterator_d* %ptr, i64 0, i32 6, !dbg !5647
  store %union.gimple_statement_d* null, %union.gimple_statement_d** %phi_stmt, align 8, !dbg !5648
  ret void, !dbg !5649
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.def_optype_d* @gimple_def_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5650 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5654, metadata !DIExpression()), !dbg !5655
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !5656
  %tobool = icmp eq i8 %call, 0, !dbg !5656
  br i1 %tobool, label %return, label %if.end, !dbg !5658

if.end:                                           ; preds = %entry
  %def_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 1, !dbg !5659
  %0 = bitcast i32* %def_ops to %struct.def_optype_d**, !dbg !5659
  %1 = load %struct.def_optype_d*, %struct.def_optype_d** %0, align 8, !dbg !5659
  br label %return, !dbg !5660

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.def_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5655
  ret %struct.def_optype_d* %retval.0, !dbg !5661
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vdef(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5662 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5664, metadata !DIExpression()), !dbg !5665
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !5666
  %tobool = icmp eq i8 %call, 0, !dbg !5666
  br i1 %tobool, label %return, label %if.end, !dbg !5668

if.end:                                           ; preds = %entry
  %vdef = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, !dbg !5669
  %0 = bitcast [1 x %struct.phi_arg_d]* %vdef to %union.tree_node**, !dbg !5669
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5669
  br label %return, !dbg !5670

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5665
  ret %union.tree_node* %retval.0, !dbg !5671
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.use_optype_d* @gimple_use_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5672 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5676, metadata !DIExpression()), !dbg !5677
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) #8, !dbg !5678
  %tobool = icmp eq i8 %call, 0, !dbg !5678
  br i1 %tobool, label %return, label %if.end, !dbg !5680

if.end:                                           ; preds = %entry
  %use_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 3, !dbg !5681
  %0 = bitcast %union.tree_node** %use_ops to %struct.use_optype_d**, !dbg !5681
  %1 = load %struct.use_optype_d*, %struct.use_optype_d** %0, align 8, !dbg !5681
  br label %return, !dbg !5682

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %struct.use_optype_d* [ %1, %if.end ], [ null, %entry ], !dbg !5677
  ret %struct.use_optype_d* %retval.0, !dbg !5683
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_vuse(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5684 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5686, metadata !DIExpression()), !dbg !5687
  %call = tail call fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) #8, !dbg !5688
  %tobool = icmp eq i8 %call, 0, !dbg !5688
  br i1 %tobool, label %return, label %if.end, !dbg !5690

if.end:                                           ; preds = %entry
  %vuse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5691
  %0 = bitcast %struct.ssa_use_operand_d** %vuse to %union.tree_node**, !dbg !5691
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5691
  br label %return, !dbg !5692

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %1, %if.end ], [ null, %entry ], !dbg !5687
  ret %union.tree_node* %retval.0, !dbg !5693
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_mem_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !5694 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !5696, metadata !DIExpression()), !dbg !5697
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !5698
  %cmp = icmp ugt i32 %call, 5, !dbg !5699
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5700

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !5701
  %cmp2 = icmp ult i32 %call1, 10, !dbg !5702
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !5703
}

declare dso_local %union.tree_node* @duplicate_ssa_name(%union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_phi_result(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5704 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5706, metadata !DIExpression()), !dbg !5707
  %result = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 3, !dbg !5708
  %0 = load %union.tree_node*, %union.tree_node** %result, align 8, !dbg !5708
  ret %union.tree_node* %0, !dbg !5709
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5710 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5712, metadata !DIExpression()), !dbg !5713
  %nargs = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 2, !dbg !5714
  %0 = load i32, i32* %nargs, align 4, !dbg !5714
  ret i32 %0, !dbg !5715
}

declare dso_local zeroext i8 @is_gimple_min_invariant(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @dominated_by_p(i32, %struct.basic_block_def*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_debug_bind_get_var(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !5716 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !5720, metadata !DIExpression()), !dbg !5721
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %dbg, i32 0) #8, !dbg !5722
  ret %union.tree_node* %call, !dbg !5723
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_debug_bind_set_var(%union.gimple_statement_d* %dbg, %union.tree_node* %var) unnamed_addr #0 !dbg !5724 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !5726, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !5727, metadata !DIExpression()), !dbg !5728
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %dbg, i32 0, %union.tree_node* %var) #8, !dbg !5729
  ret void, !dbg !5730
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_debug_bind_reset_value(%union.gimple_statement_d* %dbg) unnamed_addr #0 !dbg !5731 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %dbg, metadata !5733, metadata !DIExpression()), !dbg !5734
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %dbg, i32 1, %union.tree_node* null) #8, !dbg !5735
  ret void, !dbg !5736
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5737 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5743, metadata !DIExpression()), !dbg !5745
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5744, metadata !DIExpression()), !dbg !5745
  br label %land.end, !dbg !5746

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5746
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5746
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5746
  ret %union.tree_node* %0, !dbg !5746
}

declare dso_local void @insert_field_into_struct(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_last_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !5747 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5749, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !5750, metadata !DIExpression()), !dbg !5753
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !5754
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !5751, metadata !DIExpression()), !dbg !5752
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %call) #8, !dbg !5755
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !5756
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !5757
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !5758
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !5759
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !5760
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !5761
  ret void, !dbg !5762
}

declare dso_local %union.tree_node* @build3_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_last(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !5763 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !5765, metadata !DIExpression()), !dbg !5766
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !5767
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5767

cond.true:                                        ; preds = %entry
  %last = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 1, !dbg !5768
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %last, align 8, !dbg !5768
  br label %cond.end, !dbg !5767

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !5767
  ret %struct.gimple_seq_node_d* %cond, !dbg !5769
}

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @create_loads_for_reductions(i8** %slot, i8* %data) #5 !dbg !5770 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp12 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5772, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i8* %data, metadata !5773, metadata !DIExpression()), !dbg !5783
  %0 = bitcast i8** %slot to %struct.reduction_info**, !dbg !5784
  %1 = load %struct.reduction_info*, %struct.reduction_info** %0, align 8, !dbg !5784
  call void @llvm.dbg.value(metadata %struct.reduction_info* %1, metadata !5774, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata i8* %data, metadata !5775, metadata !DIExpression()), !dbg !5783
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5785
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5785
  %reduc_stmt = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 0, !dbg !5786
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !5786
  %call = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %3) #8, !dbg !5786
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5786
  %4 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5786
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5778, metadata !DIExpression()), !dbg !5783
  %load = getelementptr inbounds i8, i8* %data, i64 8, !dbg !5787
  %5 = bitcast i8* %load to %struct.tree_common**, !dbg !5787
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !5787
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !5787
  %7 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !5787
  %8 = load %struct.tree_common*, %struct.tree_common** %7, align 8, !dbg !5787
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !5787
  %9 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !5787
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5779, metadata !DIExpression()), !dbg !5783
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5788
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #7, !dbg !5788
  %load_bb = getelementptr inbounds i8, i8* %data, i64 24, !dbg !5789
  %11 = bitcast i8* %load_bb to %struct.basic_block_def**, !dbg !5789
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %11, align 8, !dbg !5789
  call fastcc void @gsi_after_labels(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %12) #8, !dbg !5788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !5788
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #7, !dbg !5788
  %13 = bitcast i8* %load to %union.tree_node**, !dbg !5790
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !5790
  %call7 = call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 47, %union.tree_node* %9, %union.tree_node* %14) #6, !dbg !5790
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !5780, metadata !DIExpression()), !dbg !5783
  %field = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 5, !dbg !5791
  %15 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !5791
  %call8 = call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %4, %union.tree_node* %call7, %union.tree_node* %15, %union.tree_node* null) #6, !dbg !5791
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5780, metadata !DIExpression()), !dbg !5783
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !5782, metadata !DIExpression()), !dbg !5783
  %keep_res = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 3, !dbg !5792
  %16 = load %union.gimple_statement_d*, %union.gimple_statement_d** %keep_res, align 8, !dbg !5792
  %call9 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %16) #8, !dbg !5792
  %call10 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call9) #8, !dbg !5792
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5781, metadata !DIExpression()), !dbg !5783
  %call11 = call %union.gimple_statement_d* @gimple_build_assign_stat(%union.tree_node* %call10, %union.tree_node* %call8) #6, !dbg !5793
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call11, metadata !5776, metadata !DIExpression()), !dbg !5783
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5794
  %17 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5794
  store %union.gimple_statement_d* %call11, %union.gimple_statement_d** %17, align 8, !dbg !5795
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5777, metadata !DIExpression(DW_OP_deref)), !dbg !5783
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call11, i32 0) #6, !dbg !5796
  %18 = bitcast %struct.gimple_stmt_iterator* %tmp12 to i8*, !dbg !5797
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #7, !dbg !5797
  %19 = load %union.gimple_statement_d*, %union.gimple_statement_d** %keep_res, align 8, !dbg !5799
  %call14 = call fastcc %struct.basic_block_def* @gimple_bb(%union.gimple_statement_d* %19) #8, !dbg !5800
  call void @gsi_start_phis(%struct.gimple_stmt_iterator* nonnull sret %tmp12, %struct.basic_block_def* %call14) #6, !dbg !5797
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %18, i64 24, i1 false), !dbg !5797
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #7, !dbg !5797
  br label %for.cond, !dbg !5801

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5777, metadata !DIExpression(DW_OP_deref)), !dbg !5783
  %call15 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5802
  %tobool = icmp eq i8 %call15, 0, !dbg !5804
  br i1 %tobool, label %for.body, label %for.end, !dbg !5805

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5777, metadata !DIExpression(DW_OP_deref)), !dbg !5783
  %call16 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %gsi) #8, !dbg !5806
  %20 = load %union.gimple_statement_d*, %union.gimple_statement_d** %keep_res, align 8, !dbg !5808
  %cmp = icmp eq %union.gimple_statement_d* %call16, %20, !dbg !5809
  br i1 %cmp, label %if.then, label %for.inc, !dbg !5810

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5777, metadata !DIExpression(DW_OP_deref)), !dbg !5783
  call void @remove_phi_node(%struct.gimple_stmt_iterator* nonnull %gsi, i8 zeroext 0) #6, !dbg !5811
  br label %cleanup, !dbg !5813

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5777, metadata !DIExpression(DW_OP_deref)), !dbg !5783
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %gsi) #8, !dbg !5814
  br label %for.cond, !dbg !5815, !llvm.loop !5816

for.end:                                          ; preds = %for.cond
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i32 953, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5818
  br label %cleanup, !dbg !5819

cleanup:                                          ; preds = %for.end, %if.then
  %retval.0 = phi i32 [ 1, %if.then ], [ 0, %for.end ], !dbg !5783
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5820
  ret i32 %retval.0, !dbg !5820
}

declare dso_local %union.gimple_statement_d* @gimple_build_omp_parallel(%struct.gimple_seq_d*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @split_loop_exit_edge(%struct.edge_def*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_return(i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.edge_def* @loop_latch_edge(%struct.loop*) local_unnamed_addr #2

declare dso_local void @extract_true_false_edges_from_block(%struct.basic_block_def*, %struct.edge_def**, %struct.edge_def**) local_unnamed_addr #2

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_phi_arg_location_from_edge(%union.gimple_statement_d* %gs, %struct.edge_def* %e) unnamed_addr #0 !dbg !5821 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5825, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !5826, metadata !DIExpression()), !dbg !5827
  %dest_idx = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 6, !dbg !5828
  %0 = load i32, i32* %dest_idx, align 4, !dbg !5828
  %call = tail call fastcc %struct.phi_arg_d* @gimple_phi_arg(%union.gimple_statement_d* %gs, i32 %0) #8, !dbg !5829
  %locus = getelementptr inbounds %struct.phi_arg_d, %struct.phi_arg_d* %call, i64 0, i32 2, !dbg !5830
  %1 = load i32, i32* %locus, align 8, !dbg !5830
  ret i32 %1, !dbg !5831
}

declare dso_local %struct.edge_def* @redirect_edge_and_branch(%struct.edge_def*, %struct.basic_block_def*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_for(%struct.gimple_seq_d*, %union.tree_node*, i64, %struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_index(%union.gimple_statement_d* %gs, i64 %i, %union.tree_node* %index) unnamed_addr #0 !dbg !5832 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5836, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.value(metadata i64 0, metadata !5837, metadata !DIExpression()), !dbg !5839
  call void @llvm.dbg.value(metadata %union.tree_node* %index, metadata !5838, metadata !DIExpression()), !dbg !5839
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !5840
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !5840
  %1 = load i64, i64* %0, align 8, !dbg !5840
  %cmp = icmp eq i64 %1, 0, !dbg !5840
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5840

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 3475, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5840
  br label %cond.end, !dbg !5840

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5841
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !5841
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !5841
  %index2 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 0, i32 1, !dbg !5842
  store %union.tree_node* %index, %union.tree_node** %index2, align 8, !dbg !5843
  ret void, !dbg !5844
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_initial(%union.gimple_statement_d* %gs, i64 %i, %union.tree_node* %initial) unnamed_addr #0 !dbg !5845 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5847, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata i64 0, metadata !5848, metadata !DIExpression()), !dbg !5850
  call void @llvm.dbg.value(metadata %union.tree_node* %initial, metadata !5849, metadata !DIExpression()), !dbg !5850
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !5851
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !5851
  %1 = load i64, i64* %0, align 8, !dbg !5851
  %cmp = icmp eq i64 %1, 0, !dbg !5851
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5851

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 3508, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5851
  br label %cond.end, !dbg !5851

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5852
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !5852
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !5852
  %initial2 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 0, i32 2, !dbg !5853
  store %union.tree_node* %initial, %union.tree_node** %initial2, align 8, !dbg !5854
  ret void, !dbg !5855
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_final(%union.gimple_statement_d* %gs, i64 %i, %union.tree_node* %final) unnamed_addr #0 !dbg !5856 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5858, metadata !DIExpression()), !dbg !5861
  call void @llvm.dbg.value(metadata i64 0, metadata !5859, metadata !DIExpression()), !dbg !5861
  call void @llvm.dbg.value(metadata %union.tree_node* %final, metadata !5860, metadata !DIExpression()), !dbg !5861
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !5862
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !5862
  %1 = load i64, i64* %0, align 8, !dbg !5862
  %cmp = icmp eq i64 %1, 0, !dbg !5862
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5862

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 3541, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5862
  br label %cond.end, !dbg !5862

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5863
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !5863
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !5863
  %final2 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 0, i32 3, !dbg !5864
  store %union.tree_node* %final, %union.tree_node** %final2, align 8, !dbg !5865
  ret void, !dbg !5866
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_cond(%union.gimple_statement_d* %gs, i64 %i, i32 %cond) unnamed_addr #0 !dbg !5867 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5871, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.value(metadata i64 0, metadata !5872, metadata !DIExpression()), !dbg !5874
  call void @llvm.dbg.value(metadata i32 %cond, metadata !5873, metadata !DIExpression()), !dbg !5874
  %idxprom = sext i32 %cond to i64, !dbg !5875
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !5875
  %0 = load i32, i32* %arrayidx, align 4, !dbg !5875
  %cmp = icmp eq i32 %0, 5, !dbg !5875
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5875

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 4076, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5875
  br label %cond.end, !dbg !5875

cond.end:                                         ; preds = %entry, %cond.true
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !5876
  %1 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !5876
  %2 = load i64, i64* %1, align 8, !dbg !5876
  %cmp2 = icmp eq i64 %2, 0, !dbg !5876
  br i1 %cmp2, label %cond.true3, label %cond.end5, !dbg !5876

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 4077, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5876
  br label %cond.end5, !dbg !5876

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5877
  %3 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !5877
  %4 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %3, align 8, !dbg !5877
  %cond9 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %4, i64 0, i32 0, !dbg !5878
  store i32 %cond, i32* %cond9, align 8, !dbg !5879
  ret void, !dbg !5880
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_cond_code(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5881 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5883, metadata !DIExpression()), !dbg !5884
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 0, !dbg !5885
  %bf.load = load i32, i32* %0, align 8, !dbg !5885
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5885
  ret i32 %bf.lshr, !dbg !5886
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_omp_for_set_incr(%union.gimple_statement_d* %gs, i64 %i, %union.tree_node* %incr) unnamed_addr #0 !dbg !5887 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5889, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata i64 0, metadata !5890, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.value(metadata %union.tree_node* %incr, metadata !5891, metadata !DIExpression()), !dbg !5892
  %collapse = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, !dbg !5893
  %0 = bitcast [1 x %struct.phi_arg_d]* %collapse to i64*, !dbg !5893
  %1 = load i64, i64* %0, align 8, !dbg !5893
  %cmp = icmp eq i64 %1, 0, !dbg !5893
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5893

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i32 3574, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !5893
  br label %cond.end, !dbg !5893

cond.end:                                         ; preds = %entry, %cond.true
  %iter = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 1, !dbg !5894
  %2 = bitcast %struct.ssa_use_operand_d** %iter to %struct.gimple_omp_for_iter**, !dbg !5894
  %3 = load %struct.gimple_omp_for_iter*, %struct.gimple_omp_for_iter** %2, align 8, !dbg !5894
  %incr2 = getelementptr inbounds %struct.gimple_omp_for_iter, %struct.gimple_omp_for_iter* %3, i64 0, i32 4, !dbg !5895
  store %union.tree_node* %incr, %union.tree_node** %incr2, align 8, !dbg !5896
  ret void, !dbg !5897
}

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_continue(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @current_function_name() local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local void @clean_symbol_name(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_function_type_list(%union.tree_node*, ...) local_unnamed_addr #2

declare dso_local %struct.bitmap_head_def* @bitmap_gc_alloc_stat() local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

declare dso_local void @allocate_struct_function(%union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local void @set_cfun(%struct.function*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @create_phi_for_local_result(i8** %slot, i8* %data) #5 !dbg !5898 {
entry:
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5900, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i8* %data, metadata !5901, metadata !DIExpression()), !dbg !5910
  %0 = bitcast i8** %slot to %struct.reduction_info**, !dbg !5911
  %1 = load %struct.reduction_info*, %struct.reduction_info** %0, align 8, !dbg !5911
  call void @llvm.dbg.value(metadata %struct.reduction_info* %1, metadata !5902, metadata !DIExpression()), !dbg !5910
  call void @llvm.dbg.value(metadata i8* %data, metadata !5903, metadata !DIExpression()), !dbg !5910
  %latch = getelementptr inbounds i8, i8* %data, i64 16, !dbg !5912
  %2 = bitcast i8* %latch to %struct.basic_block_def**, !dbg !5912
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8, !dbg !5912
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 1, !dbg !5912
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !5912
  %tobool = icmp eq %struct.VEC_edge_gc* %4, null, !dbg !5912
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5912

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %data, metadata !5903, metadata !DIExpression()), !dbg !5910
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i64 0, i32 0, !dbg !5912
  br label %cond.end, !dbg !5912

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5912
  %call = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 0) #8, !dbg !5912
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i64 0, i32 7, !dbg !5912
  %5 = load i32, i32* %flags, align 8, !dbg !5912
  %and = and i32 %5, 1, !dbg !5912
  %tobool3 = icmp eq i32 %and, 0, !dbg !5912
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8, !dbg !5912
  %succs6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i64 0, i32 1, !dbg !5912
  %7 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs6, align 8, !dbg !5912
  %tobool7 = icmp ne %struct.VEC_edge_gc* %7, null, !dbg !5912
  br i1 %tobool3, label %cond.false16, label %cond.true4, !dbg !5912

cond.true4:                                       ; preds = %cond.end
  br i1 %tobool7, label %cond.true8, label %cond.end13, !dbg !5912

cond.true8:                                       ; preds = %cond.true4
  %base11 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !5912
  br label %cond.end13, !dbg !5912

cond.end13:                                       ; preds = %cond.true4, %cond.true8
  %cond14 = phi %struct.VEC_edge_base* [ %base11, %cond.true8 ], [ null, %cond.true4 ], !dbg !5912
  %call15 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond14, i32 0) #8, !dbg !5912
  br label %cond.end28, !dbg !5912

cond.false16:                                     ; preds = %cond.end
  br i1 %tobool7, label %cond.true20, label %cond.end25, !dbg !5912

cond.true20:                                      ; preds = %cond.false16
  %base23 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %7, i64 0, i32 0, !dbg !5912
  br label %cond.end25, !dbg !5912

cond.end25:                                       ; preds = %cond.false16, %cond.true20
  %cond26 = phi %struct.VEC_edge_base* [ %base23, %cond.true20 ], [ null, %cond.false16 ], !dbg !5912
  %call27 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond26, i32 1) #8, !dbg !5912
  br label %cond.end28, !dbg !5912

cond.end28:                                       ; preds = %cond.end25, %cond.end13
  %cond29 = phi %struct.edge_def* [ %call15, %cond.end13 ], [ %call27, %cond.end25 ], !dbg !5912
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %cond29, i64 0, i32 1, !dbg !5913
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5913
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %8, metadata !5907, metadata !DIExpression()), !dbg !5910
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i64 0, i32 0, !dbg !5914
  %9 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5914
  %tobool30 = icmp eq %struct.VEC_edge_gc* %9, null, !dbg !5914
  br i1 %tobool30, label %cond.end35, label %cond.true31, !dbg !5914

cond.true31:                                      ; preds = %cond.end28
  %base33 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %9, i64 0, i32 0, !dbg !5914
  br label %cond.end35, !dbg !5914

cond.end35:                                       ; preds = %cond.end28, %cond.true31
  %cond36 = phi %struct.VEC_edge_base* [ %base33, %cond.true31 ], [ null, %cond.end28 ], !dbg !5914
  %call37 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond36, i32 0) #8, !dbg !5914
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8, !dbg !5916
  %succs39 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i64 0, i32 1, !dbg !5916
  %11 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs39, align 8, !dbg !5916
  %tobool40 = icmp eq %struct.VEC_edge_gc* %11, null, !dbg !5916
  br i1 %tobool40, label %cond.end46, label %cond.true41, !dbg !5916

cond.true41:                                      ; preds = %cond.end35
  %base44 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %11, i64 0, i32 0, !dbg !5916
  br label %cond.end46, !dbg !5916

cond.end46:                                       ; preds = %cond.end35, %cond.true41
  %cond47 = phi %struct.VEC_edge_base* [ %base44, %cond.true41 ], [ null, %cond.end35 ], !dbg !5916
  %call48 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond47, i32 0) #8, !dbg !5916
  %flags49 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call48, i64 0, i32 7, !dbg !5916
  %12 = load i32, i32* %flags49, align 8, !dbg !5916
  %and50 = and i32 %12, 1, !dbg !5916
  %tobool51 = icmp eq i32 %and50, 0, !dbg !5916
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8, !dbg !5916
  %succs54 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 1, !dbg !5916
  %14 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs54, align 8, !dbg !5916
  %tobool55 = icmp ne %struct.VEC_edge_gc* %14, null, !dbg !5916
  br i1 %tobool51, label %cond.false64, label %cond.true52, !dbg !5916

cond.true52:                                      ; preds = %cond.end46
  br i1 %tobool55, label %cond.true56, label %cond.end61, !dbg !5916

cond.true56:                                      ; preds = %cond.true52
  %base59 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %14, i64 0, i32 0, !dbg !5916
  br label %cond.end61, !dbg !5916

cond.end61:                                       ; preds = %cond.true52, %cond.true56
  %cond62 = phi %struct.VEC_edge_base* [ %base59, %cond.true56 ], [ null, %cond.true52 ], !dbg !5916
  %call63 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond62, i32 0) #8, !dbg !5916
  br label %cond.end76, !dbg !5916

cond.false64:                                     ; preds = %cond.end46
  br i1 %tobool55, label %cond.true68, label %cond.end73, !dbg !5916

cond.true68:                                      ; preds = %cond.false64
  %base71 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %14, i64 0, i32 0, !dbg !5916
  br label %cond.end73, !dbg !5916

cond.end73:                                       ; preds = %cond.false64, %cond.true68
  %cond74 = phi %struct.VEC_edge_base* [ %base71, %cond.true68 ], [ null, %cond.false64 ], !dbg !5916
  %call75 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond74, i32 1) #8, !dbg !5916
  br label %cond.end76, !dbg !5916

cond.end76:                                       ; preds = %cond.end73, %cond.end61
  %cond77 = phi %struct.edge_def* [ %call63, %cond.end61 ], [ %call75, %cond.end73 ], !dbg !5916
  %cmp = icmp eq %struct.edge_def* %call37, %cond77, !dbg !5917
  %15 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5918
  %tobool79 = icmp ne %struct.VEC_edge_gc* %15, null, !dbg !5918
  br i1 %cmp, label %if.then, label %if.else, !dbg !5919

if.then:                                          ; preds = %cond.end76
  br i1 %tobool79, label %cond.true80, label %cond.end84, !dbg !5920

cond.true80:                                      ; preds = %if.then
  %base82 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i64 0, i32 0, !dbg !5920
  br label %cond.end84, !dbg !5920

cond.end84:                                       ; preds = %if.then, %cond.true80
  %cond85 = phi %struct.VEC_edge_base* [ %base82, %cond.true80 ], [ null, %if.then ], !dbg !5920
  %call86 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond85, i32 1) #8, !dbg !5920
  call void @llvm.dbg.value(metadata %struct.edge_def* %call86, metadata !5905, metadata !DIExpression()), !dbg !5910
  br label %if.end, !dbg !5921

if.else:                                          ; preds = %cond.end76
  br i1 %tobool79, label %cond.true89, label %cond.end93, !dbg !5922

cond.true89:                                      ; preds = %if.else
  %base91 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %15, i64 0, i32 0, !dbg !5922
  br label %cond.end93, !dbg !5922

cond.end93:                                       ; preds = %if.else, %cond.true89
  %cond94 = phi %struct.VEC_edge_base* [ %base91, %cond.true89 ], [ null, %if.else ], !dbg !5922
  %call95 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond94, i32 0) #8, !dbg !5922
  call void @llvm.dbg.value(metadata %struct.edge_def* %call95, metadata !5905, metadata !DIExpression()), !dbg !5910
  br label %if.end

if.end:                                           ; preds = %cond.end93, %cond.end84
  %e.0 = phi %struct.edge_def* [ %call86, %cond.end84 ], [ %call95, %cond.end93 ], !dbg !5918
  call void @llvm.dbg.value(metadata %struct.edge_def* %e.0, metadata !5905, metadata !DIExpression()), !dbg !5910
  %reduc_stmt = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 0, !dbg !5923
  %16 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !5923
  %call96 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %16) #8, !dbg !5923
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5923
  %17 = bitcast i32* %var to %union.tree_node**, !dbg !5923
  %18 = load %union.tree_node*, %union.tree_node** %17, align 8, !dbg !5923
  %call97 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %18, %union.gimple_statement_d* null) #8, !dbg !5924
  call void @llvm.dbg.value(metadata %union.tree_node* %call97, metadata !5908, metadata !DIExpression()), !dbg !5910
  %19 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !5925
  %call99 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %19) #8, !dbg !5926
  call void @llvm.dbg.value(metadata i32 %call99, metadata !5909, metadata !DIExpression()), !dbg !5910
  %call100 = tail call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %call97, %struct.basic_block_def* %8) #6, !dbg !5927
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call100, metadata !5906, metadata !DIExpression()), !dbg !5910
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call97, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5928
  %20 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5928
  store %union.gimple_statement_d* %call100, %union.gimple_statement_d** %20, align 8, !dbg !5929
  %init = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 6, !dbg !5930
  %21 = load %union.tree_node*, %union.tree_node** %init, align 8, !dbg !5930
  tail call void @add_phi_arg(%union.gimple_statement_d* %call100, %union.tree_node* %21, %struct.edge_def* %e.0, i32 %call99) #6, !dbg !5931
  %22 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_stmt, align 8, !dbg !5932
  %call103 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %22) #8, !dbg !5933
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8, !dbg !5934
  %succs105 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i64 0, i32 1, !dbg !5934
  %24 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs105, align 8, !dbg !5934
  %tobool106 = icmp eq %struct.VEC_edge_gc* %24, null, !dbg !5934
  br i1 %tobool106, label %cond.end112, label %cond.true107, !dbg !5934

cond.true107:                                     ; preds = %if.end
  %base110 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %24, i64 0, i32 0, !dbg !5934
  br label %cond.end112, !dbg !5934

cond.end112:                                      ; preds = %if.end, %cond.true107
  %cond113 = phi %struct.VEC_edge_base* [ %base110, %cond.true107 ], [ null, %if.end ], !dbg !5934
  %call114 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond113, i32 0) #8, !dbg !5934
  %flags115 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call114, i64 0, i32 7, !dbg !5934
  %25 = load i32, i32* %flags115, align 8, !dbg !5934
  %and116 = and i32 %25, 1, !dbg !5934
  %tobool117 = icmp eq i32 %and116, 0, !dbg !5934
  %26 = load %struct.basic_block_def*, %struct.basic_block_def** %2, align 8, !dbg !5934
  %succs120 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %26, i64 0, i32 1, !dbg !5934
  %27 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs120, align 8, !dbg !5934
  %tobool121 = icmp ne %struct.VEC_edge_gc* %27, null, !dbg !5934
  br i1 %tobool117, label %cond.false130, label %cond.true118, !dbg !5934

cond.true118:                                     ; preds = %cond.end112
  br i1 %tobool121, label %cond.true122, label %cond.end127, !dbg !5934

cond.true122:                                     ; preds = %cond.true118
  %base125 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %27, i64 0, i32 0, !dbg !5934
  br label %cond.end127, !dbg !5934

cond.end127:                                      ; preds = %cond.true118, %cond.true122
  %cond128 = phi %struct.VEC_edge_base* [ %base125, %cond.true122 ], [ null, %cond.true118 ], !dbg !5934
  %call129 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond128, i32 0) #8, !dbg !5934
  br label %cond.end142, !dbg !5934

cond.false130:                                    ; preds = %cond.end112
  br i1 %tobool121, label %cond.true134, label %cond.end139, !dbg !5934

cond.true134:                                     ; preds = %cond.false130
  %base137 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %27, i64 0, i32 0, !dbg !5934
  br label %cond.end139, !dbg !5934

cond.end139:                                      ; preds = %cond.false130, %cond.true134
  %cond140 = phi %struct.VEC_edge_base* [ %base137, %cond.true134 ], [ null, %cond.false130 ], !dbg !5934
  %call141 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond140, i32 1) #8, !dbg !5934
  br label %cond.end142, !dbg !5934

cond.end142:                                      ; preds = %cond.end139, %cond.end127
  %cond143 = phi %struct.edge_def* [ %call129, %cond.end127 ], [ %call141, %cond.end139 ], !dbg !5934
  tail call void @add_phi_arg(%union.gimple_statement_d* %call100, %union.tree_node* %call103, %struct.edge_def* %cond143, i32 %call99) #6, !dbg !5935
  %new_phi144 = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 7, !dbg !5936
  store %union.gimple_statement_d* %call100, %union.gimple_statement_d** %new_phi144, align 8, !dbg !5937
  ret i32 1, !dbg !5938
}

; Function Attrs: nounwind uwtable
define internal i32 @create_call_for_reduction_1(i8** %slot, i8* %data) #5 !dbg !5939 {
entry:
  %gsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  %tmp23 = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata i8** %slot, metadata !5941, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.value(metadata i8* %data, metadata !5942, metadata !DIExpression()), !dbg !5959
  %0 = bitcast i8** %slot to %struct.reduction_info**, !dbg !5960
  %1 = load %struct.reduction_info*, %struct.reduction_info** %0, align 8, !dbg !5960
  call void @llvm.dbg.value(metadata %struct.reduction_info* %1, metadata !5943, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.value(metadata i8* %data, metadata !5944, metadata !DIExpression()), !dbg !5959
  %2 = bitcast %struct.gimple_stmt_iterator* %gsi to i8*, !dbg !5961
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5961
  %reduc_phi = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 1, !dbg !5962
  %3 = load %union.gimple_statement_d*, %union.gimple_statement_d** %reduc_phi, align 8, !dbg !5962
  %call = tail call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %3) #8, !dbg !5962
  %call1 = tail call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call) #8, !dbg !5962
  %type2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5962
  %4 = load %union.tree_node*, %union.tree_node** %type2, align 8, !dbg !5962
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5946, metadata !DIExpression()), !dbg !5959
  %load = getelementptr inbounds i8, i8* %data, i64 8, !dbg !5963
  %5 = bitcast i8* %load to %struct.tree_common**, !dbg !5963
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !5963
  %type4 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !5963
  %7 = bitcast %union.tree_node** %type4 to %struct.tree_common**, !dbg !5963
  %8 = load %struct.tree_common*, %struct.tree_common** %7, align 8, !dbg !5963
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !5963
  %9 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !5963
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5947, metadata !DIExpression()), !dbg !5959
  %10 = bitcast %struct.tree_common* %6 to %union.tree_node*, !dbg !5964
  %call9 = tail call %union.tree_node* @fold_build1_stat_loc(i32 0, i32 47, %union.tree_node* %9, %union.tree_node* %10) #6, !dbg !5964
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5948, metadata !DIExpression()), !dbg !5959
  %field = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 5, !dbg !5965
  %11 = load %union.tree_node*, %union.tree_node** %field, align 8, !dbg !5965
  %call10 = tail call %union.tree_node* @build3_stat(i32 41, %union.tree_node* %4, %union.tree_node* %call9, %union.tree_node* %11, %union.tree_node* null) #6, !dbg !5965
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !5952, metadata !DIExpression()), !dbg !5959
  %12 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5966
  %call11 = tail call %union.tree_node* @build_addr(%union.tree_node* %call10, %union.tree_node* %12) #6, !dbg !5967
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !5953, metadata !DIExpression()), !dbg !5959
  %load_bb = getelementptr inbounds i8, i8* %data, i64 24, !dbg !5968
  %13 = bitcast i8* %load_bb to %struct.basic_block_def**, !dbg !5968
  %14 = load %struct.basic_block_def*, %struct.basic_block_def** %13, align 8, !dbg !5968
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %14, metadata !5949, metadata !DIExpression()), !dbg !5959
  %15 = bitcast %union.tree_node* %call10 to i8*, !dbg !5969
  %call12 = tail call %struct.edge_def* @split_block(%struct.basic_block_def* %14, i8* %15) #6, !dbg !5970
  call void @llvm.dbg.value(metadata %struct.edge_def* %call12, metadata !5951, metadata !DIExpression()), !dbg !5959
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call12, i64 0, i32 1, !dbg !5971
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5971
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %16, metadata !5950, metadata !DIExpression()), !dbg !5959
  %type14 = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5972
  %17 = bitcast %union.tree_node** %type14 to %struct.tree_common**, !dbg !5972
  %18 = load %struct.tree_common*, %struct.tree_common** %17, align 8, !dbg !5972
  %type16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 2, !dbg !5972
  %19 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !5972
  %call17 = tail call %union.tree_node* @create_tmp_var(%union.tree_node* %19, i8* null) #6, !dbg !5973
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !5956, metadata !DIExpression()), !dbg !5959
  %call18 = tail call zeroext i8 @add_referenced_var(%union.tree_node* %call17) #6, !dbg !5974
  %call19 = tail call fastcc %union.tree_node* @make_ssa_name(%union.tree_node* %call17, %union.gimple_statement_d* null) #8, !dbg !5975
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !5956, metadata !DIExpression()), !dbg !5959
  %call20 = tail call %union.gimple_statement_d* @gimple_build_omp_atomic_load(%union.tree_node* %call19, %union.tree_node* %call11) #6, !dbg !5976
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call20, metadata !5958, metadata !DIExpression()), !dbg !5959
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5977
  %20 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5977
  store %union.gimple_statement_d* %call20, %union.gimple_statement_d** %20, align 8, !dbg !5978
  %21 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !5979
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #7, !dbg !5979
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %16) #8, !dbg !5979
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %21, i64 24, i1 false), !dbg !5979
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #7, !dbg !5979
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5945, metadata !DIExpression(DW_OP_deref)), !dbg !5959
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call20, i32 0) #6, !dbg !5980
  %22 = bitcast %union.gimple_statement_d* %call20 to i8*, !dbg !5981
  %call21 = call %struct.edge_def* @split_block(%struct.basic_block_def* %16, i8* %22) #6, !dbg !5982
  call void @llvm.dbg.value(metadata %struct.edge_def* %call21, metadata !5951, metadata !DIExpression()), !dbg !5959
  %dest22 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call21, i64 0, i32 1, !dbg !5983
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %dest22, align 8, !dbg !5983
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %23, metadata !5950, metadata !DIExpression()), !dbg !5959
  %24 = bitcast %struct.gimple_stmt_iterator* %tmp23 to i8*, !dbg !5984
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #7, !dbg !5984
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp23, %struct.basic_block_def* %23) #8, !dbg !5984
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %24, i64 24, i1 false), !dbg !5984
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #7, !dbg !5984
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !5954, metadata !DIExpression()), !dbg !5959
  %reduction_code = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 2, !dbg !5985
  %25 = load i32, i32* %reduction_code, align 8, !dbg !5985
  %new_phi = getelementptr inbounds %struct.reduction_info, %struct.reduction_info* %1, i64 0, i32 7, !dbg !5985
  %26 = load %union.gimple_statement_d*, %union.gimple_statement_d** %new_phi, align 8, !dbg !5985
  %call24 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %26) #8, !dbg !5985
  %call25 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call24) #8, !dbg !5985
  %type27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5985
  %27 = load %union.tree_node*, %union.tree_node** %type27, align 8, !dbg !5985
  %28 = load %union.gimple_statement_d*, %union.gimple_statement_d** %new_phi, align 8, !dbg !5985
  %call29 = call fastcc %union.tree_node** @gimple_phi_result_ptr(%union.gimple_statement_d* %28) #8, !dbg !5985
  %call30 = call fastcc %union.tree_node* @get_def_from_ptr(%union.tree_node** %call29) #8, !dbg !5985
  %call31 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 %25, %union.tree_node* %27, %union.tree_node* %call19, %union.tree_node* %call30) #6, !dbg !5985
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !5955, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5945, metadata !DIExpression(DW_OP_deref)), !dbg !5959
  %call32 = call %union.tree_node* @force_gimple_operand_gsi(%struct.gimple_stmt_iterator* nonnull %gsi, %union.tree_node* %call31, i8 zeroext 1, %union.tree_node* null, i8 zeroext 1, i32 2) #6, !dbg !5986
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !5957, metadata !DIExpression()), !dbg !5959
  %call33 = call %union.gimple_statement_d* @gimple_build_omp_atomic_store(%union.tree_node* %call32) #6, !dbg !5987
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %gsi, metadata !5945, metadata !DIExpression(DW_OP_deref)), !dbg !5959
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %gsi, %union.gimple_statement_d* %call33, i32 0) #6, !dbg !5988
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #7, !dbg !5989
  ret i32 1, !dbg !5990
}

declare dso_local %struct.edge_def* @split_block(%struct.basic_block_def*, i8*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_atomic_load(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_omp_atomic_store(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_int_base_iterate(%struct.VEC_int_base* %vec_, i32 %ix_, i32* %ptr) unnamed_addr #0 !dbg !5991 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_base* %vec_, metadata !5997, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5998, metadata !DIExpression()), !dbg !6000
  call void @llvm.dbg.value(metadata i32* %ptr, metadata !5999, metadata !DIExpression()), !dbg !6000
  %tobool = icmp eq %struct.VEC_int_base* %vec_, null, !dbg !6001
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6001

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 0, !dbg !6001
  %0 = load i32, i32* %num, align 4, !dbg !6001
  %cmp = icmp ugt i32 %0, %ix_, !dbg !6001
  br i1 %cmp, label %if.then, label %if.else, !dbg !6003

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !6004
  %arrayidx = getelementptr inbounds %struct.VEC_int_base, %struct.VEC_int_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6004
  %1 = load i32, i32* %arrayidx, align 4, !dbg !6004
  br label %return, !dbg !6004

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !6006

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi i32 [ 0, %if.else ], [ %1, %if.then ], !dbg !6008
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !6008
  store i32 %storemerge, i32* %ptr, align 4, !dbg !6008
  ret i32 %retval.0, !dbg !6003
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.loop* @get_loop(i32 %num) unnamed_addr #0 !dbg !6009 {
entry:
  call void @llvm.dbg.value(metadata i32 %num, metadata !6013, metadata !DIExpression()), !dbg !6014
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6015
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 4, !dbg !6015
  %1 = load %struct.loops*, %struct.loops** %x_current_loops, align 8, !dbg !6015
  %larray = getelementptr inbounds %struct.loops, %struct.loops* %1, i64 0, i32 1, !dbg !6015
  %2 = load %struct.VEC_loop_p_gc*, %struct.VEC_loop_p_gc** %larray, align 8, !dbg !6015
  %tobool = icmp eq %struct.VEC_loop_p_gc* %2, null, !dbg !6015
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6015

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_loop_p_gc, %struct.VEC_loop_p_gc* %2, i64 0, i32 0, !dbg !6015
  br label %cond.end, !dbg !6015

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_loop_p_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6015
  %call = tail call fastcc %struct.loop* @VEC_loop_p_base_index(%struct.VEC_loop_p_base* %cond, i32 %num) #8, !dbg !6015
  ret %struct.loop* %call, !dbg !6016
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_int_heap_free(%struct.VEC_int_heap** %vec_) unnamed_addr #0 !dbg !6017 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_int_heap** %vec_, metadata !6022, metadata !DIExpression()), !dbg !6023
  %0 = load %struct.VEC_int_heap*, %struct.VEC_int_heap** %vec_, align 8, !dbg !6024
  %tobool = icmp eq %struct.VEC_int_heap* %0, null, !dbg !6024
  br i1 %tobool, label %if.end, label %if.then, !dbg !6026

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_int_heap* %0 to i8*, !dbg !6026
  tail call void @free(i8* nonnull %1) #6, !dbg !6024
  br label %if.end, !dbg !6024

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_int_heap* null, %struct.VEC_int_heap** %vec_, align 8, !dbg !6026
  ret void, !dbg !6026
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2083, !2084, !2085}
!llvm.ident = !{!2086}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "parallelized_functions", scope: !2, file: !3, line: 1210, type: !1048, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !468, globals: !2047, nameTableKind: None)
!3 = !DIFile(filename: "tree-parloops.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !386, !390, !429, !435, !461}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !378, line: 31, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!379 = !{!380, !381, !382, !383, !384, !385}
!380 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!386 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !378, line: 91, baseType: !7, size: 32, elements: !387)
!387 = !{!388, !389}
!388 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!389 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !391, line: 51, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428}
!393 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!397 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!399 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!400 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!401 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!402 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!403 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!404 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!405 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!406 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!407 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!408 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!409 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!410 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!411 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!412 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!413 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!414 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!415 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!416 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!417 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!418 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!419 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!420 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!421 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!422 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!423 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!424 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!425 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!426 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!427 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!428 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!429 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_rhs_class", file: !391, line: 80, baseType: !7, size: 32, elements: !430)
!430 = !{!431, !432, !433, !434}
!431 = !DIEnumerator(name: "GIMPLE_INVALID_RHS", value: 0, isUnsigned: true)
!432 = !DIEnumerator(name: "GIMPLE_BINARY_RHS", value: 1, isUnsigned: true)
!433 = !DIEnumerator(name: "GIMPLE_UNARY_RHS", value: 2, isUnsigned: true)
!434 = !DIEnumerator(name: "GIMPLE_SINGLE_RHS", value: 3, isUnsigned: true)
!435 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !391, line: 727, baseType: !7, size: 32, elements: !436)
!436 = !{!437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460}
!437 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!438 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!439 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!440 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!441 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!442 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!443 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!444 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!445 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!446 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!447 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!448 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!449 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!450 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!451 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!452 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!453 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!454 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!455 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!456 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!457 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!458 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!459 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!460 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!461 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ssa_op_iter_type", file: !462, line: 119, baseType: !7, size: 32, elements: !463)
!462 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!463 = !{!464, !465, !466, !467}
!464 = !DIEnumerator(name: "ssa_op_iter_none", value: 0, isUnsigned: true)
!465 = !DIEnumerator(name: "ssa_op_iter_tree", value: 1, isUnsigned: true)
!466 = !DIEnumerator(name: "ssa_op_iter_use", value: 2, isUnsigned: true)
!467 = !DIEnumerator(name: "ssa_op_iter_def", value: 3, isUnsigned: true)
!468 = !{!469, !470, !471, !472, !475, !476, !478, !479, !481, !1842, !1112, !183, !1855, !429, !488, !1856, !665, !1076, !473, !1858, !1861, !1933, !1993, !1113, !1994, !927, !1999, !2024, !2029, !969, !2036, !2037, !2038, !620, !2045}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!471 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !474, size: 64)
!474 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !474)
!478 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !480, line: 44, baseType: !7)
!480 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !482, size: 64)
!482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !483)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reduction_info", file: !3, line: 167, size: 512, elements: !484)
!484 = !{!485, !1835, !1836, !1837, !1838, !1839, !1840, !1841}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "reduc_stmt", scope: !483, file: !3, line: 169, baseType: !486, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !487, line: 58, baseType: !488)
!487 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !391, line: 737, size: 768, elements: !490)
!490 = !{!491, !1682, !1692, !1698, !1703, !1708, !1715, !1721, !1727, !1732, !1746, !1751, !1757, !1762, !1772, !1777, !1793, !1800, !1807, !1813, !1818, !1824, !1830}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !489, file: !391, line: 738, baseType: !492, size: 256)
!492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !391, line: 271, size: 256, elements: !493)
!493 = !{!494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !507, !508, !1681}
!494 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !492, file: !391, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !492, file: !391, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !492, file: !391, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !492, file: !391, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !492, file: !391, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !492, file: !391, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !492, file: !391, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !492, file: !391, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !492, file: !391, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !492, file: !391, line: 312, baseType: !7, size: 32, offset: 32)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !492, file: !391, line: 316, baseType: !505, size: 32, offset: 64)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !506, line: 58, baseType: !479)
!506 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!507 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !492, file: !391, line: 319, baseType: !7, size: 32, offset: 96)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !492, file: !391, line: 323, baseType: !509, size: 64, offset: 128)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !511)
!511 = !{!512, !1648, !1649, !1650, !1651, !1655, !1656, !1657, !1675, !1676, !1677, !1678, !1679, !1680}
!512 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !510, file: !135, line: 219, baseType: !513, size: 64)
!513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!514 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !515)
!515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !516)
!516 = !{!517}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !515, file: !135, line: 151, baseType: !518, size: 128)
!518 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !519)
!519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !520)
!520 = !{!521, !522, !523}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !519, file: !135, line: 150, baseType: !7, size: 32)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !519, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !519, file: !135, line: 150, baseType: !524, size: 64, offset: 64)
!524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !525, size: 64, elements: !585)
!525 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !487, line: 108, baseType: !526)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !527, size: 64)
!527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !528)
!528 = !{!529, !530, !531, !1640, !1641, !1642, !1643, !1644, !1645, !1646}
!529 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !527, file: !135, line: 124, baseType: !509, size: 64)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !527, file: !135, line: 125, baseType: !509, size: 64, offset: 64)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !527, file: !135, line: 131, baseType: !532, size: 64, offset: 128)
!532 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !533)
!533 = !{!534, !549}
!534 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !532, file: !135, line: 129, baseType: !535, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !487, line: 66, baseType: !536)
!536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !537, size: 64)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !391, line: 143, size: 192, elements: !538)
!538 = !{!539, !547, !548}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !537, file: !391, line: 145, baseType: !540, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !487, line: 69, baseType: !541)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !391, line: 136, size: 192, elements: !543)
!543 = !{!544, !545, !546}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !542, file: !391, line: 137, baseType: !486, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !542, file: !391, line: 138, baseType: !541, size: 64, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !542, file: !391, line: 139, baseType: !541, size: 64, offset: 128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !537, file: !391, line: 146, baseType: !540, size: 64, offset: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !537, file: !391, line: 152, baseType: !535, size: 64, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !532, file: !135, line: 130, baseType: !550, size: 64)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !487, line: 50, baseType: !551)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !553, line: 240, size: 384, elements: !554)
!553 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!554 = !{!555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !552, file: !553, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !552, file: !553, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !552, file: !553, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !552, file: !553, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !552, file: !553, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !552, file: !553, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !552, file: !553, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !552, file: !553, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !552, file: !553, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !552, file: !553, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !552, file: !553, line: 321, baseType: !566, size: 320, offset: 64)
!566 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !553, line: 315, size: 320, elements: !567)
!567 = !{!568, !1607, !1609, !1638, !1639}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !566, file: !553, line: 316, baseType: !569, size: 64)
!569 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 64, elements: !585)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !553, line: 183, baseType: !571)
!571 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !553, line: 166, size: 64, elements: !572)
!572 = !{!573, !574, !575, !576, !577, !587, !588, !600, !603, !664, !1585, !1586, !1597, !1604}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !571, file: !553, line: 168, baseType: !471, size: 32)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !571, file: !553, line: 169, baseType: !7, size: 32)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !571, file: !553, line: 170, baseType: !476, size: 64)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !571, file: !553, line: 171, baseType: !550, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !571, file: !553, line: 172, baseType: !578, size: 64)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !487, line: 53, baseType: !579)
!579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !580, size: 64)
!580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !553, line: 359, size: 128, elements: !581)
!581 = !{!582, !583}
!582 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !580, file: !553, line: 360, baseType: !471, size: 32)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !580, file: !553, line: 361, baseType: !584, size: 64, offset: 64)
!584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !550, size: 64, elements: !585)
!585 = !{!586}
!586 = !DISubrange(count: 1)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !571, file: !553, line: 173, baseType: !5, size: 32)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !571, file: !553, line: 174, baseType: !589, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !553, line: 133, baseType: !590)
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !553, line: 115, size: 32, elements: !591)
!591 = !{!592, !593, !594, !595, !596, !597, !598, !599}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !590, file: !553, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !590, file: !553, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !590, file: !553, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !590, file: !553, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !590, file: !553, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !590, file: !553, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !590, file: !553, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !590, file: !553, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !571, file: !553, line: 175, baseType: !601, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !602, size: 64)
!602 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !553, line: 175, flags: DIFlagFwdDecl)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !571, file: !553, line: 176, baseType: !604, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !606, line: 75, size: 256, elements: !607)
!606 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!607 = !{!608, !623, !624, !625}
!608 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !605, file: !606, line: 76, baseType: !609, size: 64)
!609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !610, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !606, line: 68, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !606, line: 63, size: 320, elements: !612)
!612 = !{!613, !615, !616, !617}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !611, file: !606, line: 64, baseType: !614, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !611, file: !606, line: 65, baseType: !614, size: 64, offset: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !611, file: !606, line: 66, baseType: !7, size: 32, offset: 128)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !611, file: !606, line: 67, baseType: !618, size: 128, offset: 192)
!618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !619, size: 128, elements: !621)
!619 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !606, line: 29, baseType: !620)
!620 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!621 = !{!622}
!622 = !DISubrange(count: 2)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !605, file: !606, line: 77, baseType: !609, size: 64, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !605, file: !606, line: 78, baseType: !7, size: 32, offset: 128)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !605, file: !606, line: 79, baseType: !626, size: 64, offset: 192)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !606, line: 49, baseType: !628)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !606, line: 45, size: 832, elements: !629)
!629 = !{!630, !631, !632}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !628, file: !606, line: 46, baseType: !614, size: 64)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !628, file: !606, line: 47, baseType: !604, size: 64, offset: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !628, file: !606, line: 48, baseType: !633, size: 704, offset: 128)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !634, line: 164, size: 704, elements: !635)
!634 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!635 = !{!636, !637, !647, !648, !649, !650, !651, !652, !656, !660, !661, !662, !663}
!636 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !633, file: !634, line: 166, baseType: !478, size: 64)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !633, file: !634, line: 167, baseType: !638, size: 64, offset: 64)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !634, line: 157, size: 192, elements: !640)
!640 = !{!641, !642, !643}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !639, file: !634, line: 159, baseType: !473, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !639, file: !634, line: 160, baseType: !638, size: 64, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !639, file: !634, line: 161, baseType: !644, size: 32, offset: 128)
!644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 32, elements: !645)
!645 = !{!646}
!646 = !DISubrange(count: 4)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !633, file: !634, line: 168, baseType: !473, size: 64, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !633, file: !634, line: 169, baseType: !473, size: 64, offset: 192)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !633, file: !634, line: 170, baseType: !473, size: 64, offset: 256)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !633, file: !634, line: 171, baseType: !478, size: 64, offset: 320)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !633, file: !634, line: 172, baseType: !471, size: 32, offset: 384)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !633, file: !634, line: 176, baseType: !653, size: 64, offset: 448)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DISubroutineType(types: !655)
!655 = !{!638, !475, !478}
!656 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !633, file: !634, line: 177, baseType: !657, size: 64, offset: 512)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DISubroutineType(types: !659)
!659 = !{null, !475, !638}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !633, file: !634, line: 178, baseType: !475, size: 64, offset: 576)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !633, file: !634, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !633, file: !634, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !633, file: !634, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !571, file: !553, line: 177, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !487, line: 56, baseType: !666)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !668)
!668 = !{!669, !702, !708, !719, !738, !749, !754, !761, !767, !780, !788, !826, !831, !859, !876, !877, !882, !891, !897, !902, !906, !910, !1234, !1283, !1289, !1295, !1302, !1315, !1329, !1346, !1358, !1380, !1395, !1567}
!669 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !667, file: !151, line: 3372, baseType: !670, size: 64)
!670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !671)
!671 = !{!672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !670, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !670, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !670, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !670, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !670, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !670, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !670, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !670, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !670, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !670, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !670, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !670, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !670, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !670, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !670, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !670, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !670, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !670, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !670, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !670, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !670, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !670, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !670, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !670, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !670, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !670, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !670, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !670, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !670, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !670, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !667, file: !151, line: 3373, baseType: !703, size: 192)
!703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !704)
!704 = !{!705, !706, !707}
!705 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !703, file: !151, line: 403, baseType: !670, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !703, file: !151, line: 404, baseType: !665, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !703, file: !151, line: 405, baseType: !665, size: 64, offset: 128)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !667, file: !151, line: 3374, baseType: !709, size: 320)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !710)
!710 = !{!711, !712}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !709, file: !151, line: 1385, baseType: !703, size: 192)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !709, file: !151, line: 1386, baseType: !713, size: 128, offset: 192)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !714, line: 58, baseType: !715)
!714 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !714, line: 54, size: 128, elements: !716)
!716 = !{!717, !718}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !715, file: !714, line: 56, baseType: !620, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !715, file: !714, line: 57, baseType: !478, size: 64, offset: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !667, file: !151, line: 3375, baseType: !720, size: 256)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !721)
!721 = !{!722, !723}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !720, file: !151, line: 1398, baseType: !703, size: 192)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !720, file: !151, line: 1399, baseType: !724, size: 64, offset: 192)
!724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !726, line: 52, size: 256, elements: !727)
!726 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!727 = !{!728, !729, !730, !731, !732, !733, !734}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !725, file: !726, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !725, file: !726, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !725, file: !726, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !725, file: !726, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !725, file: !726, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !725, file: !726, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !725, file: !726, line: 62, baseType: !735, size: 192, offset: 64)
!735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !620, size: 192, elements: !736)
!736 = !{!737}
!737 = !DISubrange(count: 3)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !667, file: !151, line: 3376, baseType: !739, size: 256)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !740)
!740 = !{!741, !742}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !739, file: !151, line: 1409, baseType: !703, size: 192)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !739, file: !151, line: 1410, baseType: !743, size: 64, offset: 192)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !745, line: 27, size: 192, elements: !746)
!745 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!746 = !{!747, !748}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !744, file: !745, line: 29, baseType: !713, size: 128)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !744, file: !745, line: 30, baseType: !5, size: 32, offset: 128)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !667, file: !151, line: 3377, baseType: !750, size: 256)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !751)
!751 = !{!752, !753}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !750, file: !151, line: 1438, baseType: !703, size: 192)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !750, file: !151, line: 1439, baseType: !665, size: 64, offset: 192)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !667, file: !151, line: 3378, baseType: !755, size: 256)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !756)
!756 = !{!757, !758, !759}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !755, file: !151, line: 1419, baseType: !703, size: 192)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !755, file: !151, line: 1420, baseType: !471, size: 32, offset: 192)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !755, file: !151, line: 1421, baseType: !760, size: 8, offset: 224)
!760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 8, elements: !585)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !667, file: !151, line: 3379, baseType: !762, size: 320)
!762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !763)
!763 = !{!764, !765, !766}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !762, file: !151, line: 1429, baseType: !703, size: 192)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !762, file: !151, line: 1430, baseType: !665, size: 64, offset: 192)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !762, file: !151, line: 1431, baseType: !665, size: 64, offset: 256)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !667, file: !151, line: 3380, baseType: !768, size: 320)
!768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !769)
!769 = !{!770, !771}
!770 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !768, file: !151, line: 1461, baseType: !703, size: 192)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !768, file: !151, line: 1462, baseType: !772, size: 128, offset: 192)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !773, line: 31, size: 128, elements: !774)
!773 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!774 = !{!775, !778, !779}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !772, file: !773, line: 32, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !772, file: !773, line: 33, baseType: !7, size: 32, offset: 64)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !772, file: !773, line: 34, baseType: !7, size: 32, offset: 96)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !667, file: !151, line: 3381, baseType: !781, size: 384)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !782)
!782 = !{!783, !784, !785, !786, !787}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !781, file: !151, line: 2508, baseType: !703, size: 192)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !781, file: !151, line: 2509, baseType: !505, size: 32, offset: 192)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !781, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !781, file: !151, line: 2511, baseType: !665, size: 64, offset: 256)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !781, file: !151, line: 2512, baseType: !665, size: 64, offset: 320)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !667, file: !151, line: 3382, baseType: !789, size: 896)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !790)
!790 = !{!791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !789, file: !151, line: 2653, baseType: !781, size: 384)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !789, file: !151, line: 2654, baseType: !665, size: 64, offset: 384)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !789, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !789, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !789, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !789, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !789, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !789, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !789, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !789, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !789, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !789, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !789, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !789, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !789, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !789, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !789, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !789, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !789, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !789, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !789, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !789, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !789, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !789, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !789, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !789, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !789, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !789, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !789, file: !151, line: 2705, baseType: !665, size: 64, offset: 576)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !789, file: !151, line: 2706, baseType: !665, size: 64, offset: 640)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !789, file: !151, line: 2707, baseType: !665, size: 64, offset: 704)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !789, file: !151, line: 2708, baseType: !665, size: 64, offset: 768)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !789, file: !151, line: 2711, baseType: !824, size: 64, offset: 832)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !667, file: !151, line: 3383, baseType: !827, size: 960)
!827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !828)
!828 = !{!829, !830}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !827, file: !151, line: 2757, baseType: !789, size: 896)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !827, file: !151, line: 2758, baseType: !550, size: 64, offset: 896)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !667, file: !151, line: 3384, baseType: !832, size: 1472)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !833)
!833 = !{!834, !855, !856, !857, !858}
!834 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !832, file: !151, line: 3115, baseType: !835, size: 1216)
!835 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !836)
!836 = !{!837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854}
!837 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !835, file: !151, line: 2985, baseType: !827, size: 960)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !835, file: !151, line: 2986, baseType: !665, size: 64, offset: 960)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !835, file: !151, line: 2987, baseType: !665, size: 64, offset: 1024)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !835, file: !151, line: 2988, baseType: !665, size: 64, offset: 1088)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !835, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !835, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !835, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !835, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !835, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !835, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !835, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !835, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !835, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !835, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !835, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !835, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !835, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !835, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !832, file: !151, line: 3117, baseType: !665, size: 64, offset: 1216)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !832, file: !151, line: 3119, baseType: !665, size: 64, offset: 1280)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !832, file: !151, line: 3121, baseType: !665, size: 64, offset: 1344)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !832, file: !151, line: 3123, baseType: !665, size: 64, offset: 1408)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !667, file: !151, line: 3385, baseType: !860, size: 1088)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !861)
!861 = !{!862, !863, !864}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !860, file: !151, line: 2875, baseType: !827, size: 960)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !860, file: !151, line: 2876, baseType: !550, size: 64, offset: 960)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !860, file: !151, line: 2877, baseType: !865, size: 64, offset: 1024)
!865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !867, line: 172, size: 128, elements: !868)
!867 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!868 = !{!869, !870, !871, !872, !873, !874, !875}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !866, file: !867, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !866, file: !867, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !866, file: !867, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !866, file: !867, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !866, file: !867, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !866, file: !867, line: 195, baseType: !7, size: 32, offset: 32)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !866, file: !867, line: 199, baseType: !665, size: 64, offset: 64)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !667, file: !151, line: 3386, baseType: !835, size: 1216)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !667, file: !151, line: 3387, baseType: !878, size: 1280)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !879)
!879 = !{!880, !881}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !878, file: !151, line: 3094, baseType: !835, size: 1216)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !878, file: !151, line: 3095, baseType: !865, size: 64, offset: 1216)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !667, file: !151, line: 3388, baseType: !883, size: 1216)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !884)
!884 = !{!885, !886, !887, !888, !889, !890}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !883, file: !151, line: 2825, baseType: !789, size: 896)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !883, file: !151, line: 2827, baseType: !665, size: 64, offset: 896)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !883, file: !151, line: 2828, baseType: !665, size: 64, offset: 960)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !883, file: !151, line: 2829, baseType: !665, size: 64, offset: 1024)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !883, file: !151, line: 2830, baseType: !665, size: 64, offset: 1088)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !883, file: !151, line: 2831, baseType: !665, size: 64, offset: 1152)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !667, file: !151, line: 3389, baseType: !892, size: 1024)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !893)
!893 = !{!894, !895, !896}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !892, file: !151, line: 2851, baseType: !827, size: 960)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !892, file: !151, line: 2852, baseType: !471, size: 32, offset: 960)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !892, file: !151, line: 2853, baseType: !471, size: 32, offset: 992)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !667, file: !151, line: 3390, baseType: !898, size: 1024)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !899)
!899 = !{!900, !901}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !898, file: !151, line: 2858, baseType: !827, size: 960)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !898, file: !151, line: 2859, baseType: !865, size: 64, offset: 960)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !667, file: !151, line: 3391, baseType: !903, size: 960)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !904)
!904 = !{!905}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !903, file: !151, line: 2863, baseType: !827, size: 960)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !667, file: !151, line: 3392, baseType: !907, size: 1472)
!907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !908)
!908 = !{!909}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !907, file: !151, line: 3305, baseType: !832, size: 1472)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !667, file: !151, line: 3393, baseType: !911, size: 1792)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !912)
!912 = !{!913, !914, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !911, file: !151, line: 3249, baseType: !832, size: 1472)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !911, file: !151, line: 3251, baseType: !915, size: 64, offset: 1472)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !917, line: 463, size: 1152, elements: !918)
!917 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!918 = !{!919, !922, !953, !954, !1094, !1157, !1158, !1159, !1160, !1161, !1162, !1186, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !916, file: !917, line: 464, baseType: !920, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !917, line: 464, flags: DIFlagFwdDecl)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !916, file: !917, line: 467, baseType: !923, size: 64, offset: 64)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !925)
!925 = !{!926, !928, !929, !942, !943, !944, !945, !946, !947, !949, !951, !952}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !924, file: !135, line: 377, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !487, line: 111, baseType: !509)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !924, file: !135, line: 378, baseType: !927, size: 64, offset: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !924, file: !135, line: 381, baseType: !930, size: 64, offset: 128)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !932)
!932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !933)
!933 = !{!934}
!934 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !932, file: !135, line: 282, baseType: !935, size: 128)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !936)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !937)
!937 = !{!938, !939, !940}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !936, file: !135, line: 281, baseType: !7, size: 32)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !936, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !936, file: !135, line: 281, baseType: !941, size: 64, offset: 64)
!941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !927, size: 64, elements: !585)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !924, file: !135, line: 384, baseType: !471, size: 32, offset: 192)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !924, file: !135, line: 387, baseType: !471, size: 32, offset: 224)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !924, file: !135, line: 390, baseType: !471, size: 32, offset: 256)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !924, file: !135, line: 394, baseType: !930, size: 64, offset: 320)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !924, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !924, file: !135, line: 399, baseType: !948, size: 64, offset: 416)
!948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !621)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !924, file: !135, line: 402, baseType: !950, size: 64, offset: 480)
!950 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !621)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !924, file: !135, line: 406, baseType: !471, size: 32, offset: 544)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !924, file: !135, line: 409, baseType: !471, size: 32, offset: 576)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !916, file: !917, line: 470, baseType: !536, size: 64, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !916, file: !917, line: 473, baseType: !955, size: 64, offset: 192)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !867, line: 39, size: 1152, elements: !957)
!957 = !{!958, !1010, !1023, !1036, !1037, !1049, !1050, !1054, !1055, !1056, !1057, !1058}
!958 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !956, file: !867, line: 41, baseType: !959, size: 64)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !960, line: 144, baseType: !961)
!960 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !960, line: 100, size: 896, elements: !963)
!963 = !{!964, !972, !977, !982, !984, !987, !988, !989, !990, !991, !996, !998, !999, !1004, !1009}
!964 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !962, file: !960, line: 102, baseType: !965, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !960, line: 52, baseType: !966)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!969, !970}
!969 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !960, line: 47, baseType: !7)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !962, file: !960, line: 105, baseType: !973, size: 64, offset: 64)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !960, line: 59, baseType: !974)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DISubroutineType(types: !976)
!976 = !{!471, !970, !970}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !962, file: !960, line: 108, baseType: !978, size: 64, offset: 128)
!978 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !960, line: 63, baseType: !979)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{null, !475}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !962, file: !960, line: 111, baseType: !983, size: 64, offset: 192)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !962, file: !960, line: 114, baseType: !985, size: 64, offset: 256)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !986, line: 46, baseType: !620)
!986 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!987 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !962, file: !960, line: 117, baseType: !985, size: 64, offset: 320)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !962, file: !960, line: 120, baseType: !985, size: 64, offset: 384)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !962, file: !960, line: 124, baseType: !7, size: 32, offset: 448)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !962, file: !960, line: 128, baseType: !7, size: 32, offset: 480)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !962, file: !960, line: 131, baseType: !992, size: 64, offset: 512)
!992 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !960, line: 75, baseType: !993)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{!475, !985, !985}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !962, file: !960, line: 132, baseType: !997, size: 64, offset: 576)
!997 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !960, line: 78, baseType: !979)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !962, file: !960, line: 135, baseType: !475, size: 64, offset: 640)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !962, file: !960, line: 136, baseType: !1000, size: 64, offset: 704)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !960, line: 82, baseType: !1001)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DISubroutineType(types: !1003)
!1003 = !{!475, !475, !985, !985}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !962, file: !960, line: 137, baseType: !1005, size: 64, offset: 768)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !960, line: 83, baseType: !1006)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DISubroutineType(types: !1008)
!1008 = !{null, !475, !475}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !962, file: !960, line: 141, baseType: !7, size: 32, offset: 832)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !956, file: !867, line: 48, baseType: !1011, size: 64, offset: 64)
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !391, line: 35, baseType: !1013)
!1013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !391, line: 35, size: 128, elements: !1014)
!1014 = !{!1015}
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1013, file: !391, line: 35, baseType: !1016, size: 128)
!1016 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !391, line: 33, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !391, line: 33, size: 128, elements: !1018)
!1018 = !{!1019, !1020, !1021}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1017, file: !391, line: 33, baseType: !7, size: 32)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1017, file: !391, line: 33, baseType: !7, size: 32, offset: 32)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1017, file: !391, line: 33, baseType: !1022, size: 64, offset: 64)
!1022 = !DICompositeType(tag: DW_TAG_array_type, baseType: !486, size: 64, elements: !585)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !956, file: !867, line: 51, baseType: !1024, size: 64, offset: 128)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1027)
!1027 = !{!1028}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1026, file: !151, line: 183, baseType: !1029, size: 128)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1030)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1031)
!1031 = !{!1032, !1033, !1034}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1030, file: !151, line: 182, baseType: !7, size: 32)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1030, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1030, file: !151, line: 182, baseType: !1035, size: 64, offset: 64)
!1035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !665, size: 64, elements: !585)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !956, file: !867, line: 54, baseType: !665, size: 64, offset: 192)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !956, file: !867, line: 57, baseType: !1038, size: 128, offset: 256)
!1038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1039, line: 31, size: 128, elements: !1040)
!1039 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1040 = !{!1041, !1042, !1043, !1044, !1045, !1046, !1047}
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1038, file: !1039, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1038, file: !1039, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1038, file: !1039, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1038, file: !1039, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1038, file: !1039, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1038, file: !1039, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1038, file: !1039, line: 56, baseType: !1048, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !487, line: 47, baseType: !604)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !956, file: !867, line: 60, baseType: !1038, size: 128, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !956, file: !867, line: 64, baseType: !1051, size: 64, offset: 512)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1053, line: 33, flags: DIFlagFwdDecl)
!1053 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !956, file: !867, line: 67, baseType: !665, size: 64, offset: 576)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !956, file: !867, line: 73, baseType: !959, size: 64, offset: 640)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !956, file: !867, line: 77, baseType: !1048, size: 64, offset: 704)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !956, file: !867, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !956, file: !867, line: 82, baseType: !1059, size: 320, offset: 832)
!1059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !462, line: 62, size: 320, elements: !1060)
!1060 = !{!1061, !1067, !1068, !1069, !1070, !1077}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1059, file: !462, line: 63, baseType: !1062, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1063, size: 64)
!1063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !462, line: 56, size: 128, elements: !1064)
!1064 = !{!1065, !1066}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1063, file: !462, line: 57, baseType: !1062, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1063, file: !462, line: 58, baseType: !760, size: 8, offset: 64)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1059, file: !462, line: 64, baseType: !7, size: 32, offset: 64)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1059, file: !462, line: 66, baseType: !7, size: 32, offset: 96)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1059, file: !462, line: 68, baseType: !470, size: 8, offset: 128)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1059, file: !462, line: 70, baseType: !1071, size: 64, offset: 192)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !462, line: 37, size: 128, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1072, file: !462, line: 39, baseType: !1071, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1072, file: !462, line: 40, baseType: !1076, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1059, file: !462, line: 71, baseType: !1078, size: 64, offset: 256)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !462, line: 45, size: 320, elements: !1080)
!1080 = !{!1081, !1082}
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1079, file: !462, line: 47, baseType: !1078, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1079, file: !462, line: 48, baseType: !1083, size: 256, offset: 64)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1084)
!1084 = !{!1085, !1087, !1088, !1093}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1083, file: !151, line: 1884, baseType: !1086, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1083, file: !151, line: 1885, baseType: !1086, size: 64, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1083, file: !151, line: 1891, baseType: !1089, size: 64, offset: 128)
!1089 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1083, file: !151, line: 1891, size: 64, elements: !1090)
!1090 = !{!1091, !1092}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1089, file: !151, line: 1891, baseType: !486, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1089, file: !151, line: 1891, baseType: !665, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1083, file: !151, line: 1892, baseType: !1076, size: 64, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !916, file: !917, line: 476, baseType: !1095, size: 64, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1096, size: 64)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !378, line: 187, size: 256, elements: !1097)
!1097 = !{!1098, !1099, !1155, !1156}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1096, file: !378, line: 189, baseType: !471, size: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1096, file: !378, line: 192, baseType: !1100, size: 64, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !378, line: 87, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !378, line: 87, size: 128, elements: !1103)
!1103 = !{!1104}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1102, file: !378, line: 87, baseType: !1105, size: 128)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !378, line: 85, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !378, line: 85, size: 128, elements: !1107)
!1107 = !{!1108, !1109, !1110}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1106, file: !378, line: 85, baseType: !7, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1106, file: !378, line: 85, baseType: !7, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1106, file: !378, line: 85, baseType: !1111, size: 64, offset: 64)
!1111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1112, size: 64, elements: !585)
!1112 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !378, line: 84, baseType: !1113)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !378, line: 100, size: 1216, elements: !1115)
!1115 = !{!1116, !1117, !1118, !1119, !1120, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1145, !1153, !1154}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1114, file: !378, line: 102, baseType: !471, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1114, file: !378, line: 105, baseType: !7, size: 32, offset: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1114, file: !378, line: 108, baseType: !509, size: 64, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1114, file: !378, line: 111, baseType: !509, size: 64, offset: 128)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1114, file: !378, line: 114, baseType: !1121, size: 64, offset: 192)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !378, line: 41, size: 64, elements: !1122)
!1122 = !{!1123, !1124}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1121, file: !378, line: 42, baseType: !377, size: 32)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1121, file: !378, line: 43, baseType: !7, size: 32, offset: 32)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1114, file: !378, line: 117, baseType: !7, size: 32, offset: 256)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1114, file: !378, line: 120, baseType: !7, size: 32, offset: 288)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1114, file: !378, line: 123, baseType: !1100, size: 64, offset: 320)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1114, file: !378, line: 126, baseType: !1113, size: 64, offset: 384)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1114, file: !378, line: 129, baseType: !1113, size: 64, offset: 448)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1114, file: !378, line: 132, baseType: !475, size: 64, offset: 512)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1114, file: !378, line: 139, baseType: !665, size: 64, offset: 576)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1114, file: !378, line: 143, baseType: !713, size: 128, offset: 640)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1114, file: !378, line: 146, baseType: !713, size: 128, offset: 768)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1114, file: !378, line: 148, baseType: !470, size: 8, offset: 896)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1114, file: !378, line: 149, baseType: !470, size: 8, offset: 904)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1114, file: !378, line: 153, baseType: !386, size: 32, offset: 928)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1114, file: !378, line: 156, baseType: !1138, size: 64, offset: 960)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !378, line: 48, size: 320, elements: !1140)
!1140 = !{!1141, !1142, !1143, !1144}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1139, file: !378, line: 50, baseType: !486, size: 64)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1139, file: !378, line: 59, baseType: !713, size: 128, offset: 64)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1139, file: !378, line: 64, baseType: !470, size: 8, offset: 192)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1139, file: !378, line: 67, baseType: !1138, size: 64, offset: 256)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1114, file: !378, line: 159, baseType: !1146, size: 64, offset: 1024)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !378, line: 72, size: 256, elements: !1148)
!1148 = !{!1149, !1150, !1151, !1152}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1147, file: !378, line: 74, baseType: !526, size: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1147, file: !378, line: 77, baseType: !1146, size: 64, offset: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1147, file: !378, line: 78, baseType: !1146, size: 64, offset: 128)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1147, file: !378, line: 81, baseType: !1146, size: 64, offset: 192)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1114, file: !378, line: 162, baseType: !470, size: 8, offset: 1088)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1114, file: !378, line: 166, baseType: !665, size: 64, offset: 1152)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1096, file: !378, line: 197, baseType: !959, size: 64, offset: 128)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1096, file: !378, line: 200, baseType: !1113, size: 64, offset: 192)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !916, file: !917, line: 479, baseType: !959, size: 64, offset: 320)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !916, file: !917, line: 484, baseType: !665, size: 64, offset: 384)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !916, file: !917, line: 488, baseType: !665, size: 64, offset: 448)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !916, file: !917, line: 493, baseType: !665, size: 64, offset: 512)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !916, file: !917, line: 496, baseType: !665, size: 64, offset: 576)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !916, file: !917, line: 501, baseType: !1163, size: 64, offset: 640)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1165)
!1165 = !{!1166, !1169, !1170, !1171, !1172, !1174, !1175, !1180, !1181, !1182, !1183, !1184, !1185}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1164, file: !146, line: 2356, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1164, file: !146, line: 2357, baseType: !476, size: 64, offset: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1164, file: !146, line: 2358, baseType: !471, size: 32, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1164, file: !146, line: 2359, baseType: !471, size: 32, offset: 160)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1164, file: !146, line: 2360, baseType: !1173, size: 128, offset: 192)
!1173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 128, elements: !645)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1164, file: !146, line: 2364, baseType: !471, size: 32, offset: 320)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1164, file: !146, line: 2367, baseType: !1176, size: 128, offset: 384)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1177)
!1177 = !{!1178, !1179}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1176, file: !146, line: 2351, baseType: !550, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1176, file: !146, line: 2352, baseType: !478, size: 64, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1164, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1164, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1164, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1164, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1164, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1164, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !916, file: !917, line: 504, baseType: !1187, size: 64, offset: 704)
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !917, line: 504, flags: DIFlagFwdDecl)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !916, file: !917, line: 507, baseType: !959, size: 64, offset: 768)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !916, file: !917, line: 510, baseType: !471, size: 32, offset: 832)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !916, file: !917, line: 513, baseType: !471, size: 32, offset: 864)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !916, file: !917, line: 516, baseType: !505, size: 32, offset: 896)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !916, file: !917, line: 519, baseType: !505, size: 32, offset: 928)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !916, file: !917, line: 522, baseType: !7, size: 32, offset: 960)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !916, file: !917, line: 523, baseType: !7, size: 32, offset: 992)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !916, file: !917, line: 528, baseType: !476, size: 64, offset: 1024)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !916, file: !917, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !916, file: !917, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !916, file: !917, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !916, file: !917, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !916, file: !917, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !916, file: !917, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !916, file: !917, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !916, file: !917, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !916, file: !917, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !916, file: !917, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !916, file: !917, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !916, file: !917, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !916, file: !917, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !916, file: !917, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !916, file: !917, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !916, file: !917, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !911, file: !151, line: 3254, baseType: !665, size: 64, offset: 1536)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !911, file: !151, line: 3257, baseType: !665, size: 64, offset: 1600)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !911, file: !151, line: 3258, baseType: !665, size: 64, offset: 1664)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !911, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !911, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !911, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !911, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !911, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !911, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !911, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !911, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !911, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !911, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !911, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !911, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !911, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !911, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !911, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !911, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !911, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !911, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !667, file: !151, line: 3394, baseType: !1235, size: 1344)
!1235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1236)
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1262, !1263, !1264, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1235, file: !151, line: 2280, baseType: !703, size: 192)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1235, file: !151, line: 2281, baseType: !665, size: 64, offset: 192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1235, file: !151, line: 2282, baseType: !665, size: 64, offset: 256)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1235, file: !151, line: 2283, baseType: !665, size: 64, offset: 320)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1235, file: !151, line: 2284, baseType: !665, size: 64, offset: 384)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1235, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1235, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1235, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1235, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1235, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1235, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1235, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1235, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1235, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1235, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1235, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1235, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1235, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1235, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1235, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1235, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1235, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1235, file: !151, line: 2306, baseType: !1260, size: 32, offset: 544)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1261, line: 31, baseType: !471)
!1261 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1235, file: !151, line: 2307, baseType: !665, size: 64, offset: 576)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1235, file: !151, line: 2308, baseType: !665, size: 64, offset: 640)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1235, file: !151, line: 2314, baseType: !1265, size: 64, offset: 704)
!1265 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1266)
!1266 = !{!1267, !1268, !1269}
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1265, file: !151, line: 2310, baseType: !471, size: 32)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1265, file: !151, line: 2311, baseType: !476, size: 64)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1265, file: !151, line: 2312, baseType: !1270, size: 64)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1235, file: !151, line: 2315, baseType: !665, size: 64, offset: 768)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1235, file: !151, line: 2316, baseType: !665, size: 64, offset: 832)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1235, file: !151, line: 2317, baseType: !665, size: 64, offset: 896)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1235, file: !151, line: 2318, baseType: !665, size: 64, offset: 960)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1235, file: !151, line: 2319, baseType: !665, size: 64, offset: 1024)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1235, file: !151, line: 2320, baseType: !665, size: 64, offset: 1088)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1235, file: !151, line: 2321, baseType: !665, size: 64, offset: 1152)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1235, file: !151, line: 2322, baseType: !665, size: 64, offset: 1216)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1235, file: !151, line: 2324, baseType: !1281, size: 64, offset: 1280)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !667, file: !151, line: 3395, baseType: !1284, size: 320)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1285)
!1285 = !{!1286, !1287, !1288}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1284, file: !151, line: 1470, baseType: !703, size: 192)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1284, file: !151, line: 1471, baseType: !665, size: 64, offset: 192)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1284, file: !151, line: 1472, baseType: !665, size: 64, offset: 256)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !667, file: !151, line: 3396, baseType: !1290, size: 320)
!1290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1291)
!1291 = !{!1292, !1293, !1294}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1290, file: !151, line: 1483, baseType: !703, size: 192)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1290, file: !151, line: 1484, baseType: !471, size: 32, offset: 192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1290, file: !151, line: 1485, baseType: !1035, size: 64, offset: 256)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !667, file: !151, line: 3397, baseType: !1296, size: 384)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1297)
!1297 = !{!1298, !1299, !1300, !1301}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1296, file: !151, line: 1830, baseType: !703, size: 192)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1296, file: !151, line: 1831, baseType: !505, size: 32, offset: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1296, file: !151, line: 1832, baseType: !665, size: 64, offset: 256)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1296, file: !151, line: 1835, baseType: !1035, size: 64, offset: 320)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !667, file: !151, line: 3398, baseType: !1303, size: 704)
!1303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1304)
!1304 = !{!1305, !1306, !1307, !1308, !1309, !1314}
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1303, file: !151, line: 1899, baseType: !703, size: 192)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1303, file: !151, line: 1902, baseType: !665, size: 64, offset: 192)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1303, file: !151, line: 1905, baseType: !486, size: 64, offset: 256)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1303, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1303, file: !151, line: 1911, baseType: !1310, size: 64, offset: 384)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !867, line: 117, size: 128, elements: !1312)
!1312 = !{!1313}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !1311, file: !867, line: 120, baseType: !1038, size: 128)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1303, file: !151, line: 1914, baseType: !1083, size: 256, offset: 448)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !667, file: !151, line: 3399, baseType: !1316, size: 704)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1316, file: !151, line: 2009, baseType: !703, size: 192)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1316, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1316, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1316, file: !151, line: 2014, baseType: !505, size: 32, offset: 224)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1316, file: !151, line: 2016, baseType: !665, size: 64, offset: 256)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1316, file: !151, line: 2017, baseType: !1024, size: 64, offset: 320)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1316, file: !151, line: 2019, baseType: !665, size: 64, offset: 384)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1316, file: !151, line: 2020, baseType: !665, size: 64, offset: 448)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1316, file: !151, line: 2021, baseType: !665, size: 64, offset: 512)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1316, file: !151, line: 2022, baseType: !665, size: 64, offset: 576)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1316, file: !151, line: 2023, baseType: !665, size: 64, offset: 640)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !667, file: !151, line: 3400, baseType: !1330, size: 832)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1331)
!1331 = !{!1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1330, file: !151, line: 2431, baseType: !703, size: 192)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1330, file: !151, line: 2433, baseType: !665, size: 64, offset: 192)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1330, file: !151, line: 2434, baseType: !665, size: 64, offset: 256)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1330, file: !151, line: 2435, baseType: !665, size: 64, offset: 320)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1330, file: !151, line: 2436, baseType: !665, size: 64, offset: 384)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1330, file: !151, line: 2437, baseType: !1024, size: 64, offset: 448)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1330, file: !151, line: 2438, baseType: !665, size: 64, offset: 512)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1330, file: !151, line: 2440, baseType: !665, size: 64, offset: 576)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1330, file: !151, line: 2441, baseType: !665, size: 64, offset: 640)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1330, file: !151, line: 2443, baseType: !1342, size: 128, offset: 704)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1343)
!1343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1344)
!1344 = !{!1345}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1343, file: !151, line: 182, baseType: !1029, size: 128)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !667, file: !151, line: 3401, baseType: !1347, size: 320)
!1347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1348)
!1348 = !{!1349, !1350, !1357}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1347, file: !151, line: 3329, baseType: !703, size: 192)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1347, file: !151, line: 3330, baseType: !1351, size: 64, offset: 192)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1353)
!1353 = !{!1354, !1355, !1356}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1352, file: !151, line: 3322, baseType: !1351, size: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1352, file: !151, line: 3323, baseType: !1351, size: 64, offset: 64)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1352, file: !151, line: 3324, baseType: !665, size: 64, offset: 128)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1347, file: !151, line: 3331, baseType: !1351, size: 64, offset: 256)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !667, file: !151, line: 3402, baseType: !1359, size: 256)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1360)
!1360 = !{!1361, !1362}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1359, file: !151, line: 1541, baseType: !703, size: 192)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1359, file: !151, line: 1542, baseType: !1363, size: 64, offset: 192)
!1363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1364, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1365)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1366)
!1366 = !{!1367}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1365, file: !151, line: 1538, baseType: !1368, size: 192)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1369)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1370)
!1370 = !{!1371, !1372, !1373}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1369, file: !151, line: 1537, baseType: !7, size: 32)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1369, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1369, file: !151, line: 1537, baseType: !1374, size: 128, offset: 64)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1375, size: 128, elements: !585)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1376)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1377)
!1377 = !{!1378, !1379}
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1376, file: !151, line: 1533, baseType: !665, size: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1376, file: !151, line: 1534, baseType: !665, size: 64, offset: 64)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !667, file: !151, line: 3403, baseType: !1381, size: 512)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1382)
!1382 = !{!1383, !1384, !1385, !1386, !1392, !1393, !1394}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1381, file: !151, line: 1939, baseType: !703, size: 192)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1381, file: !151, line: 1940, baseType: !505, size: 32, offset: 192)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1381, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1381, file: !151, line: 1946, baseType: !1387, size: 32, offset: 256)
!1387 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1388)
!1388 = !{!1389, !1390, !1391}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1387, file: !151, line: 1943, baseType: !169, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1387, file: !151, line: 1944, baseType: !176, size: 32)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1387, file: !151, line: 1945, baseType: !183, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1381, file: !151, line: 1950, baseType: !535, size: 64, offset: 320)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1381, file: !151, line: 1951, baseType: !535, size: 64, offset: 384)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1381, file: !151, line: 1953, baseType: !1035, size: 64, offset: 448)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !667, file: !151, line: 3404, baseType: !1396, size: 1664)
!1396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1397)
!1397 = !{!1398, !1399}
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1396, file: !151, line: 3338, baseType: !703, size: 192)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1396, file: !151, line: 3341, baseType: !1400, size: 1472, offset: 192)
!1400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1401, line: 410, size: 1472, elements: !1402)
!1401 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1402 = !{!1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1400, file: !1401, line: 412, baseType: !471, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1400, file: !1401, line: 413, baseType: !471, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1400, file: !1401, line: 414, baseType: !471, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1400, file: !1401, line: 415, baseType: !471, size: 32, offset: 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1400, file: !1401, line: 416, baseType: !471, size: 32, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1400, file: !1401, line: 417, baseType: !471, size: 32, offset: 160)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1400, file: !1401, line: 418, baseType: !470, size: 8, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1400, file: !1401, line: 419, baseType: !470, size: 8, offset: 200)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1400, file: !1401, line: 420, baseType: !1412, size: 8, offset: 208)
!1412 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1400, file: !1401, line: 421, baseType: !1412, size: 8, offset: 216)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1400, file: !1401, line: 422, baseType: !1412, size: 8, offset: 224)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1400, file: !1401, line: 423, baseType: !1412, size: 8, offset: 232)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1400, file: !1401, line: 424, baseType: !1412, size: 8, offset: 240)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1400, file: !1401, line: 425, baseType: !1412, size: 8, offset: 248)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1400, file: !1401, line: 426, baseType: !1412, size: 8, offset: 256)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1400, file: !1401, line: 427, baseType: !1412, size: 8, offset: 264)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1400, file: !1401, line: 428, baseType: !1412, size: 8, offset: 272)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1400, file: !1401, line: 429, baseType: !1412, size: 8, offset: 280)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1400, file: !1401, line: 430, baseType: !1412, size: 8, offset: 288)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1400, file: !1401, line: 431, baseType: !1412, size: 8, offset: 296)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1400, file: !1401, line: 432, baseType: !1412, size: 8, offset: 304)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1400, file: !1401, line: 433, baseType: !1412, size: 8, offset: 312)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1400, file: !1401, line: 434, baseType: !1412, size: 8, offset: 320)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1400, file: !1401, line: 435, baseType: !1412, size: 8, offset: 328)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1400, file: !1401, line: 436, baseType: !1412, size: 8, offset: 336)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1400, file: !1401, line: 437, baseType: !1412, size: 8, offset: 344)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1400, file: !1401, line: 438, baseType: !1412, size: 8, offset: 352)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1400, file: !1401, line: 439, baseType: !1412, size: 8, offset: 360)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1400, file: !1401, line: 440, baseType: !1412, size: 8, offset: 368)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1400, file: !1401, line: 441, baseType: !1412, size: 8, offset: 376)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1400, file: !1401, line: 442, baseType: !1412, size: 8, offset: 384)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1400, file: !1401, line: 443, baseType: !1412, size: 8, offset: 392)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1400, file: !1401, line: 444, baseType: !1412, size: 8, offset: 400)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1400, file: !1401, line: 445, baseType: !1412, size: 8, offset: 408)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1400, file: !1401, line: 446, baseType: !1412, size: 8, offset: 416)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1400, file: !1401, line: 447, baseType: !1412, size: 8, offset: 424)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1400, file: !1401, line: 448, baseType: !1412, size: 8, offset: 432)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1400, file: !1401, line: 449, baseType: !1412, size: 8, offset: 440)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1400, file: !1401, line: 450, baseType: !1412, size: 8, offset: 448)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1400, file: !1401, line: 451, baseType: !1412, size: 8, offset: 456)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1400, file: !1401, line: 452, baseType: !1412, size: 8, offset: 464)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1400, file: !1401, line: 453, baseType: !1412, size: 8, offset: 472)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1400, file: !1401, line: 454, baseType: !1412, size: 8, offset: 480)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1400, file: !1401, line: 455, baseType: !1412, size: 8, offset: 488)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1400, file: !1401, line: 456, baseType: !1412, size: 8, offset: 496)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1400, file: !1401, line: 457, baseType: !1412, size: 8, offset: 504)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1400, file: !1401, line: 458, baseType: !1412, size: 8, offset: 512)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1400, file: !1401, line: 459, baseType: !1412, size: 8, offset: 520)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1400, file: !1401, line: 460, baseType: !1412, size: 8, offset: 528)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1400, file: !1401, line: 461, baseType: !1412, size: 8, offset: 536)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1400, file: !1401, line: 462, baseType: !1412, size: 8, offset: 544)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1400, file: !1401, line: 463, baseType: !1412, size: 8, offset: 552)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1400, file: !1401, line: 464, baseType: !1412, size: 8, offset: 560)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1400, file: !1401, line: 465, baseType: !1412, size: 8, offset: 568)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1400, file: !1401, line: 466, baseType: !1412, size: 8, offset: 576)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1400, file: !1401, line: 467, baseType: !1412, size: 8, offset: 584)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1400, file: !1401, line: 468, baseType: !1412, size: 8, offset: 592)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1400, file: !1401, line: 469, baseType: !1412, size: 8, offset: 600)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1400, file: !1401, line: 470, baseType: !1412, size: 8, offset: 608)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1400, file: !1401, line: 471, baseType: !1412, size: 8, offset: 616)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1400, file: !1401, line: 472, baseType: !1412, size: 8, offset: 624)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1400, file: !1401, line: 473, baseType: !1412, size: 8, offset: 632)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1400, file: !1401, line: 474, baseType: !1412, size: 8, offset: 640)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1400, file: !1401, line: 475, baseType: !1412, size: 8, offset: 648)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1400, file: !1401, line: 476, baseType: !1412, size: 8, offset: 656)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1400, file: !1401, line: 477, baseType: !1412, size: 8, offset: 664)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1400, file: !1401, line: 478, baseType: !1412, size: 8, offset: 672)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1400, file: !1401, line: 479, baseType: !1412, size: 8, offset: 680)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1400, file: !1401, line: 480, baseType: !1412, size: 8, offset: 688)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1400, file: !1401, line: 481, baseType: !1412, size: 8, offset: 696)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1400, file: !1401, line: 482, baseType: !1412, size: 8, offset: 704)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1400, file: !1401, line: 483, baseType: !1412, size: 8, offset: 712)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1400, file: !1401, line: 484, baseType: !1412, size: 8, offset: 720)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1400, file: !1401, line: 485, baseType: !1412, size: 8, offset: 728)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1400, file: !1401, line: 486, baseType: !1412, size: 8, offset: 736)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1400, file: !1401, line: 487, baseType: !1412, size: 8, offset: 744)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1400, file: !1401, line: 488, baseType: !1412, size: 8, offset: 752)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1400, file: !1401, line: 489, baseType: !1412, size: 8, offset: 760)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1400, file: !1401, line: 490, baseType: !1412, size: 8, offset: 768)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1400, file: !1401, line: 491, baseType: !1412, size: 8, offset: 776)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1400, file: !1401, line: 492, baseType: !1412, size: 8, offset: 784)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1400, file: !1401, line: 493, baseType: !1412, size: 8, offset: 792)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1400, file: !1401, line: 494, baseType: !1412, size: 8, offset: 800)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1400, file: !1401, line: 495, baseType: !1412, size: 8, offset: 808)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1400, file: !1401, line: 496, baseType: !1412, size: 8, offset: 816)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1400, file: !1401, line: 497, baseType: !1412, size: 8, offset: 824)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1400, file: !1401, line: 498, baseType: !1412, size: 8, offset: 832)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1400, file: !1401, line: 499, baseType: !1412, size: 8, offset: 840)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1400, file: !1401, line: 500, baseType: !1412, size: 8, offset: 848)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1400, file: !1401, line: 501, baseType: !1412, size: 8, offset: 856)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1400, file: !1401, line: 502, baseType: !1412, size: 8, offset: 864)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1400, file: !1401, line: 503, baseType: !1412, size: 8, offset: 872)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1400, file: !1401, line: 504, baseType: !1412, size: 8, offset: 880)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1400, file: !1401, line: 505, baseType: !1412, size: 8, offset: 888)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1400, file: !1401, line: 506, baseType: !1412, size: 8, offset: 896)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1400, file: !1401, line: 507, baseType: !1412, size: 8, offset: 904)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1400, file: !1401, line: 508, baseType: !1412, size: 8, offset: 912)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1400, file: !1401, line: 509, baseType: !1412, size: 8, offset: 920)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1400, file: !1401, line: 510, baseType: !1412, size: 8, offset: 928)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1400, file: !1401, line: 511, baseType: !1412, size: 8, offset: 936)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1400, file: !1401, line: 512, baseType: !1412, size: 8, offset: 944)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1400, file: !1401, line: 513, baseType: !1412, size: 8, offset: 952)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1400, file: !1401, line: 514, baseType: !1412, size: 8, offset: 960)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1400, file: !1401, line: 515, baseType: !1412, size: 8, offset: 968)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1400, file: !1401, line: 516, baseType: !1412, size: 8, offset: 976)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1400, file: !1401, line: 517, baseType: !1412, size: 8, offset: 984)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1400, file: !1401, line: 518, baseType: !1412, size: 8, offset: 992)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1400, file: !1401, line: 519, baseType: !1412, size: 8, offset: 1000)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1400, file: !1401, line: 520, baseType: !1412, size: 8, offset: 1008)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1400, file: !1401, line: 521, baseType: !1412, size: 8, offset: 1016)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1400, file: !1401, line: 522, baseType: !1412, size: 8, offset: 1024)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1400, file: !1401, line: 523, baseType: !1412, size: 8, offset: 1032)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1400, file: !1401, line: 524, baseType: !1412, size: 8, offset: 1040)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1400, file: !1401, line: 525, baseType: !1412, size: 8, offset: 1048)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1400, file: !1401, line: 526, baseType: !1412, size: 8, offset: 1056)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1400, file: !1401, line: 527, baseType: !1412, size: 8, offset: 1064)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1400, file: !1401, line: 528, baseType: !1412, size: 8, offset: 1072)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1400, file: !1401, line: 529, baseType: !1412, size: 8, offset: 1080)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1400, file: !1401, line: 530, baseType: !1412, size: 8, offset: 1088)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1400, file: !1401, line: 531, baseType: !1412, size: 8, offset: 1096)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1400, file: !1401, line: 532, baseType: !1412, size: 8, offset: 1104)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1400, file: !1401, line: 533, baseType: !1412, size: 8, offset: 1112)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1400, file: !1401, line: 534, baseType: !1412, size: 8, offset: 1120)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1400, file: !1401, line: 535, baseType: !1412, size: 8, offset: 1128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1400, file: !1401, line: 536, baseType: !1412, size: 8, offset: 1136)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1400, file: !1401, line: 537, baseType: !1412, size: 8, offset: 1144)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1400, file: !1401, line: 538, baseType: !1412, size: 8, offset: 1152)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1400, file: !1401, line: 539, baseType: !1412, size: 8, offset: 1160)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1400, file: !1401, line: 540, baseType: !1412, size: 8, offset: 1168)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1400, file: !1401, line: 541, baseType: !1412, size: 8, offset: 1176)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1400, file: !1401, line: 542, baseType: !1412, size: 8, offset: 1184)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1400, file: !1401, line: 543, baseType: !1412, size: 8, offset: 1192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1400, file: !1401, line: 544, baseType: !1412, size: 8, offset: 1200)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1400, file: !1401, line: 545, baseType: !1412, size: 8, offset: 1208)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1400, file: !1401, line: 546, baseType: !1412, size: 8, offset: 1216)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1400, file: !1401, line: 547, baseType: !1412, size: 8, offset: 1224)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1400, file: !1401, line: 548, baseType: !1412, size: 8, offset: 1232)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1400, file: !1401, line: 549, baseType: !1412, size: 8, offset: 1240)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1400, file: !1401, line: 550, baseType: !1412, size: 8, offset: 1248)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1400, file: !1401, line: 551, baseType: !1412, size: 8, offset: 1256)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1400, file: !1401, line: 552, baseType: !1412, size: 8, offset: 1264)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1400, file: !1401, line: 553, baseType: !1412, size: 8, offset: 1272)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1400, file: !1401, line: 554, baseType: !1412, size: 8, offset: 1280)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1400, file: !1401, line: 555, baseType: !1412, size: 8, offset: 1288)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1400, file: !1401, line: 556, baseType: !1412, size: 8, offset: 1296)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1400, file: !1401, line: 557, baseType: !1412, size: 8, offset: 1304)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1400, file: !1401, line: 558, baseType: !1412, size: 8, offset: 1312)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1400, file: !1401, line: 559, baseType: !1412, size: 8, offset: 1320)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1400, file: !1401, line: 560, baseType: !1412, size: 8, offset: 1328)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1400, file: !1401, line: 561, baseType: !1412, size: 8, offset: 1336)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1400, file: !1401, line: 562, baseType: !1412, size: 8, offset: 1344)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1400, file: !1401, line: 563, baseType: !1412, size: 8, offset: 1352)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1400, file: !1401, line: 564, baseType: !1412, size: 8, offset: 1360)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1400, file: !1401, line: 565, baseType: !1412, size: 8, offset: 1368)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1400, file: !1401, line: 566, baseType: !1412, size: 8, offset: 1376)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1400, file: !1401, line: 567, baseType: !1412, size: 8, offset: 1384)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1400, file: !1401, line: 568, baseType: !1412, size: 8, offset: 1392)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1400, file: !1401, line: 569, baseType: !1412, size: 8, offset: 1400)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1400, file: !1401, line: 570, baseType: !1412, size: 8, offset: 1408)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1400, file: !1401, line: 571, baseType: !1412, size: 8, offset: 1416)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1400, file: !1401, line: 572, baseType: !1412, size: 8, offset: 1424)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1400, file: !1401, line: 573, baseType: !1412, size: 8, offset: 1432)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1400, file: !1401, line: 574, baseType: !1412, size: 8, offset: 1440)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !667, file: !151, line: 3405, baseType: !1568, size: 384)
!1568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1569)
!1569 = !{!1570, !1571}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1568, file: !151, line: 3353, baseType: !703, size: 192)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1568, file: !151, line: 3356, baseType: !1572, size: 192, offset: 192)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1401, line: 578, size: 192, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1572, file: !1401, line: 580, baseType: !471, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1572, file: !1401, line: 581, baseType: !471, size: 32, offset: 32)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1572, file: !1401, line: 582, baseType: !471, size: 32, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1572, file: !1401, line: 583, baseType: !471, size: 32, offset: 96)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1572, file: !1401, line: 584, baseType: !470, size: 8, offset: 128)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1572, file: !1401, line: 585, baseType: !470, size: 8, offset: 136)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1572, file: !1401, line: 586, baseType: !470, size: 8, offset: 144)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1572, file: !1401, line: 587, baseType: !470, size: 8, offset: 152)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1572, file: !1401, line: 588, baseType: !470, size: 8, offset: 160)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1572, file: !1401, line: 589, baseType: !470, size: 8, offset: 168)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1572, file: !1401, line: 590, baseType: !470, size: 8, offset: 176)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !571, file: !553, line: 178, baseType: !509, size: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !571, file: !553, line: 179, baseType: !1587, size: 64)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !553, line: 150, baseType: !1589)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !553, line: 142, size: 320, elements: !1590)
!1590 = !{!1591, !1592, !1593, !1594, !1595, !1596}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1589, file: !553, line: 144, baseType: !665, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1589, file: !553, line: 145, baseType: !550, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1589, file: !553, line: 146, baseType: !550, size: 64, offset: 128)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1589, file: !553, line: 147, baseType: !1260, size: 32, offset: 192)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1589, file: !553, line: 148, baseType: !7, size: 32, offset: 224)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1589, file: !553, line: 149, baseType: !470, size: 8, offset: 256)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !571, file: !553, line: 180, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !553, line: 162, baseType: !1600)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !553, line: 159, size: 128, elements: !1601)
!1601 = !{!1602, !1603}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1600, file: !553, line: 160, baseType: !665, size: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1600, file: !553, line: 161, baseType: !478, size: 64, offset: 64)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !571, file: !553, line: 181, baseType: !1605, size: 64)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !553, line: 181, flags: DIFlagFwdDecl)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !566, file: !553, line: 317, baseType: !1608, size: 64)
!1608 = !DICompositeType(tag: DW_TAG_array_type, baseType: !478, size: 64, elements: !585)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !566, file: !553, line: 318, baseType: !1610, size: 320)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !553, line: 188, size: 320, elements: !1611)
!1611 = !{!1612, !1614, !1637}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1610, file: !553, line: 190, baseType: !1613, size: 192)
!1613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !570, size: 192, elements: !736)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1610, file: !553, line: 193, baseType: !1615, size: 64, offset: 192)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !553, line: 206, size: 320, elements: !1617)
!1617 = !{!1618, !1622, !1623, !1624, !1636}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1616, file: !553, line: 208, baseType: !1619, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1620, size: 64)
!1620 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !487, line: 62, baseType: !1621)
!1621 = !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !487, line: 61, flags: DIFlagFwdDecl)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1616, file: !553, line: 211, baseType: !7, size: 32, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1616, file: !553, line: 214, baseType: !478, size: 64, offset: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1616, file: !553, line: 224, baseType: !1625, size: 64, offset: 192)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !553, line: 202, baseType: !1627)
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !553, line: 202, size: 128, elements: !1628)
!1628 = !{!1629}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1627, file: !553, line: 202, baseType: !1630, size: 128)
!1630 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !553, line: 200, baseType: !1631)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !553, line: 200, size: 128, elements: !1632)
!1632 = !{!1633, !1634, !1635}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1631, file: !553, line: 200, baseType: !7, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1631, file: !553, line: 200, baseType: !7, size: 32, offset: 32)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1631, file: !553, line: 200, baseType: !584, size: 64, offset: 64)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1616, file: !553, line: 234, baseType: !1625, size: 64, offset: 256)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1610, file: !553, line: 197, baseType: !478, size: 64, offset: 256)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !566, file: !553, line: 319, baseType: !725, size: 256)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !566, file: !553, line: 320, baseType: !744, size: 192)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !527, file: !135, line: 134, baseType: !475, size: 64, offset: 192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !527, file: !135, line: 137, baseType: !665, size: 64, offset: 256)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !527, file: !135, line: 138, baseType: !505, size: 32, offset: 320)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !527, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !527, file: !135, line: 144, baseType: !471, size: 32, offset: 384)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !527, file: !135, line: 145, baseType: !471, size: 32, offset: 416)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !527, file: !135, line: 146, baseType: !1647, size: 64, offset: 448)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !478)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !510, file: !135, line: 220, baseType: !513, size: 64, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !510, file: !135, line: 223, baseType: !475, size: 64, offset: 128)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !510, file: !135, line: 226, baseType: !1113, size: 64, offset: 192)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !510, file: !135, line: 229, baseType: !1652, size: 128, offset: 256)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1653, size: 128, elements: !621)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !510, file: !135, line: 232, baseType: !509, size: 64, offset: 384)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !510, file: !135, line: 233, baseType: !509, size: 64, offset: 448)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !510, file: !135, line: 238, baseType: !1658, size: 64, offset: 512)
!1658 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1659)
!1659 = !{!1660, !1666}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1658, file: !135, line: 236, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1663)
!1663 = !{!1664, !1665}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1662, file: !135, line: 275, baseType: !535, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1662, file: !135, line: 278, baseType: !535, size: 64, offset: 64)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1658, file: !135, line: 237, baseType: !1667, size: 64)
!1667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1668, size: 64)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1669)
!1669 = !{!1670, !1671, !1672, !1673, !1674}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1668, file: !135, line: 261, baseType: !550, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1668, file: !135, line: 262, baseType: !550, size: 64, offset: 64)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1668, file: !135, line: 266, baseType: !550, size: 64, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1668, file: !135, line: 267, baseType: !550, size: 64, offset: 192)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1668, file: !135, line: 270, baseType: !471, size: 32, offset: 256)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !510, file: !135, line: 241, baseType: !1647, size: 64, offset: 576)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !510, file: !135, line: 244, baseType: !471, size: 32, offset: 640)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !510, file: !135, line: 247, baseType: !471, size: 32, offset: 672)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !510, file: !135, line: 250, baseType: !471, size: 32, offset: 704)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !510, file: !135, line: 253, baseType: !471, size: 32, offset: 736)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !510, file: !135, line: 256, baseType: !471, size: 32, offset: 768)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !492, file: !391, line: 327, baseType: !665, size: 64, offset: 192)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !489, file: !391, line: 739, baseType: !1683, size: 448)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !391, line: 350, size: 448, elements: !1684)
!1684 = !{!1685, !1691}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1683, file: !391, line: 353, baseType: !1686, size: 384)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !391, line: 333, size: 384, elements: !1687)
!1687 = !{!1688, !1689, !1690}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1686, file: !391, line: 336, baseType: !492, size: 256)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1686, file: !391, line: 343, baseType: !1071, size: 64, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1686, file: !391, line: 344, baseType: !1078, size: 64, offset: 320)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1683, file: !391, line: 359, baseType: !1035, size: 64, offset: 384)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !489, file: !391, line: 740, baseType: !1693, size: 512)
!1693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !391, line: 365, size: 512, elements: !1694)
!1694 = !{!1695, !1696, !1697}
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1693, file: !391, line: 368, baseType: !1686, size: 384)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1693, file: !391, line: 373, baseType: !665, size: 64, offset: 384)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1693, file: !391, line: 374, baseType: !665, size: 64, offset: 448)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !489, file: !391, line: 741, baseType: !1699, size: 576)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !391, line: 380, size: 576, elements: !1700)
!1700 = !{!1701, !1702}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1699, file: !391, line: 383, baseType: !1693, size: 512)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1699, file: !391, line: 389, baseType: !1035, size: 64, offset: 512)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !489, file: !391, line: 742, baseType: !1704, size: 320)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !391, line: 395, size: 320, elements: !1705)
!1705 = !{!1706, !1707}
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1704, file: !391, line: 397, baseType: !492, size: 256)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1704, file: !391, line: 400, baseType: !535, size: 64, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !489, file: !391, line: 743, baseType: !1709, size: 448)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !391, line: 406, size: 448, elements: !1710)
!1710 = !{!1711, !1712, !1713, !1714}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1709, file: !391, line: 408, baseType: !492, size: 256)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1709, file: !391, line: 412, baseType: !665, size: 64, offset: 256)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1709, file: !391, line: 420, baseType: !665, size: 64, offset: 320)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1709, file: !391, line: 423, baseType: !535, size: 64, offset: 384)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !489, file: !391, line: 744, baseType: !1716, size: 384)
!1716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !391, line: 429, size: 384, elements: !1717)
!1717 = !{!1718, !1719, !1720}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1716, file: !391, line: 431, baseType: !492, size: 256)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1716, file: !391, line: 434, baseType: !665, size: 64, offset: 256)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1716, file: !391, line: 437, baseType: !535, size: 64, offset: 320)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !489, file: !391, line: 745, baseType: !1722, size: 384)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !391, line: 443, size: 384, elements: !1723)
!1723 = !{!1724, !1725, !1726}
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1722, file: !391, line: 445, baseType: !492, size: 256)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1722, file: !391, line: 449, baseType: !665, size: 64, offset: 256)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1722, file: !391, line: 453, baseType: !535, size: 64, offset: 320)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !489, file: !391, line: 746, baseType: !1728, size: 320)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !391, line: 459, size: 320, elements: !1729)
!1729 = !{!1730, !1731}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1728, file: !391, line: 461, baseType: !492, size: 256)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1728, file: !391, line: 464, baseType: !665, size: 64, offset: 256)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !489, file: !391, line: 747, baseType: !1733, size: 768)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !391, line: 469, size: 768, elements: !1734)
!1734 = !{!1735, !1736, !1737, !1738, !1739}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1733, file: !391, line: 471, baseType: !492, size: 256)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1733, file: !391, line: 474, baseType: !7, size: 32, offset: 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1733, file: !391, line: 475, baseType: !7, size: 32, offset: 288)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1733, file: !391, line: 478, baseType: !665, size: 64, offset: 320)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1733, file: !391, line: 481, baseType: !1740, size: 384, offset: 384)
!1740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1741, size: 384, elements: !585)
!1741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !151, line: 1917, size: 384, elements: !1742)
!1742 = !{!1743, !1744, !1745}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1741, file: !151, line: 1920, baseType: !1083, size: 256)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1741, file: !151, line: 1921, baseType: !665, size: 64, offset: 256)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1741, file: !151, line: 1922, baseType: !505, size: 32, offset: 320)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !489, file: !391, line: 748, baseType: !1747, size: 320)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !391, line: 487, size: 320, elements: !1748)
!1748 = !{!1749, !1750}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1747, file: !391, line: 490, baseType: !492, size: 256)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1747, file: !391, line: 494, baseType: !471, size: 32, offset: 256)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !489, file: !391, line: 749, baseType: !1752, size: 384)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !391, line: 500, size: 384, elements: !1753)
!1753 = !{!1754, !1755, !1756}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1752, file: !391, line: 502, baseType: !492, size: 256)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1752, file: !391, line: 506, baseType: !535, size: 64, offset: 256)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1752, file: !391, line: 510, baseType: !535, size: 64, offset: 320)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !489, file: !391, line: 750, baseType: !1758, size: 320)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !391, line: 529, size: 320, elements: !1759)
!1759 = !{!1760, !1761}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1758, file: !391, line: 531, baseType: !492, size: 256)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1758, file: !391, line: 540, baseType: !535, size: 64, offset: 256)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !489, file: !391, line: 751, baseType: !1763, size: 704)
!1763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !391, line: 546, size: 704, elements: !1764)
!1764 = !{!1765, !1766, !1767, !1768, !1769, !1770, !1771}
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1763, file: !391, line: 549, baseType: !1693, size: 512)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1763, file: !391, line: 553, baseType: !476, size: 64, offset: 512)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1763, file: !391, line: 557, baseType: !470, size: 8, offset: 576)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1763, file: !391, line: 558, baseType: !470, size: 8, offset: 584)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1763, file: !391, line: 559, baseType: !470, size: 8, offset: 592)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1763, file: !391, line: 560, baseType: !470, size: 8, offset: 600)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1763, file: !391, line: 566, baseType: !1035, size: 64, offset: 640)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !489, file: !391, line: 752, baseType: !1773, size: 384)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !391, line: 571, size: 384, elements: !1774)
!1774 = !{!1775, !1776}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1773, file: !391, line: 573, baseType: !1704, size: 320)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1773, file: !391, line: 577, baseType: !665, size: 64, offset: 320)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !489, file: !391, line: 753, baseType: !1778, size: 576)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !391, line: 600, size: 576, elements: !1779)
!1779 = !{!1780, !1781, !1782, !1783, !1792}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1778, file: !391, line: 602, baseType: !1704, size: 320)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1778, file: !391, line: 605, baseType: !665, size: 64, offset: 320)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1778, file: !391, line: 609, baseType: !985, size: 64, offset: 384)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1778, file: !391, line: 612, baseType: !1784, size: 64, offset: 448)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !391, line: 581, size: 320, elements: !1786)
!1786 = !{!1787, !1788, !1789, !1790, !1791}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1785, file: !391, line: 583, baseType: !183, size: 32)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1785, file: !391, line: 586, baseType: !665, size: 64, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1785, file: !391, line: 589, baseType: !665, size: 64, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1785, file: !391, line: 592, baseType: !665, size: 64, offset: 192)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1785, file: !391, line: 595, baseType: !665, size: 64, offset: 256)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1778, file: !391, line: 616, baseType: !535, size: 64, offset: 512)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !489, file: !391, line: 754, baseType: !1794, size: 512)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !391, line: 622, size: 512, elements: !1795)
!1795 = !{!1796, !1797, !1798, !1799}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1794, file: !391, line: 624, baseType: !1704, size: 320)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1794, file: !391, line: 628, baseType: !665, size: 64, offset: 320)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1794, file: !391, line: 632, baseType: !665, size: 64, offset: 384)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1794, file: !391, line: 636, baseType: !665, size: 64, offset: 448)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !489, file: !391, line: 755, baseType: !1801, size: 704)
!1801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !391, line: 642, size: 704, elements: !1802)
!1802 = !{!1803, !1804, !1805, !1806}
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1801, file: !391, line: 644, baseType: !1794, size: 512)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1801, file: !391, line: 648, baseType: !665, size: 64, offset: 512)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1801, file: !391, line: 652, baseType: !665, size: 64, offset: 576)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1801, file: !391, line: 653, baseType: !665, size: 64, offset: 640)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !489, file: !391, line: 756, baseType: !1808, size: 448)
!1808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !391, line: 663, size: 448, elements: !1809)
!1809 = !{!1810, !1811, !1812}
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1808, file: !391, line: 665, baseType: !1704, size: 320)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1808, file: !391, line: 668, baseType: !665, size: 64, offset: 320)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1808, file: !391, line: 673, baseType: !665, size: 64, offset: 384)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !489, file: !391, line: 757, baseType: !1814, size: 384)
!1814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !391, line: 694, size: 384, elements: !1815)
!1815 = !{!1816, !1817}
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1814, file: !391, line: 696, baseType: !1704, size: 320)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1814, file: !391, line: 699, baseType: !665, size: 64, offset: 320)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !489, file: !391, line: 758, baseType: !1819, size: 384)
!1819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !391, line: 681, size: 384, elements: !1820)
!1820 = !{!1821, !1822, !1823}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1819, file: !391, line: 683, baseType: !492, size: 256)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1819, file: !391, line: 686, baseType: !665, size: 64, offset: 256)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1819, file: !391, line: 689, baseType: !665, size: 64, offset: 320)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !489, file: !391, line: 759, baseType: !1825, size: 384)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !391, line: 707, size: 384, elements: !1826)
!1826 = !{!1827, !1828, !1829}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1825, file: !391, line: 709, baseType: !492, size: 256)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1825, file: !391, line: 712, baseType: !665, size: 64, offset: 256)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1825, file: !391, line: 712, baseType: !665, size: 64, offset: 320)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !489, file: !391, line: 760, baseType: !1831, size: 320)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !391, line: 718, size: 320, elements: !1832)
!1832 = !{!1833, !1834}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1831, file: !391, line: 720, baseType: !492, size: 256)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1831, file: !391, line: 723, baseType: !665, size: 64, offset: 256)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "reduc_phi", scope: !483, file: !3, line: 170, baseType: !486, size: 64, offset: 64)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !483, file: !3, line: 171, baseType: !183, size: 32, offset: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "keep_res", scope: !483, file: !3, line: 172, baseType: !486, size: 64, offset: 192)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "initial_value", scope: !483, file: !3, line: 174, baseType: !665, size: 64, offset: 256)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "field", scope: !483, file: !3, line: 175, baseType: !665, size: 64, offset: 320)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !483, file: !3, line: 176, baseType: !665, size: 64, offset: 384)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "new_phi", scope: !483, file: !3, line: 177, baseType: !486, size: 64, offset: 448)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_heap", file: !1844, line: 32, baseType: !1845)
!1844 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_heap", file: !1844, line: 32, size: 96, elements: !1846)
!1846 = !{!1847}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1845, file: !1844, line: 32, baseType: !1848, size: 96)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_int_base", file: !1844, line: 31, baseType: !1849)
!1849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_int_base", file: !1844, line: 31, size: 96, elements: !1850)
!1850 = !{!1851, !1852, !1853}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1849, file: !1844, line: 31, baseType: !7, size: 32)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1849, file: !1844, line: 31, baseType: !7, size: 32, offset: 32)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1849, file: !1844, line: 31, baseType: !1854, size: 32, offset: 64)
!1854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !471, size: 32, elements: !585)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !489)
!1858 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_operand_p", file: !462, line: 30, baseType: !1859)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_use_operand_t", file: !151, line: 1893, baseType: !1083)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_heap", file: !1863, line: 209, baseType: !1864)
!1863 = !DIFile(filename: "./tree-data-ref.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_heap", file: !1863, line: 209, size: 128, elements: !1865)
!1865 = !{!1866}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1864, file: !1863, line: 209, baseType: !1867, size: 128)
!1867 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_data_reference_p_base", file: !1863, line: 208, baseType: !1868)
!1868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_data_reference_p_base", file: !1863, line: 208, size: 128, elements: !1869)
!1869 = !{!1870, !1871, !1872}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1868, file: !1863, line: 208, baseType: !7, size: 32)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1868, file: !1863, line: 208, baseType: !7, size: 32, offset: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1868, file: !1863, line: 208, baseType: !1873, size: 64, offset: 64)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1874, size: 64, elements: !585)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "data_reference_p", file: !1863, line: 207, baseType: !1875)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_reference", file: !1863, line: 165, size: 896, elements: !1877)
!1877 = !{!1878, !1879, !1880, !1881, !1882, !1890, !1900, !1905}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1876, file: !1863, line: 168, baseType: !486, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !1876, file: !1863, line: 171, baseType: !665, size: 64, offset: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1876, file: !1863, line: 174, baseType: !475, size: 64, offset: 128)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "is_read", scope: !1876, file: !1863, line: 177, baseType: !470, size: 8, offset: 192)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "innermost", scope: !1876, file: !1863, line: 180, baseType: !1883, size: 320, offset: 256)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "innermost_loop_behavior", file: !1863, line: 51, size: 320, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1888, !1889}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "base_address", scope: !1883, file: !1863, line: 53, baseType: !665, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1883, file: !1863, line: 54, baseType: !665, size: 64, offset: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1883, file: !1863, line: 55, baseType: !665, size: 64, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1883, file: !1863, line: 56, baseType: !665, size: 64, offset: 192)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "aligned_to", scope: !1883, file: !1863, line: 60, baseType: !665, size: 64, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !1876, file: !1863, line: 183, baseType: !1891, size: 128, offset: 576)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "indices", file: !1863, line: 78, size: 128, elements: !1892)
!1892 = !{!1893, !1894}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "base_object", scope: !1891, file: !1863, line: 81, baseType: !665, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "access_fns", scope: !1891, file: !1863, line: 84, baseType: !1895, size: 64, offset: 64)
!1895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1896, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_heap", file: !151, line: 184, baseType: !1897)
!1897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_heap", file: !151, line: 184, size: 128, elements: !1898)
!1898 = !{!1899}
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1897, file: !151, line: 184, baseType: !1029, size: 128)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1876, file: !1863, line: 186, baseType: !1901, size: 128, offset: 704)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dr_alias", file: !1863, line: 87, size: 128, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1901, file: !1863, line: 91, baseType: !1310, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "vops", scope: !1901, file: !1863, line: 96, baseType: !1048, size: 64, offset: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "access_matrix", scope: !1876, file: !1863, line: 189, baseType: !1906, size: 64, offset: 832)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "access_matrix", file: !1863, line: 127, size: 256, elements: !1908)
!1908 = !{!1909, !1915, !1916, !1917}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1907, file: !1863, line: 129, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_heap", file: !378, line: 86, baseType: !1912)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_heap", file: !378, line: 86, size: 128, elements: !1913)
!1913 = !{!1914}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1912, file: !378, line: 86, baseType: !1105, size: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "nb_induction_vars", scope: !1907, file: !1863, line: 130, baseType: !471, size: 32, offset: 64)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !1907, file: !1863, line: 131, baseType: !1895, size: 64, offset: 128)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !1907, file: !1863, line: 132, baseType: !1918, size: 64, offset: 192)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_gc", file: !1920, line: 34, baseType: !1921)
!1920 = !DIFile(filename: "./lambda.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_gc", file: !1920, line: 34, size: 128, elements: !1922)
!1922 = !{!1923}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1921, file: !1920, line: 34, baseType: !1924, size: 128)
!1924 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_base", file: !1920, line: 32, baseType: !1925)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_base", file: !1920, line: 32, size: 128, elements: !1926)
!1926 = !{!1927, !1928, !1929}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1925, file: !1920, line: 32, baseType: !7, size: 32)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1925, file: !1920, line: 32, baseType: !7, size: 32, offset: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1925, file: !1920, line: 32, baseType: !1930, size: 64, offset: 64)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 64, elements: !585)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_vector", file: !1920, line: 31, baseType: !1932)
!1932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_heap", file: !1863, line: 333, baseType: !1935)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_heap", file: !1863, line: 333, size: 128, elements: !1936)
!1936 = !{!1937}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1935, file: !1863, line: 333, baseType: !1938, size: 128)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ddr_p_base", file: !1863, line: 332, baseType: !1939)
!1939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ddr_p_base", file: !1863, line: 332, size: 128, elements: !1940)
!1940 = !{!1941, !1942, !1943}
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1939, file: !1863, line: 332, baseType: !7, size: 32)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1939, file: !1863, line: 332, baseType: !7, size: 32, offset: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1939, file: !1863, line: 332, baseType: !1944, size: 64, offset: 64)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1945, size: 64, elements: !585)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "ddr_p", file: !1863, line: 331, baseType: !1946)
!1946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1947, size: 64)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_dependence_relation", file: !1863, line: 282, size: 512, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1952, !1981, !1982, !1988, !1989, !1990, !1991, !1992}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1947, file: !1863, line: 285, baseType: !1875, size: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1947, file: !1863, line: 286, baseType: !1875, size: 64, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "are_dependent", scope: !1947, file: !1863, line: 299, baseType: !665, size: 64, offset: 128)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "subscripts", scope: !1947, file: !1863, line: 304, baseType: !1953, size: 64, offset: 192)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_heap", file: !1863, line: 272, baseType: !1955)
!1955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_heap", file: !1863, line: 272, size: 128, elements: !1956)
!1956 = !{!1957}
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1955, file: !1863, line: 272, baseType: !1958, size: 128)
!1958 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_subscript_p_base", file: !1863, line: 271, baseType: !1959)
!1959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_subscript_p_base", file: !1863, line: 271, size: 128, elements: !1960)
!1960 = !{!1961, !1962, !1963}
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1959, file: !1863, line: 271, baseType: !7, size: 32)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1959, file: !1863, line: 271, baseType: !7, size: 32, offset: 32)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1959, file: !1863, line: 271, baseType: !1964, size: 64, offset: 64)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1965, size: 64, elements: !585)
!1965 = !DIDerivedType(tag: DW_TAG_typedef, name: "subscript_p", file: !1863, line: 270, baseType: !1966)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "subscript", file: !1863, line: 252, size: 256, elements: !1968)
!1968 = !{!1969, !1978, !1979, !1980}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_a", scope: !1967, file: !1863, line: 256, baseType: !1970, size: 64)
!1970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1971, size: 64)
!1971 = !DIDerivedType(tag: DW_TAG_typedef, name: "conflict_function", file: !1863, line: 243, baseType: !1972)
!1972 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1863, line: 239, size: 192, elements: !1973)
!1973 = !{!1974, !1975}
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !1972, file: !1863, line: 241, baseType: !7, size: 32)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "fns", scope: !1972, file: !1863, line: 242, baseType: !1976, size: 128, offset: 64)
!1976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1977, size: 128, elements: !621)
!1977 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_fn", file: !1863, line: 237, baseType: !1895)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "conflicting_iterations_in_b", scope: !1967, file: !1863, line: 257, baseType: !1970, size: 64, offset: 64)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "last_conflict", scope: !1967, file: !1863, line: 261, baseType: !665, size: 64, offset: 128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1967, file: !1863, line: 267, baseType: !665, size: 64, offset: 192)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !1947, file: !1863, line: 307, baseType: !1910, size: 64, offset: 256)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "dir_vects", scope: !1947, file: !1863, line: 310, baseType: !1983, size: 64, offset: 320)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_lambda_vector_heap", file: !1920, line: 33, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_lambda_vector_heap", file: !1920, line: 33, size: 128, elements: !1986)
!1986 = !{!1987}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1985, file: !1920, line: 33, baseType: !1924, size: 128)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "dist_vects", scope: !1947, file: !1863, line: 313, baseType: !1983, size: 64, offset: 384)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "inner_loop", scope: !1947, file: !1863, line: 317, baseType: !7, size: 32, offset: 448)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "reversed_p", scope: !1947, file: !1863, line: 320, baseType: !470, size: 8, offset: 480)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "affine_p", scope: !1947, file: !1863, line: 324, baseType: !470, size: 8, offset: 488)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "self_reference_p", scope: !1947, file: !1863, line: 328, baseType: !470, size: 8, offset: 496)
!1993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_heap", file: !135, line: 283, baseType: !1996)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_heap", file: !135, line: 283, size: 128, elements: !1997)
!1997 = !{!1998}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1996, file: !135, line: 283, baseType: !935, size: 128)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_data", file: !3, line: 430, size: 640, elements: !2001)
!2001 = !{!2002, !2021, !2022, !2023}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2000, file: !3, line: 432, baseType: !2003, size: 448)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "walk_stmt_info", file: !391, line: 4652, size: 448, elements: !2004)
!2004 = !{!2005, !2012, !2013, !2016, !2017, !2018, !2019, !2020}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "gsi", scope: !2003, file: !391, line: 4655, baseType: !2006, size: 192)
!2006 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !391, line: 265, baseType: !2007)
!2007 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !391, line: 254, size: 192, elements: !2008)
!2008 = !{!2009, !2010, !2011}
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2007, file: !391, line: 257, baseType: !540, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2007, file: !391, line: 263, baseType: !535, size: 64, offset: 64)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2007, file: !391, line: 264, baseType: !927, size: 64, offset: 128)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2003, file: !391, line: 4659, baseType: !475, size: 64, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "pset", scope: !2003, file: !391, line: 4664, baseType: !2014, size: 64, offset: 256)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2015, size: 64)
!2015 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_set_t", file: !151, line: 5199, flags: DIFlagFwdDecl)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "val_only", scope: !2003, file: !391, line: 4678, baseType: !470, size: 8, offset: 320)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "is_lhs", scope: !2003, file: !391, line: 4681, baseType: !470, size: 8, offset: 328)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2003, file: !391, line: 4685, baseType: !470, size: 8, offset: 336)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "want_locations", scope: !2003, file: !391, line: 4688, baseType: !470, size: 8, offset: 344)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !2003, file: !391, line: 4694, baseType: !665, size: 64, offset: 384)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2000, file: !3, line: 433, baseType: !525, size: 64, offset: 448)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "decl_address", scope: !2000, file: !3, line: 434, baseType: !959, size: 64, offset: 512)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2000, file: !3, line: 435, baseType: !470, size: 8, offset: 576)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "int_tree_map", file: !867, line: 321, size: 128, elements: !2026)
!2026 = !{!2027, !2028}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2025, file: !867, line: 323, baseType: !7, size: 32)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2025, file: !867, line: 324, baseType: !665, size: 64, offset: 64)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "name_to_copy_elt", file: !3, line: 218, size: 192, elements: !2032)
!2032 = !{!2033, !2034, !2035}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2031, file: !3, line: 220, baseType: !7, size: 32)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "new_name", scope: !2031, file: !3, line: 221, baseType: !665, size: 64, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "field", scope: !2031, file: !3, line: 222, baseType: !665, size: 64, offset: 128)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_operand_p", file: !462, line: 27, baseType: !1076)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "clsn_data", file: !3, line: 840, size: 256, elements: !2040)
!2040 = !{!2041, !2042, !2043, !2044}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2039, file: !3, line: 842, baseType: !665, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !2039, file: !3, line: 843, baseType: !665, size: 64, offset: 64)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "store_bb", scope: !2039, file: !3, line: 845, baseType: !927, size: 64, offset: 128)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "load_bb", scope: !2039, file: !3, line: 846, baseType: !927, size: 64, offset: 192)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1114)
!2047 = !{!2048, !0, !2062}
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_tree_parloops_h", scope: !2, file: !2050, line: 24, type: !2051, isLocal: false, isDefinition: true)
!2050 = !DIFile(filename: "./gt-tree-parloops.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2051 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2052, size: 640, elements: !621)
!2052 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2053)
!2053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2054, line: 69, size: 320, elements: !2055)
!2054 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2055 = !{!2056, !2057, !2058, !2059, !2061}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2053, file: !2054, line: 70, baseType: !475, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2053, file: !2054, line: 71, baseType: !985, size: 64, offset: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2053, file: !2054, line: 72, baseType: !985, size: 64, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2053, file: !2054, line: 73, baseType: !2060, size: 64, offset: 192)
!2060 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2054, line: 65, baseType: !979)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2053, file: !2054, line: 74, baseType: !2060, size: 64, offset: 256)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "loopfn_num", scope: !2064, file: !3, line: 1233, type: !7, isLocal: true, isDefinition: true)
!2064 = distinct !DISubprogram(name: "create_loop_fn", scope: !3, file: !3, line: 1227, type: !2065, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2067)
!2065 = !DISubroutineType(types: !2066)
!2066 = !{!665}
!2067 = !{!2068, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2081}
!2068 = !DILocalVariable(name: "buf", scope: !2064, file: !3, line: 1229, type: !2069)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 800, elements: !2070)
!2070 = !{!2071}
!2071 = !DISubrange(count: 100)
!2072 = !DILocalVariable(name: "tname", scope: !2064, file: !3, line: 1230, type: !473)
!2073 = !DILocalVariable(name: "decl", scope: !2064, file: !3, line: 1231, type: !665)
!2074 = !DILocalVariable(name: "type", scope: !2064, file: !3, line: 1231, type: !665)
!2075 = !DILocalVariable(name: "name", scope: !2064, file: !3, line: 1231, type: !665)
!2076 = !DILocalVariable(name: "t", scope: !2064, file: !3, line: 1231, type: !665)
!2077 = !DILocalVariable(name: "act_cfun", scope: !2064, file: !3, line: 1232, type: !915)
!2078 = !DILocalVariable(name: "name_", scope: !2079, file: !3, line: 1236, type: !2080)
!2079 = distinct !DILexicalBlock(scope: !2064, file: !3, line: 1236, column: 3)
!2080 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!2081 = !DILocalVariable(name: "output_", scope: !2079, file: !3, line: 1236, type: !2082)
!2082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!2083 = !{i32 2, !"Dwarf Version", i32 4}
!2084 = !{i32 2, !"Debug Info Version", i32 3}
!2085 = !{i32 1, !"wchar_size", i32 4}
!2086 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2087 = distinct !DISubprogram(name: "vprintf", scope: !2088, file: !2088, line: 39, type: !2089, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2099)
!2088 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2089 = !DISubroutineType(types: !2090)
!2090 = !{!471, !2091, !2092}
!2091 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !476)
!2092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!2093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2094)
!2094 = !{!2095, !2096, !2097, !2098}
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2093, file: !3, baseType: !7, size: 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2093, file: !3, baseType: !7, size: 32, offset: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2093, file: !3, baseType: !475, size: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2093, file: !3, baseType: !475, size: 64, offset: 128)
!2099 = !{!2100, !2101}
!2100 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2087, file: !2088, line: 39, type: !2091)
!2101 = !DILocalVariable(name: "__arg", arg: 2, scope: !2087, file: !2088, line: 39, type: !2092)
!2102 = !DILocation(line: 0, scope: !2087)
!2103 = !DILocation(line: 41, column: 20, scope: !2087)
!2104 = !DILocation(line: 41, column: 10, scope: !2087)
!2105 = !DILocation(line: 41, column: 3, scope: !2087)
!2106 = distinct !DISubprogram(name: "getchar", scope: !2088, file: !2088, line: 47, type: !2107, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2109)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{!471}
!2109 = !{}
!2110 = !DILocation(line: 49, column: 16, scope: !2106)
!2111 = !DILocation(line: 49, column: 10, scope: !2106)
!2112 = !DILocation(line: 49, column: 3, scope: !2106)
!2113 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2088, file: !2088, line: 56, type: !2114, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2167)
!2114 = !DISubroutineType(types: !2115)
!2115 = !{!471, !2116}
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2118, line: 7, baseType: !2119)
!2118 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2120, line: 49, size: 1728, elements: !2121)
!2120 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2121 = !{!2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2137, !2139, !2140, !2141, !2144, !2146, !2147, !2148, !2151, !2153, !2156, !2159, !2160, !2161, !2162, !2163}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2119, file: !2120, line: 51, baseType: !471, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2119, file: !2120, line: 54, baseType: !473, size: 64, offset: 64)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2119, file: !2120, line: 55, baseType: !473, size: 64, offset: 128)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2119, file: !2120, line: 56, baseType: !473, size: 64, offset: 192)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2119, file: !2120, line: 57, baseType: !473, size: 64, offset: 256)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2119, file: !2120, line: 58, baseType: !473, size: 64, offset: 320)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2119, file: !2120, line: 59, baseType: !473, size: 64, offset: 384)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2119, file: !2120, line: 60, baseType: !473, size: 64, offset: 448)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2119, file: !2120, line: 61, baseType: !473, size: 64, offset: 512)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2119, file: !2120, line: 64, baseType: !473, size: 64, offset: 576)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2119, file: !2120, line: 65, baseType: !473, size: 64, offset: 640)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2119, file: !2120, line: 66, baseType: !473, size: 64, offset: 704)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2119, file: !2120, line: 68, baseType: !2135, size: 64, offset: 768)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2120, line: 36, flags: DIFlagFwdDecl)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2119, file: !2120, line: 70, baseType: !2138, size: 64, offset: 832)
!2138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2119, file: !2120, line: 72, baseType: !471, size: 32, offset: 896)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2119, file: !2120, line: 73, baseType: !471, size: 32, offset: 928)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2119, file: !2120, line: 74, baseType: !2142, size: 64, offset: 960)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2143, line: 152, baseType: !478)
!2143 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2119, file: !2120, line: 77, baseType: !2145, size: 16, offset: 1024)
!2145 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2119, file: !2120, line: 78, baseType: !1412, size: 8, offset: 1040)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2119, file: !2120, line: 79, baseType: !760, size: 8, offset: 1048)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2119, file: !2120, line: 81, baseType: !2149, size: 64, offset: 1088)
!2149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2150, size: 64)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2120, line: 43, baseType: null)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2119, file: !2120, line: 89, baseType: !2152, size: 64, offset: 1152)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2143, line: 153, baseType: !478)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2119, file: !2120, line: 91, baseType: !2154, size: 64, offset: 1216)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2120, line: 37, flags: DIFlagFwdDecl)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2119, file: !2120, line: 92, baseType: !2157, size: 64, offset: 1280)
!2157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2158, size: 64)
!2158 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2120, line: 38, flags: DIFlagFwdDecl)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2119, file: !2120, line: 93, baseType: !2138, size: 64, offset: 1344)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2119, file: !2120, line: 94, baseType: !475, size: 64, offset: 1408)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2119, file: !2120, line: 95, baseType: !985, size: 64, offset: 1472)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2119, file: !2120, line: 96, baseType: !471, size: 32, offset: 1536)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2119, file: !2120, line: 98, baseType: !2164, size: 160, offset: 1568)
!2164 = !DICompositeType(tag: DW_TAG_array_type, baseType: !474, size: 160, elements: !2165)
!2165 = !{!2166}
!2166 = !DISubrange(count: 20)
!2167 = !{!2168}
!2168 = !DILocalVariable(name: "__fp", arg: 1, scope: !2113, file: !2088, line: 56, type: !2116)
!2169 = !DILocation(line: 0, scope: !2113)
!2170 = !DILocation(line: 58, column: 10, scope: !2113)
!2171 = !DILocation(line: 58, column: 3, scope: !2113)
!2172 = distinct !DISubprogram(name: "getc_unlocked", scope: !2088, file: !2088, line: 66, type: !2114, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2173)
!2173 = !{!2174}
!2174 = !DILocalVariable(name: "__fp", arg: 1, scope: !2172, file: !2088, line: 66, type: !2116)
!2175 = !DILocation(line: 0, scope: !2172)
!2176 = !DILocation(line: 68, column: 10, scope: !2172)
!2177 = !DILocation(line: 68, column: 3, scope: !2172)
!2178 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2088, file: !2088, line: 73, type: !2107, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2109)
!2179 = !DILocation(line: 75, column: 10, scope: !2178)
!2180 = !DILocation(line: 75, column: 3, scope: !2178)
!2181 = distinct !DISubprogram(name: "putchar", scope: !2088, file: !2088, line: 82, type: !2182, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2184)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{!471, !471}
!2184 = !{!2185}
!2185 = !DILocalVariable(name: "__c", arg: 1, scope: !2181, file: !2088, line: 82, type: !471)
!2186 = !DILocation(line: 0, scope: !2181)
!2187 = !DILocation(line: 84, column: 21, scope: !2181)
!2188 = !DILocation(line: 84, column: 10, scope: !2181)
!2189 = !DILocation(line: 84, column: 3, scope: !2181)
!2190 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2088, file: !2088, line: 91, type: !2191, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2193)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!471, !471, !2116}
!2193 = !{!2194, !2195}
!2194 = !DILocalVariable(name: "__c", arg: 1, scope: !2190, file: !2088, line: 91, type: !471)
!2195 = !DILocalVariable(name: "__stream", arg: 2, scope: !2190, file: !2088, line: 91, type: !2116)
!2196 = !DILocation(line: 0, scope: !2190)
!2197 = !DILocation(line: 93, column: 10, scope: !2190)
!2198 = !DILocation(line: 93, column: 3, scope: !2190)
!2199 = distinct !DISubprogram(name: "putc_unlocked", scope: !2088, file: !2088, line: 101, type: !2191, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2200)
!2200 = !{!2201, !2202}
!2201 = !DILocalVariable(name: "__c", arg: 1, scope: !2199, file: !2088, line: 101, type: !471)
!2202 = !DILocalVariable(name: "__stream", arg: 2, scope: !2199, file: !2088, line: 101, type: !2116)
!2203 = !DILocation(line: 0, scope: !2199)
!2204 = !DILocation(line: 103, column: 10, scope: !2199)
!2205 = !DILocation(line: 103, column: 3, scope: !2199)
!2206 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2088, file: !2088, line: 108, type: !2182, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2207)
!2207 = !{!2208}
!2208 = !DILocalVariable(name: "__c", arg: 1, scope: !2206, file: !2088, line: 108, type: !471)
!2209 = !DILocation(line: 0, scope: !2206)
!2210 = !DILocation(line: 110, column: 10, scope: !2206)
!2211 = !DILocation(line: 110, column: 3, scope: !2206)
!2212 = distinct !DISubprogram(name: "getline", scope: !2088, file: !2088, line: 118, type: !2213, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2217)
!2213 = !DISubroutineType(types: !2214)
!2214 = !{!2215, !472, !2216, !2116}
!2215 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2143, line: 193, baseType: !478)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !985, size: 64)
!2217 = !{!2218, !2219, !2220}
!2218 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2212, file: !2088, line: 118, type: !472)
!2219 = !DILocalVariable(name: "__n", arg: 2, scope: !2212, file: !2088, line: 118, type: !2216)
!2220 = !DILocalVariable(name: "__stream", arg: 3, scope: !2212, file: !2088, line: 118, type: !2116)
!2221 = !DILocation(line: 0, scope: !2212)
!2222 = !DILocation(line: 120, column: 10, scope: !2212)
!2223 = !DILocation(line: 120, column: 3, scope: !2212)
!2224 = distinct !DISubprogram(name: "feof_unlocked", scope: !2088, file: !2088, line: 128, type: !2114, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2225)
!2225 = !{!2226}
!2226 = !DILocalVariable(name: "__stream", arg: 1, scope: !2224, file: !2088, line: 128, type: !2116)
!2227 = !DILocation(line: 0, scope: !2224)
!2228 = !DILocation(line: 130, column: 10, scope: !2224)
!2229 = !DILocation(line: 130, column: 3, scope: !2224)
!2230 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2088, file: !2088, line: 135, type: !2114, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2231)
!2231 = !{!2232}
!2232 = !DILocalVariable(name: "__stream", arg: 1, scope: !2230, file: !2088, line: 135, type: !2116)
!2233 = !DILocation(line: 0, scope: !2230)
!2234 = !DILocation(line: 137, column: 10, scope: !2230)
!2235 = !DILocation(line: 137, column: 3, scope: !2230)
!2236 = distinct !DISubprogram(name: "tolower", scope: !2237, file: !2237, line: 207, type: !2182, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2238)
!2237 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2238 = !{!2239}
!2239 = !DILocalVariable(name: "__c", arg: 1, scope: !2236, file: !2237, line: 207, type: !471)
!2240 = !DILocation(line: 0, scope: !2236)
!2241 = !DILocation(line: 209, column: 22, scope: !2236)
!2242 = !DILocation(line: 209, column: 39, scope: !2236)
!2243 = !DILocation(line: 209, column: 38, scope: !2236)
!2244 = !DILocation(line: 209, column: 37, scope: !2236)
!2245 = !DILocation(line: 209, column: 10, scope: !2236)
!2246 = !DILocation(line: 209, column: 3, scope: !2236)
!2247 = distinct !DISubprogram(name: "toupper", scope: !2237, file: !2237, line: 213, type: !2182, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2248)
!2248 = !{!2249}
!2249 = !DILocalVariable(name: "__c", arg: 1, scope: !2247, file: !2237, line: 213, type: !471)
!2250 = !DILocation(line: 0, scope: !2247)
!2251 = !DILocation(line: 215, column: 22, scope: !2247)
!2252 = !DILocation(line: 215, column: 39, scope: !2247)
!2253 = !DILocation(line: 215, column: 38, scope: !2247)
!2254 = !DILocation(line: 215, column: 37, scope: !2247)
!2255 = !DILocation(line: 215, column: 10, scope: !2247)
!2256 = !DILocation(line: 215, column: 3, scope: !2247)
!2257 = distinct !DISubprogram(name: "atoi", scope: !2258, file: !2258, line: 361, type: !2259, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2261)
!2258 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!471, !476}
!2261 = !{!2262}
!2262 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2257, file: !2258, line: 361, type: !476)
!2263 = !DILocation(line: 0, scope: !2257)
!2264 = !DILocation(line: 363, column: 16, scope: !2257)
!2265 = !DILocation(line: 363, column: 10, scope: !2257)
!2266 = !DILocation(line: 363, column: 3, scope: !2257)
!2267 = distinct !DISubprogram(name: "atol", scope: !2258, file: !2258, line: 366, type: !2268, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2270)
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!478, !476}
!2270 = !{!2271}
!2271 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2267, file: !2258, line: 366, type: !476)
!2272 = !DILocation(line: 0, scope: !2267)
!2273 = !DILocation(line: 368, column: 10, scope: !2267)
!2274 = !DILocation(line: 368, column: 3, scope: !2267)
!2275 = distinct !DISubprogram(name: "atoll", scope: !2258, file: !2258, line: 373, type: !2276, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2279)
!2276 = !DISubroutineType(types: !2277)
!2277 = !{!2278, !476}
!2278 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2279 = !{!2280}
!2280 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2275, file: !2258, line: 373, type: !476)
!2281 = !DILocation(line: 0, scope: !2275)
!2282 = !DILocation(line: 375, column: 10, scope: !2275)
!2283 = !DILocation(line: 375, column: 3, scope: !2275)
!2284 = distinct !DISubprogram(name: "bsearch", scope: !2285, file: !2285, line: 20, type: !2286, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2289)
!2285 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2286 = !DISubroutineType(types: !2287)
!2287 = !{!475, !970, !970, !985, !985, !2288}
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2258, line: 808, baseType: !974)
!2289 = !{!2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299}
!2290 = !DILocalVariable(name: "__key", arg: 1, scope: !2284, file: !2285, line: 20, type: !970)
!2291 = !DILocalVariable(name: "__base", arg: 2, scope: !2284, file: !2285, line: 20, type: !970)
!2292 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2284, file: !2285, line: 20, type: !985)
!2293 = !DILocalVariable(name: "__size", arg: 4, scope: !2284, file: !2285, line: 20, type: !985)
!2294 = !DILocalVariable(name: "__compar", arg: 5, scope: !2284, file: !2285, line: 21, type: !2288)
!2295 = !DILocalVariable(name: "__l", scope: !2284, file: !2285, line: 23, type: !985)
!2296 = !DILocalVariable(name: "__u", scope: !2284, file: !2285, line: 23, type: !985)
!2297 = !DILocalVariable(name: "__idx", scope: !2284, file: !2285, line: 23, type: !985)
!2298 = !DILocalVariable(name: "__p", scope: !2284, file: !2285, line: 24, type: !970)
!2299 = !DILocalVariable(name: "__comparison", scope: !2284, file: !2285, line: 25, type: !471)
!2300 = !DILocation(line: 0, scope: !2284)
!2301 = !DILocation(line: 29, column: 3, scope: !2284)
!2302 = !DILocation(line: 27, column: 7, scope: !2284)
!2303 = !DILocation(line: 29, column: 14, scope: !2284)
!2304 = !DILocation(line: 31, column: 20, scope: !2305)
!2305 = distinct !DILexicalBlock(scope: !2284, file: !2285, line: 30, column: 5)
!2306 = !DILocation(line: 31, column: 27, scope: !2305)
!2307 = !DILocation(line: 32, column: 56, scope: !2305)
!2308 = !DILocation(line: 32, column: 47, scope: !2305)
!2309 = !DILocation(line: 33, column: 22, scope: !2305)
!2310 = !DILocation(line: 34, column: 24, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2305, file: !2285, line: 34, column: 11)
!2312 = !DILocation(line: 34, column: 11, scope: !2305)
!2313 = !DILocation(line: 36, column: 29, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2311, file: !2285, line: 36, column: 16)
!2315 = !DILocation(line: 36, column: 16, scope: !2311)
!2316 = !DILocation(line: 37, column: 14, scope: !2314)
!2317 = distinct !{!2317, !2301, !2318}
!2318 = !DILocation(line: 40, column: 5, scope: !2284)
!2319 = !DILocation(line: 43, column: 1, scope: !2284)
!2320 = distinct !DISubprogram(name: "atof", scope: !2321, file: !2321, line: 25, type: !2322, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2325)
!2321 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2322 = !DISubroutineType(types: !2323)
!2323 = !{!2324, !476}
!2324 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2325 = !{!2326}
!2326 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2320, file: !2321, line: 25, type: !476)
!2327 = !DILocation(line: 0, scope: !2320)
!2328 = !DILocation(line: 27, column: 10, scope: !2320)
!2329 = !DILocation(line: 27, column: 3, scope: !2320)
!2330 = distinct !DISubprogram(name: "strtoimax", scope: !2331, file: !2331, line: 324, type: !2332, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2338)
!2331 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2332 = !DISubroutineType(types: !2333)
!2333 = !{!2334, !2091, !2337, !471}
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2335, line: 101, baseType: !2336)
!2335 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2143, line: 72, baseType: !478)
!2337 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !472)
!2338 = !{!2339, !2340, !2341}
!2339 = !DILocalVariable(name: "nptr", arg: 1, scope: !2330, file: !2331, line: 324, type: !2091)
!2340 = !DILocalVariable(name: "endptr", arg: 2, scope: !2330, file: !2331, line: 324, type: !2337)
!2341 = !DILocalVariable(name: "base", arg: 3, scope: !2330, file: !2331, line: 324, type: !471)
!2342 = !DILocation(line: 0, scope: !2330)
!2343 = !DILocation(line: 327, column: 10, scope: !2330)
!2344 = !DILocation(line: 327, column: 3, scope: !2330)
!2345 = distinct !DISubprogram(name: "strtoumax", scope: !2331, file: !2331, line: 336, type: !2346, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2350)
!2346 = !DISubroutineType(types: !2347)
!2347 = !{!2348, !2091, !2337, !471}
!2348 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2335, line: 102, baseType: !2349)
!2349 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2143, line: 73, baseType: !620)
!2350 = !{!2351, !2352, !2353}
!2351 = !DILocalVariable(name: "nptr", arg: 1, scope: !2345, file: !2331, line: 336, type: !2091)
!2352 = !DILocalVariable(name: "endptr", arg: 2, scope: !2345, file: !2331, line: 336, type: !2337)
!2353 = !DILocalVariable(name: "base", arg: 3, scope: !2345, file: !2331, line: 336, type: !471)
!2354 = !DILocation(line: 0, scope: !2345)
!2355 = !DILocation(line: 339, column: 10, scope: !2345)
!2356 = !DILocation(line: 339, column: 3, scope: !2345)
!2357 = distinct !DISubprogram(name: "wcstoimax", scope: !2331, file: !2331, line: 348, type: !2358, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2367)
!2358 = !DISubroutineType(types: !2359)
!2359 = !{!2334, !2360, !2364, !471}
!2360 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2361)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2363)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2331, line: 34, baseType: !471)
!2364 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2365)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2367 = !{!2368, !2369, !2370}
!2368 = !DILocalVariable(name: "nptr", arg: 1, scope: !2357, file: !2331, line: 348, type: !2360)
!2369 = !DILocalVariable(name: "endptr", arg: 2, scope: !2357, file: !2331, line: 348, type: !2364)
!2370 = !DILocalVariable(name: "base", arg: 3, scope: !2357, file: !2331, line: 348, type: !471)
!2371 = !DILocation(line: 0, scope: !2357)
!2372 = !DILocation(line: 351, column: 10, scope: !2357)
!2373 = !DILocation(line: 351, column: 3, scope: !2357)
!2374 = distinct !DISubprogram(name: "wcstoumax", scope: !2331, file: !2331, line: 362, type: !2375, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2377)
!2375 = !DISubroutineType(types: !2376)
!2376 = !{!2348, !2360, !2364, !471}
!2377 = !{!2378, !2379, !2380}
!2378 = !DILocalVariable(name: "nptr", arg: 1, scope: !2374, file: !2331, line: 362, type: !2360)
!2379 = !DILocalVariable(name: "endptr", arg: 2, scope: !2374, file: !2331, line: 362, type: !2364)
!2380 = !DILocalVariable(name: "base", arg: 3, scope: !2374, file: !2331, line: 362, type: !471)
!2381 = !DILocation(line: 0, scope: !2374)
!2382 = !DILocation(line: 365, column: 10, scope: !2374)
!2383 = !DILocation(line: 365, column: 3, scope: !2374)
!2384 = distinct !DISubprogram(name: "stat", scope: !2385, file: !2385, line: 453, type: !2386, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2423)
!2385 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2386 = !DISubroutineType(types: !2387)
!2387 = !{!471, !476, !2388}
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2390, line: 46, size: 1152, elements: !2391)
!2390 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2391 = !{!2392, !2394, !2396, !2398, !2400, !2402, !2404, !2405, !2406, !2407, !2409, !2411, !2419, !2420, !2421}
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2389, file: !2390, line: 48, baseType: !2393, size: 64)
!2393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2143, line: 145, baseType: !620)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2389, file: !2390, line: 53, baseType: !2395, size: 64, offset: 64)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2143, line: 148, baseType: !620)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2389, file: !2390, line: 61, baseType: !2397, size: 64, offset: 128)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2143, line: 151, baseType: !620)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2389, file: !2390, line: 62, baseType: !2399, size: 32, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2143, line: 150, baseType: !7)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2389, file: !2390, line: 64, baseType: !2401, size: 32, offset: 224)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2143, line: 146, baseType: !7)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2389, file: !2390, line: 65, baseType: !2403, size: 32, offset: 256)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2143, line: 147, baseType: !7)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2389, file: !2390, line: 67, baseType: !471, size: 32, offset: 288)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2389, file: !2390, line: 69, baseType: !2393, size: 64, offset: 320)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2389, file: !2390, line: 74, baseType: !2142, size: 64, offset: 384)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2389, file: !2390, line: 78, baseType: !2408, size: 64, offset: 448)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2143, line: 174, baseType: !478)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2389, file: !2390, line: 80, baseType: !2410, size: 64, offset: 512)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2143, line: 179, baseType: !478)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2389, file: !2390, line: 91, baseType: !2412, size: 128, offset: 576)
!2412 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2413, line: 10, size: 128, elements: !2414)
!2413 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2414 = !{!2415, !2417}
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2412, file: !2413, line: 12, baseType: !2416, size: 64)
!2416 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2143, line: 160, baseType: !478)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2412, file: !2413, line: 16, baseType: !2418, size: 64, offset: 64)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2143, line: 196, baseType: !478)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2389, file: !2390, line: 92, baseType: !2412, size: 128, offset: 704)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2389, file: !2390, line: 93, baseType: !2412, size: 128, offset: 832)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2389, file: !2390, line: 106, baseType: !2422, size: 192, offset: 960)
!2422 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2418, size: 192, elements: !736)
!2423 = !{!2424, !2425}
!2424 = !DILocalVariable(name: "__path", arg: 1, scope: !2384, file: !2385, line: 453, type: !476)
!2425 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2384, file: !2385, line: 453, type: !2388)
!2426 = !DILocation(line: 0, scope: !2384)
!2427 = !DILocation(line: 455, column: 10, scope: !2384)
!2428 = !DILocation(line: 455, column: 3, scope: !2384)
!2429 = distinct !DISubprogram(name: "lstat", scope: !2385, file: !2385, line: 460, type: !2386, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2430)
!2430 = !{!2431, !2432}
!2431 = !DILocalVariable(name: "__path", arg: 1, scope: !2429, file: !2385, line: 460, type: !476)
!2432 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2429, file: !2385, line: 460, type: !2388)
!2433 = !DILocation(line: 0, scope: !2429)
!2434 = !DILocation(line: 462, column: 10, scope: !2429)
!2435 = !DILocation(line: 462, column: 3, scope: !2429)
!2436 = distinct !DISubprogram(name: "fstat", scope: !2385, file: !2385, line: 467, type: !2437, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2439)
!2437 = !DISubroutineType(types: !2438)
!2438 = !{!471, !471, !2388}
!2439 = !{!2440, !2441}
!2440 = !DILocalVariable(name: "__fd", arg: 1, scope: !2436, file: !2385, line: 467, type: !471)
!2441 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2436, file: !2385, line: 467, type: !2388)
!2442 = !DILocation(line: 0, scope: !2436)
!2443 = !DILocation(line: 469, column: 10, scope: !2436)
!2444 = !DILocation(line: 469, column: 3, scope: !2436)
!2445 = distinct !DISubprogram(name: "fstatat", scope: !2385, file: !2385, line: 474, type: !2446, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2448)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{!471, !471, !476, !2388, !471}
!2448 = !{!2449, !2450, !2451, !2452}
!2449 = !DILocalVariable(name: "__fd", arg: 1, scope: !2445, file: !2385, line: 474, type: !471)
!2450 = !DILocalVariable(name: "__filename", arg: 2, scope: !2445, file: !2385, line: 474, type: !476)
!2451 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2445, file: !2385, line: 474, type: !2388)
!2452 = !DILocalVariable(name: "__flag", arg: 4, scope: !2445, file: !2385, line: 474, type: !471)
!2453 = !DILocation(line: 0, scope: !2445)
!2454 = !DILocation(line: 477, column: 10, scope: !2445)
!2455 = !DILocation(line: 477, column: 3, scope: !2445)
!2456 = distinct !DISubprogram(name: "mknod", scope: !2385, file: !2385, line: 483, type: !2457, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2459)
!2457 = !DISubroutineType(types: !2458)
!2458 = !{!471, !476, !2399, !2393}
!2459 = !{!2460, !2461, !2462}
!2460 = !DILocalVariable(name: "__path", arg: 1, scope: !2456, file: !2385, line: 483, type: !476)
!2461 = !DILocalVariable(name: "__mode", arg: 2, scope: !2456, file: !2385, line: 483, type: !2399)
!2462 = !DILocalVariable(name: "__dev", arg: 3, scope: !2456, file: !2385, line: 483, type: !2393)
!2463 = !DILocation(line: 0, scope: !2456)
!2464 = !DILocation(line: 485, column: 10, scope: !2456)
!2465 = !DILocation(line: 485, column: 3, scope: !2456)
!2466 = distinct !DISubprogram(name: "mknodat", scope: !2385, file: !2385, line: 491, type: !2467, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2469)
!2467 = !DISubroutineType(types: !2468)
!2468 = !{!471, !471, !476, !2399, !2393}
!2469 = !{!2470, !2471, !2472, !2473}
!2470 = !DILocalVariable(name: "__fd", arg: 1, scope: !2466, file: !2385, line: 491, type: !471)
!2471 = !DILocalVariable(name: "__path", arg: 2, scope: !2466, file: !2385, line: 491, type: !476)
!2472 = !DILocalVariable(name: "__mode", arg: 3, scope: !2466, file: !2385, line: 491, type: !2399)
!2473 = !DILocalVariable(name: "__dev", arg: 4, scope: !2466, file: !2385, line: 491, type: !2393)
!2474 = !DILocation(line: 0, scope: !2466)
!2475 = !DILocation(line: 494, column: 10, scope: !2466)
!2476 = !DILocation(line: 494, column: 3, scope: !2466)
!2477 = distinct !DISubprogram(name: "stat64", scope: !2385, file: !2385, line: 502, type: !2478, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2500)
!2478 = !DISubroutineType(types: !2479)
!2479 = !{!471, !476, !2480}
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2390, line: 119, size: 1152, elements: !2482)
!2482 = !{!2483, !2484, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2496, !2497, !2498, !2499}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2481, file: !2390, line: 121, baseType: !2393, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2481, file: !2390, line: 123, baseType: !2485, size: 64, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2143, line: 149, baseType: !620)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2481, file: !2390, line: 124, baseType: !2397, size: 64, offset: 128)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2481, file: !2390, line: 125, baseType: !2399, size: 32, offset: 192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2481, file: !2390, line: 132, baseType: !2401, size: 32, offset: 224)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2481, file: !2390, line: 133, baseType: !2403, size: 32, offset: 256)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2481, file: !2390, line: 135, baseType: !471, size: 32, offset: 288)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2481, file: !2390, line: 136, baseType: !2393, size: 64, offset: 320)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2481, file: !2390, line: 137, baseType: !2142, size: 64, offset: 384)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2481, file: !2390, line: 143, baseType: !2408, size: 64, offset: 448)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2481, file: !2390, line: 144, baseType: !2495, size: 64, offset: 512)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2143, line: 180, baseType: !478)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2481, file: !2390, line: 152, baseType: !2412, size: 128, offset: 576)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2481, file: !2390, line: 153, baseType: !2412, size: 128, offset: 704)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2481, file: !2390, line: 154, baseType: !2412, size: 128, offset: 832)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2481, file: !2390, line: 164, baseType: !2422, size: 192, offset: 960)
!2500 = !{!2501, !2502}
!2501 = !DILocalVariable(name: "__path", arg: 1, scope: !2477, file: !2385, line: 502, type: !476)
!2502 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2477, file: !2385, line: 502, type: !2480)
!2503 = !DILocation(line: 0, scope: !2477)
!2504 = !DILocation(line: 504, column: 10, scope: !2477)
!2505 = !DILocation(line: 504, column: 3, scope: !2477)
!2506 = distinct !DISubprogram(name: "lstat64", scope: !2385, file: !2385, line: 509, type: !2478, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2507)
!2507 = !{!2508, !2509}
!2508 = !DILocalVariable(name: "__path", arg: 1, scope: !2506, file: !2385, line: 509, type: !476)
!2509 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2506, file: !2385, line: 509, type: !2480)
!2510 = !DILocation(line: 0, scope: !2506)
!2511 = !DILocation(line: 511, column: 10, scope: !2506)
!2512 = !DILocation(line: 511, column: 3, scope: !2506)
!2513 = distinct !DISubprogram(name: "fstat64", scope: !2385, file: !2385, line: 516, type: !2514, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2516)
!2514 = !DISubroutineType(types: !2515)
!2515 = !{!471, !471, !2480}
!2516 = !{!2517, !2518}
!2517 = !DILocalVariable(name: "__fd", arg: 1, scope: !2513, file: !2385, line: 516, type: !471)
!2518 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2513, file: !2385, line: 516, type: !2480)
!2519 = !DILocation(line: 0, scope: !2513)
!2520 = !DILocation(line: 518, column: 10, scope: !2513)
!2521 = !DILocation(line: 518, column: 3, scope: !2513)
!2522 = distinct !DISubprogram(name: "fstatat64", scope: !2385, file: !2385, line: 523, type: !2523, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2525)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!471, !471, !476, !2480, !471}
!2525 = !{!2526, !2527, !2528, !2529}
!2526 = !DILocalVariable(name: "__fd", arg: 1, scope: !2522, file: !2385, line: 523, type: !471)
!2527 = !DILocalVariable(name: "__filename", arg: 2, scope: !2522, file: !2385, line: 523, type: !476)
!2528 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2522, file: !2385, line: 523, type: !2480)
!2529 = !DILocalVariable(name: "__flag", arg: 4, scope: !2522, file: !2385, line: 523, type: !471)
!2530 = !DILocation(line: 0, scope: !2522)
!2531 = !DILocation(line: 526, column: 10, scope: !2522)
!2532 = !DILocation(line: 526, column: 3, scope: !2522)
!2533 = distinct !DISubprogram(name: "parallelize_loops", scope: !3, file: !3, line: 1882, type: !2534, scopeLine: 1883, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2536)
!2534 = !DISubroutineType(types: !2535)
!2535 = !{!470}
!2536 = !{!2537, !2538, !2539, !2540, !2556, !2562, !2563, !2564}
!2537 = !DILocalVariable(name: "n_threads", scope: !2533, file: !3, line: 1884, type: !7)
!2538 = !DILocalVariable(name: "changed", scope: !2533, file: !3, line: 1885, type: !470)
!2539 = !DILocalVariable(name: "loop", scope: !2533, file: !3, line: 1886, type: !1113)
!2540 = !DILocalVariable(name: "niter_desc", scope: !2533, file: !3, line: 1887, type: !2541)
!2541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_niter_desc", file: !867, line: 657, size: 640, elements: !2542)
!2542 = !{!2543, !2544, !2545, !2546, !2547, !2554, !2555}
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "assumptions", scope: !2541, file: !867, line: 659, baseType: !665, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "may_be_zero", scope: !2541, file: !867, line: 663, baseType: !665, size: 64, offset: 64)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "niter", scope: !2541, file: !867, line: 667, baseType: !665, size: 64, offset: 128)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2541, file: !867, line: 671, baseType: !713, size: 128, offset: 192)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !2541, file: !867, line: 679, baseType: !2548, size: 192, offset: 320)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "affine_iv", file: !867, line: 651, baseType: !2549)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !867, line: 644, size: 192, elements: !2550)
!2550 = !{!2551, !2552, !2553}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2549, file: !867, line: 647, baseType: !665, size: 64)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2549, file: !867, line: 647, baseType: !665, size: 64, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "no_overflow", scope: !2549, file: !867, line: 650, baseType: !470, size: 8, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !2541, file: !867, line: 680, baseType: !665, size: 64, offset: 512)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "cmp", scope: !2541, file: !867, line: 681, baseType: !183, size: 32, offset: 576)
!2556 = !DILocalVariable(name: "li", scope: !2533, file: !3, line: 1888, type: !2557)
!2557 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_iterator", file: !378, line: 515, baseType: !2558)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 508, size: 128, elements: !2559)
!2559 = !{!2560, !2561}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "to_visit", scope: !2558, file: !378, line: 511, baseType: !1842, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !2558, file: !378, line: 514, baseType: !7, size: 32, offset: 64)
!2562 = !DILocalVariable(name: "reduction_list", scope: !2533, file: !3, line: 1889, type: !959)
!2563 = !DILocalVariable(name: "estimated", scope: !2533, file: !3, line: 1890, type: !478)
!2564 = !DILocalVariable(name: "loop_loc", scope: !2533, file: !3, line: 1891, type: !2565)
!2565 = !DIDerivedType(tag: DW_TAG_typedef, name: "LOC", file: !2566, line: 27, baseType: !479)
!2566 = !DIFile(filename: "./tree-vectorizer.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2567 = !DILocation(line: 1884, column: 24, scope: !2533)
!2568 = !DILocation(line: 0, scope: !2533)
!2569 = !DILocation(line: 1886, column: 3, scope: !2533)
!2570 = !DILocation(line: 1887, column: 3, scope: !2533)
!2571 = !DILocation(line: 1888, column: 3, scope: !2533)
!2572 = !DILocation(line: 1894, column: 32, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 1894, column: 7)
!2574 = !DILocation(line: 1894, column: 38, scope: !2573)
!2575 = !DILocation(line: 1894, column: 7, scope: !2573)
!2576 = !DILocation(line: 1894, column: 7, scope: !2533)
!2577 = !DILocation(line: 1896, column: 7, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 1896, column: 7)
!2579 = !DILocation(line: 1896, column: 13, scope: !2578)
!2580 = !DILocation(line: 1896, column: 7, scope: !2533)
!2581 = !DILocation(line: 1899, column: 20, scope: !2533)
!2582 = !DILocation(line: 1901, column: 3, scope: !2533)
!2583 = !DILocation(line: 1903, column: 3, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 1903, column: 3)
!2585 = !DILocation(line: 0, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1943, column: 11)
!2587 = distinct !DILexicalBlock(scope: !2588, file: !3, line: 1904, column: 5)
!2588 = distinct !DILexicalBlock(scope: !2584, file: !3, line: 1903, column: 3)
!2589 = !DILocation(line: 0, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 1967, column: 6)
!2591 = distinct !DILexicalBlock(scope: !2592, file: !3, line: 1961, column: 7)
!2592 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1960, column: 11)
!2593 = !DILocation(line: 1885, column: 8, scope: !2533)
!2594 = !DILocation(line: 1903, column: 3, scope: !2588)
!2595 = !DILocation(line: 1905, column: 7, scope: !2587)
!2596 = !DILocation(line: 1906, column: 11, scope: !2597)
!2597 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1906, column: 11)
!2598 = !DILocation(line: 1906, column: 21, scope: !2597)
!2599 = !DILocation(line: 1906, column: 25, scope: !2597)
!2600 = !DILocation(line: 1906, column: 36, scope: !2597)
!2601 = !DILocation(line: 1906, column: 11, scope: !2587)
!2602 = !DILocation(line: 1908, column: 61, scope: !2603)
!2603 = distinct !DILexicalBlock(scope: !2597, file: !3, line: 1907, column: 7)
!2604 = !DILocation(line: 1908, column: 67, scope: !2603)
!2605 = !DILocation(line: 1908, column: 9, scope: !2603)
!2606 = !DILocation(line: 1909, column: 6, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2603, file: !3, line: 1909, column: 6)
!2608 = !DILocation(line: 1909, column: 12, scope: !2607)
!2609 = !DILocation(line: 0, scope: !2607)
!2610 = !DILocation(line: 1909, column: 6, scope: !2603)
!2611 = !DILocation(line: 1910, column: 4, scope: !2607)
!2612 = !DILocation(line: 1912, column: 4, scope: !2607)
!2613 = !DILocation(line: 1917, column: 11, scope: !2614)
!2614 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1917, column: 11)
!2615 = !DILocation(line: 1917, column: 37, scope: !2614)
!2616 = !DILocation(line: 1924, column: 29, scope: !2617)
!2617 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1924, column: 11)
!2618 = !DILocation(line: 1917, column: 41, scope: !2614)
!2619 = !DILocation(line: 1917, column: 47, scope: !2614)
!2620 = !DILocation(line: 1917, column: 11, scope: !2587)
!2621 = !DILocation(line: 1919, column: 13, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2623, file: !3, line: 1919, column: 13)
!2623 = distinct !DILexicalBlock(scope: !2614, file: !3, line: 1918, column: 7)
!2624 = !DILocation(line: 1919, column: 23, scope: !2622)
!2625 = !DILocation(line: 1919, column: 27, scope: !2622)
!2626 = !DILocation(line: 1919, column: 38, scope: !2622)
!2627 = !DILocation(line: 1919, column: 13, scope: !2623)
!2628 = !DILocation(line: 1920, column: 5, scope: !2622)
!2629 = !DILocation(line: 1924, column: 12, scope: !2617)
!2630 = !DILocation(line: 1924, column: 11, scope: !2587)
!2631 = !DILocation(line: 1927, column: 13, scope: !2632)
!2632 = distinct !DILexicalBlock(scope: !2633, file: !3, line: 1927, column: 13)
!2633 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 1925, column: 7)
!2634 = !DILocation(line: 1927, column: 23, scope: !2632)
!2635 = !DILocation(line: 1927, column: 27, scope: !2632)
!2636 = !DILocation(line: 1927, column: 38, scope: !2632)
!2637 = !DILocation(line: 1927, column: 13, scope: !2633)
!2638 = !DILocation(line: 1928, column: 4, scope: !2632)
!2639 = !DILocation(line: 1934, column: 27, scope: !2640)
!2640 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1934, column: 4)
!2641 = !DILocation(line: 1934, column: 5, scope: !2640)
!2642 = !DILocation(line: 1935, column: 4, scope: !2640)
!2643 = !DILocation(line: 1935, column: 46, scope: !2640)
!2644 = !DILocation(line: 1935, column: 7, scope: !2640)
!2645 = !DILocation(line: 1936, column: 4, scope: !2640)
!2646 = !DILocation(line: 1936, column: 29, scope: !2640)
!2647 = !DILocation(line: 1936, column: 8, scope: !2640)
!2648 = !DILocation(line: 1936, column: 36, scope: !2640)
!2649 = !DILocation(line: 1936, column: 41, scope: !2640)
!2650 = !DILocation(line: 1936, column: 47, scope: !2640)
!2651 = !DILocation(line: 1938, column: 4, scope: !2640)
!2652 = !DILocation(line: 1938, column: 34, scope: !2640)
!2653 = !DILocation(line: 1938, column: 7, scope: !2640)
!2654 = !DILocation(line: 1934, column: 4, scope: !2587)
!2655 = !DILocation(line: 1940, column: 50, scope: !2587)
!2656 = !DILocation(line: 1940, column: 19, scope: !2587)
!2657 = !DILocation(line: 1943, column: 12, scope: !2586)
!2658 = !DILocation(line: 1944, column: 4, scope: !2586)
!2659 = !DILocation(line: 1944, column: 19, scope: !2586)
!2660 = !DILocation(line: 1945, column: 7, scope: !2586)
!2661 = !DILocation(line: 1945, column: 20, scope: !2586)
!2662 = !DILocation(line: 1947, column: 8, scope: !2586)
!2663 = !DILocation(line: 1947, column: 42, scope: !2586)
!2664 = !DILocation(line: 1947, column: 11, scope: !2586)
!2665 = !DILocation(line: 1943, column: 11, scope: !2587)
!2666 = !DILocation(line: 1950, column: 32, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1950, column: 11)
!2668 = !DILocation(line: 1950, column: 12, scope: !2667)
!2669 = !DILocation(line: 1950, column: 11, scope: !2587)
!2670 = !DILocation(line: 1953, column: 39, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1953, column: 11)
!2672 = !DILocation(line: 1953, column: 12, scope: !2671)
!2673 = !DILocation(line: 1953, column: 11, scope: !2587)
!2674 = !DILocation(line: 1956, column: 12, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2587, file: !3, line: 1956, column: 11)
!2676 = !DILocation(line: 1956, column: 38, scope: !2675)
!2677 = !DILocation(line: 1956, column: 59, scope: !2675)
!2678 = !DILocation(line: 1956, column: 42, scope: !2675)
!2679 = !DILocation(line: 1956, column: 11, scope: !2587)
!2680 = !DILocation(line: 1960, column: 11, scope: !2592)
!2681 = !DILocation(line: 1960, column: 21, scope: !2592)
!2682 = !DILocation(line: 1960, column: 25, scope: !2592)
!2683 = !DILocation(line: 1960, column: 36, scope: !2592)
!2684 = !DILocation(line: 1960, column: 11, scope: !2587)
!2685 = !DILocation(line: 1962, column: 6, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2591, file: !3, line: 1962, column: 6)
!2687 = !DILocation(line: 1962, column: 12, scope: !2686)
!2688 = !DILocation(line: 0, scope: !2686)
!2689 = !DILocation(line: 1962, column: 6, scope: !2591)
!2690 = !DILocation(line: 1963, column: 4, scope: !2686)
!2691 = !DILocation(line: 1965, column: 4, scope: !2686)
!2692 = !DILocation(line: 1966, column: 33, scope: !2591)
!2693 = !DILocation(line: 1966, column: 13, scope: !2591)
!2694 = !DILocation(line: 1967, column: 15, scope: !2590)
!2695 = !DILocation(line: 1967, column: 6, scope: !2591)
!2696 = !DILocation(line: 1968, column: 13, scope: !2590)
!2697 = !DILocation(line: 1969, column: 6, scope: !2590)
!2698 = !DILocation(line: 1969, column: 27, scope: !2590)
!2699 = !DILocation(line: 1968, column: 4, scope: !2590)
!2700 = !DILocation(line: 1971, column: 26, scope: !2587)
!2701 = !DILocation(line: 1971, column: 7, scope: !2587)
!2702 = !DILocation(line: 1973, column: 7, scope: !2587)
!2703 = !DILocation(line: 1974, column: 7, scope: !2587)
!2704 = !DILocation(line: 1975, column: 7, scope: !2587)
!2705 = !DILocation(line: 1976, column: 7, scope: !2587)
!2706 = !DILocation(line: 1977, column: 5, scope: !2587)
!2707 = distinct !{!2707, !2583, !2708}
!2708 = !DILocation(line: 1977, column: 5, scope: !2584)
!2709 = !DILocation(line: 1979, column: 3, scope: !2533)
!2710 = !DILocation(line: 1980, column: 3, scope: !2533)
!2711 = !DILocation(line: 1985, column: 7, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2533, file: !3, line: 1985, column: 7)
!2713 = !DILocation(line: 1985, column: 7, scope: !2533)
!2714 = !DILocation(line: 1987, column: 27, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 1986, column: 5)
!2716 = !DILocation(line: 1987, column: 33, scope: !2715)
!2717 = !DILocation(line: 1987, column: 44, scope: !2715)
!2718 = !DILocation(line: 1987, column: 7, scope: !2715)
!2719 = !DILocation(line: 1988, column: 27, scope: !2715)
!2720 = !DILocation(line: 1988, column: 33, scope: !2715)
!2721 = !DILocation(line: 1988, column: 44, scope: !2715)
!2722 = !DILocation(line: 1988, column: 7, scope: !2715)
!2723 = !DILocation(line: 1989, column: 5, scope: !2715)
!2724 = !DILocation(line: 1992, column: 1, scope: !2533)
!2725 = distinct !DISubprogram(name: "parallelized_function_p", scope: !3, file: !3, line: 1215, type: !2726, scopeLine: 1216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2728)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{!470, !665}
!2728 = !{!2729}
!2729 = !DILocalVariable(name: "fn", arg: 1, scope: !2725, file: !3, line: 1215, type: !665)
!2730 = !DILocation(line: 0, scope: !2725)
!2731 = !DILocation(line: 1217, column: 8, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 1217, column: 7)
!2733 = !DILocation(line: 1217, column: 31, scope: !2732)
!2734 = !DILocation(line: 1217, column: 35, scope: !2732)
!2735 = !DILocation(line: 1217, column: 7, scope: !2725)
!2736 = !DILocation(line: 1220, column: 48, scope: !2725)
!2737 = !DILocation(line: 1220, column: 10, scope: !2725)
!2738 = !DILocation(line: 1220, column: 3, scope: !2725)
!2739 = !DILocation(line: 1221, column: 1, scope: !2725)
!2740 = distinct !DISubprogram(name: "reduction_info_hash", scope: !3, file: !3, line: 195, type: !967, scopeLine: 196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2741)
!2741 = !{!2742, !2743}
!2742 = !DILocalVariable(name: "aa", arg: 1, scope: !2740, file: !3, line: 195, type: !970)
!2743 = !DILocalVariable(name: "a", scope: !2740, file: !3, line: 197, type: !481)
!2744 = !DILocation(line: 0, scope: !2740)
!2745 = !DILocation(line: 199, column: 10, scope: !2740)
!2746 = !DILocation(line: 199, column: 32, scope: !2740)
!2747 = !DILocation(line: 199, column: 3, scope: !2740)
!2748 = distinct !DISubprogram(name: "reduction_info_eq", scope: !3, file: !3, line: 186, type: !975, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2749)
!2749 = !{!2750, !2751, !2752, !2753}
!2750 = !DILocalVariable(name: "aa", arg: 1, scope: !2748, file: !3, line: 186, type: !970)
!2751 = !DILocalVariable(name: "bb", arg: 2, scope: !2748, file: !3, line: 186, type: !970)
!2752 = !DILocalVariable(name: "a", scope: !2748, file: !3, line: 188, type: !481)
!2753 = !DILocalVariable(name: "b", scope: !2748, file: !3, line: 189, type: !481)
!2754 = !DILocation(line: 0, scope: !2748)
!2755 = !DILocation(line: 191, column: 14, scope: !2748)
!2756 = !DILocation(line: 191, column: 30, scope: !2748)
!2757 = !DILocation(line: 191, column: 24, scope: !2748)
!2758 = !DILocation(line: 191, column: 3, scope: !2748)
!2759 = distinct !DISubprogram(name: "fel_init", scope: !378, file: !378, line: 535, type: !2760, scopeLine: 536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2764)
!2760 = !DISubroutineType(types: !2761)
!2761 = !{null, !2762, !2763, !7}
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2557, size: 64)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!2764 = !{!2765, !2766, !2767, !2768, !2769, !2770}
!2765 = !DILocalVariable(name: "li", arg: 1, scope: !2759, file: !378, line: 535, type: !2762)
!2766 = !DILocalVariable(name: "loop", arg: 2, scope: !2759, file: !378, line: 535, type: !2763)
!2767 = !DILocalVariable(name: "flags", arg: 3, scope: !2759, file: !378, line: 535, type: !7)
!2768 = !DILocalVariable(name: "aloop", scope: !2759, file: !378, line: 537, type: !1113)
!2769 = !DILocalVariable(name: "i", scope: !2759, file: !378, line: 538, type: !7)
!2770 = !DILocalVariable(name: "mn", scope: !2759, file: !378, line: 539, type: !471)
!2771 = !DILocation(line: 0, scope: !2759)
!2772 = !DILocation(line: 541, column: 7, scope: !2759)
!2773 = !DILocation(line: 541, column: 11, scope: !2759)
!2774 = !DILocation(line: 542, column: 8, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2759, file: !378, line: 542, column: 7)
!2776 = !DILocation(line: 542, column: 7, scope: !2759)
!2777 = !DILocation(line: 544, column: 11, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2775, file: !378, line: 543, column: 5)
!2779 = !DILocation(line: 544, column: 20, scope: !2778)
!2780 = !DILocation(line: 545, column: 13, scope: !2778)
!2781 = !DILocation(line: 546, column: 7, scope: !2778)
!2782 = !DILocation(line: 549, column: 18, scope: !2759)
!2783 = !DILocation(line: 549, column: 7, scope: !2759)
!2784 = !DILocation(line: 549, column: 16, scope: !2759)
!2785 = !DILocation(line: 0, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2787, file: !378, line: 560, column: 12)
!2787 = distinct !DILexicalBlock(scope: !2759, file: !378, line: 552, column: 7)
!2788 = !DILocation(line: 590, column: 7, scope: !2789)
!2789 = distinct !DILexicalBlock(scope: !2786, file: !378, line: 587, column: 5)
!2790 = !DILocation(line: 592, column: 8, scope: !2791)
!2791 = distinct !DILexicalBlock(scope: !2792, file: !378, line: 592, column: 8)
!2792 = distinct !DILexicalBlock(scope: !2789, file: !378, line: 591, column: 2)
!2793 = !DILocation(line: 592, column: 15, scope: !2791)
!2794 = !DILocation(line: 592, column: 19, scope: !2791)
!2795 = !DILocation(line: 592, column: 8, scope: !2792)
!2796 = !DILocation(line: 593, column: 6, scope: !2791)
!2797 = !DILocation(line: 595, column: 15, scope: !2798)
!2798 = distinct !DILexicalBlock(scope: !2792, file: !378, line: 595, column: 8)
!2799 = !DILocation(line: 595, column: 21, scope: !2798)
!2800 = !DILocation(line: 595, column: 8, scope: !2792)
!2801 = !DILocation(line: 599, column: 8, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2798, file: !378, line: 598, column: 6)
!2803 = !DILocation(line: 596, column: 21, scope: !2798)
!2804 = !DILocation(line: 596, column: 6, scope: !2798)
!2805 = !DILocation(line: 599, column: 15, scope: !2802)
!2806 = !DILocation(line: 599, column: 21, scope: !2802)
!2807 = !DILocation(line: 599, column: 29, scope: !2802)
!2808 = !DILocation(line: 599, column: 39, scope: !2802)
!2809 = !DILocation(line: 599, column: 44, scope: !2802)
!2810 = !DILocation(line: 0, scope: !2802)
!2811 = !DILocation(line: 600, column: 11, scope: !2802)
!2812 = distinct !{!2812, !2801, !2813}
!2813 = !DILocation(line: 600, column: 28, scope: !2802)
!2814 = !DILocation(line: 601, column: 18, scope: !2815)
!2815 = distinct !DILexicalBlock(scope: !2802, file: !378, line: 601, column: 12)
!2816 = !DILocation(line: 601, column: 12, scope: !2802)
!2817 = !DILocation(line: 603, column: 23, scope: !2802)
!2818 = distinct !{!2818, !2788, !2819}
!2819 = !DILocation(line: 605, column: 2, scope: !2789)
!2820 = !DILocation(line: 608, column: 3, scope: !2759)
!2821 = !DILocation(line: 609, column: 1, scope: !2759)
!2822 = distinct !DISubprogram(name: "loop_has_blocks_with_irreducible_flag", scope: !3, file: !3, line: 299, type: !2823, scopeLine: 300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2825)
!2823 = !DISubroutineType(types: !2824)
!2824 = !{!470, !1113}
!2825 = !{!2826, !2827, !2828, !2829, !2830}
!2826 = !DILocalVariable(name: "loop", arg: 1, scope: !2822, file: !3, line: 299, type: !1113)
!2827 = !DILocalVariable(name: "i", scope: !2822, file: !3, line: 301, type: !7)
!2828 = !DILocalVariable(name: "bbs", scope: !2822, file: !3, line: 302, type: !1993)
!2829 = !DILocalVariable(name: "res", scope: !2822, file: !3, line: 303, type: !470)
!2830 = !DILabel(scope: !2822, name: "end", file: !3, line: 310)
!2831 = !DILocation(line: 0, scope: !2822)
!2832 = !DILocation(line: 302, column: 22, scope: !2822)
!2833 = !DILocation(line: 0, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2835, file: !3, line: 305, column: 3)
!2835 = distinct !DILexicalBlock(scope: !2822, file: !3, line: 305, column: 3)
!2836 = !DILocation(line: 305, column: 8, scope: !2835)
!2837 = !DILocation(line: 0, scope: !2835)
!2838 = !DILocation(line: 305, column: 17, scope: !2834)
!2839 = !DILocation(line: 305, column: 3, scope: !2835)
!2840 = !DILocation(line: 306, column: 9, scope: !2841)
!2841 = distinct !DILexicalBlock(scope: !2834, file: !3, line: 306, column: 9)
!2842 = !DILocation(line: 306, column: 17, scope: !2841)
!2843 = !DILocation(line: 306, column: 23, scope: !2841)
!2844 = !DILocation(line: 306, column: 9, scope: !2834)
!2845 = !DILocation(line: 305, column: 37, scope: !2834)
!2846 = !DILocation(line: 305, column: 3, scope: !2834)
!2847 = distinct !{!2847, !2839, !2848}
!2848 = !DILocation(line: 307, column: 12, scope: !2835)
!2849 = !DILocation(line: 310, column: 2, scope: !2822)
!2850 = !DILocation(line: 311, column: 9, scope: !2822)
!2851 = !DILocation(line: 311, column: 3, scope: !2822)
!2852 = !DILocation(line: 312, column: 3, scope: !2822)
!2853 = distinct !DISubprogram(name: "loop_has_vector_phi_nodes", scope: !3, file: !3, line: 1681, type: !2823, scopeLine: 1682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2854)
!2854 = !{!2855, !2856, !2857, !2858, !2859, !2860}
!2855 = !DILocalVariable(name: "loop", arg: 1, scope: !2853, file: !3, line: 1681, type: !1113)
!2856 = !DILocalVariable(name: "i", scope: !2853, file: !3, line: 1683, type: !7)
!2857 = !DILocalVariable(name: "bbs", scope: !2853, file: !3, line: 1684, type: !1993)
!2858 = !DILocalVariable(name: "gsi", scope: !2853, file: !3, line: 1685, type: !2006)
!2859 = !DILocalVariable(name: "res", scope: !2853, file: !3, line: 1686, type: !470)
!2860 = !DILabel(scope: !2853, name: "end", file: !3, line: 1694)
!2861 = !DILocation(line: 0, scope: !2853)
!2862 = !DILocation(line: 1684, column: 22, scope: !2853)
!2863 = !DILocation(line: 1685, column: 3, scope: !2853)
!2864 = !DILocation(line: 0, scope: !2865)
!2865 = distinct !DILexicalBlock(scope: !2866, file: !3, line: 1688, column: 3)
!2866 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 1688, column: 3)
!2867 = !DILocation(line: 0, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2865, file: !3, line: 1689, column: 5)
!2869 = !DILocation(line: 1688, column: 8, scope: !2866)
!2870 = !DILocation(line: 0, scope: !2866)
!2871 = !DILocation(line: 1688, column: 25, scope: !2865)
!2872 = !DILocation(line: 1688, column: 17, scope: !2865)
!2873 = !DILocation(line: 1688, column: 3, scope: !2866)
!2874 = !DILocation(line: 1689, column: 16, scope: !2868)
!2875 = !DILocation(line: 1689, column: 32, scope: !2868)
!2876 = !DILocation(line: 1689, column: 10, scope: !2868)
!2877 = !DILocation(line: 1689, column: 42, scope: !2878)
!2878 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 1689, column: 5)
!2879 = !DILocation(line: 1689, column: 41, scope: !2878)
!2880 = !DILocation(line: 1689, column: 5, scope: !2868)
!2881 = !DILocation(line: 1690, column: 11, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2878, file: !3, line: 1690, column: 11)
!2883 = !DILocation(line: 1690, column: 63, scope: !2882)
!2884 = !DILocation(line: 1690, column: 11, scope: !2878)
!2885 = !DILocation(line: 1689, column: 59, scope: !2878)
!2886 = !DILocation(line: 1689, column: 5, scope: !2878)
!2887 = distinct !{!2887, !2880, !2888}
!2888 = !DILocation(line: 1691, column: 7, scope: !2868)
!2889 = !DILocation(line: 1688, column: 37, scope: !2865)
!2890 = !DILocation(line: 1688, column: 3, scope: !2865)
!2891 = distinct !{!2891, !2873, !2892}
!2892 = !DILocation(line: 1691, column: 7, scope: !2866)
!2893 = !DILocation(line: 1695, column: 9, scope: !2853)
!2894 = !DILocation(line: 1694, column: 2, scope: !2853)
!2895 = !DILocation(line: 1695, column: 3, scope: !2853)
!2896 = !DILocation(line: 1697, column: 1, scope: !2853)
!2897 = !DILocation(line: 1696, column: 3, scope: !2853)
!2898 = distinct !DISubprogram(name: "try_get_loop_niter", scope: !3, file: !3, line: 1762, type: !2899, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2902)
!2899 = !DISubroutineType(types: !2900)
!2900 = !{!470, !1112, !2901}
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2541, size: 64)
!2902 = !{!2903, !2904, !2905}
!2903 = !DILocalVariable(name: "loop", arg: 1, scope: !2898, file: !3, line: 1762, type: !1112)
!2904 = !DILocalVariable(name: "niter", arg: 2, scope: !2898, file: !3, line: 1762, type: !2901)
!2905 = !DILocalVariable(name: "exit", scope: !2898, file: !3, line: 1764, type: !525)
!2906 = !DILocation(line: 0, scope: !2898)
!2907 = !DILocation(line: 1764, column: 15, scope: !2898)
!2908 = !DILocation(line: 1766, column: 3, scope: !2898)
!2909 = !DILocation(line: 1771, column: 8, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2898, file: !3, line: 1771, column: 7)
!2911 = !DILocation(line: 1771, column: 7, scope: !2898)
!2912 = !DILocation(line: 1773, column: 11, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2914, file: !3, line: 1773, column: 11)
!2914 = distinct !DILexicalBlock(scope: !2910, file: !3, line: 1772, column: 5)
!2915 = !DILocation(line: 1773, column: 21, scope: !2913)
!2916 = !DILocation(line: 1773, column: 25, scope: !2913)
!2917 = !DILocation(line: 1773, column: 36, scope: !2913)
!2918 = !DILocation(line: 1773, column: 11, scope: !2914)
!2919 = !DILocation(line: 1774, column: 2, scope: !2913)
!2920 = !DILocation(line: 1779, column: 1, scope: !2898)
!2921 = distinct !DISubprogram(name: "try_create_reduction_list", scope: !3, file: !3, line: 1785, type: !2922, scopeLine: 1786, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2924)
!2922 = !DISubroutineType(types: !2923)
!2923 = !{!470, !1112, !959}
!2924 = !{!2925, !2926, !2927, !2928, !2929, !2933, !2934, !2942, !2943, !2944, !2945, !2949, !2950, !2951}
!2925 = !DILocalVariable(name: "loop", arg: 1, scope: !2921, file: !3, line: 1785, type: !1112)
!2926 = !DILocalVariable(name: "reduction_list", arg: 2, scope: !2921, file: !3, line: 1785, type: !959)
!2927 = !DILocalVariable(name: "exit", scope: !2921, file: !3, line: 1787, type: !525)
!2928 = !DILocalVariable(name: "gsi", scope: !2921, file: !3, line: 1788, type: !2006)
!2929 = !DILocalVariable(name: "phi", scope: !2930, file: !3, line: 1797, type: !486)
!2930 = distinct !DILexicalBlock(scope: !2931, file: !3, line: 1796, column: 5)
!2931 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1795, column: 3)
!2932 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 1795, column: 3)
!2933 = !DILocalVariable(name: "red", scope: !2930, file: !3, line: 1798, type: !1855)
!2934 = !DILocalVariable(name: "imm_iter", scope: !2930, file: !3, line: 1799, type: !2935)
!2935 = !DIDerivedType(tag: DW_TAG_typedef, name: "imm_use_iterator", file: !867, line: 249, baseType: !2936)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "immediate_use_iterator_d", file: !867, line: 238, size: 448, elements: !2937)
!2937 = !{!2938, !2939, !2940, !2941}
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !2936, file: !867, line: 241, baseType: !1859, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "end_p", scope: !2936, file: !867, line: 243, baseType: !1859, size: 64, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "iter_node", scope: !2936, file: !867, line: 245, baseType: !1860, size: 256, offset: 128)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "next_imm_name", scope: !2936, file: !867, line: 248, baseType: !1859, size: 64, offset: 384)
!2942 = !DILocalVariable(name: "use_p", scope: !2930, file: !3, line: 1800, type: !1858)
!2943 = !DILocalVariable(name: "reduc_phi", scope: !2930, file: !3, line: 1801, type: !486)
!2944 = !DILocalVariable(name: "val", scope: !2930, file: !3, line: 1802, type: !665)
!2945 = !DILocalVariable(name: "phi", scope: !2946, file: !3, line: 1854, type: !486)
!2946 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 1853, column: 5)
!2947 = distinct !DILexicalBlock(scope: !2948, file: !3, line: 1852, column: 3)
!2948 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 1852, column: 3)
!2949 = !DILocalVariable(name: "def", scope: !2946, file: !3, line: 1855, type: !665)
!2950 = !DILocalVariable(name: "iv", scope: !2946, file: !3, line: 1856, type: !2548)
!2951 = !DILocalVariable(name: "red", scope: !2952, file: !3, line: 1860, type: !1855)
!2952 = distinct !DILexicalBlock(scope: !2953, file: !3, line: 1859, column: 2)
!2953 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 1858, column: 11)
!2954 = !DILocation(line: 0, scope: !2921)
!2955 = !DILocation(line: 1787, column: 15, scope: !2921)
!2956 = !DILocation(line: 1788, column: 3, scope: !2921)
!2957 = !DILocation(line: 1790, column: 3, scope: !2921)
!2958 = !DILocation(line: 1792, column: 3, scope: !2921)
!2959 = !DILocation(line: 1795, column: 14, scope: !2932)
!2960 = !DILocation(line: 1795, column: 36, scope: !2932)
!2961 = !DILocation(line: 0, scope: !2930)
!2962 = !DILocation(line: 1795, column: 8, scope: !2932)
!2963 = !DILocation(line: 1795, column: 44, scope: !2931)
!2964 = !DILocation(line: 1795, column: 43, scope: !2931)
!2965 = !DILocation(line: 1795, column: 3, scope: !2932)
!2966 = !DILocation(line: 1797, column: 20, scope: !2930)
!2967 = !DILocation(line: 1799, column: 7, scope: !2930)
!2968 = !DILocation(line: 1802, column: 18, scope: !2930)
!2969 = !DILocation(line: 1804, column: 11, scope: !2970)
!2970 = distinct !DILexicalBlock(scope: !2930, file: !3, line: 1804, column: 11)
!2971 = !DILocation(line: 1804, column: 11, scope: !2930)
!2972 = !DILocation(line: 1806, column: 8, scope: !2973)
!2973 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 1806, column: 8)
!2974 = distinct !DILexicalBlock(scope: !2970, file: !3, line: 1805, column: 2)
!2975 = !DILocation(line: 1806, column: 18, scope: !2973)
!2976 = !DILocation(line: 1806, column: 22, scope: !2973)
!2977 = !DILocation(line: 1806, column: 33, scope: !2973)
!2978 = !DILocation(line: 1806, column: 8, scope: !2974)
!2979 = !DILocation(line: 1808, column: 8, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2973, file: !3, line: 1807, column: 6)
!2981 = !DILocation(line: 1809, column: 27, scope: !2980)
!2982 = !DILocation(line: 1809, column: 8, scope: !2980)
!2983 = !DILocation(line: 1810, column: 17, scope: !2980)
!2984 = !DILocation(line: 1810, column: 8, scope: !2980)
!2985 = !DILocation(line: 1811, column: 28, scope: !2980)
!2986 = !DILocation(line: 1811, column: 8, scope: !2980)
!2987 = !DILocation(line: 1812, column: 17, scope: !2980)
!2988 = !DILocation(line: 1812, column: 8, scope: !2980)
!2989 = !DILocation(line: 1813, column: 17, scope: !2980)
!2990 = !DILocation(line: 1813, column: 8, scope: !2980)
!2991 = !DILocation(line: 1815, column: 6, scope: !2980)
!2992 = !DILocation(line: 1816, column: 8, scope: !2993)
!2993 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 1816, column: 8)
!2994 = !DILocation(line: 1816, column: 39, scope: !2993)
!2995 = !DILocation(line: 1816, column: 8, scope: !2974)
!2996 = !DILocation(line: 1818, column: 12, scope: !2997)
!2997 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 1818, column: 12)
!2998 = distinct !DILexicalBlock(scope: !2993, file: !3, line: 1817, column: 6)
!2999 = !DILocation(line: 1818, column: 22, scope: !2997)
!3000 = !DILocation(line: 1818, column: 26, scope: !2997)
!3001 = !DILocation(line: 1818, column: 37, scope: !2997)
!3002 = !DILocation(line: 1818, column: 12, scope: !2998)
!3003 = !DILocation(line: 1819, column: 3, scope: !2997)
!3004 = !DILocation(line: 1824, column: 4, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 1824, column: 4)
!3006 = !DILocation(line: 0, scope: !3005)
!3007 = !DILocation(line: 1824, column: 4, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 1824, column: 4)
!3009 = !DILocation(line: 1826, column: 52, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3011, file: !3, line: 1826, column: 12)
!3011 = distinct !DILexicalBlock(scope: !3008, file: !3, line: 1825, column: 6)
!3012 = !DILocation(line: 1826, column: 41, scope: !3010)
!3013 = !DILocation(line: 1826, column: 12, scope: !3010)
!3014 = !DILocation(line: 1826, column: 12, scope: !3011)
!3015 = !DILocation(line: 1828, column: 17, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 1827, column: 3)
!3017 = !DILocation(line: 1829, column: 5, scope: !3016)
!3018 = distinct !{!3018, !3004, !3019}
!3019 = !DILocation(line: 1831, column: 6, scope: !3005)
!3020 = !DILocation(line: 1832, column: 10, scope: !2974)
!3021 = !DILocation(line: 0, scope: !2974)
!3022 = !DILocation(line: 1833, column: 12, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 1833, column: 8)
!3024 = !DILocation(line: 1833, column: 8, scope: !2974)
!3025 = !DILocation(line: 1835, column: 22, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 1835, column: 12)
!3027 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 1834, column: 6)
!3028 = !DILocation(line: 1835, column: 26, scope: !3026)
!3029 = !DILocation(line: 1835, column: 37, scope: !3026)
!3030 = !DILocation(line: 1835, column: 12, scope: !3027)
!3031 = !DILocation(line: 1836, column: 3, scope: !3026)
!3032 = !DILocation(line: 1840, column: 18, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !2974, file: !3, line: 1840, column: 8)
!3034 = !DILocation(line: 1840, column: 22, scope: !3033)
!3035 = !DILocation(line: 1840, column: 33, scope: !3033)
!3036 = !DILocation(line: 1840, column: 8, scope: !2974)
!3037 = !DILocation(line: 1842, column: 8, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 1841, column: 6)
!3039 = !DILocation(line: 1843, column: 27, scope: !3038)
!3040 = !DILocation(line: 1843, column: 43, scope: !3038)
!3041 = !DILocation(line: 1843, column: 8, scope: !3038)
!3042 = !DILocation(line: 1844, column: 17, scope: !3038)
!3043 = !DILocation(line: 1844, column: 8, scope: !3038)
!3044 = !DILocation(line: 1845, column: 27, scope: !3038)
!3045 = !DILocation(line: 1845, column: 43, scope: !3038)
!3046 = !DILocation(line: 1845, column: 8, scope: !3038)
!3047 = !DILocation(line: 1846, column: 6, scope: !3038)
!3048 = !DILocation(line: 1848, column: 5, scope: !2931)
!3049 = !DILocation(line: 1795, column: 61, scope: !2931)
!3050 = !DILocation(line: 1795, column: 3, scope: !2931)
!3051 = distinct !{!3051, !2965, !3052}
!3052 = !DILocation(line: 1848, column: 5, scope: !2932)
!3053 = !DILocation(line: 1852, column: 14, scope: !2948)
!3054 = !DILocation(line: 1852, column: 36, scope: !2948)
!3055 = !DILocation(line: 0, scope: !2946)
!3056 = !DILocation(line: 1852, column: 8, scope: !2948)
!3057 = !DILocation(line: 1852, column: 46, scope: !2947)
!3058 = !DILocation(line: 1852, column: 45, scope: !2947)
!3059 = !DILocation(line: 1852, column: 3, scope: !2948)
!3060 = !DILocation(line: 1854, column: 20, scope: !2946)
!3061 = !DILocation(line: 1855, column: 18, scope: !2946)
!3062 = !DILocation(line: 1856, column: 7, scope: !2946)
!3063 = !DILocation(line: 1858, column: 11, scope: !2953)
!3064 = !DILocation(line: 1858, column: 31, scope: !2953)
!3065 = !DILocation(line: 1858, column: 35, scope: !2953)
!3066 = !DILocation(line: 1858, column: 11, scope: !2946)
!3067 = !DILocation(line: 1862, column: 10, scope: !2952)
!3068 = !DILocation(line: 0, scope: !2952)
!3069 = !DILocation(line: 1863, column: 12, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !2952, file: !3, line: 1863, column: 8)
!3071 = !DILocation(line: 1863, column: 8, scope: !2952)
!3072 = !DILocation(line: 1865, column: 12, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3074, file: !3, line: 1865, column: 12)
!3074 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1864, column: 6)
!3075 = !DILocation(line: 1865, column: 22, scope: !3073)
!3076 = !DILocation(line: 1865, column: 26, scope: !3073)
!3077 = !DILocation(line: 1865, column: 37, scope: !3073)
!3078 = !DILocation(line: 1865, column: 12, scope: !3074)
!3079 = !DILocation(line: 1866, column: 3, scope: !3073)
!3080 = !DILocation(line: 1871, column: 5, scope: !2947)
!3081 = !DILocation(line: 1852, column: 63, scope: !2947)
!3082 = !DILocation(line: 1852, column: 3, scope: !2947)
!3083 = distinct !{!3083, !3059, !3084}
!3084 = !DILocation(line: 1871, column: 5, scope: !2948)
!3085 = !DILocation(line: 1875, column: 1, scope: !2921)
!3086 = distinct !DISubprogram(name: "loop_parallel_p", scope: !3, file: !3, line: 251, type: !2823, scopeLine: 252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3087)
!3087 = !{!3088, !3089, !3090, !3091, !3102}
!3088 = !DILocalVariable(name: "loop", arg: 1, scope: !3086, file: !3, line: 251, type: !1113)
!3089 = !DILocalVariable(name: "dependence_relations", scope: !3086, file: !3, line: 253, type: !1933)
!3090 = !DILocalVariable(name: "datarefs", scope: !3086, file: !3, line: 254, type: !1861)
!3091 = !DILocalVariable(name: "trans", scope: !3086, file: !3, line: 255, type: !3092)
!3092 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_trans_matrix", file: !1920, line: 56, baseType: !3093)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lambda_trans_matrix_s", file: !1920, line: 50, size: 192, elements: !3095)
!3095 = !{!3096, !3099, !3100, !3101}
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !3094, file: !1920, line: 52, baseType: !3097, size: 64)
!3097 = !DIDerivedType(tag: DW_TAG_typedef, name: "lambda_matrix", file: !1920, line: 42, baseType: !3098)
!3098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "rowsize", scope: !3094, file: !1920, line: 53, baseType: !471, size: 32, offset: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "colsize", scope: !3094, file: !1920, line: 54, baseType: !471, size: 32, offset: 96)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "denominator", scope: !3094, file: !1920, line: 55, baseType: !471, size: 32, offset: 128)
!3102 = !DILocalVariable(name: "ret", scope: !3086, file: !3, line: 256, type: !470)
!3103 = !DILocation(line: 0, scope: !3086)
!3104 = !DILocation(line: 253, column: 3, scope: !3086)
!3105 = !DILocation(line: 254, column: 3, scope: !3086)
!3106 = !DILocation(line: 258, column: 7, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 258, column: 7)
!3108 = !DILocation(line: 258, column: 17, scope: !3107)
!3109 = !DILocation(line: 258, column: 21, scope: !3107)
!3110 = !DILocation(line: 258, column: 32, scope: !3107)
!3111 = !DILocation(line: 258, column: 7, scope: !3086)
!3112 = !DILocation(line: 260, column: 56, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3107, file: !3, line: 259, column: 3)
!3114 = !DILocation(line: 260, column: 5, scope: !3113)
!3115 = !DILocation(line: 261, column: 16, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !3113, file: !3, line: 261, column: 9)
!3117 = !DILocation(line: 261, column: 10, scope: !3116)
!3118 = !DILocation(line: 0, scope: !3116)
!3119 = !DILocation(line: 261, column: 9, scope: !3113)
!3120 = !DILocation(line: 262, column: 7, scope: !3116)
!3121 = !DILocation(line: 264, column: 7, scope: !3116)
!3122 = !DILocation(line: 269, column: 14, scope: !3086)
!3123 = !DILocation(line: 269, column: 12, scope: !3086)
!3124 = !DILocation(line: 270, column: 26, scope: !3086)
!3125 = !DILocation(line: 270, column: 24, scope: !3086)
!3126 = !DILocation(line: 271, column: 3, scope: !3086)
!3127 = !DILocation(line: 273, column: 7, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 273, column: 7)
!3129 = !DILocation(line: 273, column: 17, scope: !3128)
!3130 = !DILocation(line: 273, column: 21, scope: !3128)
!3131 = !DILocation(line: 273, column: 32, scope: !3128)
!3132 = !DILocation(line: 273, column: 7, scope: !3086)
!3133 = !DILocation(line: 274, column: 48, scope: !3128)
!3134 = !DILocation(line: 274, column: 5, scope: !3128)
!3135 = !DILocation(line: 276, column: 11, scope: !3086)
!3136 = !DILocation(line: 277, column: 3, scope: !3086)
!3137 = !DILocation(line: 277, column: 28, scope: !3086)
!3138 = !DILocation(line: 279, column: 43, scope: !3139)
!3139 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 279, column: 7)
!3140 = !DILocation(line: 279, column: 7, scope: !3139)
!3141 = !DILocation(line: 0, scope: !3139)
!3142 = !DILocation(line: 279, column: 7, scope: !3086)
!3143 = !DILocation(line: 282, column: 21, scope: !3144)
!3144 = distinct !DILexicalBlock(scope: !3145, file: !3, line: 282, column: 11)
!3145 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 280, column: 5)
!3146 = !DILocation(line: 282, column: 25, scope: !3144)
!3147 = !DILocation(line: 282, column: 36, scope: !3144)
!3148 = !DILocation(line: 282, column: 11, scope: !3145)
!3149 = !DILocation(line: 283, column: 2, scope: !3144)
!3150 = !DILocation(line: 285, column: 22, scope: !3151)
!3151 = distinct !DILexicalBlock(scope: !3139, file: !3, line: 285, column: 12)
!3152 = !DILocation(line: 285, column: 26, scope: !3151)
!3153 = !DILocation(line: 285, column: 37, scope: !3151)
!3154 = !DILocation(line: 285, column: 12, scope: !3139)
!3155 = !DILocation(line: 286, column: 5, scope: !3151)
!3156 = !DILocation(line: 289, column: 30, scope: !3086)
!3157 = !DILocation(line: 289, column: 3, scope: !3086)
!3158 = !DILocation(line: 290, column: 19, scope: !3086)
!3159 = !DILocation(line: 290, column: 3, scope: !3086)
!3160 = !DILocation(line: 293, column: 1, scope: !3086)
!3161 = !DILocation(line: 292, column: 3, scope: !3086)
!3162 = distinct !DISubprogram(name: "gen_parallel_loop", scope: !3, file: !3, line: 1532, type: !3163, scopeLine: 1534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3165)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{null, !1113, !959, !7, !2901}
!3165 = !{!3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181}
!3166 = !DILocalVariable(name: "loop", arg: 1, scope: !3162, file: !3, line: 1532, type: !1113)
!3167 = !DILocalVariable(name: "reduction_list", arg: 2, scope: !3162, file: !3, line: 1532, type: !959)
!3168 = !DILocalVariable(name: "n_threads", arg: 3, scope: !3162, file: !3, line: 1533, type: !7)
!3169 = !DILocalVariable(name: "niter", arg: 4, scope: !3162, file: !3, line: 1533, type: !2901)
!3170 = !DILocalVariable(name: "li", scope: !3162, file: !3, line: 1535, type: !2557)
!3171 = !DILocalVariable(name: "many_iterations_cond", scope: !3162, file: !3, line: 1536, type: !665)
!3172 = !DILocalVariable(name: "type", scope: !3162, file: !3, line: 1536, type: !665)
!3173 = !DILocalVariable(name: "nit", scope: !3162, file: !3, line: 1536, type: !665)
!3174 = !DILocalVariable(name: "arg_struct", scope: !3162, file: !3, line: 1537, type: !665)
!3175 = !DILocalVariable(name: "new_arg_struct", scope: !3162, file: !3, line: 1537, type: !665)
!3176 = !DILocalVariable(name: "stmts", scope: !3162, file: !3, line: 1538, type: !535)
!3177 = !DILocalVariable(name: "parallel_head", scope: !3162, file: !3, line: 1539, type: !927)
!3178 = !DILocalVariable(name: "entry", scope: !3162, file: !3, line: 1540, type: !525)
!3179 = !DILocalVariable(name: "exit", scope: !3162, file: !3, line: 1540, type: !525)
!3180 = !DILocalVariable(name: "clsn_data", scope: !3162, file: !3, line: 1541, type: !2039)
!3181 = !DILocalVariable(name: "prob", scope: !3162, file: !3, line: 1542, type: !7)
!3182 = !DILocation(line: 0, scope: !3162)
!3183 = !DILocation(line: 1535, column: 3, scope: !3162)
!3184 = !DILocation(line: 1536, column: 3, scope: !3162)
!3185 = !DILocation(line: 1537, column: 3, scope: !3162)
!3186 = !DILocation(line: 1538, column: 3, scope: !3162)
!3187 = !DILocation(line: 1541, column: 3, scope: !3162)
!3188 = !DILocation(line: 1597, column: 10, scope: !3162)
!3189 = !DILocation(line: 1598, column: 52, scope: !3162)
!3190 = !DILocation(line: 1598, column: 31, scope: !3162)
!3191 = !DILocation(line: 1598, column: 9, scope: !3162)
!3192 = !DILocation(line: 1598, column: 7, scope: !3162)
!3193 = !DILocation(line: 1600, column: 7, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1600, column: 7)
!3195 = !DILocation(line: 1600, column: 7, scope: !3162)
!3196 = !DILocation(line: 1601, column: 39, scope: !3194)
!3197 = !DILocation(line: 1601, column: 67, scope: !3194)
!3198 = !DILocation(line: 1601, column: 5, scope: !3194)
!3199 = !DILocation(line: 1604, column: 5, scope: !3162)
!3200 = !DILocation(line: 1607, column: 7, scope: !3162)
!3201 = !DILocation(line: 1611, column: 7, scope: !3162)
!3202 = !DILocation(line: 1612, column: 7, scope: !3203)
!3203 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1612, column: 7)
!3204 = !DILocation(line: 1612, column: 7, scope: !3162)
!3205 = !DILocation(line: 1613, column: 60, scope: !3203)
!3206 = !DILocation(line: 1613, column: 39, scope: !3203)
!3207 = !DILocation(line: 1613, column: 67, scope: !3203)
!3208 = !DILocation(line: 1613, column: 5, scope: !3203)
!3209 = !DILocation(line: 1614, column: 8, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1614, column: 7)
!3211 = !DILocation(line: 1614, column: 7, scope: !3162)
!3212 = !DILocation(line: 1617, column: 4, scope: !3213)
!3213 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 1615, column: 5)
!3214 = !DILocation(line: 1619, column: 11, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3213, file: !3, line: 1619, column: 11)
!3216 = !DILocation(line: 1619, column: 11, scope: !3213)
!3217 = !DILocation(line: 1620, column: 57, scope: !3215)
!3218 = !DILocation(line: 1620, column: 36, scope: !3215)
!3219 = !DILocation(line: 1620, column: 64, scope: !3215)
!3220 = !DILocation(line: 1620, column: 2, scope: !3215)
!3221 = !DILocation(line: 1623, column: 3, scope: !3162)
!3222 = !DILocation(line: 1627, column: 17, scope: !3162)
!3223 = !DILocation(line: 1627, column: 23, scope: !3162)
!3224 = !DILocation(line: 1627, column: 3, scope: !3162)
!3225 = !DILocation(line: 1629, column: 3, scope: !3162)
!3226 = !DILocation(line: 1630, column: 3, scope: !3162)
!3227 = !DILocation(line: 1633, column: 3, scope: !3162)
!3228 = !DILocation(line: 1636, column: 55, scope: !3162)
!3229 = !DILocation(line: 1636, column: 3, scope: !3162)
!3230 = !DILocation(line: 1639, column: 7, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1639, column: 7)
!3232 = !DILocation(line: 1639, column: 38, scope: !3231)
!3233 = !DILocation(line: 1639, column: 7, scope: !3162)
!3234 = !DILocation(line: 1640, column: 5, scope: !3231)
!3235 = !DILocation(line: 1643, column: 3, scope: !3162)
!3236 = !DILocation(line: 1644, column: 32, scope: !3162)
!3237 = !DILocation(line: 1654, column: 41, scope: !3162)
!3238 = !DILocation(line: 1644, column: 11, scope: !3162)
!3239 = !DILocation(line: 1645, column: 10, scope: !3162)
!3240 = !DILocation(line: 1647, column: 3, scope: !3162)
!3241 = !DILocation(line: 1650, column: 3, scope: !3162)
!3242 = !DILocation(line: 1654, column: 47, scope: !3162)
!3243 = !DILocation(line: 1654, column: 66, scope: !3162)
!3244 = !DILocation(line: 1655, column: 6, scope: !3162)
!3245 = !DILocation(line: 1654, column: 19, scope: !3162)
!3246 = !DILocation(line: 1656, column: 7, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1656, column: 7)
!3248 = !DILocation(line: 1656, column: 38, scope: !3247)
!3249 = !DILocation(line: 1656, column: 7, scope: !3162)
!3250 = !DILocation(line: 1657, column: 5, scope: !3247)
!3251 = !DILocation(line: 1663, column: 21, scope: !3162)
!3252 = !DILocation(line: 1659, column: 3, scope: !3162)
!3253 = !DILocation(line: 1663, column: 3, scope: !3162)
!3254 = !DILocation(line: 1667, column: 3, scope: !3255)
!3255 = distinct !DILexicalBlock(scope: !3162, file: !3, line: 1667, column: 3)
!3256 = !DILocation(line: 1667, column: 3, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3255, file: !3, line: 1667, column: 3)
!3258 = !DILocation(line: 1668, column: 5, scope: !3257)
!3259 = distinct !{!3259, !3254, !3260}
!3260 = !DILocation(line: 1668, column: 52, scope: !3255)
!3261 = !DILocation(line: 1675, column: 3, scope: !3162)
!3262 = !DILocation(line: 1676, column: 1, scope: !3162)
!3263 = distinct !DISubprogram(name: "fel_next", scope: !378, file: !378, line: 518, type: !3264, scopeLine: 519, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3266)
!3264 = !DISubroutineType(types: !3265)
!3265 = !{null, !2762, !2763}
!3266 = !{!3267, !3268, !3269}
!3267 = !DILocalVariable(name: "li", arg: 1, scope: !3263, file: !378, line: 518, type: !2762)
!3268 = !DILocalVariable(name: "loop", arg: 2, scope: !3263, file: !378, line: 518, type: !2763)
!3269 = !DILocalVariable(name: "anum", scope: !3263, file: !378, line: 520, type: !471)
!3270 = !DILocation(line: 0, scope: !3263)
!3271 = !DILocation(line: 520, column: 3, scope: !3263)
!3272 = !DILocation(line: 522, column: 3, scope: !3263)
!3273 = !DILocation(line: 522, column: 10, scope: !3263)
!3274 = !DILocation(line: 524, column: 14, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3263, file: !378, line: 523, column: 5)
!3276 = !DILocation(line: 525, column: 25, scope: !3275)
!3277 = !DILocation(line: 525, column: 15, scope: !3275)
!3278 = !DILocation(line: 525, column: 13, scope: !3275)
!3279 = !DILocation(line: 526, column: 11, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3275, file: !378, line: 526, column: 11)
!3281 = !DILocation(line: 526, column: 11, scope: !3275)
!3282 = distinct !{!3282, !3272, !3283}
!3283 = !DILocation(line: 528, column: 5, scope: !3263)
!3284 = !DILocation(line: 530, column: 3, scope: !3263)
!3285 = !DILocation(line: 531, column: 9, scope: !3263)
!3286 = !DILocation(line: 532, column: 1, scope: !3263)
!3287 = distinct !DISubprogram(name: "VEC_int_heap_alloc", scope: !1844, file: !1844, line: 32, type: !3288, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3290)
!3288 = !DISubroutineType(types: !3289)
!3289 = !{!1842, !471}
!3290 = !{!3291}
!3291 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3287, file: !1844, line: 32, type: !471)
!3292 = !DILocation(line: 0, scope: !3287)
!3293 = !DILocation(line: 32, column: 1, scope: !3287)
!3294 = distinct !DISubprogram(name: "number_of_loops", scope: !378, file: !378, line: 459, type: !3295, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2109)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!7}
!3297 = !DILocation(line: 461, column: 8, scope: !3298)
!3298 = distinct !DILexicalBlock(scope: !3294, file: !378, line: 461, column: 7)
!3299 = !DILocation(line: 461, column: 7, scope: !3294)
!3300 = !DILocation(line: 464, column: 10, scope: !3294)
!3301 = !DILocation(line: 464, column: 3, scope: !3294)
!3302 = !DILocation(line: 0, scope: !3294)
!3303 = !DILocation(line: 465, column: 1, scope: !3294)
!3304 = distinct !DISubprogram(name: "VEC_loop_p_base_iterate", scope: !378, file: !378, line: 85, type: !3305, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3309)
!3305 = !DISubroutineType(types: !3306)
!3306 = !{!471, !3307, !7, !2763}
!3307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3308, size: 64)
!3308 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1105)
!3309 = !{!3310, !3311, !3312}
!3310 = !DILocalVariable(name: "vec_", arg: 1, scope: !3304, file: !378, line: 85, type: !3307)
!3311 = !DILocalVariable(name: "ix_", arg: 2, scope: !3304, file: !378, line: 85, type: !7)
!3312 = !DILocalVariable(name: "ptr", arg: 3, scope: !3304, file: !378, line: 85, type: !2763)
!3313 = !DILocation(line: 0, scope: !3304)
!3314 = distinct !DISubprogram(name: "VEC_int_base_quick_push", scope: !1844, file: !1844, line: 31, type: !3315, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3318)
!3315 = !DISubroutineType(types: !3316)
!3316 = !{!1932, !3317, !471}
!3317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!3318 = !{!3319, !3320, !3321}
!3319 = !DILocalVariable(name: "vec_", arg: 1, scope: !3314, file: !1844, line: 31, type: !3317)
!3320 = !DILocalVariable(name: "obj_", arg: 2, scope: !3314, file: !1844, line: 31, type: !471)
!3321 = !DILocalVariable(name: "slot_", scope: !3314, file: !1844, line: 31, type: !1932)
!3322 = !DILocation(line: 0, scope: !3314)
!3323 = !DILocation(line: 31, column: 1, scope: !3314)
!3324 = distinct !DISubprogram(name: "loop_outer", scope: !378, file: !378, line: 434, type: !3325, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3327)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!1113, !2045}
!3327 = !{!3328, !3329}
!3328 = !DILocalVariable(name: "loop", arg: 1, scope: !3324, file: !378, line: 434, type: !2045)
!3329 = !DILocalVariable(name: "n", scope: !3324, file: !378, line: 436, type: !7)
!3330 = !DILocation(line: 0, scope: !3324)
!3331 = !DILocation(line: 436, column: 16, scope: !3324)
!3332 = !DILocation(line: 438, column: 9, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3324, file: !378, line: 438, column: 7)
!3334 = !DILocation(line: 438, column: 7, scope: !3324)
!3335 = !DILocation(line: 441, column: 10, scope: !3324)
!3336 = !DILocation(line: 441, column: 3, scope: !3324)
!3337 = !DILocation(line: 442, column: 1, scope: !3324)
!3338 = distinct !DISubprogram(name: "VEC_loop_p_base_length", scope: !378, file: !378, line: 85, type: !3339, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3341)
!3339 = !DISubroutineType(types: !3340)
!3340 = !{!7, !3307}
!3341 = !{!3342}
!3342 = !DILocalVariable(name: "vec_", arg: 1, scope: !3338, file: !378, line: 85, type: !3307)
!3343 = !DILocation(line: 0, scope: !3338)
!3344 = !DILocation(line: 85, column: 1, scope: !3338)
!3345 = distinct !DISubprogram(name: "VEC_loop_p_base_index", scope: !378, file: !378, line: 85, type: !3346, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3348)
!3346 = !DISubroutineType(types: !3347)
!3347 = !{!1112, !3307, !7}
!3348 = !{!3349, !3350}
!3349 = !DILocalVariable(name: "vec_", arg: 1, scope: !3345, file: !378, line: 85, type: !3307)
!3350 = !DILocalVariable(name: "ix_", arg: 2, scope: !3345, file: !378, line: 85, type: !7)
!3351 = !DILocation(line: 0, scope: !3345)
!3352 = !DILocation(line: 85, column: 1, scope: !3345)
!3353 = distinct !DISubprogram(name: "gsi_end_p", scope: !391, file: !391, line: 4467, type: !3354, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3356)
!3354 = !DISubroutineType(types: !3355)
!3355 = !{!470, !2006}
!3356 = !{!3357}
!3357 = !DILocalVariable(name: "i", arg: 1, scope: !3353, file: !391, line: 4467, type: !2006)
!3358 = !DILocation(line: 4467, column: 33, scope: !3353)
!3359 = !DILocation(line: 4469, column: 12, scope: !3353)
!3360 = !DILocation(line: 4469, column: 16, scope: !3353)
!3361 = !DILocation(line: 4469, column: 10, scope: !3353)
!3362 = !DILocation(line: 4469, column: 3, scope: !3353)
!3363 = distinct !DISubprogram(name: "get_def_from_ptr", scope: !3364, file: !3364, line: 434, type: !3365, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3367)
!3364 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3365 = !DISubroutineType(types: !3366)
!3366 = !{!665, !2036}
!3367 = !{!3368}
!3368 = !DILocalVariable(name: "def", arg: 1, scope: !3363, file: !3364, line: 434, type: !2036)
!3369 = !DILocation(line: 0, scope: !3363)
!3370 = !DILocation(line: 436, column: 10, scope: !3363)
!3371 = !DILocation(line: 436, column: 3, scope: !3363)
!3372 = distinct !DISubprogram(name: "gimple_phi_result_ptr", scope: !391, file: !391, line: 3080, type: !3373, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3375)
!3373 = !DISubroutineType(types: !3374)
!3374 = !{!1076, !486}
!3375 = !{!3376}
!3376 = !DILocalVariable(name: "gs", arg: 1, scope: !3372, file: !391, line: 3080, type: !486)
!3377 = !DILocation(line: 0, scope: !3372)
!3378 = !DILocation(line: 3083, column: 26, scope: !3372)
!3379 = !DILocation(line: 3083, column: 3, scope: !3372)
!3380 = distinct !DISubprogram(name: "gsi_stmt", scope: !391, file: !391, line: 4501, type: !3381, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3383)
!3381 = !DISubroutineType(types: !3382)
!3382 = !{!486, !2006}
!3383 = !{!3384}
!3384 = !DILocalVariable(name: "i", arg: 1, scope: !3380, file: !391, line: 4501, type: !2006)
!3385 = !DILocation(line: 4501, column: 32, scope: !3380)
!3386 = !DILocation(line: 4503, column: 12, scope: !3380)
!3387 = !DILocation(line: 4503, column: 17, scope: !3380)
!3388 = !DILocation(line: 4503, column: 3, scope: !3380)
!3389 = distinct !DISubprogram(name: "gsi_next", scope: !391, file: !391, line: 4485, type: !3390, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3393)
!3390 = !DISubroutineType(types: !3391)
!3391 = !{null, !3392}
!3392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!3393 = !{!3394}
!3394 = !DILocalVariable(name: "i", arg: 1, scope: !3389, file: !391, line: 4485, type: !3392)
!3395 = !DILocation(line: 0, scope: !3389)
!3396 = !DILocation(line: 4487, column: 15, scope: !3389)
!3397 = !DILocation(line: 4487, column: 20, scope: !3389)
!3398 = !DILocation(line: 4487, column: 10, scope: !3389)
!3399 = !DILocation(line: 4488, column: 1, scope: !3389)
!3400 = distinct !DISubprogram(name: "gather_scalar_reductions", scope: !3, file: !3, line: 1730, type: !3401, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3403)
!3401 = !DISubroutineType(types: !3402)
!3402 = !{null, !1112, !959}
!3403 = !{!3404, !3405, !3406, !3407, !3488, !3492, !3493, !3494, !3495}
!3404 = !DILocalVariable(name: "loop", arg: 1, scope: !3400, file: !3, line: 1730, type: !1112)
!3405 = !DILocalVariable(name: "reduction_list", arg: 2, scope: !3400, file: !3, line: 1730, type: !959)
!3406 = !DILocalVariable(name: "gsi", scope: !3400, file: !3, line: 1732, type: !2006)
!3407 = !DILocalVariable(name: "simple_loop_info", scope: !3400, file: !3, line: 1733, type: !3408)
!3408 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_vec_info", file: !2566, line: 245, baseType: !3409)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_loop_vec_info", file: !2566, line: 176, size: 1024, elements: !3411)
!3411 = !{!3412, !3413, !3414, !3415, !3416, !3417, !3418, !3419, !3420, !3421, !3422, !3423, !3424, !3425, !3431, !3432, !3433, !3487}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !3410, file: !2566, line: 179, baseType: !1113, size: 64)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "bbs", scope: !3410, file: !2566, line: 182, baseType: !1993, size: 64, offset: 64)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "num_iters", scope: !3410, file: !2566, line: 185, baseType: !665, size: 64, offset: 128)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "num_iters_unchanged", scope: !3410, file: !2566, line: 186, baseType: !665, size: 64, offset: 192)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "min_profitable_iters", scope: !3410, file: !2566, line: 193, baseType: !471, size: 32, offset: 256)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "vectorizable", scope: !3410, file: !2566, line: 196, baseType: !470, size: 8, offset: 288)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "vectorization_factor", scope: !3410, file: !2566, line: 199, baseType: !471, size: 32, offset: 320)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "unaligned_dr", scope: !3410, file: !2566, line: 202, baseType: !1875, size: 64, offset: 384)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "peeling_for_alignment", scope: !3410, file: !2566, line: 212, baseType: !471, size: 32, offset: 448)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_mask", scope: !3410, file: !2566, line: 215, baseType: !471, size: 32, offset: 480)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "datarefs", scope: !3410, file: !2566, line: 218, baseType: !1861, size: 64, offset: 512)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "ddrs", scope: !3410, file: !2566, line: 221, baseType: !1933, size: 64, offset: 576)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "may_alias_ddrs", scope: !3410, file: !2566, line: 225, baseType: !1933, size: 64, offset: 640)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "may_misalign_stmts", scope: !3410, file: !2566, line: 229, baseType: !3426, size: 64, offset: 704)
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_heap", file: !391, line: 34, baseType: !3428)
!3428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_heap", file: !391, line: 34, size: 128, elements: !3429)
!3429 = !{!3430}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3428, file: !391, line: 34, baseType: !1016, size: 128)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "loop_line_number", scope: !3410, file: !2566, line: 232, baseType: !2565, size: 32, offset: 768)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "strided_stores", scope: !3410, file: !2566, line: 236, baseType: !3426, size: 64, offset: 832)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "slp_instances", scope: !3410, file: !2566, line: 240, baseType: !3434, size: 64, offset: 896)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_instance_heap", file: !2566, line: 153, baseType: !3436)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_instance_heap", file: !2566, line: 153, size: 128, elements: !3437)
!3437 = !{!3438}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3436, file: !2566, line: 153, baseType: !3439, size: 128)
!3439 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_instance_base", file: !2566, line: 152, baseType: !3440)
!3440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_instance_base", file: !2566, line: 152, size: 128, elements: !3441)
!3441 = !{!3442, !3443, !3444}
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3440, file: !2566, line: 152, baseType: !7, size: 32)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3440, file: !2566, line: 152, baseType: !7, size: 32, offset: 32)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3440, file: !2566, line: 152, baseType: !3445, size: 64, offset: 64)
!3445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3446, size: 64, elements: !585)
!3446 = !DIDerivedType(tag: DW_TAG_typedef, name: "slp_instance", file: !2566, line: 150, baseType: !3447)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slp_instance", file: !2566, line: 123, size: 384, elements: !3449)
!3449 = !{!3450, !3465, !3466, !3467, !3472, !3473, !3486}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3448, file: !2566, line: 125, baseType: !3451, size: 64)
!3451 = !DIDerivedType(tag: DW_TAG_typedef, name: "slp_tree", file: !2566, line: 116, baseType: !3452)
!3452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3453, size: 64)
!3453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_slp_tree", file: !2566, line: 95, size: 384, elements: !3454)
!3454 = !{!3455, !3456, !3457, !3458, !3459, !3460}
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !3453, file: !2566, line: 99, baseType: !3452, size: 64)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !3453, file: !2566, line: 100, baseType: !3452, size: 64, offset: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "stmts", scope: !3453, file: !2566, line: 102, baseType: !3426, size: 64, offset: 128)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "vec_stmts", scope: !3453, file: !2566, line: 104, baseType: !3426, size: 64, offset: 192)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "vec_stmts_size", scope: !3453, file: !2566, line: 109, baseType: !7, size: 32, offset: 256)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !3453, file: !2566, line: 115, baseType: !3461, size: 64, offset: 288)
!3461 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3453, file: !2566, line: 111, size: 64, elements: !3462)
!3462 = !{!3463, !3464}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "outside_of_loop", scope: !3461, file: !2566, line: 113, baseType: !471, size: 32)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "inside_of_loop", scope: !3461, file: !2566, line: 114, baseType: !471, size: 32, offset: 32)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "group_size", scope: !3448, file: !2566, line: 128, baseType: !7, size: 32, offset: 64)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "unrolling_factor", scope: !3448, file: !2566, line: 131, baseType: !7, size: 32, offset: 96)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "cost", scope: !3448, file: !2566, line: 138, baseType: !3468, size: 64, offset: 128)
!3468 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3448, file: !2566, line: 134, size: 64, elements: !3469)
!3469 = !{!3470, !3471}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "outside_of_loop", scope: !3468, file: !2566, line: 136, baseType: !471, size: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "inside_of_loop", scope: !3468, file: !2566, line: 137, baseType: !471, size: 32, offset: 32)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "load_permutation", scope: !3448, file: !2566, line: 142, baseType: !1842, size: 64, offset: 192)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "loads", scope: !3448, file: !2566, line: 145, baseType: !3474, size: 64, offset: 256)
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_tree_heap", file: !2566, line: 119, baseType: !3476)
!3476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_tree_heap", file: !2566, line: 119, size: 128, elements: !3477)
!3477 = !{!3478}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3476, file: !2566, line: 119, baseType: !3479, size: 128)
!3479 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_slp_tree_base", file: !2566, line: 118, baseType: !3480)
!3480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_slp_tree_base", file: !2566, line: 118, size: 128, elements: !3481)
!3481 = !{!3482, !3483, !3484}
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3480, file: !2566, line: 118, baseType: !7, size: 32)
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3480, file: !2566, line: 118, baseType: !7, size: 32, offset: 32)
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3480, file: !2566, line: 118, baseType: !3485, size: 64, offset: 64)
!3485 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3451, size: 64, elements: !585)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "first_load", scope: !3448, file: !2566, line: 149, baseType: !486, size: 64, offset: 320)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "slp_unrolling_factor", scope: !3410, file: !2566, line: 244, baseType: !7, size: 32, offset: 960)
!3488 = !DILocalVariable(name: "phi", scope: !3489, file: !3, line: 1740, type: !486)
!3489 = distinct !DILexicalBlock(scope: !3490, file: !3, line: 1739, column: 5)
!3490 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 1738, column: 3)
!3491 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 1738, column: 3)
!3492 = !DILocalVariable(name: "iv", scope: !3489, file: !3, line: 1741, type: !2548)
!3493 = !DILocalVariable(name: "res", scope: !3489, file: !3, line: 1742, type: !665)
!3494 = !DILocalVariable(name: "double_reduc", scope: !3489, file: !3, line: 1743, type: !470)
!3495 = !DILocalVariable(name: "reduc_stmt", scope: !3496, file: !3, line: 1751, type: !486)
!3496 = distinct !DILexicalBlock(scope: !3497, file: !3, line: 1750, column: 2)
!3497 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 1748, column: 11)
!3498 = !DILocation(line: 0, scope: !3400)
!3499 = !DILocation(line: 1732, column: 3, scope: !3400)
!3500 = !DILocation(line: 1735, column: 13, scope: !3400)
!3501 = !DILocation(line: 1736, column: 22, scope: !3400)
!3502 = !DILocation(line: 1738, column: 14, scope: !3491)
!3503 = !DILocation(line: 1738, column: 36, scope: !3491)
!3504 = !DILocation(line: 0, scope: !3489)
!3505 = !DILocation(line: 0, scope: !3497)
!3506 = !DILocation(line: 1738, column: 8, scope: !3491)
!3507 = !DILocation(line: 1738, column: 46, scope: !3490)
!3508 = !DILocation(line: 1738, column: 45, scope: !3490)
!3509 = !DILocation(line: 1738, column: 3, scope: !3491)
!3510 = !DILocation(line: 1740, column: 20, scope: !3489)
!3511 = !DILocation(line: 1741, column: 7, scope: !3489)
!3512 = !DILocation(line: 1742, column: 18, scope: !3489)
!3513 = !DILocation(line: 1743, column: 7, scope: !3489)
!3514 = !DILocation(line: 1745, column: 12, scope: !3515)
!3515 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 1745, column: 11)
!3516 = !DILocation(line: 1745, column: 11, scope: !3489)
!3517 = !DILocation(line: 1748, column: 12, scope: !3497)
!3518 = !DILocation(line: 1749, column: 2, scope: !3497)
!3519 = !DILocation(line: 1751, column: 32, scope: !3496)
!3520 = !DILocation(line: 0, scope: !3496)
!3521 = !DILocation(line: 1752, column: 9, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3496, file: !3, line: 1752, column: 9)
!3523 = !DILocation(line: 1752, column: 24, scope: !3522)
!3524 = !DILocation(line: 1752, column: 20, scope: !3522)
!3525 = !DILocation(line: 1753, column: 15, scope: !3522)
!3526 = !DILocation(line: 1755, column: 5, scope: !3490)
!3527 = !DILocation(line: 1738, column: 63, scope: !3490)
!3528 = !DILocation(line: 1738, column: 3, scope: !3490)
!3529 = distinct !{!3529, !3509, !3530}
!3530 = !DILocation(line: 1755, column: 5, scope: !3491)
!3531 = !DILocation(line: 1756, column: 5, scope: !3400)
!3532 = !DILocation(line: 1757, column: 1, scope: !3400)
!3533 = distinct !DISubprogram(name: "get_use_from_ptr", scope: !3364, file: !3364, line: 427, type: !3534, scopeLine: 428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3536)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{!665, !1858}
!3536 = !{!3537}
!3537 = !DILocalVariable(name: "use", arg: 1, scope: !3533, file: !3364, line: 427, type: !1858)
!3538 = !DILocation(line: 0, scope: !3533)
!3539 = !DILocation(line: 429, column: 17, scope: !3533)
!3540 = !DILocation(line: 429, column: 10, scope: !3533)
!3541 = !DILocation(line: 429, column: 3, scope: !3533)
!3542 = distinct !DISubprogram(name: "gimple_phi_arg_imm_use_ptr", scope: !3364, file: !3364, line: 442, type: !3543, scopeLine: 443, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3545)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!1858, !486, !471}
!3545 = !{!3546, !3547}
!3546 = !DILocalVariable(name: "gs", arg: 1, scope: !3542, file: !3364, line: 442, type: !486)
!3547 = !DILocalVariable(name: "i", arg: 2, scope: !3542, file: !3364, line: 442, type: !471)
!3548 = !DILocation(line: 0, scope: !3542)
!3549 = !DILocation(line: 444, column: 11, scope: !3542)
!3550 = !DILocation(line: 444, column: 35, scope: !3542)
!3551 = !DILocation(line: 444, column: 3, scope: !3542)
!3552 = distinct !DISubprogram(name: "first_readonly_imm_use", scope: !3364, file: !3364, line: 292, type: !3553, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3556)
!3553 = !DISubroutineType(types: !3554)
!3554 = !{!1858, !3555, !665}
!3555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!3556 = !{!3557, !3558}
!3557 = !DILocalVariable(name: "imm", arg: 1, scope: !3552, file: !3364, line: 292, type: !3555)
!3558 = !DILocalVariable(name: "var", arg: 2, scope: !3552, file: !3364, line: 292, type: !665)
!3559 = !DILocation(line: 0, scope: !3552)
!3560 = !DILocation(line: 294, column: 18, scope: !3552)
!3561 = !DILocation(line: 294, column: 8, scope: !3552)
!3562 = !DILocation(line: 294, column: 14, scope: !3552)
!3563 = !DILocation(line: 295, column: 30, scope: !3552)
!3564 = !DILocation(line: 295, column: 16, scope: !3552)
!3565 = !DILocation(line: 299, column: 7, scope: !3566)
!3566 = distinct !DILexicalBlock(scope: !3552, file: !3364, line: 299, column: 7)
!3567 = !DILocation(line: 299, column: 7, scope: !3552)
!3568 = !DILocation(line: 301, column: 15, scope: !3552)
!3569 = !DILocation(line: 301, column: 3, scope: !3552)
!3570 = !DILocation(line: 302, column: 1, scope: !3552)
!3571 = distinct !DISubprogram(name: "end_readonly_imm_use_p", scope: !3364, file: !3364, line: 285, type: !3572, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3576)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!470, !3574}
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2935)
!3576 = !{!3577}
!3577 = !DILocalVariable(name: "imm", arg: 1, scope: !3571, file: !3364, line: 285, type: !3574)
!3578 = !DILocation(line: 0, scope: !3571)
!3579 = !DILocation(line: 287, column: 16, scope: !3571)
!3580 = !DILocation(line: 287, column: 32, scope: !3571)
!3581 = !DILocation(line: 287, column: 24, scope: !3571)
!3582 = !DILocation(line: 287, column: 10, scope: !3571)
!3583 = !DILocation(line: 287, column: 3, scope: !3571)
!3584 = distinct !DISubprogram(name: "gimple_bb", scope: !391, file: !391, line: 1112, type: !3585, scopeLine: 1113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3588)
!3585 = !DISubroutineType(types: !3586)
!3586 = !{!509, !3587}
!3587 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !487, line: 60, baseType: !1856)
!3588 = !{!3589}
!3589 = !DILocalVariable(name: "g", arg: 1, scope: !3584, file: !391, line: 1112, type: !3587)
!3590 = !DILocation(line: 0, scope: !3584)
!3591 = !DILocation(line: 1114, column: 20, scope: !3584)
!3592 = !DILocation(line: 1114, column: 3, scope: !3584)
!3593 = distinct !DISubprogram(name: "next_readonly_imm_use", scope: !3364, file: !3364, line: 306, type: !3594, scopeLine: 307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3596)
!3594 = !DISubroutineType(types: !3595)
!3595 = !{!1858, !3555}
!3596 = !{!3597, !3598}
!3597 = !DILocalVariable(name: "imm", arg: 1, scope: !3593, file: !3364, line: 306, type: !3555)
!3598 = !DILocalVariable(name: "old", scope: !3593, file: !3364, line: 308, type: !1858)
!3599 = !DILocation(line: 0, scope: !3593)
!3600 = !DILocation(line: 308, column: 28, scope: !3593)
!3601 = !DILocation(line: 319, column: 23, scope: !3593)
!3602 = !DILocation(line: 319, column: 16, scope: !3593)
!3603 = !DILocation(line: 320, column: 7, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3593, file: !3364, line: 320, column: 7)
!3605 = !DILocation(line: 320, column: 7, scope: !3593)
!3606 = !DILocation(line: 322, column: 15, scope: !3593)
!3607 = !DILocation(line: 322, column: 3, scope: !3593)
!3608 = !DILocation(line: 323, column: 1, scope: !3593)
!3609 = distinct !DISubprogram(name: "reduction_phi", scope: !3, file: !3, line: 203, type: !3610, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3612)
!3610 = !DISubroutineType(types: !3611)
!3611 = !{!1855, !959, !486}
!3612 = !{!3613, !3614, !3615, !3616}
!3613 = !DILocalVariable(name: "reduction_list", arg: 1, scope: !3609, file: !3, line: 203, type: !959)
!3614 = !DILocalVariable(name: "phi", arg: 2, scope: !3609, file: !3, line: 203, type: !486)
!3615 = !DILocalVariable(name: "tmpred", scope: !3609, file: !3, line: 205, type: !483)
!3616 = !DILocalVariable(name: "red", scope: !3609, file: !3, line: 205, type: !1855)
!3617 = !DILocation(line: 0, scope: !3609)
!3618 = !DILocation(line: 205, column: 3, scope: !3609)
!3619 = !DILocation(line: 207, column: 7, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 207, column: 7)
!3621 = !DILocation(line: 207, column: 38, scope: !3620)
!3622 = !DILocation(line: 207, column: 7, scope: !3609)
!3623 = !DILocation(line: 210, column: 10, scope: !3609)
!3624 = !DILocation(line: 210, column: 20, scope: !3609)
!3625 = !DILocation(line: 211, column: 35, scope: !3609)
!3626 = !DILocation(line: 211, column: 9, scope: !3609)
!3627 = !DILocation(line: 213, column: 3, scope: !3609)
!3628 = !DILocation(line: 214, column: 1, scope: !3609)
!3629 = distinct !DISubprogram(name: "build_new_reduction", scope: !3, file: !3, line: 1703, type: !3630, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3632)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{null, !959, !486, !486}
!3632 = !{!3633, !3634, !3635, !3636, !3637}
!3633 = !DILocalVariable(name: "reduction_list", arg: 1, scope: !3629, file: !3, line: 1703, type: !959)
!3634 = !DILocalVariable(name: "reduc_stmt", arg: 2, scope: !3629, file: !3, line: 1703, type: !486)
!3635 = !DILocalVariable(name: "phi", arg: 3, scope: !3629, file: !3, line: 1703, type: !486)
!3636 = !DILocalVariable(name: "slot", scope: !3629, file: !3, line: 1705, type: !983)
!3637 = !DILocalVariable(name: "new_reduction", scope: !3629, file: !3, line: 1706, type: !1855)
!3638 = !DILocation(line: 0, scope: !3629)
!3639 = !DILocation(line: 1708, column: 3, scope: !3629)
!3640 = !DILocation(line: 1710, column: 7, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 1710, column: 7)
!3642 = !DILocation(line: 1710, column: 17, scope: !3641)
!3643 = !DILocation(line: 1710, column: 21, scope: !3641)
!3644 = !DILocation(line: 1710, column: 32, scope: !3641)
!3645 = !DILocation(line: 1710, column: 7, scope: !3629)
!3646 = !DILocation(line: 1712, column: 7, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 1711, column: 5)
!3648 = !DILocation(line: 1714, column: 26, scope: !3647)
!3649 = !DILocation(line: 1714, column: 7, scope: !3647)
!3650 = !DILocation(line: 1715, column: 16, scope: !3647)
!3651 = !DILocation(line: 1715, column: 7, scope: !3647)
!3652 = !DILocation(line: 1716, column: 5, scope: !3647)
!3653 = !DILocation(line: 1718, column: 19, scope: !3629)
!3654 = !DILocation(line: 1720, column: 18, scope: !3629)
!3655 = !DILocation(line: 1720, column: 29, scope: !3629)
!3656 = !DILocation(line: 1721, column: 18, scope: !3629)
!3657 = !DILocation(line: 1721, column: 28, scope: !3629)
!3658 = !DILocation(line: 1722, column: 35, scope: !3629)
!3659 = !DILocation(line: 1722, column: 18, scope: !3629)
!3660 = !DILocation(line: 1722, column: 33, scope: !3629)
!3661 = !DILocation(line: 1723, column: 10, scope: !3629)
!3662 = !DILocation(line: 1724, column: 9, scope: !3629)
!3663 = !DILocation(line: 1725, column: 1, scope: !3629)
!3664 = distinct !DISubprogram(name: "gimple_assign_rhs_code", scope: !391, file: !391, line: 1815, type: !3665, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3667)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{!183, !3587}
!3667 = !{!3668, !3669}
!3668 = !DILocalVariable(name: "gs", arg: 1, scope: !3664, file: !391, line: 1815, type: !3587)
!3669 = !DILocalVariable(name: "code", scope: !3664, file: !391, line: 1817, type: !183)
!3670 = !DILocation(line: 0, scope: !3664)
!3671 = !DILocation(line: 1820, column: 10, scope: !3664)
!3672 = !DILocation(line: 1821, column: 7, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3664, file: !391, line: 1821, column: 7)
!3674 = !DILocation(line: 1821, column: 35, scope: !3673)
!3675 = !DILocation(line: 1821, column: 7, scope: !3664)
!3676 = !DILocation(line: 1822, column: 12, scope: !3673)
!3677 = !DILocation(line: 1822, column: 5, scope: !3673)
!3678 = !DILocation(line: 1824, column: 3, scope: !3664)
!3679 = distinct !DISubprogram(name: "gimple_expr_code", scope: !391, file: !391, line: 1438, type: !3665, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3680)
!3680 = !{!3681, !3682}
!3681 = !DILocalVariable(name: "stmt", arg: 1, scope: !3679, file: !391, line: 1438, type: !3587)
!3682 = !DILocalVariable(name: "code", scope: !3679, file: !391, line: 1440, type: !390)
!3683 = !DILocation(line: 0, scope: !3679)
!3684 = !DILocation(line: 1440, column: 27, scope: !3679)
!3685 = !DILocation(line: 1441, column: 29, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3679, file: !391, line: 1441, column: 7)
!3687 = !DILocation(line: 1442, column: 42, scope: !3686)
!3688 = !DILocation(line: 1442, column: 5, scope: !3686)
!3689 = !DILocation(line: 1446, column: 5, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3686, file: !391, line: 1443, column: 12)
!3691 = !DILocation(line: 1448, column: 5, scope: !3679)
!3692 = !DILocation(line: 1450, column: 1, scope: !3679)
!3693 = distinct !DISubprogram(name: "get_gimple_rhs_class", scope: !391, file: !391, line: 1686, type: !3694, scopeLine: 1687, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3696)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!429, !183}
!3696 = !{!3697}
!3697 = !DILocalVariable(name: "code", arg: 1, scope: !3693, file: !391, line: 1686, type: !183)
!3698 = !DILocation(line: 0, scope: !3693)
!3699 = !DILocation(line: 1688, column: 34, scope: !3693)
!3700 = !DILocation(line: 1688, column: 10, scope: !3693)
!3701 = !DILocation(line: 1688, column: 3, scope: !3693)
!3702 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !391, file: !391, line: 1727, type: !3703, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3705)
!3703 = !DISubroutineType(types: !3704)
!3704 = !{!665, !3587}
!3705 = !{!3706}
!3706 = !DILocalVariable(name: "gs", arg: 1, scope: !3702, file: !391, line: 1727, type: !3587)
!3707 = !DILocation(line: 0, scope: !3702)
!3708 = !DILocation(line: 1730, column: 10, scope: !3702)
!3709 = !DILocation(line: 1730, column: 3, scope: !3702)
!3710 = distinct !DISubprogram(name: "gimple_code", scope: !391, file: !391, line: 1052, type: !3711, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3713)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!390, !3587}
!3713 = !{!3714}
!3714 = !DILocalVariable(name: "g", arg: 1, scope: !3710, file: !391, line: 1052, type: !3587)
!3715 = !DILocation(line: 0, scope: !3710)
!3716 = !DILocation(line: 1054, column: 20, scope: !3710)
!3717 = !DILocation(line: 1054, column: 3, scope: !3710)
!3718 = distinct !DISubprogram(name: "gimple_op", scope: !391, file: !391, line: 1631, type: !3719, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3721)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{!665, !3587, !7}
!3721 = !{!3722, !3723}
!3722 = !DILocalVariable(name: "gs", arg: 1, scope: !3718, file: !391, line: 1631, type: !3587)
!3723 = !DILocalVariable(name: "i", arg: 2, scope: !3718, file: !391, line: 1631, type: !7)
!3724 = !DILocation(line: 0, scope: !3718)
!3725 = !DILocation(line: 1633, column: 7, scope: !3726)
!3726 = distinct !DILexicalBlock(scope: !3718, file: !391, line: 1633, column: 7)
!3727 = !DILocation(line: 1633, column: 7, scope: !3718)
!3728 = !DILocation(line: 1638, column: 14, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3726, file: !391, line: 1634, column: 5)
!3730 = !DILocation(line: 1638, column: 7, scope: !3729)
!3731 = !DILocation(line: 0, scope: !3726)
!3732 = !DILocation(line: 1642, column: 1, scope: !3718)
!3733 = distinct !DISubprogram(name: "gimple_has_ops", scope: !391, file: !391, line: 1274, type: !3734, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3736)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!470, !3587}
!3736 = !{!3737}
!3737 = !DILocalVariable(name: "g", arg: 1, scope: !3733, file: !391, line: 1274, type: !3587)
!3738 = !DILocation(line: 0, scope: !3733)
!3739 = !DILocation(line: 1276, column: 10, scope: !3733)
!3740 = !DILocation(line: 1276, column: 26, scope: !3733)
!3741 = !DILocation(line: 1276, column: 41, scope: !3733)
!3742 = !DILocation(line: 1276, column: 44, scope: !3733)
!3743 = !DILocation(line: 1276, column: 60, scope: !3733)
!3744 = !DILocation(line: 1276, column: 3, scope: !3733)
!3745 = distinct !DISubprogram(name: "gimple_ops", scope: !391, file: !391, line: 1614, type: !3373, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3746)
!3746 = !{!3747, !3748}
!3747 = !DILocalVariable(name: "gs", arg: 1, scope: !3745, file: !391, line: 1614, type: !486)
!3748 = !DILocalVariable(name: "off", scope: !3745, file: !391, line: 1616, type: !985)
!3749 = !DILocation(line: 0, scope: !3745)
!3750 = !DILocation(line: 1621, column: 28, scope: !3745)
!3751 = !DILocation(line: 1621, column: 9, scope: !3745)
!3752 = !DILocation(line: 1622, column: 3, scope: !3745)
!3753 = !DILocation(line: 1624, column: 20, scope: !3745)
!3754 = !DILocation(line: 1624, column: 32, scope: !3745)
!3755 = !DILocation(line: 1624, column: 10, scope: !3745)
!3756 = !DILocation(line: 1624, column: 3, scope: !3745)
!3757 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !391, file: !391, line: 1073, type: !3758, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3760)
!3758 = !DISubroutineType(types: !3759)
!3759 = !{!435, !486}
!3760 = !{!3761}
!3761 = !DILocalVariable(name: "gs", arg: 1, scope: !3757, file: !391, line: 1073, type: !486)
!3762 = !DILocation(line: 0, scope: !3757)
!3763 = !DILocation(line: 1075, column: 24, scope: !3757)
!3764 = !DILocation(line: 1075, column: 10, scope: !3757)
!3765 = !DILocation(line: 1075, column: 3, scope: !3757)
!3766 = distinct !DISubprogram(name: "gss_for_code", scope: !391, file: !391, line: 1061, type: !3767, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3769)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!435, !390}
!3769 = !{!3770}
!3770 = !DILocalVariable(name: "code", arg: 1, scope: !3766, file: !391, line: 1061, type: !390)
!3771 = !DILocation(line: 0, scope: !3766)
!3772 = !DILocation(line: 1066, column: 10, scope: !3766)
!3773 = !DILocation(line: 1066, column: 3, scope: !3766)
!3774 = distinct !DISubprogram(name: "gimple_phi_arg", scope: !391, file: !391, line: 3100, type: !3775, scopeLine: 3101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3778)
!3775 = !DISubroutineType(types: !3776)
!3776 = !{!3777, !486, !7}
!3777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!3778 = !{!3779, !3780}
!3779 = !DILocalVariable(name: "gs", arg: 1, scope: !3774, file: !391, line: 3100, type: !486)
!3780 = !DILocalVariable(name: "index", arg: 2, scope: !3774, file: !391, line: 3100, type: !7)
!3781 = !DILocation(line: 0, scope: !3774)
!3782 = !DILocation(line: 3103, column: 3, scope: !3774)
!3783 = !DILocation(line: 3104, column: 12, scope: !3774)
!3784 = !DILocation(line: 3104, column: 3, scope: !3774)
!3785 = distinct !DISubprogram(name: "VEC_data_reference_p_heap_alloc", scope: !1863, file: !1863, line: 209, type: !3786, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3788)
!3786 = !DISubroutineType(types: !3787)
!3787 = !{!1861, !471}
!3788 = !{!3789}
!3789 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3785, file: !1863, line: 209, type: !471)
!3790 = !DILocation(line: 0, scope: !3785)
!3791 = !DILocation(line: 209, column: 1, scope: !3785)
!3792 = distinct !DISubprogram(name: "VEC_ddr_p_heap_alloc", scope: !1863, file: !1863, line: 333, type: !3793, scopeLine: 333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3795)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!1933, !471}
!3795 = !{!3796}
!3796 = !DILocalVariable(name: "alloc_", arg: 1, scope: !3792, file: !1863, line: 333, type: !471)
!3797 = !DILocation(line: 0, scope: !3792)
!3798 = !DILocation(line: 333, column: 1, scope: !3792)
!3799 = distinct !DISubprogram(name: "transform_to_exit_first_loop", scope: !3, file: !3, line: 1294, type: !3800, scopeLine: 1295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3802)
!3800 = !DISubroutineType(types: !3801)
!3801 = !{null, !1113, !959, !665}
!3802 = !{!3803, !3804, !3805, !3806, !3807, !3808, !3809, !3810, !3811, !3812, !3813, !3814, !3815, !3816, !3817, !3818, !3819, !3820, !3821, !3822, !3823, !3824, !3825, !3831}
!3803 = !DILocalVariable(name: "loop", arg: 1, scope: !3799, file: !3, line: 1294, type: !1113)
!3804 = !DILocalVariable(name: "reduction_list", arg: 2, scope: !3799, file: !3, line: 1294, type: !959)
!3805 = !DILocalVariable(name: "nit", arg: 3, scope: !3799, file: !3, line: 1294, type: !665)
!3806 = !DILocalVariable(name: "bbs", scope: !3799, file: !3, line: 1296, type: !1993)
!3807 = !DILocalVariable(name: "nbbs", scope: !3799, file: !3, line: 1296, type: !1993)
!3808 = !DILocalVariable(name: "ex_bb", scope: !3799, file: !3, line: 1296, type: !927)
!3809 = !DILocalVariable(name: "orig_header", scope: !3799, file: !3, line: 1296, type: !927)
!3810 = !DILocalVariable(name: "n", scope: !3799, file: !3, line: 1297, type: !7)
!3811 = !DILocalVariable(name: "ok", scope: !3799, file: !3, line: 1298, type: !470)
!3812 = !DILocalVariable(name: "exit", scope: !3799, file: !3, line: 1299, type: !525)
!3813 = !DILocalVariable(name: "hpred", scope: !3799, file: !3, line: 1299, type: !525)
!3814 = !DILocalVariable(name: "control", scope: !3799, file: !3, line: 1300, type: !665)
!3815 = !DILocalVariable(name: "control_name", scope: !3799, file: !3, line: 1300, type: !665)
!3816 = !DILocalVariable(name: "res", scope: !3799, file: !3, line: 1300, type: !665)
!3817 = !DILocalVariable(name: "t", scope: !3799, file: !3, line: 1300, type: !665)
!3818 = !DILocalVariable(name: "phi", scope: !3799, file: !3, line: 1301, type: !486)
!3819 = !DILocalVariable(name: "nphi", scope: !3799, file: !3, line: 1301, type: !486)
!3820 = !DILocalVariable(name: "cond_stmt", scope: !3799, file: !3, line: 1301, type: !486)
!3821 = !DILocalVariable(name: "stmt", scope: !3799, file: !3, line: 1301, type: !486)
!3822 = !DILocalVariable(name: "cond_nit", scope: !3799, file: !3, line: 1301, type: !486)
!3823 = !DILocalVariable(name: "gsi", scope: !3799, file: !3, line: 1302, type: !2006)
!3824 = !DILocalVariable(name: "nit_1", scope: !3799, file: !3, line: 1303, type: !665)
!3825 = !DILocalVariable(name: "red", scope: !3826, file: !3, line: 1367, type: !1855)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 1366, column: 2)
!3827 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 1365, column: 11)
!3828 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 1349, column: 5)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 1348, column: 3)
!3830 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 1348, column: 3)
!3831 = !DILocalVariable(name: "val", scope: !3826, file: !3, line: 1369, type: !665)
!3832 = !DILocation(line: 0, scope: !3799)
!3833 = !DILocation(line: 1299, column: 15, scope: !3799)
!3834 = !DILocation(line: 1302, column: 3, scope: !3799)
!3835 = !DILocation(line: 1305, column: 35, scope: !3799)
!3836 = !DILocation(line: 1305, column: 3, scope: !3799)
!3837 = !DILocation(line: 1306, column: 36, scope: !3799)
!3838 = !DILocation(line: 1306, column: 17, scope: !3799)
!3839 = !DILocation(line: 1307, column: 35, scope: !3799)
!3840 = !DILocation(line: 1307, column: 11, scope: !3799)
!3841 = !DILocation(line: 1309, column: 32, scope: !3799)
!3842 = !DILocation(line: 1309, column: 15, scope: !3799)
!3843 = !DILocation(line: 1310, column: 13, scope: !3799)
!3844 = !DILocation(line: 1311, column: 3, scope: !3799)
!3845 = !DILocation(line: 1315, column: 14, scope: !3846)
!3846 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 1315, column: 3)
!3847 = !DILocation(line: 1315, column: 36, scope: !3846)
!3848 = !DILocation(line: 1315, column: 8, scope: !3846)
!3849 = !DILocation(line: 1315, column: 46, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 1315, column: 3)
!3851 = !DILocation(line: 1315, column: 45, scope: !3850)
!3852 = !DILocation(line: 1315, column: 3, scope: !3846)
!3853 = !DILocation(line: 1317, column: 13, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 1316, column: 5)
!3855 = !DILocation(line: 1318, column: 13, scope: !3854)
!3856 = !DILocation(line: 1319, column: 26, scope: !3854)
!3857 = !DILocation(line: 1319, column: 11, scope: !3854)
!3858 = !DILocation(line: 1320, column: 7, scope: !3854)
!3859 = !DILocation(line: 1321, column: 14, scope: !3854)
!3860 = !DILocation(line: 1322, column: 7, scope: !3854)
!3861 = !DILocation(line: 1322, column: 31, scope: !3854)
!3862 = !DILocation(line: 1323, column: 7, scope: !3854)
!3863 = !DILocation(line: 1325, column: 15, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3854, file: !3, line: 1325, column: 11)
!3865 = !DILocation(line: 1325, column: 11, scope: !3854)
!3866 = !DILocation(line: 1327, column: 4, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 1326, column: 2)
!3868 = !DILocation(line: 1328, column: 4, scope: !3867)
!3869 = !DILocation(line: 1330, column: 2, scope: !3867)
!3870 = !DILocation(line: 1315, column: 63, scope: !3850)
!3871 = !DILocation(line: 1315, column: 3, scope: !3850)
!3872 = distinct !{!3872, !3852, !3873}
!3873 = !DILocation(line: 1331, column: 5, scope: !3846)
!3874 = !DILocation(line: 1332, column: 9, scope: !3799)
!3875 = !DILocation(line: 0, scope: !3876)
!3876 = distinct !DILexicalBlock(scope: !3877, file: !3, line: 1334, column: 3)
!3877 = distinct !DILexicalBlock(scope: !3799, file: !3, line: 1334, column: 3)
!3878 = !DILocation(line: 1334, column: 8, scope: !3877)
!3879 = !DILocation(line: 0, scope: !3877)
!3880 = !DILocation(line: 1334, column: 15, scope: !3876)
!3881 = !DILocation(line: 1334, column: 22, scope: !3876)
!3882 = !DILocation(line: 1334, column: 3, scope: !3877)
!3883 = !DILocation(line: 1334, column: 39, scope: !3876)
!3884 = !DILocation(line: 1334, column: 3, scope: !3876)
!3885 = distinct !{!3885, !3882, !3886}
!3886 = !DILocation(line: 1335, column: 5, scope: !3877)
!3887 = !DILocation(line: 1336, column: 10, scope: !3799)
!3888 = !DILocation(line: 1337, column: 60, scope: !3799)
!3889 = !DILocation(line: 1337, column: 36, scope: !3799)
!3890 = !DILocation(line: 1338, column: 12, scope: !3799)
!3891 = !DILocation(line: 1337, column: 8, scope: !3799)
!3892 = !DILocation(line: 1339, column: 3, scope: !3799)
!3893 = !DILocation(line: 1340, column: 9, scope: !3799)
!3894 = !DILocation(line: 1340, column: 3, scope: !3799)
!3895 = !DILocation(line: 1341, column: 11, scope: !3799)
!3896 = !DILocation(line: 1342, column: 3, scope: !3799)
!3897 = !DILocation(line: 1348, column: 14, scope: !3830)
!3898 = !DILocation(line: 0, scope: !3828)
!3899 = !DILocation(line: 1348, column: 8, scope: !3830)
!3900 = !DILocation(line: 1348, column: 3, scope: !3830)
!3901 = !DILocation(line: 1348, column: 39, scope: !3829)
!3902 = !DILocation(line: 1348, column: 38, scope: !3829)
!3903 = !DILocation(line: 1350, column: 13, scope: !3828)
!3904 = !DILocation(line: 1351, column: 13, scope: !3828)
!3905 = !DILocation(line: 1352, column: 12, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3828, file: !3, line: 1352, column: 11)
!3907 = !DILocation(line: 1352, column: 11, scope: !3828)
!3908 = !DILocation(line: 1354, column: 4, scope: !3909)
!3909 = distinct !DILexicalBlock(scope: !3906, file: !3, line: 1353, column: 2)
!3910 = !DILocation(line: 1355, column: 4, scope: !3909)
!3911 = distinct !{!3911, !3900, !3912}
!3912 = !DILocation(line: 1382, column: 5, scope: !3830)
!3913 = !DILocation(line: 1363, column: 14, scope: !3828)
!3914 = !DILocation(line: 1365, column: 11, scope: !3827)
!3915 = !DILocation(line: 1365, column: 42, scope: !3827)
!3916 = !DILocation(line: 1365, column: 11, scope: !3828)
!3917 = !DILocation(line: 1369, column: 15, scope: !3826)
!3918 = !DILocation(line: 0, scope: !3826)
!3919 = !DILocation(line: 1370, column: 41, scope: !3826)
!3920 = !DILocation(line: 1370, column: 10, scope: !3826)
!3921 = !DILocation(line: 1371, column: 8, scope: !3922)
!3922 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 1371, column: 8)
!3923 = !DILocation(line: 1371, column: 8, scope: !3826)
!3924 = !DILocation(line: 1373, column: 13, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 1372, column: 6)
!3926 = !DILocation(line: 1373, column: 22, scope: !3925)
!3927 = !DILocation(line: 1374, column: 8, scope: !3925)
!3928 = !DILocation(line: 1375, column: 8, scope: !3925)
!3929 = !DILocation(line: 1378, column: 7, scope: !3828)
!3930 = !DILocation(line: 1381, column: 7, scope: !3828)
!3931 = !DILocation(line: 1348, column: 3, scope: !3829)
!3932 = !DILocation(line: 1383, column: 3, scope: !3799)
!3933 = !DILocation(line: 1387, column: 9, scope: !3799)
!3934 = !DILocation(line: 1388, column: 31, scope: !3799)
!3935 = !DILocation(line: 1388, column: 14, scope: !3799)
!3936 = !DILocation(line: 1389, column: 12, scope: !3799)
!3937 = !DILocation(line: 1391, column: 7, scope: !3799)
!3938 = !DILocation(line: 1390, column: 11, scope: !3799)
!3939 = !DILocation(line: 1393, column: 10, scope: !3799)
!3940 = !DILocation(line: 1394, column: 3, scope: !3799)
!3941 = !DILocation(line: 1395, column: 3, scope: !3799)
!3942 = !DILocation(line: 1395, column: 36, scope: !3799)
!3943 = !DILocation(line: 1396, column: 1, scope: !3799)
!3944 = distinct !DISubprogram(name: "initialize_reductions", scope: !3, file: !3, line: 384, type: !3945, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3947)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!471, !983, !475}
!3947 = !{!3948, !3949, !3950, !3951, !3952, !3953, !3954, !3955, !3956, !3958}
!3948 = !DILocalVariable(name: "slot", arg: 1, scope: !3944, file: !3, line: 384, type: !983)
!3949 = !DILocalVariable(name: "data", arg: 2, scope: !3944, file: !3, line: 384, type: !475)
!3950 = !DILocalVariable(name: "init", scope: !3944, file: !3, line: 386, type: !665)
!3951 = !DILocalVariable(name: "c", scope: !3944, file: !3, line: 386, type: !665)
!3952 = !DILocalVariable(name: "bvar", scope: !3944, file: !3, line: 387, type: !665)
!3953 = !DILocalVariable(name: "type", scope: !3944, file: !3, line: 387, type: !665)
!3954 = !DILocalVariable(name: "arg", scope: !3944, file: !3, line: 387, type: !665)
!3955 = !DILocalVariable(name: "e", scope: !3944, file: !3, line: 388, type: !525)
!3956 = !DILocalVariable(name: "reduc", scope: !3944, file: !3, line: 390, type: !3957)
!3957 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1855)
!3958 = !DILocalVariable(name: "loop", scope: !3944, file: !3, line: 391, type: !1113)
!3959 = !DILocation(line: 0, scope: !3944)
!3960 = !DILocation(line: 390, column: 66, scope: !3944)
!3961 = !DILocation(line: 391, column: 23, scope: !3944)
!3962 = !DILocation(line: 400, column: 10, scope: !3944)
!3963 = !DILocation(line: 401, column: 10, scope: !3944)
!3964 = !DILocation(line: 402, column: 3, scope: !3944)
!3965 = !DILocation(line: 404, column: 49, scope: !3944)
!3966 = !DILocation(line: 404, column: 25, scope: !3944)
!3967 = !DILocation(line: 404, column: 7, scope: !3944)
!3968 = !DILocation(line: 406, column: 42, scope: !3944)
!3969 = !DILocation(line: 406, column: 3, scope: !3944)
!3970 = !DILocation(line: 406, column: 33, scope: !3944)
!3971 = !DILocation(line: 407, column: 25, scope: !3944)
!3972 = !DILocation(line: 407, column: 3, scope: !3944)
!3973 = !DILocation(line: 407, column: 23, scope: !3944)
!3974 = !DILocation(line: 409, column: 33, scope: !3944)
!3975 = !DILocation(line: 409, column: 10, scope: !3944)
!3976 = !DILocation(line: 410, column: 10, scope: !3944)
!3977 = !DILocation(line: 410, column: 15, scope: !3944)
!3978 = !DILocation(line: 420, column: 7, scope: !3944)
!3979 = !DILocation(line: 421, column: 9, scope: !3944)
!3980 = !DILocation(line: 424, column: 3, scope: !3944)
!3981 = !DILocation(line: 426, column: 10, scope: !3944)
!3982 = !DILocation(line: 426, column: 24, scope: !3944)
!3983 = !DILocation(line: 427, column: 3, scope: !3944)
!3984 = distinct !DISubprogram(name: "eliminate_local_variables", scope: !3, file: !3, line: 540, type: !3985, scopeLine: 541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3987)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{null, !525, !525}
!3987 = !{!3988, !3989, !3990, !3991, !3992, !3993, !3994, !3995, !3996}
!3988 = !DILocalVariable(name: "entry", arg: 1, scope: !3984, file: !3, line: 540, type: !525)
!3989 = !DILocalVariable(name: "exit", arg: 2, scope: !3984, file: !3, line: 540, type: !525)
!3990 = !DILocalVariable(name: "bb", scope: !3984, file: !3, line: 542, type: !927)
!3991 = !DILocalVariable(name: "body", scope: !3984, file: !3, line: 543, type: !1994)
!3992 = !DILocalVariable(name: "i", scope: !3984, file: !3, line: 544, type: !7)
!3993 = !DILocalVariable(name: "gsi", scope: !3984, file: !3, line: 545, type: !2006)
!3994 = !DILocalVariable(name: "decl_address", scope: !3984, file: !3, line: 546, type: !959)
!3995 = !DILocalVariable(name: "entry_bb", scope: !3984, file: !3, line: 548, type: !927)
!3996 = !DILocalVariable(name: "exit_bb", scope: !3984, file: !3, line: 549, type: !927)
!3997 = !DILocation(line: 0, scope: !3984)
!3998 = !DILocation(line: 542, column: 3, scope: !3984)
!3999 = !DILocation(line: 543, column: 3, scope: !3984)
!4000 = !DILocation(line: 543, column: 35, scope: !3984)
!4001 = !DILocation(line: 543, column: 28, scope: !3984)
!4002 = !DILocation(line: 545, column: 3, scope: !3984)
!4003 = !DILocation(line: 546, column: 25, scope: !3984)
!4004 = !DILocation(line: 548, column: 33, scope: !3984)
!4005 = !DILocation(line: 549, column: 31, scope: !3984)
!4006 = !DILocation(line: 551, column: 3, scope: !3984)
!4007 = !DILocation(line: 0, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 555, column: 7)
!4009 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 554, column: 9)
!4010 = distinct !DILexicalBlock(scope: !4011, file: !3, line: 553, column: 3)
!4011 = distinct !DILexicalBlock(scope: !3984, file: !3, line: 553, column: 3)
!4012 = !DILocation(line: 553, column: 8, scope: !4011)
!4013 = !DILocation(line: 0, scope: !4011)
!4014 = !DILocation(line: 553, column: 15, scope: !4010)
!4015 = !DILocation(line: 553, column: 3, scope: !4011)
!4016 = !DILocation(line: 554, column: 9, scope: !4009)
!4017 = !DILocation(line: 554, column: 12, scope: !4009)
!4018 = !DILocation(line: 554, column: 30, scope: !4009)
!4019 = !DILocation(line: 554, column: 24, scope: !4009)
!4020 = !DILocation(line: 555, column: 18, scope: !4008)
!4021 = !DILocation(line: 555, column: 12, scope: !4008)
!4022 = !DILocation(line: 555, column: 38, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 555, column: 7)
!4024 = !DILocation(line: 555, column: 37, scope: !4023)
!4025 = !DILocation(line: 555, column: 7, scope: !4008)
!4026 = !DILocation(line: 556, column: 41, scope: !4023)
!4027 = !DILocation(line: 556, column: 2, scope: !4023)
!4028 = !DILocation(line: 555, column: 55, scope: !4023)
!4029 = !DILocation(line: 555, column: 7, scope: !4023)
!4030 = distinct !{!4030, !4025, !4031}
!4031 = !DILocation(line: 557, column: 18, scope: !4008)
!4032 = !DILocation(line: 553, column: 56, scope: !4010)
!4033 = !DILocation(line: 553, column: 3, scope: !4010)
!4034 = distinct !{!4034, !4015, !4035}
!4035 = !DILocation(line: 557, column: 18, scope: !4011)
!4036 = !DILocation(line: 559, column: 3, scope: !3984)
!4037 = !DILocation(line: 560, column: 3, scope: !3984)
!4038 = !DILocation(line: 561, column: 1, scope: !3984)
!4039 = distinct !DISubprogram(name: "separate_decls_in_region", scope: !3, file: !3, line: 1073, type: !4040, scopeLine: 1077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4042)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{null, !525, !525, !959, !1076, !1076, !2038}
!4042 = !{!4043, !4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053, !4054, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4073}
!4043 = !DILocalVariable(name: "entry", arg: 1, scope: !4039, file: !3, line: 1073, type: !525)
!4044 = !DILocalVariable(name: "exit", arg: 2, scope: !4039, file: !3, line: 1073, type: !525)
!4045 = !DILocalVariable(name: "reduction_list", arg: 3, scope: !4039, file: !3, line: 1073, type: !959)
!4046 = !DILocalVariable(name: "arg_struct", arg: 4, scope: !4039, file: !3, line: 1074, type: !1076)
!4047 = !DILocalVariable(name: "new_arg_struct", arg: 5, scope: !4039, file: !3, line: 1074, type: !1076)
!4048 = !DILocalVariable(name: "ld_st_data", arg: 6, scope: !4039, file: !3, line: 1075, type: !2038)
!4049 = !DILocalVariable(name: "bb1", scope: !4039, file: !3, line: 1078, type: !927)
!4050 = !DILocalVariable(name: "bb0", scope: !4039, file: !3, line: 1079, type: !927)
!4051 = !DILocalVariable(name: "name_copies", scope: !4039, file: !3, line: 1080, type: !959)
!4052 = !DILocalVariable(name: "decl_copies", scope: !4039, file: !3, line: 1082, type: !959)
!4053 = !DILocalVariable(name: "i", scope: !4039, file: !3, line: 1084, type: !7)
!4054 = !DILocalVariable(name: "type", scope: !4039, file: !3, line: 1085, type: !665)
!4055 = !DILocalVariable(name: "type_name", scope: !4039, file: !3, line: 1085, type: !665)
!4056 = !DILocalVariable(name: "nvar", scope: !4039, file: !3, line: 1085, type: !665)
!4057 = !DILocalVariable(name: "gsi", scope: !4039, file: !3, line: 1086, type: !2006)
!4058 = !DILocalVariable(name: "clsn_data", scope: !4039, file: !3, line: 1087, type: !2039)
!4059 = !DILocalVariable(name: "body", scope: !4039, file: !3, line: 1088, type: !1994)
!4060 = !DILocalVariable(name: "bb", scope: !4039, file: !3, line: 1089, type: !927)
!4061 = !DILocalVariable(name: "entry_bb", scope: !4039, file: !3, line: 1090, type: !927)
!4062 = !DILocalVariable(name: "exit_bb", scope: !4039, file: !3, line: 1091, type: !927)
!4063 = !DILocalVariable(name: "has_debug_stmt", scope: !4039, file: !3, line: 1092, type: !470)
!4064 = !DILocalVariable(name: "stmt", scope: !4065, file: !3, line: 1107, type: !486)
!4065 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 1106, column: 6)
!4066 = distinct !DILexicalBlock(scope: !4067, file: !3, line: 1105, column: 4)
!4067 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 1105, column: 4)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1100, column: 2)
!4069 = distinct !DILexicalBlock(scope: !4070, file: !3, line: 1099, column: 11)
!4070 = distinct !DILexicalBlock(scope: !4071, file: !3, line: 1098, column: 5)
!4071 = distinct !DILexicalBlock(scope: !4072, file: !3, line: 1097, column: 3)
!4072 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 1097, column: 3)
!4073 = !DILocalVariable(name: "stmt", scope: !4074, file: !3, line: 1130, type: !486)
!4074 = distinct !DILexicalBlock(scope: !4075, file: !3, line: 1129, column: 6)
!4075 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 1128, column: 4)
!4076 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 1128, column: 4)
!4077 = distinct !DILexicalBlock(scope: !4078, file: !3, line: 1127, column: 2)
!4078 = distinct !DILexicalBlock(scope: !4079, file: !3, line: 1126, column: 11)
!4079 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 1125, column: 5)
!4080 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 1125, column: 5)
!4081 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 1124, column: 7)
!4082 = !DILocation(line: 0, scope: !4039)
!4083 = !DILocation(line: 1078, column: 21, scope: !4039)
!4084 = !DILocation(line: 1079, column: 21, scope: !4039)
!4085 = !DILocation(line: 1080, column: 24, scope: !4039)
!4086 = !DILocation(line: 1082, column: 24, scope: !4039)
!4087 = !DILocation(line: 1086, column: 3, scope: !4039)
!4088 = !DILocation(line: 1087, column: 3, scope: !4039)
!4089 = !DILocation(line: 1088, column: 3, scope: !4039)
!4090 = !DILocation(line: 1088, column: 35, scope: !4039)
!4091 = !DILocation(line: 1088, column: 28, scope: !4039)
!4092 = !DILocation(line: 1089, column: 3, scope: !4039)
!4093 = !DILocation(line: 1091, column: 31, scope: !4039)
!4094 = !DILocation(line: 1094, column: 11, scope: !4039)
!4095 = !DILocation(line: 1095, column: 3, scope: !4039)
!4096 = !DILocation(line: 0, scope: !4097)
!4097 = distinct !DILexicalBlock(scope: !4068, file: !3, line: 1101, column: 4)
!4098 = !DILocation(line: 0, scope: !4067)
!4099 = !DILocation(line: 1097, column: 8, scope: !4072)
!4100 = !DILocation(line: 0, scope: !4072)
!4101 = !DILocation(line: 1092, column: 8, scope: !4039)
!4102 = !DILocation(line: 1097, column: 15, scope: !4071)
!4103 = !DILocation(line: 1097, column: 3, scope: !4072)
!4104 = !DILocation(line: 1099, column: 11, scope: !4069)
!4105 = !DILocation(line: 1099, column: 14, scope: !4069)
!4106 = !DILocation(line: 1099, column: 32, scope: !4069)
!4107 = !DILocation(line: 1099, column: 26, scope: !4069)
!4108 = !DILocation(line: 1101, column: 15, scope: !4097)
!4109 = !DILocation(line: 1101, column: 9, scope: !4097)
!4110 = !DILocation(line: 1101, column: 37, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4097, file: !3, line: 1101, column: 4)
!4112 = !DILocation(line: 1101, column: 36, scope: !4111)
!4113 = !DILocation(line: 1101, column: 4, scope: !4097)
!4114 = !DILocation(line: 1102, column: 50, scope: !4111)
!4115 = !DILocation(line: 1102, column: 6, scope: !4111)
!4116 = !DILocation(line: 1101, column: 54, scope: !4111)
!4117 = !DILocation(line: 1101, column: 4, scope: !4111)
!4118 = distinct !{!4118, !4113, !4119}
!4119 = !DILocation(line: 1103, column: 33, scope: !4097)
!4120 = !DILocation(line: 1105, column: 15, scope: !4067)
!4121 = !DILocation(line: 1105, column: 29, scope: !4067)
!4122 = !DILocation(line: 1105, column: 9, scope: !4067)
!4123 = !DILocation(line: 1105, column: 35, scope: !4066)
!4124 = !DILocation(line: 1105, column: 34, scope: !4066)
!4125 = !DILocation(line: 1105, column: 4, scope: !4067)
!4126 = !DILocation(line: 1107, column: 22, scope: !4065)
!4127 = !DILocation(line: 0, scope: !4065)
!4128 = !DILocation(line: 1109, column: 12, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4065, file: !3, line: 1109, column: 12)
!4130 = !DILocation(line: 1109, column: 12, scope: !4065)
!4131 = !DILocation(line: 1112, column: 3, scope: !4129)
!4132 = !DILocation(line: 1105, column: 52, scope: !4066)
!4133 = !DILocation(line: 1105, column: 4, scope: !4066)
!4134 = distinct !{!4134, !4125, !4135}
!4135 = !DILocation(line: 1114, column: 6, scope: !4067)
!4136 = !DILocation(line: 1097, column: 56, scope: !4071)
!4137 = !DILocation(line: 1097, column: 3, scope: !4071)
!4138 = distinct !{!4138, !4103, !4139}
!4139 = !DILocation(line: 1116, column: 5, scope: !4072)
!4140 = !DILocation(line: 1124, column: 7, scope: !4081)
!4141 = !DILocation(line: 1124, column: 7, scope: !4039)
!4142 = !DILocation(line: 0, scope: !4076)
!4143 = !DILocation(line: 1125, column: 5, scope: !4080)
!4144 = !DILocation(line: 0, scope: !4080)
!4145 = !DILocation(line: 1125, column: 17, scope: !4079)
!4146 = !DILocation(line: 1126, column: 11, scope: !4078)
!4147 = !DILocation(line: 1126, column: 14, scope: !4078)
!4148 = !DILocation(line: 1126, column: 32, scope: !4078)
!4149 = !DILocation(line: 1126, column: 26, scope: !4078)
!4150 = !DILocation(line: 1128, column: 15, scope: !4076)
!4151 = !DILocation(line: 1128, column: 9, scope: !4076)
!4152 = !DILocation(line: 1128, column: 35, scope: !4075)
!4153 = !DILocation(line: 1128, column: 34, scope: !4075)
!4154 = !DILocation(line: 1128, column: 4, scope: !4076)
!4155 = !DILocation(line: 1130, column: 22, scope: !4074)
!4156 = !DILocation(line: 0, scope: !4074)
!4157 = !DILocation(line: 1132, column: 12, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4074, file: !3, line: 1132, column: 12)
!4159 = !DILocation(line: 1132, column: 12, scope: !4074)
!4160 = !DILocation(line: 1134, column: 9, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 1134, column: 9)
!4162 = distinct !DILexicalBlock(scope: !4158, file: !3, line: 1133, column: 3)
!4163 = !DILocation(line: 1134, column: 9, scope: !4162)
!4164 = !DILocation(line: 1138, column: 9, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 1137, column: 7)
!4166 = !DILocation(line: 1139, column: 9, scope: !4165)
!4167 = distinct !{!4167, !4154, !4168}
!4168 = !DILocation(line: 1144, column: 6, scope: !4076)
!4169 = !DILocation(line: 1143, column: 8, scope: !4074)
!4170 = !DILocation(line: 1144, column: 6, scope: !4075)
!4171 = !DILocation(line: 1125, column: 58, scope: !4079)
!4172 = !DILocation(line: 1125, column: 5, scope: !4079)
!4173 = distinct !{!4173, !4143, !4174}
!4174 = !DILocation(line: 1145, column: 2, scope: !4080)
!4175 = !DILocation(line: 1147, column: 3, scope: !4039)
!4176 = !DILocation(line: 1149, column: 7, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4039, file: !3, line: 1149, column: 7)
!4178 = !DILocation(line: 1149, column: 35, scope: !4177)
!4179 = !DILocation(line: 1149, column: 40, scope: !4177)
!4180 = !DILocation(line: 1149, column: 43, scope: !4177)
!4181 = !DILocation(line: 1149, column: 74, scope: !4177)
!4182 = !DILocation(line: 1149, column: 7, scope: !4039)
!4183 = !DILocation(line: 1153, column: 19, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1150, column: 5)
!4185 = !DILocation(line: 1154, column: 23, scope: !4184)
!4186 = !DILocation(line: 1155, column: 5, scope: !4184)
!4187 = !DILocation(line: 1159, column: 31, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 1157, column: 5)
!4189 = !DILocation(line: 1159, column: 14, scope: !4188)
!4190 = !DILocation(line: 1160, column: 19, scope: !4188)
!4191 = !DILocation(line: 1163, column: 7, scope: !4188)
!4192 = !DILocation(line: 1163, column: 24, scope: !4188)
!4193 = !DILocation(line: 1165, column: 55, scope: !4188)
!4194 = !DILocation(line: 1165, column: 7, scope: !4188)
!4195 = !DILocation(line: 1166, column: 11, scope: !4196)
!4196 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1166, column: 11)
!4197 = !DILocation(line: 1166, column: 26, scope: !4196)
!4198 = !DILocation(line: 1166, column: 29, scope: !4196)
!4199 = !DILocation(line: 1166, column: 60, scope: !4196)
!4200 = !DILocation(line: 1166, column: 11, scope: !4188)
!4201 = !DILocation(line: 1169, column: 4, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4196, file: !3, line: 1167, column: 2)
!4203 = !DILocation(line: 1171, column: 2, scope: !4202)
!4204 = !DILocation(line: 1172, column: 7, scope: !4188)
!4205 = !DILocation(line: 1175, column: 21, scope: !4188)
!4206 = !DILocation(line: 1175, column: 19, scope: !4188)
!4207 = !DILocation(line: 1176, column: 7, scope: !4188)
!4208 = !DILocation(line: 1177, column: 30, scope: !4188)
!4209 = !DILocation(line: 1177, column: 14, scope: !4188)
!4210 = !DILocation(line: 1178, column: 7, scope: !4188)
!4211 = !DILocation(line: 1179, column: 25, scope: !4188)
!4212 = !DILocation(line: 1179, column: 23, scope: !4188)
!4213 = !DILocation(line: 1181, column: 27, scope: !4188)
!4214 = !DILocation(line: 1181, column: 25, scope: !4188)
!4215 = !DILocation(line: 1182, column: 26, scope: !4188)
!4216 = !DILocation(line: 1182, column: 19, scope: !4188)
!4217 = !DILocation(line: 1182, column: 24, scope: !4188)
!4218 = !DILocation(line: 1183, column: 19, scope: !4188)
!4219 = !DILocation(line: 1183, column: 28, scope: !4188)
!4220 = !DILocation(line: 1184, column: 19, scope: !4188)
!4221 = !DILocation(line: 1184, column: 27, scope: !4188)
!4222 = !DILocation(line: 1187, column: 8, scope: !4188)
!4223 = !DILocation(line: 1186, column: 7, scope: !4188)
!4224 = !DILocation(line: 1191, column: 26, scope: !4225)
!4225 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1191, column: 11)
!4226 = !DILocation(line: 1191, column: 29, scope: !4225)
!4227 = !DILocation(line: 1191, column: 60, scope: !4225)
!4228 = !DILocation(line: 1191, column: 11, scope: !4188)
!4229 = !DILocation(line: 1193, column: 4, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 1192, column: 2)
!4231 = !DILocation(line: 1195, column: 21, scope: !4230)
!4232 = !DILocation(line: 1195, column: 14, scope: !4230)
!4233 = !DILocation(line: 1195, column: 19, scope: !4230)
!4234 = !DILocation(line: 1196, column: 30, scope: !4230)
!4235 = !DILocation(line: 1196, column: 14, scope: !4230)
!4236 = !DILocation(line: 1196, column: 22, scope: !4230)
!4237 = !DILocation(line: 1197, column: 34, scope: !4230)
!4238 = !DILocation(line: 1197, column: 20, scope: !4230)
!4239 = !DILocation(line: 1198, column: 4, scope: !4230)
!4240 = !DILocation(line: 1199, column: 2, scope: !4230)
!4241 = !DILocation(line: 1202, column: 3, scope: !4039)
!4242 = !DILocation(line: 1203, column: 3, scope: !4039)
!4243 = !DILocation(line: 1204, column: 1, scope: !4039)
!4244 = distinct !DISubprogram(name: "create_parallel_loop", scope: !3, file: !3, line: 1405, type: !4245, scopeLine: 1407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4247)
!4245 = !DISubroutineType(types: !4246)
!4246 = !{!927, !1113, !665, !665, !665, !7}
!4247 = !{!4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4279}
!4248 = !DILocalVariable(name: "loop", arg: 1, scope: !4244, file: !3, line: 1405, type: !1113)
!4249 = !DILocalVariable(name: "loop_fn", arg: 2, scope: !4244, file: !3, line: 1405, type: !665)
!4250 = !DILocalVariable(name: "data", arg: 3, scope: !4244, file: !3, line: 1405, type: !665)
!4251 = !DILocalVariable(name: "new_data", arg: 4, scope: !4244, file: !3, line: 1406, type: !665)
!4252 = !DILocalVariable(name: "n_threads", arg: 5, scope: !4244, file: !3, line: 1406, type: !7)
!4253 = !DILocalVariable(name: "gsi", scope: !4244, file: !3, line: 1408, type: !2006)
!4254 = !DILocalVariable(name: "bb", scope: !4244, file: !3, line: 1409, type: !927)
!4255 = !DILocalVariable(name: "paral_bb", scope: !4244, file: !3, line: 1409, type: !927)
!4256 = !DILocalVariable(name: "for_bb", scope: !4244, file: !3, line: 1409, type: !927)
!4257 = !DILocalVariable(name: "ex_bb", scope: !4244, file: !3, line: 1409, type: !927)
!4258 = !DILocalVariable(name: "t", scope: !4244, file: !3, line: 1410, type: !665)
!4259 = !DILocalVariable(name: "param", scope: !4244, file: !3, line: 1410, type: !665)
!4260 = !DILocalVariable(name: "stmt", scope: !4244, file: !3, line: 1411, type: !486)
!4261 = !DILocalVariable(name: "for_stmt", scope: !4244, file: !3, line: 1411, type: !486)
!4262 = !DILocalVariable(name: "phi", scope: !4244, file: !3, line: 1411, type: !486)
!4263 = !DILocalVariable(name: "cond_stmt", scope: !4244, file: !3, line: 1411, type: !486)
!4264 = !DILocalVariable(name: "cvar", scope: !4244, file: !3, line: 1412, type: !665)
!4265 = !DILocalVariable(name: "cvar_init", scope: !4244, file: !3, line: 1412, type: !665)
!4266 = !DILocalVariable(name: "initvar", scope: !4244, file: !3, line: 1412, type: !665)
!4267 = !DILocalVariable(name: "cvar_next", scope: !4244, file: !3, line: 1412, type: !665)
!4268 = !DILocalVariable(name: "cvar_base", scope: !4244, file: !3, line: 1412, type: !665)
!4269 = !DILocalVariable(name: "type", scope: !4244, file: !3, line: 1412, type: !665)
!4270 = !DILocalVariable(name: "exit", scope: !4244, file: !3, line: 1413, type: !525)
!4271 = !DILocalVariable(name: "nexit", scope: !4244, file: !3, line: 1413, type: !525)
!4272 = !DILocalVariable(name: "guard", scope: !4244, file: !3, line: 1413, type: !525)
!4273 = !DILocalVariable(name: "end", scope: !4244, file: !3, line: 1413, type: !525)
!4274 = !DILocalVariable(name: "e", scope: !4244, file: !3, line: 1413, type: !525)
!4275 = !DILocalVariable(name: "locus", scope: !4276, file: !3, line: 1476, type: !479)
!4276 = distinct !DILexicalBlock(scope: !4277, file: !3, line: 1475, column: 5)
!4277 = distinct !DILexicalBlock(scope: !4278, file: !3, line: 1474, column: 3)
!4278 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 1474, column: 3)
!4279 = !DILocalVariable(name: "def", scope: !4276, file: !3, line: 1477, type: !665)
!4280 = !DILocation(line: 0, scope: !4244)
!4281 = !DILocation(line: 1408, column: 3, scope: !4244)
!4282 = !DILocation(line: 1413, column: 3, scope: !4244)
!4283 = !DILocation(line: 1416, column: 8, scope: !4244)
!4284 = !DILocation(line: 1416, column: 36, scope: !4244)
!4285 = !DILocation(line: 1417, column: 14, scope: !4244)
!4286 = !DILocation(line: 1418, column: 9, scope: !4244)
!4287 = !DILocation(line: 1420, column: 7, scope: !4244)
!4288 = !DILocation(line: 1422, column: 22, scope: !4244)
!4289 = !DILocation(line: 1422, column: 41, scope: !4244)
!4290 = !DILocation(line: 1422, column: 7, scope: !4244)
!4291 = !DILocation(line: 1421, column: 3, scope: !4244)
!4292 = !DILocation(line: 1422, column: 5, scope: !4244)
!4293 = !DILocation(line: 1423, column: 10, scope: !4244)
!4294 = !DILocation(line: 1425, column: 3, scope: !4244)
!4295 = !DILocation(line: 1428, column: 7, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4244, file: !3, line: 1428, column: 7)
!4297 = !DILocation(line: 1428, column: 7, scope: !4244)
!4298 = !DILocation(line: 1430, column: 13, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 1429, column: 5)
!4300 = !DILocation(line: 1432, column: 30, scope: !4299)
!4301 = !DILocation(line: 1432, column: 15, scope: !4299)
!4302 = !DILocation(line: 1433, column: 14, scope: !4299)
!4303 = !DILocation(line: 1434, column: 7, scope: !4299)
!4304 = !DILocation(line: 1435, column: 7, scope: !4299)
!4305 = !DILocation(line: 1435, column: 33, scope: !4299)
!4306 = !DILocation(line: 1437, column: 14, scope: !4299)
!4307 = !DILocation(line: 1439, column: 7, scope: !4299)
!4308 = !DILocation(line: 1440, column: 7, scope: !4299)
!4309 = !DILocation(line: 1440, column: 36, scope: !4299)
!4310 = !DILocation(line: 1441, column: 5, scope: !4299)
!4311 = !DILocation(line: 1444, column: 30, scope: !4244)
!4312 = !DILocation(line: 1444, column: 8, scope: !4244)
!4313 = !DILocation(line: 1445, column: 9, scope: !4244)
!4314 = !DILocation(line: 1446, column: 27, scope: !4244)
!4315 = !DILocation(line: 1446, column: 3, scope: !4244)
!4316 = !DILocation(line: 1449, column: 3, scope: !4244)
!4317 = !DILocation(line: 1450, column: 32, scope: !4244)
!4318 = !DILocation(line: 1450, column: 15, scope: !4244)
!4319 = !DILocation(line: 1452, column: 10, scope: !4244)
!4320 = !DILocation(line: 1453, column: 15, scope: !4244)
!4321 = !DILocation(line: 1454, column: 9, scope: !4244)
!4322 = !DILocation(line: 1455, column: 15, scope: !4244)
!4323 = !DILocation(line: 1456, column: 13, scope: !4244)
!4324 = !DILocation(line: 1457, column: 3, scope: !4244)
!4325 = !DILocation(line: 1459, column: 15, scope: !4244)
!4326 = !DILocation(line: 1461, column: 9, scope: !4244)
!4327 = !DILocation(line: 1461, column: 28, scope: !4244)
!4328 = !DILocation(line: 1462, column: 3, scope: !4244)
!4329 = !DILocation(line: 1463, column: 3, scope: !4244)
!4330 = !DILocation(line: 1466, column: 24, scope: !4244)
!4331 = !DILocation(line: 1466, column: 12, scope: !4244)
!4332 = !DILocation(line: 1467, column: 33, scope: !4244)
!4333 = !DILocation(line: 1467, column: 11, scope: !4244)
!4334 = !DILocation(line: 1468, column: 46, scope: !4244)
!4335 = !DILocation(line: 1468, column: 3, scope: !4244)
!4336 = !DILocation(line: 1469, column: 3, scope: !4244)
!4337 = !DILocation(line: 1471, column: 11, scope: !4244)
!4338 = !DILocation(line: 1472, column: 27, scope: !4244)
!4339 = !DILocation(line: 1472, column: 3, scope: !4244)
!4340 = !DILocation(line: 1472, column: 35, scope: !4244)
!4341 = !DILocation(line: 1472, column: 41, scope: !4244)
!4342 = !DILocation(line: 1473, column: 26, scope: !4244)
!4343 = !DILocation(line: 1473, column: 9, scope: !4244)
!4344 = !DILocation(line: 1474, column: 14, scope: !4278)
!4345 = !DILocation(line: 1474, column: 8, scope: !4278)
!4346 = !DILocation(line: 1474, column: 39, scope: !4277)
!4347 = !DILocation(line: 1474, column: 38, scope: !4277)
!4348 = !DILocation(line: 1474, column: 3, scope: !4278)
!4349 = !DILocation(line: 1478, column: 13, scope: !4276)
!4350 = !DILocation(line: 1479, column: 14, scope: !4276)
!4351 = !DILocation(line: 1481, column: 13, scope: !4276)
!4352 = !DILocation(line: 0, scope: !4276)
!4353 = !DILocation(line: 1483, column: 8, scope: !4276)
!4354 = !DILocation(line: 1482, column: 15, scope: !4276)
!4355 = !DILocation(line: 1484, column: 7, scope: !4276)
!4356 = !DILocation(line: 1486, column: 13, scope: !4276)
!4357 = !DILocation(line: 1487, column: 56, scope: !4276)
!4358 = !DILocation(line: 1487, column: 15, scope: !4276)
!4359 = !DILocation(line: 1488, column: 7, scope: !4276)
!4360 = !DILocation(line: 1474, column: 56, scope: !4277)
!4361 = !DILocation(line: 1474, column: 3, scope: !4277)
!4362 = distinct !{!4362, !4348, !4363}
!4363 = !DILocation(line: 1489, column: 5, scope: !4278)
!4364 = !DILocation(line: 1490, column: 33, scope: !4244)
!4365 = !DILocation(line: 1490, column: 39, scope: !4244)
!4366 = !DILocation(line: 1490, column: 46, scope: !4244)
!4367 = !DILocation(line: 1490, column: 7, scope: !4244)
!4368 = !DILocation(line: 1491, column: 3, scope: !4244)
!4369 = !DILocation(line: 1491, column: 20, scope: !4244)
!4370 = !DILocation(line: 1494, column: 3, scope: !4244)
!4371 = !DILocation(line: 1495, column: 10, scope: !4244)
!4372 = !DILocation(line: 1496, column: 7, scope: !4244)
!4373 = !DILocation(line: 1497, column: 3, scope: !4244)
!4374 = !DILocation(line: 1497, column: 32, scope: !4244)
!4375 = !DILocation(line: 1499, column: 14, scope: !4244)
!4376 = !DILocation(line: 1500, column: 3, scope: !4244)
!4377 = !DILocation(line: 1501, column: 3, scope: !4244)
!4378 = !DILocation(line: 1502, column: 42, scope: !4244)
!4379 = !DILocation(line: 1502, column: 3, scope: !4244)
!4380 = !DILocation(line: 1503, column: 41, scope: !4244)
!4381 = !DILocation(line: 1503, column: 3, scope: !4244)
!4382 = !DILocation(line: 1504, column: 41, scope: !4244)
!4383 = !DILocation(line: 1504, column: 3, scope: !4244)
!4384 = !DILocation(line: 1508, column: 9, scope: !4244)
!4385 = !DILocation(line: 1509, column: 3, scope: !4244)
!4386 = !DILocation(line: 1510, column: 3, scope: !4244)
!4387 = !DILocation(line: 1510, column: 31, scope: !4244)
!4388 = !DILocation(line: 1513, column: 9, scope: !4244)
!4389 = !DILocation(line: 1513, column: 28, scope: !4244)
!4390 = !DILocation(line: 1514, column: 10, scope: !4244)
!4391 = !DILocation(line: 1515, column: 3, scope: !4244)
!4392 = !DILocation(line: 1516, column: 33, scope: !4244)
!4393 = !DILocation(line: 1519, column: 9, scope: !4244)
!4394 = !DILocation(line: 1520, column: 27, scope: !4244)
!4395 = !DILocation(line: 1520, column: 3, scope: !4244)
!4396 = !DILocation(line: 1523, column: 1, scope: !4244)
!4397 = !DILocation(line: 1522, column: 3, scope: !4244)
!4398 = !DILocation(line: 1229, column: 3, scope: !2064)
!4399 = !DILocation(line: 1229, column: 8, scope: !2064)
!4400 = !DILocation(line: 1232, column: 31, scope: !2064)
!4401 = !DILocation(line: 0, scope: !2064)
!4402 = !DILocation(line: 1235, column: 37, scope: !2064)
!4403 = !DILocation(line: 1235, column: 3, scope: !2064)
!4404 = !DILocation(line: 0, scope: !2079)
!4405 = !DILocation(line: 1236, column: 3, scope: !2079)
!4406 = !DILocation(line: 1237, column: 3, scope: !2064)
!4407 = !DILocation(line: 1238, column: 10, scope: !2064)
!4408 = !DILocation(line: 1239, column: 36, scope: !2064)
!4409 = !DILocation(line: 1239, column: 52, scope: !2064)
!4410 = !DILocation(line: 1239, column: 10, scope: !2064)
!4411 = !DILocation(line: 1241, column: 10, scope: !2064)
!4412 = !DILocation(line: 1243, column: 8, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !2064, file: !3, line: 1243, column: 7)
!4414 = !DILocation(line: 1243, column: 7, scope: !2064)
!4415 = !DILocation(line: 1244, column: 30, scope: !4413)
!4416 = !DILocation(line: 1244, column: 28, scope: !4413)
!4417 = !DILocation(line: 1244, column: 5, scope: !4413)
!4418 = !DILocation(line: 1245, column: 19, scope: !2064)
!4419 = !DILocation(line: 1245, column: 43, scope: !2064)
!4420 = !DILocation(line: 1245, column: 3, scope: !2064)
!4421 = !DILocation(line: 1247, column: 3, scope: !2064)
!4422 = !DILocation(line: 1247, column: 22, scope: !2064)
!4423 = !DILocation(line: 1249, column: 3, scope: !2064)
!4424 = !DILocation(line: 1249, column: 26, scope: !2064)
!4425 = !DILocation(line: 1250, column: 25, scope: !2064)
!4426 = !DILocation(line: 1251, column: 22, scope: !2064)
!4427 = !DILocation(line: 1252, column: 3, scope: !2064)
!4428 = !DILocation(line: 1252, column: 27, scope: !2064)
!4429 = !DILocation(line: 1253, column: 24, scope: !2064)
!4430 = !DILocation(line: 1254, column: 3, scope: !2064)
!4431 = !DILocation(line: 1254, column: 23, scope: !2064)
!4432 = !DILocation(line: 1255, column: 25, scope: !2064)
!4433 = !DILocation(line: 1255, column: 3, scope: !2064)
!4434 = !DILocation(line: 1255, column: 23, scope: !2064)
!4435 = !DILocation(line: 1257, column: 7, scope: !2064)
!4436 = !DILocation(line: 1259, column: 3, scope: !2064)
!4437 = !DILocation(line: 1259, column: 23, scope: !2064)
!4438 = !DILocation(line: 1260, column: 22, scope: !2064)
!4439 = !DILocation(line: 1261, column: 3, scope: !2064)
!4440 = !DILocation(line: 1261, column: 22, scope: !2064)
!4441 = !DILocation(line: 1263, column: 7, scope: !2064)
!4442 = !DILocation(line: 1266, column: 3, scope: !2064)
!4443 = !DILocation(line: 1266, column: 23, scope: !2064)
!4444 = !DILocation(line: 1267, column: 23, scope: !2064)
!4445 = !DILocation(line: 1267, column: 3, scope: !2064)
!4446 = !DILocation(line: 1267, column: 21, scope: !2064)
!4447 = !DILocation(line: 1268, column: 3, scope: !2064)
!4448 = !DILocation(line: 1268, column: 20, scope: !2064)
!4449 = !DILocation(line: 1269, column: 3, scope: !2064)
!4450 = !DILocation(line: 1269, column: 17, scope: !2064)
!4451 = !DILocation(line: 1270, column: 3, scope: !2064)
!4452 = !DILocation(line: 1270, column: 25, scope: !2064)
!4453 = !DILocation(line: 1272, column: 3, scope: !2064)
!4454 = !DILocation(line: 1276, column: 3, scope: !2064)
!4455 = !DILocation(line: 1279, column: 1, scope: !2064)
!4456 = !DILocation(line: 1278, column: 3, scope: !2064)
!4457 = distinct !DISubprogram(name: "create_call_for_reduction", scope: !3, file: !3, line: 909, type: !4458, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4460)
!4458 = !DISubroutineType(types: !4459)
!4459 = !{null, !1113, !959, !2038}
!4460 = !{!4461, !4462, !4463}
!4461 = !DILocalVariable(name: "loop", arg: 1, scope: !4457, file: !3, line: 909, type: !1113)
!4462 = !DILocalVariable(name: "reduction_list", arg: 2, scope: !4457, file: !3, line: 909, type: !959)
!4463 = !DILocalVariable(name: "ld_st_data", arg: 3, scope: !4457, file: !3, line: 910, type: !2038)
!4464 = !DILocation(line: 0, scope: !4457)
!4465 = !DILocation(line: 912, column: 63, scope: !4457)
!4466 = !DILocation(line: 912, column: 3, scope: !4457)
!4467 = !DILocation(line: 914, column: 25, scope: !4457)
!4468 = !DILocation(line: 914, column: 54, scope: !4457)
!4469 = !DILocation(line: 914, column: 15, scope: !4457)
!4470 = !DILocation(line: 914, column: 23, scope: !4457)
!4471 = !DILocation(line: 915, column: 63, scope: !4457)
!4472 = !DILocation(line: 915, column: 3, scope: !4457)
!4473 = !DILocation(line: 916, column: 1, scope: !4457)
!4474 = distinct !DISubprogram(name: "single_succ", scope: !135, file: !135, line: 663, type: !4475, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4480)
!4475 = !DISubroutineType(types: !4476)
!4476 = !{!927, !4477}
!4477 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !487, line: 112, baseType: !4478)
!4478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4479, size: 64)
!4479 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !510)
!4480 = !{!4481}
!4481 = !DILocalVariable(name: "bb", arg: 1, scope: !4474, file: !135, line: 663, type: !4477)
!4482 = !DILocation(line: 0, scope: !4474)
!4483 = !DILocation(line: 665, column: 10, scope: !4474)
!4484 = !DILocation(line: 665, column: 33, scope: !4474)
!4485 = !DILocation(line: 665, column: 3, scope: !4474)
!4486 = distinct !DISubprogram(name: "single_succ_edge", scope: !135, file: !135, line: 643, type: !4487, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4489)
!4487 = !DISubroutineType(types: !4488)
!4488 = !{!525, !4477}
!4489 = !{!4490}
!4490 = !DILocalVariable(name: "bb", arg: 1, scope: !4486, file: !135, line: 643, type: !4477)
!4491 = !DILocation(line: 0, scope: !4486)
!4492 = !DILocation(line: 645, column: 3, scope: !4486)
!4493 = !DILocation(line: 646, column: 10, scope: !4486)
!4494 = !DILocation(line: 646, column: 3, scope: !4486)
!4495 = distinct !DISubprogram(name: "gimple_cond_lhs", scope: !391, file: !391, line: 2241, type: !3703, scopeLine: 2242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4496)
!4496 = !{!4497}
!4497 = !DILocalVariable(name: "gs", arg: 1, scope: !4495, file: !391, line: 2241, type: !3587)
!4498 = !DILocation(line: 0, scope: !4495)
!4499 = !DILocation(line: 2244, column: 10, scope: !4495)
!4500 = !DILocation(line: 2244, column: 3, scope: !4495)
!4501 = distinct !DISubprogram(name: "gimple_cond_rhs", scope: !391, file: !391, line: 2271, type: !3703, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4502)
!4502 = !{!4503}
!4503 = !DILocalVariable(name: "gs", arg: 1, scope: !4501, file: !391, line: 2271, type: !3587)
!4504 = !DILocation(line: 0, scope: !4501)
!4505 = !DILocation(line: 2274, column: 10, scope: !4501)
!4506 = !DILocation(line: 2274, column: 3, scope: !4501)
!4507 = distinct !DISubprogram(name: "make_ssa_name", scope: !3364, file: !3364, line: 1245, type: !4508, scopeLine: 1246, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4510)
!4508 = !DISubroutineType(types: !4509)
!4509 = !{!665, !665, !486}
!4510 = !{!4511, !4512}
!4511 = !DILocalVariable(name: "var", arg: 1, scope: !4507, file: !3364, line: 1245, type: !665)
!4512 = !DILocalVariable(name: "stmt", arg: 2, scope: !4507, file: !3364, line: 1245, type: !486)
!4513 = !DILocation(line: 0, scope: !4507)
!4514 = !DILocation(line: 1247, column: 28, scope: !4507)
!4515 = !DILocation(line: 1247, column: 10, scope: !4507)
!4516 = !DILocation(line: 1247, column: 3, scope: !4507)
!4517 = distinct !DISubprogram(name: "gimple_cond_set_lhs", scope: !391, file: !391, line: 2261, type: !4518, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4520)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{null, !486, !665}
!4520 = !{!4521, !4522}
!4521 = !DILocalVariable(name: "gs", arg: 1, scope: !4517, file: !391, line: 2261, type: !486)
!4522 = !DILocalVariable(name: "lhs", arg: 2, scope: !4517, file: !391, line: 2261, type: !665)
!4523 = !DILocation(line: 0, scope: !4517)
!4524 = !DILocation(line: 2264, column: 3, scope: !4517)
!4525 = !DILocation(line: 2265, column: 1, scope: !4517)
!4526 = distinct !DISubprogram(name: "update_stmt", scope: !391, file: !391, line: 1456, type: !4527, scopeLine: 1457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4529)
!4527 = !DISubroutineType(types: !4528)
!4528 = !{null, !486}
!4529 = !{!4530}
!4530 = !DILocalVariable(name: "s", arg: 1, scope: !4526, file: !391, line: 1456, type: !486)
!4531 = !DILocation(line: 0, scope: !4526)
!4532 = !DILocation(line: 1458, column: 7, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4526, file: !391, line: 1458, column: 7)
!4534 = !DILocation(line: 1458, column: 7, scope: !4526)
!4535 = !DILocation(line: 1460, column: 7, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4533, file: !391, line: 1459, column: 5)
!4537 = !DILocation(line: 1461, column: 7, scope: !4536)
!4538 = !DILocation(line: 1462, column: 5, scope: !4536)
!4539 = !DILocation(line: 1463, column: 1, scope: !4526)
!4540 = distinct !DISubprogram(name: "gsi_after_labels", scope: !391, file: !391, line: 4510, type: !4541, scopeLine: 4511, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4543)
!4541 = !DISubroutineType(types: !4542)
!4542 = !{!2006, !927}
!4543 = !{!4544, !4545}
!4544 = !DILocalVariable(name: "bb", arg: 1, scope: !4540, file: !391, line: 4510, type: !927)
!4545 = !DILocalVariable(name: "gsi", scope: !4540, file: !391, line: 4512, type: !2006)
!4546 = !DILocation(line: 0, scope: !4540)
!4547 = !DILocation(line: 4512, column: 24, scope: !4540)
!4548 = !DILocation(line: 4512, column: 30, scope: !4540)
!4549 = !DILocation(line: 4514, column: 3, scope: !4540)
!4550 = !DILocation(line: 4514, column: 11, scope: !4540)
!4551 = !DILocation(line: 4514, column: 27, scope: !4540)
!4552 = !DILocation(line: 4514, column: 43, scope: !4540)
!4553 = !DILocation(line: 4514, column: 30, scope: !4540)
!4554 = !DILocation(line: 4514, column: 59, scope: !4540)
!4555 = !DILocation(line: 4515, column: 5, scope: !4540)
!4556 = distinct !{!4556, !4549, !4557}
!4557 = !DILocation(line: 4515, column: 19, scope: !4540)
!4558 = !DILocation(line: 4517, column: 3, scope: !4540)
!4559 = distinct !DISubprogram(name: "single_succ_p", scope: !135, file: !135, line: 626, type: !4560, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4562)
!4560 = !DISubroutineType(types: !4561)
!4561 = !{!470, !4477}
!4562 = !{!4563}
!4563 = !DILocalVariable(name: "bb", arg: 1, scope: !4559, file: !135, line: 626, type: !4477)
!4564 = !DILocation(line: 0, scope: !4559)
!4565 = !DILocation(line: 628, column: 10, scope: !4559)
!4566 = !DILocation(line: 628, column: 33, scope: !4559)
!4567 = !DILocation(line: 628, column: 3, scope: !4559)
!4568 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !135, file: !135, line: 150, type: !4569, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4573)
!4569 = !DISubroutineType(types: !4570)
!4570 = !{!525, !4571, !7}
!4571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4572, size: 64)
!4572 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !518)
!4573 = !{!4574, !4575}
!4574 = !DILocalVariable(name: "vec_", arg: 1, scope: !4568, file: !135, line: 150, type: !4571)
!4575 = !DILocalVariable(name: "ix_", arg: 2, scope: !4568, file: !135, line: 150, type: !7)
!4576 = !DILocation(line: 0, scope: !4568)
!4577 = !DILocation(line: 150, column: 1, scope: !4568)
!4578 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !4579, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4581)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!7, !4571}
!4581 = !{!4582}
!4582 = !DILocalVariable(name: "vec_", arg: 1, scope: !4578, file: !135, line: 150, type: !4571)
!4583 = !DILocation(line: 0, scope: !4578)
!4584 = !DILocation(line: 150, column: 1, scope: !4578)
!4585 = distinct !DISubprogram(name: "gimple_set_op", scope: !391, file: !391, line: 1663, type: !4586, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4588)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{null, !486, !7, !665}
!4588 = !{!4589, !4590, !4591}
!4589 = !DILocalVariable(name: "gs", arg: 1, scope: !4585, file: !391, line: 1663, type: !486)
!4590 = !DILocalVariable(name: "i", arg: 2, scope: !4585, file: !391, line: 1663, type: !7)
!4591 = !DILocalVariable(name: "op", arg: 3, scope: !4585, file: !391, line: 1663, type: !665)
!4592 = !DILocation(line: 0, scope: !4585)
!4593 = !DILocation(line: 1665, column: 3, scope: !4585)
!4594 = !DILocation(line: 1671, column: 3, scope: !4585)
!4595 = !DILocation(line: 1671, column: 22, scope: !4585)
!4596 = !DILocation(line: 1672, column: 1, scope: !4585)
!4597 = distinct !DISubprogram(name: "gimple_num_ops", scope: !391, file: !391, line: 1596, type: !4598, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4600)
!4598 = !DISubroutineType(types: !4599)
!4599 = !{!7, !3587}
!4600 = !{!4601}
!4601 = !DILocalVariable(name: "gs", arg: 1, scope: !4597, file: !391, line: 1596, type: !3587)
!4602 = !DILocation(line: 0, scope: !4597)
!4603 = !DILocation(line: 1598, column: 21, scope: !4597)
!4604 = !DILocation(line: 1598, column: 3, scope: !4597)
!4605 = distinct !DISubprogram(name: "gsi_start_bb", scope: !391, file: !391, line: 4418, type: !4541, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4606)
!4606 = !{!4607, !4608, !4609}
!4607 = !DILocalVariable(name: "bb", arg: 1, scope: !4605, file: !391, line: 4418, type: !927)
!4608 = !DILocalVariable(name: "i", scope: !4605, file: !391, line: 4420, type: !2006)
!4609 = !DILocalVariable(name: "seq", scope: !4605, file: !391, line: 4421, type: !535)
!4610 = !DILocation(line: 0, scope: !4605)
!4611 = !DILocation(line: 4420, column: 24, scope: !4605)
!4612 = !DILocation(line: 4423, column: 9, scope: !4605)
!4613 = !DILocation(line: 4424, column: 11, scope: !4605)
!4614 = !DILocation(line: 4424, column: 5, scope: !4605)
!4615 = !DILocation(line: 4424, column: 9, scope: !4605)
!4616 = !DILocation(line: 4425, column: 5, scope: !4605)
!4617 = !DILocation(line: 4425, column: 9, scope: !4605)
!4618 = !DILocation(line: 4426, column: 5, scope: !4605)
!4619 = !DILocation(line: 4426, column: 8, scope: !4605)
!4620 = !DILocation(line: 4429, column: 1, scope: !4605)
!4621 = distinct !DISubprogram(name: "bb_seq", scope: !391, file: !391, line: 237, type: !4622, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4624)
!4622 = !DISubroutineType(types: !4623)
!4623 = !{!535, !4477}
!4624 = !{!4625}
!4625 = !DILocalVariable(name: "bb", arg: 1, scope: !4621, file: !391, line: 237, type: !4477)
!4626 = !DILocation(line: 0, scope: !4621)
!4627 = !DILocation(line: 239, column: 17, scope: !4621)
!4628 = !DILocation(line: 239, column: 23, scope: !4621)
!4629 = !DILocation(line: 239, column: 33, scope: !4621)
!4630 = !DILocation(line: 239, column: 43, scope: !4621)
!4631 = !DILocation(line: 239, column: 36, scope: !4621)
!4632 = !DILocation(line: 239, column: 10, scope: !4621)
!4633 = !DILocation(line: 239, column: 68, scope: !4621)
!4634 = !DILocation(line: 239, column: 3, scope: !4621)
!4635 = distinct !DISubprogram(name: "gimple_seq_first", scope: !391, file: !391, line: 159, type: !4636, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4641)
!4636 = !DISubroutineType(types: !4637)
!4637 = !{!540, !4638}
!4638 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !487, line: 67, baseType: !4639)
!4639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4640, size: 64)
!4640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !537)
!4641 = !{!4642}
!4642 = !DILocalVariable(name: "s", arg: 1, scope: !4635, file: !391, line: 159, type: !4638)
!4643 = !DILocation(line: 0, scope: !4635)
!4644 = !DILocation(line: 161, column: 10, scope: !4635)
!4645 = !DILocation(line: 161, column: 17, scope: !4635)
!4646 = !DILocation(line: 161, column: 3, scope: !4635)
!4647 = distinct !DISubprogram(name: "gimple_location", scope: !391, file: !391, line: 1139, type: !4648, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4650)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!505, !3587}
!4650 = !{!4651}
!4651 = !DILocalVariable(name: "g", arg: 1, scope: !4647, file: !391, line: 1139, type: !3587)
!4652 = !DILocation(line: 0, scope: !4647)
!4653 = !DILocation(line: 1141, column: 20, scope: !4647)
!4654 = !DILocation(line: 1141, column: 3, scope: !4647)
!4655 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !391, file: !391, line: 1694, type: !3703, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4656)
!4656 = !{!4657}
!4657 = !DILocalVariable(name: "gs", arg: 1, scope: !4655, file: !391, line: 1694, type: !3587)
!4658 = !DILocation(line: 0, scope: !4655)
!4659 = !DILocation(line: 1697, column: 10, scope: !4655)
!4660 = !DILocation(line: 1697, column: 3, scope: !4655)
!4661 = distinct !DISubprogram(name: "set_ssa_use_from_ptr", scope: !3364, file: !3364, line: 233, type: !4662, scopeLine: 234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4664)
!4662 = !DISubroutineType(types: !4663)
!4663 = !{null, !1858, !665}
!4664 = !{!4665, !4666}
!4665 = !DILocalVariable(name: "use", arg: 1, scope: !4661, file: !3364, line: 233, type: !1858)
!4666 = !DILocalVariable(name: "val", arg: 2, scope: !4661, file: !3364, line: 233, type: !665)
!4667 = !DILocation(line: 0, scope: !4661)
!4668 = !DILocation(line: 235, column: 3, scope: !4661)
!4669 = !DILocation(line: 236, column: 10, scope: !4661)
!4670 = !DILocation(line: 236, column: 15, scope: !4661)
!4671 = !DILocation(line: 237, column: 3, scope: !4661)
!4672 = !DILocation(line: 238, column: 1, scope: !4661)
!4673 = distinct !DISubprogram(name: "delink_imm_use", scope: !3364, file: !3364, line: 188, type: !4674, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4676)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{null, !1859}
!4676 = !{!4677}
!4677 = !DILocalVariable(name: "linknode", arg: 1, scope: !4673, file: !3364, line: 188, type: !1859)
!4678 = !DILocation(line: 0, scope: !4673)
!4679 = !DILocation(line: 191, column: 17, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4673, file: !3364, line: 191, column: 7)
!4681 = !DILocation(line: 191, column: 22, scope: !4680)
!4682 = !DILocation(line: 191, column: 7, scope: !4673)
!4683 = !DILocation(line: 194, column: 36, scope: !4673)
!4684 = !DILocation(line: 194, column: 19, scope: !4673)
!4685 = !DILocation(line: 194, column: 24, scope: !4673)
!4686 = !DILocation(line: 195, column: 36, scope: !4673)
!4687 = !DILocation(line: 195, column: 13, scope: !4673)
!4688 = !DILocation(line: 195, column: 24, scope: !4673)
!4689 = !DILocation(line: 196, column: 18, scope: !4673)
!4690 = !DILocation(line: 197, column: 18, scope: !4673)
!4691 = !DILocation(line: 198, column: 1, scope: !4673)
!4692 = distinct !DISubprogram(name: "link_imm_use", scope: !3364, file: !3364, line: 214, type: !4693, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4695)
!4693 = !DISubroutineType(types: !4694)
!4694 = !{null, !1859, !665}
!4695 = !{!4696, !4697, !4698}
!4696 = !DILocalVariable(name: "linknode", arg: 1, scope: !4692, file: !3364, line: 214, type: !1859)
!4697 = !DILocalVariable(name: "def", arg: 2, scope: !4692, file: !3364, line: 214, type: !665)
!4698 = !DILocalVariable(name: "root", scope: !4692, file: !3364, line: 216, type: !1859)
!4699 = !DILocation(line: 0, scope: !4692)
!4700 = !DILocation(line: 218, column: 8, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4692, file: !3364, line: 218, column: 7)
!4702 = !DILocation(line: 218, column: 12, scope: !4701)
!4703 = !DILocation(line: 218, column: 15, scope: !4701)
!4704 = !DILocation(line: 218, column: 31, scope: !4701)
!4705 = !DILocation(line: 218, column: 7, scope: !4692)
!4706 = !DILocation(line: 219, column: 15, scope: !4701)
!4707 = !DILocation(line: 219, column: 20, scope: !4701)
!4708 = !DILocation(line: 219, column: 5, scope: !4701)
!4709 = !DILocation(line: 222, column: 16, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4701, file: !3364, line: 221, column: 5)
!4711 = !DILocation(line: 227, column: 7, scope: !4710)
!4712 = !DILocation(line: 229, column: 1, scope: !4692)
!4713 = distinct !DISubprogram(name: "link_imm_use_to_list", scope: !3364, file: !3364, line: 202, type: !4714, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4716)
!4714 = !DISubroutineType(types: !4715)
!4715 = !{null, !1859, !1859}
!4716 = !{!4717, !4718}
!4717 = !DILocalVariable(name: "linknode", arg: 1, scope: !4713, file: !3364, line: 202, type: !1859)
!4718 = !DILocalVariable(name: "list", arg: 2, scope: !4713, file: !3364, line: 202, type: !1859)
!4719 = !DILocation(line: 0, scope: !4713)
!4720 = !DILocation(line: 206, column: 13, scope: !4713)
!4721 = !DILocation(line: 206, column: 18, scope: !4713)
!4722 = !DILocation(line: 207, column: 26, scope: !4713)
!4723 = !DILocation(line: 207, column: 13, scope: !4713)
!4724 = !DILocation(line: 207, column: 18, scope: !4713)
!4725 = !DILocation(line: 208, column: 9, scope: !4713)
!4726 = !DILocation(line: 208, column: 15, scope: !4713)
!4727 = !DILocation(line: 208, column: 20, scope: !4713)
!4728 = !DILocation(line: 209, column: 14, scope: !4713)
!4729 = !DILocation(line: 210, column: 1, scope: !4713)
!4730 = distinct !DISubprogram(name: "VEC_basic_block_heap_alloc", scope: !135, file: !135, line: 283, type: !4731, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4733)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!1994, !471}
!4733 = !{!4734}
!4734 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4730, file: !135, line: 283, type: !471)
!4735 = !DILocation(line: 0, scope: !4730)
!4736 = !DILocation(line: 283, column: 1, scope: !4730)
!4737 = distinct !DISubprogram(name: "VEC_basic_block_base_iterate", scope: !135, file: !135, line: 281, type: !4738, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4742)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!471, !4740, !7, !1993}
!4740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4741, size: 64)
!4741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !935)
!4742 = !{!4743, !4744, !4745}
!4743 = !DILocalVariable(name: "vec_", arg: 1, scope: !4737, file: !135, line: 281, type: !4740)
!4744 = !DILocalVariable(name: "ix_", arg: 2, scope: !4737, file: !135, line: 281, type: !7)
!4745 = !DILocalVariable(name: "ptr", arg: 3, scope: !4737, file: !135, line: 281, type: !1993)
!4746 = !DILocation(line: 0, scope: !4737)
!4747 = !DILocation(line: 281, column: 1, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4737, file: !135, line: 281, column: 1)
!4749 = !DILocation(line: 281, column: 1, scope: !4737)
!4750 = !DILocation(line: 281, column: 1, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4748, file: !135, line: 281, column: 1)
!4752 = !DILocation(line: 281, column: 1, scope: !4753)
!4753 = distinct !DILexicalBlock(scope: !4748, file: !135, line: 281, column: 1)
!4754 = !DILocation(line: 0, scope: !4748)
!4755 = distinct !DISubprogram(name: "eliminate_local_variables_stmt", scope: !3, file: !3, line: 508, type: !4756, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4758)
!4756 = !DISubroutineType(types: !4757)
!4757 = !{null, !525, !486, !959}
!4758 = !{!4759, !4760, !4761, !4762}
!4759 = !DILocalVariable(name: "entry", arg: 1, scope: !4755, file: !3, line: 508, type: !525)
!4760 = !DILocalVariable(name: "stmt", arg: 2, scope: !4755, file: !3, line: 508, type: !486)
!4761 = !DILocalVariable(name: "decl_address", arg: 3, scope: !4755, file: !3, line: 509, type: !959)
!4762 = !DILocalVariable(name: "dta", scope: !4755, file: !3, line: 511, type: !2000)
!4763 = !DILocation(line: 0, scope: !4755)
!4764 = !DILocation(line: 511, column: 3, scope: !4755)
!4765 = !DILocation(line: 513, column: 3, scope: !4755)
!4766 = !DILocation(line: 514, column: 7, scope: !4755)
!4767 = !DILocation(line: 514, column: 13, scope: !4755)
!4768 = !DILocation(line: 515, column: 7, scope: !4755)
!4769 = !DILocation(line: 515, column: 20, scope: !4755)
!4770 = !DILocation(line: 516, column: 7, scope: !4755)
!4771 = !DILocation(line: 516, column: 15, scope: !4755)
!4772 = !DILocation(line: 518, column: 7, scope: !4773)
!4773 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 518, column: 7)
!4774 = !DILocation(line: 518, column: 7, scope: !4755)
!4775 = !DILocation(line: 519, column: 5, scope: !4773)
!4776 = !DILocation(line: 522, column: 61, scope: !4773)
!4777 = !DILocation(line: 522, column: 5, scope: !4773)
!4778 = !DILocation(line: 524, column: 11, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 524, column: 7)
!4780 = !DILocation(line: 524, column: 7, scope: !4779)
!4781 = !DILocation(line: 524, column: 7, scope: !4755)
!4782 = !DILocation(line: 525, column: 5, scope: !4779)
!4783 = !DILocation(line: 526, column: 1, scope: !4755)
!4784 = distinct !DISubprogram(name: "VEC_basic_block_heap_free", scope: !135, file: !135, line: 283, type: !4785, scopeLine: 283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4788)
!4785 = !DISubroutineType(types: !4786)
!4786 = !{null, !4787}
!4787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!4788 = !{!4789}
!4789 = !DILocalVariable(name: "vec_", arg: 1, scope: !4784, file: !135, line: 283, type: !4787)
!4790 = !DILocation(line: 0, scope: !4784)
!4791 = !DILocation(line: 283, column: 1, scope: !4792)
!4792 = distinct !DILexicalBlock(scope: !4784, file: !135, line: 283, column: 1)
!4793 = !DILocation(line: 283, column: 1, scope: !4784)
!4794 = distinct !DISubprogram(name: "gimple_debug_bind_p", scope: !391, file: !391, line: 3257, type: !3734, scopeLine: 3258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4795)
!4795 = !{!4796}
!4796 = !DILocalVariable(name: "s", arg: 1, scope: !4794, file: !391, line: 3257, type: !3587)
!4797 = !DILocation(line: 0, scope: !4794)
!4798 = !DILocation(line: 3259, column: 7, scope: !4799)
!4799 = distinct !DILexicalBlock(scope: !4794, file: !391, line: 3259, column: 7)
!4800 = !DILocation(line: 3259, column: 7, scope: !4794)
!4801 = !DILocation(line: 3260, column: 22, scope: !4799)
!4802 = !DILocation(line: 3260, column: 30, scope: !4799)
!4803 = !DILocation(line: 3260, column: 12, scope: !4799)
!4804 = !DILocation(line: 3260, column: 5, scope: !4799)
!4805 = !DILocation(line: 3263, column: 1, scope: !4794)
!4806 = distinct !DISubprogram(name: "gimple_debug_bind_get_value_ptr", scope: !391, file: !391, line: 3294, type: !3373, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4807)
!4807 = !{!4808}
!4808 = !DILocalVariable(name: "dbg", arg: 1, scope: !4806, file: !391, line: 3294, type: !486)
!4809 = !DILocation(line: 0, scope: !4806)
!4810 = !DILocation(line: 3300, column: 10, scope: !4806)
!4811 = !DILocation(line: 3300, column: 3, scope: !4806)
!4812 = distinct !DISubprogram(name: "eliminate_local_variables_1", scope: !3, file: !3, line: 445, type: !4813, scopeLine: 446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4815)
!4813 = !DISubroutineType(types: !4814)
!4814 = !{!665, !1076, !1932, !475}
!4815 = !{!4816, !4817, !4818, !4819, !4821, !4822, !4823, !4824, !4825, !4826}
!4816 = !DILocalVariable(name: "tp", arg: 1, scope: !4812, file: !3, line: 445, type: !1076)
!4817 = !DILocalVariable(name: "walk_subtrees", arg: 2, scope: !4812, file: !3, line: 445, type: !1932)
!4818 = !DILocalVariable(name: "data", arg: 3, scope: !4812, file: !3, line: 445, type: !475)
!4819 = !DILocalVariable(name: "dta", scope: !4812, file: !3, line: 447, type: !4820)
!4820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1999)
!4821 = !DILocalVariable(name: "t", scope: !4812, file: !3, line: 448, type: !665)
!4822 = !DILocalVariable(name: "var", scope: !4812, file: !3, line: 448, type: !665)
!4823 = !DILocalVariable(name: "addr", scope: !4812, file: !3, line: 448, type: !665)
!4824 = !DILocalVariable(name: "addr_type", scope: !4812, file: !3, line: 448, type: !665)
!4825 = !DILocalVariable(name: "type", scope: !4812, file: !3, line: 448, type: !665)
!4826 = !DILocalVariable(name: "obj", scope: !4812, file: !3, line: 448, type: !665)
!4827 = !DILocation(line: 0, scope: !4812)
!4828 = !DILocation(line: 448, column: 12, scope: !4812)
!4829 = !DILocation(line: 450, column: 7, scope: !4830)
!4830 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 450, column: 7)
!4831 = !DILocation(line: 450, column: 7, scope: !4812)
!4832 = !DILocation(line: 452, column: 22, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4830, file: !3, line: 451, column: 5)
!4834 = !DILocation(line: 454, column: 12, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4833, file: !3, line: 454, column: 11)
!4836 = !DILocation(line: 454, column: 26, scope: !4835)
!4837 = !DILocation(line: 454, column: 29, scope: !4835)
!4838 = !DILocation(line: 454, column: 11, scope: !4833)
!4839 = !DILocation(line: 457, column: 14, scope: !4833)
!4840 = !DILocation(line: 458, column: 19, scope: !4833)
!4841 = !DILocation(line: 459, column: 50, scope: !4833)
!4842 = !DILocation(line: 459, column: 62, scope: !4833)
!4843 = !DILocation(line: 459, column: 14, scope: !4833)
!4844 = !DILocation(line: 460, column: 13, scope: !4833)
!4845 = !DILocation(line: 460, column: 11, scope: !4833)
!4846 = !DILocation(line: 462, column: 12, scope: !4833)
!4847 = !DILocation(line: 462, column: 20, scope: !4833)
!4848 = !DILocation(line: 463, column: 7, scope: !4833)
!4849 = !DILocation(line: 466, column: 21, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 466, column: 7)
!4851 = !DILocation(line: 466, column: 7, scope: !4812)
!4852 = !DILocation(line: 479, column: 12, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 479, column: 11)
!4854 = distinct !DILexicalBlock(scope: !4850, file: !3, line: 467, column: 5)
!4855 = !DILocation(line: 479, column: 11, scope: !4854)
!4856 = !DILocation(line: 482, column: 22, scope: !4854)
!4857 = !DILocation(line: 483, column: 13, scope: !4854)
!4858 = !DILocation(line: 484, column: 13, scope: !4854)
!4859 = !DILocation(line: 485, column: 12, scope: !4860)
!4860 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 485, column: 11)
!4861 = !DILocation(line: 485, column: 16, scope: !4860)
!4862 = !DILocation(line: 485, column: 20, scope: !4860)
!4863 = !DILocation(line: 485, column: 36, scope: !4860)
!4864 = !DILocation(line: 485, column: 39, scope: !4860)
!4865 = !DILocation(line: 485, column: 11, scope: !4854)
!4866 = !DILocation(line: 488, column: 19, scope: !4854)
!4867 = !DILocation(line: 489, column: 52, scope: !4854)
!4868 = !DILocation(line: 489, column: 64, scope: !4854)
!4869 = !DILocation(line: 489, column: 14, scope: !4854)
!4870 = !DILocation(line: 490, column: 11, scope: !4854)
!4871 = !DILocation(line: 492, column: 12, scope: !4854)
!4872 = !DILocation(line: 492, column: 20, scope: !4854)
!4873 = !DILocation(line: 493, column: 7, scope: !4854)
!4874 = !DILocation(line: 496, column: 8, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4812, file: !3, line: 496, column: 7)
!4876 = !DILocation(line: 496, column: 7, scope: !4812)
!4877 = !DILocation(line: 497, column: 20, scope: !4875)
!4878 = !DILocation(line: 497, column: 5, scope: !4875)
!4879 = !DILocation(line: 500, column: 1, scope: !4812)
!4880 = distinct !DISubprogram(name: "is_gimple_debug", scope: !391, file: !391, line: 3249, type: !3734, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4881)
!4881 = !{!4882}
!4882 = !DILocalVariable(name: "gs", arg: 1, scope: !4880, file: !391, line: 3249, type: !3587)
!4883 = !DILocation(line: 0, scope: !4880)
!4884 = !DILocation(line: 3251, column: 10, scope: !4880)
!4885 = !DILocation(line: 3251, column: 27, scope: !4880)
!4886 = !DILocation(line: 3251, column: 3, scope: !4880)
!4887 = distinct !DISubprogram(name: "gimple_op_ptr", scope: !391, file: !391, line: 1647, type: !4888, scopeLine: 1648, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4890)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{!1076, !3587, !7}
!4890 = !{!4891, !4892}
!4891 = !DILocalVariable(name: "gs", arg: 1, scope: !4887, file: !391, line: 1647, type: !3587)
!4892 = !DILocalVariable(name: "i", arg: 2, scope: !4887, file: !391, line: 1647, type: !7)
!4893 = !DILocation(line: 0, scope: !4887)
!4894 = !DILocation(line: 1649, column: 7, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4887, file: !391, line: 1649, column: 7)
!4896 = !DILocation(line: 1649, column: 7, scope: !4887)
!4897 = !DILocation(line: 1654, column: 14, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4895, file: !391, line: 1650, column: 5)
!4899 = !DILocation(line: 1654, column: 50, scope: !4898)
!4900 = !DILocation(line: 1654, column: 7, scope: !4898)
!4901 = !DILocation(line: 0, scope: !4895)
!4902 = !DILocation(line: 1658, column: 1, scope: !4887)
!4903 = distinct !DISubprogram(name: "take_address_of", scope: !3, file: !3, line: 321, type: !4904, scopeLine: 322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4906)
!4904 = !DISubroutineType(types: !4905)
!4905 = !{!665, !665, !665, !525, !959}
!4906 = !{!4907, !4908, !4909, !4910, !4911, !4912, !4913, !4914, !4915, !4916, !4917, !4918, !4919, !4920}
!4907 = !DILocalVariable(name: "obj", arg: 1, scope: !4903, file: !3, line: 321, type: !665)
!4908 = !DILocalVariable(name: "type", arg: 2, scope: !4903, file: !3, line: 321, type: !665)
!4909 = !DILocalVariable(name: "entry", arg: 3, scope: !4903, file: !3, line: 321, type: !525)
!4910 = !DILocalVariable(name: "decl_address", arg: 4, scope: !4903, file: !3, line: 321, type: !959)
!4911 = !DILocalVariable(name: "uid", scope: !4903, file: !3, line: 323, type: !471)
!4912 = !DILocalVariable(name: "dslot", scope: !4903, file: !3, line: 324, type: !983)
!4913 = !DILocalVariable(name: "ielt", scope: !4903, file: !3, line: 325, type: !2025)
!4914 = !DILocalVariable(name: "nielt", scope: !4903, file: !3, line: 325, type: !2024)
!4915 = !DILocalVariable(name: "var_p", scope: !4903, file: !3, line: 326, type: !1076)
!4916 = !DILocalVariable(name: "name", scope: !4903, file: !3, line: 326, type: !665)
!4917 = !DILocalVariable(name: "bvar", scope: !4903, file: !3, line: 326, type: !665)
!4918 = !DILocalVariable(name: "addr", scope: !4903, file: !3, line: 326, type: !665)
!4919 = !DILocalVariable(name: "stmt", scope: !4903, file: !3, line: 327, type: !486)
!4920 = !DILocalVariable(name: "stmts", scope: !4903, file: !3, line: 328, type: !535)
!4921 = !DILocation(line: 0, scope: !4903)
!4922 = !DILocation(line: 325, column: 3, scope: !4903)
!4923 = !DILocation(line: 328, column: 3, scope: !4903)
!4924 = !DILocation(line: 332, column: 9, scope: !4903)
!4925 = !DILocation(line: 332, column: 7, scope: !4903)
!4926 = !DILocation(line: 333, column: 8, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 333, column: 3)
!4928 = !DILocation(line: 334, column: 29, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 333, column: 3)
!4930 = !DILocation(line: 0, scope: !4927)
!4931 = !DILocation(line: 334, column: 8, scope: !4929)
!4932 = !DILocation(line: 333, column: 3, scope: !4927)
!4933 = !DILocation(line: 335, column: 17, scope: !4929)
!4934 = !DILocation(line: 333, column: 3, scope: !4929)
!4935 = distinct !{!4935, !4932, !4936}
!4936 = !DILocation(line: 336, column: 5, scope: !4927)
!4937 = !DILocation(line: 337, column: 9, scope: !4903)
!4938 = !DILocation(line: 339, column: 8, scope: !4903)
!4939 = !DILocation(line: 339, column: 12, scope: !4903)
!4940 = !DILocation(line: 340, column: 11, scope: !4903)
!4941 = !DILocation(line: 341, column: 8, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 341, column: 7)
!4943 = !DILocation(line: 341, column: 7, scope: !4903)
!4944 = !DILocation(line: 343, column: 26, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 342, column: 5)
!4946 = !DILocation(line: 343, column: 34, scope: !4945)
!4947 = !DILocation(line: 343, column: 14, scope: !4945)
!4948 = !DILocation(line: 344, column: 30, scope: !4945)
!4949 = !DILocation(line: 344, column: 58, scope: !4945)
!4950 = !DILocation(line: 344, column: 48, scope: !4945)
!4951 = !DILocation(line: 344, column: 14, scope: !4945)
!4952 = !DILocation(line: 345, column: 7, scope: !4945)
!4953 = !DILocation(line: 346, column: 14, scope: !4945)
!4954 = !DILocation(line: 347, column: 14, scope: !4945)
!4955 = !DILocation(line: 348, column: 7, scope: !4945)
!4956 = !DILocation(line: 349, column: 7, scope: !4945)
!4957 = !DILocation(line: 351, column: 15, scope: !4945)
!4958 = !DILocation(line: 352, column: 14, scope: !4945)
!4959 = !DILocation(line: 352, column: 18, scope: !4945)
!4960 = !DILocation(line: 353, column: 14, scope: !4945)
!4961 = !DILocation(line: 353, column: 17, scope: !4945)
!4962 = !DILocation(line: 354, column: 14, scope: !4945)
!4963 = !DILocation(line: 355, column: 5, scope: !4945)
!4964 = !DILocation(line: 357, column: 46, scope: !4942)
!4965 = !DILocation(line: 0, scope: !4942)
!4966 = !DILocation(line: 359, column: 13, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 359, column: 7)
!4968 = !DILocation(line: 359, column: 7, scope: !4903)
!4969 = !DILocation(line: 361, column: 16, scope: !4970)
!4970 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 360, column: 5)
!4971 = !DILocation(line: 361, column: 14, scope: !4970)
!4972 = !DILocation(line: 362, column: 48, scope: !4970)
!4973 = !DILocation(line: 362, column: 53, scope: !4970)
!4974 = !DILocation(line: 362, column: 36, scope: !4970)
!4975 = !DILocation(line: 362, column: 14, scope: !4970)
!4976 = !DILocation(line: 364, column: 32, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 364, column: 11)
!4978 = !DILocation(line: 364, column: 12, scope: !4977)
!4979 = !DILocation(line: 364, column: 11, scope: !4970)
!4980 = !DILocation(line: 365, column: 43, scope: !4977)
!4981 = !DILocation(line: 365, column: 2, scope: !4977)
!4982 = !DILocation(line: 368, column: 7, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 368, column: 7)
!4984 = !DILocation(line: 368, column: 24, scope: !4983)
!4985 = !DILocation(line: 368, column: 7, scope: !4903)
!4986 = !DILocation(line: 370, column: 36, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 369, column: 5)
!4988 = !DILocation(line: 370, column: 14, scope: !4987)
!4989 = !DILocation(line: 372, column: 32, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4987, file: !3, line: 372, column: 11)
!4991 = !DILocation(line: 372, column: 12, scope: !4990)
!4992 = !DILocation(line: 372, column: 11, scope: !4987)
!4993 = !DILocation(line: 373, column: 43, scope: !4990)
!4994 = !DILocation(line: 373, column: 2, scope: !4990)
!4995 = !DILocation(line: 377, column: 1, scope: !4903)
!4996 = !DILocation(line: 376, column: 3, scope: !4903)
!4997 = distinct !DISubprogram(name: "handled_component_p", scope: !151, file: !151, line: 4551, type: !4998, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5003)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!470, !5000}
!5000 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !487, line: 59, baseType: !5001)
!5001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5002, size: 64)
!5002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !667)
!5003 = !{!5004}
!5004 = !DILocalVariable(name: "t", arg: 1, scope: !4997, file: !151, line: 4551, type: !5000)
!5005 = !DILocation(line: 0, scope: !4997)
!5006 = !DILocation(line: 4553, column: 11, scope: !4997)
!5007 = !DILocation(line: 4553, column: 3, scope: !4997)
!5008 = !DILocation(line: 4565, column: 7, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !4997, file: !151, line: 4554, column: 5)
!5010 = !DILocation(line: 0, scope: !5009)
!5011 = !DILocation(line: 4567, column: 1, scope: !4997)
!5012 = distinct !DISubprogram(name: "gimple_assign_set_lhs", scope: !391, file: !391, line: 1714, type: !4518, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5013)
!5013 = !{!5014, !5015}
!5014 = !DILocalVariable(name: "gs", arg: 1, scope: !5012, file: !391, line: 1714, type: !486)
!5015 = !DILocalVariable(name: "lhs", arg: 2, scope: !5012, file: !391, line: 1714, type: !665)
!5016 = !DILocation(line: 0, scope: !5012)
!5017 = !DILocation(line: 1717, column: 3, scope: !5012)
!5018 = !DILocation(line: 1719, column: 7, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5012, file: !391, line: 1719, column: 7)
!5020 = !DILocation(line: 1719, column: 11, scope: !5019)
!5021 = !DILocation(line: 1719, column: 14, scope: !5019)
!5022 = !DILocation(line: 1719, column: 30, scope: !5019)
!5023 = !DILocation(line: 1719, column: 7, scope: !5012)
!5024 = !DILocation(line: 1720, column: 5, scope: !5019)
!5025 = !DILocation(line: 1720, column: 29, scope: !5019)
!5026 = !DILocation(line: 1721, column: 1, scope: !5012)
!5027 = distinct !DISubprogram(name: "gimple_seq_empty_p", scope: !391, file: !391, line: 215, type: !5028, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5030)
!5028 = !DISubroutineType(types: !5029)
!5029 = !{!470, !4638}
!5030 = !{!5031}
!5031 = !DILocalVariable(name: "s", arg: 1, scope: !5027, file: !391, line: 215, type: !4638)
!5032 = !DILocation(line: 0, scope: !5027)
!5033 = !DILocation(line: 217, column: 12, scope: !5027)
!5034 = !DILocation(line: 217, column: 20, scope: !5027)
!5035 = !DILocation(line: 217, column: 26, scope: !5027)
!5036 = !DILocation(line: 217, column: 32, scope: !5027)
!5037 = !DILocation(line: 217, column: 3, scope: !5027)
!5038 = distinct !DISubprogram(name: "single_pred", scope: !135, file: !135, line: 672, type: !4475, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5039)
!5039 = !{!5040}
!5040 = !DILocalVariable(name: "bb", arg: 1, scope: !5038, file: !135, line: 672, type: !4477)
!5041 = !DILocation(line: 0, scope: !5038)
!5042 = !DILocation(line: 674, column: 10, scope: !5038)
!5043 = !DILocation(line: 674, column: 33, scope: !5038)
!5044 = !DILocation(line: 674, column: 3, scope: !5038)
!5045 = distinct !DISubprogram(name: "name_to_copy_elt_hash", scope: !3, file: !3, line: 238, type: !967, scopeLine: 239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5046)
!5046 = !{!5047, !5048}
!5047 = !DILocalVariable(name: "aa", arg: 1, scope: !5045, file: !3, line: 238, type: !970)
!5048 = !DILocalVariable(name: "a", scope: !5045, file: !3, line: 240, type: !2029)
!5049 = !DILocation(line: 0, scope: !5045)
!5050 = !DILocation(line: 242, column: 25, scope: !5045)
!5051 = !DILocation(line: 242, column: 3, scope: !5045)
!5052 = distinct !DISubprogram(name: "name_to_copy_elt_eq", scope: !3, file: !3, line: 229, type: !975, scopeLine: 230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5053)
!5053 = !{!5054, !5055, !5056, !5057}
!5054 = !DILocalVariable(name: "aa", arg: 1, scope: !5052, file: !3, line: 229, type: !970)
!5055 = !DILocalVariable(name: "bb", arg: 2, scope: !5052, file: !3, line: 229, type: !970)
!5056 = !DILocalVariable(name: "a", scope: !5052, file: !3, line: 231, type: !2029)
!5057 = !DILocalVariable(name: "b", scope: !5052, file: !3, line: 232, type: !2029)
!5058 = !DILocation(line: 0, scope: !5052)
!5059 = !DILocation(line: 234, column: 13, scope: !5052)
!5060 = !DILocation(line: 234, column: 27, scope: !5052)
!5061 = !DILocation(line: 234, column: 21, scope: !5052)
!5062 = !DILocation(line: 234, column: 3, scope: !5052)
!5063 = distinct !DISubprogram(name: "separate_decls_in_region_stmt", scope: !3, file: !3, line: 673, type: !5064, scopeLine: 675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5066)
!5064 = !DISubroutineType(types: !5065)
!5065 = !{null, !525, !525, !486, !959, !959}
!5066 = !{!5067, !5068, !5069, !5070, !5071, !5072, !5073, !5074, !5087, !5088, !5089}
!5067 = !DILocalVariable(name: "entry", arg: 1, scope: !5063, file: !3, line: 673, type: !525)
!5068 = !DILocalVariable(name: "exit", arg: 2, scope: !5063, file: !3, line: 673, type: !525)
!5069 = !DILocalVariable(name: "stmt", arg: 3, scope: !5063, file: !3, line: 673, type: !486)
!5070 = !DILocalVariable(name: "name_copies", arg: 4, scope: !5063, file: !3, line: 674, type: !959)
!5071 = !DILocalVariable(name: "decl_copies", arg: 5, scope: !5063, file: !3, line: 674, type: !959)
!5072 = !DILocalVariable(name: "use", scope: !5063, file: !3, line: 676, type: !1858)
!5073 = !DILocalVariable(name: "def", scope: !5063, file: !3, line: 677, type: !2036)
!5074 = !DILocalVariable(name: "oi", scope: !5063, file: !3, line: 678, type: !5075)
!5075 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssa_op_iter", file: !462, line: 140, baseType: !5076)
!5076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_iterator_d", file: !462, line: 131, size: 320, elements: !5077)
!5077 = !{!5078, !5079, !5080, !5082, !5084, !5085, !5086}
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !5076, file: !462, line: 133, baseType: !470, size: 8)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "iter_type", scope: !5076, file: !462, line: 134, baseType: !461, size: 32, offset: 32)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !5076, file: !462, line: 135, baseType: !5081, size: 64, offset: 64)
!5081 = !DIDerivedType(tag: DW_TAG_typedef, name: "def_optype_p", file: !462, line: 42, baseType: !1071)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !5076, file: !462, line: 136, baseType: !5083, size: 64, offset: 128)
!5083 = !DIDerivedType(tag: DW_TAG_typedef, name: "use_optype_p", file: !462, line: 50, baseType: !1078)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "phi_i", scope: !5076, file: !462, line: 137, baseType: !471, size: 32, offset: 192)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "num_phi", scope: !5076, file: !462, line: 138, baseType: !471, size: 32, offset: 224)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "phi_stmt", scope: !5076, file: !462, line: 139, baseType: !486, size: 64, offset: 256)
!5087 = !DILocalVariable(name: "name", scope: !5063, file: !3, line: 679, type: !665)
!5088 = !DILocalVariable(name: "copy", scope: !5063, file: !3, line: 679, type: !665)
!5089 = !DILocalVariable(name: "copy_name_p", scope: !5063, file: !3, line: 680, type: !470)
!5090 = !DILocation(line: 0, scope: !5063)
!5091 = !DILocation(line: 678, column: 3, scope: !5063)
!5092 = !DILocation(line: 682, column: 3, scope: !5063)
!5093 = !DILocation(line: 684, column: 3, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 684, column: 3)
!5095 = !DILocation(line: 0, scope: !5094)
!5096 = !DILocation(line: 684, column: 3, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 684, column: 3)
!5098 = !DILocation(line: 686, column: 12, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 685, column: 3)
!5100 = !DILocation(line: 687, column: 5, scope: !5099)
!5101 = !DILocation(line: 688, column: 12, scope: !5099)
!5102 = !DILocation(line: 690, column: 5, scope: !5099)
!5103 = distinct !{!5103, !5093, !5104}
!5104 = !DILocation(line: 691, column: 3, scope: !5094)
!5105 = !DILocation(line: 693, column: 3, scope: !5106)
!5106 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 693, column: 3)
!5107 = !DILocation(line: 0, scope: !5106)
!5108 = !DILocation(line: 693, column: 3, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 693, column: 3)
!5110 = !DILocation(line: 695, column: 12, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 694, column: 3)
!5112 = !DILocation(line: 696, column: 9, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 696, column: 9)
!5114 = !DILocation(line: 696, column: 26, scope: !5113)
!5115 = !DILocation(line: 696, column: 9, scope: !5111)
!5116 = !DILocation(line: 699, column: 19, scope: !5111)
!5117 = !DILocation(line: 700, column: 12, scope: !5111)
!5118 = !DILocation(line: 702, column: 5, scope: !5111)
!5119 = !DILocation(line: 703, column: 3, scope: !5111)
!5120 = distinct !{!5120, !5105, !5121}
!5121 = !DILocation(line: 703, column: 3, scope: !5106)
!5122 = !DILocation(line: 704, column: 1, scope: !5063)
!5123 = distinct !DISubprogram(name: "separate_decls_in_region_debug_bind", scope: !3, file: !3, line: 714, type: !5124, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5126)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{!470, !486, !959, !959}
!5126 = !{!5127, !5128, !5129, !5130, !5131, !5132, !5133, !5134, !5135, !5136, !5137}
!5127 = !DILocalVariable(name: "stmt", arg: 1, scope: !5123, file: !3, line: 714, type: !486)
!5128 = !DILocalVariable(name: "name_copies", arg: 2, scope: !5123, file: !3, line: 715, type: !959)
!5129 = !DILocalVariable(name: "decl_copies", arg: 3, scope: !5123, file: !3, line: 715, type: !959)
!5130 = !DILocalVariable(name: "use", scope: !5123, file: !3, line: 717, type: !1858)
!5131 = !DILocalVariable(name: "oi", scope: !5123, file: !3, line: 718, type: !5075)
!5132 = !DILocalVariable(name: "var", scope: !5123, file: !3, line: 719, type: !665)
!5133 = !DILocalVariable(name: "name", scope: !5123, file: !3, line: 719, type: !665)
!5134 = !DILocalVariable(name: "ielt", scope: !5123, file: !3, line: 720, type: !2025)
!5135 = !DILocalVariable(name: "elt", scope: !5123, file: !3, line: 721, type: !2031)
!5136 = !DILocalVariable(name: "slot", scope: !5123, file: !3, line: 722, type: !983)
!5137 = !DILocalVariable(name: "dslot", scope: !5123, file: !3, line: 722, type: !983)
!5138 = !DILocation(line: 0, scope: !5123)
!5139 = !DILocation(line: 718, column: 3, scope: !5123)
!5140 = !DILocation(line: 720, column: 3, scope: !5123)
!5141 = !DILocation(line: 721, column: 3, scope: !5123)
!5142 = !DILocation(line: 724, column: 9, scope: !5123)
!5143 = !DILocation(line: 725, column: 7, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 725, column: 7)
!5145 = !DILocation(line: 725, column: 23, scope: !5144)
!5146 = !DILocation(line: 725, column: 7, scope: !5123)
!5147 = !DILocation(line: 727, column: 3, scope: !5123)
!5148 = !DILocation(line: 728, column: 14, scope: !5123)
!5149 = !DILocation(line: 728, column: 8, scope: !5123)
!5150 = !DILocation(line: 728, column: 12, scope: !5123)
!5151 = !DILocation(line: 729, column: 11, scope: !5123)
!5152 = !DILocation(line: 730, column: 8, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 730, column: 7)
!5154 = !DILocation(line: 730, column: 7, scope: !5123)
!5155 = !DILocation(line: 732, column: 61, scope: !5123)
!5156 = !DILocation(line: 732, column: 70, scope: !5123)
!5157 = !DILocation(line: 732, column: 3, scope: !5123)
!5158 = !DILocation(line: 734, column: 3, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 734, column: 3)
!5160 = !DILocation(line: 0, scope: !5161)
!5161 = distinct !DILexicalBlock(scope: !5162, file: !3, line: 735, column: 3)
!5162 = distinct !DILexicalBlock(scope: !5159, file: !3, line: 734, column: 3)
!5163 = !DILocation(line: 0, scope: !5159)
!5164 = !DILocation(line: 734, column: 3, scope: !5162)
!5165 = !DILocation(line: 736, column: 12, scope: !5161)
!5166 = !DILocation(line: 737, column: 9, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 737, column: 9)
!5168 = !DILocation(line: 737, column: 26, scope: !5167)
!5169 = !DILocation(line: 737, column: 9, scope: !5161)
!5170 = !DILocation(line: 740, column: 19, scope: !5161)
!5171 = !DILocation(line: 740, column: 17, scope: !5161)
!5172 = !DILocation(line: 741, column: 12, scope: !5161)
!5173 = !DILocation(line: 742, column: 10, scope: !5174)
!5174 = distinct !DILexicalBlock(scope: !5161, file: !3, line: 742, column: 9)
!5175 = !DILocation(line: 742, column: 9, scope: !5161)
!5176 = !DILocation(line: 744, column: 2, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5174, file: !3, line: 743, column: 7)
!5178 = !DILocation(line: 745, column: 2, scope: !5177)
!5179 = !DILocation(line: 746, column: 2, scope: !5177)
!5180 = !DILocation(line: 749, column: 5, scope: !5161)
!5181 = !DILocation(line: 750, column: 3, scope: !5161)
!5182 = distinct !{!5182, !5158, !5183}
!5183 = !DILocation(line: 750, column: 3, scope: !5159)
!5184 = !DILocation(line: 753, column: 1, scope: !5123)
!5185 = distinct !DISubprogram(name: "add_field_for_name", scope: !3, file: !3, line: 779, type: !3945, scopeLine: 780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5186)
!5186 = !{!5187, !5188, !5189, !5191, !5192, !5193, !5194}
!5187 = !DILocalVariable(name: "slot", arg: 1, scope: !5185, file: !3, line: 779, type: !983)
!5188 = !DILocalVariable(name: "data", arg: 2, scope: !5185, file: !3, line: 779, type: !475)
!5189 = !DILocalVariable(name: "elt", scope: !5185, file: !3, line: 781, type: !5190)
!5190 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2037)
!5191 = !DILocalVariable(name: "type", scope: !5185, file: !3, line: 782, type: !665)
!5192 = !DILocalVariable(name: "name", scope: !5185, file: !3, line: 783, type: !665)
!5193 = !DILocalVariable(name: "var", scope: !5185, file: !3, line: 784, type: !665)
!5194 = !DILocalVariable(name: "field", scope: !5185, file: !3, line: 785, type: !665)
!5195 = !DILocation(line: 0, scope: !5185)
!5196 = !DILocation(line: 781, column: 68, scope: !5185)
!5197 = !DILocation(line: 782, column: 15, scope: !5185)
!5198 = !DILocation(line: 783, column: 15, scope: !5185)
!5199 = !DILocation(line: 784, column: 14, scope: !5185)
!5200 = !DILocation(line: 785, column: 16, scope: !5185)
!5201 = !DILocation(line: 788, column: 3, scope: !5185)
!5202 = !DILocation(line: 789, column: 8, scope: !5185)
!5203 = !DILocation(line: 789, column: 14, scope: !5185)
!5204 = !DILocation(line: 791, column: 3, scope: !5185)
!5205 = distinct !DISubprogram(name: "add_field_for_reduction", scope: !3, file: !3, line: 759, type: !3945, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5206)
!5206 = !{!5207, !5208, !5209, !5210, !5212, !5213}
!5207 = !DILocalVariable(name: "slot", arg: 1, scope: !5205, file: !3, line: 759, type: !983)
!5208 = !DILocalVariable(name: "data", arg: 2, scope: !5205, file: !3, line: 759, type: !475)
!5209 = !DILocalVariable(name: "red", scope: !5205, file: !3, line: 762, type: !3957)
!5210 = !DILocalVariable(name: "type", scope: !5205, file: !3, line: 763, type: !5211)
!5211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !665)
!5212 = !DILocalVariable(name: "var", scope: !5205, file: !3, line: 764, type: !665)
!5213 = !DILocalVariable(name: "field", scope: !5205, file: !3, line: 765, type: !665)
!5214 = !DILocation(line: 0, scope: !5205)
!5215 = !DILocation(line: 762, column: 64, scope: !5205)
!5216 = !DILocation(line: 763, column: 21, scope: !5205)
!5217 = !DILocation(line: 764, column: 14, scope: !5205)
!5218 = !DILocation(line: 765, column: 16, scope: !5205)
!5219 = !DILocation(line: 768, column: 3, scope: !5205)
!5220 = !DILocation(line: 770, column: 8, scope: !5205)
!5221 = !DILocation(line: 770, column: 14, scope: !5205)
!5222 = !DILocation(line: 772, column: 3, scope: !5205)
!5223 = distinct !DISubprogram(name: "create_loads_and_stores_for_name", scope: !3, file: !3, line: 1011, type: !3945, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5224)
!5224 = !{!5225, !5226, !5227, !5228, !5230, !5231, !5232, !5233, !5234, !5235}
!5225 = !DILocalVariable(name: "slot", arg: 1, scope: !5223, file: !3, line: 1011, type: !983)
!5226 = !DILocalVariable(name: "data", arg: 2, scope: !5223, file: !3, line: 1011, type: !475)
!5227 = !DILocalVariable(name: "elt", scope: !5223, file: !3, line: 1013, type: !5190)
!5228 = !DILocalVariable(name: "clsn_data", scope: !5223, file: !3, line: 1014, type: !5229)
!5229 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2038)
!5230 = !DILocalVariable(name: "t", scope: !5223, file: !3, line: 1015, type: !665)
!5231 = !DILocalVariable(name: "stmt", scope: !5223, file: !3, line: 1016, type: !486)
!5232 = !DILocalVariable(name: "gsi", scope: !5223, file: !3, line: 1017, type: !2006)
!5233 = !DILocalVariable(name: "type", scope: !5223, file: !3, line: 1018, type: !665)
!5234 = !DILocalVariable(name: "struct_type", scope: !5223, file: !3, line: 1019, type: !665)
!5235 = !DILocalVariable(name: "load_struct", scope: !5223, file: !3, line: 1020, type: !665)
!5236 = !DILocation(line: 0, scope: !5223)
!5237 = !DILocation(line: 1013, column: 68, scope: !5223)
!5238 = !DILocation(line: 1017, column: 3, scope: !5223)
!5239 = !DILocation(line: 1018, column: 15, scope: !5223)
!5240 = !DILocation(line: 1019, column: 22, scope: !5223)
!5241 = !DILocation(line: 1022, column: 9, scope: !5223)
!5242 = !DILocation(line: 1022, column: 33, scope: !5223)
!5243 = !DILocation(line: 1023, column: 7, scope: !5223)
!5244 = !DILocation(line: 1024, column: 10, scope: !5223)
!5245 = !DILocation(line: 1025, column: 3, scope: !5223)
!5246 = !DILocation(line: 1026, column: 3, scope: !5223)
!5247 = !DILocation(line: 1028, column: 9, scope: !5223)
!5248 = !DILocation(line: 1028, column: 33, scope: !5223)
!5249 = !DILocation(line: 1029, column: 17, scope: !5223)
!5250 = !DILocation(line: 1030, column: 7, scope: !5223)
!5251 = !DILocation(line: 1031, column: 10, scope: !5223)
!5252 = !DILocation(line: 1032, column: 3, scope: !5223)
!5253 = !DILocation(line: 1032, column: 37, scope: !5223)
!5254 = !DILocation(line: 1033, column: 3, scope: !5223)
!5255 = !DILocation(line: 1036, column: 1, scope: !5223)
!5256 = !DILocation(line: 1035, column: 3, scope: !5223)
!5257 = distinct !DISubprogram(name: "create_stores_for_reduction", scope: !3, file: !3, line: 988, type: !3945, scopeLine: 989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5258)
!5258 = !{!5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266}
!5259 = !DILocalVariable(name: "slot", arg: 1, scope: !5257, file: !3, line: 988, type: !983)
!5260 = !DILocalVariable(name: "data", arg: 2, scope: !5257, file: !3, line: 988, type: !475)
!5261 = !DILocalVariable(name: "red", scope: !5257, file: !3, line: 990, type: !3957)
!5262 = !DILocalVariable(name: "clsn_data", scope: !5257, file: !3, line: 991, type: !5229)
!5263 = !DILocalVariable(name: "t", scope: !5257, file: !3, line: 992, type: !665)
!5264 = !DILocalVariable(name: "stmt", scope: !5257, file: !3, line: 993, type: !486)
!5265 = !DILocalVariable(name: "gsi", scope: !5257, file: !3, line: 994, type: !2006)
!5266 = !DILocalVariable(name: "type", scope: !5257, file: !3, line: 995, type: !665)
!5267 = !DILocation(line: 0, scope: !5257)
!5268 = !DILocation(line: 990, column: 64, scope: !5257)
!5269 = !DILocation(line: 994, column: 3, scope: !5257)
!5270 = !DILocation(line: 995, column: 15, scope: !5257)
!5271 = !DILocation(line: 997, column: 9, scope: !5257)
!5272 = !DILocation(line: 997, column: 33, scope: !5257)
!5273 = !DILocation(line: 998, column: 7, scope: !5257)
!5274 = !DILocation(line: 999, column: 10, scope: !5257)
!5275 = !DILocation(line: 1000, column: 3, scope: !5257)
!5276 = !DILocation(line: 1001, column: 3, scope: !5257)
!5277 = !DILocation(line: 1004, column: 1, scope: !5257)
!5278 = !DILocation(line: 1003, column: 3, scope: !5257)
!5279 = distinct !DISubprogram(name: "create_final_loads_for_reduction", scope: !3, file: !3, line: 963, type: !5280, scopeLine: 965, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5282)
!5280 = !DISubroutineType(types: !5281)
!5281 = !{null, !959, !2038}
!5282 = !{!5283, !5284, !5285, !5286, !5287}
!5283 = !DILocalVariable(name: "reduction_list", arg: 1, scope: !5279, file: !3, line: 963, type: !959)
!5284 = !DILocalVariable(name: "ld_st_data", arg: 2, scope: !5279, file: !3, line: 964, type: !2038)
!5285 = !DILocalVariable(name: "gsi", scope: !5279, file: !3, line: 966, type: !2006)
!5286 = !DILocalVariable(name: "t", scope: !5279, file: !3, line: 967, type: !665)
!5287 = !DILocalVariable(name: "stmt", scope: !5279, file: !3, line: 968, type: !486)
!5288 = !DILocation(line: 0, scope: !5279)
!5289 = !DILocation(line: 966, column: 3, scope: !5279)
!5290 = !DILocation(line: 970, column: 9, scope: !5279)
!5291 = !DILocation(line: 970, column: 39, scope: !5279)
!5292 = !DILocation(line: 971, column: 7, scope: !5279)
!5293 = !DILocation(line: 972, column: 10, scope: !5279)
!5294 = !DILocation(line: 974, column: 3, scope: !5279)
!5295 = !DILocation(line: 975, column: 3, scope: !5279)
!5296 = !DILocation(line: 975, column: 40, scope: !5279)
!5297 = !DILocation(line: 977, column: 63, scope: !5279)
!5298 = !DILocation(line: 977, column: 3, scope: !5279)
!5299 = !DILocation(line: 979, column: 1, scope: !5279)
!5300 = distinct !DISubprogram(name: "single_pred_edge", scope: !135, file: !135, line: 653, type: !4487, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5301)
!5301 = !{!5302}
!5302 = !DILocalVariable(name: "bb", arg: 1, scope: !5300, file: !135, line: 653, type: !4477)
!5303 = !DILocation(line: 0, scope: !5300)
!5304 = !DILocation(line: 655, column: 3, scope: !5300)
!5305 = !DILocation(line: 656, column: 10, scope: !5300)
!5306 = !DILocation(line: 656, column: 3, scope: !5300)
!5307 = distinct !DISubprogram(name: "single_pred_p", scope: !135, file: !135, line: 634, type: !4560, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5308)
!5308 = !{!5309}
!5309 = !DILocalVariable(name: "bb", arg: 1, scope: !5307, file: !135, line: 634, type: !4477)
!5310 = !DILocation(line: 0, scope: !5307)
!5311 = !DILocation(line: 636, column: 10, scope: !5307)
!5312 = !DILocation(line: 636, column: 33, scope: !5307)
!5313 = !DILocation(line: 636, column: 3, scope: !5307)
!5314 = distinct !DISubprogram(name: "op_iter_init_phidef", scope: !3364, file: !3364, line: 939, type: !5315, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5318)
!5315 = !DISubroutineType(types: !5316)
!5316 = !{!2036, !5317, !486, !471}
!5317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5075, size: 64)
!5318 = !{!5319, !5320, !5321, !5322, !5323}
!5319 = !DILocalVariable(name: "ptr", arg: 1, scope: !5314, file: !3364, line: 939, type: !5317)
!5320 = !DILocalVariable(name: "phi", arg: 2, scope: !5314, file: !3364, line: 939, type: !486)
!5321 = !DILocalVariable(name: "flags", arg: 3, scope: !5314, file: !3364, line: 939, type: !471)
!5322 = !DILocalVariable(name: "phi_def", scope: !5314, file: !3364, line: 941, type: !665)
!5323 = !DILocalVariable(name: "comp", scope: !5314, file: !3364, line: 942, type: !471)
!5324 = !DILocation(line: 0, scope: !5314)
!5325 = !DILocation(line: 941, column: 18, scope: !5314)
!5326 = !DILocation(line: 944, column: 3, scope: !5314)
!5327 = !DILocation(line: 945, column: 8, scope: !5314)
!5328 = !DILocation(line: 945, column: 13, scope: !5314)
!5329 = !DILocation(line: 949, column: 11, scope: !5314)
!5330 = !DILocation(line: 953, column: 7, scope: !5314)
!5331 = !DILocation(line: 955, column: 17, scope: !5332)
!5332 = distinct !DILexicalBlock(scope: !5333, file: !3364, line: 954, column: 5)
!5333 = distinct !DILexicalBlock(scope: !5314, file: !3364, line: 953, column: 7)
!5334 = !DILocation(line: 956, column: 7, scope: !5332)
!5335 = !DILocation(line: 959, column: 8, scope: !5314)
!5336 = !DILocation(line: 959, column: 18, scope: !5314)
!5337 = !DILocation(line: 963, column: 10, scope: !5314)
!5338 = !DILocation(line: 963, column: 3, scope: !5314)
!5339 = !DILocation(line: 964, column: 1, scope: !5314)
!5340 = distinct !DISubprogram(name: "op_iter_init_def", scope: !3364, file: !3364, line: 780, type: !5315, scopeLine: 781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5341)
!5341 = !{!5342, !5343, !5344}
!5342 = !DILocalVariable(name: "ptr", arg: 1, scope: !5340, file: !3364, line: 780, type: !5317)
!5343 = !DILocalVariable(name: "stmt", arg: 2, scope: !5340, file: !3364, line: 780, type: !486)
!5344 = !DILocalVariable(name: "flags", arg: 3, scope: !5340, file: !3364, line: 780, type: !471)
!5345 = !DILocation(line: 0, scope: !5340)
!5346 = !DILocation(line: 784, column: 3, scope: !5340)
!5347 = !DILocation(line: 785, column: 8, scope: !5340)
!5348 = !DILocation(line: 785, column: 18, scope: !5340)
!5349 = !DILocation(line: 786, column: 10, scope: !5340)
!5350 = !DILocation(line: 786, column: 3, scope: !5340)
!5351 = distinct !DISubprogram(name: "op_iter_done", scope: !3364, file: !3364, line: 652, type: !5352, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5356)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!470, !5354}
!5354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5355, size: 64)
!5355 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5075)
!5356 = !{!5357}
!5357 = !DILocalVariable(name: "ptr", arg: 1, scope: !5351, file: !3364, line: 652, type: !5354)
!5358 = !DILocation(line: 0, scope: !5351)
!5359 = !DILocation(line: 654, column: 15, scope: !5351)
!5360 = !DILocation(line: 654, column: 3, scope: !5351)
!5361 = distinct !DISubprogram(name: "separate_decls_in_region_name", scope: !3, file: !3, line: 598, type: !5362, scopeLine: 601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5364)
!5362 = !DISubroutineType(types: !5363)
!5363 = !{!665, !665, !959, !959, !470}
!5364 = !{!5365, !5366, !5367, !5368, !5369, !5370, !5371, !5372, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380}
!5365 = !DILocalVariable(name: "name", arg: 1, scope: !5361, file: !3, line: 598, type: !665)
!5366 = !DILocalVariable(name: "name_copies", arg: 2, scope: !5361, file: !3, line: 599, type: !959)
!5367 = !DILocalVariable(name: "decl_copies", arg: 3, scope: !5361, file: !3, line: 599, type: !959)
!5368 = !DILocalVariable(name: "copy_name_p", arg: 4, scope: !5361, file: !3, line: 600, type: !470)
!5369 = !DILocalVariable(name: "copy", scope: !5361, file: !3, line: 602, type: !665)
!5370 = !DILocalVariable(name: "var", scope: !5361, file: !3, line: 602, type: !665)
!5371 = !DILocalVariable(name: "var_copy", scope: !5361, file: !3, line: 602, type: !665)
!5372 = !DILocalVariable(name: "idx", scope: !5361, file: !3, line: 603, type: !7)
!5373 = !DILocalVariable(name: "uid", scope: !5361, file: !3, line: 603, type: !7)
!5374 = !DILocalVariable(name: "nuid", scope: !5361, file: !3, line: 603, type: !7)
!5375 = !DILocalVariable(name: "ielt", scope: !5361, file: !3, line: 604, type: !2025)
!5376 = !DILocalVariable(name: "nielt", scope: !5361, file: !3, line: 604, type: !2024)
!5377 = !DILocalVariable(name: "elt", scope: !5361, file: !3, line: 605, type: !2031)
!5378 = !DILocalVariable(name: "nelt", scope: !5361, file: !3, line: 605, type: !2037)
!5379 = !DILocalVariable(name: "slot", scope: !5361, file: !3, line: 606, type: !983)
!5380 = !DILocalVariable(name: "dslot", scope: !5361, file: !3, line: 606, type: !983)
!5381 = !DILocation(line: 0, scope: !5361)
!5382 = !DILocation(line: 604, column: 3, scope: !5361)
!5383 = !DILocation(line: 605, column: 3, scope: !5361)
!5384 = !DILocation(line: 608, column: 7, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 608, column: 7)
!5386 = !DILocation(line: 608, column: 24, scope: !5385)
!5387 = !DILocation(line: 608, column: 7, scope: !5361)
!5388 = !DILocation(line: 611, column: 9, scope: !5361)
!5389 = !DILocation(line: 612, column: 7, scope: !5361)
!5390 = !DILocation(line: 612, column: 15, scope: !5361)
!5391 = !DILocation(line: 614, column: 8, scope: !5361)
!5392 = !DILocation(line: 613, column: 10, scope: !5361)
!5393 = !DILocation(line: 615, column: 7, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 615, column: 7)
!5395 = !DILocation(line: 615, column: 12, scope: !5394)
!5396 = !DILocation(line: 615, column: 15, scope: !5394)
!5397 = !DILocation(line: 615, column: 7, scope: !5361)
!5398 = !DILocation(line: 616, column: 49, scope: !5394)
!5399 = !DILocation(line: 616, column: 5, scope: !5394)
!5400 = !DILocation(line: 618, column: 9, scope: !5361)
!5401 = !DILocation(line: 619, column: 9, scope: !5361)
!5402 = !DILocation(line: 620, column: 8, scope: !5361)
!5403 = !DILocation(line: 620, column: 12, scope: !5361)
!5404 = !DILocation(line: 621, column: 11, scope: !5361)
!5405 = !DILocation(line: 622, column: 8, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 622, column: 7)
!5407 = !DILocation(line: 622, column: 7, scope: !5361)
!5408 = !DILocation(line: 624, column: 34, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5406, file: !3, line: 623, column: 5)
!5410 = !DILocation(line: 624, column: 51, scope: !5409)
!5411 = !DILocation(line: 624, column: 18, scope: !5409)
!5412 = !DILocation(line: 625, column: 38, scope: !5409)
!5413 = !DILocation(line: 625, column: 7, scope: !5409)
!5414 = !DILocation(line: 625, column: 36, scope: !5409)
!5415 = !DILocation(line: 626, column: 7, scope: !5409)
!5416 = !DILocation(line: 627, column: 15, scope: !5409)
!5417 = !DILocation(line: 628, column: 14, scope: !5409)
!5418 = !DILocation(line: 628, column: 18, scope: !5409)
!5419 = !DILocation(line: 629, column: 14, scope: !5409)
!5420 = !DILocation(line: 629, column: 17, scope: !5409)
!5421 = !DILocation(line: 630, column: 14, scope: !5409)
!5422 = !DILocation(line: 634, column: 14, scope: !5409)
!5423 = !DILocation(line: 635, column: 16, scope: !5409)
!5424 = !DILocation(line: 636, column: 15, scope: !5409)
!5425 = !DILocation(line: 637, column: 7, scope: !5409)
!5426 = !DILocation(line: 638, column: 15, scope: !5409)
!5427 = !DILocation(line: 639, column: 14, scope: !5409)
!5428 = !DILocation(line: 639, column: 18, scope: !5409)
!5429 = !DILocation(line: 640, column: 14, scope: !5409)
!5430 = !DILocation(line: 640, column: 17, scope: !5409)
!5431 = !DILocation(line: 641, column: 14, scope: !5409)
!5432 = !DILocation(line: 642, column: 5, scope: !5409)
!5433 = !DILocation(line: 644, column: 50, scope: !5406)
!5434 = !DILocation(line: 0, scope: !5406)
!5435 = !DILocation(line: 646, column: 7, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5361, file: !3, line: 646, column: 7)
!5437 = !DILocation(line: 646, column: 7, scope: !5361)
!5438 = !DILocation(line: 648, column: 14, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 647, column: 5)
!5440 = !DILocation(line: 649, column: 14, scope: !5439)
!5441 = !DILocation(line: 650, column: 13, scope: !5439)
!5442 = !DILocation(line: 650, column: 21, scope: !5439)
!5443 = !DILocation(line: 651, column: 13, scope: !5439)
!5444 = !DILocation(line: 651, column: 22, scope: !5439)
!5445 = !DILocation(line: 652, column: 13, scope: !5439)
!5446 = !DILocation(line: 652, column: 19, scope: !5439)
!5447 = !DILocation(line: 653, column: 13, scope: !5439)
!5448 = !DILocation(line: 654, column: 5, scope: !5439)
!5449 = !DILocation(line: 657, column: 7, scope: !5450)
!5450 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 656, column: 5)
!5451 = !DILocation(line: 0, scope: !5436)
!5452 = !DILocation(line: 661, column: 3, scope: !5361)
!5453 = !DILocation(line: 661, column: 23, scope: !5361)
!5454 = !DILocation(line: 662, column: 3, scope: !5361)
!5455 = !DILocation(line: 663, column: 1, scope: !5361)
!5456 = distinct !DISubprogram(name: "op_iter_next_def", scope: !3364, file: !3364, line: 681, type: !5457, scopeLine: 682, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5459)
!5457 = !DISubroutineType(types: !5458)
!5458 = !{!2036, !5317}
!5459 = !{!5460, !5461}
!5460 = !DILocalVariable(name: "ptr", arg: 1, scope: !5456, file: !3364, line: 681, type: !5317)
!5461 = !DILocalVariable(name: "def_p", scope: !5456, file: !3364, line: 683, type: !2036)
!5462 = !DILocation(line: 0, scope: !5456)
!5463 = !DILocation(line: 687, column: 12, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5456, file: !3364, line: 687, column: 7)
!5465 = !DILocation(line: 687, column: 7, scope: !5464)
!5466 = !DILocation(line: 687, column: 7, scope: !5456)
!5467 = !DILocation(line: 689, column: 15, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5464, file: !3364, line: 688, column: 5)
!5469 = !DILocation(line: 690, column: 30, scope: !5468)
!5470 = !DILocation(line: 690, column: 17, scope: !5468)
!5471 = !DILocation(line: 691, column: 7, scope: !5468)
!5472 = !DILocation(line: 693, column: 8, scope: !5456)
!5473 = !DILocation(line: 693, column: 13, scope: !5456)
!5474 = !DILocation(line: 694, column: 3, scope: !5456)
!5475 = !DILocation(line: 695, column: 1, scope: !5456)
!5476 = distinct !DISubprogram(name: "op_iter_init_phiuse", scope: !3364, file: !3364, line: 910, type: !5477, scopeLine: 911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5479)
!5477 = !DISubroutineType(types: !5478)
!5478 = !{!1858, !5317, !486, !471}
!5479 = !{!5480, !5481, !5482, !5483, !5484}
!5480 = !DILocalVariable(name: "ptr", arg: 1, scope: !5476, file: !3364, line: 910, type: !5317)
!5481 = !DILocalVariable(name: "phi", arg: 2, scope: !5476, file: !3364, line: 910, type: !486)
!5482 = !DILocalVariable(name: "flags", arg: 3, scope: !5476, file: !3364, line: 910, type: !471)
!5483 = !DILocalVariable(name: "phi_def", scope: !5476, file: !3364, line: 912, type: !665)
!5484 = !DILocalVariable(name: "comp", scope: !5476, file: !3364, line: 913, type: !471)
!5485 = !DILocation(line: 0, scope: !5476)
!5486 = !DILocation(line: 912, column: 18, scope: !5476)
!5487 = !DILocation(line: 915, column: 3, scope: !5476)
!5488 = !DILocation(line: 916, column: 8, scope: !5476)
!5489 = !DILocation(line: 916, column: 13, scope: !5476)
!5490 = !DILocation(line: 920, column: 11, scope: !5476)
!5491 = !DILocation(line: 923, column: 7, scope: !5476)
!5492 = !DILocation(line: 925, column: 17, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5494, file: !3364, line: 924, column: 5)
!5494 = distinct !DILexicalBlock(scope: !5476, file: !3364, line: 923, column: 7)
!5495 = !DILocation(line: 926, column: 7, scope: !5493)
!5496 = !DILocation(line: 929, column: 8, scope: !5476)
!5497 = !DILocation(line: 929, column: 17, scope: !5476)
!5498 = !DILocation(line: 930, column: 18, scope: !5476)
!5499 = !DILocation(line: 930, column: 8, scope: !5476)
!5500 = !DILocation(line: 930, column: 16, scope: !5476)
!5501 = !DILocation(line: 931, column: 8, scope: !5476)
!5502 = !DILocation(line: 931, column: 18, scope: !5476)
!5503 = !DILocation(line: 932, column: 10, scope: !5476)
!5504 = !DILocation(line: 932, column: 3, scope: !5476)
!5505 = !DILocation(line: 933, column: 1, scope: !5476)
!5506 = distinct !DISubprogram(name: "op_iter_init_use", scope: !3364, file: !3364, line: 768, type: !5477, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5507)
!5507 = !{!5508, !5509, !5510}
!5508 = !DILocalVariable(name: "ptr", arg: 1, scope: !5506, file: !3364, line: 768, type: !5317)
!5509 = !DILocalVariable(name: "stmt", arg: 2, scope: !5506, file: !3364, line: 768, type: !486)
!5510 = !DILocalVariable(name: "flags", arg: 3, scope: !5506, file: !3364, line: 768, type: !471)
!5511 = !DILocation(line: 0, scope: !5506)
!5512 = !DILocation(line: 772, column: 3, scope: !5506)
!5513 = !DILocation(line: 773, column: 8, scope: !5506)
!5514 = !DILocation(line: 773, column: 18, scope: !5506)
!5515 = !DILocation(line: 774, column: 10, scope: !5506)
!5516 = !DILocation(line: 774, column: 3, scope: !5506)
!5517 = distinct !DISubprogram(name: "expr_invariant_in_region_p", scope: !3, file: !3, line: 567, type: !5518, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5520)
!5518 = !DISubroutineType(types: !5519)
!5519 = !{!470, !525, !525, !665}
!5520 = !{!5521, !5522, !5523, !5524, !5525, !5526}
!5521 = !DILocalVariable(name: "entry", arg: 1, scope: !5517, file: !3, line: 567, type: !525)
!5522 = !DILocalVariable(name: "exit", arg: 2, scope: !5517, file: !3, line: 567, type: !525)
!5523 = !DILocalVariable(name: "expr", arg: 3, scope: !5517, file: !3, line: 567, type: !665)
!5524 = !DILocalVariable(name: "entry_bb", scope: !5517, file: !3, line: 569, type: !927)
!5525 = !DILocalVariable(name: "exit_bb", scope: !5517, file: !3, line: 570, type: !927)
!5526 = !DILocalVariable(name: "def_bb", scope: !5517, file: !3, line: 571, type: !927)
!5527 = !DILocation(line: 0, scope: !5517)
!5528 = !DILocation(line: 569, column: 33, scope: !5517)
!5529 = !DILocation(line: 570, column: 31, scope: !5517)
!5530 = !DILocation(line: 573, column: 7, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 573, column: 7)
!5532 = !DILocation(line: 573, column: 7, scope: !5517)
!5533 = !DILocation(line: 576, column: 7, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5517, file: !3, line: 576, column: 7)
!5535 = !DILocation(line: 576, column: 24, scope: !5534)
!5536 = !DILocation(line: 576, column: 7, scope: !5517)
!5537 = !DILocation(line: 578, column: 27, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5534, file: !3, line: 577, column: 5)
!5539 = !DILocation(line: 578, column: 16, scope: !5538)
!5540 = !DILocation(line: 579, column: 11, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5538, file: !3, line: 579, column: 11)
!5542 = !DILocation(line: 580, column: 4, scope: !5541)
!5543 = !DILocation(line: 580, column: 7, scope: !5541)
!5544 = !DILocation(line: 581, column: 4, scope: !5541)
!5545 = !DILocation(line: 581, column: 8, scope: !5541)
!5546 = !DILocation(line: 579, column: 11, scope: !5538)
!5547 = !DILocation(line: 584, column: 7, scope: !5538)
!5548 = !DILocation(line: 588, column: 1, scope: !5517)
!5549 = distinct !DISubprogram(name: "op_iter_next_use", scope: !3364, file: !3364, line: 659, type: !5550, scopeLine: 660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5552)
!5550 = !DISubroutineType(types: !5551)
!5551 = !{!1858, !5317}
!5552 = !{!5553, !5554}
!5553 = !DILocalVariable(name: "ptr", arg: 1, scope: !5549, file: !3364, line: 659, type: !5317)
!5554 = !DILocalVariable(name: "use_p", scope: !5549, file: !3364, line: 661, type: !1858)
!5555 = !DILocation(line: 0, scope: !5549)
!5556 = !DILocation(line: 665, column: 12, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5549, file: !3364, line: 665, column: 7)
!5558 = !DILocation(line: 665, column: 7, scope: !5557)
!5559 = !DILocation(line: 665, column: 7, scope: !5549)
!5560 = !DILocation(line: 667, column: 15, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5557, file: !3364, line: 666, column: 5)
!5562 = !DILocation(line: 668, column: 30, scope: !5561)
!5563 = !DILocation(line: 668, column: 17, scope: !5561)
!5564 = !DILocation(line: 669, column: 7, scope: !5561)
!5565 = !DILocation(line: 671, column: 12, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5549, file: !3364, line: 671, column: 7)
!5567 = !DILocation(line: 671, column: 25, scope: !5566)
!5568 = !DILocation(line: 671, column: 18, scope: !5566)
!5569 = !DILocation(line: 671, column: 7, scope: !5549)
!5570 = !DILocation(line: 673, column: 14, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5566, file: !3364, line: 672, column: 5)
!5572 = !DILocation(line: 673, column: 7, scope: !5571)
!5573 = !DILocation(line: 675, column: 8, scope: !5549)
!5574 = !DILocation(line: 675, column: 13, scope: !5549)
!5575 = !DILocation(line: 676, column: 3, scope: !5549)
!5576 = !DILocation(line: 677, column: 1, scope: !5549)
!5577 = distinct !DISubprogram(name: "clear_and_done_ssa_iter", scope: !3364, file: !3364, line: 729, type: !5578, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5580)
!5578 = !DISubroutineType(types: !5579)
!5579 = !{null, !5317}
!5580 = !{!5581}
!5581 = !DILocalVariable(name: "ptr", arg: 1, scope: !5577, file: !3364, line: 729, type: !5317)
!5582 = !DILocation(line: 0, scope: !5577)
!5583 = !DILocation(line: 731, column: 8, scope: !5577)
!5584 = !DILocation(line: 731, column: 13, scope: !5577)
!5585 = !DILocation(line: 732, column: 8, scope: !5577)
!5586 = !DILocation(line: 732, column: 13, scope: !5577)
!5587 = !DILocation(line: 733, column: 8, scope: !5577)
!5588 = !DILocation(line: 733, column: 18, scope: !5577)
!5589 = !DILocation(line: 734, column: 8, scope: !5577)
!5590 = !DILocation(line: 734, column: 14, scope: !5577)
!5591 = !DILocation(line: 735, column: 8, scope: !5577)
!5592 = !DILocation(line: 735, column: 16, scope: !5577)
!5593 = !DILocation(line: 736, column: 8, scope: !5577)
!5594 = !DILocation(line: 736, column: 17, scope: !5577)
!5595 = !DILocation(line: 737, column: 8, scope: !5577)
!5596 = !DILocation(line: 737, column: 13, scope: !5577)
!5597 = !DILocation(line: 738, column: 1, scope: !5577)
!5598 = distinct !DISubprogram(name: "op_iter_init", scope: !3364, file: !3364, line: 742, type: !5599, scopeLine: 743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5601)
!5599 = !DISubroutineType(types: !5600)
!5600 = !{null, !5317, !486, !471}
!5601 = !{!5602, !5603, !5604}
!5602 = !DILocalVariable(name: "ptr", arg: 1, scope: !5598, file: !3364, line: 742, type: !5317)
!5603 = !DILocalVariable(name: "stmt", arg: 2, scope: !5598, file: !3364, line: 742, type: !486)
!5604 = !DILocalVariable(name: "flags", arg: 3, scope: !5598, file: !3364, line: 742, type: !471)
!5605 = !DILocation(line: 0, scope: !5598)
!5606 = !DILocation(line: 746, column: 3, scope: !5598)
!5607 = !DILocation(line: 748, column: 22, scope: !5598)
!5608 = !DILocation(line: 748, column: 15, scope: !5598)
!5609 = !DILocation(line: 748, column: 52, scope: !5598)
!5610 = !DILocation(line: 748, column: 8, scope: !5598)
!5611 = !DILocation(line: 748, column: 13, scope: !5598)
!5612 = !DILocation(line: 749, column: 15, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5598, file: !3364, line: 749, column: 7)
!5614 = !DILocation(line: 750, column: 7, scope: !5613)
!5615 = !DILocation(line: 750, column: 10, scope: !5613)
!5616 = !DILocation(line: 751, column: 7, scope: !5613)
!5617 = !DILocation(line: 751, column: 10, scope: !5613)
!5618 = !DILocation(line: 751, column: 29, scope: !5613)
!5619 = !DILocation(line: 749, column: 7, scope: !5598)
!5620 = !DILocation(line: 752, column: 22, scope: !5613)
!5621 = !DILocation(line: 752, column: 28, scope: !5613)
!5622 = !DILocation(line: 752, column: 15, scope: !5613)
!5623 = !DILocation(line: 752, column: 5, scope: !5613)
!5624 = !DILocation(line: 753, column: 22, scope: !5598)
!5625 = !DILocation(line: 753, column: 15, scope: !5598)
!5626 = !DILocation(line: 753, column: 52, scope: !5598)
!5627 = !DILocation(line: 753, column: 8, scope: !5598)
!5628 = !DILocation(line: 753, column: 13, scope: !5598)
!5629 = !DILocation(line: 754, column: 15, scope: !5630)
!5630 = distinct !DILexicalBlock(scope: !5598, file: !3364, line: 754, column: 7)
!5631 = !DILocation(line: 755, column: 7, scope: !5630)
!5632 = !DILocation(line: 755, column: 10, scope: !5630)
!5633 = !DILocation(line: 756, column: 7, scope: !5630)
!5634 = !DILocation(line: 756, column: 10, scope: !5630)
!5635 = !DILocation(line: 756, column: 29, scope: !5630)
!5636 = !DILocation(line: 754, column: 7, scope: !5598)
!5637 = !DILocation(line: 757, column: 22, scope: !5630)
!5638 = !DILocation(line: 757, column: 28, scope: !5630)
!5639 = !DILocation(line: 757, column: 15, scope: !5630)
!5640 = !DILocation(line: 757, column: 5, scope: !5630)
!5641 = !DILocation(line: 758, column: 8, scope: !5598)
!5642 = !DILocation(line: 758, column: 13, scope: !5598)
!5643 = !DILocation(line: 760, column: 8, scope: !5598)
!5644 = !DILocation(line: 760, column: 14, scope: !5598)
!5645 = !DILocation(line: 761, column: 8, scope: !5598)
!5646 = !DILocation(line: 761, column: 16, scope: !5598)
!5647 = !DILocation(line: 762, column: 8, scope: !5598)
!5648 = !DILocation(line: 762, column: 17, scope: !5598)
!5649 = !DILocation(line: 763, column: 1, scope: !5598)
!5650 = distinct !DISubprogram(name: "gimple_def_ops", scope: !391, file: !391, line: 1292, type: !5651, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5653)
!5651 = !DISubroutineType(types: !5652)
!5652 = !{!1071, !3587}
!5653 = !{!5654}
!5654 = !DILocalVariable(name: "g", arg: 1, scope: !5650, file: !391, line: 1292, type: !3587)
!5655 = !DILocation(line: 0, scope: !5650)
!5656 = !DILocation(line: 1294, column: 8, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5650, file: !391, line: 1294, column: 7)
!5658 = !DILocation(line: 1294, column: 7, scope: !5650)
!5659 = !DILocation(line: 1296, column: 26, scope: !5650)
!5660 = !DILocation(line: 1296, column: 3, scope: !5650)
!5661 = !DILocation(line: 1297, column: 1, scope: !5650)
!5662 = distinct !DISubprogram(name: "gimple_vdef", scope: !391, file: !391, line: 1375, type: !3703, scopeLine: 1376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5663)
!5663 = !{!5664}
!5664 = !DILocalVariable(name: "g", arg: 1, scope: !5662, file: !391, line: 1375, type: !3587)
!5665 = !DILocation(line: 0, scope: !5662)
!5666 = !DILocation(line: 1377, column: 8, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5662, file: !391, line: 1377, column: 7)
!5668 = !DILocation(line: 1377, column: 7, scope: !5662)
!5669 = !DILocation(line: 1379, column: 23, scope: !5662)
!5670 = !DILocation(line: 1379, column: 3, scope: !5662)
!5671 = !DILocation(line: 1380, column: 1, scope: !5662)
!5672 = distinct !DISubprogram(name: "gimple_use_ops", scope: !391, file: !391, line: 1313, type: !5673, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5675)
!5673 = !DISubroutineType(types: !5674)
!5674 = !{!1078, !3587}
!5675 = !{!5676}
!5676 = !DILocalVariable(name: "g", arg: 1, scope: !5672, file: !391, line: 1313, type: !3587)
!5677 = !DILocation(line: 0, scope: !5672)
!5678 = !DILocation(line: 1315, column: 8, scope: !5679)
!5679 = distinct !DILexicalBlock(scope: !5672, file: !391, line: 1315, column: 7)
!5680 = !DILocation(line: 1315, column: 7, scope: !5672)
!5681 = !DILocation(line: 1317, column: 26, scope: !5672)
!5682 = !DILocation(line: 1317, column: 3, scope: !5672)
!5683 = !DILocation(line: 1318, column: 1, scope: !5672)
!5684 = distinct !DISubprogram(name: "gimple_vuse", scope: !391, file: !391, line: 1365, type: !3703, scopeLine: 1366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5685)
!5685 = !{!5686}
!5686 = !DILocalVariable(name: "g", arg: 1, scope: !5684, file: !391, line: 1365, type: !3587)
!5687 = !DILocation(line: 0, scope: !5684)
!5688 = !DILocation(line: 1367, column: 8, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5684, file: !391, line: 1367, column: 7)
!5690 = !DILocation(line: 1367, column: 7, scope: !5684)
!5691 = !DILocation(line: 1369, column: 23, scope: !5684)
!5692 = !DILocation(line: 1369, column: 3, scope: !5684)
!5693 = !DILocation(line: 1370, column: 1, scope: !5684)
!5694 = distinct !DISubprogram(name: "gimple_has_mem_ops", scope: !391, file: !391, line: 1283, type: !3734, scopeLine: 1284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5695)
!5695 = !{!5696}
!5696 = !DILocalVariable(name: "g", arg: 1, scope: !5694, file: !391, line: 1283, type: !3587)
!5697 = !DILocation(line: 0, scope: !5694)
!5698 = !DILocation(line: 1285, column: 10, scope: !5694)
!5699 = !DILocation(line: 1285, column: 26, scope: !5694)
!5700 = !DILocation(line: 1285, column: 43, scope: !5694)
!5701 = !DILocation(line: 1285, column: 46, scope: !5694)
!5702 = !DILocation(line: 1285, column: 62, scope: !5694)
!5703 = !DILocation(line: 1285, column: 3, scope: !5694)
!5704 = distinct !DISubprogram(name: "gimple_phi_result", scope: !391, file: !391, line: 3071, type: !3703, scopeLine: 3072, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5705)
!5705 = !{!5706}
!5706 = !DILocalVariable(name: "gs", arg: 1, scope: !5704, file: !391, line: 3071, type: !3587)
!5707 = !DILocation(line: 0, scope: !5704)
!5708 = !DILocation(line: 3074, column: 25, scope: !5704)
!5709 = !DILocation(line: 3074, column: 3, scope: !5704)
!5710 = distinct !DISubprogram(name: "gimple_phi_num_args", scope: !391, file: !391, line: 3061, type: !4598, scopeLine: 3062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5711)
!5711 = !{!5712}
!5712 = !DILocalVariable(name: "gs", arg: 1, scope: !5710, file: !391, line: 3061, type: !3587)
!5713 = !DILocation(line: 0, scope: !5710)
!5714 = !DILocation(line: 3064, column: 25, scope: !5710)
!5715 = !DILocation(line: 3064, column: 3, scope: !5710)
!5716 = distinct !DISubprogram(name: "gimple_debug_bind_get_var", scope: !391, file: !391, line: 3268, type: !5717, scopeLine: 3269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5719)
!5717 = !DISubroutineType(types: !5718)
!5718 = !{!665, !486}
!5719 = !{!5720}
!5720 = !DILocalVariable(name: "dbg", arg: 1, scope: !5716, file: !391, line: 3268, type: !486)
!5721 = !DILocation(line: 0, scope: !5716)
!5722 = !DILocation(line: 3274, column: 10, scope: !5716)
!5723 = !DILocation(line: 3274, column: 3, scope: !5716)
!5724 = distinct !DISubprogram(name: "gimple_debug_bind_set_var", scope: !391, file: !391, line: 3306, type: !4518, scopeLine: 3307, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5725)
!5725 = !{!5726, !5727}
!5726 = !DILocalVariable(name: "dbg", arg: 1, scope: !5724, file: !391, line: 3306, type: !486)
!5727 = !DILocalVariable(name: "var", arg: 2, scope: !5724, file: !391, line: 3306, type: !665)
!5728 = !DILocation(line: 0, scope: !5724)
!5729 = !DILocation(line: 3312, column: 3, scope: !5724)
!5730 = !DILocation(line: 3313, column: 1, scope: !5724)
!5731 = distinct !DISubprogram(name: "gimple_debug_bind_reset_value", scope: !391, file: !391, line: 3336, type: !4527, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5732)
!5732 = !{!5733}
!5733 = !DILocalVariable(name: "dbg", arg: 1, scope: !5731, file: !391, line: 3336, type: !486)
!5734 = !DILocation(line: 0, scope: !5731)
!5735 = !DILocation(line: 3342, column: 3, scope: !5731)
!5736 = !DILocation(line: 3343, column: 1, scope: !5731)
!5737 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !151, file: !151, line: 182, type: !5738, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5742)
!5738 = !DISubroutineType(types: !5739)
!5739 = !{!665, !5740, !7}
!5740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5741, size: 64)
!5741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1029)
!5742 = !{!5743, !5744}
!5743 = !DILocalVariable(name: "vec_", arg: 1, scope: !5737, file: !151, line: 182, type: !5740)
!5744 = !DILocalVariable(name: "ix_", arg: 2, scope: !5737, file: !151, line: 182, type: !7)
!5745 = !DILocation(line: 0, scope: !5737)
!5746 = !DILocation(line: 182, column: 1, scope: !5737)
!5747 = distinct !DISubprogram(name: "gsi_last_bb", scope: !391, file: !391, line: 4450, type: !4541, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5748)
!5748 = !{!5749, !5750, !5751}
!5749 = !DILocalVariable(name: "bb", arg: 1, scope: !5747, file: !391, line: 4450, type: !927)
!5750 = !DILocalVariable(name: "i", scope: !5747, file: !391, line: 4452, type: !2006)
!5751 = !DILocalVariable(name: "seq", scope: !5747, file: !391, line: 4453, type: !535)
!5752 = !DILocation(line: 0, scope: !5747)
!5753 = !DILocation(line: 4452, column: 24, scope: !5747)
!5754 = !DILocation(line: 4455, column: 9, scope: !5747)
!5755 = !DILocation(line: 4456, column: 11, scope: !5747)
!5756 = !DILocation(line: 4456, column: 5, scope: !5747)
!5757 = !DILocation(line: 4456, column: 9, scope: !5747)
!5758 = !DILocation(line: 4457, column: 5, scope: !5747)
!5759 = !DILocation(line: 4457, column: 9, scope: !5747)
!5760 = !DILocation(line: 4458, column: 5, scope: !5747)
!5761 = !DILocation(line: 4458, column: 8, scope: !5747)
!5762 = !DILocation(line: 4461, column: 1, scope: !5747)
!5763 = distinct !DISubprogram(name: "gimple_seq_last", scope: !391, file: !391, line: 178, type: !4636, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5764)
!5764 = !{!5765}
!5765 = !DILocalVariable(name: "s", arg: 1, scope: !5763, file: !391, line: 178, type: !4638)
!5766 = !DILocation(line: 0, scope: !5763)
!5767 = !DILocation(line: 180, column: 10, scope: !5763)
!5768 = !DILocation(line: 180, column: 17, scope: !5763)
!5769 = !DILocation(line: 180, column: 3, scope: !5763)
!5770 = distinct !DISubprogram(name: "create_loads_for_reductions", scope: !3, file: !3, line: 922, type: !3945, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5771)
!5771 = !{!5772, !5773, !5774, !5775, !5776, !5777, !5778, !5779, !5780, !5781, !5782}
!5772 = !DILocalVariable(name: "slot", arg: 1, scope: !5770, file: !3, line: 922, type: !983)
!5773 = !DILocalVariable(name: "data", arg: 2, scope: !5770, file: !3, line: 922, type: !475)
!5774 = !DILocalVariable(name: "red", scope: !5770, file: !3, line: 924, type: !3957)
!5775 = !DILocalVariable(name: "clsn_data", scope: !5770, file: !3, line: 925, type: !5229)
!5776 = !DILocalVariable(name: "stmt", scope: !5770, file: !3, line: 926, type: !486)
!5777 = !DILocalVariable(name: "gsi", scope: !5770, file: !3, line: 927, type: !2006)
!5778 = !DILocalVariable(name: "type", scope: !5770, file: !3, line: 928, type: !665)
!5779 = !DILocalVariable(name: "struct_type", scope: !5770, file: !3, line: 929, type: !665)
!5780 = !DILocalVariable(name: "load_struct", scope: !5770, file: !3, line: 930, type: !665)
!5781 = !DILocalVariable(name: "name", scope: !5770, file: !3, line: 931, type: !665)
!5782 = !DILocalVariable(name: "x", scope: !5770, file: !3, line: 932, type: !665)
!5783 = !DILocation(line: 0, scope: !5770)
!5784 = !DILocation(line: 924, column: 64, scope: !5770)
!5785 = !DILocation(line: 927, column: 3, scope: !5770)
!5786 = !DILocation(line: 928, column: 15, scope: !5770)
!5787 = !DILocation(line: 929, column: 22, scope: !5770)
!5788 = !DILocation(line: 934, column: 9, scope: !5770)
!5789 = !DILocation(line: 934, column: 38, scope: !5770)
!5790 = !DILocation(line: 935, column: 17, scope: !5770)
!5791 = !DILocation(line: 936, column: 17, scope: !5770)
!5792 = !DILocation(line: 940, column: 10, scope: !5770)
!5793 = !DILocation(line: 941, column: 10, scope: !5770)
!5794 = !DILocation(line: 942, column: 3, scope: !5770)
!5795 = !DILocation(line: 942, column: 28, scope: !5770)
!5796 = !DILocation(line: 944, column: 3, scope: !5770)
!5797 = !DILocation(line: 946, column: 14, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 946, column: 3)
!5799 = !DILocation(line: 946, column: 46, scope: !5798)
!5800 = !DILocation(line: 946, column: 30, scope: !5798)
!5801 = !DILocation(line: 946, column: 8, scope: !5798)
!5802 = !DILocation(line: 947, column: 9, scope: !5803)
!5803 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 946, column: 3)
!5804 = !DILocation(line: 947, column: 8, scope: !5803)
!5805 = !DILocation(line: 946, column: 3, scope: !5798)
!5806 = !DILocation(line: 948, column: 9, scope: !5807)
!5807 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 948, column: 9)
!5808 = !DILocation(line: 948, column: 32, scope: !5807)
!5809 = !DILocation(line: 948, column: 24, scope: !5807)
!5810 = !DILocation(line: 948, column: 9, scope: !5803)
!5811 = !DILocation(line: 950, column: 2, scope: !5812)
!5812 = distinct !DILexicalBlock(scope: !5807, file: !3, line: 949, column: 7)
!5813 = !DILocation(line: 951, column: 2, scope: !5812)
!5814 = !DILocation(line: 947, column: 26, scope: !5803)
!5815 = !DILocation(line: 946, column: 3, scope: !5803)
!5816 = distinct !{!5816, !5805, !5817}
!5817 = !DILocation(line: 952, column: 7, scope: !5798)
!5818 = !DILocation(line: 953, column: 3, scope: !5770)
!5819 = !DILocation(line: 955, column: 5, scope: !5770)
!5820 = !DILocation(line: 957, column: 1, scope: !5770)
!5821 = distinct !DISubprogram(name: "gimple_phi_arg_location_from_edge", scope: !3364, file: !3364, line: 483, type: !5822, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5824)
!5822 = !DISubroutineType(types: !5823)
!5823 = !{!479, !486, !525}
!5824 = !{!5825, !5826}
!5825 = !DILocalVariable(name: "gs", arg: 1, scope: !5821, file: !3364, line: 483, type: !486)
!5826 = !DILocalVariable(name: "e", arg: 2, scope: !5821, file: !3364, line: 483, type: !525)
!5827 = !DILocation(line: 0, scope: !5821)
!5828 = !DILocation(line: 485, column: 33, scope: !5821)
!5829 = !DILocation(line: 485, column: 10, scope: !5821)
!5830 = !DILocation(line: 485, column: 44, scope: !5821)
!5831 = !DILocation(line: 485, column: 3, scope: !5821)
!5832 = distinct !DISubprogram(name: "gimple_omp_for_set_index", scope: !391, file: !391, line: 3472, type: !5833, scopeLine: 3473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5835)
!5833 = !DISubroutineType(types: !5834)
!5834 = !{null, !486, !985, !665}
!5835 = !{!5836, !5837, !5838}
!5836 = !DILocalVariable(name: "gs", arg: 1, scope: !5832, file: !391, line: 3472, type: !486)
!5837 = !DILocalVariable(name: "i", arg: 2, scope: !5832, file: !391, line: 3472, type: !985)
!5838 = !DILocalVariable(name: "index", arg: 3, scope: !5832, file: !391, line: 3472, type: !665)
!5839 = !DILocation(line: 0, scope: !5832)
!5840 = !DILocation(line: 3475, column: 3, scope: !5832)
!5841 = !DILocation(line: 3476, column: 22, scope: !5832)
!5842 = !DILocation(line: 3476, column: 30, scope: !5832)
!5843 = !DILocation(line: 3476, column: 36, scope: !5832)
!5844 = !DILocation(line: 3477, column: 1, scope: !5832)
!5845 = distinct !DISubprogram(name: "gimple_omp_for_set_initial", scope: !391, file: !391, line: 3505, type: !5833, scopeLine: 3506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5846)
!5846 = !{!5847, !5848, !5849}
!5847 = !DILocalVariable(name: "gs", arg: 1, scope: !5845, file: !391, line: 3505, type: !486)
!5848 = !DILocalVariable(name: "i", arg: 2, scope: !5845, file: !391, line: 3505, type: !985)
!5849 = !DILocalVariable(name: "initial", arg: 3, scope: !5845, file: !391, line: 3505, type: !665)
!5850 = !DILocation(line: 0, scope: !5845)
!5851 = !DILocation(line: 3508, column: 3, scope: !5845)
!5852 = !DILocation(line: 3509, column: 22, scope: !5845)
!5853 = !DILocation(line: 3509, column: 30, scope: !5845)
!5854 = !DILocation(line: 3509, column: 38, scope: !5845)
!5855 = !DILocation(line: 3510, column: 1, scope: !5845)
!5856 = distinct !DISubprogram(name: "gimple_omp_for_set_final", scope: !391, file: !391, line: 3538, type: !5833, scopeLine: 3539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5857)
!5857 = !{!5858, !5859, !5860}
!5858 = !DILocalVariable(name: "gs", arg: 1, scope: !5856, file: !391, line: 3538, type: !486)
!5859 = !DILocalVariable(name: "i", arg: 2, scope: !5856, file: !391, line: 3538, type: !985)
!5860 = !DILocalVariable(name: "final", arg: 3, scope: !5856, file: !391, line: 3538, type: !665)
!5861 = !DILocation(line: 0, scope: !5856)
!5862 = !DILocation(line: 3541, column: 3, scope: !5856)
!5863 = !DILocation(line: 3542, column: 22, scope: !5856)
!5864 = !DILocation(line: 3542, column: 30, scope: !5856)
!5865 = !DILocation(line: 3542, column: 36, scope: !5856)
!5866 = !DILocation(line: 3543, column: 1, scope: !5856)
!5867 = distinct !DISubprogram(name: "gimple_omp_for_set_cond", scope: !391, file: !391, line: 4073, type: !5868, scopeLine: 4074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5870)
!5868 = !DISubroutineType(types: !5869)
!5869 = !{null, !486, !985, !183}
!5870 = !{!5871, !5872, !5873}
!5871 = !DILocalVariable(name: "gs", arg: 1, scope: !5867, file: !391, line: 4073, type: !486)
!5872 = !DILocalVariable(name: "i", arg: 2, scope: !5867, file: !391, line: 4073, type: !985)
!5873 = !DILocalVariable(name: "cond", arg: 3, scope: !5867, file: !391, line: 4073, type: !183)
!5874 = !DILocation(line: 0, scope: !5867)
!5875 = !DILocation(line: 4076, column: 3, scope: !5867)
!5876 = !DILocation(line: 4077, column: 3, scope: !5867)
!5877 = !DILocation(line: 4078, column: 22, scope: !5867)
!5878 = !DILocation(line: 4078, column: 30, scope: !5867)
!5879 = !DILocation(line: 4078, column: 35, scope: !5867)
!5880 = !DILocation(line: 4079, column: 1, scope: !5867)
!5881 = distinct !DISubprogram(name: "gimple_cond_code", scope: !391, file: !391, line: 2221, type: !3665, scopeLine: 2222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5882)
!5882 = !{!5883}
!5883 = !DILocalVariable(name: "gs", arg: 1, scope: !5881, file: !391, line: 2221, type: !3587)
!5884 = !DILocation(line: 0, scope: !5881)
!5885 = !DILocation(line: 2224, column: 38, scope: !5881)
!5886 = !DILocation(line: 2224, column: 3, scope: !5881)
!5887 = distinct !DISubprogram(name: "gimple_omp_for_set_incr", scope: !391, file: !391, line: 3571, type: !5833, scopeLine: 3572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5888)
!5888 = !{!5889, !5890, !5891}
!5889 = !DILocalVariable(name: "gs", arg: 1, scope: !5887, file: !391, line: 3571, type: !486)
!5890 = !DILocalVariable(name: "i", arg: 2, scope: !5887, file: !391, line: 3571, type: !985)
!5891 = !DILocalVariable(name: "incr", arg: 3, scope: !5887, file: !391, line: 3571, type: !665)
!5892 = !DILocation(line: 0, scope: !5887)
!5893 = !DILocation(line: 3574, column: 3, scope: !5887)
!5894 = !DILocation(line: 3575, column: 22, scope: !5887)
!5895 = !DILocation(line: 3575, column: 30, scope: !5887)
!5896 = !DILocation(line: 3575, column: 35, scope: !5887)
!5897 = !DILocation(line: 3576, column: 1, scope: !5887)
!5898 = distinct !DISubprogram(name: "create_phi_for_local_result", scope: !3, file: !3, line: 802, type: !3945, scopeLine: 803, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5899)
!5899 = !{!5900, !5901, !5902, !5903, !5905, !5906, !5907, !5908, !5909}
!5900 = !DILocalVariable(name: "slot", arg: 1, scope: !5898, file: !3, line: 802, type: !983)
!5901 = !DILocalVariable(name: "data", arg: 2, scope: !5898, file: !3, line: 802, type: !475)
!5902 = !DILocalVariable(name: "reduc", scope: !5898, file: !3, line: 804, type: !3957)
!5903 = !DILocalVariable(name: "loop", scope: !5898, file: !3, line: 805, type: !5904)
!5904 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2045)
!5905 = !DILocalVariable(name: "e", scope: !5898, file: !3, line: 806, type: !525)
!5906 = !DILocalVariable(name: "new_phi", scope: !5898, file: !3, line: 807, type: !486)
!5907 = !DILocalVariable(name: "store_bb", scope: !5898, file: !3, line: 808, type: !927)
!5908 = !DILocalVariable(name: "local_res", scope: !5898, file: !3, line: 809, type: !665)
!5909 = !DILocalVariable(name: "locus", scope: !5898, file: !3, line: 810, type: !479)
!5910 = !DILocation(line: 0, scope: !5898)
!5911 = !DILocation(line: 804, column: 66, scope: !5898)
!5912 = !DILocation(line: 815, column: 14, scope: !5898)
!5913 = !DILocation(line: 815, column: 43, scope: !5898)
!5914 = !DILocation(line: 822, column: 7, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5898, file: !3, line: 822, column: 7)
!5916 = !DILocation(line: 822, column: 34, scope: !5915)
!5917 = !DILocation(line: 822, column: 31, scope: !5915)
!5918 = !DILocation(line: 0, scope: !5915)
!5919 = !DILocation(line: 822, column: 7, scope: !5898)
!5920 = !DILocation(line: 823, column: 9, scope: !5915)
!5921 = !DILocation(line: 823, column: 5, scope: !5915)
!5922 = !DILocation(line: 825, column: 9, scope: !5915)
!5923 = !DILocation(line: 827, column: 22, scope: !5898)
!5924 = !DILocation(line: 827, column: 7, scope: !5898)
!5925 = !DILocation(line: 829, column: 35, scope: !5898)
!5926 = !DILocation(line: 829, column: 11, scope: !5898)
!5927 = !DILocation(line: 830, column: 13, scope: !5898)
!5928 = !DILocation(line: 831, column: 3, scope: !5898)
!5929 = !DILocation(line: 831, column: 33, scope: !5898)
!5930 = !DILocation(line: 832, column: 32, scope: !5898)
!5931 = !DILocation(line: 832, column: 3, scope: !5898)
!5932 = !DILocation(line: 833, column: 51, scope: !5898)
!5933 = !DILocation(line: 833, column: 25, scope: !5898)
!5934 = !DILocation(line: 834, column: 9, scope: !5898)
!5935 = !DILocation(line: 833, column: 3, scope: !5898)
!5936 = !DILocation(line: 835, column: 10, scope: !5898)
!5937 = !DILocation(line: 835, column: 18, scope: !5898)
!5938 = !DILocation(line: 837, column: 3, scope: !5898)
!5939 = distinct !DISubprogram(name: "create_call_for_reduction_1", scope: !3, file: !3, line: 855, type: !3945, scopeLine: 856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5940)
!5940 = !{!5941, !5942, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5952, !5953, !5954, !5955, !5956, !5957, !5958}
!5941 = !DILocalVariable(name: "slot", arg: 1, scope: !5939, file: !3, line: 855, type: !983)
!5942 = !DILocalVariable(name: "data", arg: 2, scope: !5939, file: !3, line: 855, type: !475)
!5943 = !DILocalVariable(name: "reduc", scope: !5939, file: !3, line: 857, type: !3957)
!5944 = !DILocalVariable(name: "clsn_data", scope: !5939, file: !3, line: 858, type: !5229)
!5945 = !DILocalVariable(name: "gsi", scope: !5939, file: !3, line: 859, type: !2006)
!5946 = !DILocalVariable(name: "type", scope: !5939, file: !3, line: 860, type: !665)
!5947 = !DILocalVariable(name: "struct_type", scope: !5939, file: !3, line: 861, type: !665)
!5948 = !DILocalVariable(name: "load_struct", scope: !5939, file: !3, line: 862, type: !665)
!5949 = !DILocalVariable(name: "bb", scope: !5939, file: !3, line: 863, type: !927)
!5950 = !DILocalVariable(name: "new_bb", scope: !5939, file: !3, line: 864, type: !927)
!5951 = !DILocalVariable(name: "e", scope: !5939, file: !3, line: 865, type: !525)
!5952 = !DILocalVariable(name: "t", scope: !5939, file: !3, line: 866, type: !665)
!5953 = !DILocalVariable(name: "addr", scope: !5939, file: !3, line: 866, type: !665)
!5954 = !DILocalVariable(name: "ref", scope: !5939, file: !3, line: 866, type: !665)
!5955 = !DILocalVariable(name: "x", scope: !5939, file: !3, line: 866, type: !665)
!5956 = !DILocalVariable(name: "tmp_load", scope: !5939, file: !3, line: 867, type: !665)
!5957 = !DILocalVariable(name: "name", scope: !5939, file: !3, line: 867, type: !665)
!5958 = !DILocalVariable(name: "load", scope: !5939, file: !3, line: 868, type: !486)
!5959 = !DILocation(line: 0, scope: !5939)
!5960 = !DILocation(line: 857, column: 66, scope: !5939)
!5961 = !DILocation(line: 859, column: 3, scope: !5939)
!5962 = !DILocation(line: 860, column: 15, scope: !5939)
!5963 = !DILocation(line: 861, column: 22, scope: !5939)
!5964 = !DILocation(line: 870, column: 17, scope: !5939)
!5965 = !DILocation(line: 871, column: 7, scope: !5939)
!5966 = !DILocation(line: 873, column: 25, scope: !5939)
!5967 = !DILocation(line: 873, column: 10, scope: !5939)
!5968 = !DILocation(line: 876, column: 19, scope: !5939)
!5969 = !DILocation(line: 878, column: 24, scope: !5939)
!5970 = !DILocation(line: 878, column: 7, scope: !5939)
!5971 = !DILocation(line: 879, column: 15, scope: !5939)
!5972 = !DILocation(line: 881, column: 30, scope: !5939)
!5973 = !DILocation(line: 881, column: 14, scope: !5939)
!5974 = !DILocation(line: 882, column: 3, scope: !5939)
!5975 = !DILocation(line: 883, column: 14, scope: !5939)
!5976 = !DILocation(line: 884, column: 10, scope: !5939)
!5977 = !DILocation(line: 885, column: 3, scope: !5939)
!5978 = !DILocation(line: 885, column: 32, scope: !5939)
!5979 = !DILocation(line: 886, column: 9, scope: !5939)
!5980 = !DILocation(line: 887, column: 3, scope: !5939)
!5981 = !DILocation(line: 889, column: 28, scope: !5939)
!5982 = !DILocation(line: 889, column: 7, scope: !5939)
!5983 = !DILocation(line: 890, column: 15, scope: !5939)
!5984 = !DILocation(line: 891, column: 9, scope: !5939)
!5985 = !DILocation(line: 893, column: 7, scope: !5939)
!5986 = !DILocation(line: 897, column: 10, scope: !5939)
!5987 = !DILocation(line: 900, column: 27, scope: !5939)
!5988 = !DILocation(line: 900, column: 3, scope: !5939)
!5989 = !DILocation(line: 902, column: 1, scope: !5939)
!5990 = !DILocation(line: 901, column: 3, scope: !5939)
!5991 = distinct !DISubprogram(name: "VEC_int_base_iterate", scope: !1844, file: !1844, line: 31, type: !5992, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5996)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{!471, !5994, !7, !1932}
!5994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5995, size: 64)
!5995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1848)
!5996 = !{!5997, !5998, !5999}
!5997 = !DILocalVariable(name: "vec_", arg: 1, scope: !5991, file: !1844, line: 31, type: !5994)
!5998 = !DILocalVariable(name: "ix_", arg: 2, scope: !5991, file: !1844, line: 31, type: !7)
!5999 = !DILocalVariable(name: "ptr", arg: 3, scope: !5991, file: !1844, line: 31, type: !1932)
!6000 = !DILocation(line: 0, scope: !5991)
!6001 = !DILocation(line: 31, column: 1, scope: !6002)
!6002 = distinct !DILexicalBlock(scope: !5991, file: !1844, line: 31, column: 1)
!6003 = !DILocation(line: 31, column: 1, scope: !5991)
!6004 = !DILocation(line: 31, column: 1, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6002, file: !1844, line: 31, column: 1)
!6006 = !DILocation(line: 31, column: 1, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6002, file: !1844, line: 31, column: 1)
!6008 = !DILocation(line: 0, scope: !6002)
!6009 = distinct !DISubprogram(name: "get_loop", scope: !378, file: !378, line: 417, type: !6010, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6012)
!6010 = !DISubroutineType(types: !6011)
!6011 = !{!1113, !7}
!6012 = !{!6013}
!6013 = !DILocalVariable(name: "num", arg: 1, scope: !6009, file: !378, line: 417, type: !7)
!6014 = !DILocation(line: 0, scope: !6009)
!6015 = !DILocation(line: 419, column: 10, scope: !6009)
!6016 = !DILocation(line: 419, column: 3, scope: !6009)
!6017 = distinct !DISubprogram(name: "VEC_int_heap_free", scope: !1844, file: !1844, line: 32, type: !6018, scopeLine: 32, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6021)
!6018 = !DISubroutineType(types: !6019)
!6019 = !{null, !6020}
!6020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1842, size: 64)
!6021 = !{!6022}
!6022 = !DILocalVariable(name: "vec_", arg: 1, scope: !6017, file: !1844, line: 32, type: !6020)
!6023 = !DILocation(line: 0, scope: !6017)
!6024 = !DILocation(line: 32, column: 1, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !6017, file: !1844, line: 32, column: 1)
!6026 = !DILocation(line: 32, column: 1, scope: !6017)
