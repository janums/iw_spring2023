; ModuleID = 'lto-streamer-in.bc'
source_filename = "lto-streamer-in.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.lto_stats_d = type { i64, i64, i64, i64, i64, [10 x i64], i64, [188 x i64], i64, i64, i64, i64 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.line_maps = type { %struct.line_map*, i32, i32, i32, i32, i32, i8, i32, i32, i32, i8* (i8*, i64)* }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.VEC_alias_pair_gc = type { %struct.VEC_alias_pair_base }
%struct.VEC_alias_pair_base = type { i32, i32, [1 x %struct.alias_pair] }
%struct.alias_pair = type { %union.tree_node*, %union.tree_node* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.lto_file_decl_data = type { %struct.lto_in_decl_state*, %struct.lto_in_decl_state*, %struct.lto_cgraph_encoder_d*, %struct.htab*, i8*, i8, %struct.htab*, %struct.htab* }
%struct.lto_in_decl_state = type { [7 x %struct.lto_tree_ref_table], %union.tree_node* }
%struct.lto_tree_ref_table = type { %union.tree_node**, i32 }
%struct.lto_cgraph_encoder_d = type { %struct.pointer_map_t*, %struct.VEC_cgraph_node_ptr_heap* }
%struct.VEC_cgraph_node_ptr_heap = type { %struct.VEC_cgraph_node_ptr_base }
%struct.VEC_cgraph_node_ptr_base = type { i32, i32, [1 x %struct.cgraph_node*] }
%struct.cgraph_node = type { %union.tree_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_node*, %struct.htab*, i8*, %struct.VEC_ipa_opt_pass_heap*, %struct.cgraph_local_info, %struct.cgraph_global_info, %struct.cgraph_rtl_info, %struct.cgraph_clone_info, %struct.cgraph_thunk_info, i64, i32, i32, i32, i16 }
%struct.cgraph_edge = type { i64, %struct.cgraph_node*, %struct.cgraph_node*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %struct.cgraph_edge*, %union.gimple_statement_d*, i8*, i32, i32, i32, i32, i16, i8 }
%struct.VEC_ipa_opt_pass_heap = type { %struct.VEC_ipa_opt_pass_base }
%struct.VEC_ipa_opt_pass_base = type { i32, i32, [1 x %struct.ipa_opt_pass_d*] }
%struct.ipa_opt_pass_d = type { %struct.opt_pass, void ()*, void (%struct.cgraph_node_set_def*)*, void ()*, void (%struct.cgraph_node*)*, void (%struct.cgraph_node*, %union.gimple_statement_d**)*, i32, i32 (%struct.cgraph_node*)*, void (%struct.varpool_node*)* }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.cgraph_node_set_def = type { %struct.htab*, %struct.VEC_cgraph_node_ptr_gc*, i8* }
%struct.VEC_cgraph_node_ptr_gc = type { %struct.VEC_cgraph_node_ptr_base }
%struct.varpool_node = type { %union.tree_node*, %struct.varpool_node*, %struct.varpool_node*, %struct.varpool_node*, i32, i8 }
%struct.cgraph_local_info = type { %struct.lto_file_decl_data*, %struct.inline_summary, i8 }
%struct.inline_summary = type { i64, i32, i32, i32, i32 }
%struct.cgraph_global_info = type { i64, i64, %struct.cgraph_node*, i32, i32, i32, i8 }
%struct.cgraph_rtl_info = type { i32 }
%struct.cgraph_clone_info = type { %struct.VEC_ipa_replace_map_p_gc*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.VEC_ipa_replace_map_p_gc = type { %struct.VEC_ipa_replace_map_p_base }
%struct.VEC_ipa_replace_map_p_base = type { i32, i32, [1 x %struct.ipa_replace_map*] }
%struct.ipa_replace_map = type { %union.tree_node*, %union.tree_node*, i8, i8 }
%struct.cgraph_thunk_info = type { i64, i64, %union.tree_node*, i8, i8, i8 }
%struct.lto_input_block = type { i8*, i32, i32 }
%struct.data_in = type { %struct.lto_file_decl_data*, %union.tree_node**, i8*, i32, i32, i32, i8*, i32, i32, %struct.VEC_ld_plugin_symbol_resolution_t_heap*, %struct.lto_streamer_cache_d* }
%struct.VEC_ld_plugin_symbol_resolution_t_heap = type { %struct.VEC_ld_plugin_symbol_resolution_t_base }
%struct.VEC_ld_plugin_symbol_resolution_t_base = type { i32, i32, [1 x i32] }
%struct.lto_streamer_cache_d = type { %struct.htab*, i32, %struct.VEC_tree_gc*, %struct.VEC_unsigned_heap* }
%struct.VEC_unsigned_heap = type { %struct.VEC_unsigned_base }
%struct.VEC_unsigned_base = type { i32, i32, [1 x i32] }
%struct.bitpack_d = type { i64, i64, %struct.VEC_bitpack_word_t_heap* }
%struct.VEC_bitpack_word_t_heap = type { %struct.VEC_bitpack_word_t_base }
%struct.VEC_bitpack_word_t_base = type { i32, i32, [1 x i64] }
%struct.gimple_stmt_iterator = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_d*, %struct.basic_block_def* }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.eh_catch_d = type { %struct.eh_catch_d*, %struct.eh_catch_d*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.string_slot = type { i8*, i32 }
%struct.gimple_statement_asm = type { %struct.gimple_statement_with_memory_ops_base, i8*, i8, i8, i8, i8, [1 x %union.tree_node*] }
%struct.gimple_statement_with_memory_ops_base = type { %struct.gimple_statement_with_ops_base, %union.tree_node*, %union.tree_node* }
%struct.gimple_statement_with_ops_base = type { %struct.gimple_statement_base, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.real_value = type { i32, [3 x i64] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.double_int = type { i64, i64 }
%struct.tree_label_decl = type { %struct.tree_decl_with_rtl, i32, i32 }
%struct.VEC_constructor_elt_gc = type { %struct.VEC_constructor_elt_base }
%struct.VEC_constructor_elt_base = type { i32, i32, [1 x %struct.constructor_elt_d] }
%struct.constructor_elt_d = type { %union.tree_node*, %union.tree_node* }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str = private unnamed_addr constant [18 x i8] c"lto-streamer-in.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@lto_stats = external dso_local global %struct.lto_stats_d, align 8
@file_name_hash_table = internal unnamed_addr global %struct.htab* null, align 8, !dbg !0
@.str.2 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"bytecode stream: expected tag %s instead of %s\00", align 1
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.4 = private unnamed_addr constant [62 x i8] c"bytecode stream: tag %s is not in the expected range [%s, %s]\00", align 1
@lto_init_eh.eh_initialized_p = internal unnamed_addr global i1 false, align 1, !dbg !3270
@flag_exceptions = external dso_local local_unnamed_addr global i32, align 4
@line_table = external dso_local local_unnamed_addr global %struct.line_maps*, align 8
@.str.5 = private unnamed_addr constant [50 x i8] c"bytecode stream: found non-null terminated string\00", align 1
@.str.6 = private unnamed_addr constant [54 x i8] c"bytecode stream: string too long for the string table\00", align 1
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@.str.7 = private unnamed_addr constant [49 x i8] c"bytecode stream: unknown GIMPLE statement tag %s\00", align 1
@.str.8 = private unnamed_addr constant [17 x i8] c"./lto-streamer.h\00", align 1
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.9 = private unnamed_addr constant [35 x i8] c"bytecode stream: unexpected tag %s\00", align 1
@.str.10 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@alias_pairs = external dso_local global %struct.VEC_alias_pair_gc*, align 8
@.str.11 = private unnamed_addr constant [55 x i8] c"bytecode stream: tried to jump backwards in the stream\00", align 1
@built_in_decls = external dso_local local_unnamed_addr global [721 x %union.tree_node*], align 16
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.12 = private unnamed_addr constant [38 x i8] c"target specific builtin not available\00", align 1
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@.str.13 = private unnamed_addr constant [39 x i8] c"optimization options not supported yet\00", align 1
@.str.14 = private unnamed_addr constant [46 x i8] c"target optimization options not supported yet\00", align 1
@tree_code_length = external dso_local local_unnamed_addr constant [0 x i8], align 1
@.str.15 = private unnamed_addr constant [7 x i8] c"%s.%lu\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !3275 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !3288, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !3289, metadata !DIExpression()), !dbg !3290
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3291
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #7, !dbg !3292
  ret i32 %call, !dbg !3293
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !3294 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3297
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #7, !dbg !3298
  ret i32 %call, !dbg !3299
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3300 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3353, metadata !DIExpression()), !dbg !3354
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3355
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3355
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3355
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3355
  %cmp = icmp uge i8* %0, %1, !dbg !3355
  %conv1 = zext i1 %cmp to i64, !dbg !3355
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3355
  %tobool = icmp eq i64 %expval, 0, !dbg !3355
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3355

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !3355
  br label %cond.end, !dbg !3355

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3355
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3355
  %2 = load i8, i8* %0, align 1, !dbg !3355
  %conv3 = zext i8 %2 to i32, !dbg !3355
  br label %cond.end, !dbg !3355

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3355
  ret i32 %cond, !dbg !3356
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !3357 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !3359, metadata !DIExpression()), !dbg !3360
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !3361
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3361
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !3361
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !3361
  %cmp = icmp uge i8* %0, %1, !dbg !3361
  %conv1 = zext i1 %cmp to i64, !dbg !3361
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3361
  %tobool = icmp eq i64 %expval, 0, !dbg !3361
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3361

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !3361
  br label %cond.end, !dbg !3361

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3361
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3361
  %2 = load i8, i8* %0, align 1, !dbg !3361
  %conv3 = zext i8 %2 to i32, !dbg !3361
  br label %cond.end, !dbg !3361

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3361
  ret i32 %cond, !dbg !3362
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !3363 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !3364
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !3364
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !3364
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !3364
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !3364
  %cmp = icmp uge i8* %1, %2, !dbg !3364
  %conv1 = zext i1 %cmp to i64, !dbg !3364
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3364
  %tobool = icmp eq i64 %expval, 0, !dbg !3364
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3364

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #7, !dbg !3364
  br label %cond.end, !dbg !3364

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3364
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !3364
  %3 = load i8, i8* %1, align 1, !dbg !3364
  %conv3 = zext i8 %3 to i32, !dbg !3364
  br label %cond.end, !dbg !3364

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !3364
  ret i32 %cond, !dbg !3365
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !3366 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3370, metadata !DIExpression()), !dbg !3371
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3372
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #7, !dbg !3373
  ret i32 %call, !dbg !3374
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3375 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3379, metadata !DIExpression()), !dbg !3381
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3380, metadata !DIExpression()), !dbg !3381
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3382
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3382
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3382
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3382
  %cmp = icmp uge i8* %0, %1, !dbg !3382
  %conv1 = zext i1 %cmp to i64, !dbg !3382
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3382
  %tobool = icmp eq i64 %expval, 0, !dbg !3382
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3382

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3382
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !3382
  br label %cond.end, !dbg !3382

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3382
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3382
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3382
  store i8 %conv2, i8* %0, align 1, !dbg !3382
  %conv6 = and i32 %__c, 255, !dbg !3382
  br label %cond.end, !dbg !3382

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3382
  ret i32 %cond, !dbg !3383
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3384 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3386, metadata !DIExpression()), !dbg !3388
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3387, metadata !DIExpression()), !dbg !3388
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !3389
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3389
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !3389
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !3389
  %cmp = icmp uge i8* %0, %1, !dbg !3389
  %conv1 = zext i1 %cmp to i64, !dbg !3389
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3389
  %tobool = icmp eq i64 %expval, 0, !dbg !3389
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3389

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3389
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !3389
  br label %cond.end, !dbg !3389

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !3389
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !3389
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3389
  store i8 %conv2, i8* %0, align 1, !dbg !3389
  %conv6 = and i32 %__c, 255, !dbg !3389
  br label %cond.end, !dbg !3389

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3389
  ret i32 %cond, !dbg !3390
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !3391 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3393, metadata !DIExpression()), !dbg !3394
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !3395
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !3395
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !3395
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !3395
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !3395
  %cmp = icmp uge i8* %1, %2, !dbg !3395
  %conv1 = zext i1 %cmp to i64, !dbg !3395
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !3395
  %tobool = icmp eq i64 %expval, 0, !dbg !3395
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !3395

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !3395
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #7, !dbg !3395
  br label %cond.end, !dbg !3395

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !3395
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !3395
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !3395
  store i8 %conv4, i8* %1, align 1, !dbg !3395
  %conv6 = and i32 %__c, 255, !dbg !3395
  br label %cond.end, !dbg !3395

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !3395
  ret i32 %cond, !dbg !3396
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3397 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !3403, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata i64* %__n, metadata !3404, metadata !DIExpression()), !dbg !3406
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3405, metadata !DIExpression()), !dbg !3406
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #7, !dbg !3407
  ret i64 %call, !dbg !3408
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3409 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3411, metadata !DIExpression()), !dbg !3412
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3413
  %0 = load i32, i32* %_flags, align 8, !dbg !3413
  %and = lshr i32 %0, 4, !dbg !3413
  %and.lobit = and i32 %and, 1, !dbg !3413
  ret i32 %and.lobit, !dbg !3414
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !3415 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !3417, metadata !DIExpression()), !dbg !3418
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !3419
  %0 = load i32, i32* %_flags, align 8, !dbg !3419
  %and = lshr i32 %0, 5, !dbg !3419
  %and.lobit = and i32 %and, 1, !dbg !3419
  ret i32 %and.lobit, !dbg !3420
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !3421 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3424, metadata !DIExpression()), !dbg !3425
  %__c.off = add i32 %__c, 128, !dbg !3426
  %0 = icmp ult i32 %__c.off, 384, !dbg !3426
  br i1 %0, label %cond.true, label %cond.end, !dbg !3426

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #7, !dbg !3427
  %1 = load i32*, i32** %call, align 8, !dbg !3428
  %idxprom = sext i32 %__c to i64, !dbg !3429
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3429
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3429
  br label %cond.end, !dbg !3430

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3430
  ret i32 %cond, !dbg !3431
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !3432 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !3434, metadata !DIExpression()), !dbg !3435
  %__c.off = add i32 %__c, 128, !dbg !3436
  %0 = icmp ult i32 %__c.off, 384, !dbg !3436
  br i1 %0, label %cond.true, label %cond.end, !dbg !3436

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #7, !dbg !3437
  %1 = load i32*, i32** %call, align 8, !dbg !3438
  %idxprom = sext i32 %__c to i64, !dbg !3439
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !3439
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3439
  br label %cond.end, !dbg !3440

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !3440
  ret i32 %cond, !dbg !3441
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !3442 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3447, metadata !DIExpression()), !dbg !3448
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !3449
  %conv = trunc i64 %call to i32, !dbg !3450
  ret i32 %conv, !dbg !3451
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !3452 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3456, metadata !DIExpression()), !dbg !3457
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !3458
  ret i64 %call, !dbg !3459
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !3460 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3465, metadata !DIExpression()), !dbg !3466
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #7, !dbg !3467
  ret i64 %call, !dbg !3468
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !3469 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !3475, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i8* %__base, metadata !3476, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3477, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i64 %__size, metadata !3478, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !3479, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i64 0, metadata !3480, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !3481, metadata !DIExpression()), !dbg !3485
  br label %while.cond, !dbg !3486

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !3487
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !3485
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !3481, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !3480, metadata !DIExpression()), !dbg !3485
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !3488
  br i1 %cmp, label %while.body, label %cleanup, !dbg !3486

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !3489
  %div = lshr i64 %add, 1, !dbg !3491
  call void @llvm.dbg.value(metadata i64 %div, metadata !3482, metadata !DIExpression()), !dbg !3485
  %mul = mul i64 %div, %__size, !dbg !3492
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !3493
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !3483, metadata !DIExpression()), !dbg !3485
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #7, !dbg !3494
  call void @llvm.dbg.value(metadata i32 %call, metadata !3484, metadata !DIExpression()), !dbg !3485
  %cmp1 = icmp slt i32 %call, 0, !dbg !3495
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !3497

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !3498
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !3500

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !3501
  call void @llvm.dbg.value(metadata i64 %add4, metadata !3480, metadata !DIExpression()), !dbg !3485
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !3485
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !3485
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !3481, metadata !DIExpression()), !dbg !3485
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !3480, metadata !DIExpression()), !dbg !3485
  br label %while.cond, !dbg !3486, !llvm.loop !3502

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !3485
  ret i8* %retval.0, !dbg !3504
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !3505 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !3511, metadata !DIExpression()), !dbg !3512
  %call = tail call double @strtod(i8* %__nptr, i8** null) #7, !dbg !3513
  ret double %call, !dbg !3514
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3515 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3524, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3525, metadata !DIExpression()), !dbg !3527
  call void @llvm.dbg.value(metadata i32 %base, metadata !3526, metadata !DIExpression()), !dbg !3527
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !3528
  ret i64 %call, !dbg !3529
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3530 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !3536, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !3537, metadata !DIExpression()), !dbg !3539
  call void @llvm.dbg.value(metadata i32 %base, metadata !3538, metadata !DIExpression()), !dbg !3539
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !3540
  ret i64 %call, !dbg !3541
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3542 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3553, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3554, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.value(metadata i32 %base, metadata !3555, metadata !DIExpression()), !dbg !3556
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !3557
  ret i64 %call, !dbg !3558
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !3559 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !3563, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !3564, metadata !DIExpression()), !dbg !3566
  call void @llvm.dbg.value(metadata i32 %base, metadata !3565, metadata !DIExpression()), !dbg !3566
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !3567
  ret i64 %call, !dbg !3568
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3569 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3609, metadata !DIExpression()), !dbg !3611
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3610, metadata !DIExpression()), !dbg !3611
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !3612
  ret i32 %call, !dbg !3613
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3614 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3616, metadata !DIExpression()), !dbg !3618
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3617, metadata !DIExpression()), !dbg !3618
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !3619
  ret i32 %call, !dbg !3620
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !3621 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3625, metadata !DIExpression()), !dbg !3627
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3626, metadata !DIExpression()), !dbg !3627
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #7, !dbg !3628
  ret i32 %call, !dbg !3629
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3630 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3634, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3635, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !3636, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3637, metadata !DIExpression()), !dbg !3638
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #7, !dbg !3639
  ret i32 %call, !dbg !3640
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3641 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3645, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3646, metadata !DIExpression()), !dbg !3648
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3647, metadata !DIExpression()), !dbg !3648
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3647, metadata !DIExpression(DW_OP_deref)), !dbg !3648
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !3649
  ret i32 %call, !dbg !3650
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !3651 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3655, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3656, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !3657, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !3658, metadata !DIExpression()), !dbg !3659
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !3658, metadata !DIExpression(DW_OP_deref)), !dbg !3659
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !3660
  ret i32 %call, !dbg !3661
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3662 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3686, metadata !DIExpression()), !dbg !3688
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3687, metadata !DIExpression()), !dbg !3688
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !3689
  ret i32 %call, !dbg !3690
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3691 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !3693, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3694, metadata !DIExpression()), !dbg !3695
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !3696
  ret i32 %call, !dbg !3697
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !3698 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3702, metadata !DIExpression()), !dbg !3704
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3703, metadata !DIExpression()), !dbg !3704
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #7, !dbg !3705
  ret i32 %call, !dbg !3706
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !3707 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !3711, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !3712, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !3713, metadata !DIExpression()), !dbg !3715
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !3714, metadata !DIExpression()), !dbg !3715
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #7, !dbg !3716
  ret i32 %call, !dbg !3717
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @lto_input_function_body(%struct.lto_file_decl_data* %file_data, %union.tree_node* %fn_decl, i8* %data) local_unnamed_addr #5 !dbg !3718 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %file_data, metadata !3722, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_decl, metadata !3723, metadata !DIExpression()), !dbg !3725
  call void @llvm.dbg.value(metadata i8* %data, metadata !3724, metadata !DIExpression()), !dbg !3725
  store %union.tree_node* %fn_decl, %union.tree_node** @current_function_decl, align 8, !dbg !3726
  tail call fastcc void @lto_read_body(%struct.lto_file_decl_data* %file_data, %union.tree_node* %fn_decl, i8* %data, i32 1) #8, !dbg !3727
  ret void, !dbg !3728
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_read_body(%struct.lto_file_decl_data* %file_data, %union.tree_node* %fn_decl, i8* %data, i32 %section_type) unnamed_addr #5 !dbg !3729 {
entry:
  %ib_cfg = alloca %struct.lto_input_block, align 8
  %ib_main = alloca %struct.lto_input_block, align 8
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %file_data, metadata !3733, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_decl, metadata !3734, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i8* %data, metadata !3735, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 %section_type, metadata !3736, metadata !DIExpression()), !dbg !3753
  %0 = bitcast %struct.lto_input_block* %ib_cfg to i8*, !dbg !3754
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !3754
  %1 = bitcast %struct.lto_input_block* %ib_main to i8*, !dbg !3755
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #6, !dbg !3755
  call void @llvm.dbg.value(metadata i8* %data, metadata !3737, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.value(metadata i32 36, metadata !3739, metadata !DIExpression()), !dbg !3753
  %cfg_size = getelementptr inbounds i8, i8* %data, i64 24, !dbg !3756
  %2 = bitcast i8* %cfg_size to i32*, !dbg !3756
  %3 = load i32, i32* %2, align 4, !dbg !3756
  %add = add nsw i32 %3, 36, !dbg !3757
  call void @llvm.dbg.value(metadata i32 %add, metadata !3740, metadata !DIExpression()), !dbg !3753
  %main_size = getelementptr inbounds i8, i8* %data, i64 28, !dbg !3758
  %4 = bitcast i8* %main_size to i32*, !dbg !3758
  %5 = load i32, i32* %4, align 4, !dbg !3758
  %add1 = add nsw i32 %add, %5, !dbg !3759
  call void @llvm.dbg.value(metadata i32 %add1, metadata !3741, metadata !DIExpression()), !dbg !3753
  %add.ptr = getelementptr inbounds i8, i8* %data, i64 36, !dbg !3760
  %data2 = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib_cfg, i64 0, i32 0, !dbg !3760
  store i8* %add.ptr, i8** %data2, align 8, !dbg !3760
  %p = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib_cfg, i64 0, i32 1, !dbg !3760
  store i32 0, i32* %p, align 8, !dbg !3760
  %len = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib_cfg, i64 0, i32 2, !dbg !3760
  store i32 %3, i32* %len, align 4, !dbg !3760
  %idx.ext5 = sext i32 %add to i64, !dbg !3762
  %add.ptr6 = getelementptr inbounds i8, i8* %data, i64 %idx.ext5, !dbg !3762
  %data7 = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib_main, i64 0, i32 0, !dbg !3762
  store i8* %add.ptr6, i8** %data7, align 8, !dbg !3762
  %p8 = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib_main, i64 0, i32 1, !dbg !3762
  store i32 0, i32* %p8, align 8, !dbg !3762
  %len10 = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib_main, i64 0, i32 2, !dbg !3762
  store i32 %5, i32* %len10, align 4, !dbg !3762
  %idx.ext13 = sext i32 %add1 to i64, !dbg !3764
  %add.ptr14 = getelementptr inbounds i8, i8* %data, i64 %idx.ext13, !dbg !3764
  %string_size = getelementptr inbounds i8, i8* %data, i64 32, !dbg !3765
  %6 = bitcast i8* %string_size to i32*, !dbg !3765
  %7 = load i32, i32* %6, align 4, !dbg !3765
  %call = tail call %struct.data_in* @lto_data_in_create(%struct.lto_file_decl_data* %file_data, i8* %add.ptr14, i32 %7, %struct.VEC_ld_plugin_symbol_resolution_t_heap* null) #8, !dbg !3766
  call void @llvm.dbg.value(metadata %struct.data_in* %call, metadata !3738, metadata !DIExpression()), !dbg !3753
  %major_version = bitcast i8* %data to i16*, !dbg !3767
  %8 = load i16, i16* %major_version, align 4, !dbg !3767
  %conv = sext i16 %8 to i32, !dbg !3768
  %minor_version = getelementptr inbounds i8, i8* %data, i64 2, !dbg !3769
  %9 = bitcast i8* %minor_version to i16*, !dbg !3769
  %10 = load i16, i16* %9, align 2, !dbg !3769
  %conv16 = sext i16 %10 to i32, !dbg !3770
  tail call void @lto_check_version(i32 %conv, i32 %conv16) #7, !dbg !3771
  %cmp = icmp eq i32 %section_type, 1, !dbg !3772
  br i1 %cmp, label %if.then, label %if.else, !dbg !3773

if.then:                                          ; preds = %entry
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %fn_decl, i64 0, i32 0, i32 1, !dbg !3774
  %11 = load %struct.function*, %struct.function** %f, align 8, !dbg !3774
  call void @llvm.dbg.value(metadata %struct.function* %11, metadata !3749, metadata !DIExpression()), !dbg !3775
  tail call void @push_cfun(%struct.function* %11) #7, !dbg !3776
  tail call void @init_tree_ssa(%struct.function* %11) #7, !dbg !3777
  %call18 = tail call %struct.lto_in_decl_state* @lto_get_function_in_decl_state(%struct.lto_file_decl_data* %file_data, %union.tree_node* %fn_decl) #7, !dbg !3778
  call void @llvm.dbg.value(metadata %struct.lto_in_decl_state* %call18, metadata !3752, metadata !DIExpression()), !dbg !3775
  %tobool = icmp eq %struct.lto_in_decl_state* %call18, null, !dbg !3779
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3779

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1485, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3779
  br label %cond.end, !dbg !3779

cond.end:                                         ; preds = %if.then, %cond.true
  %current_decl_state = getelementptr inbounds %struct.lto_file_decl_data, %struct.lto_file_decl_data* %file_data, i64 0, i32 0, !dbg !3780
  store %struct.lto_in_decl_state* %call18, %struct.lto_in_decl_state** %current_decl_state, align 8, !dbg !3781
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib_cfg, metadata !3742, metadata !DIExpression(DW_OP_deref)), !dbg !3753
  call fastcc void @input_cfg(%struct.lto_input_block* nonnull %ib_cfg, %struct.function* %11) #8, !dbg !3782
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib_main, metadata !3748, metadata !DIExpression(DW_OP_deref)), !dbg !3753
  call fastcc void @input_function(%union.tree_node* %fn_decl, %struct.data_in* %call, %struct.lto_input_block* nonnull %ib_main) #8, !dbg !3783
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3784
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 3, !dbg !3785
  %13 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3785
  %in_ssa_p = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %13, i64 0, i32 10, !dbg !3786
  %bf.load = load i8, i8* %in_ssa_p, align 8, !dbg !3787
  %bf.set = or i8 %bf.load, 1, !dbg !3787
  store i8 %bf.set, i8* %in_ssa_p, align 8, !dbg !3787
  %global_decl_state = getelementptr inbounds %struct.lto_file_decl_data, %struct.lto_file_decl_data* %file_data, i64 0, i32 1, !dbg !3788
  %14 = bitcast %struct.lto_in_decl_state** %global_decl_state to i64*, !dbg !3788
  %15 = load i64, i64* %14, align 8, !dbg !3788
  %16 = bitcast %struct.lto_file_decl_data* %file_data to i64*, !dbg !3789
  store i64 %15, i64* %16, align 8, !dbg !3789
  call void @pop_cfun() #7, !dbg !3790
  br label %if.end, !dbg !3791

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib_main, metadata !3748, metadata !DIExpression(DW_OP_deref)), !dbg !3753
  call fastcc void @input_alias_pairs(%struct.lto_input_block* nonnull %ib_main, %struct.data_in* %call) #8, !dbg !3792
  br label %if.end

if.end:                                           ; preds = %if.else, %cond.end
  call fastcc void @clear_line_info(%struct.data_in* %call) #8, !dbg !3794
  call void @lto_data_in_delete(%struct.data_in* %call) #8, !dbg !3795
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #6, !dbg !3796
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !3796
  ret void, !dbg !3796
}

; Function Attrs: nounwind uwtable
define dso_local void @lto_input_constructors_and_inits(%struct.lto_file_decl_data* %file_data, i8* %data) local_unnamed_addr #5 !dbg !3797 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %file_data, metadata !3801, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.value(metadata i8* %data, metadata !3802, metadata !DIExpression()), !dbg !3803
  tail call fastcc void @lto_read_body(%struct.lto_file_decl_data* %file_data, %union.tree_node* null, i8* %data, i32 2) #8, !dbg !3804
  ret void, !dbg !3805
}

; Function Attrs: nounwind uwtable
define dso_local %struct.bitpack_d* @lto_input_bitpack(%struct.lto_input_block* %ib) local_unnamed_addr #5 !dbg !3806 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !3817, metadata !DIExpression()), !dbg !3825
  %call = tail call %struct.bitpack_d* @bitpack_create() #7, !dbg !3826
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call, metadata !3820, metadata !DIExpression()), !dbg !3825
  %call1 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3827
  %conv = trunc i64 %call1 to i32, !dbg !3827
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3819, metadata !DIExpression()), !dbg !3825
  %cmp = icmp ult i32 %conv, 20, !dbg !3828
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3828

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1867, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3828
  br label %cond.end, !dbg !3828

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i32 0, metadata !3818, metadata !DIExpression()), !dbg !3825
  %values = getelementptr inbounds %struct.bitpack_d, %struct.bitpack_d* %call, i64 0, i32 2, !dbg !3829
  br label %for.cond, !dbg !3830

for.cond:                                         ; preds = %for.body, %cond.end
  %i.0 = phi i32 [ 0, %cond.end ], [ %inc, %for.body ], !dbg !3831
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3818, metadata !DIExpression()), !dbg !3825
  %exitcond = icmp eq i32 %i.0, %conv, !dbg !3832
  br i1 %exitcond, label %for.end, label %for.body, !dbg !3833

for.body:                                         ; preds = %for.cond
  %call5 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3834
  call void @llvm.dbg.value(metadata i64 %call5, metadata !3821, metadata !DIExpression()), !dbg !3829
  %call6 = tail call fastcc i64* @VEC_bitpack_word_t_heap_safe_push(%struct.VEC_bitpack_word_t_heap** nonnull %values, i64 %call5) #8, !dbg !3835
  %inc = add i32 %i.0, 1, !dbg !3836
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3818, metadata !DIExpression()), !dbg !3825
  br label %for.cond, !dbg !3837, !llvm.loop !3838

for.end:                                          ; preds = %for.cond
  ret %struct.bitpack_d* %call, !dbg !3840
}

declare dso_local %struct.bitpack_d* @bitpack_create() local_unnamed_addr #2

declare dso_local i64 @lto_input_uleb128(%struct.lto_input_block*) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i64* @VEC_bitpack_word_t_heap_safe_push(%struct.VEC_bitpack_word_t_heap** %vec_, i64 %obj_) unnamed_addr #0 !dbg !3841 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitpack_word_t_heap** %vec_, metadata !3848, metadata !DIExpression()), !dbg !3850
  call void @llvm.dbg.value(metadata i64 %obj_, metadata !3849, metadata !DIExpression()), !dbg !3850
  %call = tail call fastcc i32 @VEC_bitpack_word_t_heap_reserve(%struct.VEC_bitpack_word_t_heap** %vec_, i32 1) #8, !dbg !3851
  %0 = load %struct.VEC_bitpack_word_t_heap*, %struct.VEC_bitpack_word_t_heap** %vec_, align 8, !dbg !3851
  %tobool = icmp eq %struct.VEC_bitpack_word_t_heap* %0, null, !dbg !3851
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3851

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_bitpack_word_t_heap, %struct.VEC_bitpack_word_t_heap* %0, i64 0, i32 0, !dbg !3851
  br label %cond.end, !dbg !3851

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_bitpack_word_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3851
  %call1 = tail call fastcc i64* @VEC_bitpack_word_t_base_quick_push(%struct.VEC_bitpack_word_t_base* %cond, i64 %obj_) #8, !dbg !3851
  ret i64* %call1, !dbg !3851
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) local_unnamed_addr #5 !dbg !3852 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !3856, metadata !DIExpression()), !dbg !3868
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !3857, metadata !DIExpression()), !dbg !3868
  %call = tail call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !3869
  call void @llvm.dbg.value(metadata i32 %call, metadata !3858, metadata !DIExpression()), !dbg !3868
  %cmp = icmp ult i32 %call, 249, !dbg !3870
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !3870

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2700, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3870
  br label %cond.end, !dbg !3870

cond.end:                                         ; preds = %entry, %cond.true
  %cmp1 = icmp eq i32 %call, 0, !dbg !3871
  br i1 %cmp1, label %if.end36, label %if.else, !dbg !3872

if.else:                                          ; preds = %cond.end
  %call.off = add i32 %call, -238, !dbg !3873
  %0 = icmp ult i32 %call.off, 11, !dbg !3873
  br i1 %0, label %if.then4, label %if.else6, !dbg !3873

if.then4:                                         ; preds = %if.else
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3874
  %call5 = tail call fastcc %union.tree_node* @lto_input_tree_ref(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.function* %1, i32 %call) #8, !dbg !3876
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3859, metadata !DIExpression()), !dbg !3868
  br label %if.end36, !dbg !3877

if.else6:                                         ; preds = %if.else
  switch i32 %call, label %if.else24 [
    i32 236, label %if.then8
    i32 227, label %if.then12
    i32 237, label %if.then16
  ], !dbg !3878

if.then8:                                         ; preds = %if.else6
  %call9 = tail call fastcc %union.tree_node* @lto_get_pickled_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !3879
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !3859, metadata !DIExpression()), !dbg !3868
  br label %if.end36, !dbg !3881

if.then12:                                        ; preds = %if.else6
  %call13 = tail call fastcc %union.tree_node* @lto_get_builtin_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !3882
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !3859, metadata !DIExpression()), !dbg !3868
  br label %if.end36, !dbg !3884

if.then16:                                        ; preds = %if.else6
  %call17 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3885
  call void @llvm.dbg.value(metadata i64 %call17, metadata !3860, metadata !DIExpression()), !dbg !3886
  %file_data = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !3887
  %2 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data, align 8, !dbg !3887
  %conv = trunc i64 %call17 to i32, !dbg !3888
  %call18 = tail call fastcc %union.tree_node* @lto_file_decl_data_get_var_decl(%struct.lto_file_decl_data* %2, i32 %conv) #8, !dbg !3889
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !3859, metadata !DIExpression()), !dbg !3868
  %call19 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3890
  call void @llvm.dbg.value(metadata i64 %call19, metadata !3860, metadata !DIExpression()), !dbg !3886
  %3 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data, align 8, !dbg !3891
  %conv21 = trunc i64 %call19 to i32, !dbg !3892
  %call22 = tail call fastcc %union.tree_node* @lto_file_decl_data_get_var_decl(%struct.lto_file_decl_data* %3, i32 %conv21) #8, !dbg !3893
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !3867, metadata !DIExpression()), !dbg !3886
  %call23 = tail call zeroext i8 @varpool_extra_name_alias(%union.tree_node* %call18, %union.tree_node* %call22) #7, !dbg !3894
  br label %if.end36, !dbg !3895

if.else24:                                        ; preds = %if.else6
  %call25 = tail call fastcc i32 @lto_tree_code_to_tag(i32 23) #8, !dbg !3896
  %cmp26 = icmp eq i32 %call, %call25, !dbg !3898
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !3899

if.then28:                                        ; preds = %if.else24
  %call29 = tail call fastcc %union.tree_node* @lto_input_integer_cst(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !3900
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !3859, metadata !DIExpression()), !dbg !3868
  br label %if.end36, !dbg !3902

if.else30:                                        ; preds = %if.else24
  %call31 = tail call fastcc %union.tree_node* @lto_read_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in, i32 %call) #8, !dbg !3903
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !3859, metadata !DIExpression()), !dbg !3868
  br label %if.end36

if.end36:                                         ; preds = %if.then4, %if.then12, %if.then28, %if.else30, %if.then16, %if.then8, %cond.end
  %result.5 = phi %union.tree_node* [ null, %cond.end ], [ %call5, %if.then4 ], [ %call9, %if.then8 ], [ %call13, %if.then12 ], [ %call18, %if.then16 ], [ %call29, %if.then28 ], [ %call31, %if.else30 ], !dbg !3905
  call void @llvm.dbg.value(metadata %union.tree_node* %result.5, metadata !3859, metadata !DIExpression()), !dbg !3868
  ret %union.tree_node* %result.5, !dbg !3906
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @input_record_start(%struct.lto_input_block* %ib) unnamed_addr #5 !dbg !3907 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !3911, metadata !DIExpression()), !dbg !3913
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3914
  %conv = trunc i64 %call to i32, !dbg !3915
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3912, metadata !DIExpression()), !dbg !3913
  ret i32 %conv, !dbg !3916
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lto_input_tree_ref(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.function* %fn, i32 %tag) unnamed_addr #5 !dbg !3917 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !3921, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !3922, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !3923, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.value(metadata i32 %tag, metadata !3924, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3926, metadata !DIExpression()), !dbg !3927
  tail call fastcc void @lto_tag_check_range(i32 %tag, i32 238, i32 248) #8, !dbg !3928
  switch i32 %tag, label %sw.default [
    i32 245, label %sw.bb
    i32 243, label %sw.bb2
    i32 238, label %sw.bb8
    i32 239, label %sw.bb13
    i32 244, label %sw.bb18
    i32 241, label %sw.bb23
    i32 248, label %sw.bb28
    i32 242, label %sw.bb28
    i32 246, label %sw.bb28
    i32 247, label %sw.bb28
    i32 240, label %sw.bb28
  ], !dbg !3929

sw.bb:                                            ; preds = %entry
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3930
  call void @llvm.dbg.value(metadata i64 %call, metadata !3925, metadata !DIExpression()), !dbg !3927
  %file_data = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !3932
  %0 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data, align 8, !dbg !3932
  %conv = trunc i64 %call to i32, !dbg !3933
  %call1 = tail call fastcc %union.tree_node* @lto_file_decl_data_get_type(%struct.lto_file_decl_data* %0, i32 %conv) #8, !dbg !3934
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3926, metadata !DIExpression()), !dbg !3927
  br label %sw.epilog, !dbg !3935

sw.bb2:                                           ; preds = %entry
  %call3 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3936
  call void @llvm.dbg.value(metadata i64 %call3, metadata !3925, metadata !DIExpression()), !dbg !3927
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 3, !dbg !3937
  %1 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !3937
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %1, i64 0, i32 2, !dbg !3937
  %2 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !3937
  %tobool = icmp eq %struct.VEC_tree_gc* %2, null, !dbg !3937
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3937

cond.true:                                        ; preds = %sw.bb2
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %2, i64 0, i32 0, !dbg !3937
  br label %cond.end, !dbg !3937

cond.end:                                         ; preds = %sw.bb2, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %sw.bb2 ], !dbg !3937
  %conv6 = trunc i64 %call3 to i32, !dbg !3937
  %call7 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %conv6) #8, !dbg !3937
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !3926, metadata !DIExpression()), !dbg !3927
  br label %sw.epilog, !dbg !3938

sw.bb8:                                           ; preds = %entry
  %call9 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3939
  call void @llvm.dbg.value(metadata i64 %call9, metadata !3925, metadata !DIExpression()), !dbg !3927
  %file_data10 = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !3940
  %3 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data10, align 8, !dbg !3940
  %conv11 = trunc i64 %call9 to i32, !dbg !3941
  %call12 = tail call fastcc %union.tree_node* @lto_file_decl_data_get_field_decl(%struct.lto_file_decl_data* %3, i32 %conv11) #8, !dbg !3942
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !3926, metadata !DIExpression()), !dbg !3927
  br label %sw.epilog, !dbg !3943

sw.bb13:                                          ; preds = %entry
  %call14 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3944
  call void @llvm.dbg.value(metadata i64 %call14, metadata !3925, metadata !DIExpression()), !dbg !3927
  %file_data15 = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !3945
  %4 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data15, align 8, !dbg !3945
  %conv16 = trunc i64 %call14 to i32, !dbg !3946
  %call17 = tail call fastcc %union.tree_node* @lto_file_decl_data_get_fn_decl(%struct.lto_file_decl_data* %4, i32 %conv16) #8, !dbg !3947
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !3926, metadata !DIExpression()), !dbg !3927
  br label %sw.epilog, !dbg !3948

sw.bb18:                                          ; preds = %entry
  %call19 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3949
  call void @llvm.dbg.value(metadata i64 %call19, metadata !3925, metadata !DIExpression()), !dbg !3927
  %file_data20 = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !3950
  %5 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data20, align 8, !dbg !3950
  %conv21 = trunc i64 %call19 to i32, !dbg !3951
  %call22 = tail call fastcc %union.tree_node* @lto_file_decl_data_get_type_decl(%struct.lto_file_decl_data* %5, i32 %conv21) #8, !dbg !3952
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !3926, metadata !DIExpression()), !dbg !3927
  br label %sw.epilog, !dbg !3953

sw.bb23:                                          ; preds = %entry
  %call24 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3954
  call void @llvm.dbg.value(metadata i64 %call24, metadata !3925, metadata !DIExpression()), !dbg !3927
  %file_data25 = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !3955
  %6 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data25, align 8, !dbg !3955
  %conv26 = trunc i64 %call24 to i32, !dbg !3956
  %call27 = tail call fastcc %union.tree_node* @lto_file_decl_data_get_namespace_decl(%struct.lto_file_decl_data* %6, i32 %conv26) #8, !dbg !3957
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !3926, metadata !DIExpression()), !dbg !3927
  br label %sw.epilog, !dbg !3958

sw.bb28:                                          ; preds = %entry, %entry, %entry, %entry, %entry
  %call29 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3959
  call void @llvm.dbg.value(metadata i64 %call29, metadata !3925, metadata !DIExpression()), !dbg !3927
  %file_data30 = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !3960
  %7 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data30, align 8, !dbg !3960
  %conv31 = trunc i64 %call29 to i32, !dbg !3961
  %call32 = tail call fastcc %union.tree_node* @lto_file_decl_data_get_var_decl(%struct.lto_file_decl_data* %7, i32 %conv31) #8, !dbg !3962
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !3926, metadata !DIExpression()), !dbg !3927
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !3963
  %bf.load = load i64, i64* %8, align 8, !dbg !3963
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !3965
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !3965
  br i1 %cmp, label %if.then, label %sw.epilog, !dbg !3966

if.then:                                          ; preds = %sw.bb28
  %call35 = tail call %struct.varpool_node* @varpool_node(%union.tree_node* %call32) #7, !dbg !3967
  tail call void @varpool_mark_needed_node(%struct.varpool_node* %call35) #7, !dbg !3968
  br label %sw.epilog, !dbg !3968

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 366, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3969
  br label %sw.epilog, !dbg !3970

sw.epilog:                                        ; preds = %sw.bb28, %if.then, %sw.default, %sw.bb23, %sw.bb18, %sw.bb13, %sw.bb8, %cond.end, %sw.bb
  %result.0 = phi %union.tree_node* [ null, %sw.default ], [ %call27, %sw.bb23 ], [ %call22, %sw.bb18 ], [ %call17, %sw.bb13 ], [ %call12, %sw.bb8 ], [ %call7, %cond.end ], [ %call1, %sw.bb ], [ %call32, %if.then ], [ %call32, %sw.bb28 ], !dbg !3927
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !3926, metadata !DIExpression()), !dbg !3927
  %tobool36 = icmp eq %union.tree_node* %result.0, null, !dbg !3971
  br i1 %tobool36, label %cond.true37, label %cond.end39, !dbg !3971

cond.true37:                                      ; preds = %sw.epilog
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 369, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3971
  br label %cond.end39, !dbg !3971

cond.end39:                                       ; preds = %sw.epilog, %cond.true37
  ret %union.tree_node* %result.0, !dbg !3972
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lto_get_pickled_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) unnamed_addr #5 !dbg !3973 {
entry:
  %fwd_ib = alloca %struct.lto_input_block, align 8
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !3975, metadata !DIExpression()), !dbg !3984
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !3976, metadata !DIExpression()), !dbg !3984
  %call = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !3985
  call void @llvm.dbg.value(metadata i64 %call, metadata !3977, metadata !DIExpression()), !dbg !3984
  %call1 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3986
  %conv = trunc i64 %call1 to i32, !dbg !3987
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3979, metadata !DIExpression()), !dbg !3984
  %call2 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !3988
  call void @llvm.dbg.value(metadata i64 %call2, metadata !3980, metadata !DIExpression()), !dbg !3984
  %0 = icmp ult i64 %call2, 4294967296, !dbg !3989
  br i1 %0, label %cond.end, label %cond.true, !dbg !3989

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2553, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3989
  br label %cond.end, !dbg !3989

cond.end:                                         ; preds = %entry, %cond.true
  %reader_cache = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 10, !dbg !3990
  %1 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %reader_cache, align 8, !dbg !3990
  %conv6 = trunc i64 %call to i32, !dbg !3991
  %call7 = tail call %union.tree_node* @lto_streamer_cache_get(%struct.lto_streamer_cache_d* %1, i32 %conv6) #7, !dbg !3992
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !3978, metadata !DIExpression()), !dbg !3984
  %cmp8 = icmp eq %union.tree_node* %call7, null, !dbg !3993
  br i1 %cmp8, label %if.then, label %if.end19, !dbg !3994

if.then:                                          ; preds = %cond.end
  %2 = bitcast %struct.lto_input_block* %fwd_ib to i8*, !dbg !3995
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #6, !dbg !3995
  %p = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib, i64 0, i32 1, !dbg !3996
  %3 = load i32, i32* %p, align 8, !dbg !3996
  %conv10 = zext i32 %3 to i64, !dbg !3998
  %cmp11 = icmp ugt i64 %call2, %conv10, !dbg !3999
  br i1 %cmp11, label %do.body, label %if.then13, !dbg !4000

if.then13:                                        ; preds = %if.then
  tail call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0)) #7, !dbg !4001
  br label %do.body, !dbg !4001

do.body:                                          ; preds = %if.then, %if.then13
  %4 = bitcast %struct.lto_input_block* %ib to i64*, !dbg !4002
  %5 = load i64, i64* %4, align 8, !dbg !4002
  %6 = bitcast %struct.lto_input_block* %fwd_ib to i64*, !dbg !4002
  store i64 %5, i64* %6, align 8, !dbg !4002
  %conv15 = trunc i64 %call2 to i32, !dbg !4002
  %p16 = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %fwd_ib, i64 0, i32 1, !dbg !4002
  store i32 %conv15, i32* %p16, align 8, !dbg !4002
  %len = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %ib, i64 0, i32 2, !dbg !4002
  %7 = load i32, i32* %len, align 4, !dbg !4002
  %len17 = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %fwd_ib, i64 0, i32 2, !dbg !4002
  store i32 %7, i32* %len17, align 4, !dbg !4002
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %fwd_ib, metadata !3981, metadata !DIExpression(DW_OP_deref)), !dbg !4004
  %call18 = call %union.tree_node* @lto_input_tree(%struct.lto_input_block* nonnull %fwd_ib, %struct.data_in* %data_in) #8, !dbg !4005
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !3978, metadata !DIExpression()), !dbg !3984
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #6, !dbg !4006
  br label %if.end19, !dbg !4007

if.end19:                                         ; preds = %do.body, %cond.end
  %result.0 = phi %union.tree_node* [ %call18, %do.body ], [ %call7, %cond.end ], !dbg !3984
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !3978, metadata !DIExpression()), !dbg !3984
  %tobool = icmp eq %union.tree_node* %result.0, null, !dbg !4008
  br i1 %tobool, label %cond.true23, label %land.lhs.true, !dbg !4008

land.lhs.true:                                    ; preds = %if.end19
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %result.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4008
  %bf.load = load i64, i64* %8, align 8, !dbg !4008
  %9 = trunc i64 %bf.load to i32, !dbg !4008
  %bf.cast = and i32 %9, 65535, !dbg !4008
  %call20 = call fastcc i32 @lto_tag_to_tree_code(i32 %conv) #8, !dbg !4008
  %cmp21 = icmp eq i32 %bf.cast, %call20, !dbg !4008
  br i1 %cmp21, label %cond.end25, label %cond.true23, !dbg !4008

cond.true23:                                      ; preds = %if.end19, %land.lhs.true
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2574, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4008
  br label %cond.end25, !dbg !4008

cond.end25:                                       ; preds = %land.lhs.true, %cond.true23
  ret %union.tree_node* %result.0, !dbg !4009
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lto_get_builtin_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) unnamed_addr #5 !dbg !4010 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !4012, metadata !DIExpression()), !dbg !4019
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4013, metadata !DIExpression()), !dbg !4019
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4020
  %conv = trunc i64 %call to i32, !dbg !4021
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4014, metadata !DIExpression()), !dbg !4019
  %0 = and i32 %conv, -2, !dbg !4022
  %switch = icmp eq i32 %0, 2, !dbg !4022
  br i1 %switch, label %cond.end, label %cond.true, !dbg !4022

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2593, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4022
  br label %cond.end, !dbg !4022

cond.end:                                         ; preds = %entry, %cond.true
  %call4 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4023
  %conv5 = trunc i64 %call4 to i32, !dbg !4024
  call void @llvm.dbg.value(metadata i32 %conv5, metadata !4015, metadata !DIExpression()), !dbg !4019
  %call6 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4025
  %conv7 = trunc i64 %call6 to i32, !dbg !4025
  call void @llvm.dbg.value(metadata i32 %conv7, metadata !4018, metadata !DIExpression()), !dbg !4019
  switch i32 %conv, label %if.else35 [
    i32 3, label %if.then
    i32 2, label %if.then28
  ], !dbg !4026

if.then:                                          ; preds = %cond.end
  %cmp16 = icmp ult i32 %conv5, 721, !dbg !4027
  br i1 %cmp16, label %cond.end20, label %cond.true18, !dbg !4027

cond.true18:                                      ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2602, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4027
  br label %cond.end20, !dbg !4027

cond.end20:                                       ; preds = %if.then, %cond.true18
  %idxprom = and i64 %call4, 4294967295, !dbg !4030
  %arrayidx = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %idxprom, !dbg !4030
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !4030
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4017, metadata !DIExpression()), !dbg !4019
  %tobool = icmp eq %union.tree_node* %1, null, !dbg !4031
  br i1 %tobool, label %cond.true22, label %if.end37, !dbg !4031

cond.true22:                                      ; preds = %cond.end20
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2604, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4031
  br label %if.end37, !dbg !4031

if.then28:                                        ; preds = %cond.end
  %2 = load %union.tree_node* (i32, i8)*, %union.tree_node* (i32, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 24), align 8, !dbg !4032
  %call29 = tail call %union.tree_node* %2(i32 %conv5, i8 zeroext 1) #7, !dbg !4035
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4017, metadata !DIExpression()), !dbg !4019
  %tobool30 = icmp eq %union.tree_node* %call29, null, !dbg !4036
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4038
  %cmp32 = icmp eq %union.tree_node* %call29, %3, !dbg !4039
  %or.cond = or i1 %tobool30, %cmp32, !dbg !4040
  br i1 %or.cond, label %if.then34, label %if.end37, !dbg !4040

if.then34:                                        ; preds = %if.then28
  tail call void (i8*, ...) @fatal_error(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !4041
  br label %if.end37, !dbg !4041

if.else35:                                        ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2613, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4042
  br label %if.end37

if.end37:                                         ; preds = %cond.end20, %if.else35, %if.then28, %if.then34, %cond.true22
  %result.1 = phi %union.tree_node* [ %1, %cond.end20 ], [ null, %cond.true22 ], [ undef, %if.else35 ], [ %call29, %if.then28 ], [ %call29, %if.then34 ], !dbg !4043
  call void @llvm.dbg.value(metadata %union.tree_node* %result.1, metadata !4017, metadata !DIExpression()), !dbg !4019
  %call38 = tail call fastcc i8* @input_string(%struct.data_in* %data_in, %struct.lto_input_block* %ib) #8, !dbg !4044
  call void @llvm.dbg.value(metadata i8* %call38, metadata !4016, metadata !DIExpression()), !dbg !4019
  %tobool39 = icmp eq i8* %call38, null, !dbg !4045
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !4047

if.then40:                                        ; preds = %if.end37
  tail call void @set_builtin_user_assembler_name(%union.tree_node* %result.1, i8* nonnull %call38) #7, !dbg !4048
  br label %if.end41, !dbg !4048

if.end41:                                         ; preds = %if.end37, %if.then40
  %reader_cache = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 10, !dbg !4049
  %4 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %reader_cache, align 8, !dbg !4049
  %call42 = tail call zeroext i8 @lto_streamer_cache_insert_at(%struct.lto_streamer_cache_d* %4, %union.tree_node* %result.1, i32 %conv7) #7, !dbg !4050
  ret %union.tree_node* %result.1, !dbg !4051
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @lto_file_decl_data_get_var_decl(%struct.lto_file_decl_data* %data, i32 %idx) unnamed_addr #0 !dbg !4052 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %data, metadata !4056, metadata !DIExpression()), !dbg !4059
  call void @llvm.dbg.value(metadata i32 %idx, metadata !4057, metadata !DIExpression()), !dbg !4059
  %current_decl_state = getelementptr inbounds %struct.lto_file_decl_data, %struct.lto_file_decl_data* %data, i64 0, i32 0, !dbg !4060
  %0 = load %struct.lto_in_decl_state*, %struct.lto_in_decl_state** %current_decl_state, align 8, !dbg !4060
  call void @llvm.dbg.value(metadata %struct.lto_in_decl_state* %0, metadata !4058, metadata !DIExpression()), !dbg !4059
  %size = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 3, i32 1, !dbg !4060
  %1 = load i32, i32* %size, align 8, !dbg !4060
  %cmp = icmp ugt i32 %1, %idx, !dbg !4060
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4060

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 1044, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4060
  br label %cond.end, !dbg !4060

cond.end:                                         ; preds = %entry, %cond.true
  %trees = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 3, i32 0, !dbg !4060
  %2 = load %union.tree_node**, %union.tree_node*** %trees, align 8, !dbg !4060
  %idxprom = zext i32 %idx to i64, !dbg !4060
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %idxprom, !dbg !4060
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !4060
  ret %union.tree_node* %3, !dbg !4060
}

declare dso_local zeroext i8 @varpool_extra_name_alias(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lto_tree_code_to_tag(i32 %code) unnamed_addr #0 !dbg !4061 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !4065, metadata !DIExpression()), !dbg !4066
  %add = add i32 %code, 1, !dbg !4067
  ret i32 %add, !dbg !4068
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lto_input_integer_cst(%struct.lto_input_block* %ib, %struct.data_in* %data_in) unnamed_addr #5 !dbg !4069 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !4071, metadata !DIExpression()), !dbg !4078
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4072, metadata !DIExpression()), !dbg !4078
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4079
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4074, metadata !DIExpression()), !dbg !4078
  %call1 = tail call zeroext i8 @lto_input_1_unsigned(%struct.lto_input_block* %ib) #7, !dbg !4080
  %cmp = icmp eq i8 %call1, 0, !dbg !4081
  call void @llvm.dbg.value(metadata i1 %cmp, metadata !4077, metadata !DIExpression()), !dbg !4078
  %call4 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4082
  call void @llvm.dbg.value(metadata i64 %call4, metadata !4075, metadata !DIExpression()), !dbg !4078
  %call5 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4083
  call void @llvm.dbg.value(metadata i64 %call5, metadata !4076, metadata !DIExpression()), !dbg !4078
  %call6 = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %call, i64 %call4, i64 %call5) #7, !dbg !4084
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !4073, metadata !DIExpression()), !dbg !4078
  br i1 %cmp, label %if.end, label %if.then, !dbg !4085

if.then:                                          ; preds = %entry
  %call7 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* %call6) #7, !dbg !4086
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !4073, metadata !DIExpression()), !dbg !4078
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4089
  %bf.load = load i64, i64* %0, align 8, !dbg !4090
  %bf.set = or i64 %bf.load, 134217728, !dbg !4090
  store i64 %bf.set, i64* %0, align 8, !dbg !4090
  br label %if.end, !dbg !4091

if.end:                                           ; preds = %entry, %if.then
  %result.0 = phi %union.tree_node* [ %call7, %if.then ], [ %call6, %entry ], !dbg !4078
  call void @llvm.dbg.value(metadata %union.tree_node* %result.0, metadata !4073, metadata !DIExpression()), !dbg !4078
  ret %union.tree_node* %result.0, !dbg !4092
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lto_read_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in, i32 %tag) unnamed_addr #5 !dbg !4093 {
entry:
  %ix = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !4097, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4098, metadata !DIExpression()), !dbg !4102
  call void @llvm.dbg.value(metadata i32 %tag, metadata !4099, metadata !DIExpression()), !dbg !4102
  %0 = bitcast i32* %ix to i8*, !dbg !4103
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #6, !dbg !4103
  call void @llvm.dbg.value(metadata i32* %ix, metadata !4101, metadata !DIExpression(DW_OP_deref)), !dbg !4102
  %call = call fastcc %union.tree_node* @lto_materialize_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in, i32 %tag, i32* nonnull %ix) #8, !dbg !4104
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4100, metadata !DIExpression()), !dbg !4102
  call fastcc void @lto_input_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %call) #8, !dbg !4105
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4106
  %bf.load = load i64, i64* %1, align 8, !dbg !4106
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4108
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4108
  br i1 %cmp, label %if.then, label %if.end, !dbg !4109

if.then:                                          ; preds = %entry
  %call1 = call fastcc zeroext i8 @lto_stream_as_builtin_p(%union.tree_node* %call) #8, !dbg !4110
  %tobool = icmp eq i8 %call1, 0, !dbg !4110
  br i1 %tobool, label %if.end, label %cond.true, !dbg !4110

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2642, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4110
  br label %if.end, !dbg !4110

if.end:                                           ; preds = %if.then, %cond.true, %entry
  %bf.load3 = load i64, i64* %1, align 8, !dbg !4111
  %bf.cast52 = and i64 %bf.load3, 65535, !dbg !4113
  %cmp6 = icmp eq i64 %bf.cast52, 32, !dbg !4113
  br i1 %cmp6, label %if.then7, label %if.else, !dbg !4114

if.then7:                                         ; preds = %if.end
  call fastcc void @lto_register_var_decl_in_symtab(%struct.data_in* %data_in, %union.tree_node* %call) #8, !dbg !4115
  br label %if.end18, !dbg !4115

if.else:                                          ; preds = %if.end
  %cmp12 = icmp eq i64 %bf.cast52, 29, !dbg !4116
  br i1 %cmp12, label %land.lhs.true, label %if.end18, !dbg !4118

land.lhs.true:                                    ; preds = %if.else
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !4119
  %bf.load13 = load i32, i32* %built_in_class, align 8, !dbg !4119
  %bf.clear14 = and i32 %bf.load13, 6144, !dbg !4119
  %cmp15 = icmp eq i32 %bf.clear14, 0, !dbg !4119
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !4120

if.then16:                                        ; preds = %land.lhs.true
  call fastcc void @lto_register_function_decl_in_symtab(%struct.data_in* %data_in, %union.tree_node* %call) #8, !dbg !4121
  br label %if.end18, !dbg !4121

if.end18:                                         ; preds = %land.lhs.true, %if.else, %if.then16, %if.then7
  %call19 = call zeroext i8 @lto_input_1_unsigned(%struct.lto_input_block* %ib) #7, !dbg !4122
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #6, !dbg !4123
  ret %union.tree_node* %call, !dbg !4124
}

; Function Attrs: nounwind uwtable
define dso_local void @lto_init_reader() local_unnamed_addr #5 !dbg !4125 {
entry:
  tail call void @lto_streamer_init() #7, !dbg !4126
  %call = tail call i8* @memset(i8* bitcast (%struct.lto_stats_d* @lto_stats to i8*), i32 0, i64 1664) #7, !dbg !4127
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* null) #7, !dbg !4128
  %call1 = tail call %struct.htab* @htab_create(i64 37, i32 (i8*)* nonnull @hash_string_slot_node, i32 (i8*, i8*)* nonnull @eq_string_slot_node, void (i8*)* nonnull @free) #7, !dbg !4129
  store %struct.htab* %call1, %struct.htab** @file_name_hash_table, align 8, !dbg !4130
  tail call void @gimple_register_cfg_hooks() #7, !dbg !4131
  ret void, !dbg !4132
}

declare dso_local void @lto_streamer_init() local_unnamed_addr #2

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @hash_string_slot_node(i8* %p) #5 !dbg !4133 {
entry:
  call void @llvm.dbg.value(metadata i8* %p, metadata !4135, metadata !DIExpression()), !dbg !4137
  call void @llvm.dbg.value(metadata i8* %p, metadata !4136, metadata !DIExpression()), !dbg !4137
  %s = bitcast i8* %p to i8**, !dbg !4138
  %0 = load i8*, i8** %s, align 8, !dbg !4138
  %call = tail call i32 @htab_hash_string(i8* %0) #7, !dbg !4139
  ret i32 %call, !dbg !4140
}

; Function Attrs: nounwind uwtable
define internal i32 @eq_string_slot_node(i8* %p1, i8* %p2) #5 !dbg !4141 {
entry:
  call void @llvm.dbg.value(metadata i8* %p1, metadata !4143, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i8* %p2, metadata !4144, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i8* %p1, metadata !4145, metadata !DIExpression()), !dbg !4147
  call void @llvm.dbg.value(metadata i8* %p2, metadata !4146, metadata !DIExpression()), !dbg !4147
  %s = bitcast i8* %p1 to i8**, !dbg !4148
  %0 = load i8*, i8** %s, align 8, !dbg !4148
  %s1 = bitcast i8* %p2 to i8**, !dbg !4149
  %1 = load i8*, i8** %s1, align 8, !dbg !4149
  %call = tail call i32 @strcmp(i8* %0, i8* %1) #7, !dbg !4150
  %cmp = icmp eq i32 %call, 0, !dbg !4151
  %conv = zext i1 %cmp to i32, !dbg !4151
  ret i32 %conv, !dbg !4152
}

declare dso_local void @free(i8*) #2

declare dso_local void @gimple_register_cfg_hooks() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.data_in* @lto_data_in_create(%struct.lto_file_decl_data* %file_data, i8* %strings, i32 %len, %struct.VEC_ld_plugin_symbol_resolution_t_heap* %resolutions) local_unnamed_addr #5 !dbg !4153 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %file_data, metadata !4157, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i8* %strings, metadata !4158, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata i32 %len, metadata !4159, metadata !DIExpression()), !dbg !4162
  call void @llvm.dbg.value(metadata %struct.VEC_ld_plugin_symbol_resolution_t_heap* %resolutions, metadata !4160, metadata !DIExpression()), !dbg !4162
  %call = tail call i8* @xcalloc(i64 1, i64 72) #7, !dbg !4163
  %0 = bitcast i8* %call to %struct.data_in*, !dbg !4163
  call void @llvm.dbg.value(metadata %struct.data_in* %0, metadata !4161, metadata !DIExpression()), !dbg !4162
  %file_data1 = bitcast i8* %call to %struct.lto_file_decl_data**, !dbg !4164
  store %struct.lto_file_decl_data* %file_data, %struct.lto_file_decl_data** %file_data1, align 8, !dbg !4165
  %strings2 = getelementptr inbounds i8, i8* %call, i64 16, !dbg !4166
  %1 = bitcast i8* %strings2 to i8**, !dbg !4166
  store i8* %strings, i8** %1, align 8, !dbg !4167
  %strings_len = getelementptr inbounds i8, i8* %call, i64 24, !dbg !4168
  %2 = bitcast i8* %strings_len to i32*, !dbg !4168
  store i32 %len, i32* %2, align 8, !dbg !4169
  %globals_resolution = getelementptr inbounds i8, i8* %call, i64 56, !dbg !4170
  %3 = bitcast i8* %globals_resolution to %struct.VEC_ld_plugin_symbol_resolution_t_heap**, !dbg !4170
  store %struct.VEC_ld_plugin_symbol_resolution_t_heap* %resolutions, %struct.VEC_ld_plugin_symbol_resolution_t_heap** %3, align 8, !dbg !4171
  %call3 = tail call %struct.lto_streamer_cache_d* @lto_streamer_cache_create() #7, !dbg !4172
  %reader_cache = getelementptr inbounds i8, i8* %call, i64 64, !dbg !4173
  %4 = bitcast i8* %reader_cache to %struct.lto_streamer_cache_d**, !dbg !4173
  store %struct.lto_streamer_cache_d* %call3, %struct.lto_streamer_cache_d** %4, align 8, !dbg !4174
  ret %struct.data_in* %0, !dbg !4175
}

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local %struct.lto_streamer_cache_d* @lto_streamer_cache_create() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @lto_data_in_delete(%struct.data_in* %data_in) local_unnamed_addr #5 !dbg !4176 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4180, metadata !DIExpression()), !dbg !4181
  %globals_resolution = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 9, !dbg !4182
  tail call fastcc void @VEC_ld_plugin_symbol_resolution_t_heap_free(%struct.VEC_ld_plugin_symbol_resolution_t_heap** nonnull %globals_resolution) #8, !dbg !4182
  %reader_cache = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 10, !dbg !4183
  %0 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %reader_cache, align 8, !dbg !4183
  tail call void @lto_streamer_cache_delete(%struct.lto_streamer_cache_d* %0) #7, !dbg !4184
  %labels = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 1, !dbg !4185
  %1 = bitcast %union.tree_node*** %labels to i8**, !dbg !4185
  %2 = load i8*, i8** %1, align 8, !dbg !4185
  tail call void @free(i8* %2) #7, !dbg !4186
  %3 = bitcast %struct.data_in* %data_in to i8*, !dbg !4187
  tail call void @free(i8* %3) #7, !dbg !4188
  ret void, !dbg !4189
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_ld_plugin_symbol_resolution_t_heap_free(%struct.VEC_ld_plugin_symbol_resolution_t_heap** %vec_) unnamed_addr #0 !dbg !4190 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ld_plugin_symbol_resolution_t_heap** %vec_, metadata !4195, metadata !DIExpression()), !dbg !4196
  %0 = load %struct.VEC_ld_plugin_symbol_resolution_t_heap*, %struct.VEC_ld_plugin_symbol_resolution_t_heap** %vec_, align 8, !dbg !4197
  %tobool = icmp eq %struct.VEC_ld_plugin_symbol_resolution_t_heap* %0, null, !dbg !4197
  br i1 %tobool, label %if.end, label %if.then, !dbg !4199

if.then:                                          ; preds = %entry
  %1 = bitcast %struct.VEC_ld_plugin_symbol_resolution_t_heap* %0 to i8*, !dbg !4199
  tail call void @free(i8* nonnull %1) #7, !dbg !4197
  br label %if.end, !dbg !4197

if.end:                                           ; preds = %entry, %if.then
  store %struct.VEC_ld_plugin_symbol_resolution_t_heap* null, %struct.VEC_ld_plugin_symbol_resolution_t_heap** %vec_, align 8, !dbg !4199
  ret void, !dbg !4199
}

declare dso_local void @lto_streamer_cache_delete(%struct.lto_streamer_cache_d*) local_unnamed_addr #2

declare dso_local void @lto_check_version(i32, i32) local_unnamed_addr #2

declare dso_local void @push_cfun(%struct.function*) local_unnamed_addr #2

declare dso_local void @init_tree_ssa(%struct.function*) local_unnamed_addr #2

declare dso_local %struct.lto_in_decl_state* @lto_get_function_in_decl_state(%struct.lto_file_decl_data*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @input_cfg(%struct.lto_input_block* %ib, %struct.function* %fn) unnamed_addr #5 !dbg !4200 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !4204, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !4205, metadata !DIExpression()), !dbg !4224
  tail call void @init_empty_tree_cfg_for_function(%struct.function* %fn) #7, !dbg !4225
  tail call void @init_ssa_operands() #7, !dbg !4226
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4227
  %conv = trunc i64 %call to i32, !dbg !4228
  %cfg = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 1, !dbg !4229
  %0 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4229
  %x_profile_status = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %0, i64 0, i32 7, !dbg !4229
  store i32 %conv, i32* %x_profile_status, align 8, !dbg !4230
  %call1 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4231
  %conv2 = trunc i64 %call1 to i32, !dbg !4231
  call void @llvm.dbg.value(metadata i32 %conv2, metadata !4206, metadata !DIExpression()), !dbg !4224
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4232
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !4232
  store i32 %conv2, i32* %x_last_basic_block, align 8, !dbg !4233
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4234
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 2, !dbg !4234
  %3 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4234
  %tobool = icmp eq %struct.VEC_basic_block_gc* %3, null, !dbg !4234
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4234

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %3, i64 0, i32 0, !dbg !4234
  br label %cond.end, !dbg !4234

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4234
  %call7 = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond) #8, !dbg !4234
  %cmp = icmp ult i32 %call7, %conv2, !dbg !4236
  br i1 %cmp, label %if.then, label %if.end, !dbg !4237

if.then:                                          ; preds = %cond.end
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4238
  %x_basic_block_info10 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 2, !dbg !4238
  tail call fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** nonnull %x_basic_block_info10, i32 %conv2) #8, !dbg !4238
  br label %if.end, !dbg !4238

if.end:                                           ; preds = %if.then, %cond.end
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4239
  %x_label_to_block_map = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 6, !dbg !4239
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_label_to_block_map, align 8, !dbg !4239
  %tobool12 = icmp eq %struct.VEC_basic_block_gc* %6, null, !dbg !4239
  br i1 %tobool12, label %cond.end18, label %cond.true13, !dbg !4239

cond.true13:                                      ; preds = %if.end
  %base16 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %6, i64 0, i32 0, !dbg !4239
  br label %cond.end18, !dbg !4239

cond.end18:                                       ; preds = %if.end, %cond.true13
  %cond19 = phi %struct.VEC_basic_block_base* [ %base16, %cond.true13 ], [ null, %if.end ], !dbg !4239
  %call20 = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond19) #8, !dbg !4239
  %cmp21 = icmp ult i32 %call20, %conv2, !dbg !4241
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !4242

if.then23:                                        ; preds = %cond.end18
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4243
  %x_label_to_block_map25 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 6, !dbg !4243
  tail call fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** nonnull %x_label_to_block_map25, i32 %conv2) #8, !dbg !4243
  br label %if.end26, !dbg !4243

if.end26:                                         ; preds = %if.then23, %cond.end18
  %call27 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4244
  br label %while.cond, !dbg !4245

while.cond:                                       ; preds = %for.end, %if.end26
  %index.0.in = phi i64 [ %call27, %if.end26 ], [ %call77, %for.end ]
  %index.0 = trunc i64 %index.0.in to i32, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %index.0, metadata !4209, metadata !DIExpression()), !dbg !4224
  %cmp29 = icmp eq i32 %index.0, -1, !dbg !4246
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4224
  br i1 %cmp29, label %while.end, label %while.body, !dbg !4245

while.body:                                       ; preds = %while.cond
  %x_basic_block_info32 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 2, !dbg !4247
  %9 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info32, align 8, !dbg !4247
  %tobool33 = icmp eq %struct.VEC_basic_block_gc* %9, null, !dbg !4247
  br i1 %tobool33, label %cond.end39, label %cond.true34, !dbg !4247

cond.true34:                                      ; preds = %while.body
  %base37 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %9, i64 0, i32 0, !dbg !4247
  br label %cond.end39, !dbg !4247

cond.end39:                                       ; preds = %while.body, %cond.true34
  %cond40 = phi %struct.VEC_basic_block_base* [ %base37, %cond.true34 ], [ null, %while.body ], !dbg !4247
  %call41 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond40, i32 %index.0) #8, !dbg !4247
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call41, metadata !4210, metadata !DIExpression()), !dbg !4248
  %cmp42 = icmp eq %struct.basic_block_def* %call41, null, !dbg !4249
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !4251

if.then44:                                        ; preds = %cond.end39
  %call45 = tail call fastcc %struct.basic_block_def* @make_new_block(%struct.function* %fn, i32 %index.0) #8, !dbg !4252
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call45, metadata !4210, metadata !DIExpression()), !dbg !4248
  br label %if.end46, !dbg !4253

if.end46:                                         ; preds = %if.then44, %cond.end39
  %bb.0 = phi %struct.basic_block_def* [ %call45, %if.then44 ], [ %call41, %cond.end39 ], !dbg !4248
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4210, metadata !DIExpression()), !dbg !4248
  %call47 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4254
  %conv48 = trunc i64 %call47 to i32, !dbg !4254
  call void @llvm.dbg.value(metadata i32 %conv48, metadata !4212, metadata !DIExpression()), !dbg !4248
  call void @llvm.dbg.value(metadata i32 0, metadata !4208, metadata !DIExpression()), !dbg !4224
  br label %for.cond, !dbg !4255

for.cond:                                         ; preds = %if.end73, %if.end46
  %i.0 = phi i32 [ 0, %if.end46 ], [ %inc, %if.end73 ], !dbg !4256
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4208, metadata !DIExpression()), !dbg !4224
  %exitcond = icmp eq i32 %i.0, %conv48, !dbg !4257
  br i1 %exitcond, label %for.end, label %for.body, !dbg !4258

for.body:                                         ; preds = %for.cond
  %call51 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4259
  %conv52 = trunc i64 %call51 to i32, !dbg !4259
  call void @llvm.dbg.value(metadata i32 %conv52, metadata !4213, metadata !DIExpression()), !dbg !4260
  %call53 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4261
  %conv54 = trunc i64 %call53 to i32, !dbg !4262
  call void @llvm.dbg.value(metadata i32 %conv54, metadata !4219, metadata !DIExpression()), !dbg !4260
  %call55 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4263
  call void @llvm.dbg.value(metadata i64 %call55, metadata !4220, metadata !DIExpression()), !dbg !4260
  %call56 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4264
  %conv57 = trunc i64 %call56 to i32, !dbg !4264
  call void @llvm.dbg.value(metadata i32 %conv57, metadata !4217, metadata !DIExpression()), !dbg !4260
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4265
  %x_basic_block_info59 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 2, !dbg !4265
  %11 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info59, align 8, !dbg !4265
  %tobool60 = icmp eq %struct.VEC_basic_block_gc* %11, null, !dbg !4265
  br i1 %tobool60, label %cond.end66, label %cond.true61, !dbg !4265

cond.true61:                                      ; preds = %for.body
  %base64 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %11, i64 0, i32 0, !dbg !4265
  br label %cond.end66, !dbg !4265

cond.end66:                                       ; preds = %for.body, %cond.true61
  %cond67 = phi %struct.VEC_basic_block_base* [ %base64, %cond.true61 ], [ null, %for.body ], !dbg !4265
  %call68 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond67, i32 %conv52) #8, !dbg !4265
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call68, metadata !4218, metadata !DIExpression()), !dbg !4260
  %cmp69 = icmp eq %struct.basic_block_def* %call68, null, !dbg !4266
  br i1 %cmp69, label %if.then71, label %if.end73, !dbg !4268

if.then71:                                        ; preds = %cond.end66
  %call72 = tail call fastcc %struct.basic_block_def* @make_new_block(%struct.function* %fn, i32 %conv52) #8, !dbg !4269
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call72, metadata !4218, metadata !DIExpression()), !dbg !4260
  br label %if.end73, !dbg !4270

if.end73:                                         ; preds = %if.then71, %cond.end66
  %dest.0 = phi %struct.basic_block_def* [ %call72, %if.then71 ], [ %call68, %cond.end66 ], !dbg !4260
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %dest.0, metadata !4218, metadata !DIExpression()), !dbg !4260
  %call74 = tail call %struct.edge_def* @make_edge(%struct.basic_block_def* %bb.0, %struct.basic_block_def* %dest.0, i32 %conv57) #7, !dbg !4271
  call void @llvm.dbg.value(metadata %struct.edge_def* %call74, metadata !4221, metadata !DIExpression()), !dbg !4260
  %probability75 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call74, i64 0, i32 8, !dbg !4272
  store i32 %conv54, i32* %probability75, align 4, !dbg !4273
  %count76 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call74, i64 0, i32 9, !dbg !4274
  store i64 %call55, i64* %count76, align 8, !dbg !4275
  %inc = add i32 %i.0, 1, !dbg !4276
  call void @llvm.dbg.value(metadata i32 %inc, metadata !4208, metadata !DIExpression()), !dbg !4224
  br label %for.cond, !dbg !4277, !llvm.loop !4278

for.end:                                          ; preds = %for.cond
  %call77 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4280
  br label %while.cond, !dbg !4245, !llvm.loop !4281

while.end:                                        ; preds = %while.cond
  %.lcssa = phi %struct.control_flow_graph* [ %8, %while.cond ], !dbg !4224
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %.lcssa, i64 0, i32 0, !dbg !4283
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4283
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !4207, metadata !DIExpression()), !dbg !4224
  %call80 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4284
  br label %while.cond82, !dbg !4285

while.cond82:                                     ; preds = %cond.end95, %while.end
  %p_bb.0 = phi %struct.basic_block_def* [ %12, %while.end ], [ %call97, %cond.end95 ], !dbg !4224
  %index.1.in = phi i64 [ %call80, %while.end ], [ %call98, %cond.end95 ]
  %index.1 = trunc i64 %index.1.in to i32, !dbg !4224
  call void @llvm.dbg.value(metadata i32 %index.1, metadata !4209, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %p_bb.0, metadata !4207, metadata !DIExpression()), !dbg !4224
  %cmp83 = icmp eq i32 %index.1, -1, !dbg !4286
  br i1 %cmp83, label %while.end100, label %while.body85, !dbg !4285

while.body85:                                     ; preds = %while.cond82
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4287
  %x_basic_block_info88 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i64 0, i32 2, !dbg !4287
  %14 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info88, align 8, !dbg !4287
  %tobool89 = icmp eq %struct.VEC_basic_block_gc* %14, null, !dbg !4287
  br i1 %tobool89, label %cond.end95, label %cond.true90, !dbg !4287

cond.true90:                                      ; preds = %while.body85
  %base93 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %14, i64 0, i32 0, !dbg !4287
  br label %cond.end95, !dbg !4287

cond.end95:                                       ; preds = %while.body85, %cond.true90
  %cond96 = phi %struct.VEC_basic_block_base* [ %base93, %cond.true90 ], [ null, %while.body85 ], !dbg !4287
  %call97 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond96, i32 %index.1) #8, !dbg !4287
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call97, metadata !4222, metadata !DIExpression()), !dbg !4288
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call97, i64 0, i32 5, !dbg !4289
  store %struct.basic_block_def* %p_bb.0, %struct.basic_block_def** %prev_bb, align 8, !dbg !4290
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %p_bb.0, i64 0, i32 6, !dbg !4291
  store %struct.basic_block_def* %call97, %struct.basic_block_def** %next_bb, align 8, !dbg !4292
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call97, metadata !4207, metadata !DIExpression()), !dbg !4224
  %call98 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4293
  br label %while.cond82, !dbg !4285, !llvm.loop !4294

while.end100:                                     ; preds = %while.cond82
  ret void, !dbg !4296
}

; Function Attrs: nounwind uwtable
define internal fastcc void @input_function(%union.tree_node* %fn_decl, %struct.data_in* %data_in, %struct.lto_input_block* %ib) unnamed_addr #5 !dbg !4297 {
entry:
  %ix = alloca i32, align 4
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_decl, metadata !4301, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4302, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !4303, metadata !DIExpression()), !dbg !4340
  %f = getelementptr inbounds %union.tree_node, %union.tree_node* %fn_decl, i64 0, i32 0, i32 1, !dbg !4341
  %0 = load %struct.function*, %struct.function** %f, align 8, !dbg !4341
  call void @llvm.dbg.value(metadata %struct.function* %0, metadata !4304, metadata !DIExpression()), !dbg !4340
  %call = tail call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4342
  call void @llvm.dbg.value(metadata i32 %call, metadata !4305, metadata !DIExpression()), !dbg !4340
  tail call fastcc void @clear_line_info(%struct.data_in* %data_in) #8, !dbg !4343
  tail call void @gimple_register_cfg_hooks() #7, !dbg !4344
  tail call fastcc void @lto_tag_check(i32 %call, i32 228) #8, !dbg !4345
  %call1 = tail call %struct.bitpack_d* @lto_input_bitpack(%struct.lto_input_block* %ib) #8, !dbg !4346
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call1, metadata !4308, metadata !DIExpression()), !dbg !4340
  %call2 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4347
  %conv = trunc i64 %call2 to i32, !dbg !4347
  %is_thunk = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 20, !dbg !4348
  %bf.load = load i32, i32* %is_thunk, align 8, !dbg !4349
  %bf.value = shl i32 %conv, 30, !dbg !4349
  %bf.shl = and i32 %bf.value, 1073741824, !dbg !4349
  %bf.clear = and i32 %bf.load, -1073741825, !dbg !4349
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !4349
  store i32 %bf.set, i32* %is_thunk, align 8, !dbg !4349
  %call3 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4350
  %conv4 = trunc i64 %call3 to i32, !dbg !4350
  %bf.load5 = load i32, i32* %is_thunk, align 8, !dbg !4351
  %bf.value6 = shl i32 %conv4, 29, !dbg !4351
  %bf.shl7 = and i32 %bf.value6, 536870912, !dbg !4351
  %bf.clear8 = and i32 %bf.load5, -536870913, !dbg !4351
  %bf.set9 = or i32 %bf.clear8, %bf.shl7, !dbg !4351
  store i32 %bf.set9, i32* %is_thunk, align 8, !dbg !4351
  %call10 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4352
  %conv11 = trunc i64 %call10 to i32, !dbg !4352
  %bf.load12 = load i32, i32* %is_thunk, align 8, !dbg !4353
  %bf.value13 = shl i32 %conv11, 28, !dbg !4353
  %bf.shl14 = and i32 %bf.value13, 268435456, !dbg !4353
  %bf.clear15 = and i32 %bf.load12, -268435457, !dbg !4353
  %bf.set16 = or i32 %bf.clear15, %bf.shl14, !dbg !4353
  store i32 %bf.set16, i32* %is_thunk, align 8, !dbg !4353
  %call17 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4354
  %conv18 = trunc i64 %call17 to i32, !dbg !4354
  %bf.load19 = load i32, i32* %is_thunk, align 8, !dbg !4355
  %bf.value20 = shl i32 %conv18, 27, !dbg !4355
  %bf.shl21 = and i32 %bf.value20, 134217728, !dbg !4355
  %bf.clear22 = and i32 %bf.load19, -134217729, !dbg !4355
  %bf.set23 = or i32 %bf.clear22, %bf.shl21, !dbg !4355
  store i32 %bf.set23, i32* %is_thunk, align 8, !dbg !4355
  %call24 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4356
  %conv25 = trunc i64 %call24 to i32, !dbg !4356
  %bf.load26 = load i32, i32* %is_thunk, align 8, !dbg !4357
  %bf.value27 = shl i32 %conv25, 26, !dbg !4357
  %bf.shl28 = and i32 %bf.value27, 67108864, !dbg !4357
  %bf.clear29 = and i32 %bf.load26, -67108865, !dbg !4357
  %bf.set30 = or i32 %bf.clear29, %bf.shl28, !dbg !4357
  store i32 %bf.set30, i32* %is_thunk, align 8, !dbg !4357
  %call31 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4358
  %conv32 = trunc i64 %call31 to i32, !dbg !4358
  %bf.load33 = load i32, i32* %is_thunk, align 8, !dbg !4359
  %bf.value34 = shl i32 %conv32, 25, !dbg !4359
  %bf.shl35 = and i32 %bf.value34, 33554432, !dbg !4359
  %bf.clear36 = and i32 %bf.load33, -33554433, !dbg !4359
  %bf.set37 = or i32 %bf.clear36, %bf.shl35, !dbg !4359
  store i32 %bf.set37, i32* %is_thunk, align 8, !dbg !4359
  %call38 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4360
  %conv39 = trunc i64 %call38 to i32, !dbg !4360
  %bf.load40 = load i32, i32* %is_thunk, align 8, !dbg !4361
  %bf.value41 = shl i32 %conv39, 24, !dbg !4361
  %bf.shl42 = and i32 %bf.value41, 16777216, !dbg !4361
  %bf.clear43 = and i32 %bf.load40, -16777217, !dbg !4361
  %bf.set44 = or i32 %bf.clear43, %bf.shl42, !dbg !4361
  store i32 %bf.set44, i32* %is_thunk, align 8, !dbg !4361
  %call45 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4362
  %conv46 = trunc i64 %call45 to i32, !dbg !4362
  %bf.load47 = load i32, i32* %is_thunk, align 8, !dbg !4363
  %bf.value48 = shl i32 %conv46, 23, !dbg !4363
  %bf.shl49 = and i32 %bf.value48, 8388608, !dbg !4363
  %bf.clear50 = and i32 %bf.load47, -8388609, !dbg !4363
  %bf.set51 = or i32 %bf.clear50, %bf.shl49, !dbg !4363
  store i32 %bf.set51, i32* %is_thunk, align 8, !dbg !4363
  %call52 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4364
  %conv53 = trunc i64 %call52 to i32, !dbg !4364
  %bf.load54 = load i32, i32* %is_thunk, align 8, !dbg !4365
  %bf.value55 = shl i32 %conv53, 22, !dbg !4365
  %bf.shl56 = and i32 %bf.value55, 4194304, !dbg !4365
  %bf.clear57 = and i32 %bf.load54, -4194305, !dbg !4365
  %bf.set58 = or i32 %bf.clear57, %bf.shl56, !dbg !4365
  store i32 %bf.set58, i32* %is_thunk, align 8, !dbg !4365
  %call59 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4366
  %conv60 = trunc i64 %call59 to i32, !dbg !4366
  %bf.load61 = load i32, i32* %is_thunk, align 8, !dbg !4367
  %bf.value62 = shl i32 %conv60, 20, !dbg !4367
  %bf.shl63 = and i32 %bf.value62, 1048576, !dbg !4367
  %bf.clear64 = and i32 %bf.load61, -1048577, !dbg !4367
  %bf.set65 = or i32 %bf.clear64, %bf.shl63, !dbg !4367
  store i32 %bf.set65, i32* %is_thunk, align 8, !dbg !4367
  %call66 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4368
  %conv67 = trunc i64 %call66 to i32, !dbg !4368
  %bf.load68 = load i32, i32* %is_thunk, align 8, !dbg !4369
  %bf.value69 = shl i32 %conv67, 19, !dbg !4369
  %bf.shl70 = and i32 %bf.value69, 524288, !dbg !4369
  %bf.clear71 = and i32 %bf.load68, -524289, !dbg !4369
  %bf.set72 = or i32 %bf.clear71, %bf.shl70, !dbg !4369
  store i32 %bf.set72, i32* %is_thunk, align 8, !dbg !4369
  %call73 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !4370
  %conv74 = trunc i64 %call73 to i32, !dbg !4370
  %bf.load75 = load i32, i32* %is_thunk, align 8, !dbg !4371
  %bf.value76 = shl i32 %conv74, 18, !dbg !4371
  %bf.shl77 = and i32 %bf.value76, 262144, !dbg !4371
  %bf.clear78 = and i32 %bf.load75, -262145, !dbg !4371
  %bf.set79 = or i32 %bf.clear78, %bf.shl77, !dbg !4371
  store i32 %bf.set79, i32* %is_thunk, align 8, !dbg !4371
  %call80 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 2) #7, !dbg !4372
  %conv81 = trunc i64 %call80 to i32, !dbg !4373
  %bf.load82 = load i32, i32* %is_thunk, align 8, !dbg !4374
  %bf.value83 = shl i32 %conv81, 16, !dbg !4374
  %bf.shl84 = and i32 %bf.value83, 196608, !dbg !4374
  %bf.clear85 = and i32 %bf.load82, -196609, !dbg !4374
  %bf.set86 = or i32 %bf.clear85, %bf.shl84, !dbg !4374
  store i32 %bf.set86, i32* %is_thunk, align 8, !dbg !4374
  %call87 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 8) #7, !dbg !4375
  %conv88 = trunc i64 %call87 to i32, !dbg !4375
  %bf.load89 = load i32, i32* %is_thunk, align 8, !dbg !4376
  %bf.value90 = shl i32 %conv88, 8, !dbg !4376
  %bf.shl91 = and i32 %bf.value90, 65280, !dbg !4376
  %bf.clear92 = and i32 %bf.load89, -65281, !dbg !4376
  %bf.set93 = or i32 %bf.clear92, %bf.shl91, !dbg !4376
  store i32 %bf.set93, i32* %is_thunk, align 8, !dbg !4376
  %call94 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 8) #7, !dbg !4377
  %conv95 = trunc i64 %call94 to i32, !dbg !4377
  %bf.load96 = load i32, i32* %is_thunk, align 8, !dbg !4378
  %bf.value97 = and i32 %conv95, 255, !dbg !4378
  %bf.clear98 = and i32 %bf.load96, -256, !dbg !4378
  %bf.set99 = or i32 %bf.clear98, %bf.value97, !dbg !4378
  store i32 %bf.set99, i32* %is_thunk, align 8, !dbg !4378
  tail call void @bitpack_delete(%struct.bitpack_d* %call1) #7, !dbg !4379
  %call100 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4380
  %conv101 = trunc i64 %call100 to i32, !dbg !4380
  %curr_properties = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 17, !dbg !4381
  store i32 %conv101, i32* %curr_properties, align 8, !dbg !4382
  %call102 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4383
  %static_chain_decl = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 7, !dbg !4384
  store %union.tree_node* %call102, %union.tree_node** %static_chain_decl, align 8, !dbg !4385
  %call103 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4386
  %nonlocal_goto_save_area = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 8, !dbg !4387
  store %union.tree_node* %call103, %union.tree_node** %nonlocal_goto_save_area, align 8, !dbg !4388
  %call104 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4389
  %local_decls = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 9, !dbg !4390
  store %union.tree_node* %call104, %union.tree_node** %local_decls, align 8, !dbg !4391
  %call105 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4392
  call void @llvm.dbg.value(metadata %union.tree_node* %call105, metadata !4310, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.value(metadata %union.tree_node* %call105, metadata !4312, metadata !DIExpression()), !dbg !4340
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %fn_decl, i64 0, i32 0, i32 0, i32 2, !dbg !4393
  %1 = bitcast i32* %ix to i8*, !dbg !4394
  %reader_cache = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 10, !dbg !4394
  br label %for.cond, !dbg !4395

for.cond:                                         ; preds = %cond.end, %entry
  %narg.0.in = phi %union.tree_node** [ %arguments, %entry ], [ %chain112, %cond.end ]
  %oarg.0 = phi %union.tree_node* [ %call105, %entry ], [ %5, %cond.end ], !dbg !4396
  %narg.0 = load %union.tree_node*, %union.tree_node** %narg.0.in, align 8, !dbg !4396
  call void @llvm.dbg.value(metadata %union.tree_node* %oarg.0, metadata !4312, metadata !DIExpression()), !dbg !4340
  call void @llvm.dbg.value(metadata %union.tree_node* %narg.0, metadata !4311, metadata !DIExpression()), !dbg !4340
  %tobool = icmp ne %union.tree_node* %oarg.0, null, !dbg !4397
  %tobool106 = icmp ne %union.tree_node* %narg.0, null, !dbg !4398
  %spec.select = and i1 %tobool106, %tobool, !dbg !4398
  br i1 %spec.select, label %for.body, label %for.end, !dbg !4399

for.body:                                         ; preds = %for.cond
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #6, !dbg !4400
  %2 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %reader_cache, align 8, !dbg !4401
  call void @llvm.dbg.value(metadata i32* %ix, metadata !4313, metadata !DIExpression(DW_OP_deref)), !dbg !4394
  %call107 = call zeroext i8 @lto_streamer_cache_lookup(%struct.lto_streamer_cache_d* %2, %union.tree_node* nonnull %oarg.0, i32* nonnull %ix) #7, !dbg !4402
  call void @llvm.dbg.value(metadata i8 %call107, metadata !4317, metadata !DIExpression()), !dbg !4394
  %tobool108 = icmp eq i8 %call107, 0, !dbg !4403
  br i1 %tobool108, label %cond.true, label %cond.end, !dbg !4403

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1338, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4403
  br label %cond.end, !dbg !4403

cond.end:                                         ; preds = %for.body, %cond.true
  %3 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %reader_cache, align 8, !dbg !4404
  %4 = load i32, i32* %ix, align 4, !dbg !4405
  call void @llvm.dbg.value(metadata i32 %4, metadata !4313, metadata !DIExpression()), !dbg !4394
  %call110 = call zeroext i8 @lto_streamer_cache_insert_at(%struct.lto_streamer_cache_d* %3, %union.tree_node* nonnull %narg.0, i32 %4) #7, !dbg !4406
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #6, !dbg !4407
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %oarg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4408
  %5 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4408
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4312, metadata !DIExpression()), !dbg !4340
  %chain112 = getelementptr inbounds %union.tree_node, %union.tree_node* %narg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4409
  br label %for.cond, !dbg !4410, !llvm.loop !4411

for.end:                                          ; preds = %for.cond
  %tobool.lcssa = phi i1 [ %tobool, %for.cond ], !dbg !4397
  %tobool106.lcssa = phi i1 [ %tobool106, %for.cond ], !dbg !4398
  call void @llvm.dbg.value(metadata %union.tree_node* %oarg.0, metadata !4312, metadata !DIExpression()), !dbg !4340
  %or.cond = or i1 %tobool.lcssa, %tobool106.lcssa, !dbg !4413
  br i1 %or.cond, label %cond.true115, label %cond.end117, !dbg !4413

cond.true115:                                     ; preds = %for.end
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1342, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4413
  br label %cond.end117, !dbg !4413

cond.end117:                                      ; preds = %for.end, %cond.true115
  call fastcc void @input_ssa_names(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.function* %0) #8, !dbg !4414
  call fastcc void @input_eh_regions(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.function* %0) #8, !dbg !4415
  %call119 = call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4416
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %fn_decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4417
  store %union.tree_node* %call119, %union.tree_node** %initial, align 8, !dbg !4418
  %tobool122 = icmp eq %union.tree_node* %call119, null, !dbg !4419
  br i1 %tobool122, label %cond.true123, label %cond.end125, !dbg !4419

cond.true123:                                     ; preds = %cond.end117
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1352, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4419
  br label %cond.end125, !dbg !4419

cond.end125:                                      ; preds = %cond.end117, %cond.true123
  %saved_tree = getelementptr inbounds %union.tree_node, %union.tree_node* %fn_decl, i64 0, i32 0, i32 0, i32 1, !dbg !4420
  store %union.tree_node* null, %union.tree_node** %saved_tree, align 8, !dbg !4421
  %call128 = call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4422
  call void @llvm.dbg.value(metadata i32 %call128, metadata !4305, metadata !DIExpression()), !dbg !4340
  br label %while.cond, !dbg !4423

while.cond:                                       ; preds = %while.body, %cond.end125
  %tag.0 = phi i32 [ %call128, %cond.end125 ], [ %call130, %while.body ], !dbg !4340
  call void @llvm.dbg.value(metadata i32 %tag.0, metadata !4305, metadata !DIExpression()), !dbg !4340
  %tobool129 = icmp eq i32 %tag.0, 0, !dbg !4423
  br i1 %tobool129, label %while.end, label %while.body, !dbg !4423

while.body:                                       ; preds = %while.cond
  call fastcc void @input_bb(%struct.lto_input_block* %ib, i32 %tag.0, %struct.data_in* %data_in, %struct.function* %0) #8, !dbg !4424
  %call130 = call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4426
  call void @llvm.dbg.value(metadata i32 %call130, metadata !4305, metadata !DIExpression()), !dbg !4340
  br label %while.cond, !dbg !4423, !llvm.loop !4427

while.end:                                        ; preds = %while.cond
  call void @renumber_gimple_stmt_uids() #7, !dbg !4429
  %call131 = call fastcc i32 @gimple_stmt_max_uid(%struct.function* %0) #8, !dbg !4430
  %conv132 = zext i32 %call131 to i64, !dbg !4430
  %call133 = call i8* @xcalloc(i64 %conv132, i64 8) #7, !dbg !4431
  %6 = bitcast i8* %call133 to %union.gimple_statement_d**, !dbg !4432
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %6, metadata !4306, metadata !DIExpression()), !dbg !4340
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4433
  %cfg = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !4433
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4433
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 0, !dbg !4433
  %9 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4434
  %10 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4435
  br label %for.cond134, !dbg !4433

for.cond134:                                      ; preds = %for.end144, %while.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %while.end ], [ %next_bb, %for.end144 ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4436
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4307, metadata !DIExpression()), !dbg !4340
  %tobool135 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !4433
  br i1 %tobool135, label %for.end146, label %for.body136, !dbg !4433

for.body136:                                      ; preds = %for.cond134
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6, !dbg !4437
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #6, !dbg !4438
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* nonnull %bb.0) #8, !dbg !4438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !4438
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #6, !dbg !4438
  br label %for.cond137, !dbg !4439

for.cond137:                                      ; preds = %for.body140, %for.body136
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4318, metadata !DIExpression(DW_OP_deref)), !dbg !4434
  %call138 = call fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !4440
  %tobool139 = icmp eq i8 %call138, 0, !dbg !4441
  br i1 %tobool139, label %for.body140, label %for.end144, !dbg !4442

for.body140:                                      ; preds = %for.cond137
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4318, metadata !DIExpression(DW_OP_deref)), !dbg !4434
  %call141 = call fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* nonnull byval(%struct.gimple_stmt_iterator) align 8 %bsi) #8, !dbg !4443
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call141, metadata !4328, metadata !DIExpression()), !dbg !4444
  %call142 = call fastcc i32 @gimple_uid(%union.gimple_statement_d* %call141) #8, !dbg !4445
  %idxprom = zext i32 %call142 to i64, !dbg !4446
  %arrayidx = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %6, i64 %idxprom, !dbg !4446
  store %union.gimple_statement_d* %call141, %union.gimple_statement_d** %arrayidx, align 8, !dbg !4447
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4318, metadata !DIExpression(DW_OP_deref)), !dbg !4434
  call fastcc void @gsi_next(%struct.gimple_stmt_iterator* nonnull %bsi) #8, !dbg !4448
  br label %for.cond137, !dbg !4449, !llvm.loop !4450

for.end144:                                       ; preds = %for.cond137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6, !dbg !4452
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !4453
  br label %for.cond134, !dbg !4453, !llvm.loop !4454

for.end146:                                       ; preds = %for.cond134
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4456
  %cfg148 = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, i32 1, !dbg !4456
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg148, align 8, !dbg !4456
  %x_entry_block_ptr149 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i64 0, i32 0, !dbg !4456
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr149, align 8, !dbg !4456
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i64 0, i32 1, !dbg !4456
  %call150 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #8, !dbg !4456
  %14 = extractvalue { i32, %struct.VEC_edge_gc** } %call150, 0, !dbg !4456
  %15 = extractvalue { i32, %struct.VEC_edge_gc** } %call150, 1, !dbg !4456
  %call151 = call fastcc %struct.edge_def* @ei_edge(i32 %14, %struct.VEC_edge_gc** %15) #8, !dbg !4457
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call151, i64 0, i32 1, !dbg !4458
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4458
  %call152 = call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %16) #8, !dbg !4459
  call void @gimple_set_body(%union.tree_node* %fn_decl, %struct.gimple_seq_d* %call152) #7, !dbg !4460
  %call153 = call %struct.cgraph_node* @cgraph_node(%union.tree_node* %fn_decl) #7, !dbg !4461
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %call153, metadata !4309, metadata !DIExpression()), !dbg !4340
  call fastcc void @fixup_call_stmt_edges(%struct.cgraph_node* %call153, %union.gimple_statement_d** %6) #8, !dbg !4462
  call void @execute_all_ipa_stmt_fixups(%struct.cgraph_node* %call153, %union.gimple_statement_d** %6) #7, !dbg !4463
  call void @update_ssa(i32 16384) #7, !dbg !4464
  call void @free_dominance_info(i32 1) #7, !dbg !4465
  call void @free_dominance_info(i32 2) #7, !dbg !4466
  call void @free(i8* %call133) #7, !dbg !4467
  ret void, !dbg !4468
}

declare dso_local void @pop_cfun() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @input_alias_pairs(%struct.lto_input_block* %ib, %struct.data_in* %data_in) unnamed_addr #5 !dbg !4469 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !4473, metadata !DIExpression()), !dbg !4481
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4474, metadata !DIExpression()), !dbg !4481
  tail call fastcc void @clear_line_info(%struct.data_in* %data_in) #8, !dbg !4482
  br label %do.body, !dbg !4483

do.body:                                          ; preds = %do.body, %entry
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4484
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4475, metadata !DIExpression()), !dbg !4481
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !4485
  br i1 %tobool, label %do.end, label %do.body, !dbg !4485, !llvm.loop !4486

do.end:                                           ; preds = %do.body
  %call1 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4488
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4475, metadata !DIExpression()), !dbg !4481
  %file_data = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !4489
  br label %while.cond, !dbg !4490

while.cond:                                       ; preds = %if.end, %do.end
  %var.0 = phi %union.tree_node* [ %call1, %do.end ], [ %call10, %if.end ], !dbg !4481
  call void @llvm.dbg.value(metadata %union.tree_node* %var.0, metadata !4475, metadata !DIExpression()), !dbg !4481
  %tobool2 = icmp eq %union.tree_node* %var.0, null, !dbg !4490
  br i1 %tobool2, label %while.end, label %while.body, !dbg !4490

while.body:                                       ; preds = %while.cond
  %call3 = tail call fastcc %struct.alias_pair* @VEC_alias_pair_gc_safe_push(%struct.VEC_alias_pair_gc** nonnull @alias_pairs, %struct.alias_pair* null) #8, !dbg !4491
  call void @llvm.dbg.value(metadata %struct.alias_pair* %call3, metadata !4479, metadata !DIExpression()), !dbg !4489
  %decl = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %call3, i64 0, i32 0, !dbg !4492
  store %union.tree_node* %var.0, %union.tree_node** %decl, align 8, !dbg !4493
  %call4 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4494
  %target = getelementptr inbounds %struct.alias_pair, %struct.alias_pair* %call3, i64 0, i32 1, !dbg !4495
  store %union.tree_node* %call4, %union.tree_node** %target, align 8, !dbg !4496
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4497
  %str = bitcast i32* %id to i8**, !dbg !4497
  %0 = load i8*, i8** %str, align 8, !dbg !4497
  call void @llvm.dbg.value(metadata i8* %0, metadata !4476, metadata !DIExpression()), !dbg !4489
  %1 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data, align 8, !dbg !4498
  %call6 = tail call i8* @lto_get_decl_name_mapping(%struct.lto_file_decl_data* %1, i8* %0) #7, !dbg !4499
  call void @llvm.dbg.value(metadata i8* %call6, metadata !4478, metadata !DIExpression()), !dbg !4489
  %call7 = tail call i32 @strcmp(i8* %0, i8* %call6) #7, !dbg !4500
  %cmp = icmp eq i32 %call7, 0, !dbg !4502
  br i1 %cmp, label %if.end, label %if.then, !dbg !4503

if.then:                                          ; preds = %while.body
  %call8 = tail call %union.tree_node* @get_identifier(i8* %call6) #7, !dbg !4504
  store %union.tree_node* %call8, %union.tree_node** %target, align 8, !dbg !4505
  br label %if.end, !dbg !4506

if.end:                                           ; preds = %while.body, %if.then
  %call10 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4507
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !4475, metadata !DIExpression()), !dbg !4481
  br label %while.cond, !dbg !4490, !llvm.loop !4508

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4510
}

; Function Attrs: nounwind uwtable
define internal fastcc void @clear_line_info(%struct.data_in* %data_in) unnamed_addr #5 !dbg !4511 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4513, metadata !DIExpression()), !dbg !4514
  %current_file = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 6, !dbg !4515
  %0 = load i8*, i8** %current_file, align 8, !dbg !4515
  %tobool = icmp eq i8* %0, null, !dbg !4517
  br i1 %tobool, label %if.end, label %if.then, !dbg !4518

if.then:                                          ; preds = %entry
  %1 = load %struct.line_maps*, %struct.line_maps** @line_table, align 8, !dbg !4519
  %call = tail call %struct.line_map* @linemap_add(%struct.line_maps* %1, i32 1, i32 0, i8* null, i32 0) #7, !dbg !4520
  br label %if.end, !dbg !4520

if.end:                                           ; preds = %entry, %if.then
  store i8* null, i8** %current_file, align 8, !dbg !4521
  %current_line = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 7, !dbg !4522
  store i32 0, i32* %current_line, align 8, !dbg !4523
  %current_col = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 8, !dbg !4524
  store i32 0, i32* %current_col, align 4, !dbg !4525
  ret void, !dbg !4526
}

declare dso_local void @init_empty_tree_cfg_for_function(%struct.function*) local_unnamed_addr #2

declare dso_local void @init_ssa_operands() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !4527 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !4533, metadata !DIExpression()), !dbg !4534
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !4535
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4535

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !4535
  %0 = load i32, i32* %num, align 8, !dbg !4535
  br label %cond.end, !dbg !4535

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4535
  ret i32 %cond, !dbg !4535
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_gc_safe_grow_cleared(%struct.VEC_basic_block_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !4536 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_gc** %vec_, metadata !4541, metadata !DIExpression()), !dbg !4544
  call void @llvm.dbg.value(metadata i32 %size_, metadata !4542, metadata !DIExpression()), !dbg !4544
  %0 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !4545
  %tobool = icmp eq %struct.VEC_basic_block_gc* %0, null, !dbg !4545
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4545

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %0, i64 0, i32 0, !dbg !4545
  br label %cond.end, !dbg !4545

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4545
  %call = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond) #8, !dbg !4545
  call void @llvm.dbg.value(metadata i32 %call, metadata !4543, metadata !DIExpression()), !dbg !4544
  tail call fastcc void @VEC_basic_block_gc_safe_grow(%struct.VEC_basic_block_gc** %vec_, i32 %size_) #8, !dbg !4545
  %1 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !4545
  %tobool1 = icmp eq %struct.VEC_basic_block_gc* %1, null, !dbg !4545
  br i1 %tobool1, label %cond.end5, label %cond.true2, !dbg !4545

cond.true2:                                       ; preds = %cond.end
  %base3 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %1, i64 0, i32 0, !dbg !4545
  br label %cond.end5, !dbg !4545

cond.end5:                                        ; preds = %cond.end, %cond.true2
  %cond6 = phi %struct.VEC_basic_block_base* [ %base3, %cond.true2 ], [ null, %cond.end ], !dbg !4545
  %call7 = tail call fastcc %struct.basic_block_def** @VEC_basic_block_base_address(%struct.VEC_basic_block_base* %cond6) #8, !dbg !4545
  %idxprom = sext i32 %call to i64, !dbg !4545
  %arrayidx = getelementptr inbounds %struct.basic_block_def*, %struct.basic_block_def** %call7, i64 %idxprom, !dbg !4545
  %2 = bitcast %struct.basic_block_def** %arrayidx to i8*, !dbg !4545
  %sub = sub nsw i32 %size_, %call, !dbg !4545
  %conv = sext i32 %sub to i64, !dbg !4545
  %mul = shl nsw i64 %conv, 3, !dbg !4545
  %call8 = tail call i8* @memset(i8* %2, i32 0, i64 %mul) #7, !dbg !4545
  ret void, !dbg !4545
}

declare dso_local i64 @lto_input_sleb128(%struct.lto_input_block*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4546 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !4550, metadata !DIExpression()), !dbg !4552
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4551, metadata !DIExpression()), !dbg !4552
  br label %land.end, !dbg !4553

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4553
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4553
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4553
  ret %struct.basic_block_def* %0, !dbg !4553
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.basic_block_def* @make_new_block(%struct.function* %fn, i32 %index) unnamed_addr #5 !dbg !4554 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !4558, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.value(metadata i32 %index, metadata !4559, metadata !DIExpression()), !dbg !4561
  %call = tail call %struct.basic_block_def* @alloc_block() #7, !dbg !4562
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4560, metadata !DIExpression()), !dbg !4561
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !4563
  store i32 %index, i32* %index1, align 8, !dbg !4564
  %cfg = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 1, !dbg !4565
  %0 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4565
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %0, i64 0, i32 2, !dbg !4565
  %1 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4565
  %tobool = icmp eq %struct.VEC_basic_block_gc* %1, null, !dbg !4565
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4565

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %1, i64 0, i32 0, !dbg !4565
  br label %cond.end, !dbg !4565

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4565
  %call4 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %cond, i32 %index, %struct.basic_block_def* %call) #8, !dbg !4565
  %call5 = tail call i8* @ggc_alloc_cleared_stat(i64 16) #7, !dbg !4566
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, i32 0, !dbg !4567
  %2 = bitcast %struct.gimple_bb_info** %gimple to i8**, !dbg !4568
  store i8* %call5, i8** %2, align 8, !dbg !4568
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4569
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 3, !dbg !4569
  %4 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4570
  %inc = add nsw i32 %4, 1, !dbg !4570
  store i32 %inc, i32* %x_n_basic_blocks, align 8, !dbg !4570
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 13, !dbg !4571
  store i32 0, i32* %flags, align 8, !dbg !4572
  %call7 = tail call %struct.gimple_seq_d* @gimple_seq_alloc() #7, !dbg !4573
  tail call fastcc void @set_bb_seq(%struct.basic_block_def* %call, %struct.gimple_seq_d* %call7) #8, !dbg !4574
  ret %struct.basic_block_def* %call, !dbg !4575
}

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_basic_block_gc_safe_grow(%struct.VEC_basic_block_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !4576 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_gc** %vec_, metadata !4578, metadata !DIExpression()), !dbg !4580
  call void @llvm.dbg.value(metadata i32 %size_, metadata !4579, metadata !DIExpression()), !dbg !4580
  %cmp = icmp sgt i32 %size_, -1, !dbg !4581
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4581

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !4581
  %tobool = icmp eq %struct.VEC_basic_block_gc* %0, null, !dbg !4581
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4581

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %0, i64 0, i32 0, !dbg !4581
  br label %cond.end, !dbg !4581

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !4581
  %call = tail call fastcc i32 @VEC_basic_block_base_length(%struct.VEC_basic_block_base* %cond) #8, !dbg !4581
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !4581
  %tobool2 = icmp eq %struct.VEC_basic_block_gc* %1, null, !dbg !4581
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !4581

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %1, i64 0, i32 0, i32 0, !dbg !4581
  %2 = load i32, i32* %num, align 8, !dbg !4581
  br label %cond.end11, !dbg !4581

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !4581
  %sub = sub nsw i32 %size_, %cond12, !dbg !4581
  %call13 = tail call fastcc i32 @VEC_basic_block_gc_reserve_exact(%struct.VEC_basic_block_gc** %vec_, i32 %sub) #8, !dbg !4581
  %3 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !4581
  %num20 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %3, i64 0, i32 0, i32 0, !dbg !4581
  store i32 %size_, i32* %num20, align 8, !dbg !4581
  ret void, !dbg !4581
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def** @VEC_basic_block_base_address(%struct.VEC_basic_block_base* %vec_) unnamed_addr #0 !dbg !4582 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !4588, metadata !DIExpression()), !dbg !4589
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !4590
  %arraydecay = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 0, !dbg !4590
  %cond = select i1 %tobool, %struct.basic_block_def** null, %struct.basic_block_def** %arraydecay, !dbg !4590
  ret %struct.basic_block_def** %cond, !dbg !4590
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_gc_reserve_exact(%struct.VEC_basic_block_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4591 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_gc** %vec_, metadata !4595, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4596, metadata !DIExpression()), !dbg !4598
  %0 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %vec_, align 8, !dbg !4599
  %tobool = icmp eq %struct.VEC_basic_block_gc* %0, null, !dbg !4599
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4599

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %0, i64 0, i32 0, !dbg !4599
  br label %cond.end, !dbg !4599

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4599
  %call = tail call fastcc i32 @VEC_basic_block_base_space(%struct.VEC_basic_block_base* %cond, i32 %alloc_) #8, !dbg !4599
  %tobool1 = icmp eq i32 %call, 0, !dbg !4599
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !4599
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !4597, metadata !DIExpression()), !dbg !4598
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4599

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_basic_block_gc** %vec_ to i8**, !dbg !4600
  %2 = load i8*, i8** %1, align 8, !dbg !4600
  %call3 = tail call i8* @vec_gc_p_reserve_exact(i8* %2, i32 %alloc_) #7, !dbg !4600
  store i8* %call3, i8** %1, align 8, !dbg !4600
  br label %if.end, !dbg !4600

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !4599
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_basic_block_base_space(%struct.VEC_basic_block_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !4602 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !4606, metadata !DIExpression()), !dbg !4608
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !4607, metadata !DIExpression()), !dbg !4608
  %tobool = icmp eq %struct.VEC_basic_block_base* %vec_, null, !dbg !4609
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4609

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 1, !dbg !4609
  %0 = load i32, i32* %alloc, align 4, !dbg !4609
  %num = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 0, !dbg !4609
  %1 = load i32, i32* %num, align 8, !dbg !4609
  %sub = sub i32 %0, %1, !dbg !4609
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !4609
  br label %cond.end, !dbg !4609

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !4609
  br label %cond.end, !dbg !4609

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !4609
  ret i32 %cond, !dbg !4609
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local %struct.basic_block_def* @alloc_block() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_replace(%struct.VEC_basic_block_base* %vec_, i32 %ix_, %struct.basic_block_def* %obj_) unnamed_addr #0 !dbg !4610 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !4614, metadata !DIExpression()), !dbg !4618
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4615, metadata !DIExpression()), !dbg !4618
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %obj_, metadata !4616, metadata !DIExpression()), !dbg !4618
  %idxprom = zext i32 %ix_ to i64, !dbg !4619
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4619
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4619
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %0, metadata !4617, metadata !DIExpression()), !dbg !4618
  store %struct.basic_block_def* %obj_, %struct.basic_block_def** %arrayidx, align 8, !dbg !4619
  ret %struct.basic_block_def* %0, !dbg !4619
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @set_bb_seq(%struct.basic_block_def* %bb, %struct.gimple_seq_d* %seq) unnamed_addr #0 !dbg !4620 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4624, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %seq, metadata !4625, metadata !DIExpression()), !dbg !4626
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !4627
  %0 = load i32, i32* %flags, align 8, !dbg !4627
  %and = and i32 %0, 512, !dbg !4627
  %tobool = icmp eq i32 %and, 0, !dbg !4627
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4627

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 248, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4627
  br label %cond.end, !dbg !4627

cond.end:                                         ; preds = %entry, %cond.true
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !4628
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !4628
  %seq1 = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !4629
  store %struct.gimple_seq_d* %seq, %struct.gimple_seq_d** %seq1, align 8, !dbg !4630
  ret void, !dbg !4631
}

declare dso_local %struct.gimple_seq_d* @gimple_seq_alloc() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_tag_check(i32 %actual, i32 %expected) unnamed_addr #5 !dbg !4632 {
entry:
  call void @llvm.dbg.value(metadata i32 %actual, metadata !4636, metadata !DIExpression()), !dbg !4638
  call void @llvm.dbg.value(metadata i32 %expected, metadata !4637, metadata !DIExpression()), !dbg !4638
  %cmp = icmp eq i32 %actual, %expected, !dbg !4639
  br i1 %cmp, label %if.end, label %if.then, !dbg !4641

if.then:                                          ; preds = %entry
  %call = tail call i8* @lto_tag_name(i32 %expected) #7, !dbg !4642
  %call1 = tail call i8* @lto_tag_name(i32 %actual) #7, !dbg !4643
  tail call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i8* %call, i8* %call1) #7, !dbg !4644
  br label %if.end, !dbg !4644

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4645
}

declare dso_local i64 @bp_unpack_value(%struct.bitpack_d*, i32) local_unnamed_addr #2

declare dso_local void @bitpack_delete(%struct.bitpack_d*) local_unnamed_addr #2

declare dso_local zeroext i8 @lto_streamer_cache_lookup(%struct.lto_streamer_cache_d*, %union.tree_node*, i32*) local_unnamed_addr #2

declare dso_local zeroext i8 @lto_streamer_cache_insert_at(%struct.lto_streamer_cache_d*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @input_ssa_names(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.function* %fn) unnamed_addr #5 !dbg !4646 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !4650, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4651, metadata !DIExpression()), !dbg !4659
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !4652, metadata !DIExpression()), !dbg !4659
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4660
  %conv = trunc i64 %call to i32, !dbg !4660
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4654, metadata !DIExpression()), !dbg !4659
  tail call void @init_ssanames(%struct.function* %fn, i32 %conv) #7, !dbg !4661
  %call1 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4662
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 3, !dbg !4663
  br label %while.cond, !dbg !4664

while.cond:                                       ; preds = %if.end, %entry
  %i.0.in = phi i64 [ %call1, %entry ], [ %call31, %if.end ]
  %i.0 = trunc i64 %i.0.in to i32, !dbg !4659
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !4653, metadata !DIExpression()), !dbg !4659
  %tobool = icmp eq i32 %i.0, 0, !dbg !4664
  br i1 %tobool, label %while.end33, label %while.cond3.preheader, !dbg !4664

while.cond3.preheader:                            ; preds = %while.cond
  br label %while.cond3, !dbg !4665

while.cond3:                                      ; preds = %while.cond3.preheader, %cond.end18
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4666
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 2, !dbg !4666
  %1 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !4666
  %tobool4 = icmp eq %struct.VEC_tree_gc* %1, null, !dbg !4666
  br i1 %tobool4, label %cond.end, label %cond.true, !dbg !4666

cond.true:                                        ; preds = %while.cond3
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %1, i64 0, i32 0, !dbg !4666
  br label %cond.end, !dbg !4666

cond.end:                                         ; preds = %while.cond3, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %while.cond3 ], !dbg !4666
  %call7 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #8, !dbg !4666
  %cmp = icmp ult i32 %call7, %i.0, !dbg !4667
  br i1 %cmp, label %while.body9, label %while.end, !dbg !4665

while.body9:                                      ; preds = %cond.end
  %2 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !4668
  %ssa_names11 = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %2, i64 0, i32 2, !dbg !4668
  %3 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names11, align 8, !dbg !4668
  %tobool12 = icmp eq %struct.VEC_tree_gc* %3, null, !dbg !4668
  br i1 %tobool12, label %cond.end18, label %cond.true13, !dbg !4668

cond.true13:                                      ; preds = %while.body9
  %base16 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %3, i64 0, i32 0, !dbg !4668
  br label %cond.end18, !dbg !4668

cond.end18:                                       ; preds = %while.body9, %cond.true13
  %cond19 = phi %struct.VEC_tree_base* [ %base16, %cond.true13 ], [ null, %while.body9 ], !dbg !4668
  %call20 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond19, %union.tree_node* null) #8, !dbg !4668
  br label %while.cond3, !dbg !4665, !llvm.loop !4669

while.end:                                        ; preds = %cond.end
  %call21 = tail call zeroext i8 @lto_input_1_unsigned(%struct.lto_input_block* %ib) #7, !dbg !4670
  %cmp23 = icmp eq i8 %call21, 0, !dbg !4671
  call void @llvm.dbg.value(metadata i1 %cmp23, metadata !4658, metadata !DIExpression()), !dbg !4663
  %call26 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4672
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !4657, metadata !DIExpression()), !dbg !4663
  %call27 = tail call %union.gimple_statement_d* @gimple_build_nop() #7, !dbg !4673
  %call28 = tail call %union.tree_node* @make_ssa_name_fn(%struct.function* %fn, %union.tree_node* %call26, %union.gimple_statement_d* %call27) #7, !dbg !4674
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !4655, metadata !DIExpression()), !dbg !4663
  br i1 %cmp23, label %if.end, label %if.then, !dbg !4675

if.then:                                          ; preds = %while.end
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4676
  %4 = bitcast i32* %var to %union.tree_node**, !dbg !4676
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !4676
  tail call void @set_default_def(%union.tree_node* %5, %union.tree_node* %call28) #7, !dbg !4678
  br label %if.end, !dbg !4678

if.end:                                           ; preds = %while.end, %if.then
  %call31 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4679
  br label %while.cond, !dbg !4664, !llvm.loop !4680

while.end33:                                      ; preds = %while.cond
  ret void, !dbg !4682
}

; Function Attrs: nounwind uwtable
define internal fastcc void @input_eh_regions(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.function* %fn) unnamed_addr #5 !dbg !4683 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !4685, metadata !DIExpression()), !dbg !4723
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4686, metadata !DIExpression()), !dbg !4723
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !4687, metadata !DIExpression()), !dbg !4723
  %call = tail call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4724
  call void @llvm.dbg.value(metadata i32 %call, metadata !4691, metadata !DIExpression()), !dbg !4723
  %cmp = icmp eq i32 %call, 0, !dbg !4725
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !4727

if.end:                                           ; preds = %entry
  tail call fastcc void @lto_tag_check_range(i32 %call, i32 229, i32 229) #8, !dbg !4728
  tail call fastcc void @lto_init_eh() #8, !dbg !4729
  %eh = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 0, !dbg !4730
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4730
  %tobool = icmp eq %struct.eh_status* %0, null, !dbg !4730
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4730

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 627, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4730
  br label %cond.end, !dbg !4730

cond.end:                                         ; preds = %if.end, %cond.true
  %call1 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4731
  call void @llvm.dbg.value(metadata i64 %call1, metadata !4689, metadata !DIExpression()), !dbg !4723
  %1 = add i64 %call1, 2147483648, !dbg !4732
  %2 = icmp ult i64 %1, 4294967296, !dbg !4732
  br i1 %2, label %cond.end7, label %cond.true5, !dbg !4732

cond.true5:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 630, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4732
  br label %cond.end7, !dbg !4732

cond.end7:                                        ; preds = %cond.end, %cond.true5
  %call9 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4733
  call void @llvm.dbg.value(metadata i64 %call9, metadata !4690, metadata !DIExpression()), !dbg !4723
  %3 = add i64 %call9, 2147483648, !dbg !4734
  %4 = icmp ult i64 %3, 4294967296, !dbg !4734
  br i1 %4, label %cond.end16, label %cond.true14, !dbg !4734

cond.true14:                                      ; preds = %cond.end7
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 634, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4734
  br label %cond.end16, !dbg !4734

cond.end16:                                       ; preds = %cond.end7, %cond.true14
  %cmp18 = icmp sgt i64 %call9, 0, !dbg !4735
  br i1 %cmp18, label %if.then20, label %if.end38, !dbg !4736

if.then20:                                        ; preds = %cond.end16
  %5 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4737
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %5, i64 0, i32 1, !dbg !4737
  %conv22 = trunc i64 %call9 to i32, !dbg !4737
  tail call fastcc void @VEC_eh_region_gc_safe_grow(%struct.VEC_eh_region_gc** nonnull %region_array, i32 %conv22) #8, !dbg !4737
  call void @llvm.dbg.value(metadata i64 0, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond, !dbg !4738

for.cond:                                         ; preds = %cond.end34, %if.then20
  %i.0 = phi i64 [ 0, %if.then20 ], [ %inc, %cond.end34 ], !dbg !4739
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4688, metadata !DIExpression()), !dbg !4723
  %exitcond5 = icmp eq i64 %i.0, %call9, !dbg !4740
  br i1 %exitcond5, label %if.end38.loopexit, label %for.body, !dbg !4741

for.body:                                         ; preds = %for.cond
  %conv25 = trunc i64 %i.0 to i32, !dbg !4742
  %call26 = tail call fastcc %struct.eh_region_d* @input_eh_region(%struct.lto_input_block* %ib, %struct.data_in* %data_in, i32 %conv25) #8, !dbg !4743
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %call26, metadata !4692, metadata !DIExpression()), !dbg !4744
  %6 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4745
  %region_array28 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %6, i64 0, i32 1, !dbg !4745
  %7 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array28, align 8, !dbg !4745
  %tobool29 = icmp eq %struct.VEC_eh_region_gc* %7, null, !dbg !4745
  br i1 %tobool29, label %cond.end34, label %cond.true30, !dbg !4745

cond.true30:                                      ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %7, i64 0, i32 0, !dbg !4745
  br label %cond.end34, !dbg !4745

cond.end34:                                       ; preds = %for.body, %cond.true30
  %cond35 = phi %struct.VEC_eh_region_base* [ %base, %cond.true30 ], [ null, %for.body ], !dbg !4745
  %call37 = tail call fastcc %struct.eh_region_d* @VEC_eh_region_base_replace(%struct.VEC_eh_region_base* %cond35, i32 %conv25, %struct.eh_region_d* %call26) #8, !dbg !4745
  %inc = add nuw i64 %i.0, 1, !dbg !4746
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond, !dbg !4747, !llvm.loop !4748

if.end38.loopexit:                                ; preds = %for.cond
  br label %if.end38, !dbg !4750

if.end38:                                         ; preds = %if.end38.loopexit, %cond.end16
  %call39 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4750
  call void @llvm.dbg.value(metadata i64 %call39, metadata !4690, metadata !DIExpression()), !dbg !4723
  %8 = add i64 %call39, 2147483648, !dbg !4751
  %9 = icmp ult i64 %8, 4294967296, !dbg !4751
  br i1 %9, label %cond.end46, label %cond.true44, !dbg !4751

cond.true44:                                      ; preds = %if.end38
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 647, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4751
  br label %cond.end46, !dbg !4751

cond.end46:                                       ; preds = %if.end38, %cond.true44
  %cmp48 = icmp sgt i64 %call39, 0, !dbg !4752
  br i1 %cmp48, label %if.then50, label %if.end74, !dbg !4753

if.then50:                                        ; preds = %cond.end46
  %10 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4754
  %lp_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %10, i64 0, i32 2, !dbg !4754
  %conv52 = trunc i64 %call39 to i32, !dbg !4754
  tail call fastcc void @VEC_eh_landing_pad_gc_safe_grow(%struct.VEC_eh_landing_pad_gc** nonnull %lp_array, i32 %conv52) #8, !dbg !4754
  call void @llvm.dbg.value(metadata i64 0, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond53, !dbg !4755

for.cond53:                                       ; preds = %cond.end67, %if.then50
  %i.1 = phi i64 [ 0, %if.then50 ], [ %inc72, %cond.end67 ], !dbg !4756
  call void @llvm.dbg.value(metadata i64 %i.1, metadata !4688, metadata !DIExpression()), !dbg !4723
  %exitcond4 = icmp eq i64 %i.1, %call39, !dbg !4757
  br i1 %exitcond4, label %if.end74.loopexit, label %for.body56, !dbg !4758

for.body56:                                       ; preds = %for.cond53
  %conv57 = trunc i64 %i.1 to i32, !dbg !4759
  %call58 = tail call fastcc %struct.eh_landing_pad_d* @input_eh_lp(%struct.lto_input_block* %ib, %struct.data_in* %data_in, i32 %conv57) #8, !dbg !4760
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %call58, metadata !4698, metadata !DIExpression()), !dbg !4761
  %11 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4762
  %lp_array60 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %11, i64 0, i32 2, !dbg !4762
  %12 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array60, align 8, !dbg !4762
  %tobool61 = icmp eq %struct.VEC_eh_landing_pad_gc* %12, null, !dbg !4762
  br i1 %tobool61, label %cond.end67, label %cond.true62, !dbg !4762

cond.true62:                                      ; preds = %for.body56
  %base65 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %12, i64 0, i32 0, !dbg !4762
  br label %cond.end67, !dbg !4762

cond.end67:                                       ; preds = %for.body56, %cond.true62
  %cond68 = phi %struct.VEC_eh_landing_pad_base* [ %base65, %cond.true62 ], [ null, %for.body56 ], !dbg !4762
  %call70 = tail call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_replace(%struct.VEC_eh_landing_pad_base* %cond68, i32 %conv57, %struct.eh_landing_pad_d* %call58) #8, !dbg !4762
  %inc72 = add nuw i64 %i.1, 1, !dbg !4763
  call void @llvm.dbg.value(metadata i64 %inc72, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond53, !dbg !4764, !llvm.loop !4765

if.end74.loopexit:                                ; preds = %for.cond53
  br label %if.end74, !dbg !4767

if.end74:                                         ; preds = %if.end74.loopexit, %cond.end46
  %call75 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4767
  call void @llvm.dbg.value(metadata i64 %call75, metadata !4690, metadata !DIExpression()), !dbg !4723
  %13 = add i64 %call75, 2147483648, !dbg !4768
  %14 = icmp ult i64 %13, 4294967296, !dbg !4768
  br i1 %14, label %cond.end82, label %cond.true80, !dbg !4768

cond.true80:                                      ; preds = %if.end74
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 660, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4768
  br label %cond.end82, !dbg !4768

cond.end82:                                       ; preds = %if.end74, %cond.true80
  %cmp84 = icmp sgt i64 %call75, 0, !dbg !4769
  br i1 %cmp84, label %if.then86, label %if.end109, !dbg !4770

if.then86:                                        ; preds = %cond.end82
  %15 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4771
  %ttype_data = getelementptr inbounds %struct.eh_status, %struct.eh_status* %15, i64 0, i32 4, !dbg !4771
  %conv88 = trunc i64 %call75 to i32, !dbg !4771
  tail call fastcc void @VEC_tree_gc_safe_grow(%struct.VEC_tree_gc** nonnull %ttype_data, i32 %conv88) #8, !dbg !4771
  call void @llvm.dbg.value(metadata i64 0, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond89, !dbg !4772

for.cond89:                                       ; preds = %cond.end102, %if.then86
  %i.2 = phi i64 [ 0, %if.then86 ], [ %inc107, %cond.end102 ], !dbg !4773
  call void @llvm.dbg.value(metadata i64 %i.2, metadata !4688, metadata !DIExpression()), !dbg !4723
  %exitcond3 = icmp eq i64 %i.2, %call75, !dbg !4774
  br i1 %exitcond3, label %if.end109.loopexit, label %for.body92, !dbg !4775

for.body92:                                       ; preds = %for.cond89
  %call93 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4776
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !4704, metadata !DIExpression()), !dbg !4777
  %16 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4778
  %ttype_data95 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %16, i64 0, i32 4, !dbg !4778
  %17 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ttype_data95, align 8, !dbg !4778
  %tobool96 = icmp eq %struct.VEC_tree_gc* %17, null, !dbg !4778
  br i1 %tobool96, label %cond.end102, label %cond.true97, !dbg !4778

cond.true97:                                      ; preds = %for.body92
  %base100 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %17, i64 0, i32 0, !dbg !4778
  br label %cond.end102, !dbg !4778

cond.end102:                                      ; preds = %for.body92, %cond.true97
  %cond103 = phi %struct.VEC_tree_base* [ %base100, %cond.true97 ], [ null, %for.body92 ], !dbg !4778
  %conv104 = trunc i64 %i.2 to i32, !dbg !4778
  %call105 = tail call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %cond103, i32 %conv104, %union.tree_node* %call93) #8, !dbg !4778
  %inc107 = add nuw i64 %i.2, 1, !dbg !4779
  call void @llvm.dbg.value(metadata i64 %inc107, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond89, !dbg !4780, !llvm.loop !4781

if.end109.loopexit:                               ; preds = %for.cond89
  br label %if.end109, !dbg !4783

if.end109:                                        ; preds = %if.end109.loopexit, %cond.end82
  %call110 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4783
  call void @llvm.dbg.value(metadata i64 %call110, metadata !4690, metadata !DIExpression()), !dbg !4723
  %18 = add i64 %call110, 2147483648, !dbg !4784
  %19 = icmp ult i64 %18, 4294967296, !dbg !4784
  br i1 %19, label %cond.end117, label %cond.true115, !dbg !4784

cond.true115:                                     ; preds = %if.end109
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 673, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4784
  br label %cond.end117, !dbg !4784

cond.end117:                                      ; preds = %if.end109, %cond.true115
  %cmp119 = icmp sgt i64 %call110, 0, !dbg !4785
  br i1 %cmp119, label %if.then121, label %if.end174, !dbg !4786

if.then121:                                       ; preds = %cond.end117
  %20 = load i8, i8* getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 120), align 1, !dbg !4787
  %tobool122 = icmp eq i8 %20, 0, !dbg !4788
  %21 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4789
  %ehspec_data = getelementptr inbounds %struct.eh_status, %struct.eh_status* %21, i64 0, i32 5, !dbg !4789
  br i1 %tobool122, label %if.else, label %if.then123, !dbg !4790

if.then123:                                       ; preds = %if.then121
  %arm_eabi = getelementptr inbounds %union.eh_status_u, %union.eh_status_u* %ehspec_data, i64 0, i32 0, !dbg !4791
  %conv125 = trunc i64 %call110 to i32, !dbg !4791
  tail call fastcc void @VEC_tree_gc_safe_grow(%struct.VEC_tree_gc** nonnull %arm_eabi, i32 %conv125) #8, !dbg !4791
  call void @llvm.dbg.value(metadata i64 0, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond126, !dbg !4792

for.cond126:                                      ; preds = %cond.end141, %if.then123
  %i.3 = phi i64 [ 0, %if.then123 ], [ %inc146, %cond.end141 ], !dbg !4793
  call void @llvm.dbg.value(metadata i64 %i.3, metadata !4688, metadata !DIExpression()), !dbg !4723
  %exitcond2 = icmp eq i64 %i.3, %call110, !dbg !4794
  br i1 %exitcond2, label %if.end174.loopexit1, label %for.body129, !dbg !4795

for.body129:                                      ; preds = %for.cond126
  %call130 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !4796
  call void @llvm.dbg.value(metadata %union.tree_node* %call130, metadata !4710, metadata !DIExpression()), !dbg !4797
  %22 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4798
  %arm_eabi133 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %22, i64 0, i32 5, i32 0, !dbg !4798
  %23 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %arm_eabi133, align 8, !dbg !4798
  %tobool134 = icmp eq %struct.VEC_tree_gc* %23, null, !dbg !4798
  br i1 %tobool134, label %cond.end141, label %cond.true135, !dbg !4798

cond.true135:                                     ; preds = %for.body129
  %base139 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %23, i64 0, i32 0, !dbg !4798
  br label %cond.end141, !dbg !4798

cond.end141:                                      ; preds = %for.body129, %cond.true135
  %cond142 = phi %struct.VEC_tree_base* [ %base139, %cond.true135 ], [ null, %for.body129 ], !dbg !4798
  %conv143 = trunc i64 %i.3 to i32, !dbg !4798
  %call144 = tail call fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %cond142, i32 %conv143, %union.tree_node* %call130) #8, !dbg !4798
  %inc146 = add nuw i64 %i.3, 1, !dbg !4799
  call void @llvm.dbg.value(metadata i64 %inc146, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond126, !dbg !4800, !llvm.loop !4801

if.else:                                          ; preds = %if.then121
  %other = bitcast %union.eh_status_u* %ehspec_data to %struct.VEC_uchar_gc**, !dbg !4803
  %conv150 = trunc i64 %call110 to i32, !dbg !4803
  tail call fastcc void @VEC_uchar_gc_safe_grow(%struct.VEC_uchar_gc** nonnull %other, i32 %conv150) #8, !dbg !4803
  call void @llvm.dbg.value(metadata i64 0, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond151, !dbg !4804

for.cond151:                                      ; preds = %cond.end166, %if.else
  %i.4 = phi i64 [ 0, %if.else ], [ %inc171, %cond.end166 ], !dbg !4805
  call void @llvm.dbg.value(metadata i64 %i.4, metadata !4688, metadata !DIExpression()), !dbg !4723
  %exitcond = icmp eq i64 %i.4, %call110, !dbg !4806
  br i1 %exitcond, label %if.end174.loopexit, label %for.body154, !dbg !4807

for.body154:                                      ; preds = %for.cond151
  %call155 = tail call zeroext i8 @lto_input_1_unsigned(%struct.lto_input_block* %ib) #7, !dbg !4808
  call void @llvm.dbg.value(metadata i8 %call155, metadata !4718, metadata !DIExpression()), !dbg !4809
  %24 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !4810
  %ehspec_data157 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %24, i64 0, i32 5, !dbg !4810
  %other158 = bitcast %union.eh_status_u* %ehspec_data157 to %struct.VEC_uchar_gc**, !dbg !4810
  %25 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %other158, align 8, !dbg !4810
  %tobool159 = icmp eq %struct.VEC_uchar_gc* %25, null, !dbg !4810
  br i1 %tobool159, label %cond.end166, label %cond.true160, !dbg !4810

cond.true160:                                     ; preds = %for.body154
  %base164 = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %25, i64 0, i32 0, !dbg !4810
  br label %cond.end166, !dbg !4810

cond.end166:                                      ; preds = %for.body154, %cond.true160
  %cond167 = phi %struct.VEC_uchar_base* [ %base164, %cond.true160 ], [ null, %for.body154 ], !dbg !4810
  %conv168 = trunc i64 %i.4 to i32, !dbg !4810
  %call169 = tail call fastcc zeroext i8 @VEC_uchar_base_replace(%struct.VEC_uchar_base* %cond167, i32 %conv168, i8 zeroext %call155) #8, !dbg !4810
  %inc171 = add nuw i64 %i.4, 1, !dbg !4811
  call void @llvm.dbg.value(metadata i64 %inc171, metadata !4688, metadata !DIExpression()), !dbg !4723
  br label %for.cond151, !dbg !4812, !llvm.loop !4813

if.end174.loopexit:                               ; preds = %for.cond151
  br label %if.end174, !dbg !4815

if.end174.loopexit1:                              ; preds = %for.cond126
  br label %if.end174, !dbg !4815

if.end174:                                        ; preds = %if.end174.loopexit1, %if.end174.loopexit, %cond.end117
  tail call fastcc void @fixup_eh_region_pointers(%struct.function* %fn, i64 %call1) #8, !dbg !4815
  %call175 = tail call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4816
  call void @llvm.dbg.value(metadata i32 %call175, metadata !4691, metadata !DIExpression()), !dbg !4723
  tail call fastcc void @lto_tag_check_range(i32 %call175, i32 0, i32 0) #8, !dbg !4817
  br label %cleanup.cont, !dbg !4818

cleanup.cont:                                     ; preds = %if.end174, %entry
  ret void, !dbg !4818
}

; Function Attrs: nounwind uwtable
define internal fastcc void @input_bb(%struct.lto_input_block* %ib, i32 %tag, %struct.data_in* %data_in, %struct.function* %fn) unnamed_addr #5 !dbg !4819 {
entry:
  %bsi = alloca %struct.gimple_stmt_iterator, align 8
  %tmp = alloca %struct.gimple_stmt_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !4823, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata i32 %tag, metadata !4824, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !4825, metadata !DIExpression()), !dbg !4837
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !4826, metadata !DIExpression()), !dbg !4837
  %0 = bitcast %struct.gimple_stmt_iterator* %bsi to i8*, !dbg !4838
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !4838
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4839
  %cmp = icmp eq %struct.function* %1, %fn, !dbg !4839
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !4839

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4839
  br label %cond.end, !dbg !4839

cond.end:                                         ; preds = %entry, %cond.true
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !4840
  %conv = trunc i64 %call to i32, !dbg !4840
  call void @llvm.dbg.value(metadata i32 %conv, metadata !4827, metadata !DIExpression()), !dbg !4837
  %cfg = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 1, !dbg !4841
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4841
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 2, !dbg !4841
  %3 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4841
  %tobool = icmp eq %struct.VEC_basic_block_gc* %3, null, !dbg !4841
  br i1 %tobool, label %cond.end5, label %cond.true1, !dbg !4841

cond.true1:                                       ; preds = %cond.end
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %3, i64 0, i32 0, !dbg !4841
  br label %cond.end5, !dbg !4841

cond.end5:                                        ; preds = %cond.end, %cond.true1
  %cond6 = phi %struct.VEC_basic_block_base* [ %base, %cond.true1 ], [ null, %cond.end ], !dbg !4841
  %call7 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond6, i32 %conv) #8, !dbg !4841
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call7, metadata !4828, metadata !DIExpression()), !dbg !4837
  %call8 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4842
  %count = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call7, i64 0, i32 8, !dbg !4843
  store i64 %call8, i64* %count, align 8, !dbg !4844
  %call9 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4845
  %conv10 = trunc i64 %call9 to i32, !dbg !4845
  %loop_depth = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call7, i64 0, i32 10, !dbg !4846
  store i32 %conv10, i32* %loop_depth, align 4, !dbg !4847
  %call11 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4848
  %conv12 = trunc i64 %call11 to i32, !dbg !4848
  %frequency = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call7, i64 0, i32 11, !dbg !4849
  store i32 %conv12, i32* %frequency, align 8, !dbg !4850
  %call13 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4851
  %conv14 = trunc i64 %call13 to i32, !dbg !4851
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call7, i64 0, i32 13, !dbg !4852
  store i32 %conv14, i32* %flags, align 8, !dbg !4853
  %cmp15 = icmp eq i32 %tag, 224, !dbg !4854
  br i1 %cmp15, label %cleanup, label %if.end, !dbg !4856

if.end:                                           ; preds = %cond.end5
  %4 = bitcast %struct.gimple_stmt_iterator* %tmp to i8*, !dbg !4857
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6, !dbg !4857
  call fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* nonnull sret %tmp, %struct.basic_block_def* %call7) #8, !dbg !4857
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !4857
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6, !dbg !4857
  %call17 = call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4858
  call void @llvm.dbg.value(metadata i32 %call17, metadata !4824, metadata !DIExpression()), !dbg !4837
  br label %while.cond, !dbg !4859

while.cond:                                       ; preds = %if.end41, %if.end
  %tag.addr.0 = phi i32 [ %call17, %if.end ], [ %call42, %if.end41 ], !dbg !4837
  call void @llvm.dbg.value(metadata i32 %tag.addr.0, metadata !4824, metadata !DIExpression()), !dbg !4837
  %tobool18 = icmp eq i32 %tag.addr.0, 0, !dbg !4859
  br i1 %tobool18, label %while.end, label %while.body, !dbg !4859

while.body:                                       ; preds = %while.cond
  %call19 = call fastcc %union.gimple_statement_d* @input_gimple_stmt(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.function* %fn, i32 %tag.addr.0) #8, !dbg !4860
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call19, metadata !4830, metadata !DIExpression()), !dbg !4861
  %5 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !4862
  %tobool20 = icmp eq i32 %5, 0, !dbg !4862
  br i1 %tobool20, label %land.lhs.true, label %if.end26, !dbg !4864

land.lhs.true:                                    ; preds = %while.body
  %call21 = call fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %call19) #8, !dbg !4865
  %tobool23 = icmp eq i8 %call21, 0, !dbg !4865
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !4866

if.then24:                                        ; preds = %land.lhs.true
  %call25 = call %union.gimple_statement_d* @gimple_build_nop() #7, !dbg !4867
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call25, metadata !4830, metadata !DIExpression()), !dbg !4861
  br label %if.end26, !dbg !4868

if.end26:                                         ; preds = %land.lhs.true, %while.body, %if.then24
  %stmt.0 = phi %union.gimple_statement_d* [ %call19, %while.body ], [ %call25, %if.then24 ], [ %call19, %land.lhs.true ], !dbg !4861
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt.0, metadata !4830, metadata !DIExpression()), !dbg !4861
  call void @find_referenced_vars_in(%union.gimple_statement_d* %stmt.0) #7, !dbg !4869
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %bsi, metadata !4829, metadata !DIExpression(DW_OP_deref)), !dbg !4837
  call void @gsi_insert_after(%struct.gimple_stmt_iterator* nonnull %bsi, %union.gimple_statement_d* %stmt.0, i32 0) #7, !dbg !4870
  %call27 = call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4871
  call void @llvm.dbg.value(metadata i32 %call27, metadata !4824, metadata !DIExpression()), !dbg !4837
  call void (i32, i32, ...) @lto_tag_check_set(i32 %call27, i32 2, i32 226, i32 0) #8, !dbg !4872
  %cmp28 = icmp eq i32 %call27, 226, !dbg !4873
  br i1 %cmp28, label %if.then30, label %if.end41, !dbg !4874

if.then30:                                        ; preds = %if.end26
  %call31 = call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !4875
  call void @llvm.dbg.value(metadata i64 %call31, metadata !4832, metadata !DIExpression()), !dbg !4876
  %6 = add i64 %call31, 2147483648, !dbg !4877
  %7 = icmp ult i64 %6, 4294967296, !dbg !4877
  br i1 %7, label %cond.end38, label %cond.true36, !dbg !4877

cond.true36:                                      ; preds = %if.then30
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1222, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !4877
  br label %cond.end38, !dbg !4877

cond.end38:                                       ; preds = %if.then30, %cond.true36
  %conv40 = trunc i64 %call31 to i32, !dbg !4878
  call void @add_stmt_to_eh_lp(%union.gimple_statement_d* %stmt.0, i32 %conv40) #7, !dbg !4879
  br label %if.end41, !dbg !4880

if.end41:                                         ; preds = %cond.end38, %if.end26
  %call42 = call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4881
  call void @llvm.dbg.value(metadata i32 %call42, metadata !4824, metadata !DIExpression()), !dbg !4837
  br label %while.cond, !dbg !4859, !llvm.loop !4882

while.end:                                        ; preds = %while.cond
  %call43 = call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4884
  call void @llvm.dbg.value(metadata i32 %call43, metadata !4824, metadata !DIExpression()), !dbg !4837
  br label %while.cond44, !dbg !4885

while.cond44:                                     ; preds = %while.body46, %while.end
  %tag.addr.1 = phi i32 [ %call43, %while.end ], [ %call48, %while.body46 ], !dbg !4837
  call void @llvm.dbg.value(metadata i32 %tag.addr.1, metadata !4824, metadata !DIExpression()), !dbg !4837
  %tobool45 = icmp eq i32 %tag.addr.1, 0, !dbg !4885
  br i1 %tobool45, label %cleanup.loopexit, label %while.body46, !dbg !4885

while.body46:                                     ; preds = %while.cond44
  %call47 = call fastcc %union.gimple_statement_d* @input_phi(%struct.lto_input_block* %ib, %struct.basic_block_def* %call7, %struct.data_in* %data_in, %struct.function* %fn) #8, !dbg !4886
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call47, metadata !4835, metadata !DIExpression()), !dbg !4887
  call void @find_referenced_vars_in(%union.gimple_statement_d* %call47) #7, !dbg !4888
  %call48 = call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !4889
  call void @llvm.dbg.value(metadata i32 %call48, metadata !4824, metadata !DIExpression()), !dbg !4837
  br label %while.cond44, !dbg !4885, !llvm.loop !4890

cleanup.loopexit:                                 ; preds = %while.cond44
  br label %cleanup, !dbg !4892

cleanup:                                          ; preds = %cleanup.loopexit, %cond.end5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !4892
  ret void, !dbg !4892
}

declare dso_local void @renumber_gimple_stmt_uids() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_stmt_max_uid(%struct.function* %fn) unnamed_addr #0 !dbg !4893 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !4898, metadata !DIExpression()), !dbg !4899
  %last_stmt_uid = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 13, !dbg !4900
  %0 = load i32, i32* %last_stmt_uid, align 8, !dbg !4900
  ret i32 %0, !dbg !4901
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_start_bb(%struct.gimple_stmt_iterator* noalias sret %agg.result, %struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4902 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4906, metadata !DIExpression()), !dbg !4909
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %agg.result, metadata !4907, metadata !DIExpression()), !dbg !4910
  %call = tail call fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) #8, !dbg !4911
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %call, metadata !4908, metadata !DIExpression()), !dbg !4909
  %call1 = tail call fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %call) #8, !dbg !4912
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 0, !dbg !4913
  store %struct.gimple_seq_node_d* %call1, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4914
  %seq2 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 1, !dbg !4915
  store %struct.gimple_seq_d* %call, %struct.gimple_seq_d** %seq2, align 8, !dbg !4916
  %bb3 = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %agg.result, i64 0, i32 2, !dbg !4917
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb3, align 8, !dbg !4918
  ret void, !dbg !4919
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gsi_end_p(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4920 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4924, metadata !DIExpression()), !dbg !4925
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4926
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4926
  %cmp = icmp eq %struct.gimple_seq_node_d* %0, null, !dbg !4927
  %conv1 = zext i1 %cmp to i8, !dbg !4928
  ret i8 %conv1, !dbg !4929
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.gimple_statement_d* @gsi_stmt(%struct.gimple_stmt_iterator* byval(%struct.gimple_stmt_iterator) align 8 %i) unnamed_addr #0 !dbg !4930 {
entry:
  call void @llvm.dbg.declare(metadata %struct.gimple_stmt_iterator* %i, metadata !4934, metadata !DIExpression()), !dbg !4935
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4936
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4936
  %stmt = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 0, !dbg !4937
  %1 = load %union.gimple_statement_d*, %union.gimple_statement_d** %stmt, align 8, !dbg !4937
  ret %union.gimple_statement_d* %1, !dbg !4938
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_uid(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !4939 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !4944, metadata !DIExpression()), !dbg !4945
  %uid = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 1, !dbg !4946
  %0 = load i32, i32* %uid, align 4, !dbg !4946
  ret i32 %0, !dbg !4947
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gsi_next(%struct.gimple_stmt_iterator* %i) unnamed_addr #0 !dbg !4948 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_stmt_iterator* %i, metadata !4953, metadata !DIExpression()), !dbg !4954
  %ptr = getelementptr inbounds %struct.gimple_stmt_iterator, %struct.gimple_stmt_iterator* %i, i64 0, i32 0, !dbg !4955
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %ptr, align 8, !dbg !4955
  %next = getelementptr inbounds %struct.gimple_seq_node_d, %struct.gimple_seq_node_d* %0, i64 0, i32 2, !dbg !4956
  %1 = bitcast %struct.gimple_seq_node_d** %next to i64*, !dbg !4956
  %2 = load i64, i64* %1, align 8, !dbg !4956
  %3 = bitcast %struct.gimple_stmt_iterator* %i to i64*, !dbg !4957
  store i64 %2, i64* %3, align 8, !dbg !4957
  ret void, !dbg !4958
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !4959 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !4963, metadata !DIExpression()), !dbg !4965
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !4966
  store i32 0, i32* %index, align 8, !dbg !4967
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !4968
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !4969
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !4970
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !4970
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !4970
}

declare dso_local void @gimple_set_body(%union.tree_node*, %struct.gimple_seq_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_d* @bb_seq(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !4971 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4978, metadata !DIExpression()), !dbg !4979
  %flags = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 13, !dbg !4980
  %0 = load i32, i32* %flags, align 8, !dbg !4980
  %and = and i32 %0, 512, !dbg !4981
  %tobool = icmp eq i32 %and, 0, !dbg !4981
  br i1 %tobool, label %land.lhs.true, label %cond.end, !dbg !4982

land.lhs.true:                                    ; preds = %entry
  %gimple = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, i32 0, !dbg !4983
  %1 = load %struct.gimple_bb_info*, %struct.gimple_bb_info** %gimple, align 8, !dbg !4983
  %tobool1 = icmp eq %struct.gimple_bb_info* %1, null, !dbg !4984
  br i1 %tobool1, label %cond.end, label %cond.true, !dbg !4985

cond.true:                                        ; preds = %land.lhs.true
  %seq = getelementptr inbounds %struct.gimple_bb_info, %struct.gimple_bb_info* %1, i64 0, i32 0, !dbg !4986
  %2 = load %struct.gimple_seq_d*, %struct.gimple_seq_d** %seq, align 8, !dbg !4986
  br label %cond.end, !dbg !4985

cond.end:                                         ; preds = %land.lhs.true, %entry, %cond.true
  %cond = phi %struct.gimple_seq_d* [ %2, %cond.true ], [ null, %land.lhs.true ], [ null, %entry ], !dbg !4985
  ret %struct.gimple_seq_d* %cond, !dbg !4987
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4988 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4993
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4993
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4993

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #8, !dbg !4993
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4993
  br label %cond.end, !dbg !4993

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4993
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #8, !dbg !4993
  ret %struct.edge_def* %call2, !dbg !4994
}

declare dso_local %struct.cgraph_node* @cgraph_node(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fixup_call_stmt_edges(%struct.cgraph_node* %orig, %union.gimple_statement_d** %stmts) unnamed_addr #5 !dbg !4995 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %orig, metadata !4997, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmts, metadata !4998, metadata !DIExpression()), !dbg !5000
  br label %while.cond, !dbg !5001

while.cond:                                       ; preds = %while.body, %entry
  %orig.addr.0 = phi %struct.cgraph_node* [ %orig, %entry ], [ %0, %while.body ]
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %orig.addr.0, metadata !4997, metadata !DIExpression()), !dbg !5000
  %clone_of = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %orig.addr.0, i64 0, i32 12, !dbg !5002
  %0 = load %struct.cgraph_node*, %struct.cgraph_node** %clone_of, align 8, !dbg !5002
  %tobool = icmp eq %struct.cgraph_node* %0, null, !dbg !5001
  br i1 %tobool, label %while.end, label %while.body, !dbg !5001

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %0, metadata !4997, metadata !DIExpression()), !dbg !5000
  br label %while.cond, !dbg !5001, !llvm.loop !5003

while.end:                                        ; preds = %while.cond
  %orig.addr.0.lcssa = phi %struct.cgraph_node* [ %orig.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %orig.addr.0.lcssa, metadata !4997, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %orig.addr.0.lcssa, metadata !4997, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %orig.addr.0.lcssa, metadata !4997, metadata !DIExpression()), !dbg !5000
  tail call fastcc void @fixup_call_stmt_edges_1(%struct.cgraph_node* %orig.addr.0.lcssa, %union.gimple_statement_d** %stmts) #8, !dbg !5005
  %clones = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %orig.addr.0.lcssa, i64 0, i32 11, !dbg !5006
  %1 = load %struct.cgraph_node*, %struct.cgraph_node** %clones, align 8, !dbg !5006
  %tobool2 = icmp eq %struct.cgraph_node* %1, null, !dbg !5008
  br i1 %tobool2, label %if.end24, label %if.then, !dbg !5009

if.then:                                          ; preds = %while.end
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %1, metadata !4999, metadata !DIExpression()), !dbg !5000
  br label %for.cond, !dbg !5010

for.cond:                                         ; preds = %if.end23, %if.then
  %node.0 = phi %struct.cgraph_node* [ %1, %if.then ], [ %node.4, %if.end23 ], !dbg !5012
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.0, metadata !4999, metadata !DIExpression()), !dbg !5000
  %cmp = icmp eq %struct.cgraph_node* %node.0, %orig.addr.0.lcssa, !dbg !5013
  br i1 %cmp, label %if.end24.loopexit, label %for.body, !dbg !5015

for.body:                                         ; preds = %for.cond
  tail call fastcc void @fixup_call_stmt_edges_1(%struct.cgraph_node* %node.0, %union.gimple_statement_d** %stmts) #8, !dbg !5016
  %clones4 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 11, !dbg !5018
  %2 = load %struct.cgraph_node*, %struct.cgraph_node** %clones4, align 8, !dbg !5018
  %tobool5 = icmp eq %struct.cgraph_node* %2, null, !dbg !5020
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !5021

if.then6:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %2, metadata !4999, metadata !DIExpression()), !dbg !5000
  br label %if.end23, !dbg !5022

if.else:                                          ; preds = %for.body
  %next_sibling_clone = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.0, i64 0, i32 9, !dbg !5023
  %3 = load %struct.cgraph_node*, %struct.cgraph_node** %next_sibling_clone, align 8, !dbg !5023
  %tobool8 = icmp eq %struct.cgraph_node* %3, null, !dbg !5025
  br i1 %tobool8, label %while.cond12.preheader, label %if.then9, !dbg !5026

while.cond12.preheader:                           ; preds = %if.else
  br label %while.cond12, !dbg !5027

if.then9:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %3, metadata !4999, metadata !DIExpression()), !dbg !5000
  br label %if.end23, !dbg !5029

while.cond12:                                     ; preds = %while.cond12.preheader, %while.body16
  %node.1 = phi %struct.cgraph_node* [ %5, %while.body16 ], [ %node.0, %while.cond12.preheader ], !dbg !5012
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1, metadata !4999, metadata !DIExpression()), !dbg !5000
  %cmp13 = icmp eq %struct.cgraph_node* %node.1, %orig.addr.0.lcssa, !dbg !5030
  br i1 %cmp13, label %while.end18, label %land.rhs, !dbg !5031

land.rhs:                                         ; preds = %while.cond12
  %next_sibling_clone14 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 9, !dbg !5032
  %4 = load %struct.cgraph_node*, %struct.cgraph_node** %next_sibling_clone14, align 8, !dbg !5032
  %tobool15 = icmp eq %struct.cgraph_node* %4, null, !dbg !5033
  br i1 %tobool15, label %while.body16, label %while.end18, !dbg !5027

while.body16:                                     ; preds = %land.rhs
  %clone_of17 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1, i64 0, i32 12, !dbg !5034
  %5 = load %struct.cgraph_node*, %struct.cgraph_node** %clone_of17, align 8, !dbg !5034
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %5, metadata !4999, metadata !DIExpression()), !dbg !5000
  br label %while.cond12, !dbg !5027, !llvm.loop !5035

while.end18:                                      ; preds = %while.cond12, %land.rhs
  %node.1.lcssa = phi %struct.cgraph_node* [ %node.1, %while.cond12 ], [ %node.1, %land.rhs ], !dbg !5012
  %cmp13.lcssa = phi i1 [ %cmp13, %while.cond12 ], [ %cmp13, %land.rhs ], !dbg !5030
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1.lcssa, metadata !4999, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1.lcssa, metadata !4999, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1.lcssa, metadata !4999, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1.lcssa, metadata !4999, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1.lcssa, metadata !4999, metadata !DIExpression()), !dbg !5000
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.1.lcssa, metadata !4999, metadata !DIExpression()), !dbg !5000
  br i1 %cmp13.lcssa, label %if.end23, label %if.then20, !dbg !5036

if.then20:                                        ; preds = %while.end18
  %next_sibling_clone21 = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node.1.lcssa, i64 0, i32 9, !dbg !5037
  %6 = load %struct.cgraph_node*, %struct.cgraph_node** %next_sibling_clone21, align 8, !dbg !5037
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %6, metadata !4999, metadata !DIExpression()), !dbg !5000
  br label %if.end23, !dbg !5039

if.end23:                                         ; preds = %while.end18, %if.then9, %if.then20, %if.then6
  %node.4 = phi %struct.cgraph_node* [ %2, %if.then6 ], [ %3, %if.then9 ], [ %6, %if.then20 ], [ %orig.addr.0.lcssa, %while.end18 ], !dbg !5040
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node.4, metadata !4999, metadata !DIExpression()), !dbg !5000
  br label %for.cond, !dbg !5041, !llvm.loop !5042

if.end24.loopexit:                                ; preds = %for.cond
  br label %if.end24, !dbg !5044

if.end24:                                         ; preds = %if.end24.loopexit, %while.end
  ret void, !dbg !5044
}

declare dso_local void @execute_all_ipa_stmt_fixups(%struct.cgraph_node*, %union.gimple_statement_d**) local_unnamed_addr #2

declare dso_local void @update_ssa(i32) local_unnamed_addr #2

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

declare dso_local void @internal_error(i8*, ...) local_unnamed_addr #2

declare dso_local i8* @lto_tag_name(i32) local_unnamed_addr #2

declare dso_local void @init_ssanames(%struct.function*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !5045 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5051, metadata !DIExpression()), !dbg !5052
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5053
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5053

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5053
  %0 = load i32, i32* %num, align 8, !dbg !5053
  br label %cond.end, !dbg !5053

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5053
  ret i32 %cond, !dbg !5053
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5054 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5059, metadata !DIExpression()), !dbg !5062
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5060, metadata !DIExpression()), !dbg !5062
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5063
  %0 = load i32, i32* %num1, align 8, !dbg !5063
  %inc = add i32 %0, 1, !dbg !5063
  store i32 %inc, i32* %num1, align 8, !dbg !5063
  %idxprom = zext i32 %0 to i64, !dbg !5063
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5063
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !5061, metadata !DIExpression()), !dbg !5062
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5063
  ret %union.tree_node** %arrayidx, !dbg !5063
}

declare dso_local zeroext i8 @lto_input_1_unsigned(%struct.lto_input_block*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_ssa_name_fn(%struct.function*, %union.tree_node*, %union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local %union.gimple_statement_d* @gimple_build_nop() local_unnamed_addr #2

declare dso_local void @set_default_def(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_tag_check_range(i32 %actual, i32 %tag1, i32 %tag2) unnamed_addr #5 !dbg !5064 {
entry:
  call void @llvm.dbg.value(metadata i32 %actual, metadata !5068, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.value(metadata i32 %tag1, metadata !5069, metadata !DIExpression()), !dbg !5071
  call void @llvm.dbg.value(metadata i32 %tag2, metadata !5070, metadata !DIExpression()), !dbg !5071
  %cmp = icmp ult i32 %actual, %tag1, !dbg !5072
  %cmp1 = icmp ugt i32 %actual, %tag2, !dbg !5074
  %or.cond = or i1 %cmp, %cmp1, !dbg !5075
  br i1 %or.cond, label %if.then, label %if.end, !dbg !5075

if.then:                                          ; preds = %entry
  %call = tail call i8* @lto_tag_name(i32 %actual) #7, !dbg !5076
  %call2 = tail call i8* @lto_tag_name(i32 %tag1) #7, !dbg !5077
  %call3 = tail call i8* @lto_tag_name(i32 %tag2) #7, !dbg !5078
  tail call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.4, i64 0, i64 0), i8* %call, i8* %call2, i8* %call3) #7, !dbg !5079
  br label %if.end, !dbg !5079

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5080
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_init_eh() unnamed_addr #5 !dbg !3268 {
entry:
  %.b = load i1, i1* @lto_init_eh.eh_initialized_p, align 1, !dbg !5081
  br i1 %.b, label %return, label %if.end, !dbg !5083

if.end:                                           ; preds = %entry
  store i32 1, i32* @flag_exceptions, align 4, !dbg !5084
  tail call void @init_eh() #7, !dbg !5085
  %call = tail call i32 @dwarf2out_do_frame() #7, !dbg !5086
  %tobool1 = icmp eq i32 %call, 0, !dbg !5086
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !5088

if.then2:                                         ; preds = %if.end
  tail call void @dwarf2out_frame_init() #7, !dbg !5089
  br label %if.end3, !dbg !5089

if.end3:                                          ; preds = %if.end, %if.then2
  store i1 true, i1* @lto_init_eh.eh_initialized_p, align 1, !dbg !5090
  br label %return, !dbg !5091

return:                                           ; preds = %entry, %if.end3
  ret void, !dbg !5091
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_eh_region_gc_safe_grow(%struct.VEC_eh_region_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !5092 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_gc** %vec_, metadata !5097, metadata !DIExpression()), !dbg !5099
  call void @llvm.dbg.value(metadata i32 %size_, metadata !5098, metadata !DIExpression()), !dbg !5099
  %cmp = icmp sgt i32 %size_, -1, !dbg !5100
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5100

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %vec_, align 8, !dbg !5100
  %tobool = icmp eq %struct.VEC_eh_region_gc* %0, null, !dbg !5100
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5100

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %0, i64 0, i32 0, !dbg !5100
  br label %cond.end, !dbg !5100

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !5100
  %call = tail call fastcc i32 @VEC_eh_region_base_length(%struct.VEC_eh_region_base* %cond) #8, !dbg !5100
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %vec_, align 8, !dbg !5100
  %tobool2 = icmp eq %struct.VEC_eh_region_gc* %1, null, !dbg !5100
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !5100

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %1, i64 0, i32 0, i32 0, !dbg !5100
  %2 = load i32, i32* %num, align 8, !dbg !5100
  br label %cond.end11, !dbg !5100

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !5100
  %sub = sub nsw i32 %size_, %cond12, !dbg !5100
  %call13 = tail call fastcc i32 @VEC_eh_region_gc_reserve_exact(%struct.VEC_eh_region_gc** %vec_, i32 %sub) #8, !dbg !5100
  %3 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %vec_, align 8, !dbg !5100
  %num20 = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %3, i64 0, i32 0, i32 0, !dbg !5100
  store i32 %size_, i32* %num20, align 8, !dbg !5100
  ret void, !dbg !5100
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.eh_region_d* @input_eh_region(%struct.lto_input_block* %ib, %struct.data_in* %data_in, i32 %ix) unnamed_addr #5 !dbg !5101 {
entry:
  %last_catch = alloca %struct.eh_catch_d*, align 8
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !5105, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !5106, metadata !DIExpression()), !dbg !5115
  call void @llvm.dbg.value(metadata i32 %ix, metadata !5107, metadata !DIExpression()), !dbg !5115
  %call = tail call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !5116
  call void @llvm.dbg.value(metadata i32 %call, metadata !5108, metadata !DIExpression()), !dbg !5115
  %cmp = icmp eq i32 %call, 0, !dbg !5117
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5119

if.end:                                           ; preds = %entry
  %call1 = tail call i8* @ggc_alloc_cleared_stat(i64 88) #7, !dbg !5120
  %0 = bitcast i8* %call1 to %struct.eh_region_d*, !dbg !5120
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %0, metadata !5109, metadata !DIExpression()), !dbg !5115
  %call2 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5121
  %conv = trunc i64 %call2 to i32, !dbg !5121
  %index = getelementptr inbounds i8, i8* %call1, i64 24, !dbg !5122
  %1 = bitcast i8* %index to i32*, !dbg !5122
  store i32 %conv, i32* %1, align 8, !dbg !5123
  %cmp4 = icmp eq i32 %conv, %ix, !dbg !5124
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !5124

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 438, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5124
  br label %cond.end, !dbg !5124

cond.end:                                         ; preds = %if.end, %cond.true
  %call6 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5125
  %2 = inttoptr i64 %call6 to %struct.eh_region_d*, !dbg !5126
  %outer = bitcast i8* %call1 to %struct.eh_region_d**, !dbg !5127
  store %struct.eh_region_d* %2, %struct.eh_region_d** %outer, align 8, !dbg !5128
  %call7 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5129
  %3 = inttoptr i64 %call7 to %struct.eh_region_d*, !dbg !5130
  %inner = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !5131
  %4 = bitcast i8* %inner to %struct.eh_region_d**, !dbg !5131
  store %struct.eh_region_d* %3, %struct.eh_region_d** %4, align 8, !dbg !5132
  %call8 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5133
  %5 = inttoptr i64 %call8 to %struct.eh_region_d*, !dbg !5134
  %next_peer = getelementptr inbounds i8, i8* %call1, i64 16, !dbg !5135
  %6 = bitcast i8* %next_peer to %struct.eh_region_d**, !dbg !5135
  store %struct.eh_region_d* %5, %struct.eh_region_d** %6, align 8, !dbg !5136
  switch i32 %call, label %sw.default [
    i32 230, label %sw.bb
    i32 231, label %sw.bb9
    i32 232, label %sw.bb15
    i32 233, label %sw.bb29
  ], !dbg !5137

sw.bb:                                            ; preds = %cond.end
  %type = getelementptr inbounds i8, i8* %call1, i64 28, !dbg !5138
  %7 = bitcast i8* %type to i32*, !dbg !5138
  store i32 0, i32* %7, align 4, !dbg !5139
  br label %sw.epilog, !dbg !5140

sw.bb9:                                           ; preds = %cond.end
  %8 = bitcast %struct.eh_catch_d** %last_catch to i8*, !dbg !5141
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !5141
  %type10 = getelementptr inbounds i8, i8* %call1, i64 28, !dbg !5142
  %9 = bitcast i8* %type10 to i32*, !dbg !5142
  store i32 1, i32* %9, align 4, !dbg !5143
  call void @llvm.dbg.value(metadata %struct.eh_catch_d** %last_catch, metadata !5110, metadata !DIExpression(DW_OP_deref)), !dbg !5144
  %call11 = call fastcc %struct.eh_catch_d* @lto_input_eh_catch_list(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.eh_catch_d** nonnull %last_catch) #8, !dbg !5145
  %u = getelementptr inbounds i8, i8* %call1, i64 32, !dbg !5146
  %first_catch = bitcast i8* %u to %struct.eh_catch_d**, !dbg !5147
  store %struct.eh_catch_d* %call11, %struct.eh_catch_d** %first_catch, align 8, !dbg !5148
  %10 = bitcast %struct.eh_catch_d** %last_catch to i64*, !dbg !5149
  %11 = load i64, i64* %10, align 8, !dbg !5149
  %last_catch14 = getelementptr inbounds i8, i8* %call1, i64 40, !dbg !5150
  %12 = bitcast i8* %last_catch14 to i64*, !dbg !5151
  store i64 %11, i64* %12, align 8, !dbg !5151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !5152
  br label %sw.epilog

sw.bb15:                                          ; preds = %cond.end
  %type16 = getelementptr inbounds i8, i8* %call1, i64 28, !dbg !5153
  %13 = bitcast i8* %type16 to i32*, !dbg !5153
  store i32 2, i32* %13, align 4, !dbg !5154
  %call17 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5155
  %u18 = getelementptr inbounds i8, i8* %call1, i64 32, !dbg !5156
  %type_list = bitcast i8* %u18 to %union.tree_node**, !dbg !5157
  store %union.tree_node* %call17, %union.tree_node** %type_list, align 8, !dbg !5158
  %call19 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5159
  %label = getelementptr inbounds i8, i8* %call1, i64 40, !dbg !5160
  %14 = bitcast i8* %label to %union.tree_node**, !dbg !5160
  store %union.tree_node* %call19, %union.tree_node** %14, align 8, !dbg !5161
  %call22 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !5162
  %conv23 = trunc i64 %call22 to i32, !dbg !5162
  %filter = getelementptr inbounds i8, i8* %call1, i64 48, !dbg !5163
  %15 = bitcast i8* %filter to i32*, !dbg !5163
  store i32 %conv23, i32* %15, align 8, !dbg !5164
  br label %for.cond, !dbg !5165

for.cond:                                         ; preds = %for.body, %sw.bb15
  %l.0.in = phi %union.tree_node** [ %type_list, %sw.bb15 ], [ %chain, %for.body ]
  %l.0 = load %union.tree_node*, %union.tree_node** %l.0.in, align 8, !dbg !5167
  call void @llvm.dbg.value(metadata %union.tree_node* %l.0, metadata !5113, metadata !DIExpression()), !dbg !5168
  %tobool = icmp eq %union.tree_node* %l.0, null, !dbg !5169
  br i1 %tobool, label %sw.epilog.loopexit, label %for.body, !dbg !5169

for.body:                                         ; preds = %for.cond
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %l.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5170
  %17 = load %union.tree_node*, %union.tree_node** %16, align 8, !dbg !5170
  tail call void @add_type_for_runtime(%union.tree_node* %17) #7, !dbg !5172
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %l.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5173
  br label %for.cond, !dbg !5174, !llvm.loop !5175

sw.bb29:                                          ; preds = %cond.end
  %type30 = getelementptr inbounds i8, i8* %call1, i64 28, !dbg !5177
  %18 = bitcast i8* %type30 to i32*, !dbg !5177
  store i32 3, i32* %18, align 4, !dbg !5178
  %call31 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5179
  %u32 = getelementptr inbounds i8, i8* %call1, i64 32, !dbg !5180
  %failure_decl = bitcast i8* %u32 to %union.tree_node**, !dbg !5181
  store %union.tree_node* %call31, %union.tree_node** %failure_decl, align 8, !dbg !5182
  %call33 = tail call fastcc i32 @lto_input_location(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5183
  %failure_loc = getelementptr inbounds i8, i8* %call1, i64 40, !dbg !5184
  %19 = bitcast i8* %failure_loc to i32*, !dbg !5184
  store i32 %call33, i32* %19, align 8, !dbg !5185
  br label %sw.epilog, !dbg !5186

sw.default:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 483, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5187
  br label %sw.epilog, !dbg !5188

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !5189

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default, %sw.bb29, %sw.bb9, %sw.bb
  %call36 = call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5189
  %20 = inttoptr i64 %call36 to %struct.eh_landing_pad_d*, !dbg !5190
  %landing_pads = getelementptr inbounds i8, i8* %call1, i64 56, !dbg !5191
  %21 = bitcast i8* %landing_pads to %struct.eh_landing_pad_d**, !dbg !5191
  store %struct.eh_landing_pad_d* %20, %struct.eh_landing_pad_d** %21, align 8, !dbg !5192
  br label %cleanup, !dbg !5193

cleanup:                                          ; preds = %entry, %sw.epilog
  %retval.0 = phi %struct.eh_region_d* [ %0, %sw.epilog ], [ null, %entry ], !dbg !5115
  ret %struct.eh_region_d* %retval.0, !dbg !5194
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d* @VEC_eh_region_base_replace(%struct.VEC_eh_region_base* %vec_, i32 %ix_, %struct.eh_region_d* %obj_) unnamed_addr #0 !dbg !5195 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !5200, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5201, metadata !DIExpression()), !dbg !5204
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %obj_, metadata !5202, metadata !DIExpression()), !dbg !5204
  %idxprom = zext i32 %ix_ to i64, !dbg !5205
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5205
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %arrayidx, align 8, !dbg !5205
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %0, metadata !5203, metadata !DIExpression()), !dbg !5204
  store %struct.eh_region_d* %obj_, %struct.eh_region_d** %arrayidx, align 8, !dbg !5205
  ret %struct.eh_region_d* %0, !dbg !5205
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_eh_landing_pad_gc_safe_grow(%struct.VEC_eh_landing_pad_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !5206 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_gc** %vec_, metadata !5211, metadata !DIExpression()), !dbg !5213
  call void @llvm.dbg.value(metadata i32 %size_, metadata !5212, metadata !DIExpression()), !dbg !5213
  %cmp = icmp sgt i32 %size_, -1, !dbg !5214
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5214

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %vec_, align 8, !dbg !5214
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %0, null, !dbg !5214
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5214

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %0, i64 0, i32 0, !dbg !5214
  br label %cond.end, !dbg !5214

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !5214
  %call = tail call fastcc i32 @VEC_eh_landing_pad_base_length(%struct.VEC_eh_landing_pad_base* %cond) #8, !dbg !5214
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %vec_, align 8, !dbg !5214
  %tobool2 = icmp eq %struct.VEC_eh_landing_pad_gc* %1, null, !dbg !5214
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !5214

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %1, i64 0, i32 0, i32 0, !dbg !5214
  %2 = load i32, i32* %num, align 8, !dbg !5214
  br label %cond.end11, !dbg !5214

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !5214
  %sub = sub nsw i32 %size_, %cond12, !dbg !5214
  %call13 = tail call fastcc i32 @VEC_eh_landing_pad_gc_reserve_exact(%struct.VEC_eh_landing_pad_gc** %vec_, i32 %sub) #8, !dbg !5214
  %3 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %vec_, align 8, !dbg !5214
  %num20 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %3, i64 0, i32 0, i32 0, !dbg !5214
  store i32 %size_, i32* %num20, align 8, !dbg !5214
  ret void, !dbg !5214
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.eh_landing_pad_d* @input_eh_lp(%struct.lto_input_block* %ib, %struct.data_in* %data_in, i32 %ix) unnamed_addr #5 !dbg !5215 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !5219, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !5220, metadata !DIExpression()), !dbg !5224
  call void @llvm.dbg.value(metadata i32 %ix, metadata !5221, metadata !DIExpression()), !dbg !5224
  %call = tail call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !5225
  call void @llvm.dbg.value(metadata i32 %call, metadata !5222, metadata !DIExpression()), !dbg !5224
  %cmp = icmp eq i32 %call, 0, !dbg !5226
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5228

if.end:                                           ; preds = %entry
  tail call fastcc void @lto_tag_check_range(i32 %call, i32 234, i32 234) #8, !dbg !5229
  %call1 = tail call i8* @ggc_alloc_cleared_stat(i64 40) #7, !dbg !5230
  %0 = bitcast i8* %call1 to %struct.eh_landing_pad_d*, !dbg !5230
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %0, metadata !5223, metadata !DIExpression()), !dbg !5224
  %call2 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5231
  %conv = trunc i64 %call2 to i32, !dbg !5231
  %index = getelementptr inbounds i8, i8* %call1, i64 32, !dbg !5232
  %1 = bitcast i8* %index to i32*, !dbg !5232
  store i32 %conv, i32* %1, align 8, !dbg !5233
  %cmp4 = icmp eq i32 %conv, %ix, !dbg !5234
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !5234

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 510, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5234
  br label %cond.end, !dbg !5234

cond.end:                                         ; preds = %if.end, %cond.true
  %call6 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5235
  %2 = inttoptr i64 %call6 to %struct.eh_landing_pad_d*, !dbg !5236
  %next_lp = bitcast i8* %call1 to %struct.eh_landing_pad_d**, !dbg !5237
  store %struct.eh_landing_pad_d* %2, %struct.eh_landing_pad_d** %next_lp, align 8, !dbg !5238
  %call7 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5239
  %3 = inttoptr i64 %call7 to %struct.eh_region_d*, !dbg !5240
  %region = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !5241
  %4 = bitcast i8* %region to %struct.eh_region_d**, !dbg !5241
  store %struct.eh_region_d* %3, %struct.eh_region_d** %4, align 8, !dbg !5242
  %call8 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5243
  %post_landing_pad = getelementptr inbounds i8, i8* %call1, i64 16, !dbg !5244
  %5 = bitcast i8* %post_landing_pad to %union.tree_node**, !dbg !5244
  store %union.tree_node* %call8, %union.tree_node** %5, align 8, !dbg !5245
  br label %cleanup, !dbg !5246

cleanup:                                          ; preds = %entry, %cond.end
  %retval.0 = phi %struct.eh_landing_pad_d* [ %0, %cond.end ], [ null, %entry ], !dbg !5224
  ret %struct.eh_landing_pad_d* %retval.0, !dbg !5247
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_replace(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_, %struct.eh_landing_pad_d* %obj_) unnamed_addr #0 !dbg !5248 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !5253, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5254, metadata !DIExpression()), !dbg !5257
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %obj_, metadata !5255, metadata !DIExpression()), !dbg !5257
  %idxprom = zext i32 %ix_ to i64, !dbg !5258
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5258
  %0 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !5258
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %0, metadata !5256, metadata !DIExpression()), !dbg !5257
  store %struct.eh_landing_pad_d* %obj_, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !5258
  ret %struct.eh_landing_pad_d* %0, !dbg !5258
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_tree_gc_safe_grow(%struct.VEC_tree_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !5259 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !5264, metadata !DIExpression()), !dbg !5266
  call void @llvm.dbg.value(metadata i32 %size_, metadata !5265, metadata !DIExpression()), !dbg !5266
  %cmp = icmp sgt i32 %size_, -1, !dbg !5267
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5267

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !5267
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !5267
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5267

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !5267
  br label %cond.end, !dbg !5267

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !5267
  %call = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %cond) #8, !dbg !5267
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !5267
  %tobool2 = icmp eq %struct.VEC_tree_gc* %1, null, !dbg !5267
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !5267

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %1, i64 0, i32 0, i32 0, !dbg !5267
  %2 = load i32, i32* %num, align 8, !dbg !5267
  br label %cond.end11, !dbg !5267

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !5267
  %sub = sub nsw i32 %size_, %cond12, !dbg !5267
  %call13 = tail call fastcc i32 @VEC_tree_gc_reserve_exact(%struct.VEC_tree_gc** %vec_, i32 %sub) #8, !dbg !5267
  %3 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !5267
  %num20 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %3, i64 0, i32 0, i32 0, !dbg !5267
  store i32 %size_, i32* %num20, align 8, !dbg !5267
  ret void, !dbg !5267
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_replace(%struct.VEC_tree_base* %vec_, i32 %ix_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !5268 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5272, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5273, metadata !DIExpression()), !dbg !5276
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !5274, metadata !DIExpression()), !dbg !5276
  %idxprom = zext i32 %ix_ to i64, !dbg !5277
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5277
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5277
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !5275, metadata !DIExpression()), !dbg !5276
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !5277
  ret %union.tree_node* %0, !dbg !5277
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_uchar_gc_safe_grow(%struct.VEC_uchar_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !5278 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_gc** %vec_, metadata !5283, metadata !DIExpression()), !dbg !5285
  call void @llvm.dbg.value(metadata i32 %size_, metadata !5284, metadata !DIExpression()), !dbg !5285
  %cmp = icmp sgt i32 %size_, -1, !dbg !5286
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5286

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %vec_, align 8, !dbg !5286
  %tobool = icmp eq %struct.VEC_uchar_gc* %0, null, !dbg !5286
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5286

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %0, i64 0, i32 0, !dbg !5286
  br label %cond.end, !dbg !5286

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_uchar_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !5286
  %call = tail call fastcc i32 @VEC_uchar_base_length(%struct.VEC_uchar_base* %cond) #8, !dbg !5286
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %vec_, align 8, !dbg !5286
  %tobool2 = icmp eq %struct.VEC_uchar_gc* %1, null, !dbg !5286
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !5286

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %1, i64 0, i32 0, i32 0, !dbg !5286
  %2 = load i32, i32* %num, align 4, !dbg !5286
  br label %cond.end11, !dbg !5286

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !5286
  %sub = sub nsw i32 %size_, %cond12, !dbg !5286
  %call13 = tail call fastcc i32 @VEC_uchar_gc_reserve_exact(%struct.VEC_uchar_gc** %vec_, i32 %sub) #8, !dbg !5286
  %3 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %vec_, align 8, !dbg !5286
  %num20 = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %3, i64 0, i32 0, i32 0, !dbg !5286
  store i32 %size_, i32* %num20, align 4, !dbg !5286
  ret void, !dbg !5286
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @VEC_uchar_base_replace(%struct.VEC_uchar_base* %vec_, i32 %ix_, i8 zeroext %obj_) unnamed_addr #0 !dbg !5287 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_base* %vec_, metadata !5292, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5293, metadata !DIExpression()), !dbg !5296
  call void @llvm.dbg.value(metadata i8 %obj_, metadata !5294, metadata !DIExpression()), !dbg !5296
  %idxprom = zext i32 %ix_ to i64, !dbg !5297
  %arrayidx = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5297
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5297
  call void @llvm.dbg.value(metadata i8 %0, metadata !5295, metadata !DIExpression()), !dbg !5296
  store i8 %obj_, i8* %arrayidx, align 1, !dbg !5297
  ret i8 %0, !dbg !5297
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fixup_eh_region_pointers(%struct.function* %fn, i64 %root_region) unnamed_addr #5 !dbg !5298 {
entry:
  %r = alloca %struct.eh_region_d*, align 8
  %lp = alloca %struct.eh_landing_pad_d*, align 8
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !5302, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata i64 %root_region, metadata !5303, metadata !DIExpression()), !dbg !5309
  %eh = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 0, !dbg !5310
  %0 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5310
  %region_array = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 1, !dbg !5311
  %1 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %region_array, align 8, !dbg !5311
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_gc* %1, metadata !5305, metadata !DIExpression()), !dbg !5309
  %lp_array2 = getelementptr inbounds %struct.eh_status, %struct.eh_status* %0, i64 0, i32 2, !dbg !5312
  %2 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %lp_array2, align 8, !dbg !5312
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_gc* %2, metadata !5306, metadata !DIExpression()), !dbg !5309
  %3 = bitcast %struct.eh_region_d** %r to i8*, !dbg !5313
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #6, !dbg !5313
  %4 = bitcast %struct.eh_landing_pad_d** %lp to i8*, !dbg !5314
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #6, !dbg !5314
  %tobool = icmp ne %struct.VEC_eh_region_gc* %1, null, !dbg !5315
  %tobool3 = icmp ne %struct.VEC_eh_landing_pad_gc* %2, null, !dbg !5315
  %or.cond = and i1 %tobool, %tobool3, !dbg !5315
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !5315

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 533, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5315
  br label %cond.end, !dbg !5315

cond.end:                                         ; preds = %entry, %cond.true
  %cmp = icmp sgt i64 %root_region, -1, !dbg !5316
  br i1 %cmp, label %cond.end6, label %cond.true4, !dbg !5316

cond.true4:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 535, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5316
  br label %cond.end6, !dbg !5316

cond.end6:                                        ; preds = %cond.end, %cond.true4
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %1, i64 0, i32 0, !dbg !5317
  %conv = trunc i64 %root_region to i32, !dbg !5317
  %call = tail call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %base, i32 %conv) #8, !dbg !5317
  %5 = load %struct.eh_status*, %struct.eh_status** %eh, align 8, !dbg !5318
  %region_tree = getelementptr inbounds %struct.eh_status, %struct.eh_status* %5, i64 0, i32 0, !dbg !5319
  store %struct.eh_region_d* %call, %struct.eh_region_d** %region_tree, align 8, !dbg !5320
  call void @llvm.dbg.value(metadata i32 0, metadata !5304, metadata !DIExpression()), !dbg !5309
  %6 = bitcast %struct.eh_region_d** %r to i64**, !dbg !5321
  %base59 = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %2, i64 0, i32 0, !dbg !5321
  br label %for.cond, !dbg !5325

for.cond:                                         ; preds = %for.inc, %cond.end6
  %i.0 = phi i32 [ 0, %cond.end6 ], [ %inc, %for.inc ], !dbg !5326
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5304, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %r, metadata !5307, metadata !DIExpression(DW_OP_deref)), !dbg !5309
  %call20 = call fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %base, i32 %i.0, %struct.eh_region_d** nonnull %r) #8, !dbg !5327
  %tobool21 = icmp eq i32 %call20, 0, !dbg !5328
  br i1 %tobool21, label %for.cond66.preheader, label %for.body, !dbg !5328

for.cond66.preheader:                             ; preds = %for.cond
  %7 = bitcast %struct.eh_landing_pad_d** %lp to i64**, !dbg !5329
  br label %for.cond66, !dbg !5333

for.body:                                         ; preds = %for.cond
  %8 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5334
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %8, metadata !5307, metadata !DIExpression()), !dbg !5309
  %cmp22 = icmp eq %struct.eh_region_d* %8, null, !dbg !5336
  br i1 %cmp22, label %for.inc, label %if.end, !dbg !5337

if.end:                                           ; preds = %for.body
  %9 = bitcast %struct.eh_region_d* %8 to i64*, !dbg !5337
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %8, metadata !5307, metadata !DIExpression()), !dbg !5309
  %index = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %8, i64 0, i32 3, !dbg !5338
  %10 = load i32, i32* %index, align 8, !dbg !5338
  %cmp24 = icmp eq i32 %i.0, %10, !dbg !5338
  br i1 %cmp24, label %cond.end28, label %cond.true26, !dbg !5338

cond.true26:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 551, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5338
  %.pre = load i64*, i64** %6, align 8, !dbg !5339
  br label %cond.end28, !dbg !5338

cond.end28:                                       ; preds = %if.end, %cond.true26
  %11 = phi i64* [ %9, %if.end ], [ %.pre, %cond.true26 ], !dbg !5339
  %12 = load i64, i64* %11, align 8, !dbg !5339
  %conv36 = trunc i64 %12 to i32, !dbg !5339
  %call37 = call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %base, i32 %conv36) #8, !dbg !5339
  %13 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5339
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %13, metadata !5307, metadata !DIExpression()), !dbg !5309
  %outer38 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %13, i64 0, i32 0, !dbg !5339
  store %struct.eh_region_d* %call37, %struct.eh_region_d** %outer38, align 8, !dbg !5339
  %14 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5340
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %14, metadata !5307, metadata !DIExpression()), !dbg !5309
  %inner = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %14, i64 0, i32 1, !dbg !5340
  %15 = bitcast %struct.eh_region_d** %inner to i64*, !dbg !5340
  %16 = load i64, i64* %15, align 8, !dbg !5340
  %conv45 = trunc i64 %16 to i32, !dbg !5340
  %call46 = call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %base, i32 %conv45) #8, !dbg !5340
  %17 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5340
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %17, metadata !5307, metadata !DIExpression()), !dbg !5309
  %inner47 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %17, i64 0, i32 1, !dbg !5340
  store %struct.eh_region_d* %call46, %struct.eh_region_d** %inner47, align 8, !dbg !5340
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %17, metadata !5307, metadata !DIExpression()), !dbg !5309
  %next_peer = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %17, i64 0, i32 2, !dbg !5341
  %18 = bitcast %struct.eh_region_d** %next_peer to i64*, !dbg !5341
  %19 = load i64, i64* %18, align 8, !dbg !5341
  %conv54 = trunc i64 %19 to i32, !dbg !5341
  %call55 = call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %base, i32 %conv54) #8, !dbg !5341
  %20 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5341
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %20, metadata !5307, metadata !DIExpression()), !dbg !5309
  %next_peer56 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %20, i64 0, i32 2, !dbg !5341
  store %struct.eh_region_d* %call55, %struct.eh_region_d** %next_peer56, align 8, !dbg !5341
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %20, metadata !5307, metadata !DIExpression()), !dbg !5309
  %landing_pads = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %20, i64 0, i32 6, !dbg !5342
  %21 = bitcast %struct.eh_landing_pad_d** %landing_pads to i64*, !dbg !5342
  %22 = load i64, i64* %21, align 8, !dbg !5342
  %conv63 = trunc i64 %22 to i32, !dbg !5342
  %call64 = call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %base59, i32 %conv63) #8, !dbg !5342
  %23 = load %struct.eh_region_d*, %struct.eh_region_d** %r, align 8, !dbg !5342
  call void @llvm.dbg.value(metadata %struct.eh_region_d* %23, metadata !5307, metadata !DIExpression()), !dbg !5309
  %landing_pads65 = getelementptr inbounds %struct.eh_region_d, %struct.eh_region_d* %23, i64 0, i32 6, !dbg !5342
  store %struct.eh_landing_pad_d* %call64, %struct.eh_landing_pad_d** %landing_pads65, align 8, !dbg !5342
  br label %for.inc, !dbg !5343

for.inc:                                          ; preds = %for.body, %cond.end28
  %inc = add i32 %i.0, 1, !dbg !5344
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5304, metadata !DIExpression()), !dbg !5309
  br label %for.cond, !dbg !5345, !llvm.loop !5346

for.cond66:                                       ; preds = %for.cond66.preheader, %for.inc105
  %i.1 = phi i32 [ %inc106, %for.inc105 ], [ 0, %for.cond66.preheader ], !dbg !5348
  call void @llvm.dbg.value(metadata i32 %i.1, metadata !5304, metadata !DIExpression()), !dbg !5309
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %lp, metadata !5308, metadata !DIExpression(DW_OP_deref)), !dbg !5309
  %call73 = call fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %base59, i32 %i.1, %struct.eh_landing_pad_d** nonnull %lp) #8, !dbg !5349
  %tobool74 = icmp eq i32 %call73, 0, !dbg !5333
  br i1 %tobool74, label %for.end107, label %for.body75, !dbg !5333

for.body75:                                       ; preds = %for.cond66
  %24 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5350
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %24, metadata !5308, metadata !DIExpression()), !dbg !5309
  %cmp76 = icmp eq %struct.eh_landing_pad_d* %24, null, !dbg !5352
  br i1 %cmp76, label %for.inc105, label %if.end79, !dbg !5353

if.end79:                                         ; preds = %for.body75
  %25 = bitcast %struct.eh_landing_pad_d* %24 to i64*, !dbg !5353
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %24, metadata !5308, metadata !DIExpression()), !dbg !5309
  %index80 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %24, i64 0, i32 4, !dbg !5354
  %26 = load i32, i32* %index80, align 8, !dbg !5354
  %cmp81 = icmp eq i32 %i.1, %26, !dbg !5354
  br i1 %cmp81, label %cond.end85, label %cond.true83, !dbg !5354

cond.true83:                                      ; preds = %if.end79
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 566, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5354
  %.pre1 = load i64*, i64** %7, align 8, !dbg !5355
  br label %cond.end85, !dbg !5354

cond.end85:                                       ; preds = %if.end79, %cond.true83
  %27 = phi i64* [ %25, %if.end79 ], [ %.pre1, %cond.true83 ], !dbg !5355
  %28 = load i64, i64* %27, align 8, !dbg !5355
  %conv93 = trunc i64 %28 to i32, !dbg !5355
  %call94 = call fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %base59, i32 %conv93) #8, !dbg !5355
  %29 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5355
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %29, metadata !5308, metadata !DIExpression()), !dbg !5309
  %next_lp95 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %29, i64 0, i32 0, !dbg !5355
  store %struct.eh_landing_pad_d* %call94, %struct.eh_landing_pad_d** %next_lp95, align 8, !dbg !5355
  %30 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5356
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %30, metadata !5308, metadata !DIExpression()), !dbg !5309
  %region = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %30, i64 0, i32 1, !dbg !5356
  %31 = bitcast %struct.eh_region_d** %region to i64*, !dbg !5356
  %32 = load i64, i64* %31, align 8, !dbg !5356
  %conv102 = trunc i64 %32 to i32, !dbg !5356
  %call103 = call fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %base, i32 %conv102) #8, !dbg !5356
  %33 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %lp, align 8, !dbg !5356
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d* %33, metadata !5308, metadata !DIExpression()), !dbg !5309
  %region104 = getelementptr inbounds %struct.eh_landing_pad_d, %struct.eh_landing_pad_d* %33, i64 0, i32 1, !dbg !5356
  store %struct.eh_region_d* %call103, %struct.eh_region_d** %region104, align 8, !dbg !5356
  br label %for.inc105, !dbg !5357

for.inc105:                                       ; preds = %for.body75, %cond.end85
  %inc106 = add i32 %i.1, 1, !dbg !5358
  call void @llvm.dbg.value(metadata i32 %inc106, metadata !5304, metadata !DIExpression()), !dbg !5309
  br label %for.cond66, !dbg !5359, !llvm.loop !5360

for.end107:                                       ; preds = %for.cond66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #6, !dbg !5362
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #6, !dbg !5362
  ret void, !dbg !5362
}

declare dso_local void @init_eh() local_unnamed_addr #2

declare dso_local i32 @dwarf2out_do_frame() local_unnamed_addr #2

declare dso_local void @dwarf2out_frame_init() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_length(%struct.VEC_eh_region_base* %vec_) unnamed_addr #0 !dbg !5363 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !5369, metadata !DIExpression()), !dbg !5370
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !5371
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5371

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !5371
  %0 = load i32, i32* %num, align 8, !dbg !5371
  br label %cond.end, !dbg !5371

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5371
  ret i32 %cond, !dbg !5371
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_gc_reserve_exact(%struct.VEC_eh_region_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5372 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_gc** %vec_, metadata !5376, metadata !DIExpression()), !dbg !5379
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5377, metadata !DIExpression()), !dbg !5379
  %0 = load %struct.VEC_eh_region_gc*, %struct.VEC_eh_region_gc** %vec_, align 8, !dbg !5380
  %tobool = icmp eq %struct.VEC_eh_region_gc* %0, null, !dbg !5380
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5380

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_region_gc, %struct.VEC_eh_region_gc* %0, i64 0, i32 0, !dbg !5380
  br label %cond.end, !dbg !5380

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_region_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5380
  %call = tail call fastcc i32 @VEC_eh_region_base_space(%struct.VEC_eh_region_base* %cond, i32 %alloc_) #8, !dbg !5380
  %tobool1 = icmp eq i32 %call, 0, !dbg !5380
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5380
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5378, metadata !DIExpression()), !dbg !5379
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5380

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_eh_region_gc** %vec_ to i8**, !dbg !5381
  %2 = load i8*, i8** %1, align 8, !dbg !5381
  %call3 = tail call i8* @vec_gc_p_reserve_exact(i8* %2, i32 %alloc_) #7, !dbg !5381
  store i8* %call3, i8** %1, align 8, !dbg !5381
  br label %if.end, !dbg !5381

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5380
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_space(%struct.VEC_eh_region_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5383 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !5387, metadata !DIExpression()), !dbg !5389
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5388, metadata !DIExpression()), !dbg !5389
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !5390
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5390

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 1, !dbg !5390
  %0 = load i32, i32* %alloc, align 4, !dbg !5390
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !5390
  %1 = load i32, i32* %num, align 8, !dbg !5390
  %sub = sub i32 %0, %1, !dbg !5390
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !5390
  br label %cond.end, !dbg !5390

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !5390
  br label %cond.end, !dbg !5390

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !5390
  ret i32 %cond, !dbg !5390
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.eh_catch_d* @lto_input_eh_catch_list(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.eh_catch_d** %last_p) unnamed_addr #5 !dbg !5391 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !5397, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !5398, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.eh_catch_d** %last_p, metadata !5399, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* null, metadata !5400, metadata !DIExpression()), !dbg !5405
  store %struct.eh_catch_d* null, %struct.eh_catch_d** %last_p, align 8, !dbg !5406
  %call = tail call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !5407
  call void @llvm.dbg.value(metadata i32 %call, metadata !5401, metadata !DIExpression()), !dbg !5405
  %0 = bitcast %struct.eh_catch_d** %last_p to i64*, !dbg !5408
  %1 = bitcast %struct.eh_catch_d** %last_p to i8**, !dbg !5408
  br label %while.cond, !dbg !5409

while.cond:                                       ; preds = %if.end, %entry
  %first.0 = phi %struct.eh_catch_d* [ null, %entry ], [ %spec.select, %if.end ], !dbg !5405
  %tag.0 = phi i32 [ %call, %entry ], [ %call11, %if.end ], !dbg !5405
  call void @llvm.dbg.value(metadata i32 %tag.0, metadata !5401, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %first.0, metadata !5400, metadata !DIExpression()), !dbg !5405
  %tobool = icmp eq i32 %tag.0, 0, !dbg !5409
  br i1 %tobool, label %while.end, label %while.body, !dbg !5409

while.body:                                       ; preds = %while.cond
  tail call fastcc void @lto_tag_check_range(i32 %tag.0, i32 235, i32 235) #8, !dbg !5410
  %call1 = tail call i8* @ggc_alloc_cleared_stat(i64 40) #7, !dbg !5411
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %7, metadata !5404, metadata !DIExpression()), !dbg !5408
  %call2 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5412
  %type_list = getelementptr inbounds i8, i8* %call1, i64 16, !dbg !5413
  %2 = bitcast i8* %type_list to %union.tree_node**, !dbg !5413
  store %union.tree_node* %call2, %union.tree_node** %2, align 8, !dbg !5414
  %call3 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5415
  %filter_list = getelementptr inbounds i8, i8* %call1, i64 24, !dbg !5416
  %3 = bitcast i8* %filter_list to %union.tree_node**, !dbg !5416
  store %union.tree_node* %call3, %union.tree_node** %3, align 8, !dbg !5417
  %call4 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5418
  %label = getelementptr inbounds i8, i8* %call1, i64 32, !dbg !5419
  %4 = bitcast i8* %label to %union.tree_node**, !dbg !5419
  store %union.tree_node* %call4, %union.tree_node** %4, align 8, !dbg !5420
  br label %for.cond, !dbg !5421

for.cond:                                         ; preds = %for.body, %while.body
  %list.0.in = phi %union.tree_node** [ %3, %while.body ], [ %chain, %for.body ]
  %list.0 = load %union.tree_node*, %union.tree_node** %list.0.in, align 8, !dbg !5423
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !5402, metadata !DIExpression()), !dbg !5408
  %tobool6 = icmp eq %union.tree_node* %list.0, null, !dbg !5424
  br i1 %tobool6, label %for.end, label %for.body, !dbg !5424

for.body:                                         ; preds = %for.cond
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %list.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5425
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !5425
  tail call void @add_type_for_runtime(%union.tree_node* %6) #7, !dbg !5427
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %list.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5428
  br label %for.cond, !dbg !5429, !llvm.loop !5430

for.end:                                          ; preds = %for.cond
  %7 = bitcast i8* %call1 to %struct.eh_catch_d*, !dbg !5411
  %8 = load %struct.eh_catch_d*, %struct.eh_catch_d** %last_p, align 8, !dbg !5432
  %tobool8 = icmp eq %struct.eh_catch_d* %8, null, !dbg !5432
  %9 = ptrtoint %struct.eh_catch_d* %8 to i64, !dbg !5434
  br i1 %tobool8, label %if.end, label %if.then, !dbg !5434

if.then:                                          ; preds = %for.end
  %10 = bitcast %struct.eh_catch_d* %8 to i8**, !dbg !5434
  store i8* %call1, i8** %10, align 8, !dbg !5435
  %.pre = load i64, i64* %0, align 8, !dbg !5436
  br label %if.end, !dbg !5437

if.end:                                           ; preds = %for.end, %if.then
  %11 = phi i64 [ %9, %for.end ], [ %.pre, %if.then ], !dbg !5436
  %prev_catch = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !5438
  %12 = bitcast i8* %prev_catch to i64*, !dbg !5439
  store i64 %11, i64* %12, align 8, !dbg !5439
  store i8* %call1, i8** %1, align 8, !dbg !5440
  %cmp = icmp eq %struct.eh_catch_d* %first.0, null, !dbg !5441
  %spec.select = select i1 %cmp, %struct.eh_catch_d* %7, %struct.eh_catch_d* %first.0, !dbg !5443
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %spec.select, metadata !5400, metadata !DIExpression()), !dbg !5405
  %call11 = tail call fastcc i32 @input_record_start(%struct.lto_input_block* %ib) #8, !dbg !5444
  call void @llvm.dbg.value(metadata i32 %call11, metadata !5401, metadata !DIExpression()), !dbg !5405
  br label %while.cond, !dbg !5409, !llvm.loop !5445

while.end:                                        ; preds = %while.cond
  %first.0.lcssa = phi %struct.eh_catch_d* [ %first.0, %while.cond ], !dbg !5405
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %first.0.lcssa, metadata !5400, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %first.0.lcssa, metadata !5400, metadata !DIExpression()), !dbg !5405
  call void @llvm.dbg.value(metadata %struct.eh_catch_d* %first.0.lcssa, metadata !5400, metadata !DIExpression()), !dbg !5405
  ret %struct.eh_catch_d* %first.0.lcssa, !dbg !5447
}

declare dso_local void @add_type_for_runtime(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @lto_input_location(%struct.lto_input_block* %ib, %struct.data_in* %data_in) unnamed_addr #5 !dbg !5448 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !5452, metadata !DIExpression()), !dbg !5462
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !5453, metadata !DIExpression()), !dbg !5462
  %call = tail call fastcc i8* @input_string(%struct.data_in* %data_in, %struct.lto_input_block* %ib) #8, !dbg !5463
  %cmp = icmp eq i8* %call, null, !dbg !5464
  br i1 %cmp, label %cleanup, label %if.end, !dbg !5466

if.end:                                           ; preds = %entry
  %call3 = tail call fastcc i8* @canon_file_name(i8* nonnull %call) #8, !dbg !5467
  %call5 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5468
  %conv = trunc i64 %call5 to i32, !dbg !5468
  %call6 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5469
  %conv7 = trunc i64 %call6 to i32, !dbg !5469
  %call8 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5470
  %conv9 = trunc i64 %call8 to i32, !dbg !5470
  %current_file = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 6, !dbg !5471
  %0 = load i8*, i8** %current_file, align 8, !dbg !5471
  %cmp11 = icmp eq i8* %0, %call3, !dbg !5473
  %1 = ptrtoint i8* %call3 to i64, !dbg !5474
  br i1 %cmp11, label %if.else, label %if.then13, !dbg !5474

if.then13:                                        ; preds = %if.end
  %tobool = icmp eq i8* %0, null, !dbg !5475
  br i1 %tobool, label %if.end17, label %if.then15, !dbg !5478

if.then15:                                        ; preds = %if.then13
  %2 = load %struct.line_maps*, %struct.line_maps** @line_table, align 8, !dbg !5479
  %call16 = tail call %struct.line_map* @linemap_add(%struct.line_maps* %2, i32 1, i32 0, i8* null, i32 0) #7, !dbg !5480
  br label %if.end17, !dbg !5480

if.end17:                                         ; preds = %if.then13, %if.then15
  %3 = load %struct.line_maps*, %struct.line_maps** @line_table, align 8, !dbg !5481
  %conv19 = and i32 %conv9, 255, !dbg !5482
  %call22 = tail call %struct.line_map* @linemap_add(%struct.line_maps* %3, i32 0, i32 %conv19, i8* %call3, i32 %conv) #7, !dbg !5483
  br label %if.end31, !dbg !5484

if.else:                                          ; preds = %if.end
  %current_line = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 7, !dbg !5485
  %4 = load i32, i32* %current_line, align 8, !dbg !5485
  %cmp24 = icmp eq i32 %4, %conv, !dbg !5487
  br i1 %cmp24, label %if.end31, label %if.then26, !dbg !5488

if.then26:                                        ; preds = %if.else
  %5 = load %struct.line_maps*, %struct.line_maps** @line_table, align 8, !dbg !5489
  %call29 = tail call i32 @linemap_line_start(%struct.line_maps* %5, i32 %conv, i32 %conv7) #7, !dbg !5490
  br label %if.end31, !dbg !5490

if.end31:                                         ; preds = %if.else, %if.then26, %if.end17
  %6 = bitcast i8** %current_file to i64*, !dbg !5491
  store i64 %1, i64* %6, align 8, !dbg !5491
  %current_line35 = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 7, !dbg !5492
  store i32 %conv, i32* %current_line35, align 8, !dbg !5493
  %current_col = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 8, !dbg !5494
  store i32 %conv7, i32* %current_col, align 4, !dbg !5495
  %7 = load %struct.line_maps*, %struct.line_maps** @line_table, align 8, !dbg !5496
  %call38 = tail call i32 @linemap_position_for_column(%struct.line_maps* %7, i32 %conv7) #7, !dbg !5497
  br label %cleanup, !dbg !5498

cleanup:                                          ; preds = %entry, %if.end31
  %retval.0 = phi i32 [ %call38, %if.end31 ], [ 0, %entry ], !dbg !5462
  ret i32 %retval.0, !dbg !5499
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @input_string(%struct.data_in* %data_in, %struct.lto_input_block* %ib) unnamed_addr #5 !dbg !5500 {
entry:
  %len = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !5504, metadata !DIExpression()), !dbg !5509
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !5505, metadata !DIExpression()), !dbg !5509
  %0 = bitcast i32* %len to i8*, !dbg !5510
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #6, !dbg !5510
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !5511
  %conv = trunc i64 %call to i32, !dbg !5511
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5508, metadata !DIExpression()), !dbg !5509
  %tobool = icmp eq i32 %conv, 0, !dbg !5512
  br i1 %tobool, label %if.end, label %cleanup, !dbg !5514

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %len, metadata !5506, metadata !DIExpression(DW_OP_deref)), !dbg !5509
  %call1 = call fastcc i8* @input_string_internal(%struct.data_in* %data_in, %struct.lto_input_block* %ib, i32* nonnull %len) #8, !dbg !5515
  call void @llvm.dbg.value(metadata i8* %call1, metadata !5507, metadata !DIExpression()), !dbg !5509
  %1 = load i32, i32* %len, align 4, !dbg !5516
  call void @llvm.dbg.value(metadata i32 %1, metadata !5506, metadata !DIExpression()), !dbg !5509
  %sub = add i32 %1, -1, !dbg !5518
  %idxprom = zext i32 %sub to i64, !dbg !5519
  %arrayidx = getelementptr inbounds i8, i8* %call1, i64 %idxprom, !dbg !5519
  %2 = load i8, i8* %arrayidx, align 1, !dbg !5519
  %cmp = icmp eq i8 %2, 0, !dbg !5520
  br i1 %cmp, label %cleanup, label %if.then4, !dbg !5521

if.then4:                                         ; preds = %if.end
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0)) #7, !dbg !5522
  br label %cleanup, !dbg !5522

cleanup:                                          ; preds = %if.end, %entry, %if.then4
  %retval.0 = phi i8* [ null, %entry ], [ %call1, %if.then4 ], [ %call1, %if.end ], !dbg !5509
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #6, !dbg !5523
  ret i8* %retval.0, !dbg !5523
}

; Function Attrs: nounwind uwtable
define internal fastcc i8* @canon_file_name(i8* %string) unnamed_addr #5 !dbg !5524 {
entry:
  %s_slot = alloca %struct.string_slot, align 8
  call void @llvm.dbg.value(metadata i8* %string, metadata !5528, metadata !DIExpression()), !dbg !5538
  %0 = bitcast %struct.string_slot* %s_slot to i8*, !dbg !5539
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5539
  %s = getelementptr inbounds %struct.string_slot, %struct.string_slot* %s_slot, i64 0, i32 0, !dbg !5540
  store i8* %string, i8** %s, align 8, !dbg !5541
  %1 = load %struct.htab*, %struct.htab** @file_name_hash_table, align 8, !dbg !5542
  %call = call i8** @htab_find_slot(%struct.htab* %1, i8* nonnull %0, i32 1) #7, !dbg !5543
  call void @llvm.dbg.value(metadata i8** %call, metadata !5529, metadata !DIExpression()), !dbg !5538
  %2 = load i8*, i8** %call, align 8, !dbg !5544
  %cmp = icmp eq i8* %2, null, !dbg !5545
  br i1 %cmp, label %if.then, label %if.else, !dbg !5546

if.then:                                          ; preds = %entry
  %call1 = call i64 @strlen(i8* %string) #7, !dbg !5547
  call void @llvm.dbg.value(metadata i64 %call1, metadata !5531, metadata !DIExpression()), !dbg !5548
  %add = add i64 %call1, 1, !dbg !5549
  %call2 = call i8* @xmalloc(i64 %add) #7, !dbg !5550
  call void @llvm.dbg.value(metadata i8* %call2, metadata !5534, metadata !DIExpression()), !dbg !5548
  %call3 = call i8* @xcalloc(i64 1, i64 16) #7, !dbg !5551
  call void @llvm.dbg.value(metadata i8* %call3, metadata !5535, metadata !DIExpression()), !dbg !5548
  %call4 = call i8* @strcpy(i8* %call2, i8* %string) #7, !dbg !5552
  %s5 = bitcast i8* %call3 to i8**, !dbg !5553
  store i8* %call2, i8** %s5, align 8, !dbg !5554
  store i8* %call3, i8** %call, align 8, !dbg !5555
  br label %cleanup

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %2, metadata !5536, metadata !DIExpression()), !dbg !5556
  %s6 = bitcast i8* %2 to i8**, !dbg !5557
  %3 = load i8*, i8** %s6, align 8, !dbg !5557
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then
  %retval.0 = phi i8* [ %call2, %if.then ], [ %3, %if.else ], !dbg !5558
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5559
  ret i8* %retval.0, !dbg !5559
}

declare dso_local %struct.line_map* @linemap_add(%struct.line_maps*, i32, i32, i8*, i32) local_unnamed_addr #2

declare dso_local i32 @linemap_line_start(%struct.line_maps*, i32, i32) local_unnamed_addr #2

declare dso_local i32 @linemap_position_for_column(%struct.line_maps*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @input_string_internal(%struct.data_in* %data_in, %struct.lto_input_block* %ib, i32* %rlen) unnamed_addr #5 !dbg !5560 {
entry:
  %str_tab = alloca %struct.lto_input_block, align 8
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !5565, metadata !DIExpression()), !dbg !5572
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !5566, metadata !DIExpression()), !dbg !5572
  call void @llvm.dbg.value(metadata i32* %rlen, metadata !5567, metadata !DIExpression()), !dbg !5572
  %0 = bitcast %struct.lto_input_block* %str_tab to i8*, !dbg !5573
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5573
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !5574
  %conv = trunc i64 %call to i32, !dbg !5574
  call void @llvm.dbg.value(metadata i32 %conv, metadata !5570, metadata !DIExpression()), !dbg !5572
  %strings = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 2, !dbg !5575
  %1 = bitcast i8** %strings to i64*, !dbg !5575
  %2 = load i64, i64* %1, align 8, !dbg !5575
  %3 = bitcast %struct.lto_input_block* %str_tab to i64*, !dbg !5575
  store i64 %2, i64* %3, align 8, !dbg !5575
  %p = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %str_tab, i64 0, i32 1, !dbg !5575
  store i32 %conv, i32* %p, align 8, !dbg !5575
  %strings_len = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 3, !dbg !5575
  %4 = load i32, i32* %strings_len, align 8, !dbg !5575
  %len1 = getelementptr inbounds %struct.lto_input_block, %struct.lto_input_block* %str_tab, i64 0, i32 2, !dbg !5575
  store i32 %4, i32* %len1, align 4, !dbg !5575
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %str_tab, metadata !5568, metadata !DIExpression(DW_OP_deref)), !dbg !5572
  %call2 = call i64 @lto_input_uleb128(%struct.lto_input_block* nonnull %str_tab) #7, !dbg !5577
  %conv3 = trunc i64 %call2 to i32, !dbg !5577
  call void @llvm.dbg.value(metadata i32 %conv3, metadata !5569, metadata !DIExpression()), !dbg !5572
  store i32 %conv3, i32* %rlen, align 4, !dbg !5578
  %5 = load i32, i32* %p, align 8, !dbg !5579
  %add = add i32 %5, %conv3, !dbg !5581
  %6 = load i32, i32* %strings_len, align 8, !dbg !5582
  %cmp = icmp ugt i32 %add, %6, !dbg !5583
  br i1 %cmp, label %if.then, label %if.end, !dbg !5584

if.then:                                          ; preds = %entry
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.6, i64 0, i64 0)) #7, !dbg !5585
  %.pre = load i32, i32* %p, align 8, !dbg !5586
  br label %if.end, !dbg !5585

if.end:                                           ; preds = %if.then, %entry
  %7 = phi i32 [ %.pre, %if.then ], [ %5, %entry ], !dbg !5586
  %8 = load i8*, i8** %strings, align 8, !dbg !5587
  %idx.ext = zext i32 %7 to i64, !dbg !5588
  %add.ptr = getelementptr inbounds i8, i8* %8, i64 %idx.ext, !dbg !5588
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !5571, metadata !DIExpression()), !dbg !5572
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5589
  ret i8* %add.ptr, !dbg !5590
}

declare dso_local i8** @htab_find_slot(%struct.htab*, i8*, i32) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

declare dso_local i8* @strcpy(i8*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_length(%struct.VEC_eh_landing_pad_base* %vec_) unnamed_addr #0 !dbg !5591 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !5597, metadata !DIExpression()), !dbg !5598
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !5599
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5599

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !5599
  %0 = load i32, i32* %num, align 8, !dbg !5599
  br label %cond.end, !dbg !5599

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5599
  ret i32 %cond, !dbg !5599
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_gc_reserve_exact(%struct.VEC_eh_landing_pad_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5600 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_gc** %vec_, metadata !5604, metadata !DIExpression()), !dbg !5607
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5605, metadata !DIExpression()), !dbg !5607
  %0 = load %struct.VEC_eh_landing_pad_gc*, %struct.VEC_eh_landing_pad_gc** %vec_, align 8, !dbg !5608
  %tobool = icmp eq %struct.VEC_eh_landing_pad_gc* %0, null, !dbg !5608
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5608

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_eh_landing_pad_gc, %struct.VEC_eh_landing_pad_gc* %0, i64 0, i32 0, !dbg !5608
  br label %cond.end, !dbg !5608

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_eh_landing_pad_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5608
  %call = tail call fastcc i32 @VEC_eh_landing_pad_base_space(%struct.VEC_eh_landing_pad_base* %cond, i32 %alloc_) #8, !dbg !5608
  %tobool1 = icmp eq i32 %call, 0, !dbg !5608
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5608
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5606, metadata !DIExpression()), !dbg !5607
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5608

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_eh_landing_pad_gc** %vec_ to i8**, !dbg !5609
  %2 = load i8*, i8** %1, align 8, !dbg !5609
  %call3 = tail call i8* @vec_gc_p_reserve_exact(i8* %2, i32 %alloc_) #7, !dbg !5609
  store i8* %call3, i8** %1, align 8, !dbg !5609
  br label %if.end, !dbg !5609

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5608
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_space(%struct.VEC_eh_landing_pad_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5611 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !5615, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5616, metadata !DIExpression()), !dbg !5617
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !5618
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5618

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 1, !dbg !5618
  %0 = load i32, i32* %alloc, align 4, !dbg !5618
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !5618
  %1 = load i32, i32* %num, align 8, !dbg !5618
  %sub = sub i32 %0, %1, !dbg !5618
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !5618
  br label %cond.end, !dbg !5618

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !5618
  br label %cond.end, !dbg !5618

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !5618
  ret i32 %cond, !dbg !5618
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_reserve_exact(%struct.VEC_tree_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5619 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !5623, metadata !DIExpression()), !dbg !5626
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5624, metadata !DIExpression()), !dbg !5626
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !5627
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !5627
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5627

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !5627
  br label %cond.end, !dbg !5627

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5627
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 %alloc_) #8, !dbg !5627
  %tobool1 = icmp eq i32 %call, 0, !dbg !5627
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5627
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5625, metadata !DIExpression()), !dbg !5626
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5627

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_gc** %vec_ to i8**, !dbg !5628
  %2 = load i8*, i8** %1, align 8, !dbg !5628
  %call3 = tail call i8* @vec_gc_p_reserve_exact(i8* %2, i32 %alloc_) #7, !dbg !5628
  store i8* %call3, i8** %1, align 8, !dbg !5628
  br label %if.end, !dbg !5628

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5627
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5630 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !5634, metadata !DIExpression()), !dbg !5636
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5635, metadata !DIExpression()), !dbg !5636
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !5637
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5637

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !5637
  %0 = load i32, i32* %alloc, align 4, !dbg !5637
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !5637
  %1 = load i32, i32* %num, align 8, !dbg !5637
  %sub = sub i32 %0, %1, !dbg !5637
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !5637
  br label %cond.end, !dbg !5637

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !5637
  br label %cond.end, !dbg !5637

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !5637
  ret i32 %cond, !dbg !5637
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_uchar_base_length(%struct.VEC_uchar_base* %vec_) unnamed_addr #0 !dbg !5638 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_base* %vec_, metadata !5644, metadata !DIExpression()), !dbg !5645
  %tobool = icmp eq %struct.VEC_uchar_base* %vec_, null, !dbg !5646
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5646

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 0, !dbg !5646
  %0 = load i32, i32* %num, align 4, !dbg !5646
  br label %cond.end, !dbg !5646

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !5646
  ret i32 %cond, !dbg !5646
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_uchar_gc_reserve_exact(%struct.VEC_uchar_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5647 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_gc** %vec_, metadata !5651, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5652, metadata !DIExpression()), !dbg !5654
  %0 = load %struct.VEC_uchar_gc*, %struct.VEC_uchar_gc** %vec_, align 8, !dbg !5655
  %tobool = icmp eq %struct.VEC_uchar_gc* %0, null, !dbg !5655
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5655

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_uchar_gc, %struct.VEC_uchar_gc* %0, i64 0, i32 0, !dbg !5655
  br label %cond.end, !dbg !5655

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_uchar_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5655
  %call = tail call fastcc i32 @VEC_uchar_base_space(%struct.VEC_uchar_base* %cond, i32 %alloc_) #8, !dbg !5655
  %tobool1 = icmp eq i32 %call, 0, !dbg !5655
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !5655
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !5653, metadata !DIExpression()), !dbg !5654
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5655

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_uchar_gc** %vec_ to i8**, !dbg !5656
  %2 = load i8*, i8** %1, align 8, !dbg !5656
  %call3 = tail call i8* @vec_gc_o_reserve_exact(i8* %2, i32 %alloc_, i64 8, i64 1) #7, !dbg !5656
  store i8* %call3, i8** %1, align 8, !dbg !5656
  br label %if.end, !dbg !5656

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !5655
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_uchar_base_space(%struct.VEC_uchar_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !5658 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_uchar_base* %vec_, metadata !5662, metadata !DIExpression()), !dbg !5664
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !5663, metadata !DIExpression()), !dbg !5664
  %tobool = icmp eq %struct.VEC_uchar_base* %vec_, null, !dbg !5665
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5665

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 1, !dbg !5665
  %0 = load i32, i32* %alloc, align 4, !dbg !5665
  %num = getelementptr inbounds %struct.VEC_uchar_base, %struct.VEC_uchar_base* %vec_, i64 0, i32 0, !dbg !5665
  %1 = load i32, i32* %num, align 4, !dbg !5665
  %sub = sub i32 %0, %1, !dbg !5665
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !5665
  br label %cond.end, !dbg !5665

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !5665
  br label %cond.end, !dbg !5665

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !5665
  ret i32 %cond, !dbg !5665
}

declare dso_local i8* @vec_gc_o_reserve_exact(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_region_d* @VEC_eh_region_base_index(%struct.VEC_eh_region_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5666 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !5670, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5671, metadata !DIExpression()), !dbg !5672
  br label %land.end, !dbg !5673

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5673
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5673
  %0 = load %struct.eh_region_d*, %struct.eh_region_d** %arrayidx, align 8, !dbg !5673
  ret %struct.eh_region_d* %0, !dbg !5673
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_region_base_iterate(%struct.VEC_eh_region_base* %vec_, i32 %ix_, %struct.eh_region_d** %ptr) unnamed_addr #0 !dbg !5674 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_region_base* %vec_, metadata !5679, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5680, metadata !DIExpression()), !dbg !5682
  call void @llvm.dbg.value(metadata %struct.eh_region_d** %ptr, metadata !5681, metadata !DIExpression()), !dbg !5682
  %tobool = icmp eq %struct.VEC_eh_region_base* %vec_, null, !dbg !5683
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5683

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 0, !dbg !5683
  %0 = load i32, i32* %num, align 8, !dbg !5683
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5683
  br i1 %cmp, label %if.then, label %if.else, !dbg !5685

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5686
  %arrayidx = getelementptr inbounds %struct.VEC_eh_region_base, %struct.VEC_eh_region_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5686
  %1 = load %struct.eh_region_d*, %struct.eh_region_d** %arrayidx, align 8, !dbg !5686
  br label %return, !dbg !5686

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5688

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.eh_region_d* [ null, %if.else ], [ %1, %if.then ], !dbg !5690
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5690
  store %struct.eh_region_d* %storemerge, %struct.eh_region_d** %ptr, align 8, !dbg !5690
  ret i32 %retval.0, !dbg !5685
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.eh_landing_pad_d* @VEC_eh_landing_pad_base_index(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !5691 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !5695, metadata !DIExpression()), !dbg !5697
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5696, metadata !DIExpression()), !dbg !5697
  br label %land.end, !dbg !5698

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !5698
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5698
  %0 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !5698
  ret %struct.eh_landing_pad_d* %0, !dbg !5698
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_eh_landing_pad_base_iterate(%struct.VEC_eh_landing_pad_base* %vec_, i32 %ix_, %struct.eh_landing_pad_d** %ptr) unnamed_addr #0 !dbg !5699 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_eh_landing_pad_base* %vec_, metadata !5704, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !5705, metadata !DIExpression()), !dbg !5707
  call void @llvm.dbg.value(metadata %struct.eh_landing_pad_d** %ptr, metadata !5706, metadata !DIExpression()), !dbg !5707
  %tobool = icmp eq %struct.VEC_eh_landing_pad_base* %vec_, null, !dbg !5708
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !5708

land.lhs.true:                                    ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 0, !dbg !5708
  %0 = load i32, i32* %num, align 8, !dbg !5708
  %cmp = icmp ugt i32 %0, %ix_, !dbg !5708
  br i1 %cmp, label %if.then, label %if.else, !dbg !5710

if.then:                                          ; preds = %land.lhs.true
  %idxprom = zext i32 %ix_ to i64, !dbg !5711
  %arrayidx = getelementptr inbounds %struct.VEC_eh_landing_pad_base, %struct.VEC_eh_landing_pad_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !5711
  %1 = load %struct.eh_landing_pad_d*, %struct.eh_landing_pad_d** %arrayidx, align 8, !dbg !5711
  br label %return, !dbg !5711

if.else:                                          ; preds = %entry, %land.lhs.true
  br label %return, !dbg !5713

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.eh_landing_pad_d* [ null, %if.else ], [ %1, %if.then ], !dbg !5715
  %retval.0 = phi i32 [ 0, %if.else ], [ 1, %if.then ], !dbg !5715
  store %struct.eh_landing_pad_d* %storemerge, %struct.eh_landing_pad_d** %ptr, align 8, !dbg !5715
  ret i32 %retval.0, !dbg !5710
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @input_gimple_stmt(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %struct.function* %fn, i32 %tag) unnamed_addr #5 !dbg !5716 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !5720, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !5721, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !5722, metadata !DIExpression()), !dbg !5753
  call void @llvm.dbg.value(metadata i32 %tag, metadata !5723, metadata !DIExpression()), !dbg !5753
  %call = tail call fastcc i32 @lto_tag_to_gimple_code(i32 %tag) #8, !dbg !5754
  call void @llvm.dbg.value(metadata i32 %call, metadata !5725, metadata !DIExpression()), !dbg !5753
  %call1 = tail call %struct.bitpack_d* @lto_input_bitpack(%struct.lto_input_block* %ib) #8, !dbg !5755
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call1, metadata !5728, metadata !DIExpression()), !dbg !5753
  %call2 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 32) #7, !dbg !5756
  call void @llvm.dbg.value(metadata i64 %call2, metadata !5726, metadata !DIExpression()), !dbg !5753
  %conv = trunc i64 %call2 to i32, !dbg !5757
  %call3 = tail call %union.gimple_statement_d* @gimple_alloc_stat(i32 %call, i32 %conv) #7, !dbg !5757
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call3, metadata !5724, metadata !DIExpression()), !dbg !5753
  %call4 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !5758
  %conv5 = trunc i64 %call4 to i32, !dbg !5758
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %call3, i64 0, i32 0, i32 0, i32 0, !dbg !5759
  %bf.load = load i32, i32* %0, align 8, !dbg !5760
  %bf.value = shl i32 %conv5, 8, !dbg !5760
  %bf.shl = and i32 %bf.value, 256, !dbg !5760
  %bf.clear = and i32 %bf.load, -257, !dbg !5760
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !5760
  store i32 %bf.set, i32* %0, align 8, !dbg !5760
  %call6 = tail call fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %call3) #8, !dbg !5761
  %tobool = icmp eq i8 %call6, 0, !dbg !5761
  br i1 %tobool, label %if.end, label %if.then, !dbg !5763

if.then:                                          ; preds = %entry
  %call7 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !5764
  %conv8 = trunc i64 %call7 to i32, !dbg !5764
  %bf.load10 = load i32, i32* %0, align 8, !dbg !5765
  %bf.value11 = shl i32 %conv8, 10, !dbg !5765
  %bf.shl12 = and i32 %bf.value11, 1024, !dbg !5765
  %bf.clear13 = and i32 %bf.load10, -1025, !dbg !5765
  %bf.set14 = or i32 %bf.clear13, %bf.shl12, !dbg !5765
  store i32 %bf.set14, i32* %0, align 8, !dbg !5765
  br label %if.end, !dbg !5766

if.end:                                           ; preds = %entry, %if.then
  %call15 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 1) #7, !dbg !5767
  %conv16 = trunc i64 %call15 to i32, !dbg !5767
  %bf.load18 = load i32, i32* %0, align 8, !dbg !5768
  %bf.value19 = shl i32 %conv16, 14, !dbg !5768
  %bf.shl20 = and i32 %bf.value19, 16384, !dbg !5768
  %bf.clear21 = and i32 %bf.load18, -16385, !dbg !5768
  %bf.set22 = or i32 %bf.clear21, %bf.shl20, !dbg !5768
  store i32 %bf.set22, i32* %0, align 8, !dbg !5768
  %call23 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call1, i32 16) #7, !dbg !5769
  %conv24 = trunc i64 %call23 to i32, !dbg !5769
  %bf.load26 = load i32, i32* %0, align 8, !dbg !5770
  %bf.shl28 = shl i32 %conv24, 16, !dbg !5770
  %bf.clear29 = and i32 %bf.load26, 65535, !dbg !5770
  %bf.set30 = or i32 %bf.clear29, %bf.shl28, !dbg !5770
  store i32 %bf.set30, i32* %0, align 8, !dbg !5770
  tail call void @bitpack_delete(%struct.bitpack_d* %call1) #7, !dbg !5771
  %call31 = tail call fastcc i32 @lto_input_location(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5772
  tail call fastcc void @gimple_set_location(%union.gimple_statement_d* %call3, i32 %call31) #8, !dbg !5773
  %call32 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5774
  tail call fastcc void @gimple_set_block(%union.gimple_statement_d* %call3, %union.tree_node* %call32) #8, !dbg !5775
  switch i32 %call, label %sw.default [
    i32 14, label %sw.bb
    i32 13, label %sw.bb35
    i32 15, label %sw.bb37
    i32 7, label %sw.bb40
    i32 6, label %sw.bb53
    i32 8, label %sw.bb53
    i32 9, label %sw.bb53
    i32 5, label %sw.bb53
    i32 4, label %sw.bb53
    i32 1, label %sw.bb53
    i32 3, label %sw.bb53
    i32 2, label %sw.bb53
    i32 18, label %if.end216
    i32 33, label %if.end216
  ], !dbg !5776

sw.bb:                                            ; preds = %if.end
  %call33 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5777
  %conv34 = trunc i64 %call33 to i32, !dbg !5777
  tail call fastcc void @gimple_resx_set_region(%union.gimple_statement_d* %call3, i32 %conv34) #8, !dbg !5778
  br label %sw.epilog, !dbg !5779

sw.bb35:                                          ; preds = %if.end
  %call36 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5780
  tail call fastcc void @gimple_eh_must_not_throw_set_fndecl(%union.gimple_statement_d* %call3, %union.tree_node* %call36) #8, !dbg !5781
  br label %sw.epilog, !dbg !5782

sw.bb37:                                          ; preds = %if.end
  %call38 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !5783
  %conv39 = trunc i64 %call38 to i32, !dbg !5783
  tail call fastcc void @gimple_eh_dispatch_set_region(%union.gimple_statement_d* %call3, i32 %conv39) #8, !dbg !5784
  br label %sw.epilog, !dbg !5785

sw.bb40:                                          ; preds = %if.end
  %call41 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !5786
  %conv42 = trunc i64 %call41 to i8, !dbg !5786
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %call3, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !5787
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !5787
  store i8 %conv42, i8* %1, align 8, !dbg !5788
  %call43 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !5789
  %conv44 = trunc i64 %call43 to i8, !dbg !5789
  %gimple_asm45 = bitcast %union.gimple_statement_d* %call3 to %struct.gimple_statement_asm*, !dbg !5790
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm45, i64 0, i32 3, !dbg !5791
  store i8 %conv44, i8* %no, align 1, !dbg !5792
  %call46 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !5793
  %conv47 = trunc i64 %call46 to i8, !dbg !5793
  %nc = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm45, i64 0, i32 4, !dbg !5794
  store i8 %conv47, i8* %nc, align 2, !dbg !5795
  %call49 = tail call fastcc %union.tree_node* @input_string_cst(%struct.data_in* %data_in, %struct.lto_input_block* %ib) #8, !dbg !5796
  call void @llvm.dbg.value(metadata %union.tree_node* %call49, metadata !5729, metadata !DIExpression()), !dbg !5797
  %str50 = getelementptr inbounds %union.tree_node, %union.tree_node* %call49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5798
  %string52 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %call3, i64 0, i32 0, i32 4, i64 0, i32 0, i32 2, !dbg !5799
  %2 = bitcast %union.anon* %string52 to i32**, !dbg !5800
  store i32* %str50, i32** %2, align 8, !dbg !5800
  br label %sw.bb53, !dbg !5801

sw.bb53:                                          ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %sw.bb40
  call void @llvm.dbg.value(metadata i64 0, metadata !5727, metadata !DIExpression()), !dbg !5753
  br label %for.cond, !dbg !5802

for.cond:                                         ; preds = %cleanup, %sw.bb53
  %i.0 = phi i64 [ 0, %sw.bb53 ], [ %inc, %cleanup ], !dbg !5803
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !5727, metadata !DIExpression()), !dbg !5753
  %exitcond = icmp eq i64 %i.0, %call2, !dbg !5804
  br i1 %exitcond, label %sw.epilog.loopexit, label %for.body, !dbg !5805

for.body:                                         ; preds = %for.cond
  %call55 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5806
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !5732, metadata !DIExpression()), !dbg !5807
  %conv56 = trunc i64 %i.0 to i32, !dbg !5808
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %call3, i32 %conv56, %union.tree_node* %call55) #8, !dbg !5809
  %tobool57 = icmp eq %union.tree_node* %call55, null, !dbg !5810
  br i1 %tobool57, label %cleanup, label %if.end59, !dbg !5812

if.end59:                                         ; preds = %for.body
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5813
  %bf.load60 = load i64, i64* %3, align 8, !dbg !5813
  %bf.cast3 = and i64 %bf.load60, 65535, !dbg !5815
  %cmp62 = icmp eq i64 %bf.cast3, 121, !dbg !5815
  br i1 %cmp62, label %land.lhs.true, label %if.end89, !dbg !5816

land.lhs.true:                                    ; preds = %if.end59
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5817
  %4 = bitcast %union.tree_node** %operands to i64**, !dbg !5817
  %5 = load i64*, i64** %4, align 8, !dbg !5817
  %bf.load65 = load i64, i64* %5, align 8, !dbg !5817
  %bf.cast676 = and i64 %bf.load65, 65535, !dbg !5818
  %cmp68 = icmp eq i64 %bf.cast676, 32, !dbg !5818
  br i1 %cmp68, label %land.lhs.true70, label %if.end89, !dbg !5819

land.lhs.true70:                                  ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5820
  %6 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !5820
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !5820
  %type72 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !5820
  %8 = load %union.tree_node*, %union.tree_node** %type72, align 8, !dbg !5820
  %.cast = bitcast %struct.tree_common* %7 to %union.tree_node*, !dbg !5821
  %call75 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %8, %union.tree_node* %.cast) #7, !dbg !5822
  %tobool76 = icmp eq i8 %call75, 0, !dbg !5822
  br i1 %tobool76, label %if.then77, label %land.lhs.true70.if.end89_crit_edge, !dbg !5823

land.lhs.true70.if.end89_crit_edge:               ; preds = %land.lhs.true70
  %bf.load91.pre = load i64, i64* %3, align 8, !dbg !5824
  br label %if.end89, !dbg !5823

if.then77:                                        ; preds = %land.lhs.true70
  %9 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !5826
  %type81 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %9, i64 0, i32 2, !dbg !5826
  %10 = load %union.tree_node*, %union.tree_node** %type81, align 8, !dbg !5826
  %11 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5826
  %call85 = tail call %union.tree_node* @build1_stat(i32 118, %union.tree_node* %10, %union.tree_node* %11) #7, !dbg !5826
  store %union.tree_node* %call85, %union.tree_node** %operands, align 8, !dbg !5828
  br label %cleanup, !dbg !5829

if.end89:                                         ; preds = %land.lhs.true70.if.end89_crit_edge, %land.lhs.true, %if.end59
  %bf.load91 = phi i64 [ %bf.load91.pre, %land.lhs.true70.if.end89_crit_edge ], [ %bf.load60, %land.lhs.true ], [ %bf.load60, %if.end59 ], !dbg !5824
  %bf.cast934 = and i64 %bf.load91, 65535, !dbg !5830
  %cmp94 = icmp eq i64 %bf.cast934, 121, !dbg !5830
  br i1 %cmp94, label %if.then96, label %if.end100, !dbg !5831

if.then96:                                        ; preds = %if.end89
  %operands98 = getelementptr inbounds %union.tree_node, %union.tree_node* %call55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5832
  %12 = load %union.tree_node*, %union.tree_node** %operands98, align 8, !dbg !5832
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !5732, metadata !DIExpression()), !dbg !5807
  br label %if.end100, !dbg !5833

if.end100:                                        ; preds = %if.then96, %if.end89
  %op.0 = phi %union.tree_node* [ %12, %if.then96 ], [ %call55, %if.end89 ], !dbg !5807
  call void @llvm.dbg.value(metadata %union.tree_node* %op.0, metadata !5732, metadata !DIExpression()), !dbg !5807
  br label %while.cond, !dbg !5834

while.cond:                                       ; preds = %if.end147, %if.end100
  %op.1 = phi %union.tree_node* [ %op.0, %if.end100 ], [ %20, %if.end147 ], !dbg !5807
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1, metadata !5732, metadata !DIExpression()), !dbg !5807
  %call101 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %op.1) #8, !dbg !5835
  %tobool102 = icmp eq i8 %call101, 0, !dbg !5834
  br i1 %tobool102, label %while.end, label %while.body, !dbg !5834

while.body:                                       ; preds = %while.cond
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5836
  %bf.load104 = load i64, i64* %13, align 8, !dbg !5836
  %bf.cast1065 = and i64 %bf.load104, 65535, !dbg !5837
  %cmp107 = icmp eq i64 %bf.cast1065, 41, !dbg !5837
  br i1 %cmp107, label %if.then109, label %if.end140, !dbg !5838

if.then109:                                       ; preds = %while.body
  %operands112 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5839
  %arrayidx113 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands112, i64 1, !dbg !5839
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx113, align 8, !dbg !5839
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !5736, metadata !DIExpression()), !dbg !5840
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5841
  %15 = bitcast %union.tree_node** %context to %struct.tree_type**, !dbg !5841
  %16 = load %struct.tree_type*, %struct.tree_type** %15, align 8, !dbg !5841
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %16, i64 0, i32 1, !dbg !5842
  %type123 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5844
  br label %for.cond115, !dbg !5848

for.cond115:                                      ; preds = %for.inc, %if.then109
  %tem.0.in = phi %union.tree_node** [ %values, %if.then109 ], [ %chain, %for.inc ]
  %tem.0 = load %union.tree_node*, %union.tree_node** %tem.0.in, align 8, !dbg !5849
  call void @llvm.dbg.value(metadata %union.tree_node* %tem.0, metadata !5741, metadata !DIExpression()), !dbg !5840
  %cond = icmp eq %union.tree_node* %tem.0, null, !dbg !5850
  br i1 %cond, label %if.end140.loopexit, label %for.body117, !dbg !5850

for.body117:                                      ; preds = %for.cond115
  %cmp118 = icmp eq %union.tree_node* %tem.0, %14, !dbg !5851
  br i1 %cmp118, label %for.end, label %lor.lhs.false, !dbg !5852

lor.lhs.false:                                    ; preds = %for.body117
  %type121 = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5853
  %17 = load %union.tree_node*, %union.tree_node** %type121, align 8, !dbg !5853
  %18 = load %union.tree_node*, %union.tree_node** %type123, align 8, !dbg !5854
  %cmp124 = icmp eq %union.tree_node* %17, %18, !dbg !5855
  br i1 %cmp124, label %land.lhs.true126, label %for.inc, !dbg !5856

land.lhs.true126:                                 ; preds = %lor.lhs.false
  %call127 = tail call zeroext i8 @compare_field_offset(%union.tree_node* nonnull %tem.0, %union.tree_node* %14) #7, !dbg !5857
  %tobool129 = icmp eq i8 %call127, 0, !dbg !5857
  br i1 %tobool129, label %for.inc, label %for.end, !dbg !5858

for.inc:                                          ; preds = %land.lhs.true126, %lor.lhs.false
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %tem.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5859
  br label %for.cond115, !dbg !5860, !llvm.loop !5861

for.end:                                          ; preds = %land.lhs.true126, %for.body117
  %tem.0.lcssa10 = phi %union.tree_node* [ %tem.0, %land.lhs.true126 ], [ %tem.0, %for.body117 ], !dbg !5849
  store %union.tree_node* %tem.0.lcssa10, %union.tree_node** %arrayidx113, align 8, !dbg !5863
  br label %if.end140, !dbg !5865

if.end140.loopexit:                               ; preds = %for.cond115
  br label %if.end140, !dbg !5866

if.end140:                                        ; preds = %if.end140.loopexit, %for.end, %while.body
  %operands142 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5866
  %19 = load %union.tree_node*, %union.tree_node** %operands142, align 8, !dbg !5866
  %call144 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %19) #8, !dbg !5868
  %tobool145 = icmp eq i8 %call144, 0, !dbg !5868
  br i1 %tobool145, label %while.end, label %if.end147, !dbg !5869

if.end147:                                        ; preds = %if.end140
  %20 = load %union.tree_node*, %union.tree_node** %operands142, align 8, !dbg !5870
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !5732, metadata !DIExpression()), !dbg !5807
  br label %while.cond, !dbg !5834, !llvm.loop !5871

while.end:                                        ; preds = %if.end140, %while.cond
  %op.1.lcssa = phi %union.tree_node* [ %op.1, %if.end140 ], [ %op.1, %while.cond ], !dbg !5807
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1.lcssa, metadata !5732, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1.lcssa, metadata !5732, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1.lcssa, metadata !5732, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1.lcssa, metadata !5732, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1.lcssa, metadata !5732, metadata !DIExpression()), !dbg !5807
  call void @llvm.dbg.value(metadata %union.tree_node* %op.1.lcssa, metadata !5732, metadata !DIExpression()), !dbg !5807
  %call151 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %op.1.lcssa) #8, !dbg !5873
  %tobool152 = icmp eq i8 %call151, 0, !dbg !5873
  br i1 %tobool152, label %cleanup, label %if.then153, !dbg !5875

if.then153:                                       ; preds = %while.end
  tail call fastcc void @maybe_fixup_handled_component(%union.tree_node* %op.1.lcssa) #8, !dbg !5876
  br label %cleanup, !dbg !5876

cleanup:                                          ; preds = %while.end, %for.body, %if.then153, %if.then77
  %inc = add i64 %i.0, 1, !dbg !5877
  call void @llvm.dbg.value(metadata i64 %inc, metadata !5727, metadata !DIExpression()), !dbg !5753
  br label %for.cond, !dbg !5878, !llvm.loop !5879

sw.default:                                       ; preds = %if.end
  %call158 = tail call i8* @lto_tag_name(i32 %tag) #7, !dbg !5881
  tail call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0), i8* %call158) #7, !dbg !5882
  br label %sw.epilog, !dbg !5883

sw.epilog.loopexit:                               ; preds = %for.cond
  br label %sw.epilog, !dbg !5884

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default, %sw.bb37, %sw.bb35, %sw.bb
  switch i32 %call, label %if.end216 [
    i32 6, label %if.then164
    i32 8, label %if.then164
    i32 4, label %if.then178
    i32 7, label %for.cond194.preheader
  ], !dbg !5884

for.cond194.preheader:                            ; preds = %sw.epilog
  br label %for.cond194, !dbg !5885

if.then164:                                       ; preds = %sw.epilog, %sw.epilog
  %call165 = tail call %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d* %call3) #7, !dbg !5886
  call void @llvm.dbg.value(metadata %union.tree_node* %call165, metadata !5742, metadata !DIExpression()), !dbg !5887
  %tobool166 = icmp eq %union.tree_node* %call165, null, !dbg !5888
  br i1 %tobool166, label %if.end216, label %land.lhs.true167, !dbg !5890

land.lhs.true167:                                 ; preds = %if.then164
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5891
  %bf.load169 = load i64, i64* %21, align 8, !dbg !5891
  %bf.cast1712 = and i64 %bf.load169, 65535, !dbg !5892
  %cmp172 = icmp eq i64 %bf.cast1712, 141, !dbg !5892
  br i1 %cmp172, label %if.then174, label %if.end216, !dbg !5893

if.then174:                                       ; preds = %land.lhs.true167
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call165, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5894
  %22 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5894
  store %union.gimple_statement_d* %call3, %union.gimple_statement_d** %22, align 8, !dbg !5895
  br label %if.end216, !dbg !5894

if.then178:                                       ; preds = %sw.epilog
  %call179 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call3) #8, !dbg !5896
  %call180 = tail call fastcc zeroext i8 @emit_label_in_global_context_p(%union.tree_node* %call179) #8, !dbg !5896
  %tobool182 = icmp eq i8 %call180, 0, !dbg !5896
  br i1 %tobool182, label %lor.lhs.false183, label %if.end216, !dbg !5896

lor.lhs.false183:                                 ; preds = %if.then178
  %call184 = tail call fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %call3) #8, !dbg !5896
  %context186 = getelementptr inbounds %union.tree_node, %union.tree_node* %call184, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5896
  %23 = load %union.tree_node*, %union.tree_node** %context186, align 8, !dbg !5896
  %decl = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 6, !dbg !5896
  %24 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5896
  %cmp187 = icmp eq %union.tree_node* %23, %24, !dbg !5896
  br i1 %cmp187, label %if.end216, label %cond.true, !dbg !5896

cond.true:                                        ; preds = %lor.lhs.false183
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1147, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !5896
  br label %if.end216, !dbg !5896

for.cond194:                                      ; preds = %for.cond194.preheader, %for.inc211
  %i193.0 = phi i32 [ %inc212, %for.inc211 ], [ 0, %for.cond194.preheader ], !dbg !5897
  call void @llvm.dbg.value(metadata i32 %i193.0, metadata !5745, metadata !DIExpression()), !dbg !5898
  %call195 = tail call fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %call3) #8, !dbg !5899
  %cmp196 = icmp ult i32 %i193.0, %call195, !dbg !5900
  br i1 %cmp196, label %for.body198, label %if.end216.loopexit, !dbg !5885

for.body198:                                      ; preds = %for.cond194
  %call200 = tail call fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %call3, i32 %i193.0) #8, !dbg !5901
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call200, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5901
  %26 = load %union.tree_node*, %union.tree_node** %25, align 8, !dbg !5901
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !5749, metadata !DIExpression()), !dbg !5902
  %27 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5903
  %bf.load202 = load i64, i64* %27, align 8, !dbg !5903
  %bf.cast2041 = and i64 %bf.load202, 65535, !dbg !5905
  %cmp205 = icmp eq i64 %bf.cast2041, 141, !dbg !5905
  br i1 %cmp205, label %if.then207, label %for.inc211, !dbg !5906

if.then207:                                       ; preds = %for.body198
  %def_stmt209 = getelementptr inbounds %union.tree_node, %union.tree_node* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5907
  %28 = bitcast %union.tree_node** %def_stmt209 to %union.gimple_statement_d**, !dbg !5907
  store %union.gimple_statement_d* %call3, %union.gimple_statement_d** %28, align 8, !dbg !5908
  br label %for.inc211, !dbg !5907

for.inc211:                                       ; preds = %for.body198, %if.then207
  %inc212 = add i32 %i193.0, 1, !dbg !5909
  call void @llvm.dbg.value(metadata i32 %inc212, metadata !5745, metadata !DIExpression()), !dbg !5898
  br label %for.cond194, !dbg !5910, !llvm.loop !5911

if.end216.loopexit:                               ; preds = %for.cond194
  br label %if.end216, !dbg !5913

if.end216:                                        ; preds = %if.end216.loopexit, %if.then164, %if.then178, %lor.lhs.false183, %cond.true, %if.end, %if.end, %sw.epilog, %land.lhs.true167, %if.then174
  tail call fastcc void @maybe_fixup_decls(%union.gimple_statement_d* %call3) #8, !dbg !5913
  tail call void @gimple_set_modified(%union.gimple_statement_d* %call3, i8 zeroext 1) #7, !dbg !5914
  ret %union.gimple_statement_d* %call3, !dbg !5915
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_debug(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !5916 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !5920, metadata !DIExpression()), !dbg !5921
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !5922
  %cmp = icmp eq i32 %call, 2, !dbg !5923
  %conv1 = zext i1 %cmp to i8, !dbg !5922
  ret i8 %conv1, !dbg !5924
}

declare dso_local void @find_referenced_vars_in(%union.gimple_statement_d*) local_unnamed_addr #2

declare dso_local void @gsi_insert_after(%struct.gimple_stmt_iterator*, %union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @lto_tag_check_set(i32 %actual, i32 %ntags, ...) unnamed_addr #5 !dbg !5925 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i32 %actual, metadata !5929, metadata !DIExpression()), !dbg !5939
  call void @llvm.dbg.value(metadata i32 2, metadata !5930, metadata !DIExpression()), !dbg !5939
  %0 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !5940
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !5940
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !5931, metadata !DIExpression()), !dbg !5941
  call void @llvm.va_start(i8* %0), !dbg !5942
  call void @llvm.dbg.value(metadata i32 0, metadata !5938, metadata !DIExpression()), !dbg !5939
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !5943
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !5943
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !5943
  br label %for.cond, !dbg !5947

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !5948
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5938, metadata !DIExpression()), !dbg !5939
  %exitcond = icmp eq i32 %i.0, 2, !dbg !5949
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5950

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !5951
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !5951
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !5951

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !5951
  %2 = sext i32 %gp_offset to i64, !dbg !5951
  %3 = getelementptr i8, i8* %reg_save_area, i64 %2, !dbg !5951
  %4 = add i32 %gp_offset, 8, !dbg !5951
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !5951
  br label %vaarg.end, !dbg !5951

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !5951
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !5951
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !5951
  br label %vaarg.end, !dbg !5951

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %3, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to i32*, !dbg !5951
  %5 = load i32, i32* %vaarg.addr, align 4, !dbg !5951
  %cmp3 = icmp eq i32 %5, %actual, !dbg !5952
  br i1 %cmp3, label %if.then, label %for.inc, !dbg !5953

if.then:                                          ; preds = %vaarg.end
  call void @llvm.va_end(i8* nonnull %0), !dbg !5954
  br label %cleanup, !dbg !5956

for.inc:                                          ; preds = %vaarg.end
  %inc = add nuw nsw i32 %i.0, 1, !dbg !5957
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5938, metadata !DIExpression()), !dbg !5939
  br label %for.cond, !dbg !5958, !llvm.loop !5959

for.end:                                          ; preds = %for.cond
  call void @llvm.va_end(i8* nonnull %0), !dbg !5961
  %call = call i8* @lto_tag_name(i32 %actual) #7, !dbg !5962
  call void (i8*, ...) @internal_error(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.9, i64 0, i64 0), i8* %call) #7, !dbg !5963
  br label %cleanup, !dbg !5964

cleanup:                                          ; preds = %for.end, %if.then
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !5964
  ret void, !dbg !5964
}

declare dso_local void @add_stmt_to_eh_lp(%union.gimple_statement_d*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.gimple_statement_d* @input_phi(%struct.lto_input_block* %ib, %struct.basic_block_def* %bb, %struct.data_in* %data_in, %struct.function* %fn) unnamed_addr #5 !dbg !5965 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !5969, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5970, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !5971, metadata !DIExpression()), !dbg !5987
  call void @llvm.dbg.value(metadata %struct.function* %fn, metadata !5972, metadata !DIExpression()), !dbg !5987
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !5988
  call void @llvm.dbg.value(metadata i64 %call, metadata !5973, metadata !DIExpression()), !dbg !5987
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 3, !dbg !5989
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !5989
  %ssa_names = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 2, !dbg !5989
  %1 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ssa_names, align 8, !dbg !5989
  %tobool = icmp eq %struct.VEC_tree_gc* %1, null, !dbg !5989
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5989

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %1, i64 0, i32 0, !dbg !5989
  br label %cond.end, !dbg !5989

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !5989
  %conv = trunc i64 %call to i32, !dbg !5989
  %call3 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %cond, i32 %conv) #8, !dbg !5989
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5974, metadata !DIExpression()), !dbg !5987
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !5990
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !5990
  %tobool4 = icmp eq %struct.VEC_edge_gc* %2, null, !dbg !5990
  br i1 %tobool4, label %cond.end9, label %cond.true5, !dbg !5990

cond.true5:                                       ; preds = %cond.end
  %base7 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %2, i64 0, i32 0, !dbg !5990
  br label %cond.end9, !dbg !5990

cond.end9:                                        ; preds = %cond.end, %cond.true5
  %cond10 = phi %struct.VEC_edge_base* [ %base7, %cond.true5 ], [ null, %cond.end ], !dbg !5990
  %call11 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond10) #8, !dbg !5990
  call void @llvm.dbg.value(metadata i32 %call11, metadata !5976, metadata !DIExpression()), !dbg !5987
  %call12 = tail call %union.gimple_statement_d* @create_phi_node(%union.tree_node* %call3, %struct.basic_block_def* %bb) #7, !dbg !5991
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call12, metadata !5977, metadata !DIExpression()), !dbg !5987
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5992
  %3 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !5992
  store %union.gimple_statement_d* %call12, %union.gimple_statement_d** %3, align 8, !dbg !5993
  call void @llvm.dbg.value(metadata i32 0, metadata !5975, metadata !DIExpression()), !dbg !5987
  %cfg = getelementptr inbounds %struct.function, %struct.function* %fn, i64 0, i32 1, !dbg !5994
  br label %for.cond, !dbg !5995

for.cond:                                         ; preds = %for.end, %cond.end9
  %i.0 = phi i32 [ 0, %cond.end9 ], [ %inc52, %for.end ], !dbg !5996
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5975, metadata !DIExpression()), !dbg !5987
  %cmp = icmp slt i32 %i.0, %call11, !dbg !5997
  br i1 %cmp, label %for.body, label %for.end53, !dbg !5998

for.body:                                         ; preds = %for.cond
  %call14 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !5999
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !5978, metadata !DIExpression()), !dbg !5994
  %call15 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !6000
  %conv16 = trunc i64 %call15 to i32, !dbg !6000
  call void @llvm.dbg.value(metadata i32 %conv16, metadata !5982, metadata !DIExpression()), !dbg !5994
  %call17 = tail call fastcc i32 @lto_input_location(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !6001
  call void @llvm.dbg.value(metadata i32 %call17, metadata !5983, metadata !DIExpression()), !dbg !5994
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6002
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 2, !dbg !6002
  %5 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6002
  %tobool18 = icmp eq %struct.VEC_basic_block_gc* %5, null, !dbg !6002
  br i1 %tobool18, label %cond.end24, label %cond.true19, !dbg !6002

cond.true19:                                      ; preds = %for.body
  %base22 = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %5, i64 0, i32 0, !dbg !6002
  br label %cond.end24, !dbg !6002

cond.end24:                                       ; preds = %for.body, %cond.true19
  %cond25 = phi %struct.VEC_basic_block_base* [ %base22, %cond.true19 ], [ null, %for.body ], !dbg !6002
  %call26 = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond25, i32 %conv16) #8, !dbg !6002
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call26, metadata !5984, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata %struct.edge_def* null, metadata !5985, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 0, metadata !5986, metadata !DIExpression()), !dbg !5994
  br label %for.cond27, !dbg !6003

for.cond27:                                       ; preds = %for.inc, %cond.end24
  %j.0 = phi i32 [ 0, %cond.end24 ], [ %inc, %for.inc ], !dbg !6005
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !5986, metadata !DIExpression()), !dbg !5994
  %cmp28 = icmp slt i32 %j.0, %call11, !dbg !6006
  br i1 %cmp28, label %for.body30, label %for.end.loopexit, !dbg !6008

for.body30:                                       ; preds = %for.cond27
  %6 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6009
  %tobool32 = icmp eq %struct.VEC_edge_gc* %6, null, !dbg !6009
  br i1 %tobool32, label %cond.end37, label %cond.true33, !dbg !6009

cond.true33:                                      ; preds = %for.body30
  %base35 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %6, i64 0, i32 0, !dbg !6009
  br label %cond.end37, !dbg !6009

cond.end37:                                       ; preds = %for.body30, %cond.true33
  %cond38 = phi %struct.VEC_edge_base* [ %base35, %cond.true33 ], [ null, %for.body30 ], !dbg !6009
  %call39 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond38, i32 %j.0) #8, !dbg !6009
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call39, i64 0, i32 0, !dbg !6011
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6011
  %cmp40 = icmp eq %struct.basic_block_def* %7, %call26, !dbg !6012
  br i1 %cmp40, label %if.then, label %for.inc, !dbg !6013

if.then:                                          ; preds = %cond.end37
  %j.0.lcssa3 = phi i32 [ %j.0, %cond.end37 ], !dbg !6005
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa3, metadata !5986, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa3, metadata !5986, metadata !DIExpression()), !dbg !5994
  call void @llvm.dbg.value(metadata i32 %j.0.lcssa3, metadata !5986, metadata !DIExpression()), !dbg !5994
  %8 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !6014
  %tobool43 = icmp eq %struct.VEC_edge_gc* %8, null, !dbg !6014
  br i1 %tobool43, label %cond.end48, label %cond.true44, !dbg !6014

cond.true44:                                      ; preds = %if.then
  %base46 = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %8, i64 0, i32 0, !dbg !6014
  br label %cond.end48, !dbg !6014

cond.end48:                                       ; preds = %if.then, %cond.true44
  %cond49 = phi %struct.VEC_edge_base* [ %base46, %cond.true44 ], [ null, %if.then ], !dbg !6014
  %call50 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond49, i32 %j.0.lcssa3) #8, !dbg !6014
  call void @llvm.dbg.value(metadata %struct.edge_def* %call50, metadata !5985, metadata !DIExpression()), !dbg !5994
  br label %for.end, !dbg !6016

for.inc:                                          ; preds = %cond.end37
  %inc = add nuw nsw i32 %j.0, 1, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5986, metadata !DIExpression()), !dbg !5994
  br label %for.cond27, !dbg !6018, !llvm.loop !6019

for.end.loopexit:                                 ; preds = %for.cond27
  br label %for.end, !dbg !6021

for.end:                                          ; preds = %for.end.loopexit, %cond.end48
  %e.0 = phi %struct.edge_def* [ %call50, %cond.end48 ], [ null, %for.end.loopexit ], !dbg !5994
  call void @llvm.dbg.value(metadata %struct.edge_def* %e.0, metadata !5985, metadata !DIExpression()), !dbg !5994
  tail call void @add_phi_arg(%union.gimple_statement_d* %call12, %union.tree_node* %call14, %struct.edge_def* %e.0, i32 %call17) #7, !dbg !6021
  %inc52 = add nuw nsw i32 %i.0, 1, !dbg !6022
  call void @llvm.dbg.value(metadata i32 %inc52, metadata !5975, metadata !DIExpression()), !dbg !5987
  br label %for.cond, !dbg !6023, !llvm.loop !6024

for.end53:                                        ; preds = %for.cond
  ret %union.gimple_statement_d* %call12, !dbg !6026
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lto_tag_to_gimple_code(i32 %tag) unnamed_addr #0 !dbg !6027 {
entry:
  call void @llvm.dbg.value(metadata i32 %tag, metadata !6031, metadata !DIExpression()), !dbg !6032
  %call = tail call fastcc zeroext i8 @lto_tag_is_gimple_code_p(i32 %tag) #8, !dbg !6033
  %tobool = icmp eq i8 %call, 0, !dbg !6033
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6033

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 907, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6033
  br label %cond.end, !dbg !6033

cond.end:                                         ; preds = %entry, %cond.true
  %sub1 = add i32 %tag, -189, !dbg !6034
  ret i32 %sub1, !dbg !6035
}

declare dso_local %union.gimple_statement_d* @gimple_alloc_stat(i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_assign(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6036 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6038, metadata !DIExpression()), !dbg !6039
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !6040
  %cmp = icmp eq i32 %call, 6, !dbg !6041
  %conv1 = zext i1 %cmp to i8, !dbg !6040
  ret i8 %conv1, !dbg !6042
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_location(%union.gimple_statement_d* %g, i32 %location) unnamed_addr #0 !dbg !6043 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6047, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.value(metadata i32 %location, metadata !6048, metadata !DIExpression()), !dbg !6049
  %location1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !6050
  store i32 %location, i32* %location1, align 8, !dbg !6051
  ret void, !dbg !6052
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_block(%union.gimple_statement_d* %g, %union.tree_node* %block) unnamed_addr #0 !dbg !6053 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6057, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %block, metadata !6058, metadata !DIExpression()), !dbg !6059
  %block1 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 5, !dbg !6060
  store %union.tree_node* %block, %union.tree_node** %block1, align 8, !dbg !6061
  ret void, !dbg !6062
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_resx_set_region(%union.gimple_statement_d* %gs, i32 %region) unnamed_addr #0 !dbg !6063 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6067, metadata !DIExpression()), !dbg !6069
  call void @llvm.dbg.value(metadata i32 %region, metadata !6068, metadata !DIExpression()), !dbg !6069
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6070
  store i32 %region, i32* %0, align 8, !dbg !6071
  ret void, !dbg !6072
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_eh_must_not_throw_set_fndecl(%union.gimple_statement_d* %gs, %union.tree_node* %decl) unnamed_addr #0 !dbg !6073 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6075, metadata !DIExpression()), !dbg !6077
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6076, metadata !DIExpression()), !dbg !6077
  %fndecl = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6078
  %0 = bitcast i32* %fndecl to %union.tree_node**, !dbg !6078
  store %union.tree_node* %decl, %union.tree_node** %0, align 8, !dbg !6079
  ret void, !dbg !6080
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_eh_dispatch_set_region(%union.gimple_statement_d* %gs, i32 %region) unnamed_addr #0 !dbg !6081 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6083, metadata !DIExpression()), !dbg !6085
  call void @llvm.dbg.value(metadata i32 %region, metadata !6084, metadata !DIExpression()), !dbg !6085
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 1, !dbg !6086
  store i32 %region, i32* %0, align 8, !dbg !6087
  ret void, !dbg !6088
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @input_string_cst(%struct.data_in* %data_in, %struct.lto_input_block* %ib) unnamed_addr #5 !dbg !6089 {
entry:
  %len = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !6093, metadata !DIExpression()), !dbg !6098
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !6094, metadata !DIExpression()), !dbg !6098
  %0 = bitcast i32* %len to i8*, !dbg !6099
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #6, !dbg !6099
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !6100
  %conv = trunc i64 %call to i32, !dbg !6100
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6097, metadata !DIExpression()), !dbg !6098
  %tobool = icmp eq i32 %conv, 0, !dbg !6101
  br i1 %tobool, label %if.end, label %cleanup, !dbg !6103

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %len, metadata !6095, metadata !DIExpression(DW_OP_deref)), !dbg !6098
  %call1 = call fastcc i8* @input_string_internal(%struct.data_in* %data_in, %struct.lto_input_block* %ib, i32* nonnull %len) #8, !dbg !6104
  call void @llvm.dbg.value(metadata i8* %call1, metadata !6096, metadata !DIExpression()), !dbg !6098
  %1 = load i32, i32* %len, align 4, !dbg !6105
  call void @llvm.dbg.value(metadata i32 %1, metadata !6095, metadata !DIExpression()), !dbg !6098
  %call2 = call %union.tree_node* @build_string(i32 %1, i8* %call1) #7, !dbg !6106
  br label %cleanup, !dbg !6107

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call2, %if.end ], [ null, %entry ], !dbg !6098
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #6, !dbg !6108
  ret %union.tree_node* %retval.0, !dbg !6108
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 %i, %union.tree_node* %op) unnamed_addr #0 !dbg !6109 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6113, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata i32 %i, metadata !6114, metadata !DIExpression()), !dbg !6116
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6115, metadata !DIExpression()), !dbg !6116
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !6117
  %tobool = icmp eq i8 %call, 0, !dbg !6117
  br i1 %tobool, label %cond.true, label %land.lhs.true, !dbg !6117

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !6117
  %cmp = icmp ugt i32 %call1, %i, !dbg !6117
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6117

cond.true:                                        ; preds = %entry, %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 1665, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6117
  br label %cond.end, !dbg !6117

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %call3 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !6118
  %idxprom = zext i32 %i to i64, !dbg !6118
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call3, i64 %idxprom, !dbg !6118
  store %union.tree_node* %op, %union.tree_node** %arrayidx, align 8, !dbg !6119
  ret void, !dbg !6120
}

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !6121 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !6128, metadata !DIExpression()), !dbg !6129
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6130
  %bf.load = load i64, i64* %0, align 8, !dbg !6130
  %1 = trunc i64 %bf.load to i16, !dbg !6130
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !6131

sw.default:                                       ; preds = %entry
  br label %return, !dbg !6132

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !6134
  ret i8 %retval.0, !dbg !6135
}

declare dso_local zeroext i8 @compare_field_offset(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @maybe_fixup_handled_component(%union.tree_node* %op) unnamed_addr #5 !dbg !6136 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %op, metadata !6140, metadata !DIExpression()), !dbg !6143
  br label %while.cond, !dbg !6144

while.cond:                                       ; preds = %while.cond, %entry
  %op.addr.0 = phi %union.tree_node* [ %op, %entry ], [ %1, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.0, metadata !6140, metadata !DIExpression()), !dbg !6143
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6145
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6145
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %0) #8, !dbg !6146
  %tobool = icmp eq i8 %call, 0, !dbg !6144
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6143
  br i1 %tobool, label %while.end, label %while.cond, !dbg !6144, !llvm.loop !6147

while.end:                                        ; preds = %while.cond
  %op.addr.0.lcssa = phi %union.tree_node* [ %op.addr.0, %while.cond ]
  %operands.lcssa = phi %union.tree_node** [ %operands, %while.cond ], !dbg !6145
  %.lcssa = phi %union.tree_node* [ %1, %while.cond ], !dbg !6143
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.0.lcssa, metadata !6140, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.0.lcssa, metadata !6140, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.value(metadata %union.tree_node* %op.addr.0.lcssa, metadata !6140, metadata !DIExpression()), !dbg !6143
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6149
  %bf.load = load i64, i64* %2, align 8, !dbg !6149
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6151
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !6151
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !6152

if.end:                                           ; preds = %while.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6153
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6153
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6141, metadata !DIExpression()), !dbg !6143
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6154
  %bf.load11 = load i64, i64* %4, align 8, !dbg !6154
  %5 = trunc i64 %bf.load11 to i16, !dbg !6154
  switch i16 %5, label %sw.default [
    i16 41, label %sw.bb
    i16 45, label %sw.bb17
    i16 46, label %sw.bb39
    i16 42, label %cleanup.cont
    i16 118, label %cleanup.cont
    i16 43, label %sw.bb73
    i16 44, label %sw.bb73
  ], !dbg !6155

sw.bb:                                            ; preds = %if.end
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands.lcssa, i64 1, !dbg !6156
  %6 = bitcast %union.tree_node** %arrayidx16 to %struct.tree_decl_minimal**, !dbg !6156
  %7 = load %struct.tree_decl_minimal*, %struct.tree_decl_minimal** %6, align 8, !dbg !6156
  %context = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %7, i64 0, i32 4, !dbg !6156
  %8 = load %union.tree_node*, %union.tree_node** %context, align 8, !dbg !6156
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6142, metadata !DIExpression()), !dbg !6143
  br label %sw.epilog, !dbg !6158

sw.bb17:                                          ; preds = %if.end
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6159
  %bf.load19 = load i64, i64* %9, align 8, !dbg !6159
  %bf.cast214 = and i64 %bf.load19, 65535, !dbg !6161
  %cmp22 = icmp eq i64 %bf.cast214, 15, !dbg !6161
  br i1 %cmp22, label %land.lhs.true, label %if.end35, !dbg !6162

land.lhs.true:                                    ; preds = %sw.bb17
  %type24 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6163
  %10 = load %union.tree_node*, %union.tree_node** %type24, align 8, !dbg !6163
  %type26 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6164
  %11 = load %union.tree_node*, %union.tree_node** %type26, align 8, !dbg !6164
  %cmp27 = icmp eq %union.tree_node* %10, %11, !dbg !6165
  br i1 %cmp27, label %cleanup.cont, label %lor.lhs.false, !dbg !6166

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call32 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %11, %union.tree_node* %10) #7, !dbg !6167
  %tobool33 = icmp eq i8 %call32, 0, !dbg !6167
  br i1 %tobool33, label %if.end35, label %cleanup.cont, !dbg !6168

if.end35:                                         ; preds = %lor.lhs.false, %sw.bb17
  %type37 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6169
  %12 = load %union.tree_node*, %union.tree_node** %type37, align 8, !dbg !6169
  %call38 = tail call %union.tree_node* @build_array_type(%union.tree_node* %12, %union.tree_node* null) #7, !dbg !6170
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !6142, metadata !DIExpression()), !dbg !6143
  br label %sw.epilog, !dbg !6171

sw.bb39:                                          ; preds = %if.end
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6172
  %bf.load41 = load i64, i64* %13, align 8, !dbg !6172
  %bf.cast433 = and i64 %bf.load41, 65535, !dbg !6174
  %cmp44 = icmp eq i64 %bf.cast433, 15, !dbg !6174
  br i1 %cmp44, label %land.lhs.true46, label %sw.bb39.if.end66_crit_edge, !dbg !6175

sw.bb39.if.end66_crit_edge:                       ; preds = %sw.bb39
  br label %if.end66, !dbg !6175

land.lhs.true46:                                  ; preds = %sw.bb39
  %type48 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6176
  %14 = load %union.tree_node*, %union.tree_node** %type48, align 8, !dbg !6176
  %type50 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6177
  %15 = bitcast %union.tree_node** %type50 to %struct.tree_common**, !dbg !6177
  %16 = load %struct.tree_common*, %struct.tree_common** %15, align 8, !dbg !6177
  %type52 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %16, i64 0, i32 2, !dbg !6177
  %17 = load %union.tree_node*, %union.tree_node** %type52, align 8, !dbg !6177
  %cmp53 = icmp eq %union.tree_node* %14, %17, !dbg !6178
  br i1 %cmp53, label %cleanup.cont, label %lor.lhs.false55, !dbg !6179

lor.lhs.false55:                                  ; preds = %land.lhs.true46
  %call62 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %17, %union.tree_node* %14) #7, !dbg !6180
  %tobool64 = icmp eq i8 %call62, 0, !dbg !6180
  br i1 %tobool64, label %if.end66, label %cleanup.cont, !dbg !6181

if.end66:                                         ; preds = %sw.bb39.if.end66_crit_edge, %lor.lhs.false55
  %type68 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6182
  %18 = bitcast %union.tree_node** %type68 to %struct.tree_common**, !dbg !6182
  %19 = load %struct.tree_common*, %struct.tree_common** %18, align 8, !dbg !6182
  %type70 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %19, i64 0, i32 2, !dbg !6182
  %20 = load %union.tree_node*, %union.tree_node** %type70, align 8, !dbg !6182
  %call71 = tail call %union.tree_node* @build_array_type(%union.tree_node* %20, %union.tree_node* null) #7, !dbg !6183
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !6142, metadata !DIExpression()), !dbg !6143
  br label %sw.epilog, !dbg !6184

sw.bb73:                                          ; preds = %if.end, %if.end
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6185
  %bf.load75 = load i64, i64* %21, align 8, !dbg !6185
  %bf.cast772 = and i64 %bf.load75, 65535, !dbg !6187
  %cmp78 = icmp eq i64 %bf.cast772, 13, !dbg !6187
  br i1 %cmp78, label %land.lhs.true80, label %if.end96, !dbg !6188

land.lhs.true80:                                  ; preds = %sw.bb73
  %type82 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6189
  %22 = load %union.tree_node*, %union.tree_node** %type82, align 8, !dbg !6189
  %type84 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6190
  %23 = load %union.tree_node*, %union.tree_node** %type84, align 8, !dbg !6190
  %cmp85 = icmp eq %union.tree_node* %22, %23, !dbg !6191
  br i1 %cmp85, label %cleanup.cont, label %lor.lhs.false87, !dbg !6192

lor.lhs.false87:                                  ; preds = %land.lhs.true80
  %call92 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %23, %union.tree_node* %22) #7, !dbg !6193
  %tobool94 = icmp eq i8 %call92, 0, !dbg !6193
  br i1 %tobool94, label %if.end96, label %cleanup.cont, !dbg !6194

if.end96:                                         ; preds = %lor.lhs.false87, %sw.bb73
  %type98 = getelementptr inbounds %union.tree_node, %union.tree_node* %op.addr.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6195
  %24 = load %union.tree_node*, %union.tree_node** %type98, align 8, !dbg !6195
  %call99 = tail call %union.tree_node* @build_complex_type(%union.tree_node* %24) #7, !dbg !6196
  call void @llvm.dbg.value(metadata %union.tree_node* %call99, metadata !6142, metadata !DIExpression()), !dbg !6143
  br label %sw.epilog, !dbg !6197

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 940, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6198
  br label %sw.epilog, !dbg !6199

sw.epilog:                                        ; preds = %sw.default, %if.end96, %if.end66, %if.end35, %sw.bb
  %wanted_type.0 = phi %union.tree_node* [ undef, %sw.default ], [ %call99, %if.end96 ], [ %call71, %if.end66 ], [ %call38, %if.end35 ], [ %8, %sw.bb ]
  call void @llvm.dbg.value(metadata %union.tree_node* %wanted_type.0, metadata !6142, metadata !DIExpression()), !dbg !6143
  %call100 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %wanted_type.0, %union.tree_node* %3) #7, !dbg !6200
  %tobool101 = icmp eq i8 %call100, 0, !dbg !6200
  br i1 %tobool101, label %if.then102, label %cleanup.cont, !dbg !6202

if.then102:                                       ; preds = %sw.epilog
  %25 = load %union.tree_node*, %union.tree_node** %operands.lcssa, align 8, !dbg !6203
  %call106 = tail call %union.tree_node* @build1_stat(i32 118, %union.tree_node* %wanted_type.0, %union.tree_node* %25) #7, !dbg !6203
  store %union.tree_node* %call106, %union.tree_node** %operands.lcssa, align 8, !dbg !6204
  br label %cleanup.cont, !dbg !6205

cleanup.cont:                                     ; preds = %lor.lhs.false, %lor.lhs.false55, %lor.lhs.false87, %sw.epilog, %while.end, %land.lhs.true, %land.lhs.true46, %if.end, %if.end, %land.lhs.true80, %if.then102
  ret void, !dbg !6206
}

declare dso_local %union.tree_node* @gimple_get_lhs(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @emit_label_in_global_context_p(%union.tree_node* %label) unnamed_addr #0 !dbg !6207 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %label, metadata !6211, metadata !DIExpression()), !dbg !6212
  %nonlocal_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6213
  %0 = bitcast i40* %nonlocal_flag to i64*, !dbg !6213
  %bf.load = load i64, i64* %0, align 8, !dbg !6213
  %bf.cast1 = and i64 %bf.load, 256, !dbg !6213
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6213
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6214

lor.rhs:                                          ; preds = %entry
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %label, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6215
  %bf.load1 = load i64, i64* %1, align 8, !dbg !6215
  %bf.cast42 = lshr i64 %bf.load1, 16, !dbg !6214
  %2 = trunc i64 %bf.cast42 to i8, !dbg !6214
  %3 = and i8 %2, 1, !dbg !6214
  br label %lor.end, !dbg !6214

lor.end:                                          ; preds = %entry, %lor.rhs
  %4 = phi i8 [ 1, %entry ], [ %3, %lor.rhs ]
  ret i8 %4, !dbg !6216
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_label_label(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6217 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6221, metadata !DIExpression()), !dbg !6222
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !6223
  ret %union.tree_node* %call, !dbg !6224
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_asm_noutputs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6225 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6227, metadata !DIExpression()), !dbg !6228
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !6229
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !6230
  %0 = load i8, i8* %no, align 1, !dbg !6230
  %conv = zext i8 %0 to i32, !dbg !6231
  ret i32 %conv, !dbg !6232
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_asm_output_op(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6233 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6237, metadata !DIExpression()), !dbg !6239
  call void @llvm.dbg.value(metadata i32 %index, metadata !6238, metadata !DIExpression()), !dbg !6239
  %gimple_asm = bitcast %union.gimple_statement_d* %gs to %struct.gimple_statement_asm*, !dbg !6240
  %no = getelementptr inbounds %struct.gimple_statement_asm, %struct.gimple_statement_asm* %gimple_asm, i64 0, i32 3, !dbg !6240
  %0 = load i8, i8* %no, align 1, !dbg !6240
  %conv = zext i8 %0 to i32, !dbg !6240
  %cmp = icmp ult i32 %conv, %index, !dbg !6240
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6240

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 2655, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6240
  br label %cond.end, !dbg !6240

cond.end:                                         ; preds = %entry, %cond.true
  %ni = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 4, i64 0, i32 0, i32 3, !dbg !6241
  %1 = bitcast %union.tree_node*** %ni to i8*, !dbg !6241
  %2 = load i8, i8* %1, align 8, !dbg !6241
  %conv3 = zext i8 %2 to i32, !dbg !6242
  %add = add i32 %conv3, %index, !dbg !6243
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #8, !dbg !6244
  ret %union.tree_node* %call, !dbg !6245
}

; Function Attrs: nounwind uwtable
define internal fastcc void @maybe_fixup_decls(%union.gimple_statement_d* %stmt) unnamed_addr #5 !dbg !6246 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !6250, metadata !DIExpression()), !dbg !6258
  %call = tail call zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d* %stmt) #7, !dbg !6259
  %tobool = icmp eq i8 %call, 0, !dbg !6259
  br i1 %tobool, label %if.else31, label %if.then, !dbg !6260

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !6261
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6251, metadata !DIExpression()), !dbg !6262
  %call2 = tail call fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %stmt) #8, !dbg !6263
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6254, metadata !DIExpression()), !dbg !6262
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6264
  %bf.load = load i64, i64* %0, align 8, !dbg !6264
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6266
  %cmp = icmp eq i64 %bf.cast2, 32, !dbg !6266
  br i1 %cmp, label %if.then3, label %if.else, !dbg !6267

if.then3:                                         ; preds = %if.then
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6268
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6268
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6271
  %2 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !6271
  %call6 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %1, %union.tree_node* %2) #7, !dbg !6272
  %tobool7 = icmp eq i8 %call6, 0, !dbg !6272
  br i1 %tobool7, label %if.then8, label %if.end55, !dbg !6273

if.then8:                                         ; preds = %if.then3
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6274
  %call11 = tail call %union.tree_node* @build1_stat(i32 118, %union.tree_node* %3, %union.tree_node* %call2) #7, !dbg !6274
  tail call fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %stmt, %union.tree_node* %call11) #8, !dbg !6275
  br label %if.end55, !dbg !6275

if.else:                                          ; preds = %if.then
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6276
  %bf.load13 = load i64, i64* %4, align 8, !dbg !6276
  %bf.cast153 = and i64 %bf.load13, 65535, !dbg !6278
  %cmp16 = icmp eq i64 %bf.cast153, 32, !dbg !6278
  br i1 %cmp16, label %if.then17, label %if.end55, !dbg !6279

if.then17:                                        ; preds = %if.else
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6280
  %5 = load %union.tree_node*, %union.tree_node** %type19, align 8, !dbg !6280
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6283
  %6 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !6283
  %call22 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %5, %union.tree_node* %6) #7, !dbg !6284
  %tobool23 = icmp eq i8 %call22, 0, !dbg !6284
  br i1 %tobool23, label %if.then24, label %if.end55, !dbg !6285

if.then24:                                        ; preds = %if.then17
  %7 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !6286
  %call27 = tail call %union.tree_node* @build1_stat(i32 118, %union.tree_node* %7, %union.tree_node* %call1) #7, !dbg !6286
  tail call fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %stmt, %union.tree_node* %call27) #8, !dbg !6287
  br label %if.end55, !dbg !6287

if.else31:                                        ; preds = %entry
  %call32 = tail call fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %stmt) #8, !dbg !6288
  %tobool33 = icmp eq i8 %call32, 0, !dbg !6288
  br i1 %tobool33, label %if.end55, label %if.then34, !dbg !6289

if.then34:                                        ; preds = %if.else31
  %call36 = tail call fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %stmt) #8, !dbg !6290
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !6255, metadata !DIExpression()), !dbg !6291
  %tobool37 = icmp eq %union.tree_node* %call36, null, !dbg !6292
  br i1 %tobool37, label %if.end55, label %land.lhs.true, !dbg !6294

land.lhs.true:                                    ; preds = %if.then34
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6295
  %bf.load39 = load i64, i64* %8, align 8, !dbg !6295
  %bf.cast411 = and i64 %bf.load39, 65535, !dbg !6296
  %cmp42 = icmp eq i64 %bf.cast411, 32, !dbg !6296
  br i1 %cmp42, label %if.then43, label %if.end55, !dbg !6297

if.then43:                                        ; preds = %land.lhs.true
  %type45 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6298
  %9 = load %union.tree_node*, %union.tree_node** %type45, align 8, !dbg !6298
  %call46 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #8, !dbg !6301
  %call47 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %9, %union.tree_node* %call46) #7, !dbg !6302
  %tobool48 = icmp eq i8 %call47, 0, !dbg !6302
  br i1 %tobool48, label %if.then49, label %if.end55, !dbg !6303

if.then49:                                        ; preds = %if.then43
  %call50 = tail call fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %stmt) #8, !dbg !6304
  %call51 = tail call %union.tree_node* @build1_stat(i32 118, %union.tree_node* %call50, %union.tree_node* nonnull %call36) #7, !dbg !6304
  tail call fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %stmt, %union.tree_node* %call51) #8, !dbg !6305
  br label %if.end55, !dbg !6305

if.end55:                                         ; preds = %if.then3, %if.then17, %if.then43, %if.then34, %if.else31, %if.then49, %land.lhs.true, %if.then8, %if.then24, %if.else
  ret void, !dbg !6306
}

declare dso_local void @gimple_set_modified(%union.gimple_statement_d*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @lto_tag_is_gimple_code_p(i32 %tag) unnamed_addr #0 !dbg !6307 {
entry:
  call void @llvm.dbg.value(metadata i32 %tag, metadata !6311, metadata !DIExpression()), !dbg !6312
  %tag.off = add i32 %tag, -189, !dbg !6313
  %0 = icmp ult i32 %tag.off, 35, !dbg !6313
  %conv = zext i1 %0 to i8, !dbg !6314
  ret i8 %conv, !dbg !6315
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6316 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6320, metadata !DIExpression()), !dbg !6321
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !6322
  %bf.load = load i32, i32* %0, align 8, !dbg !6322
  %bf.clear = and i32 %bf.load, 255, !dbg !6322
  ret i32 %bf.clear, !dbg !6323
}

declare dso_local %union.tree_node* @build_string(i32, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !6324 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !6326, metadata !DIExpression()), !dbg !6327
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !6328
  %cmp = icmp eq i32 %call, 0, !dbg !6329
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !6330

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !6331
  %cmp2 = icmp ult i32 %call1, 10, !dbg !6332
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !6333
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6334 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6336, metadata !DIExpression()), !dbg !6337
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !6338
  %0 = load i32, i32* %num_ops, align 4, !dbg !6338
  ret i32 %0, !dbg !6339
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6340 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6344, metadata !DIExpression()), !dbg !6346
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !6347
  %idxprom = zext i32 %call to i64, !dbg !6348
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !6348
  %0 = load i64, i64* %arrayidx, align 8, !dbg !6348
  call void @llvm.dbg.value(metadata i64 %0, metadata !6345, metadata !DIExpression()), !dbg !6346
  %cmp = icmp eq i64 %0, 0, !dbg !6349
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6349

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6349
  br label %cond.end, !dbg !6349

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !6350
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !6351
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !6352
  ret %union.tree_node** %2, !dbg !6353
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6354 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6358, metadata !DIExpression()), !dbg !6359
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !6360
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !6361
  ret i32 %call1, !dbg !6362
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !6363 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !6367, metadata !DIExpression()), !dbg !6368
  %idxprom = zext i32 %code to i64, !dbg !6369
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !6369
  %0 = load i32, i32* %arrayidx, align 4, !dbg !6369
  ret i32 %0, !dbg !6370
}

declare dso_local %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_complex_type(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !6371 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6373, metadata !DIExpression()), !dbg !6375
  call void @llvm.dbg.value(metadata i32 %i, metadata !6374, metadata !DIExpression()), !dbg !6375
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !6376
  %tobool = icmp eq i8 %call, 0, !dbg !6376
  br i1 %tobool, label %return, label %if.then, !dbg !6378

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !6379
  %idxprom = zext i32 %i to i64, !dbg !6379
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !6379
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6379
  br label %return, !dbg !6381

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !6382
  ret %union.tree_node* %retval.0, !dbg !6383
}

declare dso_local zeroext i8 @gimple_assign_single_p(%union.gimple_statement_d*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6384 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6386, metadata !DIExpression()), !dbg !6387
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !6388
  ret %union.tree_node* %call, !dbg !6389
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_assign_rhs1(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6390 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6392, metadata !DIExpression()), !dbg !6393
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !6394
  ret %union.tree_node* %call, !dbg !6395
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_rhs1(%union.gimple_statement_d* %gs, %union.tree_node* %rhs) unnamed_addr #0 !dbg !6396 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6398, metadata !DIExpression()), !dbg !6400
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs, metadata !6399, metadata !DIExpression()), !dbg !6400
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 1, %union.tree_node* %rhs) #8, !dbg !6401
  ret void, !dbg !6402
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_assign_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !6403 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6405, metadata !DIExpression()), !dbg !6407
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6406, metadata !DIExpression()), !dbg !6407
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #8, !dbg !6408
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !6409
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6411

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6412
  %bf.load = load i64, i64* %0, align 8, !dbg !6412
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6413
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !6413
  br i1 %cmp, label %if.then, label %if.end, !dbg !6414

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6415
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6415
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !6416
  br label %if.end, !dbg !6415

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !6417
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @is_gimple_call(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6418 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6420, metadata !DIExpression()), !dbg !6421
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !6422
  %cmp = icmp eq i32 %call, 8, !dbg !6423
  %conv1 = zext i1 %cmp to i8, !dbg !6422
  ret i8 %conv1, !dbg !6424
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_lhs(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6425 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6427, metadata !DIExpression()), !dbg !6428
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 0) #8, !dbg !6429
  ret %union.tree_node* %call, !dbg !6430
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_return_type(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6431 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6433, metadata !DIExpression()), !dbg !6436
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #8, !dbg !6437
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6434, metadata !DIExpression()), !dbg !6436
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6438
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !6438
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !6438
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !6439
  %2 = bitcast %union.tree_node** %type3 to %struct.tree_common**, !dbg !6439
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !6439
  %type5 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !6440
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !6440
  ret %union.tree_node* %4, !dbg !6441
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @gimple_call_set_lhs(%union.gimple_statement_d* %gs, %union.tree_node* %lhs) unnamed_addr #0 !dbg !6442 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6444, metadata !DIExpression()), !dbg !6446
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs, metadata !6445, metadata !DIExpression()), !dbg !6446
  tail call fastcc void @gimple_set_op(%union.gimple_statement_d* %gs, i32 0, %union.tree_node* %lhs) #8, !dbg !6447
  %tobool = icmp eq %union.tree_node* %lhs, null, !dbg !6448
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6450

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6451
  %bf.load = load i64, i64* %0, align 8, !dbg !6451
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6452
  %cmp = icmp eq i64 %bf.cast1, 141, !dbg !6452
  br i1 %cmp, label %if.then, label %if.end, !dbg !6453

if.then:                                          ; preds = %land.lhs.true
  %def_stmt = getelementptr inbounds %union.tree_node, %union.tree_node* %lhs, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6454
  %1 = bitcast %union.tree_node** %def_stmt to %union.gimple_statement_d**, !dbg !6454
  store %union.gimple_statement_d* %gs, %union.gimple_statement_d** %1, align 8, !dbg !6455
  br label %if.end, !dbg !6454

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  ret void, !dbg !6456
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6457 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6459, metadata !DIExpression()), !dbg !6460
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !6461
  ret %union.tree_node* %call, !dbg !6462
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6463 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6467, metadata !DIExpression()), !dbg !6469
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6468, metadata !DIExpression()), !dbg !6469
  br label %land.end, !dbg !6470

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6470
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6470
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6470
  ret %union.tree_node* %0, !dbg !6470
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !6471 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6477, metadata !DIExpression()), !dbg !6478
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !6479
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6479

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !6479
  %0 = load i32, i32* %num, align 8, !dbg !6479
  br label %cond.end, !dbg !6479

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6479
  ret i32 %cond, !dbg !6479
}

declare dso_local %union.gimple_statement_d* @create_phi_node(%union.tree_node*, %struct.basic_block_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6480 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !6484, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !6485, metadata !DIExpression()), !dbg !6486
  br label %land.end, !dbg !6487

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !6487
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6487
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !6487
  ret %struct.edge_def* %0, !dbg !6487
}

declare dso_local void @add_phi_arg(%union.gimple_statement_d*, %union.tree_node*, %struct.edge_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.gimple_seq_node_d* @gimple_seq_first(%struct.gimple_seq_d* %s) unnamed_addr #0 !dbg !6488 {
entry:
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d* %s, metadata !6495, metadata !DIExpression()), !dbg !6496
  %tobool = icmp eq %struct.gimple_seq_d* %s, null, !dbg !6497
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6497

cond.true:                                        ; preds = %entry
  %first = getelementptr inbounds %struct.gimple_seq_d, %struct.gimple_seq_d* %s, i64 0, i32 0, !dbg !6498
  %0 = load %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d** %first, align 8, !dbg !6498
  br label %cond.end, !dbg !6497

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.gimple_seq_node_d* [ %0, %cond.true ], [ null, %entry ], !dbg !6497
  ret %struct.gimple_seq_node_d* %cond, !dbg !6499
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !6500 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !6505
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6505

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6505
  br label %cond.end, !dbg !6505

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !6506
  ret %struct.VEC_edge_gc* %0, !dbg !6507
}

; Function Attrs: nounwind uwtable
define internal fastcc void @fixup_call_stmt_edges_1(%struct.cgraph_node* %node, %union.gimple_statement_d** %stmts) unnamed_addr #5 !dbg !6508 {
entry:
  call void @llvm.dbg.value(metadata %struct.cgraph_node* %node, metadata !6510, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.value(metadata %union.gimple_statement_d** %stmts, metadata !6511, metadata !DIExpression()), !dbg !6513
  %callees = getelementptr inbounds %struct.cgraph_node, %struct.cgraph_node* %node, i64 0, i32 1, !dbg !6514
  br label %for.cond, !dbg !6516

for.cond:                                         ; preds = %for.body, %entry
  %cedge.0.in = phi %struct.cgraph_edge** [ %callees, %entry ], [ %next_callee, %for.body ]
  %cedge.0 = load %struct.cgraph_edge*, %struct.cgraph_edge** %cedge.0.in, align 8, !dbg !6517
  call void @llvm.dbg.value(metadata %struct.cgraph_edge* %cedge.0, metadata !6512, metadata !DIExpression()), !dbg !6513
  %tobool = icmp eq %struct.cgraph_edge* %cedge.0, null, !dbg !6518
  br i1 %tobool, label %for.end, label %for.body, !dbg !6518

for.body:                                         ; preds = %for.cond
  %lto_stmt_uid = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cedge.0, i64 0, i32 10, !dbg !6519
  %0 = load i32, i32* %lto_stmt_uid, align 4, !dbg !6519
  %idxprom = zext i32 %0 to i64, !dbg !6521
  %arrayidx = getelementptr inbounds %union.gimple_statement_d*, %union.gimple_statement_d** %stmts, i64 %idxprom, !dbg !6521
  %1 = bitcast %union.gimple_statement_d** %arrayidx to i64*, !dbg !6521
  %2 = load i64, i64* %1, align 8, !dbg !6521
  %call_stmt = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cedge.0, i64 0, i32 7, !dbg !6522
  %3 = bitcast %union.gimple_statement_d** %call_stmt to i64*, !dbg !6523
  store i64 %2, i64* %3, align 8, !dbg !6523
  %next_callee = getelementptr inbounds %struct.cgraph_edge, %struct.cgraph_edge* %cedge.0, i64 0, i32 6, !dbg !6524
  br label %for.cond, !dbg !6525, !llvm.loop !6526

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6528
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alias_pair* @VEC_alias_pair_gc_safe_push(%struct.VEC_alias_pair_gc** %vec_, %struct.alias_pair* %obj_) unnamed_addr #0 !dbg !6529 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_gc** @alias_pairs, metadata !6536, metadata !DIExpression()), !dbg !6538
  call void @llvm.dbg.value(metadata %struct.alias_pair* null, metadata !6537, metadata !DIExpression()), !dbg !6538
  %call = tail call fastcc i32 @VEC_alias_pair_gc_reserve(%struct.VEC_alias_pair_gc** nonnull @alias_pairs, i32 1) #8, !dbg !6539
  %0 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !6539
  %tobool = icmp eq %struct.VEC_alias_pair_gc* %0, null, !dbg !6539
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6539

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %0, i64 0, i32 0, !dbg !6539
  br label %cond.end, !dbg !6539

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_alias_pair_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6539
  %call1 = tail call fastcc %struct.alias_pair* @VEC_alias_pair_base_quick_push(%struct.VEC_alias_pair_base* %cond, %struct.alias_pair* null) #8, !dbg !6539
  ret %struct.alias_pair* %call1, !dbg !6539
}

declare dso_local i8* @lto_get_decl_name_mapping(%struct.lto_file_decl_data*, i8*) local_unnamed_addr #2

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_pair_gc_reserve(%struct.VEC_alias_pair_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6540 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_gc** @alias_pairs, metadata !6544, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.value(metadata i32 1, metadata !6545, metadata !DIExpression()), !dbg !6547
  %0 = load %struct.VEC_alias_pair_gc*, %struct.VEC_alias_pair_gc** @alias_pairs, align 8, !dbg !6548
  %tobool = icmp eq %struct.VEC_alias_pair_gc* %0, null, !dbg !6548
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6548

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_alias_pair_gc, %struct.VEC_alias_pair_gc* %0, i64 0, i32 0, !dbg !6548
  br label %cond.end, !dbg !6548

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_alias_pair_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6548
  %call = tail call fastcc i32 @VEC_alias_pair_base_space(%struct.VEC_alias_pair_base* %cond, i32 1) #8, !dbg !6548
  %tobool1 = icmp eq i32 %call, 0, !dbg !6548
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6548
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6546, metadata !DIExpression()), !dbg !6547
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6548

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_alias_pair_gc** @alias_pairs to i8**), align 8, !dbg !6549
  %call3 = tail call i8* @vec_gc_o_reserve(i8* %1, i32 1, i64 8, i64 16) #7, !dbg !6549
  store i8* %call3, i8** bitcast (%struct.VEC_alias_pair_gc** @alias_pairs to i8**), align 8, !dbg !6549
  br label %if.end, !dbg !6549

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6548
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.alias_pair* @VEC_alias_pair_base_quick_push(%struct.VEC_alias_pair_base* %vec_, %struct.alias_pair* %obj_) unnamed_addr #0 !dbg !6551 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_base* %vec_, metadata !6556, metadata !DIExpression()), !dbg !6559
  call void @llvm.dbg.value(metadata %struct.alias_pair* null, metadata !6557, metadata !DIExpression()), !dbg !6559
  %num1 = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 0, !dbg !6560
  %0 = load i32, i32* %num1, align 8, !dbg !6560
  %inc = add i32 %0, 1, !dbg !6560
  store i32 %inc, i32* %num1, align 8, !dbg !6560
  %idxprom = zext i32 %0 to i64, !dbg !6560
  %arrayidx = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6560
  call void @llvm.dbg.value(metadata %struct.alias_pair* %arrayidx, metadata !6558, metadata !DIExpression()), !dbg !6559
  ret %struct.alias_pair* %arrayidx, !dbg !6560
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_alias_pair_base_space(%struct.VEC_alias_pair_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6561 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_alias_pair_base* %vec_, metadata !6565, metadata !DIExpression()), !dbg !6567
  call void @llvm.dbg.value(metadata i32 1, metadata !6566, metadata !DIExpression()), !dbg !6567
  %tobool = icmp eq %struct.VEC_alias_pair_base* %vec_, null, !dbg !6568
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6568

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 1, !dbg !6568
  %0 = load i32, i32* %alloc, align 4, !dbg !6568
  %num = getelementptr inbounds %struct.VEC_alias_pair_base, %struct.VEC_alias_pair_base* %vec_, i64 0, i32 0, !dbg !6568
  %1 = load i32, i32* %num, align 8, !dbg !6568
  %cmp1 = icmp ne i32 %0, %1, !dbg !6568
  %phitmp = zext i1 %cmp1 to i32, !dbg !6568
  br label %cond.end, !dbg !6568

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6568

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6568
}

declare dso_local i8* @vec_gc_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_bitpack_word_t_heap_reserve(%struct.VEC_bitpack_word_t_heap** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6569 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitpack_word_t_heap** %vec_, metadata !6573, metadata !DIExpression()), !dbg !6576
  call void @llvm.dbg.value(metadata i32 1, metadata !6574, metadata !DIExpression()), !dbg !6576
  %0 = load %struct.VEC_bitpack_word_t_heap*, %struct.VEC_bitpack_word_t_heap** %vec_, align 8, !dbg !6577
  %tobool = icmp eq %struct.VEC_bitpack_word_t_heap* %0, null, !dbg !6577
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6577

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_bitpack_word_t_heap, %struct.VEC_bitpack_word_t_heap* %0, i64 0, i32 0, !dbg !6577
  br label %cond.end, !dbg !6577

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_bitpack_word_t_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6577
  %call = tail call fastcc i32 @VEC_bitpack_word_t_base_space(%struct.VEC_bitpack_word_t_base* %cond, i32 1) #8, !dbg !6577
  %tobool1 = icmp eq i32 %call, 0, !dbg !6577
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6577
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6575, metadata !DIExpression()), !dbg !6576
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6577

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_bitpack_word_t_heap** %vec_ to i8**, !dbg !6578
  %2 = load i8*, i8** %1, align 8, !dbg !6578
  %call3 = tail call i8* @vec_heap_o_reserve(i8* %2, i32 1, i64 8, i64 8) #7, !dbg !6578
  store i8* %call3, i8** %1, align 8, !dbg !6578
  br label %if.end, !dbg !6578

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6577
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i64* @VEC_bitpack_word_t_base_quick_push(%struct.VEC_bitpack_word_t_base* %vec_, i64 %obj_) unnamed_addr #0 !dbg !6580 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitpack_word_t_base* %vec_, metadata !6585, metadata !DIExpression()), !dbg !6588
  call void @llvm.dbg.value(metadata i64 %obj_, metadata !6586, metadata !DIExpression()), !dbg !6588
  %num1 = getelementptr inbounds %struct.VEC_bitpack_word_t_base, %struct.VEC_bitpack_word_t_base* %vec_, i64 0, i32 0, !dbg !6589
  %0 = load i32, i32* %num1, align 8, !dbg !6589
  %inc = add i32 %0, 1, !dbg !6589
  store i32 %inc, i32* %num1, align 8, !dbg !6589
  %idxprom = zext i32 %0 to i64, !dbg !6589
  %arrayidx = getelementptr inbounds %struct.VEC_bitpack_word_t_base, %struct.VEC_bitpack_word_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6589
  call void @llvm.dbg.value(metadata i64* %arrayidx, metadata !6587, metadata !DIExpression()), !dbg !6588
  store i64 %obj_, i64* %arrayidx, align 8, !dbg !6589
  ret i64* %arrayidx, !dbg !6589
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_bitpack_word_t_base_space(%struct.VEC_bitpack_word_t_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6590 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_bitpack_word_t_base* %vec_, metadata !6594, metadata !DIExpression()), !dbg !6596
  call void @llvm.dbg.value(metadata i32 1, metadata !6595, metadata !DIExpression()), !dbg !6596
  %tobool = icmp eq %struct.VEC_bitpack_word_t_base* %vec_, null, !dbg !6597
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6597

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_bitpack_word_t_base, %struct.VEC_bitpack_word_t_base* %vec_, i64 0, i32 1, !dbg !6597
  %0 = load i32, i32* %alloc, align 4, !dbg !6597
  %num = getelementptr inbounds %struct.VEC_bitpack_word_t_base, %struct.VEC_bitpack_word_t_base* %vec_, i64 0, i32 0, !dbg !6597
  %1 = load i32, i32* %num, align 8, !dbg !6597
  %cmp1 = icmp ne i32 %0, %1, !dbg !6597
  %phitmp = zext i1 %cmp1 to i32, !dbg !6597
  br label %cond.end, !dbg !6597

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6597

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6597
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @lto_file_decl_data_get_type(%struct.lto_file_decl_data* %data, i32 %idx) unnamed_addr #0 !dbg !6598 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %data, metadata !6600, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.value(metadata i32 %idx, metadata !6601, metadata !DIExpression()), !dbg !6603
  %current_decl_state = getelementptr inbounds %struct.lto_file_decl_data, %struct.lto_file_decl_data* %data, i64 0, i32 0, !dbg !6604
  %0 = load %struct.lto_in_decl_state*, %struct.lto_in_decl_state** %current_decl_state, align 8, !dbg !6604
  call void @llvm.dbg.value(metadata %struct.lto_in_decl_state* %0, metadata !6602, metadata !DIExpression()), !dbg !6603
  %size = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 0, i32 1, !dbg !6604
  %1 = load i32, i32* %size, align 8, !dbg !6604
  %cmp = icmp ugt i32 %1, %idx, !dbg !6604
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6604

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 1041, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6604
  br label %cond.end, !dbg !6604

cond.end:                                         ; preds = %entry, %cond.true
  %trees = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 0, i32 0, !dbg !6604
  %2 = load %union.tree_node**, %union.tree_node*** %trees, align 8, !dbg !6604
  %idxprom = zext i32 %idx to i64, !dbg !6604
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %idxprom, !dbg !6604
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6604
  ret %union.tree_node* %3, !dbg !6604
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @lto_file_decl_data_get_field_decl(%struct.lto_file_decl_data* %data, i32 %idx) unnamed_addr #0 !dbg !6605 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %data, metadata !6607, metadata !DIExpression()), !dbg !6610
  call void @llvm.dbg.value(metadata i32 %idx, metadata !6608, metadata !DIExpression()), !dbg !6610
  %current_decl_state = getelementptr inbounds %struct.lto_file_decl_data, %struct.lto_file_decl_data* %data, i64 0, i32 0, !dbg !6611
  %0 = load %struct.lto_in_decl_state*, %struct.lto_in_decl_state** %current_decl_state, align 8, !dbg !6611
  call void @llvm.dbg.value(metadata %struct.lto_in_decl_state* %0, metadata !6609, metadata !DIExpression()), !dbg !6610
  %size = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 1, i32 1, !dbg !6611
  %1 = load i32, i32* %size, align 8, !dbg !6611
  %cmp = icmp ugt i32 %1, %idx, !dbg !6611
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6611

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 1042, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6611
  br label %cond.end, !dbg !6611

cond.end:                                         ; preds = %entry, %cond.true
  %trees = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 1, i32 0, !dbg !6611
  %2 = load %union.tree_node**, %union.tree_node*** %trees, align 8, !dbg !6611
  %idxprom = zext i32 %idx to i64, !dbg !6611
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %idxprom, !dbg !6611
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6611
  ret %union.tree_node* %3, !dbg !6611
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @lto_file_decl_data_get_fn_decl(%struct.lto_file_decl_data* %data, i32 %idx) unnamed_addr #0 !dbg !6612 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %data, metadata !6614, metadata !DIExpression()), !dbg !6617
  call void @llvm.dbg.value(metadata i32 %idx, metadata !6615, metadata !DIExpression()), !dbg !6617
  %current_decl_state = getelementptr inbounds %struct.lto_file_decl_data, %struct.lto_file_decl_data* %data, i64 0, i32 0, !dbg !6618
  %0 = load %struct.lto_in_decl_state*, %struct.lto_in_decl_state** %current_decl_state, align 8, !dbg !6618
  call void @llvm.dbg.value(metadata %struct.lto_in_decl_state* %0, metadata !6616, metadata !DIExpression()), !dbg !6617
  %size = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 2, i32 1, !dbg !6618
  %1 = load i32, i32* %size, align 8, !dbg !6618
  %cmp = icmp ugt i32 %1, %idx, !dbg !6618
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6618

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 1043, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6618
  br label %cond.end, !dbg !6618

cond.end:                                         ; preds = %entry, %cond.true
  %trees = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 2, i32 0, !dbg !6618
  %2 = load %union.tree_node**, %union.tree_node*** %trees, align 8, !dbg !6618
  %idxprom = zext i32 %idx to i64, !dbg !6618
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %idxprom, !dbg !6618
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6618
  ret %union.tree_node* %3, !dbg !6618
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @lto_file_decl_data_get_type_decl(%struct.lto_file_decl_data* %data, i32 %idx) unnamed_addr #0 !dbg !6619 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %data, metadata !6621, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.value(metadata i32 %idx, metadata !6622, metadata !DIExpression()), !dbg !6624
  %current_decl_state = getelementptr inbounds %struct.lto_file_decl_data, %struct.lto_file_decl_data* %data, i64 0, i32 0, !dbg !6625
  %0 = load %struct.lto_in_decl_state*, %struct.lto_in_decl_state** %current_decl_state, align 8, !dbg !6625
  call void @llvm.dbg.value(metadata %struct.lto_in_decl_state* %0, metadata !6623, metadata !DIExpression()), !dbg !6624
  %size = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 4, i32 1, !dbg !6625
  %1 = load i32, i32* %size, align 8, !dbg !6625
  %cmp = icmp ugt i32 %1, %idx, !dbg !6625
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6625

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 1045, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6625
  br label %cond.end, !dbg !6625

cond.end:                                         ; preds = %entry, %cond.true
  %trees = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 4, i32 0, !dbg !6625
  %2 = load %union.tree_node**, %union.tree_node*** %trees, align 8, !dbg !6625
  %idxprom = zext i32 %idx to i64, !dbg !6625
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %idxprom, !dbg !6625
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6625
  ret %union.tree_node* %3, !dbg !6625
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @lto_file_decl_data_get_namespace_decl(%struct.lto_file_decl_data* %data, i32 %idx) unnamed_addr #0 !dbg !6626 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_file_decl_data* %data, metadata !6628, metadata !DIExpression()), !dbg !6631
  call void @llvm.dbg.value(metadata i32 %idx, metadata !6629, metadata !DIExpression()), !dbg !6631
  %current_decl_state = getelementptr inbounds %struct.lto_file_decl_data, %struct.lto_file_decl_data* %data, i64 0, i32 0, !dbg !6632
  %0 = load %struct.lto_in_decl_state*, %struct.lto_in_decl_state** %current_decl_state, align 8, !dbg !6632
  call void @llvm.dbg.value(metadata %struct.lto_in_decl_state* %0, metadata !6630, metadata !DIExpression()), !dbg !6631
  %size = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 5, i32 1, !dbg !6632
  %1 = load i32, i32* %size, align 8, !dbg !6632
  %cmp = icmp ugt i32 %1, %idx, !dbg !6632
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !6632

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 1046, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6632
  br label %cond.end, !dbg !6632

cond.end:                                         ; preds = %entry, %cond.true
  %trees = getelementptr inbounds %struct.lto_in_decl_state, %struct.lto_in_decl_state* %0, i64 0, i32 0, i64 5, i32 0, !dbg !6632
  %2 = load %union.tree_node**, %union.tree_node*** %trees, align 8, !dbg !6632
  %idxprom = zext i32 %idx to i64, !dbg !6632
  %arrayidx3 = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %idxprom, !dbg !6632
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx3, align 8, !dbg !6632
  ret %union.tree_node* %3, !dbg !6632
}

declare dso_local void @varpool_mark_needed_node(%struct.varpool_node*) local_unnamed_addr #2

declare dso_local %struct.varpool_node* @varpool_node(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @lto_streamer_cache_get(%struct.lto_streamer_cache_d*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @lto_tag_to_tree_code(i32 %tag) unnamed_addr #0 !dbg !6633 {
entry:
  call void @llvm.dbg.value(metadata i32 %tag, metadata !6637, metadata !DIExpression()), !dbg !6638
  %call = tail call fastcc zeroext i8 @lto_tag_is_tree_code_p(i32 %tag) #8, !dbg !6639
  %tobool = icmp eq i8 %call, 0, !dbg !6639
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6639

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0), i32 926, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6639
  br label %cond.end, !dbg !6639

cond.end:                                         ; preds = %entry, %cond.true
  %sub = add i32 %tag, -1, !dbg !6640
  ret i32 %sub, !dbg !6641
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @lto_tag_is_tree_code_p(i32 %tag) unnamed_addr #0 !dbg !6642 {
entry:
  call void @llvm.dbg.value(metadata i32 %tag, metadata !6644, metadata !DIExpression()), !dbg !6645
  %tag.off = add i32 %tag, -1, !dbg !6646
  %0 = icmp ult i32 %tag.off, 188, !dbg !6646
  %conv = zext i1 %0 to i8, !dbg !6647
  ret i8 %conv, !dbg !6648
}

declare dso_local void @fatal_error(i8*, ...) local_unnamed_addr #2

declare dso_local void @set_builtin_user_assembler_name(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst_wide(%union.tree_node*, i64, i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lto_materialize_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in, i32 %tag, i32* %ix_p) unnamed_addr #5 !dbg !6649 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !6654, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !6655, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i32 %tag, metadata !6656, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata i32* %ix_p, metadata !6657, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6660, metadata !DIExpression()), !dbg !6670
  %call = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !6671
  call void @llvm.dbg.value(metadata i64 %call, metadata !6661, metadata !DIExpression()), !dbg !6670
  %0 = add i64 %call, 2147483648, !dbg !6672
  %1 = icmp ult i64 %0, 4294967296, !dbg !6672
  br i1 %1, label %cond.end, label %cond.true, !dbg !6672

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1899, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6672
  br label %cond.end, !dbg !6672

cond.end:                                         ; preds = %entry, %cond.true
  %conv3 = trunc i64 %call to i32, !dbg !6673
  store i32 %conv3, i32* %ix_p, align 4, !dbg !6674
  %call4 = tail call fastcc i32 @lto_tag_to_tree_code(i32 %tag) #8, !dbg !6675
  call void @llvm.dbg.value(metadata i32 %call4, metadata !6659, metadata !DIExpression()), !dbg !6670
  %cmp5 = icmp eq i32 %call4, 141, !dbg !6676
  br i1 %cmp5, label %cond.true7, label %cond.end9, !dbg !6676

cond.true7:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1914, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6676
  br label %cond.end9, !dbg !6676

cond.end9:                                        ; preds = %cond.end, %cond.true7
  %idxprom = zext i32 %call4 to i64, !dbg !6677
  %arrayidx11 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom, i64 6, !dbg !6677
  %2 = load i8, i8* %arrayidx11, align 2, !dbg !6677
  %tobool = icmp eq i8 %2, 0, !dbg !6677
  br i1 %tobool, label %if.else, label %if.then, !dbg !6678

if.then:                                          ; preds = %cond.end9
  %call12 = tail call fastcc %union.tree_node* @input_string_cst(%struct.data_in* %data_in, %struct.lto_input_block* %ib) #8, !dbg !6679
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !6660, metadata !DIExpression()), !dbg !6670
  br label %if.end42, !dbg !6680

if.else:                                          ; preds = %cond.end9
  %arrayidx15 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom, i64 8, !dbg !6681
  %3 = load i8, i8* %arrayidx15, align 8, !dbg !6681
  %tobool16 = icmp eq i8 %3, 0, !dbg !6681
  br i1 %tobool16, label %if.else19, label %if.then17, !dbg !6682

if.then17:                                        ; preds = %if.else
  %call18 = tail call fastcc %union.tree_node* @input_identifier(%struct.data_in* %data_in, %struct.lto_input_block* %ib) #8, !dbg !6683
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !6660, metadata !DIExpression()), !dbg !6670
  br label %if.end42, !dbg !6684

if.else19:                                        ; preds = %if.else
  %arrayidx22 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom, i64 24, !dbg !6685
  %4 = load i8, i8* %arrayidx22, align 8, !dbg !6685
  %tobool23 = icmp eq i8 %4, 0, !dbg !6685
  br i1 %tobool23, label %if.else28, label %if.then24, !dbg !6686

if.then24:                                        ; preds = %if.else19
  %call25 = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !6687
  call void @llvm.dbg.value(metadata i64 %call25, metadata !6662, metadata !DIExpression()), !dbg !6688
  %conv26 = trunc i64 %call25 to i32, !dbg !6689
  %call27 = tail call %union.tree_node* @make_tree_vec_stat(i32 %conv26) #7, !dbg !6689
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !6660, metadata !DIExpression()), !dbg !6670
  br label %if.end42, !dbg !6690

if.else28:                                        ; preds = %if.else19
  %arrayidx31 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom, i64 28, !dbg !6691
  %5 = load i8, i8* %arrayidx31, align 4, !dbg !6691
  %tobool32 = icmp eq i8 %5, 0, !dbg !6691
  br i1 %tobool32, label %if.else38, label %if.then33, !dbg !6692

if.then33:                                        ; preds = %if.else28
  %call35 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !6693
  call void @llvm.dbg.value(metadata i64 %call35, metadata !6667, metadata !DIExpression()), !dbg !6694
  %conv36 = trunc i64 %call35 to i32, !dbg !6695
  %call37 = tail call %union.tree_node* @make_tree_binfo_stat(i32 %conv36) #7, !dbg !6695
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !6660, metadata !DIExpression()), !dbg !6670
  br label %if.end42, !dbg !6696

if.else38:                                        ; preds = %if.else28
  %call39 = tail call %union.tree_node* @make_node_stat(i32 %call4) #7, !dbg !6697
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !6660, metadata !DIExpression()), !dbg !6670
  br label %if.end42

if.end42:                                         ; preds = %if.then17, %if.then33, %if.else38, %if.then24, %if.then
  %result.3 = phi %union.tree_node* [ %call12, %if.then ], [ %call18, %if.then17 ], [ %call27, %if.then24 ], [ %call37, %if.then33 ], [ %call39, %if.else38 ], !dbg !6699
  call void @llvm.dbg.value(metadata %union.tree_node* %result.3, metadata !6660, metadata !DIExpression()), !dbg !6670
  %call43 = tail call %struct.bitpack_d* @lto_input_bitpack(%struct.lto_input_block* %ib) #8, !dbg !6700
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %call43, metadata !6658, metadata !DIExpression()), !dbg !6670
  %call44 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %call43, i32 16) #7, !dbg !6701
  %conv45 = trunc i64 %call44 to i32, !dbg !6702
  call void @llvm.dbg.value(metadata i32 %conv45, metadata !6659, metadata !DIExpression()), !dbg !6670
  %call46 = tail call fastcc i32 @lto_tree_code_to_tag(i32 %conv45) #8, !dbg !6703
  tail call fastcc void @lto_tag_check(i32 %call46, i32 %tag) #8, !dbg !6704
  tail call fastcc void @unpack_value_fields(%struct.bitpack_d* %call43, %union.tree_node* %result.3) #8, !dbg !6705
  tail call void @bitpack_delete(%struct.bitpack_d* %call43) #7, !dbg !6706
  %reader_cache = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 10, !dbg !6707
  %6 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %reader_cache, align 8, !dbg !6707
  %call48 = tail call zeroext i8 @lto_streamer_cache_insert_at(%struct.lto_streamer_cache_d* %6, %union.tree_node* %result.3, i32 %conv3) #7, !dbg !6708
  ret %union.tree_node* %result.3, !dbg !6709
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !6710 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !6714, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !6715, metadata !DIExpression()), !dbg !6718
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6716, metadata !DIExpression()), !dbg !6718
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6719
  %bf.load = load i64, i64* %0, align 8, !dbg !6719
  %bf.cast = and i64 %bf.load, 65535, !dbg !6719
  call void @llvm.dbg.value(metadata i64 %bf.cast, metadata !6717, metadata !DIExpression()), !dbg !6718
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 1, !dbg !6720
  %1 = load i8, i8* %arrayidx1, align 1, !dbg !6720
  %tobool = icmp eq i8 %1, 0, !dbg !6720
  br i1 %tobool, label %if.end, label %if.then, !dbg !6722

if.then:                                          ; preds = %entry
  tail call fastcc void @lto_input_ts_common_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6723
  br label %if.end, !dbg !6723

if.end:                                           ; preds = %entry, %if.then
  %arrayidx4 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 5, !dbg !6724
  %2 = load i8, i8* %arrayidx4, align 1, !dbg !6724
  %tobool5 = icmp eq i8 %2, 0, !dbg !6724
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6726

if.then6:                                         ; preds = %if.end
  tail call fastcc void @lto_input_ts_vector_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6727
  br label %if.end7, !dbg !6727

if.end7:                                          ; preds = %if.end, %if.then6
  %arrayidx10 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 7, !dbg !6728
  %3 = load i8, i8* %arrayidx10, align 1, !dbg !6728
  %tobool11 = icmp eq i8 %3, 0, !dbg !6728
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !6730

if.then12:                                        ; preds = %if.end7
  tail call fastcc void @lto_input_ts_complex_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6731
  br label %if.end13, !dbg !6731

if.end13:                                         ; preds = %if.end7, %if.then12
  %arrayidx16 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 9, !dbg !6732
  %4 = load i8, i8* %arrayidx16, align 1, !dbg !6732
  %tobool17 = icmp eq i8 %4, 0, !dbg !6732
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !6734

if.then18:                                        ; preds = %if.end13
  tail call fastcc void @lto_input_ts_decl_minimal_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6735
  br label %if.end19, !dbg !6735

if.end19:                                         ; preds = %if.end13, %if.then18
  %arrayidx22 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 10, !dbg !6736
  %5 = load i8, i8* %arrayidx22, align 2, !dbg !6736
  %tobool23 = icmp eq i8 %5, 0, !dbg !6736
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !6738

if.then24:                                        ; preds = %if.end19
  tail call fastcc void @lto_input_ts_decl_common_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6739
  br label %if.end25, !dbg !6739

if.end25:                                         ; preds = %if.end19, %if.then24
  %arrayidx28 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 12, !dbg !6740
  %6 = load i8, i8* %arrayidx28, align 4, !dbg !6740
  %tobool29 = icmp eq i8 %6, 0, !dbg !6740
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6742

if.then30:                                        ; preds = %if.end25
  tail call fastcc void @lto_input_ts_decl_non_common_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6743
  br label %if.end31, !dbg !6743

if.end31:                                         ; preds = %if.end25, %if.then30
  %arrayidx34 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 13, !dbg !6744
  %7 = load i8, i8* %arrayidx34, align 1, !dbg !6744
  %tobool35 = icmp eq i8 %7, 0, !dbg !6744
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !6746

if.then36:                                        ; preds = %if.end31
  tail call fastcc void @lto_input_ts_decl_with_vis_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6747
  br label %if.end37, !dbg !6747

if.end37:                                         ; preds = %if.end31, %if.then36
  %arrayidx40 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 14, !dbg !6748
  %8 = load i8, i8* %arrayidx40, align 2, !dbg !6748
  %tobool41 = icmp eq i8 %8, 0, !dbg !6748
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !6750

if.then42:                                        ; preds = %if.end37
  tail call fastcc void @lto_input_ts_field_decl_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6751
  br label %if.end43, !dbg !6751

if.end43:                                         ; preds = %if.end37, %if.then42
  %arrayidx46 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 21, !dbg !6752
  %9 = load i8, i8* %arrayidx46, align 1, !dbg !6752
  %tobool47 = icmp eq i8 %9, 0, !dbg !6752
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !6754

if.then48:                                        ; preds = %if.end43
  tail call fastcc void @lto_input_ts_function_decl_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6755
  br label %if.end49, !dbg !6755

if.end49:                                         ; preds = %if.end43, %if.then48
  %arrayidx52 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 22, !dbg !6756
  %10 = load i8, i8* %arrayidx52, align 2, !dbg !6756
  %tobool53 = icmp eq i8 %10, 0, !dbg !6756
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !6758

if.then54:                                        ; preds = %if.end49
  tail call fastcc void @lto_input_ts_type_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6759
  br label %if.end55, !dbg !6759

if.end55:                                         ; preds = %if.end49, %if.then54
  %arrayidx58 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 23, !dbg !6760
  %11 = load i8, i8* %arrayidx58, align 1, !dbg !6760
  %tobool59 = icmp eq i8 %11, 0, !dbg !6760
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !6762

if.then60:                                        ; preds = %if.end55
  tail call fastcc void @lto_input_ts_list_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6763
  br label %if.end61, !dbg !6763

if.end61:                                         ; preds = %if.end55, %if.then60
  %arrayidx64 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 24, !dbg !6764
  %12 = load i8, i8* %arrayidx64, align 8, !dbg !6764
  %tobool65 = icmp eq i8 %12, 0, !dbg !6764
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !6766

if.then66:                                        ; preds = %if.end61
  tail call fastcc void @lto_input_ts_vec_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6767
  br label %if.end67, !dbg !6767

if.end67:                                         ; preds = %if.end61, %if.then66
  %arrayidx70 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 25, !dbg !6768
  %13 = load i8, i8* %arrayidx70, align 1, !dbg !6768
  %tobool71 = icmp eq i8 %13, 0, !dbg !6768
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !6770

if.then72:                                        ; preds = %if.end67
  tail call fastcc void @lto_input_ts_exp_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6771
  br label %if.end73, !dbg !6771

if.end73:                                         ; preds = %if.end67, %if.then72
  %arrayidx76 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 26, !dbg !6772
  %14 = load i8, i8* %arrayidx76, align 2, !dbg !6772
  %tobool77 = icmp eq i8 %14, 0, !dbg !6772
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !6774

if.then78:                                        ; preds = %if.end73
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2392, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6775
  br label %if.end79, !dbg !6777

if.end79:                                         ; preds = %if.end73, %if.then78
  %arrayidx82 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 27, !dbg !6778
  %15 = load i8, i8* %arrayidx82, align 1, !dbg !6778
  %tobool83 = icmp eq i8 %15, 0, !dbg !6778
  br i1 %tobool83, label %if.end85, label %if.then84, !dbg !6780

if.then84:                                        ; preds = %if.end79
  tail call fastcc void @lto_input_ts_block_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6781
  br label %if.end85, !dbg !6781

if.end85:                                         ; preds = %if.end79, %if.then84
  %arrayidx88 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 28, !dbg !6782
  %16 = load i8, i8* %arrayidx88, align 4, !dbg !6782
  %tobool89 = icmp eq i8 %16, 0, !dbg !6782
  br i1 %tobool89, label %if.end91, label %if.then90, !dbg !6784

if.then90:                                        ; preds = %if.end85
  tail call fastcc void @lto_input_ts_binfo_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6785
  br label %if.end91, !dbg !6785

if.end91:                                         ; preds = %if.end85, %if.then90
  %arrayidx94 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 29, !dbg !6786
  %17 = load i8, i8* %arrayidx94, align 1, !dbg !6786
  %tobool95 = icmp eq i8 %17, 0, !dbg !6786
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !6788

if.then96:                                        ; preds = %if.end91
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2404, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6789
  br label %if.end97, !dbg !6791

if.end97:                                         ; preds = %if.end91, %if.then96
  %arrayidx100 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 30, !dbg !6792
  %18 = load i8, i8* %arrayidx100, align 2, !dbg !6792
  %tobool101 = icmp eq i8 %18, 0, !dbg !6792
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !6794

if.then102:                                       ; preds = %if.end97
  tail call fastcc void @lto_input_ts_constructor_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) #8, !dbg !6795
  br label %if.end103, !dbg !6795

if.end103:                                        ; preds = %if.end97, %if.then102
  %arrayidx106 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 31, !dbg !6796
  %19 = load i8, i8* %arrayidx106, align 1, !dbg !6796
  %tobool107 = icmp eq i8 %19, 0, !dbg !6796
  br i1 %tobool107, label %if.end109, label %if.then108, !dbg !6798

if.then108:                                       ; preds = %if.end103
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2413, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6799
  br label %if.end109, !dbg !6801

if.end109:                                        ; preds = %if.end103, %if.then108
  %arrayidx112 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 32, !dbg !6802
  %20 = load i8, i8* %arrayidx112, align 16, !dbg !6802
  %tobool113 = icmp eq i8 %20, 0, !dbg !6802
  br i1 %tobool113, label %if.end115, label %if.then114, !dbg !6804

if.then114:                                       ; preds = %if.end109
  tail call void (i8*, ...) @sorry(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.13, i64 0, i64 0)) #7, !dbg !6805
  br label %if.end115, !dbg !6807

if.end115:                                        ; preds = %if.end109, %if.then114
  %arrayidx118 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 33, !dbg !6808
  %21 = load i8, i8* %arrayidx118, align 1, !dbg !6808
  %tobool119 = icmp eq i8 %21, 0, !dbg !6808
  br i1 %tobool119, label %if.end121, label %if.then120, !dbg !6810

if.then120:                                       ; preds = %if.end115
  tail call void (i8*, ...) @sorry(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14, i64 0, i64 0)) #7, !dbg !6811
  br label %if.end121, !dbg !6813

if.end121:                                        ; preds = %if.end115, %if.then120
  ret void, !dbg !6814
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @lto_stream_as_builtin_p(%union.tree_node* %expr) unnamed_addr #0 !dbg !6815 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6817, metadata !DIExpression()), !dbg !6818
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6819
  %bf.load = load i64, i64* %0, align 8, !dbg !6819
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6820
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !6820
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !6821

land.lhs.true:                                    ; preds = %entry
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6822
  %1 = load i32, i32* %locus, align 8, !dbg !6822
  %cmp1 = icmp ult i32 %1, 2, !dbg !6822
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !6823

land.rhs:                                         ; preds = %land.lhs.true
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 5, !dbg !6824
  %bf.load2 = load i32, i32* %built_in_class, align 8, !dbg !6824
  %bf.clear3 = and i32 %bf.load2, 6144, !dbg !6824
  %cmp4 = icmp eq i32 %bf.clear3, 6144, !dbg !6825
  br i1 %cmp4, label %land.end, label %lor.rhs, !dbg !6826

lor.rhs:                                          ; preds = %land.rhs
  %cmp10 = icmp eq i32 %bf.clear3, 4096, !dbg !6827
  %phitmp = zext i1 %cmp10 to i8, !dbg !6826
  br label %land.end, !dbg !6826

land.end:                                         ; preds = %land.rhs, %lor.rhs, %land.lhs.true, %entry
  %2 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs ]
  ret i8 %2, !dbg !6828
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_register_var_decl_in_symtab(%struct.data_in* %data_in, %union.tree_node* %decl) unnamed_addr #5 !dbg !6829 {
entry:
  %ix = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !6833, metadata !DIExpression()), !dbg !6849
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6834, metadata !DIExpression()), !dbg !6849
  %call = tail call %union.tree_node* @decl_function_context(%union.tree_node* %decl) #7, !dbg !6850
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !6851
  br i1 %cmp, label %if.then, label %if.end6, !dbg !6852

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6853
  %bf.load = load i64, i64* %0, align 8, !dbg !6853
  %bf.cast2 = and i64 %bf.load, 134217728, !dbg !6853
  %tobool = icmp eq i64 %bf.cast2, 0, !dbg !6853
  br i1 %tobool, label %if.then1, label %if.end6, !dbg !6854

if.then1:                                         ; preds = %if.then
  %call2 = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #7, !dbg !6855
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6855
  %str = bitcast i32* %id to i8**, !dbg !6855
  %1 = load i8*, i8** %str, align 8, !dbg !6855
  call void @llvm.dbg.value(metadata i8* %1, metadata !6835, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i8* %1, metadata !6841, metadata !DIExpression()), !dbg !6857
  %call3 = tail call i64 @strlen(i8* %1) #7, !dbg !6858
  %add = add i64 %call3, 32, !dbg !6858
  %2 = alloca i8, i64 %add, align 16, !dbg !6858
  call void @llvm.dbg.value(metadata i8* %2, metadata !6840, metadata !DIExpression()), !dbg !6856
  call void @llvm.dbg.value(metadata i8* %2, metadata !6844, metadata !DIExpression()), !dbg !6857
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6858
  %3 = load i32, i32* %uid, align 4, !dbg !6858
  %conv = zext i32 %3 to i64, !dbg !6858
  %call4 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i8* %1, i64 %conv) #7, !dbg !6858
  %call5 = call %union.tree_node* @get_identifier(i8* nonnull %2) #7, !dbg !6859
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6859
  store %union.tree_node* %call5, %union.tree_node** %assembler_name, align 8, !dbg !6859
  call void @rest_of_decl_compilation(%union.tree_node* %decl, i32 1, i32 0) #7, !dbg !6860
  br label %if.end6, !dbg !6861

if.end6:                                          ; preds = %if.then, %if.then1, %entry
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6862
  %bf.load8 = load i64, i64* %4, align 8, !dbg !6862
  %bf.cast111 = and i64 %bf.load8, 134217728, !dbg !6862
  %tobool12 = icmp eq i64 %bf.cast111, 0, !dbg !6862
  br i1 %tobool12, label %if.end19, label %if.then13, !dbg !6863

if.then13:                                        ; preds = %if.end6
  %5 = bitcast i32* %ix to i8*, !dbg !6864
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6, !dbg !6864
  %reader_cache = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 10, !dbg !6865
  %6 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %reader_cache, align 8, !dbg !6865
  call void @llvm.dbg.value(metadata i32* %ix, metadata !6846, metadata !DIExpression(DW_OP_deref)), !dbg !6867
  %call14 = call zeroext i8 @lto_streamer_cache_lookup(%struct.lto_streamer_cache_d* %6, %union.tree_node* %decl, i32* nonnull %ix) #7, !dbg !6868
  %tobool15 = icmp eq i8 %call14, 0, !dbg !6868
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !6869

if.then16:                                        ; preds = %if.then13
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2464, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6870
  br label %if.end17, !dbg !6870

if.end17:                                         ; preds = %if.then13, %if.then16
  %7 = load i32, i32* %ix, align 4, !dbg !6871
  call void @llvm.dbg.value(metadata i32 %7, metadata !6846, metadata !DIExpression()), !dbg !6867
  %call18 = call fastcc i32 @get_resolution(%struct.data_in* %data_in, i32 %7) #8, !dbg !6872
  %file_data = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !6873
  %8 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data, align 8, !dbg !6873
  call void @lto_symtab_register_decl(%union.tree_node* %decl, i32 %call18, %struct.lto_file_decl_data* %8) #7, !dbg !6874
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6, !dbg !6875
  br label %if.end19, !dbg !6876

if.end19:                                         ; preds = %if.end6, %if.end17
  ret void, !dbg !6877
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_register_function_decl_in_symtab(%struct.data_in* %data_in, %union.tree_node* %decl) unnamed_addr #5 !dbg !6878 {
entry:
  %ix = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !6880, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !6881, metadata !DIExpression()), !dbg !6896
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6897
  %bf.load = load i64, i64* %0, align 8, !dbg !6897
  %bf.cast1 = and i64 %bf.load, 134217728, !dbg !6897
  %tobool = icmp eq i64 %bf.cast1, 0, !dbg !6897
  br i1 %tobool, label %if.then, label %if.end22, !dbg !6898

if.then:                                          ; preds = %entry
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6899
  %1 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !6899
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6882, metadata !DIExpression()), !dbg !6900
  %call = tail call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #7, !dbg !6901
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6901
  %str = bitcast i32* %id to i8**, !dbg !6901
  %2 = load i8*, i8** %str, align 8, !dbg !6901
  call void @llvm.dbg.value(metadata i8* %2, metadata !6885, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i8* %2, metadata !6887, metadata !DIExpression()), !dbg !6902
  %call1 = tail call i64 @strlen(i8* %2) #7, !dbg !6903
  %add = add i64 %call1, 32, !dbg !6903
  %3 = alloca i8, i64 %add, align 16, !dbg !6903
  call void @llvm.dbg.value(metadata i8* %3, metadata !6886, metadata !DIExpression()), !dbg !6900
  call void @llvm.dbg.value(metadata i8* %3, metadata !6889, metadata !DIExpression()), !dbg !6902
  %uid = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6903
  %4 = load i32, i32* %uid, align 4, !dbg !6903
  %conv = zext i32 %4 to i64, !dbg !6903
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.15, i64 0, i64 0), i8* %2, i64 %conv) #7, !dbg !6903
  %call3 = call %union.tree_node* @get_identifier(i8* nonnull %3) #7, !dbg !6904
  store %union.tree_node* %call3, %union.tree_node** %assembler_name, align 8, !dbg !6904
  %tobool6 = icmp eq %union.tree_node* %1, null, !dbg !6905
  br i1 %tobool6, label %if.end22, label %if.then7, !dbg !6906

if.then7:                                         ; preds = %if.then
  %call8 = call %union.tree_node* @decl_assembler_name(%union.tree_node* %decl) #7, !dbg !6907
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !6890, metadata !DIExpression()), !dbg !6908
  %file_data = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !6909
  %5 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data, align 8, !dbg !6909
  %id10 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6910
  %str11 = bitcast i32* %id10 to i8**, !dbg !6910
  %6 = load i8*, i8** %str11, align 8, !dbg !6910
  %id13 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6911
  %str14 = bitcast i32* %id13 to i8**, !dbg !6911
  %7 = load i8*, i8** %str14, align 8, !dbg !6911
  call void @lto_record_renamed_decl(%struct.lto_file_decl_data* %5, i8* %6, i8* %7) #7, !dbg !6912
  %8 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data, align 8, !dbg !6913
  %9 = load i8*, i8** %str14, align 8, !dbg !6914
  %10 = load i8*, i8** %str11, align 8, !dbg !6915
  call void @lto_record_renamed_decl(%struct.lto_file_decl_data* %8, i8* %9, i8* %10) #7, !dbg !6916
  br label %if.end22, !dbg !6917

if.end22:                                         ; preds = %if.then, %entry, %if.then7
  %bf.load24 = load i64, i64* %0, align 8, !dbg !6918
  %bf.cast272 = and i64 %bf.load24, 134217728, !dbg !6918
  %tobool28 = icmp eq i64 %bf.cast272, 0, !dbg !6918
  br i1 %tobool28, label %if.end41, label %land.lhs.true, !dbg !6919

land.lhs.true:                                    ; preds = %if.end22
  %abstract_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6920
  %11 = bitcast i40* %abstract_flag to i64*, !dbg !6920
  %bf.load29 = load i64, i64* %11, align 8, !dbg !6920
  %bf.cast323 = and i64 %bf.load29, 2048, !dbg !6920
  %tobool33 = icmp eq i64 %bf.cast323, 0, !dbg !6920
  br i1 %tobool33, label %if.then34, label %if.end41, !dbg !6921

if.then34:                                        ; preds = %land.lhs.true
  %12 = bitcast i32* %ix to i8*, !dbg !6922
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #6, !dbg !6922
  %reader_cache = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 10, !dbg !6923
  %13 = load %struct.lto_streamer_cache_d*, %struct.lto_streamer_cache_d** %reader_cache, align 8, !dbg !6923
  call void @llvm.dbg.value(metadata i32* %ix, metadata !6893, metadata !DIExpression(DW_OP_deref)), !dbg !6925
  %call35 = call zeroext i8 @lto_streamer_cache_lookup(%struct.lto_streamer_cache_d* %13, %union.tree_node* %decl, i32* nonnull %ix) #7, !dbg !6926
  %tobool36 = icmp eq i8 %call35, 0, !dbg !6926
  br i1 %tobool36, label %if.then37, label %if.end38, !dbg !6927

if.then37:                                        ; preds = %if.then34
  call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2531, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6928
  br label %if.end38, !dbg !6928

if.end38:                                         ; preds = %if.then34, %if.then37
  %14 = load i32, i32* %ix, align 4, !dbg !6929
  call void @llvm.dbg.value(metadata i32 %14, metadata !6893, metadata !DIExpression()), !dbg !6925
  %call39 = call fastcc i32 @get_resolution(%struct.data_in* %data_in, i32 %14) #8, !dbg !6930
  %file_data40 = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 0, !dbg !6931
  %15 = load %struct.lto_file_decl_data*, %struct.lto_file_decl_data** %file_data40, align 8, !dbg !6931
  call void @lto_symtab_register_decl(%union.tree_node* %decl, i32 %call39, %struct.lto_file_decl_data* %15) #7, !dbg !6932
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #6, !dbg !6933
  br label %if.end41, !dbg !6934

if.end41:                                         ; preds = %land.lhs.true, %if.end22, %if.end38
  ret void, !dbg !6935
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @input_identifier(%struct.data_in* %data_in, %struct.lto_input_block* %ib) unnamed_addr #5 !dbg !6936 {
entry:
  %len = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !6938, metadata !DIExpression()), !dbg !6943
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !6939, metadata !DIExpression()), !dbg !6943
  %0 = bitcast i32* %len to i8*, !dbg !6944
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #6, !dbg !6944
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !6945
  %conv = trunc i64 %call to i32, !dbg !6945
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6942, metadata !DIExpression()), !dbg !6943
  %tobool = icmp eq i32 %conv, 0, !dbg !6946
  br i1 %tobool, label %if.end, label %cleanup, !dbg !6948

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32* %len, metadata !6940, metadata !DIExpression(DW_OP_deref)), !dbg !6943
  %call1 = call fastcc i8* @input_string_internal(%struct.data_in* %data_in, %struct.lto_input_block* %ib, i32* nonnull %len) #8, !dbg !6949
  call void @llvm.dbg.value(metadata i8* %call1, metadata !6941, metadata !DIExpression()), !dbg !6943
  %1 = load i32, i32* %len, align 4, !dbg !6950
  call void @llvm.dbg.value(metadata i32 %1, metadata !6940, metadata !DIExpression()), !dbg !6943
  %conv2 = zext i32 %1 to i64, !dbg !6950
  %call3 = call %union.tree_node* @get_identifier_with_length(i8* %call1, i64 %conv2) #7, !dbg !6951
  br label %cleanup, !dbg !6952

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call3, %if.end ], [ null, %entry ], !dbg !6943
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #6, !dbg !6953
  ret %union.tree_node* %retval.0, !dbg !6953
}

declare dso_local %union.tree_node* @make_tree_vec_stat(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_tree_binfo_stat(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !6954 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !6958, metadata !DIExpression()), !dbg !6961
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !6959, metadata !DIExpression()), !dbg !6961
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6962
  %bf.load = load i64, i64* %0, align 8, !dbg !6962
  %bf.cast = and i64 %bf.load, 65535, !dbg !6962
  tail call fastcc void @unpack_ts_base_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) #8, !dbg !6963
  %arrayidx1 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 3, !dbg !6964
  %1 = load i8, i8* %arrayidx1, align 1, !dbg !6964
  %tobool = icmp eq i8 %1, 0, !dbg !6964
  br i1 %tobool, label %if.end, label %if.then, !dbg !6966

if.then:                                          ; preds = %entry
  tail call fastcc void @unpack_ts_real_cst_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) #8, !dbg !6967
  br label %if.end, !dbg !6967

if.end:                                           ; preds = %entry, %if.then
  %arrayidx4 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 4, !dbg !6968
  %2 = load i8, i8* %arrayidx4, align 4, !dbg !6968
  %tobool5 = icmp eq i8 %2, 0, !dbg !6968
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !6970

if.then6:                                         ; preds = %if.end
  tail call fastcc void @unpack_ts_fixed_cst_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) #8, !dbg !6971
  br label %if.end7, !dbg !6971

if.end7:                                          ; preds = %if.end, %if.then6
  %arrayidx10 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 10, !dbg !6972
  %3 = load i8, i8* %arrayidx10, align 2, !dbg !6972
  %tobool11 = icmp eq i8 %3, 0, !dbg !6972
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !6974

if.then12:                                        ; preds = %if.end7
  tail call fastcc void @unpack_ts_decl_common_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) #8, !dbg !6975
  br label %if.end13, !dbg !6975

if.end13:                                         ; preds = %if.end7, %if.then12
  %arrayidx16 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 11, !dbg !6976
  %4 = load i8, i8* %arrayidx16, align 1, !dbg !6976
  %tobool17 = icmp eq i8 %4, 0, !dbg !6976
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !6978

if.then18:                                        ; preds = %if.end13
  tail call fastcc void @unpack_ts_decl_wrtl_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) #8, !dbg !6979
  br label %if.end19, !dbg !6979

if.end19:                                         ; preds = %if.end13, %if.then18
  %arrayidx22 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 13, !dbg !6980
  %5 = load i8, i8* %arrayidx22, align 1, !dbg !6980
  %tobool23 = icmp eq i8 %5, 0, !dbg !6980
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !6982

if.then24:                                        ; preds = %if.end19
  tail call fastcc void @unpack_ts_decl_with_vis_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) #8, !dbg !6983
  br label %if.end25, !dbg !6983

if.end25:                                         ; preds = %if.end19, %if.then24
  %arrayidx28 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 21, !dbg !6984
  %6 = load i8, i8* %arrayidx28, align 1, !dbg !6984
  %tobool29 = icmp eq i8 %6, 0, !dbg !6984
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !6986

if.then30:                                        ; preds = %if.end25
  tail call fastcc void @unpack_ts_function_decl_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) #8, !dbg !6987
  br label %if.end31, !dbg !6987

if.end31:                                         ; preds = %if.end25, %if.then30
  %arrayidx34 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 22, !dbg !6988
  %7 = load i8, i8* %arrayidx34, align 2, !dbg !6988
  %tobool35 = icmp eq i8 %7, 0, !dbg !6988
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !6990

if.then36:                                        ; preds = %if.end31
  tail call fastcc void @unpack_ts_type_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) #8, !dbg !6991
  br label %if.end37, !dbg !6991

if.end37:                                         ; preds = %if.end31, %if.then36
  %arrayidx40 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 27, !dbg !6992
  %8 = load i8, i8* %arrayidx40, align 1, !dbg !6992
  %tobool41 = icmp eq i8 %8, 0, !dbg !6992
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !6994

if.then42:                                        ; preds = %if.end37
  tail call fastcc void @unpack_ts_block_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) #8, !dbg !6995
  br label %if.end43, !dbg !6995

if.end43:                                         ; preds = %if.end37, %if.then42
  %arrayidx46 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 26, !dbg !6996
  %9 = load i8, i8* %arrayidx46, align 2, !dbg !6996
  %tobool47 = icmp eq i8 %9, 0, !dbg !6996
  br i1 %tobool47, label %if.end49, label %if.then48, !dbg !6998

if.then48:                                        ; preds = %if.end43
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1836, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !6999
  br label %if.end49, !dbg !7001

if.end49:                                         ; preds = %if.end43, %if.then48
  %arrayidx52 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 29, !dbg !7002
  %10 = load i8, i8* %arrayidx52, align 1, !dbg !7002
  %tobool53 = icmp eq i8 %10, 0, !dbg !7002
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !7004

if.then54:                                        ; preds = %if.end49
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1842, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !7005
  br label %if.end55, !dbg !7007

if.end55:                                         ; preds = %if.end49, %if.then54
  %arrayidx58 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast, i64 31, !dbg !7008
  %11 = load i8, i8* %arrayidx58, align 1, !dbg !7008
  %tobool59 = icmp eq i8 %11, 0, !dbg !7008
  br i1 %tobool59, label %if.end61, label %if.then60, !dbg !7010

if.then60:                                        ; preds = %if.end55
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 1848, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !7011
  br label %if.end61, !dbg !7013

if.end61:                                         ; preds = %if.end55, %if.then60
  ret void, !dbg !7014
}

declare dso_local %union.tree_node* @get_identifier_with_length(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_ts_base_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !7015 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !7017, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7018, metadata !DIExpression()), !dbg !7019
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7020
  %bf.load = load i64, i64* %0, align 8, !dbg !7020
  %bf.cast = and i64 %bf.load, 65535, !dbg !7020
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7020
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7020
  %cmp = icmp eq i32 %1, 2, !dbg !7020
  br i1 %cmp, label %if.end, label %if.then, !dbg !7022

if.then:                                          ; preds = %entry
  %call = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7023
  %bf.load2 = load i64, i64* %0, align 8, !dbg !7025
  %bf.value = shl i64 %call, 16, !dbg !7025
  %bf.shl = and i64 %bf.value, 65536, !dbg !7025
  %bf.clear3 = and i64 %bf.load2, -65537, !dbg !7025
  %bf.set = or i64 %bf.clear3, %bf.shl, !dbg !7025
  store i64 %bf.set, i64* %0, align 8, !dbg !7025
  %call4 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7026
  %bf.load7 = load i64, i64* %0, align 8, !dbg !7027
  %bf.value8 = shl i64 %call4, 17, !dbg !7027
  %bf.shl9 = and i64 %bf.value8, 131072, !dbg !7027
  %bf.clear10 = and i64 %bf.load7, -131073, !dbg !7027
  %bf.set11 = or i64 %bf.clear10, %bf.shl9, !dbg !7027
  store i64 %bf.set11, i64* %0, align 8, !dbg !7027
  %call13 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7028
  %bf.load16 = load i64, i64* %0, align 8, !dbg !7029
  %bf.value17 = shl i64 %call13, 20, !dbg !7029
  %bf.shl18 = and i64 %bf.value17, 1048576, !dbg !7029
  %bf.clear19 = and i64 %bf.load16, -1048577, !dbg !7029
  %bf.set20 = or i64 %bf.clear19, %bf.shl18, !dbg !7029
  store i64 %bf.set20, i64* %0, align 8, !dbg !7029
  %call22 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7030
  %bf.load25 = load i64, i64* %0, align 8, !dbg !7031
  %bf.value26 = shl i64 %call22, 27, !dbg !7031
  %bf.shl27 = and i64 %bf.value26, 134217728, !dbg !7031
  %bf.clear28 = and i64 %bf.load25, -134217729, !dbg !7031
  %bf.set29 = or i64 %bf.clear28, %bf.shl27, !dbg !7031
  store i64 %bf.set29, i64* %0, align 8, !dbg !7031
  br label %if.end, !dbg !7032

if.end:                                           ; preds = %if.then, %entry
  %call31 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7033
  %bf.load34 = load i64, i64* %0, align 8, !dbg !7034
  %bf.value35 = shl i64 %call31, 18, !dbg !7034
  %bf.shl36 = and i64 %bf.value35, 262144, !dbg !7034
  %bf.clear37 = and i64 %bf.load34, -262145, !dbg !7034
  %bf.set38 = or i64 %bf.clear37, %bf.shl36, !dbg !7034
  store i64 %bf.set38, i64* %0, align 8, !dbg !7034
  %call40 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7035
  %bf.load43 = load i64, i64* %0, align 8, !dbg !7036
  %bf.value44 = shl i64 %call40, 19, !dbg !7036
  %bf.shl45 = and i64 %bf.value44, 524288, !dbg !7036
  %bf.clear46 = and i64 %bf.load43, -524289, !dbg !7036
  %bf.set47 = or i64 %bf.clear46, %bf.shl45, !dbg !7036
  store i64 %bf.set47, i64* %0, align 8, !dbg !7036
  %bf.cast52 = and i64 %bf.load43, 65535, !dbg !7037
  %arrayidx54 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast52, !dbg !7037
  %2 = load i32, i32* %arrayidx54, align 4, !dbg !7037
  %cmp55 = icmp eq i32 %2, 3, !dbg !7037
  br i1 %cmp55, label %if.then57, label %if.else, !dbg !7039

if.then57:                                        ; preds = %if.end
  %call58 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7040
  %bf.load61 = load i64, i64* %0, align 8, !dbg !7041
  %bf.value62 = shl i64 %call58, 21, !dbg !7041
  %bf.shl63 = and i64 %bf.value62, 2097152, !dbg !7041
  %bf.clear64 = and i64 %bf.load61, -2097153, !dbg !7041
  %bf.set65 = or i64 %bf.clear64, %bf.shl63, !dbg !7041
  store i64 %bf.set65, i64* %0, align 8, !dbg !7041
  br label %if.end86, !dbg !7042

if.else:                                          ; preds = %if.end
  %bf.cast70 = and i64 %bf.load43, 65535, !dbg !7043
  %arrayidx72 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast70, !dbg !7043
  %3 = load i32, i32* %arrayidx72, align 4, !dbg !7043
  %cmp73 = icmp eq i32 %3, 2, !dbg !7043
  br i1 %cmp73, label %if.then75, label %if.end86, !dbg !7045

if.then75:                                        ; preds = %if.else
  %call76 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7046
  %bf.load79 = load i64, i64* %0, align 8, !dbg !7047
  %bf.value80 = shl i64 %call76, 21, !dbg !7047
  %bf.shl81 = and i64 %bf.value80, 2097152, !dbg !7047
  %bf.clear82 = and i64 %bf.load79, -2097153, !dbg !7047
  %bf.set83 = or i64 %bf.clear82, %bf.shl81, !dbg !7047
  store i64 %bf.set83, i64* %0, align 8, !dbg !7047
  br label %if.end86, !dbg !7048

if.end86:                                         ; preds = %if.else, %if.then75, %if.then57
  %call87 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7049
  %bf.load90 = load i64, i64* %0, align 8, !dbg !7050
  %bf.value91 = shl i64 %call87, 22, !dbg !7050
  %bf.shl92 = and i64 %bf.value91, 4194304, !dbg !7050
  %bf.clear93 = and i64 %bf.load90, -4194305, !dbg !7050
  %bf.set94 = or i64 %bf.clear93, %bf.shl92, !dbg !7050
  store i64 %bf.set94, i64* %0, align 8, !dbg !7050
  %call96 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7051
  %bf.load99 = load i64, i64* %0, align 8, !dbg !7052
  %bf.value100 = shl i64 %call96, 23, !dbg !7052
  %bf.shl101 = and i64 %bf.value100, 8388608, !dbg !7052
  %bf.clear102 = and i64 %bf.load99, -8388609, !dbg !7052
  %bf.set103 = or i64 %bf.clear102, %bf.shl101, !dbg !7052
  store i64 %bf.set103, i64* %0, align 8, !dbg !7052
  %call105 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7053
  %bf.load108 = load i64, i64* %0, align 8, !dbg !7054
  %bf.value109 = shl i64 %call105, 24, !dbg !7054
  %bf.shl110 = and i64 %bf.value109, 16777216, !dbg !7054
  %bf.clear111 = and i64 %bf.load108, -16777217, !dbg !7054
  %bf.set112 = or i64 %bf.clear111, %bf.shl110, !dbg !7054
  store i64 %bf.set112, i64* %0, align 8, !dbg !7054
  %call114 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7055
  %bf.load117 = load i64, i64* %0, align 8, !dbg !7056
  %bf.value118 = shl i64 %call114, 25, !dbg !7056
  %bf.shl119 = and i64 %bf.value118, 33554432, !dbg !7056
  %bf.clear120 = and i64 %bf.load117, -33554433, !dbg !7056
  %bf.set121 = or i64 %bf.clear120, %bf.shl119, !dbg !7056
  store i64 %bf.set121, i64* %0, align 8, !dbg !7056
  %call123 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7057
  %bf.load126 = load i64, i64* %0, align 8, !dbg !7058
  %bf.value127 = shl i64 %call123, 26, !dbg !7058
  %bf.shl128 = and i64 %bf.value127, 67108864, !dbg !7058
  %bf.clear129 = and i64 %bf.load126, -67108865, !dbg !7058
  %bf.set130 = or i64 %bf.clear129, %bf.shl128, !dbg !7058
  store i64 %bf.set130, i64* %0, align 8, !dbg !7058
  %call132 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7059
  %bf.load135 = load i64, i64* %0, align 8, !dbg !7060
  %bf.value136 = shl i64 %call132, 28, !dbg !7060
  %bf.shl137 = and i64 %bf.value136, 268435456, !dbg !7060
  %bf.clear138 = and i64 %bf.load135, -268435457, !dbg !7060
  %bf.set139 = or i64 %bf.clear138, %bf.shl137, !dbg !7060
  store i64 %bf.set139, i64* %0, align 8, !dbg !7060
  %call141 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7061
  %bf.load144 = load i64, i64* %0, align 8, !dbg !7062
  %bf.value145 = shl i64 %call141, 29, !dbg !7062
  %bf.shl146 = and i64 %bf.value145, 536870912, !dbg !7062
  %bf.clear147 = and i64 %bf.load144, -536870913, !dbg !7062
  %bf.set148 = or i64 %bf.clear147, %bf.shl146, !dbg !7062
  store i64 %bf.set148, i64* %0, align 8, !dbg !7062
  %call150 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7063
  %bf.load153 = load i64, i64* %0, align 8, !dbg !7064
  %bf.value154 = shl i64 %call150, 30, !dbg !7064
  %bf.shl155 = and i64 %bf.value154, 1073741824, !dbg !7064
  %bf.clear156 = and i64 %bf.load153, -1073741825, !dbg !7064
  %bf.set157 = or i64 %bf.clear156, %bf.shl155, !dbg !7064
  store i64 %bf.set157, i64* %0, align 8, !dbg !7064
  %bf.cast162 = and i64 %bf.load153, 65535, !dbg !7065
  %arrayidx164 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast162, !dbg !7065
  %4 = load i32, i32* %arrayidx164, align 4, !dbg !7065
  %cmp165 = icmp eq i32 %4, 2, !dbg !7065
  br i1 %cmp165, label %if.then167, label %if.end177, !dbg !7067

if.then167:                                       ; preds = %if.end86
  %call168 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7068
  %bf.load171 = load i64, i64* %0, align 8, !dbg !7069
  %bf.value172 = shl i64 %call168, 31, !dbg !7069
  %bf.shl173 = and i64 %bf.value172, 2147483648, !dbg !7069
  %bf.clear174 = and i64 %bf.load171, -2147483649, !dbg !7069
  %bf.set175 = or i64 %bf.clear174, %bf.shl173, !dbg !7069
  store i64 %bf.set175, i64* %0, align 8, !dbg !7069
  br label %if.end177, !dbg !7070

if.end177:                                        ; preds = %if.then167, %if.end86
  %bf.load179 = phi i64 [ %bf.set175, %if.then167 ], [ %bf.set157, %if.end86 ], !dbg !7071
  %bf.cast1811 = and i64 %bf.load179, 65535, !dbg !7073
  %cmp182 = icmp eq i64 %bf.cast1811, 141, !dbg !7073
  br i1 %cmp182, label %if.then184, label %if.end194, !dbg !7074

if.then184:                                       ; preds = %if.end177
  %call185 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7075
  %bf.load188 = load i64, i64* %0, align 8, !dbg !7076
  %bf.value189 = shl i64 %call185, 32, !dbg !7076
  %bf.shl190 = and i64 %bf.value189, 4294967296, !dbg !7076
  %bf.clear191 = and i64 %bf.load188, -4294967297, !dbg !7076
  %bf.set192 = or i64 %bf.clear191, %bf.shl190, !dbg !7076
  store i64 %bf.set192, i64* %0, align 8, !dbg !7076
  br label %if.end194, !dbg !7077

if.end194:                                        ; preds = %if.then184, %if.end177
  ret void, !dbg !7078
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_ts_real_cst_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !7079 {
entry:
  %r = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !7081, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7082, metadata !DIExpression()), !dbg !7086
  %0 = bitcast %struct.real_value* %r to i8*, !dbg !7087
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #6, !dbg !7087
  %call = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 2) #7, !dbg !7088
  %conv = trunc i64 %call to i32, !dbg !7089
  %1 = getelementptr inbounds %struct.real_value, %struct.real_value* %r, i64 0, i32 0, !dbg !7090
  %bf.value = and i32 %conv, 3, !dbg !7091
  %call1 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7092
  %conv2 = trunc i64 %call1 to i32, !dbg !7093
  %bf.value4 = shl i32 %conv2, 2, !dbg !7094
  %bf.shl = and i32 %bf.value4, 4, !dbg !7094
  %bf.set6 = or i32 %bf.value, %bf.shl, !dbg !7094
  %call7 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7095
  %conv8 = trunc i64 %call7 to i32, !dbg !7096
  %bf.value10 = shl i32 %conv8, 3, !dbg !7097
  %bf.shl11 = and i32 %bf.value10, 8, !dbg !7097
  %bf.set13 = or i32 %bf.set6, %bf.shl11, !dbg !7097
  %call14 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7098
  %conv15 = trunc i64 %call14 to i32, !dbg !7099
  %bf.value17 = shl i32 %conv15, 4, !dbg !7100
  %bf.shl18 = and i32 %bf.value17, 16, !dbg !7100
  %bf.set20 = or i32 %bf.set13, %bf.shl18, !dbg !7100
  %call21 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7101
  %conv22 = trunc i64 %call21 to i32, !dbg !7102
  %bf.value24 = shl i32 %conv22, 5, !dbg !7103
  %call28 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 26) #7, !dbg !7104
  %conv29 = trunc i64 %call28 to i32, !dbg !7105
  %bf.shl32 = shl i32 %conv29, 6, !dbg !7106
  %bf.value24.masked = and i32 %bf.value24, 32, !dbg !7106
  %bf.clear33 = or i32 %bf.set20, %bf.value24.masked, !dbg !7106
  %bf.set34 = or i32 %bf.clear33, %bf.shl32, !dbg !7106
  store i32 %bf.set34, i32* %1, align 8, !dbg !7106
  call void @llvm.dbg.value(metadata i32 0, metadata !7083, metadata !DIExpression()), !dbg !7086
  br label %for.cond, !dbg !7107

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !7109
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7083, metadata !DIExpression()), !dbg !7086
  %exitcond = icmp eq i64 %indvars.iv, 3, !dbg !7110
  br i1 %exitcond, label %for.end, label %for.body, !dbg !7112

for.body:                                         ; preds = %for.cond
  %call36 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 64) #7, !dbg !7113
  %arrayidx = getelementptr inbounds %struct.real_value, %struct.real_value* %r, i64 0, i32 1, i64 %indvars.iv, !dbg !7114
  store i64 %call36, i64* %arrayidx, align 8, !dbg !7115
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7116
  call void @llvm.dbg.value(metadata i32 undef, metadata !7083, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7086
  br label %for.cond, !dbg !7117, !llvm.loop !7118

for.end:                                          ; preds = %for.cond
  %call37 = tail call i8* @ggc_alloc_stat(i64 32) #7, !dbg !7120
  call void @llvm.dbg.value(metadata i8* %call37, metadata !7085, metadata !DIExpression()), !dbg !7086
  %call38 = call i8* @memcpy(i8* %call37, i8* nonnull %0, i64 32) #7, !dbg !7121
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7122
  %2 = bitcast i32* %real_cst_ptr to i8**, !dbg !7123
  store i8* %call37, i8** %2, align 8, !dbg !7123
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #6, !dbg !7124
  ret void, !dbg !7124
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_ts_fixed_cst_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !7125 {
entry:
  %fv = alloca %struct.fixed_value, align 8
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !7127, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7128, metadata !DIExpression()), !dbg !7130
  %0 = bitcast %struct.fixed_value* %fv to i8*, !dbg !7131
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !7131
  %call = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 64) #7, !dbg !7132
  %low = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %fv, i64 0, i32 0, i32 0, !dbg !7133
  store i64 %call, i64* %low, align 8, !dbg !7134
  %call1 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 64) #7, !dbg !7135
  %high = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %fv, i64 0, i32 0, i32 1, !dbg !7136
  store i64 %call1, i64* %high, align 8, !dbg !7137
  %fixed_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7138
  %1 = bitcast i32* %fixed_cst_ptr to i8**, !dbg !7138
  %2 = load i8*, i8** %1, align 8, !dbg !7138
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !7139
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !7140
  ret void, !dbg !7140
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_ts_decl_common_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !7141 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !7143, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7144, metadata !DIExpression()), !dbg !7148
  %call = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 8) #7, !dbg !7149
  %mode = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7150
  %0 = bitcast i40* %mode to i64*, !dbg !7150
  %bf.load = load i64, i64* %0, align 8, !dbg !7151
  %bf.value = and i64 %call, 255, !dbg !7151
  %bf.clear = and i64 %bf.load, -256, !dbg !7151
  %bf.set = or i64 %bf.clear, %bf.value, !dbg !7151
  store i64 %bf.set, i64* %0, align 8, !dbg !7151
  %call1 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7152
  %bf.load4 = load i64, i64* %0, align 8, !dbg !7153
  %bf.value5 = shl i64 %call1, 8, !dbg !7153
  %bf.shl = and i64 %bf.value5, 256, !dbg !7153
  %bf.clear6 = and i64 %bf.load4, -257, !dbg !7153
  %bf.set7 = or i64 %bf.clear6, %bf.shl, !dbg !7153
  store i64 %bf.set7, i64* %0, align 8, !dbg !7153
  %call9 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7154
  %bf.load12 = load i64, i64* %0, align 8, !dbg !7155
  %bf.value13 = shl i64 %call9, 9, !dbg !7155
  %bf.shl14 = and i64 %bf.value13, 512, !dbg !7155
  %bf.clear15 = and i64 %bf.load12, -513, !dbg !7155
  %bf.set16 = or i64 %bf.clear15, %bf.shl14, !dbg !7155
  store i64 %bf.set16, i64* %0, align 8, !dbg !7155
  %call18 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7156
  %bf.load21 = load i64, i64* %0, align 8, !dbg !7157
  %bf.value22 = shl i64 %call18, 10, !dbg !7157
  %bf.shl23 = and i64 %bf.value22, 1024, !dbg !7157
  %bf.clear24 = and i64 %bf.load21, -1025, !dbg !7157
  %bf.set25 = or i64 %bf.clear24, %bf.shl23, !dbg !7157
  store i64 %bf.set25, i64* %0, align 8, !dbg !7157
  %call27 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7158
  %bf.load30 = load i64, i64* %0, align 8, !dbg !7159
  %bf.value31 = shl i64 %call27, 11, !dbg !7159
  %bf.shl32 = and i64 %bf.value31, 2048, !dbg !7159
  %bf.clear33 = and i64 %bf.load30, -2049, !dbg !7159
  %bf.set34 = or i64 %bf.clear33, %bf.shl32, !dbg !7159
  store i64 %bf.set34, i64* %0, align 8, !dbg !7159
  %call36 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7160
  %bf.load39 = load i64, i64* %0, align 8, !dbg !7161
  %bf.value40 = shl i64 %call36, 12, !dbg !7161
  %bf.shl41 = and i64 %bf.value40, 4096, !dbg !7161
  %bf.clear42 = and i64 %bf.load39, -4097, !dbg !7161
  %bf.set43 = or i64 %bf.clear42, %bf.shl41, !dbg !7161
  store i64 %bf.set43, i64* %0, align 8, !dbg !7161
  %call45 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7162
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7163
  %bf.load47 = load i64, i64* %1, align 8, !dbg !7164
  %bf.value48 = shl i64 %call45, 42, !dbg !7164
  %bf.shl49 = and i64 %bf.value48, 4398046511104, !dbg !7164
  %bf.clear50 = and i64 %bf.load47, -4398046511105, !dbg !7164
  %bf.set51 = or i64 %bf.clear50, %bf.shl49, !dbg !7164
  store i64 %bf.set51, i64* %1, align 8, !dbg !7164
  %call53 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7165
  %bf.load56 = load i64, i64* %0, align 8, !dbg !7166
  %bf.value57 = shl i64 %call53, 13, !dbg !7166
  %bf.shl58 = and i64 %bf.value57, 8192, !dbg !7166
  %bf.clear59 = and i64 %bf.load56, -8193, !dbg !7166
  %bf.set60 = or i64 %bf.clear59, %bf.shl58, !dbg !7166
  store i64 %bf.set60, i64* %0, align 8, !dbg !7166
  %call62 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7167
  %bf.load65 = load i64, i64* %0, align 8, !dbg !7168
  %bf.value66 = shl i64 %call62, 14, !dbg !7168
  %bf.shl67 = and i64 %bf.value66, 16384, !dbg !7168
  %bf.clear68 = and i64 %bf.load65, -16385, !dbg !7168
  %bf.set69 = or i64 %bf.clear68, %bf.shl67, !dbg !7168
  store i64 %bf.set69, i64* %0, align 8, !dbg !7168
  %call71 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7169
  %bf.load74 = load i64, i64* %0, align 8, !dbg !7170
  %bf.value75 = shl i64 %call71, 25, !dbg !7170
  %bf.shl76 = and i64 %bf.value75, 33554432, !dbg !7170
  %bf.clear77 = and i64 %bf.load74, -33554433, !dbg !7170
  %bf.set78 = or i64 %bf.clear77, %bf.shl76, !dbg !7170
  store i64 %bf.set78, i64* %0, align 8, !dbg !7170
  %call80 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7171
  %bf.load83 = load i64, i64* %0, align 8, !dbg !7172
  %bf.value84 = shl i64 %call80, 27, !dbg !7172
  %bf.shl85 = and i64 %bf.value84, 134217728, !dbg !7172
  %bf.clear86 = and i64 %bf.load83, -134217729, !dbg !7172
  %bf.set87 = or i64 %bf.clear86, %bf.shl85, !dbg !7172
  store i64 %bf.set87, i64* %0, align 8, !dbg !7172
  %call89 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 32) #7, !dbg !7173
  %conv90 = trunc i64 %call89 to i32, !dbg !7174
  %align = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7175
  store i32 %conv90, i32* %align, align 8, !dbg !7176
  %bf.load93 = load i64, i64* %1, align 8, !dbg !7177
  %bf.cast1 = and i64 %bf.load93, 65535, !dbg !7179
  %cmp = icmp eq i64 %bf.cast1, 30, !dbg !7179
  br i1 %cmp, label %if.then, label %if.end, !dbg !7180

if.then:                                          ; preds = %entry
  %call96 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7181
  %bf.load99 = load i64, i64* %0, align 8, !dbg !7183
  %bf.value100 = shl i64 %call96, 24, !dbg !7183
  %bf.shl101 = and i64 %bf.value100, 16777216, !dbg !7183
  %bf.clear102 = and i64 %bf.load99, -16777217, !dbg !7183
  %bf.set103 = or i64 %bf.clear102, %bf.shl101, !dbg !7183
  store i64 %bf.set103, i64* %0, align 8, !dbg !7183
  %call105 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 32) #7, !dbg !7184
  %conv106 = trunc i64 %call105 to i32, !dbg !7185
  %label_decl = bitcast %union.tree_node* %expr to %struct.tree_label_decl*, !dbg !7186
  %eh_landing_pad_nr = getelementptr inbounds %struct.tree_label_decl, %struct.tree_label_decl* %label_decl, i64 0, i32 2, !dbg !7186
  store i32 %conv106, i32* %eh_landing_pad_nr, align 4, !dbg !7187
  %label_decl_uid = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !7188
  %2 = bitcast %union.tree_node** %label_decl_uid to i32*, !dbg !7188
  store i32 -1, i32* %2, align 8, !dbg !7189
  %bf.load109.pre = load i64, i64* %1, align 8, !dbg !7190
  br label %if.end, !dbg !7191

if.end:                                           ; preds = %if.then, %entry
  %bf.load109 = phi i64 [ %bf.load109.pre, %if.then ], [ %bf.load93, %entry ], !dbg !7190
  %bf.cast1112 = and i64 %bf.load109, 65535, !dbg !7192
  %cmp112 = icmp eq i64 %bf.cast1112, 31, !dbg !7192
  br i1 %cmp112, label %if.then114, label %if.end144, !dbg !7193

if.then114:                                       ; preds = %if.end
  %call115 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7194
  %bf.load119 = load i64, i64* %1, align 8, !dbg !7195
  %bf.value120 = shl i64 %call115, 41, !dbg !7195
  %bf.shl121 = and i64 %bf.value120, 2199023255552, !dbg !7195
  %bf.clear122 = and i64 %bf.load119, -2199023255553, !dbg !7195
  %bf.set123 = or i64 %bf.clear122, %bf.shl121, !dbg !7195
  store i64 %bf.set123, i64* %1, align 8, !dbg !7195
  %call125 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7196
  %bf.load128 = load i64, i64* %0, align 8, !dbg !7197
  %bf.value129 = shl i64 %call125, 26, !dbg !7197
  %bf.shl130 = and i64 %bf.value129, 67108864, !dbg !7197
  %bf.clear131 = and i64 %bf.load128, -67108865, !dbg !7197
  %bf.set132 = or i64 %bf.clear131, %bf.shl130, !dbg !7197
  store i64 %bf.set132, i64* %0, align 8, !dbg !7197
  %call134 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 8) #7, !dbg !7198
  call void @llvm.dbg.value(metadata i64 %call134, metadata !7145, metadata !DIExpression()), !dbg !7199
  %sub = sub i64 0, %call134, !dbg !7200
  %and = and i64 %call134, %sub, !dbg !7200
  %call135 = tail call i32 @exact_log2(i64 %and) #7, !dbg !7200
  %bf.load138 = load i64, i64* %0, align 8, !dbg !7200
  %3 = and i32 %call135, 255, !dbg !7200
  %bf.value139 = zext i32 %3 to i64, !dbg !7200
  %bf.shl140 = shl nuw nsw i64 %bf.value139, 32, !dbg !7200
  %bf.clear141 = and i64 %bf.load138, -1095216660481, !dbg !7200
  %bf.set142 = or i64 %bf.clear141, %bf.shl140, !dbg !7200
  store i64 %bf.set142, i64* %0, align 8, !dbg !7200
  %bf.load146.pre = load i64, i64* %1, align 8, !dbg !7201
  %.pre = and i64 %bf.load146.pre, 65535, !dbg !7203
  br label %if.end144, !dbg !7204

if.end144:                                        ; preds = %if.then114, %if.end
  %bf.cast1483.pre-phi = phi i64 [ %.pre, %if.then114 ], [ %bf.cast1112, %if.end ], !dbg !7203
  %cmp149 = icmp eq i64 %bf.cast1483.pre-phi, 36, !dbg !7203
  br i1 %cmp149, label %if.then164, label %lor.lhs.false, !dbg !7205

lor.lhs.false:                                    ; preds = %if.end144
  %cmp155 = icmp eq i64 %bf.cast1483.pre-phi, 34, !dbg !7206
  br i1 %cmp155, label %if.then164, label %lor.lhs.false157, !dbg !7207

lor.lhs.false157:                                 ; preds = %lor.lhs.false
  %cmp162 = icmp eq i64 %bf.cast1483.pre-phi, 32, !dbg !7208
  br i1 %cmp162, label %if.then164, label %if.end208, !dbg !7209

if.then164:                                       ; preds = %lor.lhs.false157, %lor.lhs.false, %if.end144
  %call165 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7210
  %bf.load168 = load i64, i64* %0, align 8, !dbg !7212
  %bf.value169 = shl i64 %call165, 28, !dbg !7212
  %bf.shl170 = and i64 %bf.value169, 268435456, !dbg !7212
  %bf.clear171 = and i64 %bf.load168, -268435457, !dbg !7212
  %bf.set172 = or i64 %bf.clear171, %bf.shl170, !dbg !7212
  store i64 %bf.set172, i64* %0, align 8, !dbg !7212
  %bf.load175 = load i64, i64* %1, align 8, !dbg !7213
  %bf.cast1776 = and i64 %bf.load175, 65535, !dbg !7215
  %cmp178 = icmp eq i64 %bf.cast1776, 32, !dbg !7215
  br i1 %cmp178, label %if.then187, label %lor.lhs.false180, !dbg !7216

lor.lhs.false180:                                 ; preds = %if.then164
  %cmp185 = icmp eq i64 %bf.cast1776, 34, !dbg !7217
  br i1 %cmp185, label %if.then187, label %if.end198, !dbg !7218

if.then187:                                       ; preds = %lor.lhs.false180, %if.then164
  %call188 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7219
  %bf.load192 = load i64, i64* %0, align 8, !dbg !7220
  %bf.value193 = shl i64 %call188, 26, !dbg !7220
  %bf.shl194 = and i64 %bf.value193, 67108864, !dbg !7220
  %bf.clear195 = and i64 %bf.load192, -67108865, !dbg !7220
  %bf.set196 = or i64 %bf.clear195, %bf.shl194, !dbg !7220
  store i64 %bf.set196, i64* %0, align 8, !dbg !7220
  br label %if.end198, !dbg !7221

if.end198:                                        ; preds = %if.then187, %lor.lhs.false180
  %call199 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7222
  %bf.load202 = load i64, i64* %0, align 8, !dbg !7223
  %bf.value203 = shl i64 %call199, 29, !dbg !7223
  %bf.shl204 = and i64 %bf.value203, 536870912, !dbg !7223
  %bf.clear205 = and i64 %bf.load202, -536870913, !dbg !7223
  %bf.set206 = or i64 %bf.clear205, %bf.shl204, !dbg !7223
  store i64 %bf.set206, i64* %0, align 8, !dbg !7223
  br label %if.end208, !dbg !7224

if.end208:                                        ; preds = %if.end198, %lor.lhs.false157
  ret void, !dbg !7225
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_ts_decl_wrtl_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !7226 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !7228, metadata !DIExpression()), !dbg !7230
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7229, metadata !DIExpression()), !dbg !7230
  %call = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7231
  %decl_flag_0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7232
  %0 = bitcast i40* %decl_flag_0 to i64*, !dbg !7232
  %bf.load = load i64, i64* %0, align 8, !dbg !7233
  %bf.value = shl i64 %call, 24, !dbg !7233
  %bf.shl = and i64 %bf.value, 16777216, !dbg !7233
  %bf.clear = and i64 %bf.load, -16777217, !dbg !7233
  %bf.set = or i64 %bf.clear, %bf.shl, !dbg !7233
  store i64 %bf.set, i64* %0, align 8, !dbg !7233
  ret void, !dbg !7234
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_ts_decl_with_vis_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !7235 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !7237, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7238, metadata !DIExpression()), !dbg !7242
  %call = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7243
  %conv = trunc i64 %call to i32, !dbg !7244
  %defer_output = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7245
  %0 = bitcast i24* %defer_output to i32*, !dbg !7245
  %bf.load = load i32, i32* %0, align 8, !dbg !7246
  %bf.value = and i32 %conv, 1, !dbg !7246
  %bf.clear = and i32 %bf.load, -2, !dbg !7246
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !7246
  store i32 %bf.set, i32* %0, align 8, !dbg !7246
  %call1 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7247
  %conv2 = trunc i64 %call1 to i32, !dbg !7248
  %bf.load4 = load i32, i32* %0, align 8, !dbg !7249
  %bf.value5 = shl i32 %conv2, 3, !dbg !7249
  %bf.shl = and i32 %bf.value5, 8, !dbg !7249
  %bf.clear6 = and i32 %bf.load4, -9, !dbg !7249
  %bf.set7 = or i32 %bf.clear6, %bf.shl, !dbg !7249
  store i32 %bf.set7, i32* %0, align 8, !dbg !7249
  %call8 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7250
  %conv9 = trunc i64 %call8 to i32, !dbg !7251
  %bf.load11 = load i32, i32* %0, align 8, !dbg !7252
  %bf.value12 = shl i32 %conv9, 5, !dbg !7252
  %bf.shl13 = and i32 %bf.value12, 32, !dbg !7252
  %bf.clear14 = and i32 %bf.load11, -33, !dbg !7252
  %bf.set15 = or i32 %bf.clear14, %bf.shl13, !dbg !7252
  store i32 %bf.set15, i32* %0, align 8, !dbg !7252
  %call16 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7253
  %conv17 = trunc i64 %call16 to i32, !dbg !7254
  %bf.load19 = load i32, i32* %0, align 8, !dbg !7255
  %bf.value20 = shl i32 %conv17, 7, !dbg !7255
  %bf.shl21 = and i32 %bf.value20, 128, !dbg !7255
  %bf.clear22 = and i32 %bf.load19, -129, !dbg !7255
  %bf.set23 = or i32 %bf.clear22, %bf.shl21, !dbg !7255
  store i32 %bf.set23, i32* %0, align 8, !dbg !7255
  %call24 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7256
  %conv25 = trunc i64 %call24 to i32, !dbg !7257
  %bf.load27 = load i32, i32* %0, align 8, !dbg !7258
  %bf.value28 = shl i32 %conv25, 8, !dbg !7258
  %bf.shl29 = and i32 %bf.value28, 256, !dbg !7258
  %bf.clear30 = and i32 %bf.load27, -257, !dbg !7258
  %bf.set31 = or i32 %bf.clear30, %bf.shl29, !dbg !7258
  store i32 %bf.set31, i32* %0, align 8, !dbg !7258
  %call32 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7259
  %conv33 = trunc i64 %call32 to i32, !dbg !7260
  %bf.load35 = load i32, i32* %0, align 8, !dbg !7261
  %bf.value36 = shl i32 %conv33, 9, !dbg !7261
  %bf.shl37 = and i32 %bf.value36, 512, !dbg !7261
  %bf.clear38 = and i32 %bf.load35, -513, !dbg !7261
  %bf.set39 = or i32 %bf.clear38, %bf.shl37, !dbg !7261
  store i32 %bf.set39, i32* %0, align 8, !dbg !7261
  %call40 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 2) #7, !dbg !7262
  %conv41 = trunc i64 %call40 to i32, !dbg !7263
  %bf.load43 = load i32, i32* %0, align 8, !dbg !7264
  %bf.value44 = shl i32 %conv41, 10, !dbg !7264
  %bf.shl45 = and i32 %bf.value44, 3072, !dbg !7264
  %bf.clear46 = and i32 %bf.load43, -3073, !dbg !7264
  %bf.set47 = or i32 %bf.clear46, %bf.shl45, !dbg !7264
  store i32 %bf.set47, i32* %0, align 8, !dbg !7264
  %call48 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7265
  %conv49 = trunc i64 %call48 to i32, !dbg !7266
  %bf.load51 = load i32, i32* %0, align 8, !dbg !7267
  %bf.value52 = shl i32 %conv49, 12, !dbg !7267
  %bf.shl53 = and i32 %bf.value52, 4096, !dbg !7267
  %bf.clear54 = and i32 %bf.load51, -4097, !dbg !7267
  %bf.set55 = or i32 %bf.clear54, %bf.shl53, !dbg !7267
  store i32 %bf.set55, i32* %0, align 8, !dbg !7267
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7268
  %bf.load56 = load i64, i64* %1, align 8, !dbg !7268
  %bf.cast1 = and i64 %bf.load56, 65535, !dbg !7270
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !7270
  br i1 %cmp, label %if.then, label %if.end, !dbg !7271

if.then:                                          ; preds = %entry
  %call59 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7272
  %conv60 = trunc i64 %call59 to i32, !dbg !7274
  %bf.load62 = load i32, i32* %0, align 8, !dbg !7275
  %bf.value63 = shl i32 %conv60, 1, !dbg !7275
  %bf.shl64 = and i32 %bf.value63, 2, !dbg !7275
  %bf.clear65 = and i32 %bf.load62, -3, !dbg !7275
  %bf.set66 = or i32 %bf.clear65, %bf.shl64, !dbg !7275
  store i32 %bf.set66, i32* %0, align 8, !dbg !7275
  %call67 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7276
  %conv68 = trunc i64 %call67 to i32, !dbg !7277
  %bf.load70 = load i32, i32* %0, align 8, !dbg !7278
  %bf.value71 = shl i32 %conv68, 4, !dbg !7278
  %bf.shl72 = and i32 %bf.value71, 16, !dbg !7278
  %bf.clear73 = and i32 %bf.load70, -17, !dbg !7278
  %bf.set74 = or i32 %bf.clear73, %bf.shl72, !dbg !7278
  store i32 %bf.set74, i32* %0, align 8, !dbg !7278
  %call75 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 3) #7, !dbg !7279
  %conv76 = trunc i64 %call75 to i32, !dbg !7280
  %bf.load78 = load i32, i32* %0, align 8, !dbg !7281
  %bf.value79 = shl i32 %conv76, 13, !dbg !7281
  %bf.shl80 = and i32 %bf.value79, 57344, !dbg !7281
  %bf.clear81 = and i32 %bf.load78, -57345, !dbg !7281
  %bf.set82 = or i32 %bf.clear81, %bf.shl80, !dbg !7281
  store i32 %bf.set82, i32* %0, align 8, !dbg !7281
  %bf.load84.pre = load i64, i64* %1, align 8, !dbg !7282
  %.pre = and i64 %bf.load84.pre, 65535, !dbg !7282
  br label %if.end, !dbg !7283

if.end:                                           ; preds = %if.then, %entry
  %bf.cast862.pre-phi = phi i64 [ %.pre, %if.then ], [ %bf.cast1, %entry ], !dbg !7282
  %cmp87 = icmp eq i64 %bf.cast862.pre-phi, 32, !dbg !7282
  br i1 %cmp87, label %if.then95, label %lor.lhs.false, !dbg !7282

lor.lhs.false:                                    ; preds = %if.end
  %cmp93 = icmp eq i64 %bf.cast862.pre-phi, 29, !dbg !7282
  br i1 %cmp93, label %if.then95, label %if.end98, !dbg !7284

if.then95:                                        ; preds = %lor.lhs.false, %if.end
  %call96 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 16) #7, !dbg !7285
  %conv97 = trunc i64 %call96 to i16, !dbg !7286
  call void @llvm.dbg.value(metadata i16 %conv97, metadata !7239, metadata !DIExpression()), !dbg !7287
  tail call void @decl_init_priority_insert(%union.tree_node* %expr, i16 zeroext %conv97) #7, !dbg !7288
  br label %if.end98, !dbg !7289

if.end98:                                         ; preds = %if.then95, %lor.lhs.false
  ret void, !dbg !7290
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_ts_function_decl_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !7291 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !7293, metadata !DIExpression()), !dbg !7295
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7294, metadata !DIExpression()), !dbg !7295
  %call = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 11) #7, !dbg !7296
  %conv = trunc i64 %call to i32, !dbg !7297
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 5, !dbg !7298
  %bf.load = load i32, i32* %function_code, align 8, !dbg !7299
  %bf.value = and i32 %conv, 2047, !dbg !7299
  %bf.clear = and i32 %bf.load, -2048, !dbg !7299
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !7299
  store i32 %bf.set, i32* %function_code, align 8, !dbg !7299
  %call1 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 2) #7, !dbg !7300
  %conv2 = trunc i64 %call1 to i32, !dbg !7301
  %bf.load4 = load i32, i32* %function_code, align 8, !dbg !7302
  %bf.value5 = shl i32 %conv2, 11, !dbg !7302
  %bf.shl = and i32 %bf.value5, 6144, !dbg !7302
  %bf.clear6 = and i32 %bf.load4, -6145, !dbg !7302
  %bf.set7 = or i32 %bf.clear6, %bf.shl, !dbg !7302
  store i32 %bf.set7, i32* %function_code, align 8, !dbg !7302
  %call8 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7303
  %conv9 = trunc i64 %call8 to i32, !dbg !7304
  %bf.load11 = load i32, i32* %function_code, align 8, !dbg !7305
  %bf.value12 = shl i32 %conv9, 13, !dbg !7305
  %bf.shl13 = and i32 %bf.value12, 8192, !dbg !7305
  %bf.clear14 = and i32 %bf.load11, -8193, !dbg !7305
  %bf.set15 = or i32 %bf.clear14, %bf.shl13, !dbg !7305
  store i32 %bf.set15, i32* %function_code, align 8, !dbg !7305
  %call16 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7306
  %conv17 = trunc i64 %call16 to i32, !dbg !7307
  %bf.load19 = load i32, i32* %function_code, align 8, !dbg !7308
  %bf.value20 = shl i32 %conv17, 14, !dbg !7308
  %bf.shl21 = and i32 %bf.value20, 16384, !dbg !7308
  %bf.clear22 = and i32 %bf.load19, -16385, !dbg !7308
  %bf.set23 = or i32 %bf.clear22, %bf.shl21, !dbg !7308
  store i32 %bf.set23, i32* %function_code, align 8, !dbg !7308
  %call24 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7309
  %conv25 = trunc i64 %call24 to i32, !dbg !7310
  %bf.load27 = load i32, i32* %function_code, align 8, !dbg !7311
  %bf.value28 = shl i32 %conv25, 15, !dbg !7311
  %bf.shl29 = and i32 %bf.value28, 32768, !dbg !7311
  %bf.clear30 = and i32 %bf.load27, -32769, !dbg !7311
  %bf.set31 = or i32 %bf.clear30, %bf.shl29, !dbg !7311
  store i32 %bf.set31, i32* %function_code, align 8, !dbg !7311
  %call32 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7312
  %conv33 = trunc i64 %call32 to i32, !dbg !7313
  %bf.load35 = load i32, i32* %function_code, align 8, !dbg !7314
  %bf.value36 = shl i32 %conv33, 16, !dbg !7314
  %bf.shl37 = and i32 %bf.value36, 65536, !dbg !7314
  %bf.clear38 = and i32 %bf.load35, -65537, !dbg !7314
  %bf.set39 = or i32 %bf.clear38, %bf.shl37, !dbg !7314
  store i32 %bf.set39, i32* %function_code, align 8, !dbg !7314
  %call40 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7315
  %conv41 = trunc i64 %call40 to i32, !dbg !7316
  %bf.load43 = load i32, i32* %function_code, align 8, !dbg !7317
  %bf.value44 = shl i32 %conv41, 17, !dbg !7317
  %bf.shl45 = and i32 %bf.value44, 131072, !dbg !7317
  %bf.clear46 = and i32 %bf.load43, -131073, !dbg !7317
  %bf.set47 = or i32 %bf.clear46, %bf.shl45, !dbg !7317
  store i32 %bf.set47, i32* %function_code, align 8, !dbg !7317
  %call48 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7318
  %conv49 = trunc i64 %call48 to i32, !dbg !7319
  %bf.load51 = load i32, i32* %function_code, align 8, !dbg !7320
  %bf.value52 = shl i32 %conv49, 18, !dbg !7320
  %bf.shl53 = and i32 %bf.value52, 262144, !dbg !7320
  %bf.clear54 = and i32 %bf.load51, -262145, !dbg !7320
  %bf.set55 = or i32 %bf.clear54, %bf.shl53, !dbg !7320
  store i32 %bf.set55, i32* %function_code, align 8, !dbg !7320
  %call56 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7321
  %conv57 = trunc i64 %call56 to i32, !dbg !7322
  %bf.load59 = load i32, i32* %function_code, align 8, !dbg !7323
  %bf.value60 = shl i32 %conv57, 19, !dbg !7323
  %bf.shl61 = and i32 %bf.value60, 524288, !dbg !7323
  %bf.clear62 = and i32 %bf.load59, -524289, !dbg !7323
  %bf.set63 = or i32 %bf.clear62, %bf.shl61, !dbg !7323
  store i32 %bf.set63, i32* %function_code, align 8, !dbg !7323
  %call64 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7324
  %conv65 = trunc i64 %call64 to i32, !dbg !7325
  %bf.load67 = load i32, i32* %function_code, align 8, !dbg !7326
  %bf.value68 = shl i32 %conv65, 20, !dbg !7326
  %bf.shl69 = and i32 %bf.value68, 1048576, !dbg !7326
  %bf.clear70 = and i32 %bf.load67, -1048577, !dbg !7326
  %bf.set71 = or i32 %bf.clear70, %bf.shl69, !dbg !7326
  store i32 %bf.set71, i32* %function_code, align 8, !dbg !7326
  %call72 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7327
  %conv73 = trunc i64 %call72 to i32, !dbg !7328
  %bf.load75 = load i32, i32* %function_code, align 8, !dbg !7329
  %bf.value76 = shl i32 %conv73, 21, !dbg !7329
  %bf.shl77 = and i32 %bf.value76, 2097152, !dbg !7329
  %bf.clear78 = and i32 %bf.load75, -2097153, !dbg !7329
  %bf.set79 = or i32 %bf.clear78, %bf.shl77, !dbg !7329
  store i32 %bf.set79, i32* %function_code, align 8, !dbg !7329
  %call80 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7330
  %conv81 = trunc i64 %call80 to i32, !dbg !7331
  %bf.load83 = load i32, i32* %function_code, align 8, !dbg !7332
  %bf.value84 = shl i32 %conv81, 22, !dbg !7332
  %bf.shl85 = and i32 %bf.value84, 4194304, !dbg !7332
  %bf.clear86 = and i32 %bf.load83, -4194305, !dbg !7332
  %bf.set87 = or i32 %bf.clear86, %bf.shl85, !dbg !7332
  store i32 %bf.set87, i32* %function_code, align 8, !dbg !7332
  %call88 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7333
  %conv89 = trunc i64 %call88 to i32, !dbg !7334
  %bf.load91 = load i32, i32* %function_code, align 8, !dbg !7335
  %bf.value92 = shl i32 %conv89, 23, !dbg !7335
  %bf.shl93 = and i32 %bf.value92, 8388608, !dbg !7335
  %bf.clear94 = and i32 %bf.load91, -8388609, !dbg !7335
  %bf.set95 = or i32 %bf.clear94, %bf.shl93, !dbg !7335
  store i32 %bf.set95, i32* %function_code, align 8, !dbg !7335
  %call96 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7336
  %conv97 = trunc i64 %call96 to i32, !dbg !7337
  %bf.load99 = load i32, i32* %function_code, align 8, !dbg !7338
  %bf.value100 = shl i32 %conv97, 24, !dbg !7338
  %bf.shl101 = and i32 %bf.value100, 16777216, !dbg !7338
  %bf.clear102 = and i32 %bf.load99, -16777217, !dbg !7338
  %bf.set103 = or i32 %bf.clear102, %bf.shl101, !dbg !7338
  store i32 %bf.set103, i32* %function_code, align 8, !dbg !7338
  %call104 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7339
  %conv105 = trunc i64 %call104 to i32, !dbg !7340
  %bf.load107 = load i32, i32* %function_code, align 8, !dbg !7341
  %bf.value108 = shl i32 %conv105, 25, !dbg !7341
  %bf.shl109 = and i32 %bf.value108, 33554432, !dbg !7341
  %bf.clear110 = and i32 %bf.load107, -33554433, !dbg !7341
  %bf.set111 = or i32 %bf.clear110, %bf.shl109, !dbg !7341
  store i32 %bf.set111, i32* %function_code, align 8, !dbg !7341
  %call112 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7342
  %conv113 = trunc i64 %call112 to i32, !dbg !7343
  %bf.load115 = load i32, i32* %function_code, align 8, !dbg !7344
  %bf.value116 = shl i32 %conv113, 26, !dbg !7344
  %bf.shl117 = and i32 %bf.value116, 67108864, !dbg !7344
  %bf.clear118 = and i32 %bf.load115, -67108865, !dbg !7344
  %bf.set119 = or i32 %bf.clear118, %bf.shl117, !dbg !7344
  store i32 %bf.set119, i32* %function_code, align 8, !dbg !7344
  %call120 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7345
  %conv121 = trunc i64 %call120 to i32, !dbg !7346
  %bf.load123 = load i32, i32* %function_code, align 8, !dbg !7347
  %bf.value124 = shl i32 %conv121, 27, !dbg !7347
  %bf.shl125 = and i32 %bf.value124, 134217728, !dbg !7347
  %bf.clear126 = and i32 %bf.load123, -134217729, !dbg !7347
  %bf.set127 = or i32 %bf.clear126, %bf.shl125, !dbg !7347
  store i32 %bf.set127, i32* %function_code, align 8, !dbg !7347
  %call128 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7348
  %conv129 = trunc i64 %call128 to i32, !dbg !7349
  %bf.load131 = load i32, i32* %function_code, align 8, !dbg !7350
  %bf.value132 = shl i32 %conv129, 28, !dbg !7350
  %bf.shl133 = and i32 %bf.value132, 268435456, !dbg !7350
  %bf.clear134 = and i32 %bf.load131, -268435457, !dbg !7350
  %bf.set135 = or i32 %bf.clear134, %bf.shl133, !dbg !7350
  store i32 %bf.set135, i32* %function_code, align 8, !dbg !7350
  ret void, !dbg !7351
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_ts_type_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !7352 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !7354, metadata !DIExpression()), !dbg !7357
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7355, metadata !DIExpression()), !dbg !7357
  %call = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 9) #7, !dbg !7358
  %conv = trunc i64 %call to i32, !dbg !7359
  %type = bitcast %union.tree_node* %expr to %struct.tree_type*, !dbg !7360
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 6, !dbg !7360
  %bf.load = load i32, i32* %precision, align 4, !dbg !7361
  %bf.value = and i32 %conv, 1023, !dbg !7361
  %bf.clear = and i32 %bf.load, -1024, !dbg !7361
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !7361
  store i32 %bf.set, i32* %precision, align 4, !dbg !7361
  %call1 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 7) #7, !dbg !7362
  %conv2 = trunc i64 %call1 to i32, !dbg !7363
  call void @llvm.dbg.value(metadata i32 %conv2, metadata !7356, metadata !DIExpression()), !dbg !7357
  %bf.load5 = load i32, i32* %precision, align 4, !dbg !7364
  %bf.value6 = shl i32 %conv2, 16, !dbg !7364
  %bf.shl = and i32 %bf.value6, 16711680, !dbg !7364
  %bf.clear7 = and i32 %bf.load5, -16711681, !dbg !7364
  %bf.set8 = or i32 %bf.clear7, %bf.shl, !dbg !7364
  store i32 %bf.set8, i32* %precision, align 4, !dbg !7364
  %call9 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7365
  %conv10 = trunc i64 %call9 to i32, !dbg !7366
  %bf.load12 = load i32, i32* %precision, align 4, !dbg !7367
  %bf.value13 = shl i32 %conv10, 24, !dbg !7367
  %bf.shl14 = and i32 %bf.value13, 16777216, !dbg !7367
  %bf.clear15 = and i32 %bf.load12, -16777217, !dbg !7367
  %bf.set16 = or i32 %bf.clear15, %bf.shl14, !dbg !7367
  store i32 %bf.set16, i32* %precision, align 4, !dbg !7367
  %call17 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7368
  %conv18 = trunc i64 %call17 to i32, !dbg !7369
  %bf.load20 = load i32, i32* %precision, align 4, !dbg !7370
  %bf.value21 = shl i32 %conv18, 10, !dbg !7370
  %bf.shl22 = and i32 %bf.value21, 1024, !dbg !7370
  %bf.clear23 = and i32 %bf.load20, -1025, !dbg !7370
  %bf.set24 = or i32 %bf.clear23, %bf.shl22, !dbg !7370
  store i32 %bf.set24, i32* %precision, align 4, !dbg !7370
  %call25 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7371
  %conv26 = trunc i64 %call25 to i32, !dbg !7372
  %bf.load28 = load i32, i32* %precision, align 4, !dbg !7373
  %bf.value29 = shl i32 %conv26, 11, !dbg !7373
  %bf.shl30 = and i32 %bf.value29, 2048, !dbg !7373
  %bf.clear31 = and i32 %bf.load28, -2049, !dbg !7373
  %bf.set32 = or i32 %bf.clear31, %bf.shl30, !dbg !7373
  store i32 %bf.set32, i32* %precision, align 4, !dbg !7373
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7374
  %bf.load33 = load i64, i64* %0, align 8, !dbg !7374
  %bf.cast1 = and i64 %bf.load33, 65535, !dbg !7376
  %cmp = icmp eq i64 %bf.cast1, 17, !dbg !7376
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7377

lor.lhs.false:                                    ; preds = %entry
  %cmp40 = icmp eq i64 %bf.cast1, 16, !dbg !7378
  br i1 %cmp40, label %if.then, label %if.end, !dbg !7379

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call42 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7380
  %conv43 = trunc i64 %call42 to i32, !dbg !7381
  %bf.load45 = load i32, i32* %precision, align 4, !dbg !7382
  %bf.value46 = shl i32 %conv43, 12, !dbg !7382
  %bf.shl47 = and i32 %bf.value46, 4096, !dbg !7382
  %bf.clear48 = and i32 %bf.load45, -4097, !dbg !7382
  %bf.set49 = or i32 %bf.clear48, %bf.shl47, !dbg !7382
  store i32 %bf.set49, i32* %precision, align 4, !dbg !7382
  br label %if.end, !dbg !7383

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %call50 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7384
  %bf.load53 = load i64, i64* %0, align 8, !dbg !7385
  %bf.value54 = shl i64 %call50, 41, !dbg !7385
  %bf.shl55 = and i64 %bf.value54, 2199023255552, !dbg !7385
  %bf.clear56 = and i64 %bf.load53, -2199023255553, !dbg !7385
  %bf.set57 = or i64 %bf.clear56, %bf.shl55, !dbg !7385
  store i64 %bf.set57, i64* %0, align 8, !dbg !7385
  %call58 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7386
  %conv59 = trunc i64 %call58 to i32, !dbg !7387
  %bf.load61 = load i32, i32* %precision, align 4, !dbg !7388
  %bf.value62 = shl i32 %conv59, 13, !dbg !7388
  %bf.shl63 = and i32 %bf.value62, 8192, !dbg !7388
  %bf.clear64 = and i32 %bf.load61, -8193, !dbg !7388
  %bf.set65 = or i32 %bf.clear64, %bf.shl63, !dbg !7388
  store i32 %bf.set65, i32* %precision, align 4, !dbg !7388
  %call66 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 2) #7, !dbg !7389
  %conv67 = trunc i64 %call66 to i32, !dbg !7390
  %bf.load69 = load i32, i32* %precision, align 4, !dbg !7391
  %bf.value70 = shl i32 %conv67, 14, !dbg !7391
  %bf.shl71 = and i32 %bf.value70, 49152, !dbg !7391
  %bf.clear72 = and i32 %bf.load69, -49153, !dbg !7391
  %bf.set73 = or i32 %bf.clear72, %bf.shl71, !dbg !7391
  store i32 %bf.set73, i32* %precision, align 4, !dbg !7391
  %call74 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7392
  %bf.load78 = load i64, i64* %0, align 8, !dbg !7393
  %bf.value79 = shl i64 %call74, 42, !dbg !7393
  %bf.shl80 = and i64 %bf.value79, 4398046511104, !dbg !7393
  %bf.clear81 = and i64 %bf.load78, -4398046511105, !dbg !7393
  %bf.set82 = or i64 %bf.clear81, %bf.shl80, !dbg !7393
  store i64 %bf.set82, i64* %0, align 8, !dbg !7393
  %call84 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7394
  %bf.load87 = load i64, i64* %0, align 8, !dbg !7395
  %bf.value88 = shl i64 %call84, 20, !dbg !7395
  %bf.shl89 = and i64 %bf.value88, 1048576, !dbg !7395
  %bf.clear90 = and i64 %bf.load87, -1048577, !dbg !7395
  %bf.set91 = or i64 %bf.clear90, %bf.shl89, !dbg !7395
  store i64 %bf.set91, i64* %0, align 8, !dbg !7395
  %call93 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 32) #7, !dbg !7396
  %conv94 = trunc i64 %call93 to i32, !dbg !7397
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7398
  store i32 %conv94, i32* %1, align 8, !dbg !7399
  %call96 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 32) #7, !dbg !7400
  %conv97 = trunc i64 %call96 to i32, !dbg !7400
  %alias_set = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type, i64 0, i32 8, !dbg !7401
  store i32 %conv97, i32* %alias_set, align 4, !dbg !7402
  ret void, !dbg !7403
}

; Function Attrs: nounwind uwtable
define internal fastcc void @unpack_ts_block_value_fields(%struct.bitpack_d* %bp, %union.tree_node* %expr) unnamed_addr #5 !dbg !7404 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitpack_d* %bp, metadata !7406, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7407, metadata !DIExpression()), !dbg !7408
  %call = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 1) #7, !dbg !7409
  %conv = trunc i64 %call to i32, !dbg !7410
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7411
  %bf.load = load i32, i32* %0, align 8, !dbg !7412
  %bf.value = and i32 %conv, 1, !dbg !7412
  %bf.clear = and i32 %bf.load, -2, !dbg !7412
  %bf.set = or i32 %bf.clear, %bf.value, !dbg !7412
  store i32 %bf.set, i32* %0, align 8, !dbg !7412
  %call1 = tail call i64 @bp_unpack_value(%struct.bitpack_d* %bp, i32 31) #7, !dbg !7413
  %conv2 = trunc i64 %call1 to i32, !dbg !7414
  %bf.load4 = load i32, i32* %0, align 8, !dbg !7415
  %bf.shl = shl i32 %conv2, 1, !dbg !7415
  %bf.clear6 = and i32 %bf.load4, 1, !dbg !7415
  %bf.set7 = or i32 %bf.clear6, %bf.shl, !dbg !7415
  store i32 %bf.set7, i32* %0, align 8, !dbg !7415
  ret void, !dbg !7416
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #2

declare dso_local void @decl_init_priority_insert(%union.tree_node*, i16 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_common_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7417 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7419, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7420, metadata !DIExpression()), !dbg !7422
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7421, metadata !DIExpression()), !dbg !7422
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7423
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7424
  store %union.tree_node* %call, %union.tree_node** %type, align 8, !dbg !7425
  ret void, !dbg !7426
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_vector_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7427 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7429, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7430, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7431, metadata !DIExpression()), !dbg !7432
  %call = tail call fastcc %union.tree_node* @lto_input_chain(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7433
  %elements = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7434
  %0 = bitcast i32* %elements to %union.tree_node**, !dbg !7434
  store %union.tree_node* %call, %union.tree_node** %0, align 8, !dbg !7435
  ret void, !dbg !7436
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_complex_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7437 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7439, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7440, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7441, metadata !DIExpression()), !dbg !7442
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7443
  %real = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7444
  %0 = bitcast i32* %real to %union.tree_node**, !dbg !7444
  store %union.tree_node* %call, %union.tree_node** %0, align 8, !dbg !7445
  %call1 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7446
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7447
  store %union.tree_node* %call1, %union.tree_node** %1, align 8, !dbg !7448
  ret void, !dbg !7449
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_decl_minimal_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7450 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7452, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7453, metadata !DIExpression()), !dbg !7455
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7454, metadata !DIExpression()), !dbg !7455
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7456
  %name = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7457
  store %union.tree_node* %call, %union.tree_node** %name, align 8, !dbg !7458
  %call1 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7459
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7460
  store %union.tree_node* %call1, %union.tree_node** %context, align 8, !dbg !7461
  %call3 = tail call fastcc i32 @lto_input_location(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7462
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7463
  store i32 %call3, i32* %locus, align 8, !dbg !7464
  ret void, !dbg !7465
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_decl_common_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7466 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7468, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7469, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7470, metadata !DIExpression()), !dbg !7471
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7472
  %size = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7473
  store %union.tree_node* %call, %union.tree_node** %size, align 8, !dbg !7474
  %call1 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7475
  %size_unit = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7476
  store %union.tree_node* %call1, %union.tree_node** %size_unit, align 8, !dbg !7477
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7478
  %bf.load = load i64, i64* %0, align 8, !dbg !7478
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7480
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !7480
  br i1 %cmp, label %if.end, label %if.then, !dbg !7481

if.then:                                          ; preds = %entry
  %call3 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7482
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7483
  store %union.tree_node* %call3, %union.tree_node** %initial, align 8, !dbg !7484
  br label %if.end, !dbg !7483

if.end:                                           ; preds = %entry, %if.then
  %call5 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7485
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7486
  store %union.tree_node* %call5, %union.tree_node** %attributes, align 8, !dbg !7487
  %call7 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7488
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !7489
  store %union.tree_node* %call7, %union.tree_node** %abstract_origin, align 8, !dbg !7490
  %bf.load10 = load i64, i64* %0, align 8, !dbg !7491
  %bf.cast122 = and i64 %bf.load10, 65535, !dbg !7493
  %cmp13 = icmp eq i64 %bf.cast122, 34, !dbg !7493
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !7494

if.then14:                                        ; preds = %if.end
  %call15 = tail call fastcc %union.tree_node* @lto_input_chain(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7495
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7496
  store %union.tree_node* %call15, %union.tree_node** %chain, align 8, !dbg !7497
  %bf.load18.pre = load i64, i64* %0, align 8, !dbg !7498
  %.pre = and i64 %bf.load18.pre, 65535, !dbg !7500
  br label %if.end16, !dbg !7496

if.end16:                                         ; preds = %if.then14, %if.end
  %bf.cast203.pre-phi = phi i64 [ %.pre, %if.then14 ], [ %bf.cast122, %if.end ], !dbg !7500
  %cmp21 = icmp eq i64 %bf.cast203.pre-phi, 32, !dbg !7500
  br i1 %cmp21, label %land.lhs.true, label %lor.lhs.false, !dbg !7501

lor.lhs.false:                                    ; preds = %if.end16
  %cmp26 = icmp eq i64 %bf.cast203.pre-phi, 34, !dbg !7502
  br i1 %cmp26, label %land.lhs.true, label %if.end33, !dbg !7503

land.lhs.true:                                    ; preds = %lor.lhs.false, %if.end16
  %decl_flag_2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7504
  %1 = bitcast i40* %decl_flag_2 to i64*, !dbg !7504
  %bf.load28 = load i64, i64* %1, align 8, !dbg !7504
  %bf.cast305 = and i64 %bf.load28, 67108864, !dbg !7504
  %tobool = icmp eq i64 %bf.cast305, 0, !dbg !7504
  br i1 %tobool, label %if.end33, label %if.then31, !dbg !7505

if.then31:                                        ; preds = %land.lhs.true
  %call32 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7506
  tail call void @decl_value_expr_insert(%union.tree_node* %expr, %union.tree_node* %call32) #7, !dbg !7506
  br label %if.end33, !dbg !7506

if.end33:                                         ; preds = %land.lhs.true, %if.then31, %lor.lhs.false
  ret void, !dbg !7507
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_decl_non_common_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7508 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7510, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7511, metadata !DIExpression()), !dbg !7513
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7512, metadata !DIExpression()), !dbg !7513
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7514
  %bf.load = load i64, i64* %0, align 8, !dbg !7514
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7516
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !7516
  br i1 %cmp, label %if.then, label %if.end, !dbg !7517

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7518
  %arguments = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 2, !dbg !7520
  store %union.tree_node* %call, %union.tree_node** %arguments, align 8, !dbg !7521
  %call1 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7522
  %result = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 3, !dbg !7523
  store %union.tree_node* %call1, %union.tree_node** %result, align 8, !dbg !7524
  br label %if.end, !dbg !7525

if.end:                                           ; preds = %if.then, %entry
  %call3 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7526
  %vindex = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 4, !dbg !7527
  store %union.tree_node* %call3, %union.tree_node** %vindex, align 8, !dbg !7528
  ret void, !dbg !7529
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_decl_with_vis_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7530 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7532, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7533, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7534, metadata !DIExpression()), !dbg !7536
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7537
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7535, metadata !DIExpression()), !dbg !7536
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7538
  br i1 %tobool, label %if.end, label %if.then, !dbg !7540

if.then:                                          ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7541
  %bf.load = load i64, i64* %0, align 8, !dbg !7541
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7541
  %cmp = icmp eq i64 %bf.cast1, 1, !dbg !7541
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7541

cond.true:                                        ; preds = %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2104, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !7541
  br label %cond.end, !dbg !7541

cond.end:                                         ; preds = %if.then, %cond.true
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !7543
  store %union.tree_node* %call, %union.tree_node** %assembler_name, align 8, !dbg !7543
  br label %if.end, !dbg !7544

if.end:                                           ; preds = %entry, %cond.end
  %call1 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7545
  %section_name = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7546
  store %union.tree_node* %call1, %union.tree_node** %section_name, align 8, !dbg !7547
  %call3 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7548
  %comdat_group = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !7549
  store %union.tree_node* %call3, %union.tree_node** %comdat_group, align 8, !dbg !7550
  ret void, !dbg !7551
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_field_decl_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7552 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7554, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7555, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7556, metadata !DIExpression()), !dbg !7557
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7558
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7559
  %0 = bitcast %struct.rtx_def** %offset to %union.tree_node**, !dbg !7559
  store %union.tree_node* %call, %union.tree_node** %0, align 8, !dbg !7560
  %call1 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7561
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !7562
  store %union.tree_node* %call1, %union.tree_node** %1, align 8, !dbg !7563
  %call3 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7564
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7565
  store %union.tree_node* %call3, %union.tree_node** %2, align 8, !dbg !7566
  %call5 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7567
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !7568
  store %union.tree_node* %call5, %union.tree_node** %3, align 8, !dbg !7569
  %call7 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7570
  %fcontext = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7571
  %4 = bitcast i24* %fcontext to %union.tree_node**, !dbg !7571
  store %union.tree_node* %call7, %union.tree_node** %4, align 8, !dbg !7572
  %call9 = tail call fastcc %union.tree_node* @lto_input_chain(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7573
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7574
  store %union.tree_node* %call9, %union.tree_node** %chain, align 8, !dbg !7575
  ret void, !dbg !7576
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_function_decl_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7577 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7579, metadata !DIExpression()), !dbg !7582
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7580, metadata !DIExpression()), !dbg !7582
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7581, metadata !DIExpression()), !dbg !7582
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7583
  %personality = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 2, !dbg !7584
  store %union.tree_node* %call, %union.tree_node** %personality, align 8, !dbg !7585
  %call1 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7586
  %function_specific_target = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 3, !dbg !7587
  store %union.tree_node* %call1, %union.tree_node** %function_specific_target, align 8, !dbg !7588
  %call3 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7589
  %function_specific_optimization = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 4, !dbg !7590
  store %union.tree_node* %call3, %union.tree_node** %function_specific_optimization, align 8, !dbg !7591
  %0 = load %union.tree_node*, %union.tree_node** %personality, align 8, !dbg !7592
  %tobool = icmp eq %union.tree_node* %0, null, !dbg !7592
  br i1 %tobool, label %if.end, label %if.then, !dbg !7594

if.then:                                          ; preds = %entry
  tail call fastcc void @lto_init_eh() #8, !dbg !7595
  br label %if.end, !dbg !7595

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7596
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_type_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7597 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7599, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7600, metadata !DIExpression()), !dbg !7602
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7601, metadata !DIExpression()), !dbg !7602
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7603
  %bf.load = load i64, i64* %0, align 8, !dbg !7603
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7605
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !7605
  br i1 %cmp, label %if.then, label %if.else, !dbg !7606

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7607
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7608
  %1 = bitcast i32* %values to %union.tree_node**, !dbg !7608
  store %union.tree_node* %call, %union.tree_node** %1, align 8, !dbg !7609
  br label %if.end54, !dbg !7608

if.else:                                          ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 15, !dbg !7610
  br i1 %cmp5, label %if.then6, label %if.else10, !dbg !7612

if.then6:                                         ; preds = %if.else
  %call7 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7613
  %values9 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7614
  %2 = bitcast i32* %values9 to %union.tree_node**, !dbg !7614
  store %union.tree_node* %call7, %union.tree_node** %2, align 8, !dbg !7615
  br label %if.end54, !dbg !7614

if.else10:                                        ; preds = %if.else
  %cmp15 = icmp eq i64 %bf.cast1, 16, !dbg !7616
  br i1 %cmp15, label %if.then21, label %lor.lhs.false, !dbg !7618

lor.lhs.false:                                    ; preds = %if.else10
  %cmp20 = icmp eq i64 %bf.cast1, 17, !dbg !7619
  br i1 %cmp20, label %if.then21, label %if.else25, !dbg !7620

if.then21:                                        ; preds = %lor.lhs.false, %if.else10
  %call22 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7621
  %values24 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7622
  %3 = bitcast i32* %values24 to %union.tree_node**, !dbg !7622
  store %union.tree_node* %call22, %union.tree_node** %3, align 8, !dbg !7623
  br label %if.end54, !dbg !7622

if.else25:                                        ; preds = %lor.lhs.false
  %cmp30 = icmp eq i64 %bf.cast1, 20, !dbg !7624
  br i1 %cmp30, label %if.then37, label %lor.lhs.false31, !dbg !7626

lor.lhs.false31:                                  ; preds = %if.else25
  %cmp36 = icmp eq i64 %bf.cast1, 21, !dbg !7627
  br i1 %cmp36, label %if.then37, label %if.else41, !dbg !7628

if.then37:                                        ; preds = %lor.lhs.false31, %if.else25
  %call38 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7629
  %values40 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7630
  %4 = bitcast i32* %values40 to %union.tree_node**, !dbg !7630
  store %union.tree_node* %call38, %union.tree_node** %4, align 8, !dbg !7631
  br label %if.end54, !dbg !7630

if.else41:                                        ; preds = %lor.lhs.false31
  %cmp46 = icmp eq i64 %bf.cast1, 14, !dbg !7632
  br i1 %cmp46, label %if.then47, label %if.end54, !dbg !7634

if.then47:                                        ; preds = %if.else41
  %call48 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7635
  %values50 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7636
  %5 = bitcast i32* %values50 to %union.tree_node**, !dbg !7636
  store %union.tree_node* %call48, %union.tree_node** %5, align 8, !dbg !7637
  br label %if.end54, !dbg !7636

if.end54:                                         ; preds = %if.then6, %if.then37, %if.then47, %if.else41, %if.then21, %if.then
  %call55 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7638
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7639
  store %union.tree_node* %call55, %union.tree_node** %6, align 8, !dbg !7640
  %call57 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7641
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7642
  store %union.tree_node* %call57, %union.tree_node** %7, align 8, !dbg !7643
  %call59 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7644
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7645
  store %union.tree_node* %call59, %union.tree_node** %8, align 8, !dbg !7646
  %call61 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7647
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 7, !dbg !7648
  store %union.tree_node* %call61, %union.tree_node** %9, align 8, !dbg !7649
  %bf.load64 = load i64, i64* %0, align 8, !dbg !7650
  %bf.cast668 = and i64 %bf.load64, 65535, !dbg !7650
  %cmp67 = icmp eq i64 %bf.cast668, 10, !dbg !7650
  br i1 %cmp67, label %if.end77, label %lor.lhs.false68, !dbg !7650

lor.lhs.false68:                                  ; preds = %if.end54
  %cmp73 = icmp eq i64 %bf.cast668, 12, !dbg !7650
  br i1 %cmp73, label %if.end77, label %if.then74, !dbg !7652

if.then74:                                        ; preds = %lor.lhs.false68
  %call75 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7653
  %minval = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 8, !dbg !7654
  %10 = bitcast %struct.lang_decl** %minval to %union.tree_node**, !dbg !7654
  store %union.tree_node* %call75, %union.tree_node** %10, align 8, !dbg !7655
  br label %if.end77, !dbg !7654

if.end77:                                         ; preds = %if.then74, %lor.lhs.false68, %if.end54
  %call78 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7656
  %maxval = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7657
  %11 = bitcast %struct.rtx_def** %maxval to %union.tree_node**, !dbg !7657
  store %union.tree_node* %call78, %union.tree_node** %11, align 8, !dbg !7658
  %call80 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7659
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7660
  store %union.tree_node* %call80, %union.tree_node** %12, align 8, !dbg !7661
  %bf.load83 = load i64, i64* %0, align 8, !dbg !7662
  %bf.cast8510 = and i64 %bf.load83, 65535, !dbg !7662
  %cmp86 = icmp eq i64 %bf.cast8510, 16, !dbg !7662
  br i1 %cmp86, label %if.then99, label %lor.lhs.false87, !dbg !7662

lor.lhs.false87:                                  ; preds = %if.end77
  %cmp92 = icmp eq i64 %bf.cast8510, 17, !dbg !7662
  br i1 %cmp92, label %if.then99, label %lor.lhs.false93, !dbg !7662

lor.lhs.false93:                                  ; preds = %lor.lhs.false87
  %cmp98 = icmp eq i64 %bf.cast8510, 18, !dbg !7662
  br i1 %cmp98, label %if.then99, label %if.end102, !dbg !7664

if.then99:                                        ; preds = %lor.lhs.false93, %lor.lhs.false87, %if.end77
  %call100 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7665
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 3, !dbg !7666
  store %union.tree_node* %call100, %union.tree_node** %13, align 8, !dbg !7667
  br label %if.end102, !dbg !7666

if.end102:                                        ; preds = %if.then99, %lor.lhs.false93
  %call103 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7668
  %context = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !7669
  %14 = bitcast i24* %context to %union.tree_node**, !dbg !7669
  store %union.tree_node* %call103, %union.tree_node** %14, align 8, !dbg !7670
  %call105 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7671
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 1, !dbg !7672
  store %union.tree_node* %call105, %union.tree_node** %15, align 8, !dbg !7673
  %call107 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7674
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7675
  store %union.tree_node* %call107, %union.tree_node** %chain, align 8, !dbg !7676
  ret void, !dbg !7677
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_list_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7678 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7680, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7681, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7682, metadata !DIExpression()), !dbg !7683
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7684
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7685
  %0 = bitcast i32* %purpose to %union.tree_node**, !dbg !7685
  store %union.tree_node* %call, %union.tree_node** %0, align 8, !dbg !7686
  %call1 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7687
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7688
  store %union.tree_node* %call1, %union.tree_node** %1, align 8, !dbg !7689
  %call3 = tail call fastcc %union.tree_node* @lto_input_chain(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7690
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7691
  store %union.tree_node* %call3, %union.tree_node** %chain, align 8, !dbg !7692
  ret void, !dbg !7693
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_vec_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7694 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7696, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7697, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7698, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.value(metadata i32 0, metadata !7699, metadata !DIExpression()), !dbg !7700
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7701
  %a = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7701
  br label %for.cond, !dbg !7704

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !7705
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7699, metadata !DIExpression()), !dbg !7700
  %1 = load i32, i32* %0, align 8, !dbg !7706
  %2 = sext i32 %1 to i64, !dbg !7707
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !7707
  br i1 %cmp, label %for.body, label %for.end, !dbg !7708

for.body:                                         ; preds = %for.cond
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7709
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %a, i64 %indvars.iv, !dbg !7710
  store %union.tree_node* %call, %union.tree_node** %arrayidx, align 8, !dbg !7711
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7712
  call void @llvm.dbg.value(metadata i32 undef, metadata !7699, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7700
  br label %for.cond, !dbg !7713, !llvm.loop !7714

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7716
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_exp_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7717 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7719, metadata !DIExpression()), !dbg !7725
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7720, metadata !DIExpression()), !dbg !7725
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7721, metadata !DIExpression()), !dbg !7725
  %call = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !7726
  %conv = trunc i64 %call to i32, !dbg !7726
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7723, metadata !DIExpression()), !dbg !7725
  %call1 = tail call fastcc i32 @tree_operand_length(%union.tree_node* %expr) #8, !dbg !7727
  %cmp = icmp eq i32 %call1, %conv, !dbg !7727
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !7727

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i32 2235, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !7727
  br label %cond.end, !dbg !7727

cond.end:                                         ; preds = %entry, %cond.true
  call void @llvm.dbg.value(metadata i32 0, metadata !7722, metadata !DIExpression()), !dbg !7725
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7728
  %sext = shl i64 %call, 32, !dbg !7731
  %0 = ashr exact i64 %sext, 32, !dbg !7731
  br label %for.cond, !dbg !7731

for.cond:                                         ; preds = %for.body, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end ], !dbg !7732
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7722, metadata !DIExpression()), !dbg !7725
  %cmp3 = icmp slt i64 %indvars.iv, %0, !dbg !7733
  br i1 %cmp3, label %for.body, label %for.end, !dbg !7734

for.body:                                         ; preds = %for.cond
  %call5 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7735
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %indvars.iv, !dbg !7736
  store %union.tree_node* %call5, %union.tree_node** %arrayidx, align 8, !dbg !7737
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7738
  call void @llvm.dbg.value(metadata i32 undef, metadata !7722, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7725
  br label %for.cond, !dbg !7739, !llvm.loop !7740

for.end:                                          ; preds = %for.cond
  %call6 = tail call fastcc i32 @lto_input_location(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7742
  call void @llvm.dbg.value(metadata i32 %call6, metadata !7724, metadata !DIExpression()), !dbg !7725
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7743
  store i32 %call6, i32* %1, align 8, !dbg !7743
  %call8 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7744
  %call9 = tail call %union.tree_node** @tree_block(%union.tree_node* %expr) #7, !dbg !7745
  store %union.tree_node* %call8, %union.tree_node** %call9, align 8, !dbg !7746
  ret void, !dbg !7747
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_block_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7748 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7750, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7751, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7752, metadata !DIExpression()), !dbg !7759
  %call = tail call fastcc i32 @lto_input_location(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7760
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7761
  store i32 %call, i32* %0, align 4, !dbg !7762
  %call1 = tail call fastcc %union.tree_node* @lto_input_chain(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7763
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7764
  store %union.tree_node* %call1, %union.tree_node** %1, align 8, !dbg !7765
  %call3 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !7766
  %conv = trunc i64 %call3 to i32, !dbg !7766
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7754, metadata !DIExpression()), !dbg !7759
  call void @llvm.dbg.value(metadata i32 0, metadata !7753, metadata !DIExpression()), !dbg !7759
  %nonlocalized_vars = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7767
  %2 = bitcast %union.tree_node** %nonlocalized_vars to %struct.VEC_tree_gc**, !dbg !7767
  br label %for.cond, !dbg !7768

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !7769
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7753, metadata !DIExpression()), !dbg !7759
  %call5 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7759
  %exitcond = icmp eq i32 %i.0, %conv, !dbg !7770
  br i1 %exitcond, label %for.end, label %for.body, !dbg !7771

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7755, metadata !DIExpression()), !dbg !7767
  %call7 = tail call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %2, %union.tree_node* %call5) #8, !dbg !7772
  %inc = add i32 %i.0, 1, !dbg !7773
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7753, metadata !DIExpression()), !dbg !7759
  br label %for.cond, !dbg !7774, !llvm.loop !7775

for.end:                                          ; preds = %for.cond
  %call5.lcssa = phi %union.tree_node* [ %call5, %for.cond ], !dbg !7759
  %supercontext = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7777
  %3 = bitcast i40* %supercontext to %union.tree_node**, !dbg !7777
  store %union.tree_node* %call5.lcssa, %union.tree_node** %3, align 8, !dbg !7778
  %call10 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7779
  %abstract_origin = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7780
  %4 = bitcast i32* %abstract_origin to %union.tree_node**, !dbg !7780
  store %union.tree_node* %call10, %union.tree_node** %4, align 8, !dbg !7781
  %call12 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7782
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7783
  store %union.tree_node* %call12, %union.tree_node** %5, align 8, !dbg !7784
  %call14 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7785
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7786
  store %union.tree_node* %call14, %union.tree_node** %6, align 8, !dbg !7787
  %call16 = tail call fastcc %union.tree_node* @lto_input_chain(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7788
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7789
  store %union.tree_node* %call16, %union.tree_node** %7, align 8, !dbg !7790
  ret void, !dbg !7791
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_binfo_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7792 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7794, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7795, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7796, metadata !DIExpression()), !dbg !7804
  %base_binfos3 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !7805
  %base = bitcast %union.tree_node** %base_binfos3 to %struct.VEC_tree_base*, !dbg !7805
  br label %do.body, !dbg !7808

do.body:                                          ; preds = %if.then, %entry
  %call = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7809
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7799, metadata !DIExpression()), !dbg !7804
  %cond1 = icmp eq %union.tree_node* %call, null, !dbg !7810
  br i1 %cond1, label %do.end, label %if.then, !dbg !7810

if.then:                                          ; preds = %do.body
  %call4 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* nonnull %base, %union.tree_node* nonnull %call) #8, !dbg !7811
  br label %do.body, !dbg !7812

do.end:                                           ; preds = %do.body
  %call6 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7813
  %offset = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7814
  %0 = bitcast i32* %offset to %union.tree_node**, !dbg !7814
  store %union.tree_node* %call6, %union.tree_node** %0, align 8, !dbg !7815
  %call8 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7816
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7817
  store %union.tree_node* %call8, %union.tree_node** %1, align 8, !dbg !7818
  %call10 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7819
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7820
  store %union.tree_node* %call10, %union.tree_node** %2, align 8, !dbg !7821
  %call12 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7822
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7823
  store %union.tree_node* %call12, %union.tree_node** %3, align 8, !dbg !7824
  %call14 = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !7825
  %conv = trunc i64 %call14 to i32, !dbg !7825
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7798, metadata !DIExpression()), !dbg !7804
  call void @llvm.dbg.value(metadata i32 0, metadata !7797, metadata !DIExpression()), !dbg !7804
  %base_accesses = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7826
  %4 = bitcast i40* %base_accesses to %struct.VEC_tree_gc**, !dbg !7826
  br label %for.cond, !dbg !7827

for.cond:                                         ; preds = %for.body, %do.end
  %i.0 = phi i32 [ 0, %do.end ], [ %inc, %for.body ], !dbg !7828
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7797, metadata !DIExpression()), !dbg !7804
  %call16 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7804
  %exitcond = icmp eq i32 %i.0, %conv, !dbg !7829
  br i1 %exitcond, label %for.end, label %for.body, !dbg !7830

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !7800, metadata !DIExpression()), !dbg !7826
  %call18 = tail call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %4, %union.tree_node* %call16) #8, !dbg !7831
  %inc = add i32 %i.0, 1, !dbg !7832
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7797, metadata !DIExpression()), !dbg !7804
  br label %for.cond, !dbg !7833, !llvm.loop !7834

for.end:                                          ; preds = %for.cond
  %call16.lcssa = phi %union.tree_node* [ %call16, %for.cond ], !dbg !7804
  %inheritance = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !7836
  %5 = bitcast i32* %inheritance to %union.tree_node**, !dbg !7836
  store %union.tree_node* %call16.lcssa, %union.tree_node** %5, align 8, !dbg !7837
  %call21 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7838
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7839
  store %union.tree_node* %call21, %union.tree_node** %6, align 8, !dbg !7840
  %call23 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7841
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !7842
  store %union.tree_node* %call23, %union.tree_node** %7, align 8, !dbg !7843
  ret void, !dbg !7844
}

; Function Attrs: nounwind uwtable
define internal fastcc void @lto_input_ts_constructor_tree_pointers(%struct.lto_input_block* %ib, %struct.data_in* %data_in, %union.tree_node* %expr) unnamed_addr #5 !dbg !7845 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7847, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7848, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata %union.tree_node* %expr, metadata !7849, metadata !DIExpression()), !dbg !7860
  %call = tail call i64 @lto_input_uleb128(%struct.lto_input_block* %ib) #7, !dbg !7861
  %conv = trunc i64 %call to i32, !dbg !7861
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7851, metadata !DIExpression()), !dbg !7860
  call void @llvm.dbg.value(metadata i32 0, metadata !7850, metadata !DIExpression()), !dbg !7860
  %elts = getelementptr inbounds %union.tree_node, %union.tree_node* %expr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7862
  %0 = bitcast i32* %elts to %struct.VEC_constructor_elt_gc**, !dbg !7862
  br label %for.cond, !dbg !7863

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ], !dbg !7864
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7850, metadata !DIExpression()), !dbg !7860
  %exitcond = icmp eq i32 %i.0, %conv, !dbg !7865
  br i1 %exitcond, label %for.end, label %for.body, !dbg !7866

for.body:                                         ; preds = %for.cond
  %call2 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7867
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7852, metadata !DIExpression()), !dbg !7868
  %call3 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7869
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7856, metadata !DIExpression()), !dbg !7868
  %call4 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_gc_safe_push(%struct.VEC_constructor_elt_gc** nonnull %0, %struct.constructor_elt_d* null) #8, !dbg !7870
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %call4, metadata !7857, metadata !DIExpression()), !dbg !7862
  %index5 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call4, i64 0, i32 0, !dbg !7870
  store %union.tree_node* %call2, %union.tree_node** %index5, align 8, !dbg !7870
  %value6 = getelementptr inbounds %struct.constructor_elt_d, %struct.constructor_elt_d* %call4, i64 0, i32 1, !dbg !7870
  store %union.tree_node* %call3, %union.tree_node** %value6, align 8, !dbg !7870
  %inc = add i32 %i.0, 1, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7850, metadata !DIExpression()), !dbg !7860
  br label %for.cond, !dbg !7872, !llvm.loop !7873

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7875
}

declare dso_local void @sorry(i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @lto_input_chain(%struct.lto_input_block* %ib, %struct.data_in* %data_in) unnamed_addr #5 !dbg !7876 {
entry:
  call void @llvm.dbg.value(metadata %struct.lto_input_block* %ib, metadata !7878, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7879, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7883, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7882, metadata !DIExpression()), !dbg !7885
  %call = tail call i64 @lto_input_sleb128(%struct.lto_input_block* %ib) #7, !dbg !7886
  %conv = trunc i64 %call to i32, !dbg !7886
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7881, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 0, metadata !7880, metadata !DIExpression()), !dbg !7885
  br label %for.cond, !dbg !7887

for.cond:                                         ; preds = %if.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.end ], !dbg !7889
  %first.0 = phi %union.tree_node* [ null, %entry ], [ %first.1, %if.end ], !dbg !7890
  %prev.0 = phi %union.tree_node* [ null, %entry ], [ %call2, %if.end ], !dbg !7885
  call void @llvm.dbg.value(metadata %union.tree_node* %prev.0, metadata !7883, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata %union.tree_node* %first.0, metadata !7882, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7880, metadata !DIExpression()), !dbg !7885
  %cmp = icmp slt i32 %i.0, %conv, !dbg !7891
  br i1 %cmp, label %for.body, label %for.end, !dbg !7893

for.body:                                         ; preds = %for.cond
  %call2 = tail call %union.tree_node* @lto_input_tree(%struct.lto_input_block* %ib, %struct.data_in* %data_in) #8, !dbg !7894
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7884, metadata !DIExpression()), !dbg !7885
  %tobool = icmp eq %union.tree_node* %prev.0, null, !dbg !7896
  br i1 %tobool, label %if.end, label %if.then, !dbg !7898

if.then:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %prev.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7899
  store %union.tree_node* %call2, %union.tree_node** %chain, align 8, !dbg !7900
  br label %if.end, !dbg !7899

if.end:                                           ; preds = %for.body, %if.then
  %first.1 = phi %union.tree_node* [ %first.0, %if.then ], [ %call2, %for.body ], !dbg !7885
  call void @llvm.dbg.value(metadata %union.tree_node* %first.1, metadata !7882, metadata !DIExpression()), !dbg !7885
  %chain4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7901
  store %union.tree_node* null, %union.tree_node** %chain4, align 8, !dbg !7902
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7883, metadata !DIExpression()), !dbg !7885
  %inc = add nuw nsw i32 %i.0, 1, !dbg !7903
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7880, metadata !DIExpression()), !dbg !7885
  br label %for.cond, !dbg !7904, !llvm.loop !7905

for.end:                                          ; preds = %for.cond
  %first.0.lcssa = phi %union.tree_node* [ %first.0, %for.cond ], !dbg !7890
  call void @llvm.dbg.value(metadata %union.tree_node* %first.0.lcssa, metadata !7882, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata %union.tree_node* %first.0.lcssa, metadata !7882, metadata !DIExpression()), !dbg !7885
  call void @llvm.dbg.value(metadata %union.tree_node* %first.0.lcssa, metadata !7882, metadata !DIExpression()), !dbg !7885
  ret %union.tree_node* %first.0.lcssa, !dbg !7907
}

declare dso_local void @decl_value_expr_insert(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @tree_operand_length(%union.tree_node* %node) unnamed_addr #0 !dbg !7908 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !7912, metadata !DIExpression()), !dbg !7913
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7914
  %bf.load = load i64, i64* %0, align 8, !dbg !7914
  %bf.cast = and i64 %bf.load, 65535, !dbg !7914
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7914
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7914
  %cmp = icmp eq i32 %1, 9, !dbg !7914
  br i1 %cmp, label %if.then, label %if.else, !dbg !7916

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7917
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !7917
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !7917
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !7917
  %4 = load i64, i64* %low, align 8, !dbg !7917
  %conv = trunc i64 %4 to i32, !dbg !7917
  br label %return, !dbg !7918

if.else:                                          ; preds = %entry
  %arrayidx8 = getelementptr inbounds [0 x i8], [0 x i8]* @tree_code_length, i64 0, i64 %bf.cast, !dbg !7919
  %5 = load i8, i8* %arrayidx8, align 1, !dbg !7919
  %conv9 = zext i8 %5 to i32, !dbg !7919
  br label %return, !dbg !7920

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i32 [ %conv, %if.then ], [ %conv9, %if.else ], !dbg !7921
  ret i32 %retval.0, !dbg !7922
}

declare dso_local %union.tree_node** @tree_block(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !7923 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !7927, metadata !DIExpression()), !dbg !7929
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !7928, metadata !DIExpression()), !dbg !7929
  %call = tail call fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 1) #8, !dbg !7930
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !7930
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !7930
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7930

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !7930
  br label %cond.end, !dbg !7930

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7930
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #8, !dbg !7930
  ret %union.tree_node** %call1, !dbg !7930
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7931 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !7933, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.value(metadata i32 1, metadata !7934, metadata !DIExpression()), !dbg !7936
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !7937
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !7937
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7937

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !7937
  br label %cond.end, !dbg !7937

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7937
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #8, !dbg !7937
  %tobool1 = icmp eq i32 %call, 0, !dbg !7937
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7937
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7935, metadata !DIExpression()), !dbg !7936
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7937

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_gc** %vec_ to i8**, !dbg !7938
  %2 = load i8*, i8** %1, align 8, !dbg !7938
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #7, !dbg !7938
  store i8* %call3, i8** %1, align 8, !dbg !7938
  br label %if.end, !dbg !7938

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7937
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_gc_safe_push(%struct.VEC_constructor_elt_gc** %vec_, %struct.constructor_elt_d* %obj_) unnamed_addr #0 !dbg !7940 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc** %vec_, metadata !7947, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* null, metadata !7948, metadata !DIExpression()), !dbg !7949
  %call = tail call fastcc i32 @VEC_constructor_elt_gc_reserve(%struct.VEC_constructor_elt_gc** %vec_, i32 1) #8, !dbg !7950
  %0 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %vec_, align 8, !dbg !7950
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %0, null, !dbg !7950
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7950

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %0, i64 0, i32 0, !dbg !7950
  br label %cond.end, !dbg !7950

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7950
  %call1 = tail call fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %cond, %struct.constructor_elt_d* null) #8, !dbg !7950
  ret %struct.constructor_elt_d* %call1, !dbg !7950
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_gc_reserve(%struct.VEC_constructor_elt_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7951 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_gc** %vec_, metadata !7955, metadata !DIExpression()), !dbg !7958
  call void @llvm.dbg.value(metadata i32 1, metadata !7956, metadata !DIExpression()), !dbg !7958
  %0 = load %struct.VEC_constructor_elt_gc*, %struct.VEC_constructor_elt_gc** %vec_, align 8, !dbg !7959
  %tobool = icmp eq %struct.VEC_constructor_elt_gc* %0, null, !dbg !7959
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7959

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_constructor_elt_gc, %struct.VEC_constructor_elt_gc* %0, i64 0, i32 0, !dbg !7959
  br label %cond.end, !dbg !7959

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_constructor_elt_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7959
  %call = tail call fastcc i32 @VEC_constructor_elt_base_space(%struct.VEC_constructor_elt_base* %cond, i32 1) #8, !dbg !7959
  %tobool1 = icmp eq i32 %call, 0, !dbg !7959
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !7959
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !7957, metadata !DIExpression()), !dbg !7958
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7959

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_constructor_elt_gc** %vec_ to i8**, !dbg !7960
  %2 = load i8*, i8** %1, align 8, !dbg !7960
  %call3 = tail call i8* @vec_gc_o_reserve(i8* %2, i32 1, i64 8, i64 16) #7, !dbg !7960
  store i8* %call3, i8** %1, align 8, !dbg !7960
  br label %if.end, !dbg !7960

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !7959
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.constructor_elt_d* @VEC_constructor_elt_base_quick_push(%struct.VEC_constructor_elt_base* %vec_, %struct.constructor_elt_d* %obj_) unnamed_addr #0 !dbg !7962 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !7967, metadata !DIExpression()), !dbg !7970
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* null, metadata !7968, metadata !DIExpression()), !dbg !7970
  %num1 = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !7971
  %0 = load i32, i32* %num1, align 8, !dbg !7971
  %inc = add i32 %0, 1, !dbg !7971
  store i32 %inc, i32* %num1, align 8, !dbg !7971
  %idxprom = zext i32 %0 to i64, !dbg !7971
  %arrayidx = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !7971
  call void @llvm.dbg.value(metadata %struct.constructor_elt_d* %arrayidx, metadata !7969, metadata !DIExpression()), !dbg !7970
  ret %struct.constructor_elt_d* %arrayidx, !dbg !7971
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_constructor_elt_base_space(%struct.VEC_constructor_elt_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !7972 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_constructor_elt_base* %vec_, metadata !7976, metadata !DIExpression()), !dbg !7978
  call void @llvm.dbg.value(metadata i32 1, metadata !7977, metadata !DIExpression()), !dbg !7978
  %tobool = icmp eq %struct.VEC_constructor_elt_base* %vec_, null, !dbg !7979
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7979

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 1, !dbg !7979
  %0 = load i32, i32* %alloc, align 4, !dbg !7979
  %num = getelementptr inbounds %struct.VEC_constructor_elt_base, %struct.VEC_constructor_elt_base* %vec_, i64 0, i32 0, !dbg !7979
  %1 = load i32, i32* %num, align 8, !dbg !7979
  %cmp1 = icmp ne i32 %0, %1, !dbg !7979
  %phitmp = zext i1 %cmp1 to i32, !dbg !7979
  br label %cond.end, !dbg !7979

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7979

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !7979
}

declare dso_local %union.tree_node* @decl_function_context(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_assembler_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local void @rest_of_decl_compilation(%union.tree_node*, i32, i32) local_unnamed_addr #2

declare dso_local void @lto_symtab_register_decl(%union.tree_node*, i32, %struct.lto_file_decl_data*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @get_resolution(%struct.data_in* %data_in, i32 %index) unnamed_addr #5 !dbg !7980 {
entry:
  call void @llvm.dbg.value(metadata %struct.data_in* %data_in, metadata !7984, metadata !DIExpression()), !dbg !7989
  call void @llvm.dbg.value(metadata i32 %index, metadata !7985, metadata !DIExpression()), !dbg !7989
  %globals_resolution = getelementptr inbounds %struct.data_in, %struct.data_in* %data_in, i64 0, i32 9, !dbg !7990
  %0 = load %struct.VEC_ld_plugin_symbol_resolution_t_heap*, %struct.VEC_ld_plugin_symbol_resolution_t_heap** %globals_resolution, align 8, !dbg !7990
  %tobool = icmp eq %struct.VEC_ld_plugin_symbol_resolution_t_heap* %0, null, !dbg !7991
  br i1 %tobool, label %return, label %if.then, !dbg !7992

if.then:                                          ; preds = %entry
  br i1 false, label %if.then.cond.end_crit_edge, label %cond.true, !dbg !7993

if.then.cond.end_crit_edge:                       ; preds = %if.then
  br label %cond.end, !dbg !7993

cond.true:                                        ; preds = %if.then
  %base = getelementptr inbounds %struct.VEC_ld_plugin_symbol_resolution_t_heap, %struct.VEC_ld_plugin_symbol_resolution_t_heap* %0, i64 0, i32 0, !dbg !7993
  br label %cond.end, !dbg !7993

cond.end:                                         ; preds = %if.then.cond.end_crit_edge, %cond.true
  %cond = phi %struct.VEC_ld_plugin_symbol_resolution_t_base* [ %base, %cond.true ], [ undef, %if.then.cond.end_crit_edge ], !dbg !7993
  %call = tail call fastcc i32 @VEC_ld_plugin_symbol_resolution_t_base_length(%struct.VEC_ld_plugin_symbol_resolution_t_base* %cond) #8, !dbg !7993
  %cmp = icmp ugt i32 %call, %index, !dbg !7995
  br i1 %cmp, label %if.end, label %return, !dbg !7996

if.end:                                           ; preds = %cond.end
  %1 = load %struct.VEC_ld_plugin_symbol_resolution_t_heap*, %struct.VEC_ld_plugin_symbol_resolution_t_heap** %globals_resolution, align 8, !dbg !7997
  %tobool6 = icmp eq %struct.VEC_ld_plugin_symbol_resolution_t_heap* %1, null, !dbg !7997
  br i1 %tobool6, label %cond.end11, label %cond.true7, !dbg !7997

cond.true7:                                       ; preds = %if.end
  %base9 = getelementptr inbounds %struct.VEC_ld_plugin_symbol_resolution_t_heap, %struct.VEC_ld_plugin_symbol_resolution_t_heap* %1, i64 0, i32 0, !dbg !7997
  br label %cond.end11, !dbg !7997

cond.end11:                                       ; preds = %if.end, %cond.true7
  %cond12 = phi %struct.VEC_ld_plugin_symbol_resolution_t_base* [ %base9, %cond.true7 ], [ null, %if.end ], !dbg !7997
  %call13 = tail call fastcc i32 @VEC_ld_plugin_symbol_resolution_t_base_index(%struct.VEC_ld_plugin_symbol_resolution_t_base* %cond12, i32 %index) #8, !dbg !7997
  call void @llvm.dbg.value(metadata i32 %call13, metadata !7986, metadata !DIExpression()), !dbg !7998
  br label %return, !dbg !7999

return:                                           ; preds = %cond.end, %entry, %cond.end11
  %retval.1 = phi i32 [ %call13, %cond.end11 ], [ 0, %cond.end ], [ 0, %entry ], !dbg !8000
  ret i32 %retval.1, !dbg !8001
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ld_plugin_symbol_resolution_t_base_length(%struct.VEC_ld_plugin_symbol_resolution_t_base* %vec_) unnamed_addr #0 !dbg !8002 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ld_plugin_symbol_resolution_t_base* %vec_, metadata !8008, metadata !DIExpression()), !dbg !8009
  %tobool = icmp eq %struct.VEC_ld_plugin_symbol_resolution_t_base* %vec_, null, !dbg !8010
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8010

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_ld_plugin_symbol_resolution_t_base, %struct.VEC_ld_plugin_symbol_resolution_t_base* %vec_, i64 0, i32 0, !dbg !8010
  %0 = load i32, i32* %num, align 4, !dbg !8010
  br label %cond.end, !dbg !8010

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !8010
  ret i32 %cond, !dbg !8010
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_ld_plugin_symbol_resolution_t_base_index(%struct.VEC_ld_plugin_symbol_resolution_t_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !8011 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_ld_plugin_symbol_resolution_t_base* %vec_, metadata !8015, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !8016, metadata !DIExpression()), !dbg !8017
  br label %land.end, !dbg !8018

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !8018
  %arrayidx = getelementptr inbounds %struct.VEC_ld_plugin_symbol_resolution_t_base, %struct.VEC_ld_plugin_symbol_resolution_t_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !8018
  %0 = load i32, i32* %arrayidx, align 4, !dbg !8018
  ret i32 %0, !dbg !8018
}

declare dso_local void @lto_record_renamed_decl(%struct.lto_file_decl_data*, i8*, i8*) local_unnamed_addr #2

declare dso_local i32 @htab_hash_string(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nobuiltin nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3271, !3272, !3273}
!llvm.ident = !{!3274}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "file_name_hash_table", scope: !2, file: !3, line: 60, type: !2297, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1458, globals: !3265, nameTableKind: None)
!3 = !DIFile(filename: "lto-streamer-in.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !336, !342, !347, !352, !370, !377, !384, !407, !414, !590, !602, !632, !645, !651, !690, !716, !722, !1442, !1448}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !330, line: 30, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334, !335}
!332 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !337, line: 363, baseType: !7, size: 32, elements: !338)
!337 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!338 = !{!339, !340, !341}
!339 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !337, line: 355, baseType: !7, size: 32, elements: !343)
!343 = !{!344, !345, !346}
!344 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !348, line: 474, baseType: !7, size: 32, elements: !349)
!348 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!349 = !{!350, !351}
!350 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!354 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !378)
!378 = !{!379, !380, !381, !382, !383}
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !385, line: 309, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./cgraph.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406}
!387 = !DIEnumerator(name: "CIF_OK", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "CIF_UNSPECIFIED", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "CIF_FUNCTION_NOT_CONSIDERED", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "CIF_BODY_NOT_AVAILABLE", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "CIF_REDEFINED_EXTERN_INLINE", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINABLE", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "CIF_FUNCTION_NOT_INLINE_CANDIDATE", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "CIF_LARGE_FUNCTION_GROWTH_LIMIT", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "CIF_LARGE_STACK_FRAME_GROWTH_LIMIT", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_SINGLE_LIMIT", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "CIF_MAX_INLINE_INSNS_AUTO_LIMIT", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "CIF_INLINE_UNIT_GROWTH_LIMIT", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "CIF_RECURSIVE_INLINING", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "CIF_UNLIKELY_CALL", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "CIF_NOT_DECLARED_INLINED", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "CIF_OPTIMIZING_FOR_SIZE", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "CIF_TARGET_OPTION_MISMATCH", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "CIF_MISMATCHED_ARGUMENTS", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "CIF_ORIGINALLY_INDIRECT_CALL", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "CIF_N_REASONS", value: 19, isUnsigned: true)
!407 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !408, line: 104, baseType: !7, size: 32, elements: !409)
!408 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!409 = !{!410, !411, !412, !413}
!410 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!411 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!412 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!413 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!414 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !415, line: 74, baseType: !7, size: 32, elements: !416)
!415 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!416 = !{!417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589}
!417 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!589 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!590 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ld_plugin_symbol_resolution", file: !591, line: 123, baseType: !7, size: 32, elements: !592)
!591 = !DIFile(filename: "./include/plugin-api.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!592 = !{!593, !594, !595, !596, !597, !598, !599, !600, !601}
!593 = !DIEnumerator(name: "LDPR_UNKNOWN", value: 0, isUnsigned: true)
!594 = !DIEnumerator(name: "LDPR_UNDEF", value: 1, isUnsigned: true)
!595 = !DIEnumerator(name: "LDPR_PREVAILING_DEF", value: 2, isUnsigned: true)
!596 = !DIEnumerator(name: "LDPR_PREVAILING_DEF_IRONLY", value: 3, isUnsigned: true)
!597 = !DIEnumerator(name: "LDPR_PREEMPTED_REG", value: 4, isUnsigned: true)
!598 = !DIEnumerator(name: "LDPR_PREEMPTED_IR", value: 5, isUnsigned: true)
!599 = !DIEnumerator(name: "LDPR_RESOLVED_IR", value: 6, isUnsigned: true)
!600 = !DIEnumerator(name: "LDPR_RESOLVED_EXEC", value: 7, isUnsigned: true)
!601 = !DIEnumerator(name: "LDPR_RESOLVED_DYN", value: 8, isUnsigned: true)
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "LTO_tags", file: !603, line: 175, baseType: !7, size: 32, elements: !604)
!603 = !DIFile(filename: "./lto-streamer.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!604 = !{!605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631}
!605 = !DIEnumerator(name: "LTO_null", value: 0, isUnsigned: true)
!606 = !DIEnumerator(name: "LTO_bb0", value: 224, isUnsigned: true)
!607 = !DIEnumerator(name: "LTO_bb1", value: 225, isUnsigned: true)
!608 = !DIEnumerator(name: "LTO_eh_region", value: 226, isUnsigned: true)
!609 = !DIEnumerator(name: "LTO_builtin_decl", value: 227, isUnsigned: true)
!610 = !DIEnumerator(name: "LTO_function", value: 228, isUnsigned: true)
!611 = !DIEnumerator(name: "LTO_eh_table", value: 229, isUnsigned: true)
!612 = !DIEnumerator(name: "LTO_ert_cleanup", value: 230, isUnsigned: true)
!613 = !DIEnumerator(name: "LTO_ert_try", value: 231, isUnsigned: true)
!614 = !DIEnumerator(name: "LTO_ert_allowed_exceptions", value: 232, isUnsigned: true)
!615 = !DIEnumerator(name: "LTO_ert_must_not_throw", value: 233, isUnsigned: true)
!616 = !DIEnumerator(name: "LTO_eh_landing_pad", value: 234, isUnsigned: true)
!617 = !DIEnumerator(name: "LTO_eh_catch", value: 235, isUnsigned: true)
!618 = !DIEnumerator(name: "LTO_tree_pickle_reference", value: 236, isUnsigned: true)
!619 = !DIEnumerator(name: "LTO_var_decl_alias", value: 237, isUnsigned: true)
!620 = !DIEnumerator(name: "LTO_field_decl_ref", value: 238, isUnsigned: true)
!621 = !DIEnumerator(name: "LTO_function_decl_ref", value: 239, isUnsigned: true)
!622 = !DIEnumerator(name: "LTO_label_decl_ref", value: 240, isUnsigned: true)
!623 = !DIEnumerator(name: "LTO_namespace_decl_ref", value: 241, isUnsigned: true)
!624 = !DIEnumerator(name: "LTO_result_decl_ref", value: 242, isUnsigned: true)
!625 = !DIEnumerator(name: "LTO_ssa_name_ref", value: 243, isUnsigned: true)
!626 = !DIEnumerator(name: "LTO_type_decl_ref", value: 244, isUnsigned: true)
!627 = !DIEnumerator(name: "LTO_type_ref", value: 245, isUnsigned: true)
!628 = !DIEnumerator(name: "LTO_const_decl_ref", value: 246, isUnsigned: true)
!629 = !DIEnumerator(name: "LTO_imported_decl_ref", value: 247, isUnsigned: true)
!630 = !DIEnumerator(name: "LTO_global_decl_ref", value: 248, isUnsigned: true)
!631 = !DIEnumerator(name: "LTO_NUM_TAGS", value: 249, isUnsigned: true)
!632 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lto_section_type", file: !603, line: 256, baseType: !7, size: 32, elements: !633)
!633 = !{!634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644}
!634 = !DIEnumerator(name: "LTO_section_decls", value: 0, isUnsigned: true)
!635 = !DIEnumerator(name: "LTO_section_function_body", value: 1, isUnsigned: true)
!636 = !DIEnumerator(name: "LTO_section_static_initializer", value: 2, isUnsigned: true)
!637 = !DIEnumerator(name: "LTO_section_cgraph", value: 3, isUnsigned: true)
!638 = !DIEnumerator(name: "LTO_section_jump_functions", value: 4, isUnsigned: true)
!639 = !DIEnumerator(name: "LTO_section_ipa_pure_const", value: 5, isUnsigned: true)
!640 = !DIEnumerator(name: "LTO_section_ipa_reference", value: 6, isUnsigned: true)
!641 = !DIEnumerator(name: "LTO_section_symtab", value: 7, isUnsigned: true)
!642 = !DIEnumerator(name: "LTO_section_wpa_fixup", value: 8, isUnsigned: true)
!643 = !DIEnumerator(name: "LTO_section_opts", value: 9, isUnsigned: true)
!644 = !DIEnumerator(name: "LTO_N_SECTION_TYPES", value: 10, isUnsigned: true)
!645 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "function_frequency", file: !646, line: 179, baseType: !7, size: 32, elements: !647)
!646 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!647 = !{!648, !649, !650}
!648 = !DIEnumerator(name: "FUNCTION_FREQUENCY_UNLIKELY_EXECUTED", value: 0, isUnsigned: true)
!649 = !DIEnumerator(name: "FUNCTION_FREQUENCY_NORMAL", value: 1, isUnsigned: true)
!650 = !DIEnumerator(name: "FUNCTION_FREQUENCY_HOT", value: 2, isUnsigned: true)
!651 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !652, line: 51, baseType: !7, size: 32, elements: !653)
!652 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!653 = !{!654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689}
!654 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!655 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!656 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!657 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!658 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!659 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!660 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!661 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!662 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!663 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!664 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!665 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!666 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!667 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!668 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!669 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!670 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!671 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!672 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!673 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!674 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!675 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!676 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!677 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!678 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!679 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!680 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!681 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!682 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!683 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!684 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!685 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!686 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!687 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!688 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!689 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !652, line: 727, baseType: !7, size: 32, elements: !691)
!691 = !{!692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715}
!692 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!693 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!694 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!695 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!696 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!697 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!698 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!699 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!700 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!701 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!702 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!703 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!704 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!705 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!706 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!707 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!708 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!709 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!710 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!711 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!712 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!713 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!714 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!715 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!716 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "built_in_class", file: !135, line: 205, baseType: !7, size: 32, elements: !717)
!717 = !{!718, !719, !720, !721}
!718 = !DIEnumerator(name: "NOT_BUILT_IN", value: 0, isUnsigned: true)
!719 = !DIEnumerator(name: "BUILT_IN_FRONTEND", value: 1, isUnsigned: true)
!720 = !DIEnumerator(name: "BUILT_IN_MD", value: 2, isUnsigned: true)
!721 = !DIEnumerator(name: "BUILT_IN_NORMAL", value: 3, isUnsigned: true)
!722 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "built_in_function", file: !135, line: 220, baseType: !7, size: 32, elements: !723)
!723 = !{!724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441}
!724 = !DIEnumerator(name: "BUILT_IN_ACOS", value: 0, isUnsigned: true)
!725 = !DIEnumerator(name: "BUILT_IN_ACOSF", value: 1, isUnsigned: true)
!726 = !DIEnumerator(name: "BUILT_IN_ACOSH", value: 2, isUnsigned: true)
!727 = !DIEnumerator(name: "BUILT_IN_ACOSHF", value: 3, isUnsigned: true)
!728 = !DIEnumerator(name: "BUILT_IN_ACOSHL", value: 4, isUnsigned: true)
!729 = !DIEnumerator(name: "BUILT_IN_ACOSL", value: 5, isUnsigned: true)
!730 = !DIEnumerator(name: "BUILT_IN_ASIN", value: 6, isUnsigned: true)
!731 = !DIEnumerator(name: "BUILT_IN_ASINF", value: 7, isUnsigned: true)
!732 = !DIEnumerator(name: "BUILT_IN_ASINH", value: 8, isUnsigned: true)
!733 = !DIEnumerator(name: "BUILT_IN_ASINHF", value: 9, isUnsigned: true)
!734 = !DIEnumerator(name: "BUILT_IN_ASINHL", value: 10, isUnsigned: true)
!735 = !DIEnumerator(name: "BUILT_IN_ASINL", value: 11, isUnsigned: true)
!736 = !DIEnumerator(name: "BUILT_IN_ATAN", value: 12, isUnsigned: true)
!737 = !DIEnumerator(name: "BUILT_IN_ATAN2", value: 13, isUnsigned: true)
!738 = !DIEnumerator(name: "BUILT_IN_ATAN2F", value: 14, isUnsigned: true)
!739 = !DIEnumerator(name: "BUILT_IN_ATAN2L", value: 15, isUnsigned: true)
!740 = !DIEnumerator(name: "BUILT_IN_ATANF", value: 16, isUnsigned: true)
!741 = !DIEnumerator(name: "BUILT_IN_ATANH", value: 17, isUnsigned: true)
!742 = !DIEnumerator(name: "BUILT_IN_ATANHF", value: 18, isUnsigned: true)
!743 = !DIEnumerator(name: "BUILT_IN_ATANHL", value: 19, isUnsigned: true)
!744 = !DIEnumerator(name: "BUILT_IN_ATANL", value: 20, isUnsigned: true)
!745 = !DIEnumerator(name: "BUILT_IN_CBRT", value: 21, isUnsigned: true)
!746 = !DIEnumerator(name: "BUILT_IN_CBRTF", value: 22, isUnsigned: true)
!747 = !DIEnumerator(name: "BUILT_IN_CBRTL", value: 23, isUnsigned: true)
!748 = !DIEnumerator(name: "BUILT_IN_CEIL", value: 24, isUnsigned: true)
!749 = !DIEnumerator(name: "BUILT_IN_CEILF", value: 25, isUnsigned: true)
!750 = !DIEnumerator(name: "BUILT_IN_CEILL", value: 26, isUnsigned: true)
!751 = !DIEnumerator(name: "BUILT_IN_COPYSIGN", value: 27, isUnsigned: true)
!752 = !DIEnumerator(name: "BUILT_IN_COPYSIGNF", value: 28, isUnsigned: true)
!753 = !DIEnumerator(name: "BUILT_IN_COPYSIGNL", value: 29, isUnsigned: true)
!754 = !DIEnumerator(name: "BUILT_IN_COS", value: 30, isUnsigned: true)
!755 = !DIEnumerator(name: "BUILT_IN_COSF", value: 31, isUnsigned: true)
!756 = !DIEnumerator(name: "BUILT_IN_COSH", value: 32, isUnsigned: true)
!757 = !DIEnumerator(name: "BUILT_IN_COSHF", value: 33, isUnsigned: true)
!758 = !DIEnumerator(name: "BUILT_IN_COSHL", value: 34, isUnsigned: true)
!759 = !DIEnumerator(name: "BUILT_IN_COSL", value: 35, isUnsigned: true)
!760 = !DIEnumerator(name: "BUILT_IN_DREM", value: 36, isUnsigned: true)
!761 = !DIEnumerator(name: "BUILT_IN_DREMF", value: 37, isUnsigned: true)
!762 = !DIEnumerator(name: "BUILT_IN_DREML", value: 38, isUnsigned: true)
!763 = !DIEnumerator(name: "BUILT_IN_ERF", value: 39, isUnsigned: true)
!764 = !DIEnumerator(name: "BUILT_IN_ERFC", value: 40, isUnsigned: true)
!765 = !DIEnumerator(name: "BUILT_IN_ERFCF", value: 41, isUnsigned: true)
!766 = !DIEnumerator(name: "BUILT_IN_ERFCL", value: 42, isUnsigned: true)
!767 = !DIEnumerator(name: "BUILT_IN_ERFF", value: 43, isUnsigned: true)
!768 = !DIEnumerator(name: "BUILT_IN_ERFL", value: 44, isUnsigned: true)
!769 = !DIEnumerator(name: "BUILT_IN_EXP", value: 45, isUnsigned: true)
!770 = !DIEnumerator(name: "BUILT_IN_EXP10", value: 46, isUnsigned: true)
!771 = !DIEnumerator(name: "BUILT_IN_EXP10F", value: 47, isUnsigned: true)
!772 = !DIEnumerator(name: "BUILT_IN_EXP10L", value: 48, isUnsigned: true)
!773 = !DIEnumerator(name: "BUILT_IN_EXP2", value: 49, isUnsigned: true)
!774 = !DIEnumerator(name: "BUILT_IN_EXP2F", value: 50, isUnsigned: true)
!775 = !DIEnumerator(name: "BUILT_IN_EXP2L", value: 51, isUnsigned: true)
!776 = !DIEnumerator(name: "BUILT_IN_EXPF", value: 52, isUnsigned: true)
!777 = !DIEnumerator(name: "BUILT_IN_EXPL", value: 53, isUnsigned: true)
!778 = !DIEnumerator(name: "BUILT_IN_EXPM1", value: 54, isUnsigned: true)
!779 = !DIEnumerator(name: "BUILT_IN_EXPM1F", value: 55, isUnsigned: true)
!780 = !DIEnumerator(name: "BUILT_IN_EXPM1L", value: 56, isUnsigned: true)
!781 = !DIEnumerator(name: "BUILT_IN_FABS", value: 57, isUnsigned: true)
!782 = !DIEnumerator(name: "BUILT_IN_FABSF", value: 58, isUnsigned: true)
!783 = !DIEnumerator(name: "BUILT_IN_FABSL", value: 59, isUnsigned: true)
!784 = !DIEnumerator(name: "BUILT_IN_FDIM", value: 60, isUnsigned: true)
!785 = !DIEnumerator(name: "BUILT_IN_FDIMF", value: 61, isUnsigned: true)
!786 = !DIEnumerator(name: "BUILT_IN_FDIML", value: 62, isUnsigned: true)
!787 = !DIEnumerator(name: "BUILT_IN_FLOOR", value: 63, isUnsigned: true)
!788 = !DIEnumerator(name: "BUILT_IN_FLOORF", value: 64, isUnsigned: true)
!789 = !DIEnumerator(name: "BUILT_IN_FLOORL", value: 65, isUnsigned: true)
!790 = !DIEnumerator(name: "BUILT_IN_FMA", value: 66, isUnsigned: true)
!791 = !DIEnumerator(name: "BUILT_IN_FMAF", value: 67, isUnsigned: true)
!792 = !DIEnumerator(name: "BUILT_IN_FMAL", value: 68, isUnsigned: true)
!793 = !DIEnumerator(name: "BUILT_IN_FMAX", value: 69, isUnsigned: true)
!794 = !DIEnumerator(name: "BUILT_IN_FMAXF", value: 70, isUnsigned: true)
!795 = !DIEnumerator(name: "BUILT_IN_FMAXL", value: 71, isUnsigned: true)
!796 = !DIEnumerator(name: "BUILT_IN_FMIN", value: 72, isUnsigned: true)
!797 = !DIEnumerator(name: "BUILT_IN_FMINF", value: 73, isUnsigned: true)
!798 = !DIEnumerator(name: "BUILT_IN_FMINL", value: 74, isUnsigned: true)
!799 = !DIEnumerator(name: "BUILT_IN_FMOD", value: 75, isUnsigned: true)
!800 = !DIEnumerator(name: "BUILT_IN_FMODF", value: 76, isUnsigned: true)
!801 = !DIEnumerator(name: "BUILT_IN_FMODL", value: 77, isUnsigned: true)
!802 = !DIEnumerator(name: "BUILT_IN_FREXP", value: 78, isUnsigned: true)
!803 = !DIEnumerator(name: "BUILT_IN_FREXPF", value: 79, isUnsigned: true)
!804 = !DIEnumerator(name: "BUILT_IN_FREXPL", value: 80, isUnsigned: true)
!805 = !DIEnumerator(name: "BUILT_IN_GAMMA", value: 81, isUnsigned: true)
!806 = !DIEnumerator(name: "BUILT_IN_GAMMAF", value: 82, isUnsigned: true)
!807 = !DIEnumerator(name: "BUILT_IN_GAMMAL", value: 83, isUnsigned: true)
!808 = !DIEnumerator(name: "BUILT_IN_GAMMA_R", value: 84, isUnsigned: true)
!809 = !DIEnumerator(name: "BUILT_IN_GAMMAF_R", value: 85, isUnsigned: true)
!810 = !DIEnumerator(name: "BUILT_IN_GAMMAL_R", value: 86, isUnsigned: true)
!811 = !DIEnumerator(name: "BUILT_IN_HUGE_VAL", value: 87, isUnsigned: true)
!812 = !DIEnumerator(name: "BUILT_IN_HUGE_VALF", value: 88, isUnsigned: true)
!813 = !DIEnumerator(name: "BUILT_IN_HUGE_VALL", value: 89, isUnsigned: true)
!814 = !DIEnumerator(name: "BUILT_IN_HYPOT", value: 90, isUnsigned: true)
!815 = !DIEnumerator(name: "BUILT_IN_HYPOTF", value: 91, isUnsigned: true)
!816 = !DIEnumerator(name: "BUILT_IN_HYPOTL", value: 92, isUnsigned: true)
!817 = !DIEnumerator(name: "BUILT_IN_ILOGB", value: 93, isUnsigned: true)
!818 = !DIEnumerator(name: "BUILT_IN_ILOGBF", value: 94, isUnsigned: true)
!819 = !DIEnumerator(name: "BUILT_IN_ILOGBL", value: 95, isUnsigned: true)
!820 = !DIEnumerator(name: "BUILT_IN_INF", value: 96, isUnsigned: true)
!821 = !DIEnumerator(name: "BUILT_IN_INFF", value: 97, isUnsigned: true)
!822 = !DIEnumerator(name: "BUILT_IN_INFL", value: 98, isUnsigned: true)
!823 = !DIEnumerator(name: "BUILT_IN_INFD32", value: 99, isUnsigned: true)
!824 = !DIEnumerator(name: "BUILT_IN_INFD64", value: 100, isUnsigned: true)
!825 = !DIEnumerator(name: "BUILT_IN_INFD128", value: 101, isUnsigned: true)
!826 = !DIEnumerator(name: "BUILT_IN_J0", value: 102, isUnsigned: true)
!827 = !DIEnumerator(name: "BUILT_IN_J0F", value: 103, isUnsigned: true)
!828 = !DIEnumerator(name: "BUILT_IN_J0L", value: 104, isUnsigned: true)
!829 = !DIEnumerator(name: "BUILT_IN_J1", value: 105, isUnsigned: true)
!830 = !DIEnumerator(name: "BUILT_IN_J1F", value: 106, isUnsigned: true)
!831 = !DIEnumerator(name: "BUILT_IN_J1L", value: 107, isUnsigned: true)
!832 = !DIEnumerator(name: "BUILT_IN_JN", value: 108, isUnsigned: true)
!833 = !DIEnumerator(name: "BUILT_IN_JNF", value: 109, isUnsigned: true)
!834 = !DIEnumerator(name: "BUILT_IN_JNL", value: 110, isUnsigned: true)
!835 = !DIEnumerator(name: "BUILT_IN_LCEIL", value: 111, isUnsigned: true)
!836 = !DIEnumerator(name: "BUILT_IN_LCEILF", value: 112, isUnsigned: true)
!837 = !DIEnumerator(name: "BUILT_IN_LCEILL", value: 113, isUnsigned: true)
!838 = !DIEnumerator(name: "BUILT_IN_LDEXP", value: 114, isUnsigned: true)
!839 = !DIEnumerator(name: "BUILT_IN_LDEXPF", value: 115, isUnsigned: true)
!840 = !DIEnumerator(name: "BUILT_IN_LDEXPL", value: 116, isUnsigned: true)
!841 = !DIEnumerator(name: "BUILT_IN_LFLOOR", value: 117, isUnsigned: true)
!842 = !DIEnumerator(name: "BUILT_IN_LFLOORF", value: 118, isUnsigned: true)
!843 = !DIEnumerator(name: "BUILT_IN_LFLOORL", value: 119, isUnsigned: true)
!844 = !DIEnumerator(name: "BUILT_IN_LGAMMA", value: 120, isUnsigned: true)
!845 = !DIEnumerator(name: "BUILT_IN_LGAMMAF", value: 121, isUnsigned: true)
!846 = !DIEnumerator(name: "BUILT_IN_LGAMMAL", value: 122, isUnsigned: true)
!847 = !DIEnumerator(name: "BUILT_IN_LGAMMA_R", value: 123, isUnsigned: true)
!848 = !DIEnumerator(name: "BUILT_IN_LGAMMAF_R", value: 124, isUnsigned: true)
!849 = !DIEnumerator(name: "BUILT_IN_LGAMMAL_R", value: 125, isUnsigned: true)
!850 = !DIEnumerator(name: "BUILT_IN_LLCEIL", value: 126, isUnsigned: true)
!851 = !DIEnumerator(name: "BUILT_IN_LLCEILF", value: 127, isUnsigned: true)
!852 = !DIEnumerator(name: "BUILT_IN_LLCEILL", value: 128, isUnsigned: true)
!853 = !DIEnumerator(name: "BUILT_IN_LLFLOOR", value: 129, isUnsigned: true)
!854 = !DIEnumerator(name: "BUILT_IN_LLFLOORF", value: 130, isUnsigned: true)
!855 = !DIEnumerator(name: "BUILT_IN_LLFLOORL", value: 131, isUnsigned: true)
!856 = !DIEnumerator(name: "BUILT_IN_LLRINT", value: 132, isUnsigned: true)
!857 = !DIEnumerator(name: "BUILT_IN_LLRINTF", value: 133, isUnsigned: true)
!858 = !DIEnumerator(name: "BUILT_IN_LLRINTL", value: 134, isUnsigned: true)
!859 = !DIEnumerator(name: "BUILT_IN_LLROUND", value: 135, isUnsigned: true)
!860 = !DIEnumerator(name: "BUILT_IN_LLROUNDF", value: 136, isUnsigned: true)
!861 = !DIEnumerator(name: "BUILT_IN_LLROUNDL", value: 137, isUnsigned: true)
!862 = !DIEnumerator(name: "BUILT_IN_LOG", value: 138, isUnsigned: true)
!863 = !DIEnumerator(name: "BUILT_IN_LOG10", value: 139, isUnsigned: true)
!864 = !DIEnumerator(name: "BUILT_IN_LOG10F", value: 140, isUnsigned: true)
!865 = !DIEnumerator(name: "BUILT_IN_LOG10L", value: 141, isUnsigned: true)
!866 = !DIEnumerator(name: "BUILT_IN_LOG1P", value: 142, isUnsigned: true)
!867 = !DIEnumerator(name: "BUILT_IN_LOG1PF", value: 143, isUnsigned: true)
!868 = !DIEnumerator(name: "BUILT_IN_LOG1PL", value: 144, isUnsigned: true)
!869 = !DIEnumerator(name: "BUILT_IN_LOG2", value: 145, isUnsigned: true)
!870 = !DIEnumerator(name: "BUILT_IN_LOG2F", value: 146, isUnsigned: true)
!871 = !DIEnumerator(name: "BUILT_IN_LOG2L", value: 147, isUnsigned: true)
!872 = !DIEnumerator(name: "BUILT_IN_LOGB", value: 148, isUnsigned: true)
!873 = !DIEnumerator(name: "BUILT_IN_LOGBF", value: 149, isUnsigned: true)
!874 = !DIEnumerator(name: "BUILT_IN_LOGBL", value: 150, isUnsigned: true)
!875 = !DIEnumerator(name: "BUILT_IN_LOGF", value: 151, isUnsigned: true)
!876 = !DIEnumerator(name: "BUILT_IN_LOGL", value: 152, isUnsigned: true)
!877 = !DIEnumerator(name: "BUILT_IN_LRINT", value: 153, isUnsigned: true)
!878 = !DIEnumerator(name: "BUILT_IN_LRINTF", value: 154, isUnsigned: true)
!879 = !DIEnumerator(name: "BUILT_IN_LRINTL", value: 155, isUnsigned: true)
!880 = !DIEnumerator(name: "BUILT_IN_LROUND", value: 156, isUnsigned: true)
!881 = !DIEnumerator(name: "BUILT_IN_LROUNDF", value: 157, isUnsigned: true)
!882 = !DIEnumerator(name: "BUILT_IN_LROUNDL", value: 158, isUnsigned: true)
!883 = !DIEnumerator(name: "BUILT_IN_MODF", value: 159, isUnsigned: true)
!884 = !DIEnumerator(name: "BUILT_IN_MODFF", value: 160, isUnsigned: true)
!885 = !DIEnumerator(name: "BUILT_IN_MODFL", value: 161, isUnsigned: true)
!886 = !DIEnumerator(name: "BUILT_IN_NAN", value: 162, isUnsigned: true)
!887 = !DIEnumerator(name: "BUILT_IN_NANF", value: 163, isUnsigned: true)
!888 = !DIEnumerator(name: "BUILT_IN_NANL", value: 164, isUnsigned: true)
!889 = !DIEnumerator(name: "BUILT_IN_NAND32", value: 165, isUnsigned: true)
!890 = !DIEnumerator(name: "BUILT_IN_NAND64", value: 166, isUnsigned: true)
!891 = !DIEnumerator(name: "BUILT_IN_NAND128", value: 167, isUnsigned: true)
!892 = !DIEnumerator(name: "BUILT_IN_NANS", value: 168, isUnsigned: true)
!893 = !DIEnumerator(name: "BUILT_IN_NANSF", value: 169, isUnsigned: true)
!894 = !DIEnumerator(name: "BUILT_IN_NANSL", value: 170, isUnsigned: true)
!895 = !DIEnumerator(name: "BUILT_IN_NEARBYINT", value: 171, isUnsigned: true)
!896 = !DIEnumerator(name: "BUILT_IN_NEARBYINTF", value: 172, isUnsigned: true)
!897 = !DIEnumerator(name: "BUILT_IN_NEARBYINTL", value: 173, isUnsigned: true)
!898 = !DIEnumerator(name: "BUILT_IN_NEXTAFTER", value: 174, isUnsigned: true)
!899 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERF", value: 175, isUnsigned: true)
!900 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERL", value: 176, isUnsigned: true)
!901 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARD", value: 177, isUnsigned: true)
!902 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDF", value: 178, isUnsigned: true)
!903 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDL", value: 179, isUnsigned: true)
!904 = !DIEnumerator(name: "BUILT_IN_POW", value: 180, isUnsigned: true)
!905 = !DIEnumerator(name: "BUILT_IN_POW10", value: 181, isUnsigned: true)
!906 = !DIEnumerator(name: "BUILT_IN_POW10F", value: 182, isUnsigned: true)
!907 = !DIEnumerator(name: "BUILT_IN_POW10L", value: 183, isUnsigned: true)
!908 = !DIEnumerator(name: "BUILT_IN_POWF", value: 184, isUnsigned: true)
!909 = !DIEnumerator(name: "BUILT_IN_POWI", value: 185, isUnsigned: true)
!910 = !DIEnumerator(name: "BUILT_IN_POWIF", value: 186, isUnsigned: true)
!911 = !DIEnumerator(name: "BUILT_IN_POWIL", value: 187, isUnsigned: true)
!912 = !DIEnumerator(name: "BUILT_IN_POWL", value: 188, isUnsigned: true)
!913 = !DIEnumerator(name: "BUILT_IN_REMAINDER", value: 189, isUnsigned: true)
!914 = !DIEnumerator(name: "BUILT_IN_REMAINDERF", value: 190, isUnsigned: true)
!915 = !DIEnumerator(name: "BUILT_IN_REMAINDERL", value: 191, isUnsigned: true)
!916 = !DIEnumerator(name: "BUILT_IN_REMQUO", value: 192, isUnsigned: true)
!917 = !DIEnumerator(name: "BUILT_IN_REMQUOF", value: 193, isUnsigned: true)
!918 = !DIEnumerator(name: "BUILT_IN_REMQUOL", value: 194, isUnsigned: true)
!919 = !DIEnumerator(name: "BUILT_IN_RINT", value: 195, isUnsigned: true)
!920 = !DIEnumerator(name: "BUILT_IN_RINTF", value: 196, isUnsigned: true)
!921 = !DIEnumerator(name: "BUILT_IN_RINTL", value: 197, isUnsigned: true)
!922 = !DIEnumerator(name: "BUILT_IN_ROUND", value: 198, isUnsigned: true)
!923 = !DIEnumerator(name: "BUILT_IN_ROUNDF", value: 199, isUnsigned: true)
!924 = !DIEnumerator(name: "BUILT_IN_ROUNDL", value: 200, isUnsigned: true)
!925 = !DIEnumerator(name: "BUILT_IN_SCALB", value: 201, isUnsigned: true)
!926 = !DIEnumerator(name: "BUILT_IN_SCALBF", value: 202, isUnsigned: true)
!927 = !DIEnumerator(name: "BUILT_IN_SCALBL", value: 203, isUnsigned: true)
!928 = !DIEnumerator(name: "BUILT_IN_SCALBLN", value: 204, isUnsigned: true)
!929 = !DIEnumerator(name: "BUILT_IN_SCALBLNF", value: 205, isUnsigned: true)
!930 = !DIEnumerator(name: "BUILT_IN_SCALBLNL", value: 206, isUnsigned: true)
!931 = !DIEnumerator(name: "BUILT_IN_SCALBN", value: 207, isUnsigned: true)
!932 = !DIEnumerator(name: "BUILT_IN_SCALBNF", value: 208, isUnsigned: true)
!933 = !DIEnumerator(name: "BUILT_IN_SCALBNL", value: 209, isUnsigned: true)
!934 = !DIEnumerator(name: "BUILT_IN_SIGNBIT", value: 210, isUnsigned: true)
!935 = !DIEnumerator(name: "BUILT_IN_SIGNBITF", value: 211, isUnsigned: true)
!936 = !DIEnumerator(name: "BUILT_IN_SIGNBITL", value: 212, isUnsigned: true)
!937 = !DIEnumerator(name: "BUILT_IN_SIGNBITD32", value: 213, isUnsigned: true)
!938 = !DIEnumerator(name: "BUILT_IN_SIGNBITD64", value: 214, isUnsigned: true)
!939 = !DIEnumerator(name: "BUILT_IN_SIGNBITD128", value: 215, isUnsigned: true)
!940 = !DIEnumerator(name: "BUILT_IN_SIGNIFICAND", value: 216, isUnsigned: true)
!941 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDF", value: 217, isUnsigned: true)
!942 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDL", value: 218, isUnsigned: true)
!943 = !DIEnumerator(name: "BUILT_IN_SIN", value: 219, isUnsigned: true)
!944 = !DIEnumerator(name: "BUILT_IN_SINCOS", value: 220, isUnsigned: true)
!945 = !DIEnumerator(name: "BUILT_IN_SINCOSF", value: 221, isUnsigned: true)
!946 = !DIEnumerator(name: "BUILT_IN_SINCOSL", value: 222, isUnsigned: true)
!947 = !DIEnumerator(name: "BUILT_IN_SINF", value: 223, isUnsigned: true)
!948 = !DIEnumerator(name: "BUILT_IN_SINH", value: 224, isUnsigned: true)
!949 = !DIEnumerator(name: "BUILT_IN_SINHF", value: 225, isUnsigned: true)
!950 = !DIEnumerator(name: "BUILT_IN_SINHL", value: 226, isUnsigned: true)
!951 = !DIEnumerator(name: "BUILT_IN_SINL", value: 227, isUnsigned: true)
!952 = !DIEnumerator(name: "BUILT_IN_SQRT", value: 228, isUnsigned: true)
!953 = !DIEnumerator(name: "BUILT_IN_SQRTF", value: 229, isUnsigned: true)
!954 = !DIEnumerator(name: "BUILT_IN_SQRTL", value: 230, isUnsigned: true)
!955 = !DIEnumerator(name: "BUILT_IN_TAN", value: 231, isUnsigned: true)
!956 = !DIEnumerator(name: "BUILT_IN_TANF", value: 232, isUnsigned: true)
!957 = !DIEnumerator(name: "BUILT_IN_TANH", value: 233, isUnsigned: true)
!958 = !DIEnumerator(name: "BUILT_IN_TANHF", value: 234, isUnsigned: true)
!959 = !DIEnumerator(name: "BUILT_IN_TANHL", value: 235, isUnsigned: true)
!960 = !DIEnumerator(name: "BUILT_IN_TANL", value: 236, isUnsigned: true)
!961 = !DIEnumerator(name: "BUILT_IN_TGAMMA", value: 237, isUnsigned: true)
!962 = !DIEnumerator(name: "BUILT_IN_TGAMMAF", value: 238, isUnsigned: true)
!963 = !DIEnumerator(name: "BUILT_IN_TGAMMAL", value: 239, isUnsigned: true)
!964 = !DIEnumerator(name: "BUILT_IN_TRUNC", value: 240, isUnsigned: true)
!965 = !DIEnumerator(name: "BUILT_IN_TRUNCF", value: 241, isUnsigned: true)
!966 = !DIEnumerator(name: "BUILT_IN_TRUNCL", value: 242, isUnsigned: true)
!967 = !DIEnumerator(name: "BUILT_IN_Y0", value: 243, isUnsigned: true)
!968 = !DIEnumerator(name: "BUILT_IN_Y0F", value: 244, isUnsigned: true)
!969 = !DIEnumerator(name: "BUILT_IN_Y0L", value: 245, isUnsigned: true)
!970 = !DIEnumerator(name: "BUILT_IN_Y1", value: 246, isUnsigned: true)
!971 = !DIEnumerator(name: "BUILT_IN_Y1F", value: 247, isUnsigned: true)
!972 = !DIEnumerator(name: "BUILT_IN_Y1L", value: 248, isUnsigned: true)
!973 = !DIEnumerator(name: "BUILT_IN_YN", value: 249, isUnsigned: true)
!974 = !DIEnumerator(name: "BUILT_IN_YNF", value: 250, isUnsigned: true)
!975 = !DIEnumerator(name: "BUILT_IN_YNL", value: 251, isUnsigned: true)
!976 = !DIEnumerator(name: "BUILT_IN_CABS", value: 252, isUnsigned: true)
!977 = !DIEnumerator(name: "BUILT_IN_CABSF", value: 253, isUnsigned: true)
!978 = !DIEnumerator(name: "BUILT_IN_CABSL", value: 254, isUnsigned: true)
!979 = !DIEnumerator(name: "BUILT_IN_CACOS", value: 255, isUnsigned: true)
!980 = !DIEnumerator(name: "BUILT_IN_CACOSF", value: 256, isUnsigned: true)
!981 = !DIEnumerator(name: "BUILT_IN_CACOSH", value: 257, isUnsigned: true)
!982 = !DIEnumerator(name: "BUILT_IN_CACOSHF", value: 258, isUnsigned: true)
!983 = !DIEnumerator(name: "BUILT_IN_CACOSHL", value: 259, isUnsigned: true)
!984 = !DIEnumerator(name: "BUILT_IN_CACOSL", value: 260, isUnsigned: true)
!985 = !DIEnumerator(name: "BUILT_IN_CARG", value: 261, isUnsigned: true)
!986 = !DIEnumerator(name: "BUILT_IN_CARGF", value: 262, isUnsigned: true)
!987 = !DIEnumerator(name: "BUILT_IN_CARGL", value: 263, isUnsigned: true)
!988 = !DIEnumerator(name: "BUILT_IN_CASIN", value: 264, isUnsigned: true)
!989 = !DIEnumerator(name: "BUILT_IN_CASINF", value: 265, isUnsigned: true)
!990 = !DIEnumerator(name: "BUILT_IN_CASINH", value: 266, isUnsigned: true)
!991 = !DIEnumerator(name: "BUILT_IN_CASINHF", value: 267, isUnsigned: true)
!992 = !DIEnumerator(name: "BUILT_IN_CASINHL", value: 268, isUnsigned: true)
!993 = !DIEnumerator(name: "BUILT_IN_CASINL", value: 269, isUnsigned: true)
!994 = !DIEnumerator(name: "BUILT_IN_CATAN", value: 270, isUnsigned: true)
!995 = !DIEnumerator(name: "BUILT_IN_CATANF", value: 271, isUnsigned: true)
!996 = !DIEnumerator(name: "BUILT_IN_CATANH", value: 272, isUnsigned: true)
!997 = !DIEnumerator(name: "BUILT_IN_CATANHF", value: 273, isUnsigned: true)
!998 = !DIEnumerator(name: "BUILT_IN_CATANHL", value: 274, isUnsigned: true)
!999 = !DIEnumerator(name: "BUILT_IN_CATANL", value: 275, isUnsigned: true)
!1000 = !DIEnumerator(name: "BUILT_IN_CCOS", value: 276, isUnsigned: true)
!1001 = !DIEnumerator(name: "BUILT_IN_CCOSF", value: 277, isUnsigned: true)
!1002 = !DIEnumerator(name: "BUILT_IN_CCOSH", value: 278, isUnsigned: true)
!1003 = !DIEnumerator(name: "BUILT_IN_CCOSHF", value: 279, isUnsigned: true)
!1004 = !DIEnumerator(name: "BUILT_IN_CCOSHL", value: 280, isUnsigned: true)
!1005 = !DIEnumerator(name: "BUILT_IN_CCOSL", value: 281, isUnsigned: true)
!1006 = !DIEnumerator(name: "BUILT_IN_CEXP", value: 282, isUnsigned: true)
!1007 = !DIEnumerator(name: "BUILT_IN_CEXPF", value: 283, isUnsigned: true)
!1008 = !DIEnumerator(name: "BUILT_IN_CEXPL", value: 284, isUnsigned: true)
!1009 = !DIEnumerator(name: "BUILT_IN_CEXPI", value: 285, isUnsigned: true)
!1010 = !DIEnumerator(name: "BUILT_IN_CEXPIF", value: 286, isUnsigned: true)
!1011 = !DIEnumerator(name: "BUILT_IN_CEXPIL", value: 287, isUnsigned: true)
!1012 = !DIEnumerator(name: "BUILT_IN_CIMAG", value: 288, isUnsigned: true)
!1013 = !DIEnumerator(name: "BUILT_IN_CIMAGF", value: 289, isUnsigned: true)
!1014 = !DIEnumerator(name: "BUILT_IN_CIMAGL", value: 290, isUnsigned: true)
!1015 = !DIEnumerator(name: "BUILT_IN_CLOG", value: 291, isUnsigned: true)
!1016 = !DIEnumerator(name: "BUILT_IN_CLOGF", value: 292, isUnsigned: true)
!1017 = !DIEnumerator(name: "BUILT_IN_CLOGL", value: 293, isUnsigned: true)
!1018 = !DIEnumerator(name: "BUILT_IN_CLOG10", value: 294, isUnsigned: true)
!1019 = !DIEnumerator(name: "BUILT_IN_CLOG10F", value: 295, isUnsigned: true)
!1020 = !DIEnumerator(name: "BUILT_IN_CLOG10L", value: 296, isUnsigned: true)
!1021 = !DIEnumerator(name: "BUILT_IN_CONJ", value: 297, isUnsigned: true)
!1022 = !DIEnumerator(name: "BUILT_IN_CONJF", value: 298, isUnsigned: true)
!1023 = !DIEnumerator(name: "BUILT_IN_CONJL", value: 299, isUnsigned: true)
!1024 = !DIEnumerator(name: "BUILT_IN_CPOW", value: 300, isUnsigned: true)
!1025 = !DIEnumerator(name: "BUILT_IN_CPOWF", value: 301, isUnsigned: true)
!1026 = !DIEnumerator(name: "BUILT_IN_CPOWL", value: 302, isUnsigned: true)
!1027 = !DIEnumerator(name: "BUILT_IN_CPROJ", value: 303, isUnsigned: true)
!1028 = !DIEnumerator(name: "BUILT_IN_CPROJF", value: 304, isUnsigned: true)
!1029 = !DIEnumerator(name: "BUILT_IN_CPROJL", value: 305, isUnsigned: true)
!1030 = !DIEnumerator(name: "BUILT_IN_CREAL", value: 306, isUnsigned: true)
!1031 = !DIEnumerator(name: "BUILT_IN_CREALF", value: 307, isUnsigned: true)
!1032 = !DIEnumerator(name: "BUILT_IN_CREALL", value: 308, isUnsigned: true)
!1033 = !DIEnumerator(name: "BUILT_IN_CSIN", value: 309, isUnsigned: true)
!1034 = !DIEnumerator(name: "BUILT_IN_CSINF", value: 310, isUnsigned: true)
!1035 = !DIEnumerator(name: "BUILT_IN_CSINH", value: 311, isUnsigned: true)
!1036 = !DIEnumerator(name: "BUILT_IN_CSINHF", value: 312, isUnsigned: true)
!1037 = !DIEnumerator(name: "BUILT_IN_CSINHL", value: 313, isUnsigned: true)
!1038 = !DIEnumerator(name: "BUILT_IN_CSINL", value: 314, isUnsigned: true)
!1039 = !DIEnumerator(name: "BUILT_IN_CSQRT", value: 315, isUnsigned: true)
!1040 = !DIEnumerator(name: "BUILT_IN_CSQRTF", value: 316, isUnsigned: true)
!1041 = !DIEnumerator(name: "BUILT_IN_CSQRTL", value: 317, isUnsigned: true)
!1042 = !DIEnumerator(name: "BUILT_IN_CTAN", value: 318, isUnsigned: true)
!1043 = !DIEnumerator(name: "BUILT_IN_CTANF", value: 319, isUnsigned: true)
!1044 = !DIEnumerator(name: "BUILT_IN_CTANH", value: 320, isUnsigned: true)
!1045 = !DIEnumerator(name: "BUILT_IN_CTANHF", value: 321, isUnsigned: true)
!1046 = !DIEnumerator(name: "BUILT_IN_CTANHL", value: 322, isUnsigned: true)
!1047 = !DIEnumerator(name: "BUILT_IN_CTANL", value: 323, isUnsigned: true)
!1048 = !DIEnumerator(name: "BUILT_IN_BCMP", value: 324, isUnsigned: true)
!1049 = !DIEnumerator(name: "BUILT_IN_BCOPY", value: 325, isUnsigned: true)
!1050 = !DIEnumerator(name: "BUILT_IN_BZERO", value: 326, isUnsigned: true)
!1051 = !DIEnumerator(name: "BUILT_IN_INDEX", value: 327, isUnsigned: true)
!1052 = !DIEnumerator(name: "BUILT_IN_MEMCHR", value: 328, isUnsigned: true)
!1053 = !DIEnumerator(name: "BUILT_IN_MEMCMP", value: 329, isUnsigned: true)
!1054 = !DIEnumerator(name: "BUILT_IN_MEMCPY", value: 330, isUnsigned: true)
!1055 = !DIEnumerator(name: "BUILT_IN_MEMMOVE", value: 331, isUnsigned: true)
!1056 = !DIEnumerator(name: "BUILT_IN_MEMPCPY", value: 332, isUnsigned: true)
!1057 = !DIEnumerator(name: "BUILT_IN_MEMSET", value: 333, isUnsigned: true)
!1058 = !DIEnumerator(name: "BUILT_IN_RINDEX", value: 334, isUnsigned: true)
!1059 = !DIEnumerator(name: "BUILT_IN_STPCPY", value: 335, isUnsigned: true)
!1060 = !DIEnumerator(name: "BUILT_IN_STPNCPY", value: 336, isUnsigned: true)
!1061 = !DIEnumerator(name: "BUILT_IN_STRCASECMP", value: 337, isUnsigned: true)
!1062 = !DIEnumerator(name: "BUILT_IN_STRCAT", value: 338, isUnsigned: true)
!1063 = !DIEnumerator(name: "BUILT_IN_STRCHR", value: 339, isUnsigned: true)
!1064 = !DIEnumerator(name: "BUILT_IN_STRCMP", value: 340, isUnsigned: true)
!1065 = !DIEnumerator(name: "BUILT_IN_STRCPY", value: 341, isUnsigned: true)
!1066 = !DIEnumerator(name: "BUILT_IN_STRCSPN", value: 342, isUnsigned: true)
!1067 = !DIEnumerator(name: "BUILT_IN_STRDUP", value: 343, isUnsigned: true)
!1068 = !DIEnumerator(name: "BUILT_IN_STRNDUP", value: 344, isUnsigned: true)
!1069 = !DIEnumerator(name: "BUILT_IN_STRLEN", value: 345, isUnsigned: true)
!1070 = !DIEnumerator(name: "BUILT_IN_STRNCASECMP", value: 346, isUnsigned: true)
!1071 = !DIEnumerator(name: "BUILT_IN_STRNCAT", value: 347, isUnsigned: true)
!1072 = !DIEnumerator(name: "BUILT_IN_STRNCMP", value: 348, isUnsigned: true)
!1073 = !DIEnumerator(name: "BUILT_IN_STRNCPY", value: 349, isUnsigned: true)
!1074 = !DIEnumerator(name: "BUILT_IN_STRPBRK", value: 350, isUnsigned: true)
!1075 = !DIEnumerator(name: "BUILT_IN_STRRCHR", value: 351, isUnsigned: true)
!1076 = !DIEnumerator(name: "BUILT_IN_STRSPN", value: 352, isUnsigned: true)
!1077 = !DIEnumerator(name: "BUILT_IN_STRSTR", value: 353, isUnsigned: true)
!1078 = !DIEnumerator(name: "BUILT_IN_FPRINTF", value: 354, isUnsigned: true)
!1079 = !DIEnumerator(name: "BUILT_IN_FPRINTF_UNLOCKED", value: 355, isUnsigned: true)
!1080 = !DIEnumerator(name: "BUILT_IN_PUTC", value: 356, isUnsigned: true)
!1081 = !DIEnumerator(name: "BUILT_IN_PUTC_UNLOCKED", value: 357, isUnsigned: true)
!1082 = !DIEnumerator(name: "BUILT_IN_FPUTC", value: 358, isUnsigned: true)
!1083 = !DIEnumerator(name: "BUILT_IN_FPUTC_UNLOCKED", value: 359, isUnsigned: true)
!1084 = !DIEnumerator(name: "BUILT_IN_FPUTS", value: 360, isUnsigned: true)
!1085 = !DIEnumerator(name: "BUILT_IN_FPUTS_UNLOCKED", value: 361, isUnsigned: true)
!1086 = !DIEnumerator(name: "BUILT_IN_FSCANF", value: 362, isUnsigned: true)
!1087 = !DIEnumerator(name: "BUILT_IN_FWRITE", value: 363, isUnsigned: true)
!1088 = !DIEnumerator(name: "BUILT_IN_FWRITE_UNLOCKED", value: 364, isUnsigned: true)
!1089 = !DIEnumerator(name: "BUILT_IN_PRINTF", value: 365, isUnsigned: true)
!1090 = !DIEnumerator(name: "BUILT_IN_PRINTF_UNLOCKED", value: 366, isUnsigned: true)
!1091 = !DIEnumerator(name: "BUILT_IN_PUTCHAR", value: 367, isUnsigned: true)
!1092 = !DIEnumerator(name: "BUILT_IN_PUTCHAR_UNLOCKED", value: 368, isUnsigned: true)
!1093 = !DIEnumerator(name: "BUILT_IN_PUTS", value: 369, isUnsigned: true)
!1094 = !DIEnumerator(name: "BUILT_IN_PUTS_UNLOCKED", value: 370, isUnsigned: true)
!1095 = !DIEnumerator(name: "BUILT_IN_SCANF", value: 371, isUnsigned: true)
!1096 = !DIEnumerator(name: "BUILT_IN_SNPRINTF", value: 372, isUnsigned: true)
!1097 = !DIEnumerator(name: "BUILT_IN_SPRINTF", value: 373, isUnsigned: true)
!1098 = !DIEnumerator(name: "BUILT_IN_SSCANF", value: 374, isUnsigned: true)
!1099 = !DIEnumerator(name: "BUILT_IN_VFPRINTF", value: 375, isUnsigned: true)
!1100 = !DIEnumerator(name: "BUILT_IN_VFSCANF", value: 376, isUnsigned: true)
!1101 = !DIEnumerator(name: "BUILT_IN_VPRINTF", value: 377, isUnsigned: true)
!1102 = !DIEnumerator(name: "BUILT_IN_VSCANF", value: 378, isUnsigned: true)
!1103 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF", value: 379, isUnsigned: true)
!1104 = !DIEnumerator(name: "BUILT_IN_VSPRINTF", value: 380, isUnsigned: true)
!1105 = !DIEnumerator(name: "BUILT_IN_VSSCANF", value: 381, isUnsigned: true)
!1106 = !DIEnumerator(name: "BUILT_IN_ISALNUM", value: 382, isUnsigned: true)
!1107 = !DIEnumerator(name: "BUILT_IN_ISALPHA", value: 383, isUnsigned: true)
!1108 = !DIEnumerator(name: "BUILT_IN_ISASCII", value: 384, isUnsigned: true)
!1109 = !DIEnumerator(name: "BUILT_IN_ISBLANK", value: 385, isUnsigned: true)
!1110 = !DIEnumerator(name: "BUILT_IN_ISCNTRL", value: 386, isUnsigned: true)
!1111 = !DIEnumerator(name: "BUILT_IN_ISDIGIT", value: 387, isUnsigned: true)
!1112 = !DIEnumerator(name: "BUILT_IN_ISGRAPH", value: 388, isUnsigned: true)
!1113 = !DIEnumerator(name: "BUILT_IN_ISLOWER", value: 389, isUnsigned: true)
!1114 = !DIEnumerator(name: "BUILT_IN_ISPRINT", value: 390, isUnsigned: true)
!1115 = !DIEnumerator(name: "BUILT_IN_ISPUNCT", value: 391, isUnsigned: true)
!1116 = !DIEnumerator(name: "BUILT_IN_ISSPACE", value: 392, isUnsigned: true)
!1117 = !DIEnumerator(name: "BUILT_IN_ISUPPER", value: 393, isUnsigned: true)
!1118 = !DIEnumerator(name: "BUILT_IN_ISXDIGIT", value: 394, isUnsigned: true)
!1119 = !DIEnumerator(name: "BUILT_IN_TOASCII", value: 395, isUnsigned: true)
!1120 = !DIEnumerator(name: "BUILT_IN_TOLOWER", value: 396, isUnsigned: true)
!1121 = !DIEnumerator(name: "BUILT_IN_TOUPPER", value: 397, isUnsigned: true)
!1122 = !DIEnumerator(name: "BUILT_IN_ISWALNUM", value: 398, isUnsigned: true)
!1123 = !DIEnumerator(name: "BUILT_IN_ISWALPHA", value: 399, isUnsigned: true)
!1124 = !DIEnumerator(name: "BUILT_IN_ISWBLANK", value: 400, isUnsigned: true)
!1125 = !DIEnumerator(name: "BUILT_IN_ISWCNTRL", value: 401, isUnsigned: true)
!1126 = !DIEnumerator(name: "BUILT_IN_ISWDIGIT", value: 402, isUnsigned: true)
!1127 = !DIEnumerator(name: "BUILT_IN_ISWGRAPH", value: 403, isUnsigned: true)
!1128 = !DIEnumerator(name: "BUILT_IN_ISWLOWER", value: 404, isUnsigned: true)
!1129 = !DIEnumerator(name: "BUILT_IN_ISWPRINT", value: 405, isUnsigned: true)
!1130 = !DIEnumerator(name: "BUILT_IN_ISWPUNCT", value: 406, isUnsigned: true)
!1131 = !DIEnumerator(name: "BUILT_IN_ISWSPACE", value: 407, isUnsigned: true)
!1132 = !DIEnumerator(name: "BUILT_IN_ISWUPPER", value: 408, isUnsigned: true)
!1133 = !DIEnumerator(name: "BUILT_IN_ISWXDIGIT", value: 409, isUnsigned: true)
!1134 = !DIEnumerator(name: "BUILT_IN_TOWLOWER", value: 410, isUnsigned: true)
!1135 = !DIEnumerator(name: "BUILT_IN_TOWUPPER", value: 411, isUnsigned: true)
!1136 = !DIEnumerator(name: "BUILT_IN_ABORT", value: 412, isUnsigned: true)
!1137 = !DIEnumerator(name: "BUILT_IN_ABS", value: 413, isUnsigned: true)
!1138 = !DIEnumerator(name: "BUILT_IN_AGGREGATE_INCOMING_ADDRESS", value: 414, isUnsigned: true)
!1139 = !DIEnumerator(name: "BUILT_IN_ALLOCA", value: 415, isUnsigned: true)
!1140 = !DIEnumerator(name: "BUILT_IN_APPLY", value: 416, isUnsigned: true)
!1141 = !DIEnumerator(name: "BUILT_IN_APPLY_ARGS", value: 417, isUnsigned: true)
!1142 = !DIEnumerator(name: "BUILT_IN_ARGS_INFO", value: 418, isUnsigned: true)
!1143 = !DIEnumerator(name: "BUILT_IN_BSWAP32", value: 419, isUnsigned: true)
!1144 = !DIEnumerator(name: "BUILT_IN_BSWAP64", value: 420, isUnsigned: true)
!1145 = !DIEnumerator(name: "BUILT_IN_CLEAR_CACHE", value: 421, isUnsigned: true)
!1146 = !DIEnumerator(name: "BUILT_IN_CALLOC", value: 422, isUnsigned: true)
!1147 = !DIEnumerator(name: "BUILT_IN_CLASSIFY_TYPE", value: 423, isUnsigned: true)
!1148 = !DIEnumerator(name: "BUILT_IN_CLZ", value: 424, isUnsigned: true)
!1149 = !DIEnumerator(name: "BUILT_IN_CLZIMAX", value: 425, isUnsigned: true)
!1150 = !DIEnumerator(name: "BUILT_IN_CLZL", value: 426, isUnsigned: true)
!1151 = !DIEnumerator(name: "BUILT_IN_CLZLL", value: 427, isUnsigned: true)
!1152 = !DIEnumerator(name: "BUILT_IN_CONSTANT_P", value: 428, isUnsigned: true)
!1153 = !DIEnumerator(name: "BUILT_IN_CTZ", value: 429, isUnsigned: true)
!1154 = !DIEnumerator(name: "BUILT_IN_CTZIMAX", value: 430, isUnsigned: true)
!1155 = !DIEnumerator(name: "BUILT_IN_CTZL", value: 431, isUnsigned: true)
!1156 = !DIEnumerator(name: "BUILT_IN_CTZLL", value: 432, isUnsigned: true)
!1157 = !DIEnumerator(name: "BUILT_IN_DCGETTEXT", value: 433, isUnsigned: true)
!1158 = !DIEnumerator(name: "BUILT_IN_DGETTEXT", value: 434, isUnsigned: true)
!1159 = !DIEnumerator(name: "BUILT_IN_DWARF_CFA", value: 435, isUnsigned: true)
!1160 = !DIEnumerator(name: "BUILT_IN_DWARF_SP_COLUMN", value: 436, isUnsigned: true)
!1161 = !DIEnumerator(name: "BUILT_IN_EH_RETURN", value: 437, isUnsigned: true)
!1162 = !DIEnumerator(name: "BUILT_IN_EH_RETURN_DATA_REGNO", value: 438, isUnsigned: true)
!1163 = !DIEnumerator(name: "BUILT_IN_EXECL", value: 439, isUnsigned: true)
!1164 = !DIEnumerator(name: "BUILT_IN_EXECLP", value: 440, isUnsigned: true)
!1165 = !DIEnumerator(name: "BUILT_IN_EXECLE", value: 441, isUnsigned: true)
!1166 = !DIEnumerator(name: "BUILT_IN_EXECV", value: 442, isUnsigned: true)
!1167 = !DIEnumerator(name: "BUILT_IN_EXECVP", value: 443, isUnsigned: true)
!1168 = !DIEnumerator(name: "BUILT_IN_EXECVE", value: 444, isUnsigned: true)
!1169 = !DIEnumerator(name: "BUILT_IN_EXIT", value: 445, isUnsigned: true)
!1170 = !DIEnumerator(name: "BUILT_IN_EXPECT", value: 446, isUnsigned: true)
!1171 = !DIEnumerator(name: "BUILT_IN_EXTEND_POINTER", value: 447, isUnsigned: true)
!1172 = !DIEnumerator(name: "BUILT_IN_EXTRACT_RETURN_ADDR", value: 448, isUnsigned: true)
!1173 = !DIEnumerator(name: "BUILT_IN_FFS", value: 449, isUnsigned: true)
!1174 = !DIEnumerator(name: "BUILT_IN_FFSIMAX", value: 450, isUnsigned: true)
!1175 = !DIEnumerator(name: "BUILT_IN_FFSL", value: 451, isUnsigned: true)
!1176 = !DIEnumerator(name: "BUILT_IN_FFSLL", value: 452, isUnsigned: true)
!1177 = !DIEnumerator(name: "BUILT_IN_FORK", value: 453, isUnsigned: true)
!1178 = !DIEnumerator(name: "BUILT_IN_FRAME_ADDRESS", value: 454, isUnsigned: true)
!1179 = !DIEnumerator(name: "BUILT_IN_FREE", value: 455, isUnsigned: true)
!1180 = !DIEnumerator(name: "BUILT_IN_FROB_RETURN_ADDR", value: 456, isUnsigned: true)
!1181 = !DIEnumerator(name: "BUILT_IN_GETTEXT", value: 457, isUnsigned: true)
!1182 = !DIEnumerator(name: "BUILT_IN_IMAXABS", value: 458, isUnsigned: true)
!1183 = !DIEnumerator(name: "BUILT_IN_INIT_DWARF_REG_SIZES", value: 459, isUnsigned: true)
!1184 = !DIEnumerator(name: "BUILT_IN_FINITE", value: 460, isUnsigned: true)
!1185 = !DIEnumerator(name: "BUILT_IN_FINITEF", value: 461, isUnsigned: true)
!1186 = !DIEnumerator(name: "BUILT_IN_FINITEL", value: 462, isUnsigned: true)
!1187 = !DIEnumerator(name: "BUILT_IN_FINITED32", value: 463, isUnsigned: true)
!1188 = !DIEnumerator(name: "BUILT_IN_FINITED64", value: 464, isUnsigned: true)
!1189 = !DIEnumerator(name: "BUILT_IN_FINITED128", value: 465, isUnsigned: true)
!1190 = !DIEnumerator(name: "BUILT_IN_FPCLASSIFY", value: 466, isUnsigned: true)
!1191 = !DIEnumerator(name: "BUILT_IN_ISFINITE", value: 467, isUnsigned: true)
!1192 = !DIEnumerator(name: "BUILT_IN_ISINF_SIGN", value: 468, isUnsigned: true)
!1193 = !DIEnumerator(name: "BUILT_IN_ISINF", value: 469, isUnsigned: true)
!1194 = !DIEnumerator(name: "BUILT_IN_ISINFF", value: 470, isUnsigned: true)
!1195 = !DIEnumerator(name: "BUILT_IN_ISINFL", value: 471, isUnsigned: true)
!1196 = !DIEnumerator(name: "BUILT_IN_ISINFD32", value: 472, isUnsigned: true)
!1197 = !DIEnumerator(name: "BUILT_IN_ISINFD64", value: 473, isUnsigned: true)
!1198 = !DIEnumerator(name: "BUILT_IN_ISINFD128", value: 474, isUnsigned: true)
!1199 = !DIEnumerator(name: "BUILT_IN_ISNAN", value: 475, isUnsigned: true)
!1200 = !DIEnumerator(name: "BUILT_IN_ISNANF", value: 476, isUnsigned: true)
!1201 = !DIEnumerator(name: "BUILT_IN_ISNANL", value: 477, isUnsigned: true)
!1202 = !DIEnumerator(name: "BUILT_IN_ISNAND32", value: 478, isUnsigned: true)
!1203 = !DIEnumerator(name: "BUILT_IN_ISNAND64", value: 479, isUnsigned: true)
!1204 = !DIEnumerator(name: "BUILT_IN_ISNAND128", value: 480, isUnsigned: true)
!1205 = !DIEnumerator(name: "BUILT_IN_ISNORMAL", value: 481, isUnsigned: true)
!1206 = !DIEnumerator(name: "BUILT_IN_ISGREATER", value: 482, isUnsigned: true)
!1207 = !DIEnumerator(name: "BUILT_IN_ISGREATEREQUAL", value: 483, isUnsigned: true)
!1208 = !DIEnumerator(name: "BUILT_IN_ISLESS", value: 484, isUnsigned: true)
!1209 = !DIEnumerator(name: "BUILT_IN_ISLESSEQUAL", value: 485, isUnsigned: true)
!1210 = !DIEnumerator(name: "BUILT_IN_ISLESSGREATER", value: 486, isUnsigned: true)
!1211 = !DIEnumerator(name: "BUILT_IN_ISUNORDERED", value: 487, isUnsigned: true)
!1212 = !DIEnumerator(name: "BUILT_IN_LABS", value: 488, isUnsigned: true)
!1213 = !DIEnumerator(name: "BUILT_IN_LLABS", value: 489, isUnsigned: true)
!1214 = !DIEnumerator(name: "BUILT_IN_LONGJMP", value: 490, isUnsigned: true)
!1215 = !DIEnumerator(name: "BUILT_IN_MALLOC", value: 491, isUnsigned: true)
!1216 = !DIEnumerator(name: "BUILT_IN_NEXT_ARG", value: 492, isUnsigned: true)
!1217 = !DIEnumerator(name: "BUILT_IN_PARITY", value: 493, isUnsigned: true)
!1218 = !DIEnumerator(name: "BUILT_IN_PARITYIMAX", value: 494, isUnsigned: true)
!1219 = !DIEnumerator(name: "BUILT_IN_PARITYL", value: 495, isUnsigned: true)
!1220 = !DIEnumerator(name: "BUILT_IN_PARITYLL", value: 496, isUnsigned: true)
!1221 = !DIEnumerator(name: "BUILT_IN_POPCOUNT", value: 497, isUnsigned: true)
!1222 = !DIEnumerator(name: "BUILT_IN_POPCOUNTIMAX", value: 498, isUnsigned: true)
!1223 = !DIEnumerator(name: "BUILT_IN_POPCOUNTL", value: 499, isUnsigned: true)
!1224 = !DIEnumerator(name: "BUILT_IN_POPCOUNTLL", value: 500, isUnsigned: true)
!1225 = !DIEnumerator(name: "BUILT_IN_PREFETCH", value: 501, isUnsigned: true)
!1226 = !DIEnumerator(name: "BUILT_IN_REALLOC", value: 502, isUnsigned: true)
!1227 = !DIEnumerator(name: "BUILT_IN_RETURN", value: 503, isUnsigned: true)
!1228 = !DIEnumerator(name: "BUILT_IN_RETURN_ADDRESS", value: 504, isUnsigned: true)
!1229 = !DIEnumerator(name: "BUILT_IN_SAVEREGS", value: 505, isUnsigned: true)
!1230 = !DIEnumerator(name: "BUILT_IN_SETJMP", value: 506, isUnsigned: true)
!1231 = !DIEnumerator(name: "BUILT_IN_STRFMON", value: 507, isUnsigned: true)
!1232 = !DIEnumerator(name: "BUILT_IN_STRFTIME", value: 508, isUnsigned: true)
!1233 = !DIEnumerator(name: "BUILT_IN_TRAP", value: 509, isUnsigned: true)
!1234 = !DIEnumerator(name: "BUILT_IN_UNREACHABLE", value: 510, isUnsigned: true)
!1235 = !DIEnumerator(name: "BUILT_IN_UNWIND_INIT", value: 511, isUnsigned: true)
!1236 = !DIEnumerator(name: "BUILT_IN_UPDATE_SETJMP_BUF", value: 512, isUnsigned: true)
!1237 = !DIEnumerator(name: "BUILT_IN_VA_COPY", value: 513, isUnsigned: true)
!1238 = !DIEnumerator(name: "BUILT_IN_VA_END", value: 514, isUnsigned: true)
!1239 = !DIEnumerator(name: "BUILT_IN_VA_START", value: 515, isUnsigned: true)
!1240 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK", value: 516, isUnsigned: true)
!1241 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK_LEN", value: 517, isUnsigned: true)
!1242 = !DIEnumerator(name: "BUILT_IN__EXIT", value: 518, isUnsigned: true)
!1243 = !DIEnumerator(name: "BUILT_IN__EXIT2", value: 519, isUnsigned: true)
!1244 = !DIEnumerator(name: "BUILT_IN_INIT_TRAMPOLINE", value: 520, isUnsigned: true)
!1245 = !DIEnumerator(name: "BUILT_IN_ADJUST_TRAMPOLINE", value: 521, isUnsigned: true)
!1246 = !DIEnumerator(name: "BUILT_IN_NONLOCAL_GOTO", value: 522, isUnsigned: true)
!1247 = !DIEnumerator(name: "BUILT_IN_SETJMP_SETUP", value: 523, isUnsigned: true)
!1248 = !DIEnumerator(name: "BUILT_IN_SETJMP_DISPATCHER", value: 524, isUnsigned: true)
!1249 = !DIEnumerator(name: "BUILT_IN_SETJMP_RECEIVER", value: 525, isUnsigned: true)
!1250 = !DIEnumerator(name: "BUILT_IN_STACK_SAVE", value: 526, isUnsigned: true)
!1251 = !DIEnumerator(name: "BUILT_IN_STACK_RESTORE", value: 527, isUnsigned: true)
!1252 = !DIEnumerator(name: "BUILT_IN_OBJECT_SIZE", value: 528, isUnsigned: true)
!1253 = !DIEnumerator(name: "BUILT_IN_MEMCPY_CHK", value: 529, isUnsigned: true)
!1254 = !DIEnumerator(name: "BUILT_IN_MEMMOVE_CHK", value: 530, isUnsigned: true)
!1255 = !DIEnumerator(name: "BUILT_IN_MEMPCPY_CHK", value: 531, isUnsigned: true)
!1256 = !DIEnumerator(name: "BUILT_IN_MEMSET_CHK", value: 532, isUnsigned: true)
!1257 = !DIEnumerator(name: "BUILT_IN_STPCPY_CHK", value: 533, isUnsigned: true)
!1258 = !DIEnumerator(name: "BUILT_IN_STRCAT_CHK", value: 534, isUnsigned: true)
!1259 = !DIEnumerator(name: "BUILT_IN_STRCPY_CHK", value: 535, isUnsigned: true)
!1260 = !DIEnumerator(name: "BUILT_IN_STRNCAT_CHK", value: 536, isUnsigned: true)
!1261 = !DIEnumerator(name: "BUILT_IN_STRNCPY_CHK", value: 537, isUnsigned: true)
!1262 = !DIEnumerator(name: "BUILT_IN_SNPRINTF_CHK", value: 538, isUnsigned: true)
!1263 = !DIEnumerator(name: "BUILT_IN_SPRINTF_CHK", value: 539, isUnsigned: true)
!1264 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF_CHK", value: 540, isUnsigned: true)
!1265 = !DIEnumerator(name: "BUILT_IN_VSPRINTF_CHK", value: 541, isUnsigned: true)
!1266 = !DIEnumerator(name: "BUILT_IN_FPRINTF_CHK", value: 542, isUnsigned: true)
!1267 = !DIEnumerator(name: "BUILT_IN_PRINTF_CHK", value: 543, isUnsigned: true)
!1268 = !DIEnumerator(name: "BUILT_IN_VFPRINTF_CHK", value: 544, isUnsigned: true)
!1269 = !DIEnumerator(name: "BUILT_IN_VPRINTF_CHK", value: 545, isUnsigned: true)
!1270 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_ENTER", value: 546, isUnsigned: true)
!1271 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_EXIT", value: 547, isUnsigned: true)
!1272 = !DIEnumerator(name: "BUILT_IN_EMUTLS_GET_ADDRESS", value: 548, isUnsigned: true)
!1273 = !DIEnumerator(name: "BUILT_IN_EMUTLS_REGISTER_COMMON", value: 549, isUnsigned: true)
!1274 = !DIEnumerator(name: "BUILT_IN_UNWIND_RESUME", value: 550, isUnsigned: true)
!1275 = !DIEnumerator(name: "BUILT_IN_CXA_END_CLEANUP", value: 551, isUnsigned: true)
!1276 = !DIEnumerator(name: "BUILT_IN_EH_POINTER", value: 552, isUnsigned: true)
!1277 = !DIEnumerator(name: "BUILT_IN_EH_FILTER", value: 553, isUnsigned: true)
!1278 = !DIEnumerator(name: "BUILT_IN_EH_COPY_VALUES", value: 554, isUnsigned: true)
!1279 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_N", value: 555, isUnsigned: true)
!1280 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_1", value: 556, isUnsigned: true)
!1281 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_2", value: 557, isUnsigned: true)
!1282 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_4", value: 558, isUnsigned: true)
!1283 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_8", value: 559, isUnsigned: true)
!1284 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_16", value: 560, isUnsigned: true)
!1285 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_N", value: 561, isUnsigned: true)
!1286 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_1", value: 562, isUnsigned: true)
!1287 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_2", value: 563, isUnsigned: true)
!1288 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_4", value: 564, isUnsigned: true)
!1289 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_8", value: 565, isUnsigned: true)
!1290 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_16", value: 566, isUnsigned: true)
!1291 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_N", value: 567, isUnsigned: true)
!1292 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_1", value: 568, isUnsigned: true)
!1293 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_2", value: 569, isUnsigned: true)
!1294 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_4", value: 570, isUnsigned: true)
!1295 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_8", value: 571, isUnsigned: true)
!1296 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_16", value: 572, isUnsigned: true)
!1297 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_N", value: 573, isUnsigned: true)
!1298 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_1", value: 574, isUnsigned: true)
!1299 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_2", value: 575, isUnsigned: true)
!1300 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_4", value: 576, isUnsigned: true)
!1301 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_8", value: 577, isUnsigned: true)
!1302 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_16", value: 578, isUnsigned: true)
!1303 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_N", value: 579, isUnsigned: true)
!1304 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_1", value: 580, isUnsigned: true)
!1305 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_2", value: 581, isUnsigned: true)
!1306 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_4", value: 582, isUnsigned: true)
!1307 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_8", value: 583, isUnsigned: true)
!1308 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_16", value: 584, isUnsigned: true)
!1309 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_N", value: 585, isUnsigned: true)
!1310 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_1", value: 586, isUnsigned: true)
!1311 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_2", value: 587, isUnsigned: true)
!1312 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_4", value: 588, isUnsigned: true)
!1313 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_8", value: 589, isUnsigned: true)
!1314 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_16", value: 590, isUnsigned: true)
!1315 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_N", value: 591, isUnsigned: true)
!1316 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_1", value: 592, isUnsigned: true)
!1317 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_2", value: 593, isUnsigned: true)
!1318 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_4", value: 594, isUnsigned: true)
!1319 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_8", value: 595, isUnsigned: true)
!1320 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_16", value: 596, isUnsigned: true)
!1321 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_N", value: 597, isUnsigned: true)
!1322 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_1", value: 598, isUnsigned: true)
!1323 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_2", value: 599, isUnsigned: true)
!1324 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_4", value: 600, isUnsigned: true)
!1325 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_8", value: 601, isUnsigned: true)
!1326 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_16", value: 602, isUnsigned: true)
!1327 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_N", value: 603, isUnsigned: true)
!1328 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_1", value: 604, isUnsigned: true)
!1329 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_2", value: 605, isUnsigned: true)
!1330 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_4", value: 606, isUnsigned: true)
!1331 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_8", value: 607, isUnsigned: true)
!1332 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_16", value: 608, isUnsigned: true)
!1333 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_N", value: 609, isUnsigned: true)
!1334 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_1", value: 610, isUnsigned: true)
!1335 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_2", value: 611, isUnsigned: true)
!1336 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_4", value: 612, isUnsigned: true)
!1337 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_8", value: 613, isUnsigned: true)
!1338 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_16", value: 614, isUnsigned: true)
!1339 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_N", value: 615, isUnsigned: true)
!1340 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_1", value: 616, isUnsigned: true)
!1341 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_2", value: 617, isUnsigned: true)
!1342 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_4", value: 618, isUnsigned: true)
!1343 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_8", value: 619, isUnsigned: true)
!1344 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_16", value: 620, isUnsigned: true)
!1345 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_N", value: 621, isUnsigned: true)
!1346 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_1", value: 622, isUnsigned: true)
!1347 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_2", value: 623, isUnsigned: true)
!1348 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_4", value: 624, isUnsigned: true)
!1349 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_8", value: 625, isUnsigned: true)
!1350 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_16", value: 626, isUnsigned: true)
!1351 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_N", value: 627, isUnsigned: true)
!1352 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_1", value: 628, isUnsigned: true)
!1353 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_2", value: 629, isUnsigned: true)
!1354 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_4", value: 630, isUnsigned: true)
!1355 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_8", value: 631, isUnsigned: true)
!1356 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_16", value: 632, isUnsigned: true)
!1357 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_N", value: 633, isUnsigned: true)
!1358 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_1", value: 634, isUnsigned: true)
!1359 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_2", value: 635, isUnsigned: true)
!1360 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_4", value: 636, isUnsigned: true)
!1361 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_8", value: 637, isUnsigned: true)
!1362 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_16", value: 638, isUnsigned: true)
!1363 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_N", value: 639, isUnsigned: true)
!1364 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_1", value: 640, isUnsigned: true)
!1365 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_2", value: 641, isUnsigned: true)
!1366 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_4", value: 642, isUnsigned: true)
!1367 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_8", value: 643, isUnsigned: true)
!1368 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_16", value: 644, isUnsigned: true)
!1369 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_N", value: 645, isUnsigned: true)
!1370 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_1", value: 646, isUnsigned: true)
!1371 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_2", value: 647, isUnsigned: true)
!1372 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_4", value: 648, isUnsigned: true)
!1373 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_8", value: 649, isUnsigned: true)
!1374 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_16", value: 650, isUnsigned: true)
!1375 = !DIEnumerator(name: "BUILT_IN_SYNCHRONIZE", value: 651, isUnsigned: true)
!1376 = !DIEnumerator(name: "BUILT_IN_OMP_GET_THREAD_NUM", value: 652, isUnsigned: true)
!1377 = !DIEnumerator(name: "BUILT_IN_OMP_GET_NUM_THREADS", value: 653, isUnsigned: true)
!1378 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_START", value: 654, isUnsigned: true)
!1379 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_END", value: 655, isUnsigned: true)
!1380 = !DIEnumerator(name: "BUILT_IN_GOMP_BARRIER", value: 656, isUnsigned: true)
!1381 = !DIEnumerator(name: "BUILT_IN_GOMP_TASKWAIT", value: 657, isUnsigned: true)
!1382 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_START", value: 658, isUnsigned: true)
!1383 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_END", value: 659, isUnsigned: true)
!1384 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_START", value: 660, isUnsigned: true)
!1385 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_END", value: 661, isUnsigned: true)
!1386 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_START", value: 662, isUnsigned: true)
!1387 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_START", value: 663, isUnsigned: true)
!1388 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_START", value: 664, isUnsigned: true)
!1389 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_START", value: 665, isUnsigned: true)
!1390 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START", value: 666, isUnsigned: true)
!1391 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_START", value: 667, isUnsigned: true)
!1392 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_START", value: 668, isUnsigned: true)
!1393 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_START", value: 669, isUnsigned: true)
!1394 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_NEXT", value: 670, isUnsigned: true)
!1395 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_NEXT", value: 671, isUnsigned: true)
!1396 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_NEXT", value: 672, isUnsigned: true)
!1397 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_NEXT", value: 673, isUnsigned: true)
!1398 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_NEXT", value: 674, isUnsigned: true)
!1399 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_NEXT", value: 675, isUnsigned: true)
!1400 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_NEXT", value: 676, isUnsigned: true)
!1401 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_NEXT", value: 677, isUnsigned: true)
!1402 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_START", value: 678, isUnsigned: true)
!1403 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_START", value: 679, isUnsigned: true)
!1404 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_START", value: 680, isUnsigned: true)
!1405 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_START", value: 681, isUnsigned: true)
!1406 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START", value: 682, isUnsigned: true)
!1407 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_START", value: 683, isUnsigned: true)
!1408 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_START", value: 684, isUnsigned: true)
!1409 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_START", value: 685, isUnsigned: true)
!1410 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_NEXT", value: 686, isUnsigned: true)
!1411 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_NEXT", value: 687, isUnsigned: true)
!1412 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_NEXT", value: 688, isUnsigned: true)
!1413 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_NEXT", value: 689, isUnsigned: true)
!1414 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_NEXT", value: 690, isUnsigned: true)
!1415 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_NEXT", value: 691, isUnsigned: true)
!1416 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_NEXT", value: 692, isUnsigned: true)
!1417 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_NEXT", value: 693, isUnsigned: true)
!1418 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_STATIC_START", value: 694, isUnsigned: true)
!1419 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_DYNAMIC_START", value: 695, isUnsigned: true)
!1420 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_GUIDED_START", value: 696, isUnsigned: true)
!1421 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_RUNTIME_START", value: 697, isUnsigned: true)
!1422 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END", value: 698, isUnsigned: true)
!1423 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END_NOWAIT", value: 699, isUnsigned: true)
!1424 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_START", value: 700, isUnsigned: true)
!1425 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_END", value: 701, isUnsigned: true)
!1426 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_START", value: 702, isUnsigned: true)
!1427 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_END", value: 703, isUnsigned: true)
!1428 = !DIEnumerator(name: "BUILT_IN_GOMP_TASK", value: 704, isUnsigned: true)
!1429 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_START", value: 705, isUnsigned: true)
!1430 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_NEXT", value: 706, isUnsigned: true)
!1431 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_SECTIONS_START", value: 707, isUnsigned: true)
!1432 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END", value: 708, isUnsigned: true)
!1433 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END_NOWAIT", value: 709, isUnsigned: true)
!1434 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_START", value: 710, isUnsigned: true)
!1435 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_START", value: 711, isUnsigned: true)
!1436 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_END", value: 712, isUnsigned: true)
!1437 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MIN", value: 713, isUnsigned: true)
!1438 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MAX", value: 716, isUnsigned: true)
!1439 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MIN", value: 717, isUnsigned: true)
!1440 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MAX", value: 720, isUnsigned: true)
!1441 = !DIEnumerator(name: "END_BUILTINS", value: 721, isUnsigned: true)
!1442 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "symbol_visibility", file: !135, line: 2465, baseType: !7, size: 32, elements: !1443)
!1443 = !{!1444, !1445, !1446, !1447}
!1444 = !DIEnumerator(name: "VISIBILITY_DEFAULT", value: 0, isUnsigned: true)
!1445 = !DIEnumerator(name: "VISIBILITY_PROTECTED", value: 1, isUnsigned: true)
!1446 = !DIEnumerator(name: "VISIBILITY_HIDDEN", value: 2, isUnsigned: true)
!1447 = !DIEnumerator(name: "VISIBILITY_INTERNAL", value: 3, isUnsigned: true)
!1448 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tls_model", file: !1449, line: 97, baseType: !7, size: 32, elements: !1450)
!1449 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1450 = !{!1451, !1452, !1453, !1454, !1455, !1456, !1457}
!1451 = !DIEnumerator(name: "TLS_MODEL_NONE", value: 0, isUnsigned: true)
!1452 = !DIEnumerator(name: "TLS_MODEL_EMULATED", value: 1, isUnsigned: true)
!1453 = !DIEnumerator(name: "TLS_MODEL_REAL", value: 2, isUnsigned: true)
!1454 = !DIEnumerator(name: "TLS_MODEL_GLOBAL_DYNAMIC", value: 2, isUnsigned: true)
!1455 = !DIEnumerator(name: "TLS_MODEL_LOCAL_DYNAMIC", value: 3, isUnsigned: true)
!1456 = !DIEnumerator(name: "TLS_MODEL_INITIAL_EXEC", value: 4, isUnsigned: true)
!1457 = !DIEnumerator(name: "TLS_MODEL_LOCAL_EXEC", value: 5, isUnsigned: true)
!1458 = !{!1459, !1460, !1461, !1462, !1465, !1466, !7, !1468, !2891, !3198, !336, !2003, !2383, !2019, !645, !3043, !2270, !2222, !2221, !3222, !2295, !2237, !1594, !1463, !3225, !2283, !2258, !2345, !2361, !1523, !134, !651, !1826, !1792, !3230, !3232, !3249, !602, !716, !722, !1521, !1529, !5, !1442, !1448, !3262, !2669, !3263, !2307}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1460 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1461 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1464, size: 64)
!1464 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1464)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !1449, line: 56, baseType: !1469)
!1469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1470, size: 64)
!1470 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !1471)
!1471 = !{!1472, !1505, !1511, !1524, !1543, !1554, !1559, !1568, !1574, !1587, !1599, !1637, !2129, !2157, !2174, !2175, !2180, !2189, !2195, !2200, !2204, !2208, !2542, !2589, !2595, !2601, !2608, !2621, !2635, !2652, !2664, !2686, !2701, !2873}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1470, file: !135, line: 3372, baseType: !1473, size: 64)
!1473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !1474)
!1474 = !{!1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504}
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1473, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !1473, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !1473, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !1473, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !1473, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !1473, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !1473, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !1473, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !1473, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !1473, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !1473, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !1473, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !1473, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !1473, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !1473, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !1473, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !1473, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !1473, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1473, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1473, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1473, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1473, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1473, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1473, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1473, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1473, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !1473, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !1473, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !1473, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !1473, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1470, file: !135, line: 3373, baseType: !1506, size: 192)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !1507)
!1507 = !{!1508, !1509, !1510}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1506, file: !135, line: 403, baseType: !1473, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1506, file: !135, line: 404, baseType: !1468, size: 64, offset: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1506, file: !135, line: 405, baseType: !1468, size: 64, offset: 128)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1470, file: !135, line: 3374, baseType: !1512, size: 320)
!1512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !1513)
!1513 = !{!1514, !1515}
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1512, file: !135, line: 1385, baseType: !1506, size: 192)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1512, file: !135, line: 1386, baseType: !1516, size: 128, offset: 192)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1517, line: 58, baseType: !1518)
!1517 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1517, line: 54, size: 128, elements: !1519)
!1519 = !{!1520, !1522}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1518, file: !1517, line: 56, baseType: !1521, size: 64)
!1521 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1518, file: !1517, line: 57, baseType: !1523, size: 64, offset: 64)
!1523 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !1470, file: !135, line: 3375, baseType: !1525, size: 256)
!1525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !1526)
!1526 = !{!1527, !1528}
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1525, file: !135, line: 1398, baseType: !1506, size: 192)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1525, file: !135, line: 1399, baseType: !1529, size: 64, offset: 192)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1531, line: 52, size: 256, elements: !1532)
!1531 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1532 = !{!1533, !1534, !1535, !1536, !1537, !1538, !1539}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1530, file: !1531, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1530, file: !1531, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1530, file: !1531, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1530, file: !1531, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1530, file: !1531, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1530, file: !1531, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1530, file: !1531, line: 62, baseType: !1540, size: 192, offset: 64)
!1540 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1521, size: 192, elements: !1541)
!1541 = !{!1542}
!1542 = !DISubrange(count: 3)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !1470, file: !135, line: 3376, baseType: !1544, size: 256)
!1544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !1545)
!1545 = !{!1546, !1547}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1544, file: !135, line: 1409, baseType: !1506, size: 192)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1544, file: !135, line: 1410, baseType: !1548, size: 64, offset: 192)
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1549, size: 64)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1550, line: 27, size: 192, elements: !1551)
!1550 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1551 = !{!1552, !1553}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1549, file: !1550, line: 29, baseType: !1516, size: 128)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1549, file: !1550, line: 30, baseType: !5, size: 32, offset: 128)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1470, file: !135, line: 3377, baseType: !1555, size: 256)
!1555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !1556)
!1556 = !{!1557, !1558}
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1555, file: !135, line: 1438, baseType: !1506, size: 192)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1555, file: !135, line: 1439, baseType: !1468, size: 64, offset: 192)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1470, file: !135, line: 3378, baseType: !1560, size: 256)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !1561)
!1561 = !{!1562, !1563, !1564}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1560, file: !135, line: 1419, baseType: !1506, size: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1560, file: !135, line: 1420, baseType: !1461, size: 32, offset: 192)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1560, file: !135, line: 1421, baseType: !1565, size: 8, offset: 224)
!1565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1464, size: 8, elements: !1566)
!1566 = !{!1567}
!1567 = !DISubrange(count: 1)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !1470, file: !135, line: 3379, baseType: !1569, size: 320)
!1569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !1570)
!1570 = !{!1571, !1572, !1573}
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1569, file: !135, line: 1429, baseType: !1506, size: 192)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1569, file: !135, line: 1430, baseType: !1468, size: 64, offset: 192)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1569, file: !135, line: 1431, baseType: !1468, size: 64, offset: 256)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1470, file: !135, line: 3380, baseType: !1575, size: 320)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !1576)
!1576 = !{!1577, !1578}
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1575, file: !135, line: 1461, baseType: !1506, size: 192)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1575, file: !135, line: 1462, baseType: !1579, size: 128, offset: 192)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1580, line: 31, size: 128, elements: !1581)
!1580 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1581 = !{!1582, !1585, !1586}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1579, file: !1580, line: 32, baseType: !1583, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1584, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1579, file: !1580, line: 33, baseType: !7, size: 32, offset: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1579, file: !1580, line: 34, baseType: !7, size: 32, offset: 96)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !1470, file: !135, line: 3381, baseType: !1588, size: 384)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !1589)
!1589 = !{!1590, !1591, !1596, !1597, !1598}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1588, file: !135, line: 2508, baseType: !1506, size: 192)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1588, file: !135, line: 2509, baseType: !1592, size: 32, offset: 192)
!1592 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1593, line: 58, baseType: !1594)
!1593 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1595, line: 44, baseType: !7)
!1595 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1588, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1588, file: !135, line: 2511, baseType: !1468, size: 64, offset: 256)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1588, file: !135, line: 2512, baseType: !1468, size: 64, offset: 320)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !1470, file: !135, line: 3382, baseType: !1600, size: 896)
!1600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !1601)
!1601 = !{!1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634}
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1600, file: !135, line: 2653, baseType: !1588, size: 384)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1600, file: !135, line: 2654, baseType: !1468, size: 64, offset: 384)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1600, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1600, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1600, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1600, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1600, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1600, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1600, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1600, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1600, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1600, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1600, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1600, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1600, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1600, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1600, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1600, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1600, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1600, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1600, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1600, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1600, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1600, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1600, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1600, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1600, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1600, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1600, file: !135, line: 2705, baseType: !1468, size: 64, offset: 576)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1600, file: !135, line: 2706, baseType: !1468, size: 64, offset: 640)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1600, file: !135, line: 2707, baseType: !1468, size: 64, offset: 704)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1600, file: !135, line: 2708, baseType: !1468, size: 64, offset: 768)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1600, file: !135, line: 2711, baseType: !1635, size: 64, offset: 832)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !1470, file: !135, line: 3383, baseType: !1638, size: 960)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !1639)
!1639 = !{!1640, !1641}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1638, file: !135, line: 2757, baseType: !1600, size: 896)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1638, file: !135, line: 2758, baseType: !1642, size: 64, offset: 896)
!1642 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !1449, line: 50, baseType: !1643)
!1643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1644, size: 64)
!1644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !1645, line: 240, size: 384, elements: !1646)
!1645 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1646 = !{!1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1644, file: !1645, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1644, file: !1645, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !1644, file: !1645, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1644, file: !1645, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !1644, file: !1645, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !1644, file: !1645, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !1644, file: !1645, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1644, file: !1645, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !1644, file: !1645, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !1644, file: !1645, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1644, file: !1645, line: 321, baseType: !1658, size: 320, offset: 64)
!1658 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !1645, line: 315, size: 320, elements: !1659)
!1659 = !{!1660, !2062, !2064, !2127, !2128}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1658, file: !1645, line: 316, baseType: !1661, size: 64)
!1661 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1662, size: 64, elements: !1566)
!1662 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !1645, line: 183, baseType: !1663)
!1663 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !1645, line: 166, size: 64, elements: !1664)
!1664 = !{!1665, !1666, !1667, !1668, !1669, !1677, !1678, !1690, !1693, !1753, !1754, !2039, !2052, !2059}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !1663, file: !1645, line: 168, baseType: !1461, size: 32)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !1663, file: !1645, line: 169, baseType: !7, size: 32)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !1663, file: !1645, line: 170, baseType: !1466, size: 64)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !1663, file: !1645, line: 171, baseType: !1642, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !1663, file: !1645, line: 172, baseType: !1670, size: 64)
!1670 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !1449, line: 53, baseType: !1671)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !1645, line: 359, size: 128, elements: !1673)
!1673 = !{!1674, !1675}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !1672, file: !1645, line: 360, baseType: !1461, size: 32)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1672, file: !1645, line: 361, baseType: !1676, size: 64, offset: 64)
!1676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1642, size: 64, elements: !1566)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !1663, file: !1645, line: 173, baseType: !5, size: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !1663, file: !1645, line: 174, baseType: !1679, size: 32)
!1679 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !1645, line: 133, baseType: !1680)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1645, line: 115, size: 32, elements: !1681)
!1681 = !{!1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !1680, file: !1645, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !1680, file: !1645, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !1680, file: !1645, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !1680, file: !1645, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !1680, file: !1645, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !1680, file: !1645, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !1680, file: !1645, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1680, file: !1645, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !1663, file: !1645, line: 175, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !1645, line: 175, flags: DIFlagFwdDecl)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !1663, file: !1645, line: 176, baseType: !1694, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1696, line: 75, size: 256, elements: !1697)
!1696 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1697 = !{!1698, !1712, !1713, !1714}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1695, file: !1696, line: 76, baseType: !1699, size: 64)
!1699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1700, size: 64)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1696, line: 68, baseType: !1701)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1696, line: 63, size: 320, elements: !1702)
!1702 = !{!1703, !1705, !1706, !1707}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1701, file: !1696, line: 64, baseType: !1704, size: 64)
!1704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1701, file: !1696, line: 65, baseType: !1704, size: 64, offset: 64)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1701, file: !1696, line: 66, baseType: !7, size: 32, offset: 128)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1701, file: !1696, line: 67, baseType: !1708, size: 128, offset: 192)
!1708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1709, size: 128, elements: !1710)
!1709 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1696, line: 29, baseType: !1521)
!1710 = !{!1711}
!1711 = !DISubrange(count: 2)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1695, file: !1696, line: 77, baseType: !1699, size: 64, offset: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1695, file: !1696, line: 78, baseType: !7, size: 32, offset: 128)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1695, file: !1696, line: 79, baseType: !1715, size: 64, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1696, line: 49, baseType: !1717)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1696, line: 45, size: 832, elements: !1718)
!1718 = !{!1719, !1720, !1721}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1717, file: !1696, line: 46, baseType: !1704, size: 64)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1717, file: !1696, line: 47, baseType: !1694, size: 64, offset: 64)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1717, file: !1696, line: 48, baseType: !1722, size: 704, offset: 128)
!1722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1723, line: 164, size: 704, elements: !1724)
!1723 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1724 = !{!1725, !1726, !1736, !1737, !1738, !1739, !1740, !1741, !1745, !1749, !1750, !1751, !1752}
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1722, file: !1723, line: 166, baseType: !1523, size: 64)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1722, file: !1723, line: 167, baseType: !1727, size: 64, offset: 64)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1723, line: 157, size: 192, elements: !1729)
!1729 = !{!1730, !1731, !1732}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1728, file: !1723, line: 159, baseType: !1463, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1728, file: !1723, line: 160, baseType: !1727, size: 64, offset: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1728, file: !1723, line: 161, baseType: !1733, size: 32, offset: 128)
!1733 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1464, size: 32, elements: !1734)
!1734 = !{!1735}
!1735 = !DISubrange(count: 4)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1722, file: !1723, line: 168, baseType: !1463, size: 64, offset: 128)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1722, file: !1723, line: 169, baseType: !1463, size: 64, offset: 192)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1722, file: !1723, line: 170, baseType: !1463, size: 64, offset: 256)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1722, file: !1723, line: 171, baseType: !1523, size: 64, offset: 320)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1722, file: !1723, line: 172, baseType: !1461, size: 32, offset: 384)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1722, file: !1723, line: 176, baseType: !1742, size: 64, offset: 448)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = !DISubroutineType(types: !1744)
!1744 = !{!1727, !1465, !1523}
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1722, file: !1723, line: 177, baseType: !1746, size: 64, offset: 512)
!1746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1747, size: 64)
!1747 = !DISubroutineType(types: !1748)
!1748 = !{null, !1465, !1727}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1722, file: !1723, line: 178, baseType: !1465, size: 64, offset: 576)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1722, file: !1723, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1722, file: !1723, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1722, file: !1723, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !1663, file: !1645, line: 177, baseType: !1468, size: 64)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !1663, file: !1645, line: 178, baseType: !1755, size: 64)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1756, size: 64)
!1756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !337, line: 217, size: 832, elements: !1757)
!1757 = !{!1758, !2004, !2005, !2006, !2009, !2013, !2014, !2015, !2033, !2034, !2035, !2036, !2037, !2038}
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1756, file: !337, line: 219, baseType: !1759, size: 64)
!1759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1760, size: 64)
!1760 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !337, line: 151, baseType: !1761)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !337, line: 151, size: 128, elements: !1762)
!1762 = !{!1763}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1761, file: !337, line: 151, baseType: !1764, size: 128)
!1764 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !337, line: 150, baseType: !1765)
!1765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !337, line: 150, size: 128, elements: !1766)
!1766 = !{!1767, !1768, !1769}
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1765, file: !337, line: 150, baseType: !7, size: 32)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1765, file: !337, line: 150, baseType: !7, size: 32, offset: 32)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1765, file: !337, line: 150, baseType: !1770, size: 64, offset: 64)
!1770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1771, size: 64, elements: !1566)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !1449, line: 108, baseType: !1772)
!1772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!1773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !337, line: 122, size: 512, elements: !1774)
!1774 = !{!1775, !1776, !1777, !1996, !1997, !1998, !1999, !2000, !2001, !2002}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1773, file: !337, line: 124, baseType: !1755, size: 64)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1773, file: !337, line: 125, baseType: !1755, size: 64, offset: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1773, file: !337, line: 131, baseType: !1778, size: 64, offset: 128)
!1778 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !337, line: 128, size: 64, elements: !1779)
!1779 = !{!1780, !1995}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1778, file: !337, line: 129, baseType: !1781, size: 64)
!1781 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !1449, line: 66, baseType: !1782)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !652, line: 143, size: 192, elements: !1784)
!1784 = !{!1785, !1993, !1994}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1783, file: !652, line: 145, baseType: !1786, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !1449, line: 69, baseType: !1787)
!1787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1788, size: 64)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !652, line: 136, size: 192, elements: !1789)
!1789 = !{!1790, !1991, !1992}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1788, file: !652, line: 137, baseType: !1791, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !1449, line: 58, baseType: !1792)
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1793, size: 64)
!1793 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !652, line: 737, size: 768, elements: !1794)
!1794 = !{!1795, !1812, !1846, !1852, !1857, !1862, !1869, !1875, !1881, !1886, !1900, !1905, !1911, !1916, !1926, !1931, !1949, !1956, !1963, !1969, !1974, !1980, !1986}
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1793, file: !652, line: 738, baseType: !1796, size: 256)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !652, line: 271, size: 256, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1796, file: !652, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1796, file: !652, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1796, file: !652, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1796, file: !652, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1796, file: !652, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1796, file: !652, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1796, file: !652, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1796, file: !652, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1796, file: !652, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1796, file: !652, line: 312, baseType: !7, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1796, file: !652, line: 316, baseType: !1592, size: 32, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1796, file: !652, line: 319, baseType: !7, size: 32, offset: 96)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1796, file: !652, line: 323, baseType: !1755, size: 64, offset: 128)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1796, file: !652, line: 327, baseType: !1468, size: 64, offset: 192)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1793, file: !652, line: 739, baseType: !1813, size: 448)
!1813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !652, line: 350, size: 448, elements: !1814)
!1814 = !{!1815, !1844}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1813, file: !652, line: 353, baseType: !1816, size: 384)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !652, line: 333, size: 384, elements: !1817)
!1817 = !{!1818, !1819, !1827}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1816, file: !652, line: 336, baseType: !1796, size: 256)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1816, file: !652, line: 343, baseType: !1820, size: 64, offset: 256)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1822, line: 37, size: 128, elements: !1823)
!1822 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1823 = !{!1824, !1825}
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1821, file: !1822, line: 39, baseType: !1820, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1821, file: !1822, line: 40, baseType: !1826, size: 64, offset: 64)
!1826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1816, file: !652, line: 344, baseType: !1828, size: 64, offset: 320)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1822, line: 45, size: 320, elements: !1830)
!1830 = !{!1831, !1832}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1829, file: !1822, line: 47, baseType: !1828, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1829, file: !1822, line: 48, baseType: !1833, size: 256, offset: 64)
!1833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !1834)
!1834 = !{!1835, !1837, !1838, !1843}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1833, file: !135, line: 1884, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1833, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1833, file: !135, line: 1885, baseType: !1836, size: 64, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1833, file: !135, line: 1891, baseType: !1839, size: 64, offset: 128)
!1839 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1833, file: !135, line: 1891, size: 64, elements: !1840)
!1840 = !{!1841, !1842}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1839, file: !135, line: 1891, baseType: !1791, size: 64)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1839, file: !135, line: 1891, baseType: !1468, size: 64)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1833, file: !135, line: 1892, baseType: !1826, size: 64, offset: 192)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1813, file: !652, line: 359, baseType: !1845, size: 64, offset: 384)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1468, size: 64, elements: !1566)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1793, file: !652, line: 740, baseType: !1847, size: 512)
!1847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !652, line: 365, size: 512, elements: !1848)
!1848 = !{!1849, !1850, !1851}
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1847, file: !652, line: 368, baseType: !1816, size: 384)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1847, file: !652, line: 373, baseType: !1468, size: 64, offset: 384)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1847, file: !652, line: 374, baseType: !1468, size: 64, offset: 448)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1793, file: !652, line: 741, baseType: !1853, size: 576)
!1853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !652, line: 380, size: 576, elements: !1854)
!1854 = !{!1855, !1856}
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1853, file: !652, line: 383, baseType: !1847, size: 512)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1853, file: !652, line: 389, baseType: !1845, size: 64, offset: 512)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1793, file: !652, line: 742, baseType: !1858, size: 320)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !652, line: 395, size: 320, elements: !1859)
!1859 = !{!1860, !1861}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1858, file: !652, line: 397, baseType: !1796, size: 256)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1858, file: !652, line: 400, baseType: !1781, size: 64, offset: 256)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1793, file: !652, line: 743, baseType: !1863, size: 448)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !652, line: 406, size: 448, elements: !1864)
!1864 = !{!1865, !1866, !1867, !1868}
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1863, file: !652, line: 408, baseType: !1796, size: 256)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1863, file: !652, line: 412, baseType: !1468, size: 64, offset: 256)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1863, file: !652, line: 420, baseType: !1468, size: 64, offset: 320)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1863, file: !652, line: 423, baseType: !1781, size: 64, offset: 384)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1793, file: !652, line: 744, baseType: !1870, size: 384)
!1870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !652, line: 429, size: 384, elements: !1871)
!1871 = !{!1872, !1873, !1874}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1870, file: !652, line: 431, baseType: !1796, size: 256)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1870, file: !652, line: 434, baseType: !1468, size: 64, offset: 256)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1870, file: !652, line: 437, baseType: !1781, size: 64, offset: 320)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1793, file: !652, line: 745, baseType: !1876, size: 384)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !652, line: 443, size: 384, elements: !1877)
!1877 = !{!1878, !1879, !1880}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1876, file: !652, line: 445, baseType: !1796, size: 256)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1876, file: !652, line: 449, baseType: !1468, size: 64, offset: 256)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1876, file: !652, line: 453, baseType: !1781, size: 64, offset: 320)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1793, file: !652, line: 746, baseType: !1882, size: 320)
!1882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !652, line: 459, size: 320, elements: !1883)
!1883 = !{!1884, !1885}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1882, file: !652, line: 461, baseType: !1796, size: 256)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1882, file: !652, line: 464, baseType: !1468, size: 64, offset: 256)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1793, file: !652, line: 747, baseType: !1887, size: 768)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !652, line: 469, size: 768, elements: !1888)
!1888 = !{!1889, !1890, !1891, !1892, !1893}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1887, file: !652, line: 471, baseType: !1796, size: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1887, file: !652, line: 474, baseType: !7, size: 32, offset: 256)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1887, file: !652, line: 475, baseType: !7, size: 32, offset: 288)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1887, file: !652, line: 478, baseType: !1468, size: 64, offset: 320)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1887, file: !652, line: 481, baseType: !1894, size: 384, offset: 384)
!1894 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1895, size: 384, elements: !1566)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !1896)
!1896 = !{!1897, !1898, !1899}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1895, file: !135, line: 1920, baseType: !1833, size: 256)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1895, file: !135, line: 1921, baseType: !1468, size: 64, offset: 256)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1895, file: !135, line: 1922, baseType: !1592, size: 32, offset: 320)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1793, file: !652, line: 748, baseType: !1901, size: 320)
!1901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !652, line: 487, size: 320, elements: !1902)
!1902 = !{!1903, !1904}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1901, file: !652, line: 490, baseType: !1796, size: 256)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1901, file: !652, line: 494, baseType: !1461, size: 32, offset: 256)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1793, file: !652, line: 749, baseType: !1906, size: 384)
!1906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !652, line: 500, size: 384, elements: !1907)
!1907 = !{!1908, !1909, !1910}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1906, file: !652, line: 502, baseType: !1796, size: 256)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1906, file: !652, line: 506, baseType: !1781, size: 64, offset: 256)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1906, file: !652, line: 510, baseType: !1781, size: 64, offset: 320)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1793, file: !652, line: 750, baseType: !1912, size: 320)
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !652, line: 529, size: 320, elements: !1913)
!1913 = !{!1914, !1915}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1912, file: !652, line: 531, baseType: !1796, size: 256)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1912, file: !652, line: 540, baseType: !1781, size: 64, offset: 256)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1793, file: !652, line: 751, baseType: !1917, size: 704)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !652, line: 546, size: 704, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922, !1923, !1924, !1925}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1917, file: !652, line: 549, baseType: !1847, size: 512)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1917, file: !652, line: 553, baseType: !1466, size: 64, offset: 512)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1917, file: !652, line: 557, baseType: !1460, size: 8, offset: 576)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1917, file: !652, line: 558, baseType: !1460, size: 8, offset: 584)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1917, file: !652, line: 559, baseType: !1460, size: 8, offset: 592)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1917, file: !652, line: 560, baseType: !1460, size: 8, offset: 600)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1917, file: !652, line: 566, baseType: !1845, size: 64, offset: 640)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1793, file: !652, line: 752, baseType: !1927, size: 384)
!1927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !652, line: 571, size: 384, elements: !1928)
!1928 = !{!1929, !1930}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1927, file: !652, line: 573, baseType: !1858, size: 320)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1927, file: !652, line: 577, baseType: !1468, size: 64, offset: 320)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1793, file: !652, line: 753, baseType: !1932, size: 576)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !652, line: 600, size: 576, elements: !1933)
!1933 = !{!1934, !1935, !1936, !1939, !1948}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1932, file: !652, line: 602, baseType: !1858, size: 320)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1932, file: !652, line: 605, baseType: !1468, size: 64, offset: 320)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1932, file: !652, line: 609, baseType: !1937, size: 64, offset: 384)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1938, line: 46, baseType: !1521)
!1938 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1932, file: !652, line: 612, baseType: !1940, size: 64, offset: 448)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !652, line: 581, size: 320, elements: !1942)
!1942 = !{!1943, !1944, !1945, !1946, !1947}
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1941, file: !652, line: 583, baseType: !134, size: 32)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1941, file: !652, line: 586, baseType: !1468, size: 64, offset: 64)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1941, file: !652, line: 589, baseType: !1468, size: 64, offset: 128)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1941, file: !652, line: 592, baseType: !1468, size: 64, offset: 192)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1941, file: !652, line: 595, baseType: !1468, size: 64, offset: 256)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1932, file: !652, line: 616, baseType: !1781, size: 64, offset: 512)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1793, file: !652, line: 754, baseType: !1950, size: 512)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !652, line: 622, size: 512, elements: !1951)
!1951 = !{!1952, !1953, !1954, !1955}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1950, file: !652, line: 624, baseType: !1858, size: 320)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1950, file: !652, line: 628, baseType: !1468, size: 64, offset: 320)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1950, file: !652, line: 632, baseType: !1468, size: 64, offset: 384)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1950, file: !652, line: 636, baseType: !1468, size: 64, offset: 448)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1793, file: !652, line: 755, baseType: !1957, size: 704)
!1957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !652, line: 642, size: 704, elements: !1958)
!1958 = !{!1959, !1960, !1961, !1962}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1957, file: !652, line: 644, baseType: !1950, size: 512)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1957, file: !652, line: 648, baseType: !1468, size: 64, offset: 512)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1957, file: !652, line: 652, baseType: !1468, size: 64, offset: 576)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1957, file: !652, line: 653, baseType: !1468, size: 64, offset: 640)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1793, file: !652, line: 756, baseType: !1964, size: 448)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !652, line: 663, size: 448, elements: !1965)
!1965 = !{!1966, !1967, !1968}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1964, file: !652, line: 665, baseType: !1858, size: 320)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1964, file: !652, line: 668, baseType: !1468, size: 64, offset: 320)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1964, file: !652, line: 673, baseType: !1468, size: 64, offset: 384)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1793, file: !652, line: 757, baseType: !1970, size: 384)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !652, line: 694, size: 384, elements: !1971)
!1971 = !{!1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1970, file: !652, line: 696, baseType: !1858, size: 320)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1970, file: !652, line: 699, baseType: !1468, size: 64, offset: 320)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1793, file: !652, line: 758, baseType: !1975, size: 384)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !652, line: 681, size: 384, elements: !1976)
!1976 = !{!1977, !1978, !1979}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1975, file: !652, line: 683, baseType: !1796, size: 256)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1975, file: !652, line: 686, baseType: !1468, size: 64, offset: 256)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1975, file: !652, line: 689, baseType: !1468, size: 64, offset: 320)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1793, file: !652, line: 759, baseType: !1981, size: 384)
!1981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !652, line: 707, size: 384, elements: !1982)
!1982 = !{!1983, !1984, !1985}
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1981, file: !652, line: 709, baseType: !1796, size: 256)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1981, file: !652, line: 712, baseType: !1468, size: 64, offset: 256)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1981, file: !652, line: 712, baseType: !1468, size: 64, offset: 320)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1793, file: !652, line: 760, baseType: !1987, size: 320)
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !652, line: 718, size: 320, elements: !1988)
!1988 = !{!1989, !1990}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1987, file: !652, line: 720, baseType: !1796, size: 256)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1987, file: !652, line: 723, baseType: !1468, size: 64, offset: 256)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1788, file: !652, line: 138, baseType: !1787, size: 64, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1788, file: !652, line: 139, baseType: !1787, size: 64, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1783, file: !652, line: 146, baseType: !1786, size: 64, offset: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1783, file: !652, line: 152, baseType: !1781, size: 64, offset: 128)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1778, file: !337, line: 130, baseType: !1642, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1773, file: !337, line: 134, baseType: !1465, size: 64, offset: 192)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1773, file: !337, line: 137, baseType: !1468, size: 64, offset: 256)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1773, file: !337, line: 138, baseType: !1592, size: 32, offset: 320)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1773, file: !337, line: 142, baseType: !7, size: 32, offset: 352)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1773, file: !337, line: 144, baseType: !1461, size: 32, offset: 384)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1773, file: !337, line: 145, baseType: !1461, size: 32, offset: 416)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1773, file: !337, line: 146, baseType: !2003, size: 64, offset: 448)
!2003 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !337, line: 119, baseType: !1523)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1756, file: !337, line: 220, baseType: !1759, size: 64, offset: 64)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1756, file: !337, line: 223, baseType: !1465, size: 64, offset: 128)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1756, file: !337, line: 226, baseType: !2007, size: 64, offset: 192)
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !337, line: 185, flags: DIFlagFwdDecl)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1756, file: !337, line: 229, baseType: !2010, size: 128, offset: 256)
!2010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2011, size: 128, elements: !1710)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !337, line: 229, flags: DIFlagFwdDecl)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1756, file: !337, line: 232, baseType: !1755, size: 64, offset: 384)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1756, file: !337, line: 233, baseType: !1755, size: 64, offset: 448)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1756, file: !337, line: 238, baseType: !2016, size: 64, offset: 512)
!2016 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !337, line: 235, size: 64, elements: !2017)
!2017 = !{!2018, !2024}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !2016, file: !337, line: 236, baseType: !2019, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2020, size: 64)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !337, line: 273, size: 128, elements: !2021)
!2021 = !{!2022, !2023}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2020, file: !337, line: 275, baseType: !1781, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !2020, file: !337, line: 278, baseType: !1781, size: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2016, file: !337, line: 237, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !337, line: 259, size: 320, elements: !2027)
!2027 = !{!2028, !2029, !2030, !2031, !2032}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !2026, file: !337, line: 261, baseType: !1642, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !2026, file: !337, line: 262, baseType: !1642, size: 64, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2026, file: !337, line: 266, baseType: !1642, size: 64, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !2026, file: !337, line: 267, baseType: !1642, size: 64, offset: 192)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2026, file: !337, line: 270, baseType: !1461, size: 32, offset: 256)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1756, file: !337, line: 241, baseType: !2003, size: 64, offset: 576)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1756, file: !337, line: 244, baseType: !1461, size: 32, offset: 640)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1756, file: !337, line: 247, baseType: !1461, size: 32, offset: 672)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1756, file: !337, line: 250, baseType: !1461, size: 32, offset: 704)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1756, file: !337, line: 253, baseType: !1461, size: 32, offset: 736)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1756, file: !337, line: 256, baseType: !1461, size: 32, offset: 768)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !1663, file: !1645, line: 179, baseType: !2040, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !1645, line: 150, baseType: !2042)
!2042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !1645, line: 142, size: 320, elements: !2043)
!2043 = !{!2044, !2045, !2046, !2047, !2050, !2051}
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2042, file: !1645, line: 144, baseType: !1468, size: 64)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2042, file: !1645, line: 145, baseType: !1642, size: 64, offset: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2042, file: !1645, line: 146, baseType: !1642, size: 64, offset: 128)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2042, file: !1645, line: 147, baseType: !2048, size: 32, offset: 192)
!2048 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !2049, line: 31, baseType: !1461)
!2049 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2042, file: !1645, line: 148, baseType: !7, size: 32, offset: 224)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !2042, file: !1645, line: 149, baseType: !1460, size: 8, offset: 256)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !1663, file: !1645, line: 180, baseType: !2053, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !1645, line: 162, baseType: !2055)
!2055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !1645, line: 159, size: 128, elements: !2056)
!2056 = !{!2057, !2058}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2055, file: !1645, line: 160, baseType: !1468, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2055, file: !1645, line: 161, baseType: !1523, size: 64, offset: 64)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !1663, file: !1645, line: 181, baseType: !2060, size: 64)
!2060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2061, size: 64)
!2061 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !1645, line: 181, flags: DIFlagFwdDecl)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !1658, file: !1645, line: 317, baseType: !2063, size: 64)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 64, elements: !1566)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !1658, file: !1645, line: 318, baseType: !2065, size: 320)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !1645, line: 188, size: 320, elements: !2066)
!2066 = !{!2067, !2069, !2126}
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2065, file: !1645, line: 190, baseType: !2068, size: 192)
!2068 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1662, size: 192, elements: !1541)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2065, file: !1645, line: 193, baseType: !2070, size: 64, offset: 192)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !1645, line: 206, size: 320, elements: !2072)
!2072 = !{!2073, !2111, !2112, !2113, !2125}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !2071, file: !1645, line: 208, baseType: !2074, size: 64)
!2074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2075, size: 64)
!2075 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !1449, line: 62, baseType: !2076)
!2076 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2077, line: 538, size: 256, elements: !2078)
!2077 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2078 = !{!2079, !2083, !2089, !2102}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2076, file: !2077, line: 539, baseType: !2080, size: 32)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !2077, line: 482, size: 32, elements: !2081)
!2081 = !{!2082}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2080, file: !2077, line: 484, baseType: !7, size: 32)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !2076, file: !2077, line: 540, baseType: !2084, size: 192)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !2077, line: 488, size: 192, elements: !2085)
!2085 = !{!2086, !2087, !2088}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2084, file: !2077, line: 489, baseType: !2080, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2084, file: !2077, line: 492, baseType: !1466, size: 64, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2084, file: !2077, line: 496, baseType: !1468, size: 64, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !2076, file: !2077, line: 541, baseType: !2090, size: 256)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !2077, line: 504, size: 256, elements: !2091)
!2091 = !{!2092, !2093, !2100, !2101}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2090, file: !2077, line: 505, baseType: !2080, size: 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2090, file: !2077, line: 509, baseType: !2094, size: 64, offset: 64)
!2094 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !2077, line: 501, baseType: !2095)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{null, !2098}
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2090, file: !2077, line: 510, baseType: !2098, size: 64, offset: 128)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2090, file: !2077, line: 513, baseType: !2074, size: 64, offset: 192)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !2076, file: !2077, line: 542, baseType: !2103, size: 128)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !2077, line: 530, size: 128, elements: !2104)
!2104 = !{!2105, !2106}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2103, file: !2077, line: 531, baseType: !2080, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2103, file: !2077, line: 534, baseType: !2107, size: 64, offset: 64)
!2107 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !2077, line: 525, baseType: !2108)
!2108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2109, size: 64)
!2109 = !DISubroutineType(types: !2110)
!2110 = !{!1460, !1468, !1466, !1521, !1521}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2071, file: !1645, line: 211, baseType: !7, size: 32, offset: 64)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2071, file: !1645, line: 214, baseType: !1523, size: 64, offset: 128)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2071, file: !1645, line: 224, baseType: !2114, size: 64, offset: 192)
!2114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2115, size: 64)
!2115 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !1645, line: 202, baseType: !2116)
!2116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !1645, line: 202, size: 128, elements: !2117)
!2117 = !{!2118}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2116, file: !1645, line: 202, baseType: !2119, size: 128)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !1645, line: 200, baseType: !2120)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !1645, line: 200, size: 128, elements: !2121)
!2121 = !{!2122, !2123, !2124}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2120, file: !1645, line: 200, baseType: !7, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2120, file: !1645, line: 200, baseType: !7, size: 32, offset: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2120, file: !1645, line: 200, baseType: !1676, size: 64, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !2071, file: !1645, line: 234, baseType: !2114, size: 64, offset: 256)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2065, file: !1645, line: 197, baseType: !1523, size: 64, offset: 256)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !1658, file: !1645, line: 319, baseType: !1530, size: 256)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1658, file: !1645, line: 320, baseType: !1549, size: 192)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !1470, file: !135, line: 3384, baseType: !2130, size: 1472)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !2131)
!2131 = !{!2132, !2153, !2154, !2155, !2156}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2130, file: !135, line: 3115, baseType: !2133, size: 1216)
!2133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !2134)
!2134 = !{!2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2133, file: !135, line: 2985, baseType: !1638, size: 960)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !2133, file: !135, line: 2986, baseType: !1468, size: 64, offset: 960)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !2133, file: !135, line: 2987, baseType: !1468, size: 64, offset: 1024)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !2133, file: !135, line: 2988, baseType: !1468, size: 64, offset: 1088)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !2133, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !2133, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !2133, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !2133, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !2133, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !2133, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !2133, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !2133, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !2133, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !2133, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !2133, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !2133, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !2133, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !2133, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !2130, file: !135, line: 3117, baseType: !1468, size: 64, offset: 1216)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !2130, file: !135, line: 3119, baseType: !1468, size: 64, offset: 1280)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !2130, file: !135, line: 3121, baseType: !1468, size: 64, offset: 1344)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !2130, file: !135, line: 3123, baseType: !1468, size: 64, offset: 1408)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !1470, file: !135, line: 3385, baseType: !2158, size: 1088)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !2159)
!2159 = !{!2160, !2161, !2162}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2158, file: !135, line: 2875, baseType: !1638, size: 960)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !2158, file: !135, line: 2876, baseType: !1642, size: 64, offset: 960)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2158, file: !135, line: 2877, baseType: !2163, size: 64, offset: 1024)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !2165, line: 172, size: 128, elements: !2166)
!2165 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2166 = !{!2167, !2168, !2169, !2170, !2171, !2172, !2173}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !2164, file: !2165, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2164, file: !2165, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !2164, file: !2165, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !2164, file: !2165, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !2164, file: !2165, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !2164, file: !2165, line: 195, baseType: !7, size: 32, offset: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !2164, file: !2165, line: 199, baseType: !1468, size: 64, offset: 64)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !1470, file: !135, line: 3386, baseType: !2133, size: 1216)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !1470, file: !135, line: 3387, baseType: !2176, size: 1280)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !2177)
!2177 = !{!2178, !2179}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2176, file: !135, line: 3094, baseType: !2133, size: 1216)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2176, file: !135, line: 3095, baseType: !2163, size: 64, offset: 1216)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !1470, file: !135, line: 3388, baseType: !2181, size: 1216)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186, !2187, !2188}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2181, file: !135, line: 2825, baseType: !1600, size: 896)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2181, file: !135, line: 2827, baseType: !1468, size: 64, offset: 896)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !2181, file: !135, line: 2828, baseType: !1468, size: 64, offset: 960)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !2181, file: !135, line: 2829, baseType: !1468, size: 64, offset: 1024)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !2181, file: !135, line: 2830, baseType: !1468, size: 64, offset: 1088)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !2181, file: !135, line: 2831, baseType: !1468, size: 64, offset: 1152)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !1470, file: !135, line: 3389, baseType: !2190, size: 1024)
!2190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !2191)
!2191 = !{!2192, !2193, !2194}
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2190, file: !135, line: 2851, baseType: !1638, size: 960)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !2190, file: !135, line: 2852, baseType: !1461, size: 32, offset: 960)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !2190, file: !135, line: 2853, baseType: !1461, size: 32, offset: 992)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !1470, file: !135, line: 3390, baseType: !2196, size: 1024)
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !2197)
!2197 = !{!2198, !2199}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2196, file: !135, line: 2858, baseType: !1638, size: 960)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !2196, file: !135, line: 2859, baseType: !2163, size: 64, offset: 960)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !1470, file: !135, line: 3391, baseType: !2201, size: 960)
!2201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !2202)
!2202 = !{!2203}
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2201, file: !135, line: 2863, baseType: !1638, size: 960)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1470, file: !135, line: 3392, baseType: !2205, size: 1472)
!2205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !2206)
!2206 = !{!2207}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2205, file: !135, line: 3305, baseType: !2130, size: 1472)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1470, file: !135, line: 3393, baseType: !2209, size: 1792)
!2209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !2210)
!2210 = !{!2211, !2212, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541}
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2209, file: !135, line: 3249, baseType: !2130, size: 1472)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2209, file: !135, line: 3251, baseType: !2213, size: 64, offset: 1472)
!2213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2214, size: 64)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !646, line: 463, size: 1152, elements: !2215)
!2215 = !{!2216, !2375, !2406, !2407, !2462, !2465, !2466, !2467, !2468, !2469, !2470, !2494, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !2214, file: !646, line: 464, baseType: !2217, size: 64)
!2217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2218, size: 64)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !330, line: 194, size: 384, elements: !2219)
!2219 = !{!2220, !2269, !2282, !2296, !2344, !2356}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !2218, file: !330, line: 197, baseType: !2221, size: 64)
!2221 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !330, line: 182, baseType: !2222)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !330, line: 116, size: 704, elements: !2224)
!2224 = !{!2225, !2226, !2227, !2228, !2229, !2230, !2257, !2266, !2267, !2268}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !2223, file: !330, line: 119, baseType: !2222, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !2223, file: !330, line: 122, baseType: !2222, size: 64, offset: 64)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !2223, file: !330, line: 123, baseType: !2222, size: 64, offset: 128)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2223, file: !330, line: 126, baseType: !1461, size: 32, offset: 192)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2223, file: !330, line: 129, baseType: !329, size: 32, offset: 224)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2223, file: !330, line: 165, baseType: !2231, size: 192, offset: 256)
!2231 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !330, line: 132, size: 192, elements: !2232)
!2232 = !{!2233, !2246, !2252}
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !2231, file: !330, line: 137, baseType: !2234, size: 128)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !330, line: 133, size: 128, elements: !2235)
!2235 = !{!2236, !2245}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !2234, file: !330, line: 135, baseType: !2237, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2238, size: 64)
!2238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !330, line: 93, size: 320, elements: !2239)
!2239 = !{!2240, !2241, !2242, !2243, !2244}
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !2238, file: !330, line: 96, baseType: !2237, size: 64)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !2238, file: !330, line: 97, baseType: !2237, size: 64, offset: 64)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2238, file: !330, line: 101, baseType: !1468, size: 64, offset: 128)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !2238, file: !330, line: 106, baseType: !1468, size: 64, offset: 192)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2238, file: !330, line: 111, baseType: !1468, size: 64, offset: 256)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !2234, file: !330, line: 136, baseType: !2237, size: 64, offset: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !2231, file: !330, line: 151, baseType: !2247, size: 192)
!2247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !330, line: 139, size: 192, elements: !2248)
!2248 = !{!2249, !2250, !2251}
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !2247, file: !330, line: 141, baseType: !1468, size: 64)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !2247, file: !330, line: 145, baseType: !1468, size: 64, offset: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2247, file: !330, line: 150, baseType: !1461, size: 32, offset: 128)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !2231, file: !330, line: 164, baseType: !2253, size: 128)
!2253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !330, line: 153, size: 128, elements: !2254)
!2254 = !{!2255, !2256}
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !2253, file: !330, line: 161, baseType: !1468, size: 64)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !2253, file: !330, line: 163, baseType: !1592, size: 32, offset: 64)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !2223, file: !330, line: 168, baseType: !2258, size: 64, offset: 448)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !330, line: 67, size: 320, elements: !2260)
!2260 = !{!2261, !2262, !2263, !2264, !2265}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !2259, file: !330, line: 70, baseType: !2258, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !2259, file: !330, line: 73, baseType: !2222, size: 64, offset: 64)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !2259, file: !330, line: 78, baseType: !1468, size: 64, offset: 128)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !2259, file: !330, line: 85, baseType: !1642, size: 64, offset: 192)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2259, file: !330, line: 88, baseType: !1461, size: 32, offset: 256)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !2223, file: !330, line: 173, baseType: !1642, size: 64, offset: 512)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !2223, file: !330, line: 173, baseType: !1642, size: 64, offset: 576)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !2223, file: !330, line: 177, baseType: !1460, size: 8, offset: 640)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !2218, file: !330, line: 200, baseType: !2270, size: 64, offset: 64)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !330, line: 185, baseType: !2272)
!2272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !330, line: 185, size: 128, elements: !2273)
!2273 = !{!2274}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2272, file: !330, line: 185, baseType: !2275, size: 128)
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !330, line: 184, baseType: !2276)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !330, line: 184, size: 128, elements: !2277)
!2277 = !{!2278, !2279, !2280}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2276, file: !330, line: 184, baseType: !7, size: 32)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2276, file: !330, line: 184, baseType: !7, size: 32, offset: 32)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2276, file: !330, line: 184, baseType: !2281, size: 64, offset: 64)
!2281 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2221, size: 64, elements: !1566)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !2218, file: !330, line: 203, baseType: !2283, size: 64, offset: 128)
!2283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2284, size: 64)
!2284 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, baseType: !2285)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, size: 128, elements: !2286)
!2286 = !{!2287}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2285, file: !330, line: 189, baseType: !2288, size: 128)
!2288 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !330, line: 188, baseType: !2289)
!2289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !330, line: 188, size: 128, elements: !2290)
!2290 = !{!2291, !2292, !2293}
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2289, file: !330, line: 188, baseType: !7, size: 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2289, file: !330, line: 188, baseType: !7, size: 32, offset: 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2289, file: !330, line: 188, baseType: !2294, size: 64, offset: 64)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2295, size: 64, elements: !1566)
!2295 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !330, line: 180, baseType: !2258)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !2218, file: !330, line: 207, baseType: !2297, size: 64, offset: 192)
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !2298, line: 144, baseType: !2299)
!2298 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2300, size: 64)
!2300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !2298, line: 100, size: 896, elements: !2301)
!2301 = !{!2302, !2308, !2313, !2318, !2320, !2321, !2322, !2323, !2324, !2325, !2330, !2332, !2333, !2338, !2343}
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !2300, file: !2298, line: 102, baseType: !2303, size: 64)
!2303 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !2298, line: 52, baseType: !2304)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{!2307, !2098}
!2307 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !2298, line: 47, baseType: !7)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !2300, file: !2298, line: 105, baseType: !2309, size: 64, offset: 64)
!2309 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !2298, line: 59, baseType: !2310)
!2310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2311, size: 64)
!2311 = !DISubroutineType(types: !2312)
!2312 = !{!1461, !2098, !2098}
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !2300, file: !2298, line: 108, baseType: !2314, size: 64, offset: 128)
!2314 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !2298, line: 63, baseType: !2315)
!2315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2316, size: 64)
!2316 = !DISubroutineType(types: !2317)
!2317 = !{null, !1465}
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2300, file: !2298, line: 111, baseType: !2319, size: 64, offset: 192)
!2319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2300, file: !2298, line: 114, baseType: !1937, size: 64, offset: 256)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !2300, file: !2298, line: 117, baseType: !1937, size: 64, offset: 320)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !2300, file: !2298, line: 120, baseType: !1937, size: 64, offset: 384)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !2300, file: !2298, line: 124, baseType: !7, size: 32, offset: 448)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2300, file: !2298, line: 128, baseType: !7, size: 32, offset: 480)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !2300, file: !2298, line: 131, baseType: !2326, size: 64, offset: 512)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !2298, line: 75, baseType: !2327)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!1465, !1937, !1937}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !2300, file: !2298, line: 132, baseType: !2331, size: 64, offset: 576)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !2298, line: 78, baseType: !2315)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !2300, file: !2298, line: 135, baseType: !1465, size: 64, offset: 640)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !2300, file: !2298, line: 136, baseType: !2334, size: 64, offset: 704)
!2334 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !2298, line: 82, baseType: !2335)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2336, size: 64)
!2336 = !DISubroutineType(types: !2337)
!2337 = !{!1465, !1465, !1937, !1937}
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !2300, file: !2298, line: 137, baseType: !2339, size: 64, offset: 768)
!2339 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !2298, line: 83, baseType: !2340)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{null, !1465, !1465}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !2300, file: !2298, line: 141, baseType: !7, size: 32, offset: 832)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !2218, file: !330, line: 211, baseType: !2345, size: 64, offset: 256)
!2345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2346, size: 64)
!2346 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !2347)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !2348)
!2348 = !{!2349}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2347, file: !135, line: 183, baseType: !2350, size: 128)
!2350 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !2351)
!2351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !2352)
!2352 = !{!2353, !2354, !2355}
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2351, file: !135, line: 182, baseType: !7, size: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2351, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2351, file: !135, line: 182, baseType: !1845, size: 64, offset: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !2218, file: !330, line: 220, baseType: !2357, size: 64, offset: 320)
!2357 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !330, line: 217, size: 64, elements: !2358)
!2358 = !{!2359, !2360}
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !2357, file: !330, line: 218, baseType: !2345, size: 64)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2357, file: !330, line: 219, baseType: !2361, size: 64)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !2363, line: 29, baseType: !2364)
!2363 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !2363, line: 29, size: 96, elements: !2365)
!2365 = !{!2366}
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2364, file: !2363, line: 29, baseType: !2367, size: 96)
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !2363, line: 27, baseType: !2368)
!2368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !2363, line: 27, size: 96, elements: !2369)
!2369 = !{!2370, !2371, !2372}
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2368, file: !2363, line: 27, baseType: !7, size: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2368, file: !2363, line: 27, baseType: !7, size: 32, offset: 32)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2368, file: !2363, line: 27, baseType: !2373, size: 8, offset: 64)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2374, size: 8, elements: !1566)
!2374 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !2363, line: 26, baseType: !1460)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !2214, file: !646, line: 467, baseType: !2376, size: 64, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !337, line: 374, size: 640, elements: !2378)
!2378 = !{!2379, !2381, !2382, !2395, !2396, !2397, !2398, !2399, !2400, !2402, !2404, !2405}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !2377, file: !337, line: 377, baseType: !2380, size: 64)
!2380 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !1449, line: 111, baseType: !1755)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !2377, file: !337, line: 378, baseType: !2380, size: 64, offset: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !2377, file: !337, line: 381, baseType: !2383, size: 64, offset: 128)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !337, line: 282, baseType: !2385)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !337, line: 282, size: 128, elements: !2386)
!2386 = !{!2387}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2385, file: !337, line: 282, baseType: !2388, size: 128)
!2388 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !337, line: 281, baseType: !2389)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !337, line: 281, size: 128, elements: !2390)
!2390 = !{!2391, !2392, !2393}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2389, file: !337, line: 281, baseType: !7, size: 32)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2389, file: !337, line: 281, baseType: !7, size: 32, offset: 32)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2389, file: !337, line: 281, baseType: !2394, size: 64, offset: 64)
!2394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2380, size: 64, elements: !1566)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !2377, file: !337, line: 384, baseType: !1461, size: 32, offset: 192)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !2377, file: !337, line: 387, baseType: !1461, size: 32, offset: 224)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !2377, file: !337, line: 390, baseType: !1461, size: 32, offset: 256)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !2377, file: !337, line: 394, baseType: !2383, size: 64, offset: 320)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !2377, file: !337, line: 396, baseType: !336, size: 32, offset: 384)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !2377, file: !337, line: 399, baseType: !2401, size: 64, offset: 416)
!2401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !1710)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !2377, file: !337, line: 402, baseType: !2403, size: 64, offset: 480)
!2403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1710)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !2377, file: !337, line: 406, baseType: !1461, size: 32, offset: 544)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !2377, file: !337, line: 409, baseType: !1461, size: 32, offset: 576)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !2214, file: !646, line: 470, baseType: !1782, size: 64, offset: 128)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !2214, file: !646, line: 473, baseType: !2408, size: 64, offset: 192)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !2165, line: 39, size: 1152, elements: !2410)
!2410 = !{!2411, !2412, !2425, !2426, !2427, !2439, !2440, !2444, !2445, !2446, !2447, !2448}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !2409, file: !2165, line: 41, baseType: !2297, size: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !2409, file: !2165, line: 48, baseType: !2413, size: 64, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !652, line: 35, baseType: !2415)
!2415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !652, line: 35, size: 128, elements: !2416)
!2416 = !{!2417}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2415, file: !652, line: 35, baseType: !2418, size: 128)
!2418 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !652, line: 33, baseType: !2419)
!2419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !652, line: 33, size: 128, elements: !2420)
!2420 = !{!2421, !2422, !2423}
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2419, file: !652, line: 33, baseType: !7, size: 32)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2419, file: !652, line: 33, baseType: !7, size: 32, offset: 32)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2419, file: !652, line: 33, baseType: !2424, size: 64, offset: 64)
!2424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1791, size: 64, elements: !1566)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !2409, file: !2165, line: 51, baseType: !2345, size: 64, offset: 128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !2409, file: !2165, line: 54, baseType: !1468, size: 64, offset: 192)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !2409, file: !2165, line: 57, baseType: !2428, size: 128, offset: 256)
!2428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !2429, line: 31, size: 128, elements: !2430)
!2429 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2430 = !{!2431, !2432, !2433, !2434, !2435, !2436, !2437}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !2428, file: !2429, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !2428, file: !2429, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !2428, file: !2429, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !2428, file: !2429, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !2428, file: !2429, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !2428, file: !2429, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2428, file: !2429, line: 56, baseType: !2438, size: 64, offset: 64)
!2438 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !1449, line: 47, baseType: !1694)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !2409, file: !2165, line: 60, baseType: !2428, size: 128, offset: 384)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !2409, file: !2165, line: 64, baseType: !2441, size: 64, offset: 512)
!2441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2442, size: 64)
!2442 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !2443, line: 33, flags: DIFlagFwdDecl)
!2443 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !2409, file: !2165, line: 67, baseType: !1468, size: 64, offset: 576)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !2409, file: !2165, line: 73, baseType: !2297, size: 64, offset: 640)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !2409, file: !2165, line: 77, baseType: !2438, size: 64, offset: 704)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !2409, file: !2165, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !2409, file: !2165, line: 82, baseType: !2449, size: 320, offset: 832)
!2449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1822, line: 62, size: 320, elements: !2450)
!2450 = !{!2451, !2457, !2458, !2459, !2460, !2461}
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !2449, file: !1822, line: 63, baseType: !2452, size: 64)
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 64)
!2453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1822, line: 56, size: 128, elements: !2454)
!2454 = !{!2455, !2456}
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2453, file: !1822, line: 57, baseType: !2452, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2453, file: !1822, line: 58, baseType: !1565, size: 8, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !2449, file: !1822, line: 64, baseType: !7, size: 32, offset: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !2449, file: !1822, line: 66, baseType: !7, size: 32, offset: 96)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !2449, file: !1822, line: 68, baseType: !1460, size: 8, offset: 128)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !2449, file: !1822, line: 70, baseType: !1820, size: 64, offset: 192)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !2449, file: !1822, line: 71, baseType: !1828, size: 64, offset: 256)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !2214, file: !646, line: 476, baseType: !2463, size: 64, offset: 256)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !646, line: 476, flags: DIFlagFwdDecl)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !2214, file: !646, line: 479, baseType: !2297, size: 64, offset: 320)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2214, file: !646, line: 484, baseType: !1468, size: 64, offset: 384)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !2214, file: !646, line: 488, baseType: !1468, size: 64, offset: 448)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !2214, file: !646, line: 493, baseType: !1468, size: 64, offset: 512)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !2214, file: !646, line: 496, baseType: !1468, size: 64, offset: 576)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !2214, file: !646, line: 501, baseType: !2471, size: 64, offset: 640)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !348, line: 2355, size: 576, elements: !2473)
!2473 = !{!2474, !2477, !2478, !2479, !2480, !2482, !2483, !2488, !2489, !2490, !2491, !2492, !2493}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !2472, file: !348, line: 2356, baseType: !2475, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2476, size: 64)
!2476 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !348, line: 2356, flags: DIFlagFwdDecl)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !2472, file: !348, line: 2357, baseType: !1466, size: 64, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !2472, file: !348, line: 2358, baseType: !1461, size: 32, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !2472, file: !348, line: 2359, baseType: !1461, size: 32, offset: 160)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !2472, file: !348, line: 2360, baseType: !2481, size: 128, offset: 192)
!2481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1461, size: 128, elements: !1734)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !2472, file: !348, line: 2364, baseType: !1461, size: 32, offset: 320)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !2472, file: !348, line: 2367, baseType: !2484, size: 128, offset: 384)
!2484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !348, line: 2349, size: 128, elements: !2485)
!2485 = !{!2486, !2487}
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2484, file: !348, line: 2351, baseType: !1642, size: 64)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2484, file: !348, line: 2352, baseType: !1523, size: 64, offset: 64)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !2472, file: !348, line: 2371, baseType: !347, size: 32, offset: 512)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !2472, file: !348, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !2472, file: !348, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !2472, file: !348, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !2472, file: !348, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !2472, file: !348, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !2214, file: !646, line: 504, baseType: !2495, size: 64, offset: 704)
!2495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2496, size: 64)
!2496 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !646, line: 504, flags: DIFlagFwdDecl)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !2214, file: !646, line: 507, baseType: !2297, size: 64, offset: 768)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !2214, file: !646, line: 510, baseType: !1461, size: 32, offset: 832)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !2214, file: !646, line: 513, baseType: !1461, size: 32, offset: 864)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !2214, file: !646, line: 516, baseType: !1592, size: 32, offset: 896)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !2214, file: !646, line: 519, baseType: !1592, size: 32, offset: 928)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !2214, file: !646, line: 522, baseType: !7, size: 32, offset: 960)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !2214, file: !646, line: 523, baseType: !7, size: 32, offset: 992)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !2214, file: !646, line: 528, baseType: !1466, size: 64, offset: 1024)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !2214, file: !646, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !2214, file: !646, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !2214, file: !646, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !2214, file: !646, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !2214, file: !646, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !2214, file: !646, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !2214, file: !646, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !2214, file: !646, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !2214, file: !646, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !2214, file: !646, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !2214, file: !646, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !2214, file: !646, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !2214, file: !646, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !2214, file: !646, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !2214, file: !646, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !2214, file: !646, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !2209, file: !135, line: 3254, baseType: !1468, size: 64, offset: 1536)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !2209, file: !135, line: 3257, baseType: !1468, size: 64, offset: 1600)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !2209, file: !135, line: 3258, baseType: !1468, size: 64, offset: 1664)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !2209, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !2209, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !2209, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !2209, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !2209, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !2209, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !2209, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !2209, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !2209, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !2209, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !2209, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !2209, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !2209, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !2209, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !2209, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !2209, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !2209, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !2209, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1470, file: !135, line: 3394, baseType: !2543, size: 1344)
!2543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !2544)
!2544 = !{!2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2543, file: !135, line: 2280, baseType: !1506, size: 192)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2543, file: !135, line: 2281, baseType: !1468, size: 64, offset: 192)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2543, file: !135, line: 2282, baseType: !1468, size: 64, offset: 256)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2543, file: !135, line: 2283, baseType: !1468, size: 64, offset: 320)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2543, file: !135, line: 2284, baseType: !1468, size: 64, offset: 384)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2543, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2543, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !2543, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !2543, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !2543, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !2543, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !2543, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2543, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !2543, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2543, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2543, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2543, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2543, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2543, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2543, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2543, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2543, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !2543, file: !135, line: 2306, baseType: !2048, size: 32, offset: 544)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !2543, file: !135, line: 2307, baseType: !1468, size: 64, offset: 576)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !2543, file: !135, line: 2308, baseType: !1468, size: 64, offset: 640)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !2543, file: !135, line: 2314, baseType: !2571, size: 64, offset: 704)
!2571 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !2572)
!2572 = !{!2573, !2574, !2575}
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2571, file: !135, line: 2310, baseType: !1461, size: 32)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2571, file: !135, line: 2311, baseType: !1466, size: 64)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !2571, file: !135, line: 2312, baseType: !2576, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2577, size: 64)
!2577 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2543, file: !135, line: 2315, baseType: !1468, size: 64, offset: 768)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !2543, file: !135, line: 2316, baseType: !1468, size: 64, offset: 832)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !2543, file: !135, line: 2317, baseType: !1468, size: 64, offset: 896)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !2543, file: !135, line: 2318, baseType: !1468, size: 64, offset: 960)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !2543, file: !135, line: 2319, baseType: !1468, size: 64, offset: 1024)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2543, file: !135, line: 2320, baseType: !1468, size: 64, offset: 1088)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2543, file: !135, line: 2321, baseType: !1468, size: 64, offset: 1152)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2543, file: !135, line: 2322, baseType: !1468, size: 64, offset: 1216)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2543, file: !135, line: 2324, baseType: !2587, size: 64, offset: 1280)
!2587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2588, size: 64)
!2588 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1470, file: !135, line: 3395, baseType: !2590, size: 320)
!2590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !2591)
!2591 = !{!2592, !2593, !2594}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2590, file: !135, line: 1470, baseType: !1506, size: 192)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !2590, file: !135, line: 1471, baseType: !1468, size: 64, offset: 192)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2590, file: !135, line: 1472, baseType: !1468, size: 64, offset: 256)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1470, file: !135, line: 3396, baseType: !2596, size: 320)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !2597)
!2597 = !{!2598, !2599, !2600}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2596, file: !135, line: 1483, baseType: !1506, size: 192)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2596, file: !135, line: 1484, baseType: !1461, size: 32, offset: 192)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2596, file: !135, line: 1485, baseType: !1845, size: 64, offset: 256)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1470, file: !135, line: 3397, baseType: !2602, size: 384)
!2602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !2603)
!2603 = !{!2604, !2605, !2606, !2607}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2602, file: !135, line: 1830, baseType: !1506, size: 192)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2602, file: !135, line: 1831, baseType: !1592, size: 32, offset: 192)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2602, file: !135, line: 1832, baseType: !1468, size: 64, offset: 256)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2602, file: !135, line: 1835, baseType: !1845, size: 64, offset: 320)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1470, file: !135, line: 3398, baseType: !2609, size: 704)
!2609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !2610)
!2610 = !{!2611, !2612, !2613, !2614, !2615, !2620}
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2609, file: !135, line: 1899, baseType: !1506, size: 192)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2609, file: !135, line: 1902, baseType: !1468, size: 64, offset: 192)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !2609, file: !135, line: 1905, baseType: !1791, size: 64, offset: 256)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2609, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !2609, file: !135, line: 1911, baseType: !2616, size: 64, offset: 384)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2617, size: 64)
!2617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !2165, line: 117, size: 128, elements: !2618)
!2618 = !{!2619}
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !2617, file: !2165, line: 120, baseType: !2428, size: 128)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !2609, file: !135, line: 1914, baseType: !1833, size: 256, offset: 448)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1470, file: !135, line: 3399, baseType: !2622, size: 704)
!2622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !2623)
!2623 = !{!2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634}
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2622, file: !135, line: 2009, baseType: !1506, size: 192)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2622, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !2622, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2622, file: !135, line: 2014, baseType: !1592, size: 32, offset: 224)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2622, file: !135, line: 2016, baseType: !1468, size: 64, offset: 256)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !2622, file: !135, line: 2017, baseType: !2345, size: 64, offset: 320)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !2622, file: !135, line: 2019, baseType: !1468, size: 64, offset: 384)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !2622, file: !135, line: 2020, baseType: !1468, size: 64, offset: 448)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2622, file: !135, line: 2021, baseType: !1468, size: 64, offset: 512)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !2622, file: !135, line: 2022, baseType: !1468, size: 64, offset: 576)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !2622, file: !135, line: 2023, baseType: !1468, size: 64, offset: 640)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1470, file: !135, line: 3400, baseType: !2636, size: 832)
!2636 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !2637)
!2637 = !{!2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647}
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2636, file: !135, line: 2431, baseType: !1506, size: 192)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2636, file: !135, line: 2433, baseType: !1468, size: 64, offset: 192)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2636, file: !135, line: 2434, baseType: !1468, size: 64, offset: 256)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !2636, file: !135, line: 2435, baseType: !1468, size: 64, offset: 320)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !2636, file: !135, line: 2436, baseType: !1468, size: 64, offset: 384)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !2636, file: !135, line: 2437, baseType: !2345, size: 64, offset: 448)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !2636, file: !135, line: 2438, baseType: !1468, size: 64, offset: 512)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !2636, file: !135, line: 2440, baseType: !1468, size: 64, offset: 576)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !2636, file: !135, line: 2441, baseType: !1468, size: 64, offset: 640)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !2636, file: !135, line: 2443, baseType: !2648, size: 128, offset: 704)
!2648 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !2649)
!2649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !2650)
!2650 = !{!2651}
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2649, file: !135, line: 182, baseType: !2350, size: 128)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !1470, file: !135, line: 3401, baseType: !2653, size: 320)
!2653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !2654)
!2654 = !{!2655, !2656, !2663}
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2653, file: !135, line: 3329, baseType: !1506, size: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2653, file: !135, line: 3330, baseType: !2657, size: 64, offset: 192)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !2659)
!2659 = !{!2660, !2661, !2662}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2658, file: !135, line: 3322, baseType: !2657, size: 64)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2658, file: !135, line: 3323, baseType: !2657, size: 64, offset: 64)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2658, file: !135, line: 3324, baseType: !1468, size: 64, offset: 128)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2653, file: !135, line: 3331, baseType: !2657, size: 64, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !1470, file: !135, line: 3402, baseType: !2665, size: 256)
!2665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !2666)
!2666 = !{!2667, !2668}
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2665, file: !135, line: 1541, baseType: !1506, size: 192)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !2665, file: !135, line: 1542, baseType: !2669, size: 64, offset: 192)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !2671)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !2672)
!2672 = !{!2673}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2671, file: !135, line: 1538, baseType: !2674, size: 192)
!2674 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !2675)
!2675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !2676)
!2676 = !{!2677, !2678, !2679}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2675, file: !135, line: 1537, baseType: !7, size: 32)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2675, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2675, file: !135, line: 1537, baseType: !2680, size: 128, offset: 64)
!2680 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2681, size: 128, elements: !1566)
!2681 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !2682)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !2683)
!2683 = !{!2684, !2685}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2682, file: !135, line: 1533, baseType: !1468, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2682, file: !135, line: 1534, baseType: !1468, size: 64, offset: 64)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !1470, file: !135, line: 3403, baseType: !2687, size: 512)
!2687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !2688)
!2688 = !{!2689, !2690, !2691, !2692, !2698, !2699, !2700}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2687, file: !135, line: 1939, baseType: !1506, size: 192)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2687, file: !135, line: 1940, baseType: !1592, size: 32, offset: 192)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2687, file: !135, line: 1941, baseType: !352, size: 32, offset: 224)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2687, file: !135, line: 1946, baseType: !2693, size: 32, offset: 256)
!2693 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !2694)
!2694 = !{!2695, !2696, !2697}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !2693, file: !135, line: 1943, baseType: !370, size: 32)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !2693, file: !135, line: 1944, baseType: !377, size: 32)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !2693, file: !135, line: 1945, baseType: !134, size: 32)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !2687, file: !135, line: 1950, baseType: !1781, size: 64, offset: 320)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !2687, file: !135, line: 1951, baseType: !1781, size: 64, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2687, file: !135, line: 1953, baseType: !1845, size: 64, offset: 448)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !1470, file: !135, line: 3404, baseType: !2702, size: 1664)
!2702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !2703)
!2703 = !{!2704, !2705}
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2702, file: !135, line: 3338, baseType: !1506, size: 192)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2702, file: !135, line: 3341, baseType: !2706, size: 1472, offset: 192)
!2706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !2707, line: 410, size: 1472, elements: !2708)
!2707 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2708 = !{!2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !2706, file: !2707, line: 412, baseType: !1461, size: 32)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !2706, file: !2707, line: 413, baseType: !1461, size: 32, offset: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !2706, file: !2707, line: 414, baseType: !1461, size: 32, offset: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !2706, file: !2707, line: 415, baseType: !1461, size: 32, offset: 96)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !2706, file: !2707, line: 416, baseType: !1461, size: 32, offset: 128)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !2706, file: !2707, line: 417, baseType: !1461, size: 32, offset: 160)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !2706, file: !2707, line: 418, baseType: !1460, size: 8, offset: 192)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !2706, file: !2707, line: 419, baseType: !1460, size: 8, offset: 200)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !2706, file: !2707, line: 420, baseType: !2718, size: 8, offset: 208)
!2718 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !2706, file: !2707, line: 421, baseType: !2718, size: 8, offset: 216)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !2706, file: !2707, line: 422, baseType: !2718, size: 8, offset: 224)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !2706, file: !2707, line: 423, baseType: !2718, size: 8, offset: 232)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !2706, file: !2707, line: 424, baseType: !2718, size: 8, offset: 240)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !2706, file: !2707, line: 425, baseType: !2718, size: 8, offset: 248)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !2706, file: !2707, line: 426, baseType: !2718, size: 8, offset: 256)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !2706, file: !2707, line: 427, baseType: !2718, size: 8, offset: 264)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !2706, file: !2707, line: 428, baseType: !2718, size: 8, offset: 272)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !2706, file: !2707, line: 429, baseType: !2718, size: 8, offset: 280)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !2706, file: !2707, line: 430, baseType: !2718, size: 8, offset: 288)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !2706, file: !2707, line: 431, baseType: !2718, size: 8, offset: 296)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !2706, file: !2707, line: 432, baseType: !2718, size: 8, offset: 304)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !2706, file: !2707, line: 433, baseType: !2718, size: 8, offset: 312)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !2706, file: !2707, line: 434, baseType: !2718, size: 8, offset: 320)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !2706, file: !2707, line: 435, baseType: !2718, size: 8, offset: 328)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !2706, file: !2707, line: 436, baseType: !2718, size: 8, offset: 336)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !2706, file: !2707, line: 437, baseType: !2718, size: 8, offset: 344)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !2706, file: !2707, line: 438, baseType: !2718, size: 8, offset: 352)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !2706, file: !2707, line: 439, baseType: !2718, size: 8, offset: 360)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !2706, file: !2707, line: 440, baseType: !2718, size: 8, offset: 368)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !2706, file: !2707, line: 441, baseType: !2718, size: 8, offset: 376)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !2706, file: !2707, line: 442, baseType: !2718, size: 8, offset: 384)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !2706, file: !2707, line: 443, baseType: !2718, size: 8, offset: 392)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !2706, file: !2707, line: 444, baseType: !2718, size: 8, offset: 400)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !2706, file: !2707, line: 445, baseType: !2718, size: 8, offset: 408)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !2706, file: !2707, line: 446, baseType: !2718, size: 8, offset: 416)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !2706, file: !2707, line: 447, baseType: !2718, size: 8, offset: 424)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !2706, file: !2707, line: 448, baseType: !2718, size: 8, offset: 432)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !2706, file: !2707, line: 449, baseType: !2718, size: 8, offset: 440)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !2706, file: !2707, line: 450, baseType: !2718, size: 8, offset: 448)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !2706, file: !2707, line: 451, baseType: !2718, size: 8, offset: 456)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !2706, file: !2707, line: 452, baseType: !2718, size: 8, offset: 464)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !2706, file: !2707, line: 453, baseType: !2718, size: 8, offset: 472)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !2706, file: !2707, line: 454, baseType: !2718, size: 8, offset: 480)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !2706, file: !2707, line: 455, baseType: !2718, size: 8, offset: 488)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !2706, file: !2707, line: 456, baseType: !2718, size: 8, offset: 496)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !2706, file: !2707, line: 457, baseType: !2718, size: 8, offset: 504)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !2706, file: !2707, line: 458, baseType: !2718, size: 8, offset: 512)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !2706, file: !2707, line: 459, baseType: !2718, size: 8, offset: 520)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !2706, file: !2707, line: 460, baseType: !2718, size: 8, offset: 528)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !2706, file: !2707, line: 461, baseType: !2718, size: 8, offset: 536)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !2706, file: !2707, line: 462, baseType: !2718, size: 8, offset: 544)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !2706, file: !2707, line: 463, baseType: !2718, size: 8, offset: 552)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !2706, file: !2707, line: 464, baseType: !2718, size: 8, offset: 560)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !2706, file: !2707, line: 465, baseType: !2718, size: 8, offset: 568)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !2706, file: !2707, line: 466, baseType: !2718, size: 8, offset: 576)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !2706, file: !2707, line: 467, baseType: !2718, size: 8, offset: 584)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !2706, file: !2707, line: 468, baseType: !2718, size: 8, offset: 592)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !2706, file: !2707, line: 469, baseType: !2718, size: 8, offset: 600)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !2706, file: !2707, line: 470, baseType: !2718, size: 8, offset: 608)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !2706, file: !2707, line: 471, baseType: !2718, size: 8, offset: 616)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !2706, file: !2707, line: 472, baseType: !2718, size: 8, offset: 624)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !2706, file: !2707, line: 473, baseType: !2718, size: 8, offset: 632)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !2706, file: !2707, line: 474, baseType: !2718, size: 8, offset: 640)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !2706, file: !2707, line: 475, baseType: !2718, size: 8, offset: 648)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !2706, file: !2707, line: 476, baseType: !2718, size: 8, offset: 656)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !2706, file: !2707, line: 477, baseType: !2718, size: 8, offset: 664)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !2706, file: !2707, line: 478, baseType: !2718, size: 8, offset: 672)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !2706, file: !2707, line: 479, baseType: !2718, size: 8, offset: 680)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !2706, file: !2707, line: 480, baseType: !2718, size: 8, offset: 688)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !2706, file: !2707, line: 481, baseType: !2718, size: 8, offset: 696)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !2706, file: !2707, line: 482, baseType: !2718, size: 8, offset: 704)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !2706, file: !2707, line: 483, baseType: !2718, size: 8, offset: 712)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !2706, file: !2707, line: 484, baseType: !2718, size: 8, offset: 720)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !2706, file: !2707, line: 485, baseType: !2718, size: 8, offset: 728)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !2706, file: !2707, line: 486, baseType: !2718, size: 8, offset: 736)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !2706, file: !2707, line: 487, baseType: !2718, size: 8, offset: 744)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !2706, file: !2707, line: 488, baseType: !2718, size: 8, offset: 752)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !2706, file: !2707, line: 489, baseType: !2718, size: 8, offset: 760)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !2706, file: !2707, line: 490, baseType: !2718, size: 8, offset: 768)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !2706, file: !2707, line: 491, baseType: !2718, size: 8, offset: 776)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !2706, file: !2707, line: 492, baseType: !2718, size: 8, offset: 784)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !2706, file: !2707, line: 493, baseType: !2718, size: 8, offset: 792)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !2706, file: !2707, line: 494, baseType: !2718, size: 8, offset: 800)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !2706, file: !2707, line: 495, baseType: !2718, size: 8, offset: 808)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !2706, file: !2707, line: 496, baseType: !2718, size: 8, offset: 816)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !2706, file: !2707, line: 497, baseType: !2718, size: 8, offset: 824)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !2706, file: !2707, line: 498, baseType: !2718, size: 8, offset: 832)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !2706, file: !2707, line: 499, baseType: !2718, size: 8, offset: 840)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !2706, file: !2707, line: 500, baseType: !2718, size: 8, offset: 848)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !2706, file: !2707, line: 501, baseType: !2718, size: 8, offset: 856)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !2706, file: !2707, line: 502, baseType: !2718, size: 8, offset: 864)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !2706, file: !2707, line: 503, baseType: !2718, size: 8, offset: 872)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !2706, file: !2707, line: 504, baseType: !2718, size: 8, offset: 880)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !2706, file: !2707, line: 505, baseType: !2718, size: 8, offset: 888)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !2706, file: !2707, line: 506, baseType: !2718, size: 8, offset: 896)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !2706, file: !2707, line: 507, baseType: !2718, size: 8, offset: 904)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !2706, file: !2707, line: 508, baseType: !2718, size: 8, offset: 912)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !2706, file: !2707, line: 509, baseType: !2718, size: 8, offset: 920)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !2706, file: !2707, line: 510, baseType: !2718, size: 8, offset: 928)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !2706, file: !2707, line: 511, baseType: !2718, size: 8, offset: 936)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !2706, file: !2707, line: 512, baseType: !2718, size: 8, offset: 944)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !2706, file: !2707, line: 513, baseType: !2718, size: 8, offset: 952)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !2706, file: !2707, line: 514, baseType: !2718, size: 8, offset: 960)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !2706, file: !2707, line: 515, baseType: !2718, size: 8, offset: 968)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !2706, file: !2707, line: 516, baseType: !2718, size: 8, offset: 976)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !2706, file: !2707, line: 517, baseType: !2718, size: 8, offset: 984)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !2706, file: !2707, line: 518, baseType: !2718, size: 8, offset: 992)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !2706, file: !2707, line: 519, baseType: !2718, size: 8, offset: 1000)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !2706, file: !2707, line: 520, baseType: !2718, size: 8, offset: 1008)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !2706, file: !2707, line: 521, baseType: !2718, size: 8, offset: 1016)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !2706, file: !2707, line: 522, baseType: !2718, size: 8, offset: 1024)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !2706, file: !2707, line: 523, baseType: !2718, size: 8, offset: 1032)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !2706, file: !2707, line: 524, baseType: !2718, size: 8, offset: 1040)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !2706, file: !2707, line: 525, baseType: !2718, size: 8, offset: 1048)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !2706, file: !2707, line: 526, baseType: !2718, size: 8, offset: 1056)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !2706, file: !2707, line: 527, baseType: !2718, size: 8, offset: 1064)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !2706, file: !2707, line: 528, baseType: !2718, size: 8, offset: 1072)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !2706, file: !2707, line: 529, baseType: !2718, size: 8, offset: 1080)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !2706, file: !2707, line: 530, baseType: !2718, size: 8, offset: 1088)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !2706, file: !2707, line: 531, baseType: !2718, size: 8, offset: 1096)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !2706, file: !2707, line: 532, baseType: !2718, size: 8, offset: 1104)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !2706, file: !2707, line: 533, baseType: !2718, size: 8, offset: 1112)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !2706, file: !2707, line: 534, baseType: !2718, size: 8, offset: 1120)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !2706, file: !2707, line: 535, baseType: !2718, size: 8, offset: 1128)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !2706, file: !2707, line: 536, baseType: !2718, size: 8, offset: 1136)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !2706, file: !2707, line: 537, baseType: !2718, size: 8, offset: 1144)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !2706, file: !2707, line: 538, baseType: !2718, size: 8, offset: 1152)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !2706, file: !2707, line: 539, baseType: !2718, size: 8, offset: 1160)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !2706, file: !2707, line: 540, baseType: !2718, size: 8, offset: 1168)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !2706, file: !2707, line: 541, baseType: !2718, size: 8, offset: 1176)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !2706, file: !2707, line: 542, baseType: !2718, size: 8, offset: 1184)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !2706, file: !2707, line: 543, baseType: !2718, size: 8, offset: 1192)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !2706, file: !2707, line: 544, baseType: !2718, size: 8, offset: 1200)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !2706, file: !2707, line: 545, baseType: !2718, size: 8, offset: 1208)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !2706, file: !2707, line: 546, baseType: !2718, size: 8, offset: 1216)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !2706, file: !2707, line: 547, baseType: !2718, size: 8, offset: 1224)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !2706, file: !2707, line: 548, baseType: !2718, size: 8, offset: 1232)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !2706, file: !2707, line: 549, baseType: !2718, size: 8, offset: 1240)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !2706, file: !2707, line: 550, baseType: !2718, size: 8, offset: 1248)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !2706, file: !2707, line: 551, baseType: !2718, size: 8, offset: 1256)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !2706, file: !2707, line: 552, baseType: !2718, size: 8, offset: 1264)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !2706, file: !2707, line: 553, baseType: !2718, size: 8, offset: 1272)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !2706, file: !2707, line: 554, baseType: !2718, size: 8, offset: 1280)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !2706, file: !2707, line: 555, baseType: !2718, size: 8, offset: 1288)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !2706, file: !2707, line: 556, baseType: !2718, size: 8, offset: 1296)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !2706, file: !2707, line: 557, baseType: !2718, size: 8, offset: 1304)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !2706, file: !2707, line: 558, baseType: !2718, size: 8, offset: 1312)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !2706, file: !2707, line: 559, baseType: !2718, size: 8, offset: 1320)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !2706, file: !2707, line: 560, baseType: !2718, size: 8, offset: 1328)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !2706, file: !2707, line: 561, baseType: !2718, size: 8, offset: 1336)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !2706, file: !2707, line: 562, baseType: !2718, size: 8, offset: 1344)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !2706, file: !2707, line: 563, baseType: !2718, size: 8, offset: 1352)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !2706, file: !2707, line: 564, baseType: !2718, size: 8, offset: 1360)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !2706, file: !2707, line: 565, baseType: !2718, size: 8, offset: 1368)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !2706, file: !2707, line: 566, baseType: !2718, size: 8, offset: 1376)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !2706, file: !2707, line: 567, baseType: !2718, size: 8, offset: 1384)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !2706, file: !2707, line: 568, baseType: !2718, size: 8, offset: 1392)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !2706, file: !2707, line: 569, baseType: !2718, size: 8, offset: 1400)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !2706, file: !2707, line: 570, baseType: !2718, size: 8, offset: 1408)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !2706, file: !2707, line: 571, baseType: !2718, size: 8, offset: 1416)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !2706, file: !2707, line: 572, baseType: !2718, size: 8, offset: 1424)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !2706, file: !2707, line: 573, baseType: !2718, size: 8, offset: 1432)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !2706, file: !2707, line: 574, baseType: !2718, size: 8, offset: 1440)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !1470, file: !135, line: 3405, baseType: !2874, size: 384)
!2874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !2875)
!2875 = !{!2876, !2877}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2874, file: !135, line: 3353, baseType: !1506, size: 192)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2874, file: !135, line: 3356, baseType: !2878, size: 192, offset: 192)
!2878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !2707, line: 578, size: 192, elements: !2879)
!2879 = !{!2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890}
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2878, file: !2707, line: 580, baseType: !1461, size: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2878, file: !2707, line: 581, baseType: !1461, size: 32, offset: 32)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2878, file: !2707, line: 582, baseType: !1461, size: 32, offset: 64)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2878, file: !2707, line: 583, baseType: !1461, size: 32, offset: 96)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2878, file: !2707, line: 584, baseType: !1460, size: 8, offset: 128)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2878, file: !2707, line: 585, baseType: !1460, size: 8, offset: 136)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2878, file: !2707, line: 586, baseType: !1460, size: 8, offset: 144)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2878, file: !2707, line: 587, baseType: !1460, size: 8, offset: 152)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2878, file: !2707, line: 588, baseType: !1460, size: 8, offset: 160)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2878, file: !2707, line: 589, baseType: !1460, size: 8, offset: 168)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2878, file: !2707, line: 590, baseType: !1460, size: 8, offset: 176)
!2891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2892, size: 64)
!2892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_in", file: !603, line: 663, size: 576, elements: !2893)
!2893 = !{!2894, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3178}
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "file_data", scope: !2892, file: !603, line: 666, baseType: !2895, size: 64)
!2895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2896, size: 64)
!2896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_file_decl_data", file: !603, line: 540, size: 512, elements: !2897)
!2897 = !{!2898, !2911, !2912, !3151, !3152, !3153, !3154, !3155}
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "current_decl_state", scope: !2896, file: !603, line: 543, baseType: !2899, size: 64)
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_in_decl_state", file: !603, line: 502, size: 960, elements: !2901)
!2901 = !{!2902, !2910}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "streams", scope: !2900, file: !603, line: 505, baseType: !2903, size: 896)
!2903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2904, size: 896, elements: !2908)
!2904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_tree_ref_table", file: !603, line: 473, size: 128, elements: !2905)
!2905 = !{!2906, !2907}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "trees", scope: !2904, file: !603, line: 476, baseType: !1826, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2904, file: !603, line: 479, baseType: !7, size: 32, offset: 64)
!2908 = !{!2909}
!2909 = !DISubrange(count: 7)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "fn_decl", scope: !2900, file: !603, line: 509, baseType: !1468, size: 64, offset: 896)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "global_decl_state", scope: !2896, file: !603, line: 547, baseType: !2899, size: 64, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "cgraph_node_encoder", scope: !2896, file: !603, line: 550, baseType: !2913, size: 64, offset: 128)
!2913 = !DIDerivedType(tag: DW_TAG_typedef, name: "lto_cgraph_encoder_t", file: !603, line: 470, baseType: !2914)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_cgraph_encoder_d", file: !603, line: 461, size: 128, elements: !2916)
!2916 = !{!2917, !2918}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !2915, file: !603, line: 464, baseType: !2441, size: 64)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !2915, file: !603, line: 467, baseType: !2919, size: 64, offset: 64)
!2919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2920, size: 64)
!2920 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_heap", file: !385, line: 271, baseType: !2921)
!2921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_heap", file: !385, line: 271, size: 128, elements: !2922)
!2922 = !{!2923}
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2921, file: !385, line: 271, baseType: !2924, size: 128)
!2924 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_base", file: !385, line: 270, baseType: !2925)
!2925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_base", file: !385, line: 270, size: 128, elements: !2926)
!2926 = !{!2927, !2928, !2929}
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2925, file: !385, line: 270, baseType: !7, size: 32)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2925, file: !385, line: 270, baseType: !7, size: 32, offset: 32)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2925, file: !385, line: 270, baseType: !2930, size: 64, offset: 64)
!2930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2931, size: 64, elements: !1566)
!2931 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_node_ptr", file: !385, line: 268, baseType: !2932)
!2932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2933, size: 64)
!2933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node", file: !385, line: 181, size: 2496, elements: !2934)
!2934 = !{!2935, !2936, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !3068, !3088, !3098, !3102, !3128, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2933, file: !385, line: 182, baseType: !1468, size: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "callees", scope: !2933, file: !385, line: 183, baseType: !2937, size: 64, offset: 64)
!2937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2938, size: 64)
!2938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_edge", file: !385, line: 314, size: 768, elements: !2939)
!2939 = !{!2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2951, !2952, !2953, !2954, !2956, !2957, !2958}
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2938, file: !385, line: 316, baseType: !2003, size: 64)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2938, file: !385, line: 317, baseType: !2932, size: 64, offset: 64)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "callee", scope: !2938, file: !385, line: 318, baseType: !2932, size: 64, offset: 128)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "prev_caller", scope: !2938, file: !385, line: 319, baseType: !2937, size: 64, offset: 192)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "next_caller", scope: !2938, file: !385, line: 320, baseType: !2937, size: 64, offset: 256)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "prev_callee", scope: !2938, file: !385, line: 321, baseType: !2937, size: 64, offset: 320)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "next_callee", scope: !2938, file: !385, line: 322, baseType: !2937, size: 64, offset: 384)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt", scope: !2938, file: !385, line: 323, baseType: !1791, size: 64, offset: 448)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2938, file: !385, line: 324, baseType: !1465, size: 64, offset: 512)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "inline_failed", scope: !2938, file: !385, line: 327, baseType: !2950, size: 32, offset: 576)
!2950 = !DIDerivedType(tag: DW_TAG_typedef, name: "cgraph_inline_failed_t", file: !385, line: 312, baseType: !384)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "lto_stmt_uid", scope: !2938, file: !385, line: 330, baseType: !7, size: 32, offset: 608)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !2938, file: !385, line: 334, baseType: !1461, size: 32, offset: 640)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2938, file: !385, line: 336, baseType: !1461, size: 32, offset: 672)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "loop_nest", scope: !2938, file: !385, line: 338, baseType: !2955, size: 16, offset: 704)
!2955 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "indirect_call", scope: !2938, file: !385, line: 340, baseType: !7, size: 1, offset: 720, flags: DIFlagBitField, extraData: i64 720)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "call_stmt_cannot_inline_p", scope: !2938, file: !385, line: 342, baseType: !7, size: 1, offset: 721, flags: DIFlagBitField, extraData: i64 720)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "can_throw_external", scope: !2938, file: !385, line: 344, baseType: !7, size: 1, offset: 722, flags: DIFlagBitField, extraData: i64 720)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "callers", scope: !2933, file: !385, line: 184, baseType: !2937, size: 64, offset: 128)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2933, file: !385, line: 185, baseType: !2932, size: 64, offset: 192)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !2933, file: !385, line: 186, baseType: !2932, size: 64, offset: 256)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !2933, file: !385, line: 188, baseType: !2932, size: 64, offset: 320)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "nested", scope: !2933, file: !385, line: 190, baseType: !2932, size: 64, offset: 384)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "next_nested", scope: !2933, file: !385, line: 192, baseType: !2932, size: 64, offset: 448)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !2933, file: !385, line: 194, baseType: !2932, size: 64, offset: 512)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "next_sibling_clone", scope: !2933, file: !385, line: 196, baseType: !2932, size: 64, offset: 576)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sibling_clone", scope: !2933, file: !385, line: 197, baseType: !2932, size: 64, offset: 640)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "clones", scope: !2933, file: !385, line: 198, baseType: !2932, size: 64, offset: 704)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "clone_of", scope: !2933, file: !385, line: 199, baseType: !2932, size: 64, offset: 768)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "same_body", scope: !2933, file: !385, line: 202, baseType: !2932, size: 64, offset: 832)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "same_comdat_group", scope: !2933, file: !385, line: 204, baseType: !2932, size: 64, offset: 896)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "call_site_hash", scope: !2933, file: !385, line: 207, baseType: !2297, size: 64, offset: 960)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !2933, file: !385, line: 209, baseType: !1465, size: 64, offset: 1024)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ipa_transforms_to_apply", scope: !2933, file: !385, line: 214, baseType: !2975, size: 64, offset: 1088)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_heap", file: !646, line: 177, baseType: !2977)
!2977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_heap", file: !646, line: 177, size: 128, elements: !2978)
!2978 = !{!2979}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2977, file: !646, line: 177, baseType: !2980, size: 128)
!2980 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_opt_pass_base", file: !646, line: 176, baseType: !2981)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_opt_pass_base", file: !646, line: 176, size: 128, elements: !2982)
!2982 = !{!2983, !2984, !2985}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2981, file: !646, line: 176, baseType: !7, size: 32)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2981, file: !646, line: 176, baseType: !7, size: 32, offset: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2981, file: !646, line: 176, baseType: !2986, size: 64, offset: 64)
!2986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2987, size: 64, elements: !1566)
!2987 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_opt_pass", file: !646, line: 174, baseType: !2988)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_opt_pass_d", file: !408, line: 173, size: 1152, elements: !2990)
!2990 = !{!2991, !3015, !3019, !3034, !3035, !3039, !3044, !3045, !3049}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2989, file: !408, line: 175, baseType: !2992, size: 640)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !408, line: 114, size: 640, elements: !2993)
!2993 = !{!2994, !2995, !2996, !3000, !3004, !3006, !3007, !3008, !3010, !3011, !3012, !3013, !3014}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2992, file: !408, line: 117, baseType: !407, size: 32)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2992, file: !408, line: 121, baseType: !1466, size: 64, offset: 64)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2992, file: !408, line: 125, baseType: !2997, size: 64, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DISubroutineType(types: !2999)
!2999 = !{!1460}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2992, file: !408, line: 130, baseType: !3001, size: 64, offset: 192)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DISubroutineType(types: !3003)
!3003 = !{!7}
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2992, file: !408, line: 133, baseType: !3005, size: 64, offset: 256)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2992, size: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2992, file: !408, line: 136, baseType: !3005, size: 64, offset: 320)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2992, file: !408, line: 139, baseType: !1461, size: 32, offset: 384)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2992, file: !408, line: 143, baseType: !3009, size: 32, offset: 416)
!3009 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !415, line: 80, baseType: !414)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2992, file: !408, line: 146, baseType: !7, size: 32, offset: 448)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2992, file: !408, line: 147, baseType: !7, size: 32, offset: 480)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2992, file: !408, line: 148, baseType: !7, size: 32, offset: 512)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2992, file: !408, line: 151, baseType: !7, size: 32, offset: 544)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2992, file: !408, line: 152, baseType: !7, size: 32, offset: 576)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "generate_summary", scope: !2989, file: !408, line: 179, baseType: !3016, size: 64, offset: 640)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DISubroutineType(types: !3018)
!3018 = !{null}
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "write_summary", scope: !2989, file: !408, line: 182, baseType: !3020, size: 64, offset: 704)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DISubroutineType(types: !3022)
!3022 = !{null, !3023}
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_node_set_def", file: !385, line: 276, size: 192, elements: !3025)
!3025 = !{!3026, !3027, !3033}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "hashtab", scope: !3024, file: !385, line: 278, baseType: !2297, size: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !3024, file: !385, line: 279, baseType: !3028, size: 64, offset: 64)
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_cgraph_node_ptr_gc", file: !385, line: 272, baseType: !3030)
!3030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_cgraph_node_ptr_gc", file: !385, line: 272, size: 128, elements: !3031)
!3031 = !{!3032}
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3030, file: !385, line: 272, baseType: !2924, size: 128)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3024, file: !385, line: 280, baseType: !1465, size: 64, offset: 128)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "read_summary", scope: !2989, file: !408, line: 187, baseType: !3016, size: 64, offset: 768)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "function_read_summary", scope: !2989, file: !408, line: 188, baseType: !3036, size: 64, offset: 832)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{null, !2932}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_fixup", scope: !2989, file: !408, line: 191, baseType: !3040, size: 64, offset: 896)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{null, !2932, !3043}
!3043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform_todo_flags_start", scope: !2989, file: !408, line: 195, baseType: !7, size: 32, offset: 960)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "function_transform", scope: !2989, file: !408, line: 196, baseType: !3046, size: 64, offset: 1024)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = !DISubroutineType(types: !3048)
!3048 = !{!7, !2932}
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "variable_transform", scope: !2989, file: !408, line: 197, baseType: !3050, size: 64, offset: 1088)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = !DISubroutineType(types: !3052)
!3052 = !{null, !3053}
!3053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3054, size: 64)
!3054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "varpool_node", file: !385, line: 358, size: 320, elements: !3055)
!3055 = !{!3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067}
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3054, file: !385, line: 359, baseType: !1468, size: 64)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3054, file: !385, line: 361, baseType: !3053, size: 64, offset: 64)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "next_needed", scope: !3054, file: !385, line: 363, baseType: !3053, size: 64, offset: 128)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "extra_name", scope: !3054, file: !385, line: 366, baseType: !3053, size: 64, offset: 192)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !3054, file: !385, line: 368, baseType: !1461, size: 32, offset: 256)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !3054, file: !385, line: 372, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "force_output", scope: !3054, file: !385, line: 375, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !3054, file: !385, line: 378, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !3054, file: !385, line: 380, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !3054, file: !385, line: 382, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !3054, file: !385, line: 384, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3054, file: !385, line: 387, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !2933, file: !385, line: 216, baseType: !3069, size: 320, offset: 1152)
!3069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_local_info", file: !385, line: 88, size: 320, elements: !3070)
!3070 = !{!3071, !3072, !3080, !3081, !3082, !3083, !3084, !3085, !3086, !3087}
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "lto_file_data", scope: !3069, file: !385, line: 90, baseType: !2895, size: 64)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "inline_summary", scope: !3069, file: !385, line: 92, baseType: !3073, size: 192, offset: 64)
!3073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inline_summary", file: !385, line: 57, size: 192, elements: !3074)
!3074 = !{!3075, !3076, !3077, !3078, !3079}
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_self_stack_size", scope: !3073, file: !385, line: 60, baseType: !1523, size: 64)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "self_size", scope: !3073, file: !385, line: 63, baseType: !1461, size: 32, offset: 64)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "size_inlining_benefit", scope: !3073, file: !385, line: 65, baseType: !1461, size: 32, offset: 96)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "self_time", scope: !3073, file: !385, line: 67, baseType: !1461, size: 32, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "time_inlining_benefit", scope: !3073, file: !385, line: 69, baseType: !1461, size: 32, offset: 160)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !3069, file: !385, line: 96, baseType: !7, size: 1, offset: 256, flags: DIFlagBitField, extraData: i64 256)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "externally_visible", scope: !3069, file: !385, line: 99, baseType: !7, size: 1, offset: 257, flags: DIFlagBitField, extraData: i64 256)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "finalized", scope: !3069, file: !385, line: 102, baseType: !7, size: 1, offset: 258, flags: DIFlagBitField, extraData: i64 256)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "inlinable", scope: !3069, file: !385, line: 105, baseType: !7, size: 1, offset: 259, flags: DIFlagBitField, extraData: i64 256)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !3069, file: !385, line: 108, baseType: !7, size: 1, offset: 260, flags: DIFlagBitField, extraData: i64 256)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "redefined_extern_inline", scope: !3069, file: !385, line: 112, baseType: !7, size: 1, offset: 261, flags: DIFlagBitField, extraData: i64 256)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "for_functions_valid", scope: !3069, file: !385, line: 116, baseType: !7, size: 1, offset: 262, flags: DIFlagBitField, extraData: i64 256)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_method", scope: !3069, file: !385, line: 120, baseType: !7, size: 1, offset: 263, flags: DIFlagBitField, extraData: i64 256)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !2933, file: !385, line: 217, baseType: !3089, size: 320, offset: 1472)
!3089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_global_info", file: !385, line: 126, size: 320, elements: !3090)
!3090 = !{!3091, !3092, !3093, !3094, !3095, !3096, !3097}
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_stack_size", scope: !3089, file: !385, line: 128, baseType: !1523, size: 64)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "stack_frame_offset", scope: !3089, file: !385, line: 130, baseType: !1523, size: 64, offset: 64)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "inlined_to", scope: !3089, file: !385, line: 134, baseType: !2932, size: 64, offset: 128)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !3089, file: !385, line: 137, baseType: !1461, size: 32, offset: 192)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3089, file: !385, line: 138, baseType: !1461, size: 32, offset: 224)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "estimated_growth", scope: !3089, file: !385, line: 141, baseType: !1461, size: 32, offset: 256)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "inlined", scope: !3089, file: !385, line: 144, baseType: !1460, size: 8, offset: 288)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !2933, file: !385, line: 218, baseType: !3099, size: 32, offset: 1792)
!3099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_rtl_info", file: !385, line: 150, size: 32, elements: !3100)
!3100 = !{!3101}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_incoming_stack_boundary", scope: !3099, file: !385, line: 151, baseType: !7, size: 32)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2933, file: !385, line: 219, baseType: !3103, size: 192, offset: 1856)
!3103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_clone_info", file: !385, line: 171, size: 192, elements: !3104)
!3104 = !{!3105, !3126, !3127}
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "tree_map", scope: !3103, file: !385, line: 173, baseType: !3106, size: 64)
!3106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3107, size: 64)
!3107 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_gc", file: !385, line: 169, baseType: !3108)
!3108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_gc", file: !385, line: 169, size: 128, elements: !3109)
!3109 = !{!3110}
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3108, file: !385, line: 169, baseType: !3111, size: 128)
!3111 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ipa_replace_map_p_base", file: !385, line: 168, baseType: !3112)
!3112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ipa_replace_map_p_base", file: !385, line: 168, size: 128, elements: !3113)
!3113 = !{!3114, !3115, !3116}
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3112, file: !385, line: 168, baseType: !7, size: 32)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3112, file: !385, line: 168, baseType: !7, size: 32, offset: 32)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3112, file: !385, line: 168, baseType: !3117, size: 64, offset: 64)
!3117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3118, size: 64, elements: !1566)
!3118 = !DIDerivedType(tag: DW_TAG_typedef, name: "ipa_replace_map_p", file: !385, line: 167, baseType: !3119)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipa_replace_map", file: !385, line: 156, size: 192, elements: !3121)
!3121 = !{!3122, !3123, !3124, !3125}
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "old_tree", scope: !3120, file: !385, line: 159, baseType: !1468, size: 64)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "new_tree", scope: !3120, file: !385, line: 161, baseType: !1468, size: 64, offset: 64)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "replace_p", scope: !3120, file: !385, line: 163, baseType: !1460, size: 8, offset: 128)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "ref_p", scope: !3120, file: !385, line: 165, baseType: !1460, size: 8, offset: 136)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "args_to_skip", scope: !3103, file: !385, line: 174, baseType: !2438, size: 64, offset: 64)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "combined_args_to_skip", scope: !3103, file: !385, line: 175, baseType: !2438, size: 64, offset: 128)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "thunk", scope: !2933, file: !385, line: 220, baseType: !3129, size: 256, offset: 2048)
!3129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgraph_thunk_info", file: !385, line: 74, size: 256, elements: !3130)
!3130 = !{!3131, !3132, !3133, !3134, !3135, !3136}
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_offset", scope: !3129, file: !385, line: 76, baseType: !1523, size: 64)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_value", scope: !3129, file: !385, line: 77, baseType: !1523, size: 64, offset: 64)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3129, file: !385, line: 78, baseType: !1468, size: 64, offset: 128)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "this_adjusting", scope: !3129, file: !385, line: 79, baseType: !1460, size: 8, offset: 192)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_offset_p", scope: !3129, file: !385, line: 80, baseType: !1460, size: 8, offset: 200)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "thunk_p", scope: !3129, file: !385, line: 82, baseType: !1460, size: 8, offset: 208)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2933, file: !385, line: 223, baseType: !2003, size: 64, offset: 2304)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2933, file: !385, line: 225, baseType: !1461, size: 32, offset: 2368)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "order", scope: !2933, file: !385, line: 227, baseType: !1461, size: 32, offset: 2400)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !2933, file: !385, line: 231, baseType: !1461, size: 32, offset: 2432)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "needed", scope: !2933, file: !385, line: 238, baseType: !7, size: 1, offset: 2464, flags: DIFlagBitField, extraData: i64 2464)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "address_taken", scope: !2933, file: !385, line: 241, baseType: !7, size: 1, offset: 2465, flags: DIFlagBitField, extraData: i64 2464)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_and_needed", scope: !2933, file: !385, line: 244, baseType: !7, size: 1, offset: 2466, flags: DIFlagBitField, extraData: i64 2464)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "reachable", scope: !2933, file: !385, line: 251, baseType: !7, size: 1, offset: 2467, flags: DIFlagBitField, extraData: i64 2464)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "lowered", scope: !2933, file: !385, line: 253, baseType: !7, size: 1, offset: 2468, flags: DIFlagBitField, extraData: i64 2464)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "analyzed", scope: !2933, file: !385, line: 256, baseType: !7, size: 1, offset: 2469, flags: DIFlagBitField, extraData: i64 2464)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "process", scope: !2933, file: !385, line: 258, baseType: !7, size: 1, offset: 2470, flags: DIFlagBitField, extraData: i64 2464)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2933, file: !385, line: 260, baseType: !7, size: 1, offset: 2471, flags: DIFlagBitField, extraData: i64 2464)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "finalized_by_frontend", scope: !2933, file: !385, line: 262, baseType: !7, size: 1, offset: 2472, flags: DIFlagBitField, extraData: i64 2464)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "same_body_alias", scope: !2933, file: !385, line: 265, baseType: !7, size: 1, offset: 2473, flags: DIFlagBitField, extraData: i64 2464)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl_states", scope: !2896, file: !603, line: 553, baseType: !2297, size: 64, offset: 192)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !2896, file: !603, line: 556, baseType: !1466, size: 64, offset: 256)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "needs_ltrans_p", scope: !2896, file: !603, line: 559, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "section_hash_table", scope: !2896, file: !603, line: 562, baseType: !2297, size: 64, offset: 384)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "renaming_hash_table", scope: !2896, file: !603, line: 565, baseType: !2297, size: 64, offset: 448)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "labels", scope: !2892, file: !603, line: 669, baseType: !1826, size: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "strings", scope: !2892, file: !603, line: 672, baseType: !1466, size: 64, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "strings_len", scope: !2892, file: !603, line: 675, baseType: !7, size: 32, offset: 192)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "num_named_labels", scope: !2892, file: !603, line: 679, baseType: !7, size: 32, offset: 224)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "num_unnamed_labels", scope: !2892, file: !603, line: 682, baseType: !7, size: 32, offset: 256)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "current_file", scope: !2892, file: !603, line: 684, baseType: !1466, size: 64, offset: 320)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "current_line", scope: !2892, file: !603, line: 685, baseType: !1461, size: 32, offset: 384)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "current_col", scope: !2892, file: !603, line: 686, baseType: !1461, size: 32, offset: 416)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "globals_resolution", scope: !2892, file: !603, line: 689, baseType: !3165, size: 64, offset: 448)
!3165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3166, size: 64)
!3166 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ld_plugin_symbol_resolution_t_heap", file: !603, line: 286, baseType: !3167)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ld_plugin_symbol_resolution_t_heap", file: !603, line: 286, size: 96, elements: !3168)
!3168 = !{!3169}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3167, file: !603, line: 286, baseType: !3170, size: 96)
!3170 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_ld_plugin_symbol_resolution_t_base", file: !603, line: 285, baseType: !3171)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_ld_plugin_symbol_resolution_t_base", file: !603, line: 285, size: 96, elements: !3172)
!3172 = !{!3173, !3174, !3175}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3171, file: !603, line: 285, baseType: !7, size: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3171, file: !603, line: 285, baseType: !7, size: 32, offset: 32)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3171, file: !603, line: 285, baseType: !3176, size: 32, offset: 64)
!3176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3177, size: 32, elements: !1566)
!3177 = !DIDerivedType(tag: DW_TAG_typedef, name: "ld_plugin_symbol_resolution_t", file: !603, line: 284, baseType: !590)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "reader_cache", scope: !2892, file: !603, line: 692, baseType: !3179, size: 64, offset: 512)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 64)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_streamer_cache_d", file: !603, line: 346, size: 256, elements: !3181)
!3181 = !{!3182, !3183, !3184, !3185}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "node_map", scope: !3180, file: !603, line: 349, baseType: !2297, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "next_slot", scope: !3180, file: !603, line: 352, baseType: !7, size: 32, offset: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !3180, file: !603, line: 355, baseType: !2345, size: 64, offset: 128)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !3180, file: !603, line: 358, baseType: !3186, size: 64, offset: 192)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_heap", file: !2363, line: 35, baseType: !3188)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_heap", file: !2363, line: 35, size: 96, elements: !3189)
!3189 = !{!3190}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3188, file: !2363, line: 35, baseType: !3191, size: 96)
!3191 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_unsigned_base", file: !2363, line: 34, baseType: !3192)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_unsigned_base", file: !2363, line: 34, size: 96, elements: !3193)
!3193 = !{!3194, !3195, !3196}
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3192, file: !2363, line: 34, baseType: !7, size: 32)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3192, file: !2363, line: 34, baseType: !7, size: 32, offset: 32)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3192, file: !2363, line: 34, baseType: !3197, size: 32, offset: 64)
!3197 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32, elements: !1566)
!3198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3199, size: 64)
!3199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3200)
!3200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_function_header", file: !603, line: 395, size: 288, elements: !3201)
!3201 = !{!3202, !3213, !3216, !3217, !3218, !3219, !3220, !3221}
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "lto_header", scope: !3200, file: !603, line: 398, baseType: !3203, size: 64)
!3203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_header", file: !603, line: 387, size: 64, elements: !3204)
!3204 = !{!3205, !3211, !3212}
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "major_version", scope: !3203, file: !603, line: 389, baseType: !3206, size: 16)
!3206 = !DIDerivedType(tag: DW_TAG_typedef, name: "int16_t", file: !3207, line: 25, baseType: !3208)
!3207 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h", directory: "")
!3208 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int16_t", file: !3209, line: 39, baseType: !3210)
!3209 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!3210 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "minor_version", scope: !3203, file: !603, line: 390, baseType: !3206, size: 16, offset: 16)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "section_type", scope: !3203, file: !603, line: 391, baseType: !632, size: 32, offset: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "num_named_labels", scope: !3200, file: !603, line: 401, baseType: !3214, size: 32, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !3207, line: 26, baseType: !3215)
!3215 = !DIDerivedType(tag: DW_TAG_typedef, name: "__int32_t", file: !3209, line: 41, baseType: !1461)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "num_unnamed_labels", scope: !3200, file: !603, line: 404, baseType: !3214, size: 32, offset: 96)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "compressed_size", scope: !3200, file: !603, line: 407, baseType: !3214, size: 32, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "named_label_size", scope: !3200, file: !603, line: 410, baseType: !3214, size: 32, offset: 160)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !3200, file: !603, line: 413, baseType: !3214, size: 32, offset: 192)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "main_size", scope: !3200, file: !603, line: 416, baseType: !3214, size: 32, offset: 224)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "string_size", scope: !3200, file: !603, line: 419, baseType: !3214, size: 32, offset: 256)
!3222 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !3223, line: 267, baseType: !3224)
!3223 = !DIFile(filename: "/usr/include/unistd.h", directory: "")
!3224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intptr_t", file: !3209, line: 206, baseType: !1523)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "string_slot", file: !3, line: 53, size: 128, elements: !3227)
!3227 = !{!3228, !3229}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3226, file: !3, line: 55, baseType: !1466, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "slot_num", scope: !3226, file: !3, line: 56, baseType: !7, size: 32, offset: 64)
!3230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3231, size: 64)
!3231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1793)
!3232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3233, size: 64)
!3233 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alias_pair_gc", file: !135, line: 198, baseType: !3234)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alias_pair_gc", file: !135, line: 198, size: 192, elements: !3235)
!3235 = !{!3236}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3234, file: !135, line: 198, baseType: !3237, size: 192)
!3237 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_alias_pair_base", file: !135, line: 197, baseType: !3238)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_alias_pair_base", file: !135, line: 197, size: 192, elements: !3239)
!3239 = !{!3240, !3241, !3242}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3238, file: !135, line: 197, baseType: !7, size: 32)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3238, file: !135, line: 197, baseType: !7, size: 32, offset: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3238, file: !135, line: 197, baseType: !3243, size: 128, offset: 64)
!3243 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3244, size: 128, elements: !1566)
!3244 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_pair", file: !135, line: 194, baseType: !3245)
!3245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alias_pair", file: !135, line: 190, size: 128, elements: !3246)
!3246 = !{!3247, !3248}
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3245, file: !135, line: 192, baseType: !1468, size: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !3245, file: !135, line: 193, baseType: !1468, size: 64, offset: 64)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitpack_word_t_heap", file: !603, line: 154, baseType: !3251)
!3251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitpack_word_t_heap", file: !603, line: 154, size: 128, elements: !3252)
!3252 = !{!3253}
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3251, file: !603, line: 154, baseType: !3254, size: 128)
!3254 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_bitpack_word_t_base", file: !603, line: 153, baseType: !3255)
!3255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_bitpack_word_t_base", file: !603, line: 153, size: 128, elements: !3256)
!3256 = !{!3257, !3258, !3259}
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3255, file: !603, line: 153, baseType: !7, size: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3255, file: !603, line: 153, baseType: !7, size: 32, offset: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3255, file: !603, line: 153, baseType: !3260, size: 64, offset: 64)
!3260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3261, size: 64, elements: !1566)
!3261 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitpack_word_t", file: !603, line: 152, baseType: !1521)
!3262 = !DIDerivedType(tag: DW_TAG_typedef, name: "priority_type", file: !135, line: 3039, baseType: !2955)
!3263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3264, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3226)
!3265 = !{!0, !3266}
!3266 = !DIGlobalVariableExpression(var: !3267, expr: !DIExpression())
!3267 = distinct !DIGlobalVariable(name: "eh_initialized_p", scope: !3268, file: !3, line: 581, type: !1460, isLocal: true, isDefinition: true)
!3268 = distinct !DISubprogram(name: "lto_init_eh", scope: !3, file: !3, line: 579, type: !3017, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3269)
!3269 = !{}
!3270 = !DIGlobalVariableExpression(var: !3267, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!3271 = !{i32 2, !"Dwarf Version", i32 4}
!3272 = !{i32 2, !"Debug Info Version", i32 3}
!3273 = !{i32 1, !"wchar_size", i32 4}
!3274 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!3275 = distinct !DISubprogram(name: "vprintf", scope: !3276, file: !3276, line: 39, type: !3277, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3287)
!3276 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!3277 = !DISubroutineType(types: !3278)
!3278 = !{!1461, !3279, !3280}
!3279 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1466)
!3280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3281, size: 64)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !3282)
!3282 = !{!3283, !3284, !3285, !3286}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3281, file: !3, baseType: !7, size: 32)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3281, file: !3, baseType: !7, size: 32, offset: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3281, file: !3, baseType: !1465, size: 64, offset: 64)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3281, file: !3, baseType: !1465, size: 64, offset: 128)
!3287 = !{!3288, !3289}
!3288 = !DILocalVariable(name: "__fmt", arg: 1, scope: !3275, file: !3276, line: 39, type: !3279)
!3289 = !DILocalVariable(name: "__arg", arg: 2, scope: !3275, file: !3276, line: 39, type: !3280)
!3290 = !DILocation(line: 0, scope: !3275)
!3291 = !DILocation(line: 41, column: 20, scope: !3275)
!3292 = !DILocation(line: 41, column: 10, scope: !3275)
!3293 = !DILocation(line: 41, column: 3, scope: !3275)
!3294 = distinct !DISubprogram(name: "getchar", scope: !3276, file: !3276, line: 47, type: !3295, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3269)
!3295 = !DISubroutineType(types: !3296)
!3296 = !{!1461}
!3297 = !DILocation(line: 49, column: 16, scope: !3294)
!3298 = !DILocation(line: 49, column: 10, scope: !3294)
!3299 = !DILocation(line: 49, column: 3, scope: !3294)
!3300 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !3276, file: !3276, line: 56, type: !3301, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3352)
!3301 = !DISubroutineType(types: !3302)
!3302 = !{!1461, !3303}
!3303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3304, size: 64)
!3304 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !3305, line: 7, baseType: !3306)
!3305 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !3307, line: 49, size: 1728, elements: !3308)
!3307 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!3308 = !{!3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3318, !3319, !3320, !3321, !3324, !3326, !3327, !3328, !3330, !3331, !3332, !3333, !3336, !3338, !3341, !3344, !3345, !3346, !3347, !3348}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3306, file: !3307, line: 51, baseType: !1461, size: 32)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !3306, file: !3307, line: 54, baseType: !1463, size: 64, offset: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !3306, file: !3307, line: 55, baseType: !1463, size: 64, offset: 128)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !3306, file: !3307, line: 56, baseType: !1463, size: 64, offset: 192)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !3306, file: !3307, line: 57, baseType: !1463, size: 64, offset: 256)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !3306, file: !3307, line: 58, baseType: !1463, size: 64, offset: 320)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !3306, file: !3307, line: 59, baseType: !1463, size: 64, offset: 384)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !3306, file: !3307, line: 60, baseType: !1463, size: 64, offset: 448)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !3306, file: !3307, line: 61, baseType: !1463, size: 64, offset: 512)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !3306, file: !3307, line: 64, baseType: !1463, size: 64, offset: 576)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !3306, file: !3307, line: 65, baseType: !1463, size: 64, offset: 640)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !3306, file: !3307, line: 66, baseType: !1463, size: 64, offset: 704)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !3306, file: !3307, line: 68, baseType: !3322, size: 64, offset: 768)
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !3307, line: 36, flags: DIFlagFwdDecl)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !3306, file: !3307, line: 70, baseType: !3325, size: 64, offset: 832)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3306, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !3306, file: !3307, line: 72, baseType: !1461, size: 32, offset: 896)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !3306, file: !3307, line: 73, baseType: !1461, size: 32, offset: 928)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !3306, file: !3307, line: 74, baseType: !3329, size: 64, offset: 960)
!3329 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !3209, line: 152, baseType: !1523)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !3306, file: !3307, line: 77, baseType: !2955, size: 16, offset: 1024)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !3306, file: !3307, line: 78, baseType: !2718, size: 8, offset: 1040)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !3306, file: !3307, line: 79, baseType: !1565, size: 8, offset: 1048)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !3306, file: !3307, line: 81, baseType: !3334, size: 64, offset: 1088)
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !3307, line: 43, baseType: null)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !3306, file: !3307, line: 89, baseType: !3337, size: 64, offset: 1152)
!3337 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !3209, line: 153, baseType: !1523)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !3306, file: !3307, line: 91, baseType: !3339, size: 64, offset: 1216)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !3307, line: 37, flags: DIFlagFwdDecl)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !3306, file: !3307, line: 92, baseType: !3342, size: 64, offset: 1280)
!3342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3343, size: 64)
!3343 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !3307, line: 38, flags: DIFlagFwdDecl)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !3306, file: !3307, line: 93, baseType: !3325, size: 64, offset: 1344)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !3306, file: !3307, line: 94, baseType: !1465, size: 64, offset: 1408)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !3306, file: !3307, line: 95, baseType: !1937, size: 64, offset: 1472)
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !3306, file: !3307, line: 96, baseType: !1461, size: 32, offset: 1536)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !3306, file: !3307, line: 98, baseType: !3349, size: 160, offset: 1568)
!3349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1464, size: 160, elements: !3350)
!3350 = !{!3351}
!3351 = !DISubrange(count: 20)
!3352 = !{!3353}
!3353 = !DILocalVariable(name: "__fp", arg: 1, scope: !3300, file: !3276, line: 56, type: !3303)
!3354 = !DILocation(line: 0, scope: !3300)
!3355 = !DILocation(line: 58, column: 10, scope: !3300)
!3356 = !DILocation(line: 58, column: 3, scope: !3300)
!3357 = distinct !DISubprogram(name: "getc_unlocked", scope: !3276, file: !3276, line: 66, type: !3301, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3358)
!3358 = !{!3359}
!3359 = !DILocalVariable(name: "__fp", arg: 1, scope: !3357, file: !3276, line: 66, type: !3303)
!3360 = !DILocation(line: 0, scope: !3357)
!3361 = !DILocation(line: 68, column: 10, scope: !3357)
!3362 = !DILocation(line: 68, column: 3, scope: !3357)
!3363 = distinct !DISubprogram(name: "getchar_unlocked", scope: !3276, file: !3276, line: 73, type: !3295, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3269)
!3364 = !DILocation(line: 75, column: 10, scope: !3363)
!3365 = !DILocation(line: 75, column: 3, scope: !3363)
!3366 = distinct !DISubprogram(name: "putchar", scope: !3276, file: !3276, line: 82, type: !3367, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3369)
!3367 = !DISubroutineType(types: !3368)
!3368 = !{!1461, !1461}
!3369 = !{!3370}
!3370 = !DILocalVariable(name: "__c", arg: 1, scope: !3366, file: !3276, line: 82, type: !1461)
!3371 = !DILocation(line: 0, scope: !3366)
!3372 = !DILocation(line: 84, column: 21, scope: !3366)
!3373 = !DILocation(line: 84, column: 10, scope: !3366)
!3374 = !DILocation(line: 84, column: 3, scope: !3366)
!3375 = distinct !DISubprogram(name: "fputc_unlocked", scope: !3276, file: !3276, line: 91, type: !3376, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3378)
!3376 = !DISubroutineType(types: !3377)
!3377 = !{!1461, !1461, !3303}
!3378 = !{!3379, !3380}
!3379 = !DILocalVariable(name: "__c", arg: 1, scope: !3375, file: !3276, line: 91, type: !1461)
!3380 = !DILocalVariable(name: "__stream", arg: 2, scope: !3375, file: !3276, line: 91, type: !3303)
!3381 = !DILocation(line: 0, scope: !3375)
!3382 = !DILocation(line: 93, column: 10, scope: !3375)
!3383 = !DILocation(line: 93, column: 3, scope: !3375)
!3384 = distinct !DISubprogram(name: "putc_unlocked", scope: !3276, file: !3276, line: 101, type: !3376, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3385)
!3385 = !{!3386, !3387}
!3386 = !DILocalVariable(name: "__c", arg: 1, scope: !3384, file: !3276, line: 101, type: !1461)
!3387 = !DILocalVariable(name: "__stream", arg: 2, scope: !3384, file: !3276, line: 101, type: !3303)
!3388 = !DILocation(line: 0, scope: !3384)
!3389 = !DILocation(line: 103, column: 10, scope: !3384)
!3390 = !DILocation(line: 103, column: 3, scope: !3384)
!3391 = distinct !DISubprogram(name: "putchar_unlocked", scope: !3276, file: !3276, line: 108, type: !3367, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3392)
!3392 = !{!3393}
!3393 = !DILocalVariable(name: "__c", arg: 1, scope: !3391, file: !3276, line: 108, type: !1461)
!3394 = !DILocation(line: 0, scope: !3391)
!3395 = !DILocation(line: 110, column: 10, scope: !3391)
!3396 = !DILocation(line: 110, column: 3, scope: !3391)
!3397 = distinct !DISubprogram(name: "getline", scope: !3276, file: !3276, line: 118, type: !3398, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3402)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{!3400, !1462, !3401, !3303}
!3400 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !3209, line: 193, baseType: !1523)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!3402 = !{!3403, !3404, !3405}
!3403 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !3397, file: !3276, line: 118, type: !1462)
!3404 = !DILocalVariable(name: "__n", arg: 2, scope: !3397, file: !3276, line: 118, type: !3401)
!3405 = !DILocalVariable(name: "__stream", arg: 3, scope: !3397, file: !3276, line: 118, type: !3303)
!3406 = !DILocation(line: 0, scope: !3397)
!3407 = !DILocation(line: 120, column: 10, scope: !3397)
!3408 = !DILocation(line: 120, column: 3, scope: !3397)
!3409 = distinct !DISubprogram(name: "feof_unlocked", scope: !3276, file: !3276, line: 128, type: !3301, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3410)
!3410 = !{!3411}
!3411 = !DILocalVariable(name: "__stream", arg: 1, scope: !3409, file: !3276, line: 128, type: !3303)
!3412 = !DILocation(line: 0, scope: !3409)
!3413 = !DILocation(line: 130, column: 10, scope: !3409)
!3414 = !DILocation(line: 130, column: 3, scope: !3409)
!3415 = distinct !DISubprogram(name: "ferror_unlocked", scope: !3276, file: !3276, line: 135, type: !3301, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3416)
!3416 = !{!3417}
!3417 = !DILocalVariable(name: "__stream", arg: 1, scope: !3415, file: !3276, line: 135, type: !3303)
!3418 = !DILocation(line: 0, scope: !3415)
!3419 = !DILocation(line: 137, column: 10, scope: !3415)
!3420 = !DILocation(line: 137, column: 3, scope: !3415)
!3421 = distinct !DISubprogram(name: "tolower", scope: !3422, file: !3422, line: 207, type: !3367, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3423)
!3422 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!3423 = !{!3424}
!3424 = !DILocalVariable(name: "__c", arg: 1, scope: !3421, file: !3422, line: 207, type: !1461)
!3425 = !DILocation(line: 0, scope: !3421)
!3426 = !DILocation(line: 209, column: 22, scope: !3421)
!3427 = !DILocation(line: 209, column: 39, scope: !3421)
!3428 = !DILocation(line: 209, column: 38, scope: !3421)
!3429 = !DILocation(line: 209, column: 37, scope: !3421)
!3430 = !DILocation(line: 209, column: 10, scope: !3421)
!3431 = !DILocation(line: 209, column: 3, scope: !3421)
!3432 = distinct !DISubprogram(name: "toupper", scope: !3422, file: !3422, line: 213, type: !3367, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3433)
!3433 = !{!3434}
!3434 = !DILocalVariable(name: "__c", arg: 1, scope: !3432, file: !3422, line: 213, type: !1461)
!3435 = !DILocation(line: 0, scope: !3432)
!3436 = !DILocation(line: 215, column: 22, scope: !3432)
!3437 = !DILocation(line: 215, column: 39, scope: !3432)
!3438 = !DILocation(line: 215, column: 38, scope: !3432)
!3439 = !DILocation(line: 215, column: 37, scope: !3432)
!3440 = !DILocation(line: 215, column: 10, scope: !3432)
!3441 = !DILocation(line: 215, column: 3, scope: !3432)
!3442 = distinct !DISubprogram(name: "atoi", scope: !3443, file: !3443, line: 361, type: !3444, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3446)
!3443 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!3444 = !DISubroutineType(types: !3445)
!3445 = !{!1461, !1466}
!3446 = !{!3447}
!3447 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3442, file: !3443, line: 361, type: !1466)
!3448 = !DILocation(line: 0, scope: !3442)
!3449 = !DILocation(line: 363, column: 16, scope: !3442)
!3450 = !DILocation(line: 363, column: 10, scope: !3442)
!3451 = !DILocation(line: 363, column: 3, scope: !3442)
!3452 = distinct !DISubprogram(name: "atol", scope: !3443, file: !3443, line: 366, type: !3453, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3455)
!3453 = !DISubroutineType(types: !3454)
!3454 = !{!1523, !1466}
!3455 = !{!3456}
!3456 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3452, file: !3443, line: 366, type: !1466)
!3457 = !DILocation(line: 0, scope: !3452)
!3458 = !DILocation(line: 368, column: 10, scope: !3452)
!3459 = !DILocation(line: 368, column: 3, scope: !3452)
!3460 = distinct !DISubprogram(name: "atoll", scope: !3443, file: !3443, line: 373, type: !3461, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3464)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!3463, !1466}
!3463 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!3464 = !{!3465}
!3465 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3460, file: !3443, line: 373, type: !1466)
!3466 = !DILocation(line: 0, scope: !3460)
!3467 = !DILocation(line: 375, column: 10, scope: !3460)
!3468 = !DILocation(line: 375, column: 3, scope: !3460)
!3469 = distinct !DISubprogram(name: "bsearch", scope: !3470, file: !3470, line: 20, type: !3471, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3474)
!3470 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!3471 = !DISubroutineType(types: !3472)
!3472 = !{!1465, !2098, !2098, !1937, !1937, !3473}
!3473 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !3443, line: 808, baseType: !2310)
!3474 = !{!3475, !3476, !3477, !3478, !3479, !3480, !3481, !3482, !3483, !3484}
!3475 = !DILocalVariable(name: "__key", arg: 1, scope: !3469, file: !3470, line: 20, type: !2098)
!3476 = !DILocalVariable(name: "__base", arg: 2, scope: !3469, file: !3470, line: 20, type: !2098)
!3477 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !3469, file: !3470, line: 20, type: !1937)
!3478 = !DILocalVariable(name: "__size", arg: 4, scope: !3469, file: !3470, line: 20, type: !1937)
!3479 = !DILocalVariable(name: "__compar", arg: 5, scope: !3469, file: !3470, line: 21, type: !3473)
!3480 = !DILocalVariable(name: "__l", scope: !3469, file: !3470, line: 23, type: !1937)
!3481 = !DILocalVariable(name: "__u", scope: !3469, file: !3470, line: 23, type: !1937)
!3482 = !DILocalVariable(name: "__idx", scope: !3469, file: !3470, line: 23, type: !1937)
!3483 = !DILocalVariable(name: "__p", scope: !3469, file: !3470, line: 24, type: !2098)
!3484 = !DILocalVariable(name: "__comparison", scope: !3469, file: !3470, line: 25, type: !1461)
!3485 = !DILocation(line: 0, scope: !3469)
!3486 = !DILocation(line: 29, column: 3, scope: !3469)
!3487 = !DILocation(line: 27, column: 7, scope: !3469)
!3488 = !DILocation(line: 29, column: 14, scope: !3469)
!3489 = !DILocation(line: 31, column: 20, scope: !3490)
!3490 = distinct !DILexicalBlock(scope: !3469, file: !3470, line: 30, column: 5)
!3491 = !DILocation(line: 31, column: 27, scope: !3490)
!3492 = !DILocation(line: 32, column: 56, scope: !3490)
!3493 = !DILocation(line: 32, column: 47, scope: !3490)
!3494 = !DILocation(line: 33, column: 22, scope: !3490)
!3495 = !DILocation(line: 34, column: 24, scope: !3496)
!3496 = distinct !DILexicalBlock(scope: !3490, file: !3470, line: 34, column: 11)
!3497 = !DILocation(line: 34, column: 11, scope: !3490)
!3498 = !DILocation(line: 36, column: 29, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !3496, file: !3470, line: 36, column: 16)
!3500 = !DILocation(line: 36, column: 16, scope: !3496)
!3501 = !DILocation(line: 37, column: 14, scope: !3499)
!3502 = distinct !{!3502, !3486, !3503}
!3503 = !DILocation(line: 40, column: 5, scope: !3469)
!3504 = !DILocation(line: 43, column: 1, scope: !3469)
!3505 = distinct !DISubprogram(name: "atof", scope: !3506, file: !3506, line: 25, type: !3507, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3510)
!3506 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!3509, !1466}
!3509 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3510 = !{!3511}
!3511 = !DILocalVariable(name: "__nptr", arg: 1, scope: !3505, file: !3506, line: 25, type: !1466)
!3512 = !DILocation(line: 0, scope: !3505)
!3513 = !DILocation(line: 27, column: 10, scope: !3505)
!3514 = !DILocation(line: 27, column: 3, scope: !3505)
!3515 = distinct !DISubprogram(name: "strtoimax", scope: !3516, file: !3516, line: 324, type: !3517, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3523)
!3516 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!3519, !3279, !3522, !1461}
!3519 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !3520, line: 101, baseType: !3521)
!3520 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!3521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !3209, line: 72, baseType: !1523)
!3522 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1462)
!3523 = !{!3524, !3525, !3526}
!3524 = !DILocalVariable(name: "nptr", arg: 1, scope: !3515, file: !3516, line: 324, type: !3279)
!3525 = !DILocalVariable(name: "endptr", arg: 2, scope: !3515, file: !3516, line: 324, type: !3522)
!3526 = !DILocalVariable(name: "base", arg: 3, scope: !3515, file: !3516, line: 324, type: !1461)
!3527 = !DILocation(line: 0, scope: !3515)
!3528 = !DILocation(line: 327, column: 10, scope: !3515)
!3529 = !DILocation(line: 327, column: 3, scope: !3515)
!3530 = distinct !DISubprogram(name: "strtoumax", scope: !3516, file: !3516, line: 336, type: !3531, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3535)
!3531 = !DISubroutineType(types: !3532)
!3532 = !{!3533, !3279, !3522, !1461}
!3533 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !3520, line: 102, baseType: !3534)
!3534 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !3209, line: 73, baseType: !1521)
!3535 = !{!3536, !3537, !3538}
!3536 = !DILocalVariable(name: "nptr", arg: 1, scope: !3530, file: !3516, line: 336, type: !3279)
!3537 = !DILocalVariable(name: "endptr", arg: 2, scope: !3530, file: !3516, line: 336, type: !3522)
!3538 = !DILocalVariable(name: "base", arg: 3, scope: !3530, file: !3516, line: 336, type: !1461)
!3539 = !DILocation(line: 0, scope: !3530)
!3540 = !DILocation(line: 339, column: 10, scope: !3530)
!3541 = !DILocation(line: 339, column: 3, scope: !3530)
!3542 = distinct !DISubprogram(name: "wcstoimax", scope: !3516, file: !3516, line: 348, type: !3543, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3552)
!3543 = !DISubroutineType(types: !3544)
!3544 = !{!3519, !3545, !3549, !1461}
!3545 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3546)
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3547, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3548)
!3548 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !3516, line: 34, baseType: !1461)
!3549 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !3550)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3552 = !{!3553, !3554, !3555}
!3553 = !DILocalVariable(name: "nptr", arg: 1, scope: !3542, file: !3516, line: 348, type: !3545)
!3554 = !DILocalVariable(name: "endptr", arg: 2, scope: !3542, file: !3516, line: 348, type: !3549)
!3555 = !DILocalVariable(name: "base", arg: 3, scope: !3542, file: !3516, line: 348, type: !1461)
!3556 = !DILocation(line: 0, scope: !3542)
!3557 = !DILocation(line: 351, column: 10, scope: !3542)
!3558 = !DILocation(line: 351, column: 3, scope: !3542)
!3559 = distinct !DISubprogram(name: "wcstoumax", scope: !3516, file: !3516, line: 362, type: !3560, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3562)
!3560 = !DISubroutineType(types: !3561)
!3561 = !{!3533, !3545, !3549, !1461}
!3562 = !{!3563, !3564, !3565}
!3563 = !DILocalVariable(name: "nptr", arg: 1, scope: !3559, file: !3516, line: 362, type: !3545)
!3564 = !DILocalVariable(name: "endptr", arg: 2, scope: !3559, file: !3516, line: 362, type: !3549)
!3565 = !DILocalVariable(name: "base", arg: 3, scope: !3559, file: !3516, line: 362, type: !1461)
!3566 = !DILocation(line: 0, scope: !3559)
!3567 = !DILocation(line: 365, column: 10, scope: !3559)
!3568 = !DILocation(line: 365, column: 3, scope: !3559)
!3569 = distinct !DISubprogram(name: "stat", scope: !3570, file: !3570, line: 453, type: !3571, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3608)
!3570 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!3571 = !DISubroutineType(types: !3572)
!3572 = !{!1461, !1466, !3573}
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !3575, line: 46, size: 1152, elements: !3576)
!3575 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!3576 = !{!3577, !3579, !3581, !3583, !3585, !3587, !3589, !3590, !3591, !3592, !3594, !3596, !3604, !3605, !3606}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3574, file: !3575, line: 48, baseType: !3578, size: 64)
!3578 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !3209, line: 145, baseType: !1521)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3574, file: !3575, line: 53, baseType: !3580, size: 64, offset: 64)
!3580 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !3209, line: 148, baseType: !1521)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3574, file: !3575, line: 61, baseType: !3582, size: 64, offset: 128)
!3582 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !3209, line: 151, baseType: !1521)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3574, file: !3575, line: 62, baseType: !3584, size: 32, offset: 192)
!3584 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !3209, line: 150, baseType: !7)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3574, file: !3575, line: 64, baseType: !3586, size: 32, offset: 224)
!3586 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !3209, line: 146, baseType: !7)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3574, file: !3575, line: 65, baseType: !3588, size: 32, offset: 256)
!3588 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !3209, line: 147, baseType: !7)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3574, file: !3575, line: 67, baseType: !1461, size: 32, offset: 288)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3574, file: !3575, line: 69, baseType: !3578, size: 64, offset: 320)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3574, file: !3575, line: 74, baseType: !3329, size: 64, offset: 384)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3574, file: !3575, line: 78, baseType: !3593, size: 64, offset: 448)
!3593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !3209, line: 174, baseType: !1523)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3574, file: !3575, line: 80, baseType: !3595, size: 64, offset: 512)
!3595 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !3209, line: 179, baseType: !1523)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3574, file: !3575, line: 91, baseType: !3597, size: 128, offset: 576)
!3597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !3598, line: 10, size: 128, elements: !3599)
!3598 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!3599 = !{!3600, !3602}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !3597, file: !3598, line: 12, baseType: !3601, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !3209, line: 160, baseType: !1523)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !3597, file: !3598, line: 16, baseType: !3603, size: 64, offset: 64)
!3603 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !3209, line: 196, baseType: !1523)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3574, file: !3575, line: 92, baseType: !3597, size: 128, offset: 704)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3574, file: !3575, line: 93, baseType: !3597, size: 128, offset: 832)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3574, file: !3575, line: 106, baseType: !3607, size: 192, offset: 960)
!3607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3603, size: 192, elements: !1541)
!3608 = !{!3609, !3610}
!3609 = !DILocalVariable(name: "__path", arg: 1, scope: !3569, file: !3570, line: 453, type: !1466)
!3610 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3569, file: !3570, line: 453, type: !3573)
!3611 = !DILocation(line: 0, scope: !3569)
!3612 = !DILocation(line: 455, column: 10, scope: !3569)
!3613 = !DILocation(line: 455, column: 3, scope: !3569)
!3614 = distinct !DISubprogram(name: "lstat", scope: !3570, file: !3570, line: 460, type: !3571, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3615)
!3615 = !{!3616, !3617}
!3616 = !DILocalVariable(name: "__path", arg: 1, scope: !3614, file: !3570, line: 460, type: !1466)
!3617 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3614, file: !3570, line: 460, type: !3573)
!3618 = !DILocation(line: 0, scope: !3614)
!3619 = !DILocation(line: 462, column: 10, scope: !3614)
!3620 = !DILocation(line: 462, column: 3, scope: !3614)
!3621 = distinct !DISubprogram(name: "fstat", scope: !3570, file: !3570, line: 467, type: !3622, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3624)
!3622 = !DISubroutineType(types: !3623)
!3623 = !{!1461, !1461, !3573}
!3624 = !{!3625, !3626}
!3625 = !DILocalVariable(name: "__fd", arg: 1, scope: !3621, file: !3570, line: 467, type: !1461)
!3626 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3621, file: !3570, line: 467, type: !3573)
!3627 = !DILocation(line: 0, scope: !3621)
!3628 = !DILocation(line: 469, column: 10, scope: !3621)
!3629 = !DILocation(line: 469, column: 3, scope: !3621)
!3630 = distinct !DISubprogram(name: "fstatat", scope: !3570, file: !3570, line: 474, type: !3631, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3633)
!3631 = !DISubroutineType(types: !3632)
!3632 = !{!1461, !1461, !1466, !3573, !1461}
!3633 = !{!3634, !3635, !3636, !3637}
!3634 = !DILocalVariable(name: "__fd", arg: 1, scope: !3630, file: !3570, line: 474, type: !1461)
!3635 = !DILocalVariable(name: "__filename", arg: 2, scope: !3630, file: !3570, line: 474, type: !1466)
!3636 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3630, file: !3570, line: 474, type: !3573)
!3637 = !DILocalVariable(name: "__flag", arg: 4, scope: !3630, file: !3570, line: 474, type: !1461)
!3638 = !DILocation(line: 0, scope: !3630)
!3639 = !DILocation(line: 477, column: 10, scope: !3630)
!3640 = !DILocation(line: 477, column: 3, scope: !3630)
!3641 = distinct !DISubprogram(name: "mknod", scope: !3570, file: !3570, line: 483, type: !3642, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3644)
!3642 = !DISubroutineType(types: !3643)
!3643 = !{!1461, !1466, !3584, !3578}
!3644 = !{!3645, !3646, !3647}
!3645 = !DILocalVariable(name: "__path", arg: 1, scope: !3641, file: !3570, line: 483, type: !1466)
!3646 = !DILocalVariable(name: "__mode", arg: 2, scope: !3641, file: !3570, line: 483, type: !3584)
!3647 = !DILocalVariable(name: "__dev", arg: 3, scope: !3641, file: !3570, line: 483, type: !3578)
!3648 = !DILocation(line: 0, scope: !3641)
!3649 = !DILocation(line: 485, column: 10, scope: !3641)
!3650 = !DILocation(line: 485, column: 3, scope: !3641)
!3651 = distinct !DISubprogram(name: "mknodat", scope: !3570, file: !3570, line: 491, type: !3652, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3654)
!3652 = !DISubroutineType(types: !3653)
!3653 = !{!1461, !1461, !1466, !3584, !3578}
!3654 = !{!3655, !3656, !3657, !3658}
!3655 = !DILocalVariable(name: "__fd", arg: 1, scope: !3651, file: !3570, line: 491, type: !1461)
!3656 = !DILocalVariable(name: "__path", arg: 2, scope: !3651, file: !3570, line: 491, type: !1466)
!3657 = !DILocalVariable(name: "__mode", arg: 3, scope: !3651, file: !3570, line: 491, type: !3584)
!3658 = !DILocalVariable(name: "__dev", arg: 4, scope: !3651, file: !3570, line: 491, type: !3578)
!3659 = !DILocation(line: 0, scope: !3651)
!3660 = !DILocation(line: 494, column: 10, scope: !3651)
!3661 = !DILocation(line: 494, column: 3, scope: !3651)
!3662 = distinct !DISubprogram(name: "stat64", scope: !3570, file: !3570, line: 502, type: !3663, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3685)
!3663 = !DISubroutineType(types: !3664)
!3664 = !{!1461, !1466, !3665}
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !3575, line: 119, size: 1152, elements: !3667)
!3667 = !{!3668, !3669, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3681, !3682, !3683, !3684}
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !3666, file: !3575, line: 121, baseType: !3578, size: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !3666, file: !3575, line: 123, baseType: !3670, size: 64, offset: 64)
!3670 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !3209, line: 149, baseType: !1521)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !3666, file: !3575, line: 124, baseType: !3582, size: 64, offset: 128)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !3666, file: !3575, line: 125, baseType: !3584, size: 32, offset: 192)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !3666, file: !3575, line: 132, baseType: !3586, size: 32, offset: 224)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !3666, file: !3575, line: 133, baseType: !3588, size: 32, offset: 256)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !3666, file: !3575, line: 135, baseType: !1461, size: 32, offset: 288)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !3666, file: !3575, line: 136, baseType: !3578, size: 64, offset: 320)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !3666, file: !3575, line: 137, baseType: !3329, size: 64, offset: 384)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !3666, file: !3575, line: 143, baseType: !3593, size: 64, offset: 448)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !3666, file: !3575, line: 144, baseType: !3680, size: 64, offset: 512)
!3680 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !3209, line: 180, baseType: !1523)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !3666, file: !3575, line: 152, baseType: !3597, size: 128, offset: 576)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !3666, file: !3575, line: 153, baseType: !3597, size: 128, offset: 704)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !3666, file: !3575, line: 154, baseType: !3597, size: 128, offset: 832)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !3666, file: !3575, line: 164, baseType: !3607, size: 192, offset: 960)
!3685 = !{!3686, !3687}
!3686 = !DILocalVariable(name: "__path", arg: 1, scope: !3662, file: !3570, line: 502, type: !1466)
!3687 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3662, file: !3570, line: 502, type: !3665)
!3688 = !DILocation(line: 0, scope: !3662)
!3689 = !DILocation(line: 504, column: 10, scope: !3662)
!3690 = !DILocation(line: 504, column: 3, scope: !3662)
!3691 = distinct !DISubprogram(name: "lstat64", scope: !3570, file: !3570, line: 509, type: !3663, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3692)
!3692 = !{!3693, !3694}
!3693 = !DILocalVariable(name: "__path", arg: 1, scope: !3691, file: !3570, line: 509, type: !1466)
!3694 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3691, file: !3570, line: 509, type: !3665)
!3695 = !DILocation(line: 0, scope: !3691)
!3696 = !DILocation(line: 511, column: 10, scope: !3691)
!3697 = !DILocation(line: 511, column: 3, scope: !3691)
!3698 = distinct !DISubprogram(name: "fstat64", scope: !3570, file: !3570, line: 516, type: !3699, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3701)
!3699 = !DISubroutineType(types: !3700)
!3700 = !{!1461, !1461, !3665}
!3701 = !{!3702, !3703}
!3702 = !DILocalVariable(name: "__fd", arg: 1, scope: !3698, file: !3570, line: 516, type: !1461)
!3703 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !3698, file: !3570, line: 516, type: !3665)
!3704 = !DILocation(line: 0, scope: !3698)
!3705 = !DILocation(line: 518, column: 10, scope: !3698)
!3706 = !DILocation(line: 518, column: 3, scope: !3698)
!3707 = distinct !DISubprogram(name: "fstatat64", scope: !3570, file: !3570, line: 523, type: !3708, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3710)
!3708 = !DISubroutineType(types: !3709)
!3709 = !{!1461, !1461, !1466, !3665, !1461}
!3710 = !{!3711, !3712, !3713, !3714}
!3711 = !DILocalVariable(name: "__fd", arg: 1, scope: !3707, file: !3570, line: 523, type: !1461)
!3712 = !DILocalVariable(name: "__filename", arg: 2, scope: !3707, file: !3570, line: 523, type: !1466)
!3713 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !3707, file: !3570, line: 523, type: !3665)
!3714 = !DILocalVariable(name: "__flag", arg: 4, scope: !3707, file: !3570, line: 523, type: !1461)
!3715 = !DILocation(line: 0, scope: !3707)
!3716 = !DILocation(line: 526, column: 10, scope: !3707)
!3717 = !DILocation(line: 526, column: 3, scope: !3707)
!3718 = distinct !DISubprogram(name: "lto_input_function_body", scope: !3, file: !3, line: 1515, type: !3719, scopeLine: 1517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3721)
!3719 = !DISubroutineType(types: !3720)
!3720 = !{null, !2895, !1468, !1466}
!3721 = !{!3722, !3723, !3724}
!3722 = !DILocalVariable(name: "file_data", arg: 1, scope: !3718, file: !3, line: 1515, type: !2895)
!3723 = !DILocalVariable(name: "fn_decl", arg: 2, scope: !3718, file: !3, line: 1516, type: !1468)
!3724 = !DILocalVariable(name: "data", arg: 3, scope: !3718, file: !3, line: 1516, type: !1466)
!3725 = !DILocation(line: 0, scope: !3718)
!3726 = !DILocation(line: 1518, column: 25, scope: !3718)
!3727 = !DILocation(line: 1519, column: 3, scope: !3718)
!3728 = !DILocation(line: 1520, column: 1, scope: !3718)
!3729 = distinct !DISubprogram(name: "lto_read_body", scope: !3, file: !3, line: 1442, type: !3730, scopeLine: 1444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3732)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{null, !2895, !1468, !1466, !632}
!3732 = !{!3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3748, !3749, !3752}
!3733 = !DILocalVariable(name: "file_data", arg: 1, scope: !3729, file: !3, line: 1442, type: !2895)
!3734 = !DILocalVariable(name: "fn_decl", arg: 2, scope: !3729, file: !3, line: 1442, type: !1468)
!3735 = !DILocalVariable(name: "data", arg: 3, scope: !3729, file: !3, line: 1443, type: !1466)
!3736 = !DILocalVariable(name: "section_type", arg: 4, scope: !3729, file: !3, line: 1443, type: !632)
!3737 = !DILocalVariable(name: "header", scope: !3729, file: !3, line: 1445, type: !3198)
!3738 = !DILocalVariable(name: "data_in", scope: !3729, file: !3, line: 1446, type: !2891)
!3739 = !DILocalVariable(name: "cfg_offset", scope: !3729, file: !3, line: 1447, type: !3214)
!3740 = !DILocalVariable(name: "main_offset", scope: !3729, file: !3, line: 1448, type: !3214)
!3741 = !DILocalVariable(name: "string_offset", scope: !3729, file: !3, line: 1449, type: !3214)
!3742 = !DILocalVariable(name: "ib_cfg", scope: !3729, file: !3, line: 1450, type: !3743)
!3743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lto_input_block", file: !603, line: 363, size: 128, elements: !3744)
!3744 = !{!3745, !3746, !3747}
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3743, file: !603, line: 365, baseType: !1466, size: 64)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3743, file: !603, line: 366, baseType: !7, size: 32, offset: 64)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3743, file: !603, line: 367, baseType: !7, size: 32, offset: 96)
!3748 = !DILocalVariable(name: "ib_main", scope: !3729, file: !3, line: 1451, type: !3743)
!3749 = !DILocalVariable(name: "fn", scope: !3750, file: !3, line: 1477, type: !2213)
!3750 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 1476, column: 5)
!3751 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 1475, column: 7)
!3752 = !DILocalVariable(name: "decl_state", scope: !3750, file: !3, line: 1478, type: !2899)
!3753 = !DILocation(line: 0, scope: !3729)
!3754 = !DILocation(line: 1450, column: 3, scope: !3729)
!3755 = !DILocation(line: 1451, column: 3, scope: !3729)
!3756 = !DILocation(line: 1455, column: 38, scope: !3729)
!3757 = !DILocation(line: 1455, column: 28, scope: !3729)
!3758 = !DILocation(line: 1456, column: 41, scope: !3729)
!3759 = !DILocation(line: 1456, column: 31, scope: !3729)
!3760 = !DILocation(line: 1458, column: 3, scope: !3761)
!3761 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 1458, column: 3)
!3762 = !DILocation(line: 1463, column: 3, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 1463, column: 3)
!3764 = !DILocation(line: 1468, column: 49, scope: !3729)
!3765 = !DILocation(line: 1469, column: 13, scope: !3729)
!3766 = !DILocation(line: 1468, column: 13, scope: !3729)
!3767 = !DILocation(line: 1472, column: 41, scope: !3729)
!3768 = !DILocation(line: 1472, column: 22, scope: !3729)
!3769 = !DILocation(line: 1473, column: 27, scope: !3729)
!3770 = !DILocation(line: 1473, column: 8, scope: !3729)
!3771 = !DILocation(line: 1472, column: 3, scope: !3729)
!3772 = !DILocation(line: 1475, column: 20, scope: !3751)
!3773 = !DILocation(line: 1475, column: 7, scope: !3729)
!3774 = !DILocation(line: 1477, column: 29, scope: !3750)
!3775 = !DILocation(line: 0, scope: !3750)
!3776 = !DILocation(line: 1480, column: 7, scope: !3750)
!3777 = !DILocation(line: 1481, column: 7, scope: !3750)
!3778 = !DILocation(line: 1484, column: 20, scope: !3750)
!3779 = !DILocation(line: 1485, column: 7, scope: !3750)
!3780 = !DILocation(line: 1486, column: 18, scope: !3750)
!3781 = !DILocation(line: 1486, column: 37, scope: !3750)
!3782 = !DILocation(line: 1488, column: 7, scope: !3750)
!3783 = !DILocation(line: 1491, column: 7, scope: !3750)
!3784 = !DILocation(line: 1494, column: 7, scope: !3750)
!3785 = !DILocation(line: 1494, column: 13, scope: !3750)
!3786 = !DILocation(line: 1494, column: 24, scope: !3750)
!3787 = !DILocation(line: 1494, column: 33, scope: !3750)
!3788 = !DILocation(line: 1497, column: 50, scope: !3750)
!3789 = !DILocation(line: 1497, column: 37, scope: !3750)
!3790 = !DILocation(line: 1499, column: 7, scope: !3750)
!3791 = !DILocation(line: 1500, column: 5, scope: !3750)
!3792 = !DILocation(line: 1503, column: 7, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3751, file: !3, line: 1502, column: 5)
!3794 = !DILocation(line: 1506, column: 3, scope: !3729)
!3795 = !DILocation(line: 1507, column: 3, scope: !3729)
!3796 = !DILocation(line: 1508, column: 1, scope: !3729)
!3797 = distinct !DISubprogram(name: "lto_input_constructors_and_inits", scope: !3, file: !3, line: 1527, type: !3798, scopeLine: 1529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3800)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{null, !2895, !1466}
!3800 = !{!3801, !3802}
!3801 = !DILocalVariable(name: "file_data", arg: 1, scope: !3797, file: !3, line: 1527, type: !2895)
!3802 = !DILocalVariable(name: "data", arg: 2, scope: !3797, file: !3, line: 1528, type: !1466)
!3803 = !DILocation(line: 0, scope: !3797)
!3804 = !DILocation(line: 1530, column: 3, scope: !3797)
!3805 = !DILocation(line: 1531, column: 1, scope: !3797)
!3806 = distinct !DISubprogram(name: "lto_input_bitpack", scope: !3, file: !3, line: 1856, type: !3807, scopeLine: 1857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3816)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{!3809, !3815}
!3809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3810, size: 64)
!3810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitpack_d", file: !603, line: 156, size: 192, elements: !3811)
!3811 = !{!3812, !3813, !3814}
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "num_bits", scope: !3810, file: !603, line: 159, baseType: !1937, size: 64)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "first_unused_bit", scope: !3810, file: !603, line: 165, baseType: !1937, size: 64, offset: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3810, file: !603, line: 168, baseType: !3249, size: 64, offset: 128)
!3815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3743, size: 64)
!3816 = !{!3817, !3818, !3819, !3820, !3821}
!3817 = !DILocalVariable(name: "ib", arg: 1, scope: !3806, file: !3, line: 1856, type: !3815)
!3818 = !DILocalVariable(name: "i", scope: !3806, file: !3, line: 1858, type: !7)
!3819 = !DILocalVariable(name: "num_words", scope: !3806, file: !3, line: 1858, type: !7)
!3820 = !DILocalVariable(name: "bp", scope: !3806, file: !3, line: 1859, type: !3809)
!3821 = !DILocalVariable(name: "w", scope: !3822, file: !3, line: 1871, type: !3261)
!3822 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 1870, column: 5)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 1869, column: 3)
!3824 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 1869, column: 3)
!3825 = !DILocation(line: 0, scope: !3806)
!3826 = !DILocation(line: 1861, column: 8, scope: !3806)
!3827 = !DILocation(line: 1866, column: 15, scope: !3806)
!3828 = !DILocation(line: 1867, column: 3, scope: !3806)
!3829 = !DILocation(line: 0, scope: !3822)
!3830 = !DILocation(line: 1869, column: 8, scope: !3824)
!3831 = !DILocation(line: 0, scope: !3824)
!3832 = !DILocation(line: 1869, column: 17, scope: !3823)
!3833 = !DILocation(line: 1869, column: 3, scope: !3824)
!3834 = !DILocation(line: 1871, column: 26, scope: !3822)
!3835 = !DILocation(line: 1872, column: 7, scope: !3822)
!3836 = !DILocation(line: 1869, column: 31, scope: !3823)
!3837 = !DILocation(line: 1869, column: 3, scope: !3823)
!3838 = distinct !{!3838, !3833, !3839}
!3839 = !DILocation(line: 1873, column: 5, scope: !3824)
!3840 = !DILocation(line: 1875, column: 3, scope: !3806)
!3841 = distinct !DISubprogram(name: "VEC_bitpack_word_t_heap_safe_push", scope: !603, file: !603, line: 154, type: !3842, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3847)
!3842 = !DISubroutineType(types: !3843)
!3843 = !{!3844, !3845, !3846}
!3844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3249, size: 64)
!3846 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3261)
!3847 = !{!3848, !3849}
!3848 = !DILocalVariable(name: "vec_", arg: 1, scope: !3841, file: !603, line: 154, type: !3845)
!3849 = !DILocalVariable(name: "obj_", arg: 2, scope: !3841, file: !603, line: 154, type: !3846)
!3850 = !DILocation(line: 0, scope: !3841)
!3851 = !DILocation(line: 154, column: 1, scope: !3841)
!3852 = distinct !DISubprogram(name: "lto_input_tree", scope: !3, file: !3, line: 2694, type: !3853, scopeLine: 2695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3855)
!3853 = !DISubroutineType(types: !3854)
!3854 = !{!1468, !3815, !2891}
!3855 = !{!3856, !3857, !3858, !3859, !3860, !3867}
!3856 = !DILocalVariable(name: "ib", arg: 1, scope: !3852, file: !3, line: 2694, type: !3815)
!3857 = !DILocalVariable(name: "data_in", arg: 2, scope: !3852, file: !3, line: 2694, type: !2891)
!3858 = !DILocalVariable(name: "tag", scope: !3852, file: !3, line: 2696, type: !602)
!3859 = !DILocalVariable(name: "result", scope: !3852, file: !3, line: 2697, type: !1468)
!3860 = !DILocalVariable(name: "ix", scope: !3861, file: !3, line: 2726, type: !1521)
!3861 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 2724, column: 5)
!3862 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 2723, column: 12)
!3863 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 2717, column: 12)
!3864 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 2711, column: 12)
!3865 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 2704, column: 12)
!3866 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 2702, column: 7)
!3867 = !DILocalVariable(name: "target", scope: !3861, file: !3, line: 2727, type: !1468)
!3868 = !DILocation(line: 0, scope: !3852)
!3869 = !DILocation(line: 2699, column: 9, scope: !3852)
!3870 = !DILocation(line: 2700, column: 3, scope: !3852)
!3871 = !DILocation(line: 2702, column: 11, scope: !3866)
!3872 = !DILocation(line: 2702, column: 7, scope: !3852)
!3873 = !DILocation(line: 2704, column: 38, scope: !3865)
!3874 = !DILocation(line: 2709, column: 49, scope: !3875)
!3875 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 2705, column: 5)
!3876 = !DILocation(line: 2709, column: 16, scope: !3875)
!3877 = !DILocation(line: 2710, column: 5, scope: !3875)
!3878 = !DILocation(line: 2711, column: 12, scope: !3865)
!3879 = !DILocation(line: 2715, column: 16, scope: !3880)
!3880 = distinct !DILexicalBlock(scope: !3864, file: !3, line: 2712, column: 5)
!3881 = !DILocation(line: 2716, column: 5, scope: !3880)
!3882 = !DILocation(line: 2721, column: 16, scope: !3883)
!3883 = distinct !DILexicalBlock(scope: !3863, file: !3, line: 2718, column: 5)
!3884 = !DILocation(line: 2722, column: 5, scope: !3883)
!3885 = !DILocation(line: 2728, column: 12, scope: !3861)
!3886 = !DILocation(line: 0, scope: !3861)
!3887 = !DILocation(line: 2729, column: 58, scope: !3861)
!3888 = !DILocation(line: 2729, column: 69, scope: !3861)
!3889 = !DILocation(line: 2729, column: 16, scope: !3861)
!3890 = !DILocation(line: 2730, column: 12, scope: !3861)
!3891 = !DILocation(line: 2731, column: 58, scope: !3861)
!3892 = !DILocation(line: 2731, column: 69, scope: !3861)
!3893 = !DILocation(line: 2731, column: 16, scope: !3861)
!3894 = !DILocation(line: 2732, column: 7, scope: !3861)
!3895 = !DILocation(line: 2733, column: 5, scope: !3861)
!3896 = !DILocation(line: 2734, column: 19, scope: !3897)
!3897 = distinct !DILexicalBlock(scope: !3862, file: !3, line: 2734, column: 12)
!3898 = !DILocation(line: 2734, column: 16, scope: !3897)
!3899 = !DILocation(line: 2734, column: 12, scope: !3862)
!3900 = !DILocation(line: 2738, column: 16, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 2735, column: 5)
!3902 = !DILocation(line: 2739, column: 5, scope: !3901)
!3903 = !DILocation(line: 2743, column: 16, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 2741, column: 5)
!3905 = !DILocation(line: 0, scope: !3866)
!3906 = !DILocation(line: 2746, column: 3, scope: !3852)
!3907 = distinct !DISubprogram(name: "input_record_start", scope: !3, file: !3, line: 219, type: !3908, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3910)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!602, !3815}
!3910 = !{!3911, !3912}
!3911 = !DILocalVariable(name: "ib", arg: 1, scope: !3907, file: !3, line: 219, type: !3815)
!3912 = !DILocalVariable(name: "tag", scope: !3907, file: !3, line: 221, type: !602)
!3913 = !DILocation(line: 0, scope: !3907)
!3914 = !DILocation(line: 221, column: 39, scope: !3907)
!3915 = !DILocation(line: 221, column: 23, scope: !3907)
!3916 = !DILocation(line: 222, column: 3, scope: !3907)
!3917 = distinct !DISubprogram(name: "lto_input_tree_ref", scope: !3, file: !3, line: 314, type: !3918, scopeLine: 316, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3920)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{!1468, !3815, !2891, !2213, !602}
!3920 = !{!3921, !3922, !3923, !3924, !3925, !3926}
!3921 = !DILocalVariable(name: "ib", arg: 1, scope: !3917, file: !3, line: 314, type: !3815)
!3922 = !DILocalVariable(name: "data_in", arg: 2, scope: !3917, file: !3, line: 314, type: !2891)
!3923 = !DILocalVariable(name: "fn", arg: 3, scope: !3917, file: !3, line: 315, type: !2213)
!3924 = !DILocalVariable(name: "tag", arg: 4, scope: !3917, file: !3, line: 315, type: !602)
!3925 = !DILocalVariable(name: "ix_u", scope: !3917, file: !3, line: 317, type: !1521)
!3926 = !DILocalVariable(name: "result", scope: !3917, file: !3, line: 318, type: !1468)
!3927 = !DILocation(line: 0, scope: !3917)
!3928 = !DILocation(line: 320, column: 3, scope: !3917)
!3929 = !DILocation(line: 322, column: 3, scope: !3917)
!3930 = !DILocation(line: 325, column: 14, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3917, file: !3, line: 323, column: 5)
!3932 = !DILocation(line: 326, column: 54, scope: !3931)
!3933 = !DILocation(line: 326, column: 65, scope: !3931)
!3934 = !DILocation(line: 326, column: 16, scope: !3931)
!3935 = !DILocation(line: 327, column: 7, scope: !3931)
!3936 = !DILocation(line: 330, column: 14, scope: !3931)
!3937 = !DILocation(line: 331, column: 16, scope: !3931)
!3938 = !DILocation(line: 332, column: 7, scope: !3931)
!3939 = !DILocation(line: 335, column: 14, scope: !3931)
!3940 = !DILocation(line: 336, column: 60, scope: !3931)
!3941 = !DILocation(line: 336, column: 71, scope: !3931)
!3942 = !DILocation(line: 336, column: 16, scope: !3931)
!3943 = !DILocation(line: 337, column: 7, scope: !3931)
!3944 = !DILocation(line: 340, column: 14, scope: !3931)
!3945 = !DILocation(line: 341, column: 57, scope: !3931)
!3946 = !DILocation(line: 341, column: 68, scope: !3931)
!3947 = !DILocation(line: 341, column: 16, scope: !3931)
!3948 = !DILocation(line: 342, column: 7, scope: !3931)
!3949 = !DILocation(line: 345, column: 14, scope: !3931)
!3950 = !DILocation(line: 346, column: 59, scope: !3931)
!3951 = !DILocation(line: 346, column: 70, scope: !3931)
!3952 = !DILocation(line: 346, column: 16, scope: !3931)
!3953 = !DILocation(line: 347, column: 7, scope: !3931)
!3954 = !DILocation(line: 350, column: 14, scope: !3931)
!3955 = !DILocation(line: 351, column: 64, scope: !3931)
!3956 = !DILocation(line: 351, column: 75, scope: !3931)
!3957 = !DILocation(line: 351, column: 16, scope: !3931)
!3958 = !DILocation(line: 352, column: 7, scope: !3931)
!3959 = !DILocation(line: 359, column: 14, scope: !3931)
!3960 = !DILocation(line: 360, column: 58, scope: !3931)
!3961 = !DILocation(line: 360, column: 69, scope: !3931)
!3962 = !DILocation(line: 360, column: 16, scope: !3931)
!3963 = !DILocation(line: 361, column: 11, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 361, column: 11)
!3965 = !DILocation(line: 361, column: 30, scope: !3964)
!3966 = !DILocation(line: 361, column: 11, scope: !3931)
!3967 = !DILocation(line: 362, column: 28, scope: !3964)
!3968 = !DILocation(line: 362, column: 2, scope: !3964)
!3969 = !DILocation(line: 366, column: 7, scope: !3931)
!3970 = !DILocation(line: 367, column: 5, scope: !3931)
!3971 = !DILocation(line: 369, column: 3, scope: !3917)
!3972 = !DILocation(line: 371, column: 3, scope: !3917)
!3973 = distinct !DISubprogram(name: "lto_get_pickled_tree", scope: !3, file: !3, line: 2542, type: !3853, scopeLine: 2543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3974)
!3974 = !{!3975, !3976, !3977, !3978, !3979, !3980, !3981}
!3975 = !DILocalVariable(name: "ib", arg: 1, scope: !3973, file: !3, line: 2542, type: !3815)
!3976 = !DILocalVariable(name: "data_in", arg: 2, scope: !3973, file: !3, line: 2542, type: !2891)
!3977 = !DILocalVariable(name: "ix", scope: !3973, file: !3, line: 2544, type: !1523)
!3978 = !DILocalVariable(name: "result", scope: !3973, file: !3, line: 2545, type: !1468)
!3979 = !DILocalVariable(name: "expected_tag", scope: !3973, file: !3, line: 2546, type: !602)
!3980 = !DILocalVariable(name: "orig_offset", scope: !3973, file: !3, line: 2547, type: !1521)
!3981 = !DILocalVariable(name: "fwd_ib", scope: !3982, file: !3, line: 2561, type: !3743)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 2557, column: 5)
!3983 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 2556, column: 7)
!3984 = !DILocation(line: 0, scope: !3973)
!3985 = !DILocation(line: 2549, column: 8, scope: !3973)
!3986 = !DILocation(line: 2550, column: 34, scope: !3973)
!3987 = !DILocation(line: 2550, column: 18, scope: !3973)
!3988 = !DILocation(line: 2552, column: 17, scope: !3973)
!3989 = !DILocation(line: 2553, column: 3, scope: !3973)
!3990 = !DILocation(line: 2555, column: 45, scope: !3973)
!3991 = !DILocation(line: 2555, column: 59, scope: !3973)
!3992 = !DILocation(line: 2555, column: 12, scope: !3973)
!3993 = !DILocation(line: 2556, column: 14, scope: !3983)
!3994 = !DILocation(line: 2556, column: 7, scope: !3973)
!3995 = !DILocation(line: 2561, column: 7, scope: !3982)
!3996 = !DILocation(line: 2565, column: 15, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 2565, column: 11)
!3998 = !DILocation(line: 2565, column: 11, scope: !3997)
!3999 = !DILocation(line: 2565, column: 17, scope: !3997)
!4000 = !DILocation(line: 2565, column: 11, scope: !3982)
!4001 = !DILocation(line: 2566, column: 2, scope: !3997)
!4002 = !DILocation(line: 2569, column: 7, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 2569, column: 7)
!4004 = !DILocation(line: 0, scope: !3982)
!4005 = !DILocation(line: 2570, column: 16, scope: !3982)
!4006 = !DILocation(line: 2571, column: 5, scope: !3983)
!4007 = !DILocation(line: 2571, column: 5, scope: !3982)
!4008 = !DILocation(line: 2573, column: 3, scope: !3973)
!4009 = !DILocation(line: 2576, column: 3, scope: !3973)
!4010 = distinct !DISubprogram(name: "lto_get_builtin_tree", scope: !3, file: !3, line: 2584, type: !3853, scopeLine: 2585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4011)
!4011 = !{!4012, !4013, !4014, !4015, !4016, !4017, !4018}
!4012 = !DILocalVariable(name: "ib", arg: 1, scope: !4010, file: !3, line: 2584, type: !3815)
!4013 = !DILocalVariable(name: "data_in", arg: 2, scope: !4010, file: !3, line: 2584, type: !2891)
!4014 = !DILocalVariable(name: "fclass", scope: !4010, file: !3, line: 2586, type: !716)
!4015 = !DILocalVariable(name: "fcode", scope: !4010, file: !3, line: 2587, type: !722)
!4016 = !DILocalVariable(name: "asmname", scope: !4010, file: !3, line: 2588, type: !1466)
!4017 = !DILocalVariable(name: "result", scope: !4010, file: !3, line: 2589, type: !1468)
!4018 = !DILocalVariable(name: "ix", scope: !4010, file: !3, line: 2590, type: !1461)
!4019 = !DILocation(line: 0, scope: !4010)
!4020 = !DILocation(line: 2592, column: 34, scope: !4010)
!4021 = !DILocation(line: 2592, column: 12, scope: !4010)
!4022 = !DILocation(line: 2593, column: 3, scope: !4010)
!4023 = !DILocation(line: 2595, column: 36, scope: !4010)
!4024 = !DILocation(line: 2595, column: 11, scope: !4010)
!4025 = !DILocation(line: 2597, column: 8, scope: !4010)
!4026 = !DILocation(line: 2600, column: 7, scope: !4010)
!4027 = !DILocation(line: 2602, column: 7, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 2601, column: 5)
!4029 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 2600, column: 7)
!4030 = !DILocation(line: 2603, column: 16, scope: !4028)
!4031 = !DILocation(line: 2604, column: 7, scope: !4028)
!4032 = !DILocation(line: 2608, column: 24, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 2607, column: 5)
!4034 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 2606, column: 12)
!4035 = !DILocation(line: 2608, column: 16, scope: !4033)
!4036 = !DILocation(line: 2609, column: 12, scope: !4037)
!4037 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 2609, column: 11)
!4038 = !DILocation(line: 2609, column: 32, scope: !4037)
!4039 = !DILocation(line: 2609, column: 29, scope: !4037)
!4040 = !DILocation(line: 2609, column: 19, scope: !4037)
!4041 = !DILocation(line: 2610, column: 2, scope: !4037)
!4042 = !DILocation(line: 2613, column: 5, scope: !4034)
!4043 = !DILocation(line: 0, scope: !4029)
!4044 = !DILocation(line: 2615, column: 13, scope: !4010)
!4045 = !DILocation(line: 2616, column: 7, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 2616, column: 7)
!4047 = !DILocation(line: 2616, column: 7, scope: !4010)
!4048 = !DILocation(line: 2617, column: 5, scope: !4046)
!4049 = !DILocation(line: 2619, column: 42, scope: !4010)
!4050 = !DILocation(line: 2619, column: 3, scope: !4010)
!4051 = !DILocation(line: 2621, column: 3, scope: !4010)
!4052 = distinct !DISubprogram(name: "lto_file_decl_data_get_var_decl", scope: !603, file: !603, line: 1044, type: !4053, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4055)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!1468, !2895, !7}
!4055 = !{!4056, !4057, !4058}
!4056 = !DILocalVariable(name: "data", arg: 1, scope: !4052, file: !603, line: 1044, type: !2895)
!4057 = !DILocalVariable(name: "idx", arg: 2, scope: !4052, file: !603, line: 1044, type: !7)
!4058 = !DILocalVariable(name: "state", scope: !4052, file: !603, line: 1044, type: !2899)
!4059 = !DILocation(line: 0, scope: !4052)
!4060 = !DILocation(line: 1044, column: 1, scope: !4052)
!4061 = distinct !DISubprogram(name: "lto_tree_code_to_tag", scope: !603, file: !603, line: 915, type: !4062, scopeLine: 916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4064)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!602, !134}
!4064 = !{!4065}
!4065 = !DILocalVariable(name: "code", arg: 1, scope: !4061, file: !603, line: 915, type: !134)
!4066 = !DILocation(line: 0, scope: !4061)
!4067 = !DILocation(line: 917, column: 43, scope: !4061)
!4068 = !DILocation(line: 917, column: 3, scope: !4061)
!4069 = distinct !DISubprogram(name: "lto_input_integer_cst", scope: !3, file: !3, line: 2665, type: !3853, scopeLine: 2666, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4070)
!4070 = !{!4071, !4072, !4073, !4074, !4075, !4076, !4077}
!4071 = !DILocalVariable(name: "ib", arg: 1, scope: !4069, file: !3, line: 2665, type: !3815)
!4072 = !DILocalVariable(name: "data_in", arg: 2, scope: !4069, file: !3, line: 2665, type: !2891)
!4073 = !DILocalVariable(name: "result", scope: !4069, file: !3, line: 2667, type: !1468)
!4074 = !DILocalVariable(name: "type", scope: !4069, file: !3, line: 2667, type: !1468)
!4075 = !DILocalVariable(name: "low", scope: !4069, file: !3, line: 2668, type: !1523)
!4076 = !DILocalVariable(name: "high", scope: !4069, file: !3, line: 2668, type: !1523)
!4077 = !DILocalVariable(name: "overflow_p", scope: !4069, file: !3, line: 2669, type: !1460)
!4078 = !DILocation(line: 0, scope: !4069)
!4079 = !DILocation(line: 2671, column: 10, scope: !4069)
!4080 = !DILocation(line: 2672, column: 17, scope: !4069)
!4081 = !DILocation(line: 2672, column: 43, scope: !4069)
!4082 = !DILocation(line: 2673, column: 9, scope: !4069)
!4083 = !DILocation(line: 2674, column: 10, scope: !4069)
!4084 = !DILocation(line: 2675, column: 12, scope: !4069)
!4085 = !DILocation(line: 2679, column: 7, scope: !4069)
!4086 = !DILocation(line: 2681, column: 16, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4088, file: !3, line: 2680, column: 5)
!4088 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 2679, column: 7)
!4089 = !DILocation(line: 2682, column: 7, scope: !4087)
!4090 = !DILocation(line: 2682, column: 30, scope: !4087)
!4091 = !DILocation(line: 2683, column: 5, scope: !4087)
!4092 = !DILocation(line: 2685, column: 3, scope: !4069)
!4093 = distinct !DISubprogram(name: "lto_read_tree", scope: !3, file: !3, line: 2629, type: !4094, scopeLine: 2631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4096)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{!1468, !3815, !2891, !602}
!4096 = !{!4097, !4098, !4099, !4100, !4101}
!4097 = !DILocalVariable(name: "ib", arg: 1, scope: !4093, file: !3, line: 2629, type: !3815)
!4098 = !DILocalVariable(name: "data_in", arg: 2, scope: !4093, file: !3, line: 2629, type: !2891)
!4099 = !DILocalVariable(name: "tag", arg: 3, scope: !4093, file: !3, line: 2630, type: !602)
!4100 = !DILocalVariable(name: "result", scope: !4093, file: !3, line: 2632, type: !1468)
!4101 = !DILocalVariable(name: "ix", scope: !4093, file: !3, line: 2633, type: !1461)
!4102 = !DILocation(line: 0, scope: !4093)
!4103 = !DILocation(line: 2633, column: 3, scope: !4093)
!4104 = !DILocation(line: 2635, column: 12, scope: !4093)
!4105 = !DILocation(line: 2638, column: 3, scope: !4093)
!4106 = !DILocation(line: 2641, column: 7, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 2641, column: 7)
!4108 = !DILocation(line: 2641, column: 26, scope: !4107)
!4109 = !DILocation(line: 2641, column: 7, scope: !4093)
!4110 = !DILocation(line: 2642, column: 5, scope: !4107)
!4111 = !DILocation(line: 2644, column: 7, scope: !4112)
!4112 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 2644, column: 7)
!4113 = !DILocation(line: 2644, column: 26, scope: !4112)
!4114 = !DILocation(line: 2644, column: 7, scope: !4093)
!4115 = !DILocation(line: 2645, column: 5, scope: !4112)
!4116 = !DILocation(line: 2646, column: 31, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 2646, column: 12)
!4118 = !DILocation(line: 2646, column: 48, scope: !4117)
!4119 = !DILocation(line: 2646, column: 52, scope: !4117)
!4120 = !DILocation(line: 2646, column: 12, scope: !4112)
!4121 = !DILocation(line: 2647, column: 5, scope: !4117)
!4122 = !DILocation(line: 2649, column: 22, scope: !4093)
!4123 = !DILocation(line: 2658, column: 1, scope: !4093)
!4124 = !DILocation(line: 2657, column: 3, scope: !4093)
!4125 = distinct !DISubprogram(name: "lto_init_reader", scope: !3, file: !3, line: 2753, type: !3017, scopeLine: 2754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3269)
!4126 = !DILocation(line: 2755, column: 3, scope: !4125)
!4127 = !DILocation(line: 2757, column: 3, scope: !4125)
!4128 = !DILocation(line: 2758, column: 3, scope: !4125)
!4129 = !DILocation(line: 2760, column: 26, scope: !4125)
!4130 = !DILocation(line: 2760, column: 24, scope: !4125)
!4131 = !DILocation(line: 2763, column: 3, scope: !4125)
!4132 = !DILocation(line: 2764, column: 1, scope: !4125)
!4133 = distinct !DISubprogram(name: "hash_string_slot_node", scope: !3, file: !3, line: 114, type: !2305, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4134)
!4134 = !{!4135, !4136}
!4135 = !DILocalVariable(name: "p", arg: 1, scope: !4133, file: !3, line: 114, type: !2098)
!4136 = !DILocalVariable(name: "ds", scope: !4133, file: !3, line: 116, type: !3263)
!4137 = !DILocation(line: 0, scope: !4133)
!4138 = !DILocation(line: 117, column: 44, scope: !4133)
!4139 = !DILocation(line: 117, column: 22, scope: !4133)
!4140 = !DILocation(line: 117, column: 3, scope: !4133)
!4141 = distinct !DISubprogram(name: "eq_string_slot_node", scope: !3, file: !3, line: 124, type: !2311, scopeLine: 125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4142)
!4142 = !{!4143, !4144, !4145, !4146}
!4143 = !DILocalVariable(name: "p1", arg: 1, scope: !4141, file: !3, line: 124, type: !2098)
!4144 = !DILocalVariable(name: "p2", arg: 2, scope: !4141, file: !3, line: 124, type: !2098)
!4145 = !DILocalVariable(name: "ds1", scope: !4141, file: !3, line: 126, type: !3263)
!4146 = !DILocalVariable(name: "ds2", scope: !4141, file: !3, line: 127, type: !3263)
!4147 = !DILocation(line: 0, scope: !4141)
!4148 = !DILocation(line: 128, column: 23, scope: !4141)
!4149 = !DILocation(line: 128, column: 31, scope: !4141)
!4150 = !DILocation(line: 128, column: 10, scope: !4141)
!4151 = !DILocation(line: 128, column: 34, scope: !4141)
!4152 = !DILocation(line: 128, column: 3, scope: !4141)
!4153 = distinct !DISubprogram(name: "lto_data_in_create", scope: !3, file: !3, line: 2772, type: !4154, scopeLine: 2775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4156)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{!2891, !2895, !1466, !7, !3165}
!4156 = !{!4157, !4158, !4159, !4160, !4161}
!4157 = !DILocalVariable(name: "file_data", arg: 1, scope: !4153, file: !3, line: 2772, type: !2895)
!4158 = !DILocalVariable(name: "strings", arg: 2, scope: !4153, file: !3, line: 2772, type: !1466)
!4159 = !DILocalVariable(name: "len", arg: 3, scope: !4153, file: !3, line: 2773, type: !7)
!4160 = !DILocalVariable(name: "resolutions", arg: 4, scope: !4153, file: !3, line: 2774, type: !3165)
!4161 = !DILocalVariable(name: "data_in", scope: !4153, file: !3, line: 2776, type: !2891)
!4162 = !DILocation(line: 0, scope: !4153)
!4163 = !DILocation(line: 2776, column: 29, scope: !4153)
!4164 = !DILocation(line: 2777, column: 12, scope: !4153)
!4165 = !DILocation(line: 2777, column: 22, scope: !4153)
!4166 = !DILocation(line: 2778, column: 12, scope: !4153)
!4167 = !DILocation(line: 2778, column: 20, scope: !4153)
!4168 = !DILocation(line: 2779, column: 12, scope: !4153)
!4169 = !DILocation(line: 2779, column: 24, scope: !4153)
!4170 = !DILocation(line: 2780, column: 12, scope: !4153)
!4171 = !DILocation(line: 2780, column: 31, scope: !4153)
!4172 = !DILocation(line: 2781, column: 27, scope: !4153)
!4173 = !DILocation(line: 2781, column: 12, scope: !4153)
!4174 = !DILocation(line: 2781, column: 25, scope: !4153)
!4175 = !DILocation(line: 2783, column: 3, scope: !4153)
!4176 = distinct !DISubprogram(name: "lto_data_in_delete", scope: !3, file: !3, line: 2790, type: !4177, scopeLine: 2791, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4179)
!4177 = !DISubroutineType(types: !4178)
!4178 = !{null, !2891}
!4179 = !{!4180}
!4180 = !DILocalVariable(name: "data_in", arg: 1, scope: !4176, file: !3, line: 2790, type: !2891)
!4181 = !DILocation(line: 0, scope: !4176)
!4182 = !DILocation(line: 2792, column: 3, scope: !4176)
!4183 = !DILocation(line: 2793, column: 39, scope: !4176)
!4184 = !DILocation(line: 2793, column: 3, scope: !4176)
!4185 = !DILocation(line: 2794, column: 18, scope: !4176)
!4186 = !DILocation(line: 2794, column: 3, scope: !4176)
!4187 = !DILocation(line: 2795, column: 9, scope: !4176)
!4188 = !DILocation(line: 2795, column: 3, scope: !4176)
!4189 = !DILocation(line: 2796, column: 1, scope: !4176)
!4190 = distinct !DISubprogram(name: "VEC_ld_plugin_symbol_resolution_t_heap_free", scope: !603, file: !603, line: 286, type: !4191, scopeLine: 286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4194)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{null, !4193}
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!4194 = !{!4195}
!4195 = !DILocalVariable(name: "vec_", arg: 1, scope: !4190, file: !603, line: 286, type: !4193)
!4196 = !DILocation(line: 0, scope: !4190)
!4197 = !DILocation(line: 286, column: 1, scope: !4198)
!4198 = distinct !DILexicalBlock(scope: !4190, file: !603, line: 286, column: 1)
!4199 = !DILocation(line: 286, column: 1, scope: !4190)
!4200 = distinct !DISubprogram(name: "input_cfg", scope: !3, file: !3, line: 724, type: !4201, scopeLine: 725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4203)
!4201 = !DISubroutineType(types: !4202)
!4202 = !{null, !3815, !2213}
!4203 = !{!4204, !4205, !4206, !4207, !4208, !4209, !4210, !4212, !4213, !4217, !4218, !4219, !4220, !4221, !4222}
!4204 = !DILocalVariable(name: "ib", arg: 1, scope: !4200, file: !3, line: 724, type: !3815)
!4205 = !DILocalVariable(name: "fn", arg: 2, scope: !4200, file: !3, line: 724, type: !2213)
!4206 = !DILocalVariable(name: "bb_count", scope: !4200, file: !3, line: 726, type: !7)
!4207 = !DILocalVariable(name: "p_bb", scope: !4200, file: !3, line: 727, type: !2380)
!4208 = !DILocalVariable(name: "i", scope: !4200, file: !3, line: 728, type: !7)
!4209 = !DILocalVariable(name: "index", scope: !4200, file: !3, line: 729, type: !1461)
!4210 = !DILocalVariable(name: "bb", scope: !4211, file: !3, line: 751, type: !2380)
!4211 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 750, column: 5)
!4212 = !DILocalVariable(name: "edge_count", scope: !4211, file: !3, line: 752, type: !7)
!4213 = !DILocalVariable(name: "dest_index", scope: !4214, file: !3, line: 762, type: !7)
!4214 = distinct !DILexicalBlock(scope: !4215, file: !3, line: 761, column: 2)
!4215 = distinct !DILexicalBlock(scope: !4216, file: !3, line: 760, column: 7)
!4216 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 760, column: 7)
!4217 = !DILocalVariable(name: "edge_flags", scope: !4214, file: !3, line: 763, type: !7)
!4218 = !DILocalVariable(name: "dest", scope: !4214, file: !3, line: 764, type: !2380)
!4219 = !DILocalVariable(name: "probability", scope: !4214, file: !3, line: 765, type: !1461)
!4220 = !DILocalVariable(name: "count", scope: !4214, file: !3, line: 766, type: !2003)
!4221 = !DILocalVariable(name: "e", scope: !4214, file: !3, line: 767, type: !1771)
!4222 = !DILocalVariable(name: "bb", scope: !4223, file: !3, line: 791, type: !2380)
!4223 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 790, column: 5)
!4224 = !DILocation(line: 0, scope: !4200)
!4225 = !DILocation(line: 731, column: 3, scope: !4200)
!4226 = !DILocation(line: 732, column: 3, scope: !4200)
!4227 = !DILocation(line: 735, column: 29, scope: !4200)
!4228 = !DILocation(line: 735, column: 5, scope: !4200)
!4229 = !DILocation(line: 734, column: 3, scope: !4200)
!4230 = !DILocation(line: 734, column: 36, scope: !4200)
!4231 = !DILocation(line: 737, column: 14, scope: !4200)
!4232 = !DILocation(line: 739, column: 3, scope: !4200)
!4233 = !DILocation(line: 739, column: 38, scope: !4200)
!4234 = !DILocation(line: 740, column: 18, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 740, column: 7)
!4236 = !DILocation(line: 740, column: 16, scope: !4235)
!4237 = !DILocation(line: 740, column: 7, scope: !4200)
!4238 = !DILocation(line: 741, column: 5, scope: !4235)
!4239 = !DILocation(line: 744, column: 18, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 744, column: 7)
!4241 = !DILocation(line: 744, column: 16, scope: !4240)
!4242 = !DILocation(line: 744, column: 7, scope: !4200)
!4243 = !DILocation(line: 745, column: 5, scope: !4240)
!4244 = !DILocation(line: 748, column: 11, scope: !4200)
!4245 = !DILocation(line: 749, column: 3, scope: !4200)
!4246 = !DILocation(line: 749, column: 16, scope: !4200)
!4247 = !DILocation(line: 751, column: 24, scope: !4211)
!4248 = !DILocation(line: 0, scope: !4211)
!4249 = !DILocation(line: 754, column: 14, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4211, file: !3, line: 754, column: 11)
!4251 = !DILocation(line: 754, column: 11, scope: !4211)
!4252 = !DILocation(line: 755, column: 7, scope: !4250)
!4253 = !DILocation(line: 755, column: 2, scope: !4250)
!4254 = !DILocation(line: 757, column: 20, scope: !4211)
!4255 = !DILocation(line: 760, column: 12, scope: !4216)
!4256 = !DILocation(line: 0, scope: !4216)
!4257 = !DILocation(line: 760, column: 21, scope: !4215)
!4258 = !DILocation(line: 760, column: 7, scope: !4216)
!4259 = !DILocation(line: 769, column: 17, scope: !4214)
!4260 = !DILocation(line: 0, scope: !4214)
!4261 = !DILocation(line: 770, column: 24, scope: !4214)
!4262 = !DILocation(line: 770, column: 18, scope: !4214)
!4263 = !DILocation(line: 771, column: 24, scope: !4214)
!4264 = !DILocation(line: 772, column: 17, scope: !4214)
!4265 = !DILocation(line: 774, column: 11, scope: !4214)
!4266 = !DILocation(line: 776, column: 13, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4214, file: !3, line: 776, column: 8)
!4268 = !DILocation(line: 776, column: 8, scope: !4214)
!4269 = !DILocation(line: 777, column: 13, scope: !4267)
!4270 = !DILocation(line: 777, column: 6, scope: !4267)
!4271 = !DILocation(line: 779, column: 8, scope: !4214)
!4272 = !DILocation(line: 780, column: 7, scope: !4214)
!4273 = !DILocation(line: 780, column: 19, scope: !4214)
!4274 = !DILocation(line: 781, column: 7, scope: !4214)
!4275 = !DILocation(line: 781, column: 13, scope: !4214)
!4276 = !DILocation(line: 760, column: 36, scope: !4215)
!4277 = !DILocation(line: 760, column: 7, scope: !4215)
!4278 = distinct !{!4278, !4258, !4279}
!4279 = !DILocation(line: 782, column: 2, scope: !4216)
!4280 = !DILocation(line: 784, column: 15, scope: !4211)
!4281 = distinct !{!4281, !4245, !4282}
!4282 = !DILocation(line: 785, column: 5, scope: !4200)
!4283 = !DILocation(line: 787, column: 10, scope: !4200)
!4284 = !DILocation(line: 788, column: 11, scope: !4200)
!4285 = !DILocation(line: 789, column: 3, scope: !4200)
!4286 = !DILocation(line: 789, column: 16, scope: !4200)
!4287 = !DILocation(line: 791, column: 24, scope: !4223)
!4288 = !DILocation(line: 0, scope: !4223)
!4289 = !DILocation(line: 792, column: 11, scope: !4223)
!4290 = !DILocation(line: 792, column: 19, scope: !4223)
!4291 = !DILocation(line: 793, column: 13, scope: !4223)
!4292 = !DILocation(line: 793, column: 21, scope: !4223)
!4293 = !DILocation(line: 795, column: 15, scope: !4223)
!4294 = distinct !{!4294, !4285, !4295}
!4295 = !DILocation(line: 796, column: 5, scope: !4200)
!4296 = !DILocation(line: 797, column: 1, scope: !4200)
!4297 = distinct !DISubprogram(name: "input_function", scope: !3, file: !3, line: 1281, type: !4298, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4300)
!4298 = !DISubroutineType(types: !4299)
!4299 = !{null, !1468, !2891, !3815}
!4300 = !{!4301, !4302, !4303, !4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4312, !4313, !4317, !4318, !4328, !4332}
!4301 = !DILocalVariable(name: "fn_decl", arg: 1, scope: !4297, file: !3, line: 1281, type: !1468)
!4302 = !DILocalVariable(name: "data_in", arg: 2, scope: !4297, file: !3, line: 1281, type: !2891)
!4303 = !DILocalVariable(name: "ib", arg: 3, scope: !4297, file: !3, line: 1282, type: !3815)
!4304 = !DILocalVariable(name: "fn", scope: !4297, file: !3, line: 1284, type: !2213)
!4305 = !DILocalVariable(name: "tag", scope: !4297, file: !3, line: 1285, type: !602)
!4306 = !DILocalVariable(name: "stmts", scope: !4297, file: !3, line: 1286, type: !3043)
!4307 = !DILocalVariable(name: "bb", scope: !4297, file: !3, line: 1287, type: !2380)
!4308 = !DILocalVariable(name: "bp", scope: !4297, file: !3, line: 1288, type: !3809)
!4309 = !DILocalVariable(name: "node", scope: !4297, file: !3, line: 1289, type: !2932)
!4310 = !DILocalVariable(name: "args", scope: !4297, file: !3, line: 1290, type: !1468)
!4311 = !DILocalVariable(name: "narg", scope: !4297, file: !3, line: 1290, type: !1468)
!4312 = !DILocalVariable(name: "oarg", scope: !4297, file: !3, line: 1290, type: !1468)
!4313 = !DILocalVariable(name: "ix", scope: !4314, file: !3, line: 1335, type: !1461)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 1334, column: 5)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 1331, column: 3)
!4316 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1331, column: 3)
!4317 = !DILocalVariable(name: "res", scope: !4314, file: !3, line: 1336, type: !1460)
!4318 = !DILocalVariable(name: "bsi", scope: !4319, file: !3, line: 1369, type: !4322)
!4319 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 1368, column: 5)
!4320 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 1367, column: 3)
!4321 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1367, column: 3)
!4322 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_stmt_iterator", file: !652, line: 265, baseType: !4323)
!4323 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !652, line: 254, size: 192, elements: !4324)
!4324 = !{!4325, !4326, !4327}
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4323, file: !652, line: 257, baseType: !1786, size: 64)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !4323, file: !652, line: 263, baseType: !1781, size: 64, offset: 64)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !4323, file: !652, line: 264, baseType: !2380, size: 64, offset: 128)
!4328 = !DILocalVariable(name: "stmt", scope: !4329, file: !3, line: 1372, type: !1791)
!4329 = distinct !DILexicalBlock(scope: !4330, file: !3, line: 1371, column: 2)
!4330 = distinct !DILexicalBlock(scope: !4331, file: !3, line: 1370, column: 7)
!4331 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 1370, column: 7)
!4332 = !DILocalVariable(name: "ei", scope: !4333, file: !3, line: 1382, type: !4334)
!4333 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1381, column: 3)
!4334 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !337, line: 682, baseType: !4335)
!4335 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !337, line: 679, size: 128, elements: !4336)
!4336 = !{!4337, !4338}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4335, file: !337, line: 680, baseType: !7, size: 32)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !4335, file: !337, line: 681, baseType: !4339, size: 64, offset: 64)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!4340 = !DILocation(line: 0, scope: !4297)
!4341 = !DILocation(line: 1292, column: 8, scope: !4297)
!4342 = !DILocation(line: 1293, column: 9, scope: !4297)
!4343 = !DILocation(line: 1294, column: 3, scope: !4297)
!4344 = !DILocation(line: 1296, column: 3, scope: !4297)
!4345 = !DILocation(line: 1297, column: 3, scope: !4297)
!4346 = !DILocation(line: 1300, column: 8, scope: !4297)
!4347 = !DILocation(line: 1301, column: 18, scope: !4297)
!4348 = !DILocation(line: 1301, column: 7, scope: !4297)
!4349 = !DILocation(line: 1301, column: 16, scope: !4297)
!4350 = !DILocation(line: 1302, column: 37, scope: !4297)
!4351 = !DILocation(line: 1302, column: 35, scope: !4297)
!4352 = !DILocation(line: 1303, column: 28, scope: !4297)
!4353 = !DILocation(line: 1303, column: 26, scope: !4297)
!4354 = !DILocation(line: 1304, column: 28, scope: !4297)
!4355 = !DILocation(line: 1304, column: 26, scope: !4297)
!4356 = !DILocation(line: 1305, column: 24, scope: !4297)
!4357 = !DILocation(line: 1305, column: 22, scope: !4297)
!4358 = !DILocation(line: 1306, column: 41, scope: !4297)
!4359 = !DILocation(line: 1306, column: 39, scope: !4297)
!4360 = !DILocation(line: 1307, column: 24, scope: !4297)
!4361 = !DILocation(line: 1307, column: 22, scope: !4297)
!4362 = !DILocation(line: 1308, column: 35, scope: !4297)
!4363 = !DILocation(line: 1308, column: 33, scope: !4297)
!4364 = !DILocation(line: 1309, column: 16, scope: !4297)
!4365 = !DILocation(line: 1309, column: 14, scope: !4297)
!4366 = !DILocation(line: 1310, column: 28, scope: !4297)
!4367 = !DILocation(line: 1310, column: 26, scope: !4297)
!4368 = !DILocation(line: 1311, column: 22, scope: !4297)
!4369 = !DILocation(line: 1311, column: 20, scope: !4297)
!4370 = !DILocation(line: 1312, column: 22, scope: !4297)
!4371 = !DILocation(line: 1312, column: 20, scope: !4297)
!4372 = !DILocation(line: 1313, column: 54, scope: !4297)
!4373 = !DILocation(line: 1313, column: 28, scope: !4297)
!4374 = !DILocation(line: 1313, column: 26, scope: !4297)
!4375 = !DILocation(line: 1314, column: 26, scope: !4297)
!4376 = !DILocation(line: 1314, column: 24, scope: !4297)
!4377 = !DILocation(line: 1315, column: 26, scope: !4297)
!4378 = !DILocation(line: 1315, column: 24, scope: !4297)
!4379 = !DILocation(line: 1316, column: 3, scope: !4297)
!4380 = !DILocation(line: 1319, column: 25, scope: !4297)
!4381 = !DILocation(line: 1319, column: 7, scope: !4297)
!4382 = !DILocation(line: 1319, column: 23, scope: !4297)
!4383 = !DILocation(line: 1322, column: 27, scope: !4297)
!4384 = !DILocation(line: 1322, column: 7, scope: !4297)
!4385 = !DILocation(line: 1322, column: 25, scope: !4297)
!4386 = !DILocation(line: 1323, column: 33, scope: !4297)
!4387 = !DILocation(line: 1323, column: 7, scope: !4297)
!4388 = !DILocation(line: 1323, column: 31, scope: !4297)
!4389 = !DILocation(line: 1326, column: 21, scope: !4297)
!4390 = !DILocation(line: 1326, column: 7, scope: !4297)
!4391 = !DILocation(line: 1326, column: 19, scope: !4297)
!4392 = !DILocation(line: 1330, column: 10, scope: !4297)
!4393 = !DILocation(line: 1331, column: 28, scope: !4316)
!4394 = !DILocation(line: 0, scope: !4314)
!4395 = !DILocation(line: 1331, column: 8, scope: !4316)
!4396 = !DILocation(line: 0, scope: !4316)
!4397 = !DILocation(line: 1332, column: 8, scope: !4315)
!4398 = !DILocation(line: 1332, column: 13, scope: !4315)
!4399 = !DILocation(line: 1331, column: 3, scope: !4316)
!4400 = !DILocation(line: 1335, column: 7, scope: !4314)
!4401 = !DILocation(line: 1337, column: 49, scope: !4314)
!4402 = !DILocation(line: 1337, column: 13, scope: !4314)
!4403 = !DILocation(line: 1338, column: 7, scope: !4314)
!4404 = !DILocation(line: 1340, column: 46, scope: !4314)
!4405 = !DILocation(line: 1340, column: 66, scope: !4314)
!4406 = !DILocation(line: 1340, column: 7, scope: !4314)
!4407 = !DILocation(line: 1341, column: 5, scope: !4315)
!4408 = !DILocation(line: 1333, column: 15, scope: !4315)
!4409 = !DILocation(line: 1333, column: 41, scope: !4315)
!4410 = !DILocation(line: 1331, column: 3, scope: !4315)
!4411 = distinct !{!4411, !4399, !4412}
!4412 = !DILocation(line: 1341, column: 5, scope: !4316)
!4413 = !DILocation(line: 1342, column: 3, scope: !4297)
!4414 = !DILocation(line: 1345, column: 3, scope: !4297)
!4415 = !DILocation(line: 1348, column: 3, scope: !4297)
!4416 = !DILocation(line: 1351, column: 28, scope: !4297)
!4417 = !DILocation(line: 1351, column: 3, scope: !4297)
!4418 = !DILocation(line: 1351, column: 26, scope: !4297)
!4419 = !DILocation(line: 1352, column: 3, scope: !4297)
!4420 = !DILocation(line: 1353, column: 3, scope: !4297)
!4421 = !DILocation(line: 1353, column: 29, scope: !4297)
!4422 = !DILocation(line: 1356, column: 9, scope: !4297)
!4423 = !DILocation(line: 1357, column: 3, scope: !4297)
!4424 = !DILocation(line: 1359, column: 7, scope: !4425)
!4425 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 1358, column: 5)
!4426 = !DILocation(line: 1360, column: 13, scope: !4425)
!4427 = distinct !{!4427, !4423, !4428}
!4428 = !DILocation(line: 1361, column: 5, scope: !4297)
!4429 = !DILocation(line: 1365, column: 3, scope: !4297)
!4430 = !DILocation(line: 1366, column: 31, scope: !4297)
!4431 = !DILocation(line: 1366, column: 22, scope: !4297)
!4432 = !DILocation(line: 1366, column: 11, scope: !4297)
!4433 = !DILocation(line: 1367, column: 3, scope: !4321)
!4434 = !DILocation(line: 0, scope: !4319)
!4435 = !DILocation(line: 0, scope: !4331)
!4436 = !DILocation(line: 0, scope: !4321)
!4437 = !DILocation(line: 1369, column: 7, scope: !4319)
!4438 = !DILocation(line: 1370, column: 18, scope: !4331)
!4439 = !DILocation(line: 1370, column: 12, scope: !4331)
!4440 = !DILocation(line: 1370, column: 38, scope: !4330)
!4441 = !DILocation(line: 1370, column: 37, scope: !4330)
!4442 = !DILocation(line: 1370, column: 7, scope: !4331)
!4443 = !DILocation(line: 1372, column: 18, scope: !4329)
!4444 = !DILocation(line: 0, scope: !4329)
!4445 = !DILocation(line: 1373, column: 10, scope: !4329)
!4446 = !DILocation(line: 1373, column: 4, scope: !4329)
!4447 = !DILocation(line: 1373, column: 29, scope: !4329)
!4448 = !DILocation(line: 1370, column: 55, scope: !4330)
!4449 = !DILocation(line: 1370, column: 7, scope: !4330)
!4450 = distinct !{!4450, !4442, !4451}
!4451 = !DILocation(line: 1374, column: 2, scope: !4331)
!4452 = !DILocation(line: 1375, column: 5, scope: !4320)
!4453 = !DILocation(line: 1367, column: 3, scope: !4320)
!4454 = distinct !{!4454, !4433, !4455}
!4455 = !DILocation(line: 1375, column: 5, scope: !4321)
!4456 = !DILocation(line: 1382, column: 24, scope: !4333)
!4457 = !DILocation(line: 1383, column: 39, scope: !4333)
!4458 = !DILocation(line: 1383, column: 53, scope: !4333)
!4459 = !DILocation(line: 1383, column: 31, scope: !4333)
!4460 = !DILocation(line: 1383, column: 5, scope: !4333)
!4461 = !DILocation(line: 1386, column: 10, scope: !4297)
!4462 = !DILocation(line: 1387, column: 3, scope: !4297)
!4463 = !DILocation(line: 1388, column: 3, scope: !4297)
!4464 = !DILocation(line: 1390, column: 3, scope: !4297)
!4465 = !DILocation(line: 1391, column: 3, scope: !4297)
!4466 = !DILocation(line: 1392, column: 3, scope: !4297)
!4467 = !DILocation(line: 1393, column: 3, scope: !4297)
!4468 = !DILocation(line: 1394, column: 1, scope: !4297)
!4469 = distinct !DISubprogram(name: "input_alias_pairs", scope: !3, file: !3, line: 1401, type: !4470, scopeLine: 1402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4472)
!4470 = !DISubroutineType(types: !4471)
!4471 = !{null, !3815, !2891}
!4472 = !{!4473, !4474, !4475, !4476, !4478, !4479}
!4473 = !DILocalVariable(name: "ib", arg: 1, scope: !4469, file: !3, line: 1401, type: !3815)
!4474 = !DILocalVariable(name: "data_in", arg: 2, scope: !4469, file: !3, line: 1401, type: !2891)
!4475 = !DILocalVariable(name: "var", scope: !4469, file: !3, line: 1403, type: !1468)
!4476 = !DILocalVariable(name: "orig_name", scope: !4477, file: !3, line: 1415, type: !1466)
!4477 = distinct !DILexicalBlock(scope: !4469, file: !3, line: 1414, column: 5)
!4478 = !DILocalVariable(name: "new_name", scope: !4477, file: !3, line: 1415, type: !1466)
!4479 = !DILocalVariable(name: "p", scope: !4477, file: !3, line: 1416, type: !4480)
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!4481 = !DILocation(line: 0, scope: !4469)
!4482 = !DILocation(line: 1405, column: 3, scope: !4469)
!4483 = !DILocation(line: 1408, column: 3, scope: !4469)
!4484 = !DILocation(line: 1409, column: 11, scope: !4469)
!4485 = !DILocation(line: 1409, column: 5, scope: !4469)
!4486 = distinct !{!4486, !4483, !4487}
!4487 = !DILocation(line: 1410, column: 13, scope: !4469)
!4488 = !DILocation(line: 1412, column: 9, scope: !4469)
!4489 = !DILocation(line: 0, scope: !4477)
!4490 = !DILocation(line: 1413, column: 3, scope: !4469)
!4491 = !DILocation(line: 1418, column: 11, scope: !4477)
!4492 = !DILocation(line: 1419, column: 10, scope: !4477)
!4493 = !DILocation(line: 1419, column: 15, scope: !4477)
!4494 = !DILocation(line: 1420, column: 19, scope: !4477)
!4495 = !DILocation(line: 1420, column: 10, scope: !4477)
!4496 = !DILocation(line: 1420, column: 17, scope: !4477)
!4497 = !DILocation(line: 1425, column: 19, scope: !4477)
!4498 = !DILocation(line: 1426, column: 54, scope: !4477)
!4499 = !DILocation(line: 1426, column: 18, scope: !4477)
!4500 = !DILocation(line: 1427, column: 11, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 1427, column: 11)
!4502 = !DILocation(line: 1427, column: 40, scope: !4501)
!4503 = !DILocation(line: 1427, column: 11, scope: !4477)
!4504 = !DILocation(line: 1428, column: 14, scope: !4501)
!4505 = !DILocation(line: 1428, column: 12, scope: !4501)
!4506 = !DILocation(line: 1428, column: 2, scope: !4501)
!4507 = !DILocation(line: 1430, column: 13, scope: !4477)
!4508 = distinct !{!4508, !4490, !4509}
!4509 = !DILocation(line: 1431, column: 5, scope: !4469)
!4510 = !DILocation(line: 1432, column: 1, scope: !4469)
!4511 = distinct !DISubprogram(name: "clear_line_info", scope: !3, file: !3, line: 262, type: !4177, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4512)
!4512 = !{!4513}
!4513 = !DILocalVariable(name: "data_in", arg: 1, scope: !4511, file: !3, line: 262, type: !2891)
!4514 = !DILocation(line: 0, scope: !4511)
!4515 = !DILocation(line: 264, column: 16, scope: !4516)
!4516 = distinct !DILexicalBlock(scope: !4511, file: !3, line: 264, column: 7)
!4517 = !DILocation(line: 264, column: 7, scope: !4516)
!4518 = !DILocation(line: 264, column: 7, scope: !4511)
!4519 = !DILocation(line: 265, column: 18, scope: !4516)
!4520 = !DILocation(line: 265, column: 5, scope: !4516)
!4521 = !DILocation(line: 266, column: 25, scope: !4511)
!4522 = !DILocation(line: 267, column: 12, scope: !4511)
!4523 = !DILocation(line: 267, column: 25, scope: !4511)
!4524 = !DILocation(line: 268, column: 12, scope: !4511)
!4525 = !DILocation(line: 268, column: 24, scope: !4511)
!4526 = !DILocation(line: 269, column: 1, scope: !4511)
!4527 = distinct !DISubprogram(name: "VEC_basic_block_base_length", scope: !337, file: !337, line: 281, type: !4528, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4532)
!4528 = !DISubroutineType(types: !4529)
!4529 = !{!7, !4530}
!4530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2388)
!4532 = !{!4533}
!4533 = !DILocalVariable(name: "vec_", arg: 1, scope: !4527, file: !337, line: 281, type: !4530)
!4534 = !DILocation(line: 0, scope: !4527)
!4535 = !DILocation(line: 281, column: 1, scope: !4527)
!4536 = distinct !DISubprogram(name: "VEC_basic_block_gc_safe_grow_cleared", scope: !337, file: !337, line: 282, type: !4537, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4540)
!4537 = !DISubroutineType(types: !4538)
!4538 = !{null, !4539, !1461}
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2383, size: 64)
!4540 = !{!4541, !4542, !4543}
!4541 = !DILocalVariable(name: "vec_", arg: 1, scope: !4536, file: !337, line: 282, type: !4539)
!4542 = !DILocalVariable(name: "size_", arg: 2, scope: !4536, file: !337, line: 282, type: !1461)
!4543 = !DILocalVariable(name: "oldsize", scope: !4536, file: !337, line: 282, type: !1461)
!4544 = !DILocation(line: 0, scope: !4536)
!4545 = !DILocation(line: 282, column: 1, scope: !4536)
!4546 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !337, file: !337, line: 281, type: !4547, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4549)
!4547 = !DISubroutineType(types: !4548)
!4548 = !{!2380, !4530, !7}
!4549 = !{!4550, !4551}
!4550 = !DILocalVariable(name: "vec_", arg: 1, scope: !4546, file: !337, line: 281, type: !4530)
!4551 = !DILocalVariable(name: "ix_", arg: 2, scope: !4546, file: !337, line: 281, type: !7)
!4552 = !DILocation(line: 0, scope: !4546)
!4553 = !DILocation(line: 281, column: 1, scope: !4546)
!4554 = distinct !DISubprogram(name: "make_new_block", scope: !3, file: !3, line: 708, type: !4555, scopeLine: 709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4557)
!4555 = !DISubroutineType(types: !4556)
!4556 = !{!2380, !2213, !7}
!4557 = !{!4558, !4559, !4560}
!4558 = !DILocalVariable(name: "fn", arg: 1, scope: !4554, file: !3, line: 708, type: !2213)
!4559 = !DILocalVariable(name: "index", arg: 2, scope: !4554, file: !3, line: 708, type: !7)
!4560 = !DILocalVariable(name: "bb", scope: !4554, file: !3, line: 710, type: !2380)
!4561 = !DILocation(line: 0, scope: !4554)
!4562 = !DILocation(line: 710, column: 20, scope: !4554)
!4563 = !DILocation(line: 711, column: 7, scope: !4554)
!4564 = !DILocation(line: 711, column: 13, scope: !4554)
!4565 = !DILocation(line: 712, column: 3, scope: !4554)
!4566 = !DILocation(line: 713, column: 19, scope: !4554)
!4567 = !DILocation(line: 713, column: 10, scope: !4554)
!4568 = !DILocation(line: 713, column: 17, scope: !4554)
!4569 = !DILocation(line: 714, column: 3, scope: !4554)
!4570 = !DILocation(line: 714, column: 35, scope: !4554)
!4571 = !DILocation(line: 715, column: 7, scope: !4554)
!4572 = !DILocation(line: 715, column: 13, scope: !4554)
!4573 = !DILocation(line: 716, column: 19, scope: !4554)
!4574 = !DILocation(line: 716, column: 3, scope: !4554)
!4575 = !DILocation(line: 717, column: 3, scope: !4554)
!4576 = distinct !DISubprogram(name: "VEC_basic_block_gc_safe_grow", scope: !337, file: !337, line: 282, type: !4537, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4577)
!4577 = !{!4578, !4579}
!4578 = !DILocalVariable(name: "vec_", arg: 1, scope: !4576, file: !337, line: 282, type: !4539)
!4579 = !DILocalVariable(name: "size_", arg: 2, scope: !4576, file: !337, line: 282, type: !1461)
!4580 = !DILocation(line: 0, scope: !4576)
!4581 = !DILocation(line: 282, column: 1, scope: !4576)
!4582 = distinct !DISubprogram(name: "VEC_basic_block_base_address", scope: !337, file: !337, line: 281, type: !4583, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4587)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!4585, !4586}
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2380, size: 64)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!4587 = !{!4588}
!4588 = !DILocalVariable(name: "vec_", arg: 1, scope: !4582, file: !337, line: 281, type: !4586)
!4589 = !DILocation(line: 0, scope: !4582)
!4590 = !DILocation(line: 281, column: 1, scope: !4582)
!4591 = distinct !DISubprogram(name: "VEC_basic_block_gc_reserve_exact", scope: !337, file: !337, line: 282, type: !4592, scopeLine: 282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4594)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!1461, !4539, !1461}
!4594 = !{!4595, !4596, !4597}
!4595 = !DILocalVariable(name: "vec_", arg: 1, scope: !4591, file: !337, line: 282, type: !4539)
!4596 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4591, file: !337, line: 282, type: !1461)
!4597 = !DILocalVariable(name: "extend", scope: !4591, file: !337, line: 282, type: !1461)
!4598 = !DILocation(line: 0, scope: !4591)
!4599 = !DILocation(line: 282, column: 1, scope: !4591)
!4600 = !DILocation(line: 282, column: 1, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4591, file: !337, line: 282, column: 1)
!4602 = distinct !DISubprogram(name: "VEC_basic_block_base_space", scope: !337, file: !337, line: 281, type: !4603, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4605)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{!1461, !4586, !1461}
!4605 = !{!4606, !4607}
!4606 = !DILocalVariable(name: "vec_", arg: 1, scope: !4602, file: !337, line: 281, type: !4586)
!4607 = !DILocalVariable(name: "alloc_", arg: 2, scope: !4602, file: !337, line: 281, type: !1461)
!4608 = !DILocation(line: 0, scope: !4602)
!4609 = !DILocation(line: 281, column: 1, scope: !4602)
!4610 = distinct !DISubprogram(name: "VEC_basic_block_base_replace", scope: !337, file: !337, line: 281, type: !4611, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4613)
!4611 = !DISubroutineType(types: !4612)
!4612 = !{!2380, !4586, !7, !2380}
!4613 = !{!4614, !4615, !4616, !4617}
!4614 = !DILocalVariable(name: "vec_", arg: 1, scope: !4610, file: !337, line: 281, type: !4586)
!4615 = !DILocalVariable(name: "ix_", arg: 2, scope: !4610, file: !337, line: 281, type: !7)
!4616 = !DILocalVariable(name: "obj_", arg: 3, scope: !4610, file: !337, line: 281, type: !2380)
!4617 = !DILocalVariable(name: "old_obj_", scope: !4610, file: !337, line: 281, type: !2380)
!4618 = !DILocation(line: 0, scope: !4610)
!4619 = !DILocation(line: 281, column: 1, scope: !4610)
!4620 = distinct !DISubprogram(name: "set_bb_seq", scope: !652, file: !652, line: 246, type: !4621, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4623)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{null, !2380, !1781}
!4623 = !{!4624, !4625}
!4624 = !DILocalVariable(name: "bb", arg: 1, scope: !4620, file: !652, line: 246, type: !2380)
!4625 = !DILocalVariable(name: "seq", arg: 2, scope: !4620, file: !652, line: 246, type: !1781)
!4626 = !DILocation(line: 0, scope: !4620)
!4627 = !DILocation(line: 248, column: 3, scope: !4620)
!4628 = !DILocation(line: 249, column: 10, scope: !4620)
!4629 = !DILocation(line: 249, column: 18, scope: !4620)
!4630 = !DILocation(line: 249, column: 22, scope: !4620)
!4631 = !DILocation(line: 250, column: 1, scope: !4620)
!4632 = distinct !DISubprogram(name: "lto_tag_check", scope: !3, file: !3, line: 103, type: !4633, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4635)
!4633 = !DISubroutineType(types: !4634)
!4634 = !{null, !602, !602}
!4635 = !{!4636, !4637}
!4636 = !DILocalVariable(name: "actual", arg: 1, scope: !4632, file: !3, line: 103, type: !602)
!4637 = !DILocalVariable(name: "expected", arg: 2, scope: !4632, file: !3, line: 103, type: !602)
!4638 = !DILocation(line: 0, scope: !4632)
!4639 = !DILocation(line: 105, column: 14, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 105, column: 7)
!4641 = !DILocation(line: 105, column: 7, scope: !4632)
!4642 = !DILocation(line: 107, column: 7, scope: !4640)
!4643 = !DILocation(line: 107, column: 32, scope: !4640)
!4644 = !DILocation(line: 106, column: 5, scope: !4640)
!4645 = !DILocation(line: 108, column: 1, scope: !4632)
!4646 = distinct !DISubprogram(name: "input_ssa_names", scope: !3, file: !3, line: 849, type: !4647, scopeLine: 851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4649)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{null, !3815, !2891, !2213}
!4649 = !{!4650, !4651, !4652, !4653, !4654, !4655, !4657, !4658}
!4650 = !DILocalVariable(name: "ib", arg: 1, scope: !4646, file: !3, line: 849, type: !3815)
!4651 = !DILocalVariable(name: "data_in", arg: 2, scope: !4646, file: !3, line: 849, type: !2891)
!4652 = !DILocalVariable(name: "fn", arg: 3, scope: !4646, file: !3, line: 850, type: !2213)
!4653 = !DILocalVariable(name: "i", scope: !4646, file: !3, line: 852, type: !7)
!4654 = !DILocalVariable(name: "size", scope: !4646, file: !3, line: 852, type: !7)
!4655 = !DILocalVariable(name: "ssa_name", scope: !4656, file: !3, line: 860, type: !1468)
!4656 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 859, column: 5)
!4657 = !DILocalVariable(name: "name", scope: !4656, file: !3, line: 860, type: !1468)
!4658 = !DILocalVariable(name: "is_default_def", scope: !4656, file: !3, line: 861, type: !1460)
!4659 = !DILocation(line: 0, scope: !4646)
!4660 = !DILocation(line: 854, column: 10, scope: !4646)
!4661 = !DILocation(line: 855, column: 3, scope: !4646)
!4662 = !DILocation(line: 857, column: 7, scope: !4646)
!4663 = !DILocation(line: 0, scope: !4656)
!4664 = !DILocation(line: 858, column: 3, scope: !4646)
!4665 = !DILocation(line: 864, column: 7, scope: !4656)
!4666 = !DILocation(line: 864, column: 14, scope: !4656)
!4667 = !DILocation(line: 864, column: 47, scope: !4656)
!4668 = !DILocation(line: 865, column: 2, scope: !4656)
!4669 = distinct !{!4669, !4665, !4668}
!4670 = !DILocation(line: 867, column: 25, scope: !4656)
!4671 = !DILocation(line: 867, column: 51, scope: !4656)
!4672 = !DILocation(line: 868, column: 14, scope: !4656)
!4673 = !DILocation(line: 869, column: 46, scope: !4656)
!4674 = !DILocation(line: 869, column: 18, scope: !4656)
!4675 = !DILocation(line: 871, column: 11, scope: !4656)
!4676 = !DILocation(line: 872, column: 19, scope: !4677)
!4677 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 871, column: 11)
!4678 = !DILocation(line: 872, column: 2, scope: !4677)
!4679 = !DILocation(line: 874, column: 11, scope: !4656)
!4680 = distinct !{!4680, !4664, !4681}
!4681 = !DILocation(line: 875, column: 5, scope: !4646)
!4682 = !DILocation(line: 876, column: 1, scope: !4646)
!4683 = distinct !DISubprogram(name: "input_eh_regions", scope: !3, file: !3, line: 610, type: !4647, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4684)
!4684 = !{!4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4698, !4704, !4710, !4718}
!4685 = !DILocalVariable(name: "ib", arg: 1, scope: !4683, file: !3, line: 610, type: !3815)
!4686 = !DILocalVariable(name: "data_in", arg: 2, scope: !4683, file: !3, line: 610, type: !2891)
!4687 = !DILocalVariable(name: "fn", arg: 3, scope: !4683, file: !3, line: 611, type: !2213)
!4688 = !DILocalVariable(name: "i", scope: !4683, file: !3, line: 613, type: !1523)
!4689 = !DILocalVariable(name: "root_region", scope: !4683, file: !3, line: 613, type: !1523)
!4690 = !DILocalVariable(name: "len", scope: !4683, file: !3, line: 613, type: !1523)
!4691 = !DILocalVariable(name: "tag", scope: !4683, file: !3, line: 614, type: !602)
!4692 = !DILocalVariable(name: "r", scope: !4693, file: !3, line: 640, type: !2221)
!4693 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 639, column: 2)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 638, column: 7)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 638, column: 7)
!4696 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 636, column: 5)
!4697 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 635, column: 7)
!4698 = !DILocalVariable(name: "lp", scope: !4699, file: !3, line: 653, type: !2295)
!4699 = distinct !DILexicalBlock(scope: !4700, file: !3, line: 652, column: 2)
!4700 = distinct !DILexicalBlock(scope: !4701, file: !3, line: 651, column: 7)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 651, column: 7)
!4702 = distinct !DILexicalBlock(scope: !4703, file: !3, line: 649, column: 5)
!4703 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 648, column: 7)
!4704 = !DILocalVariable(name: "ttype", scope: !4705, file: !3, line: 666, type: !1468)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 665, column: 2)
!4706 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 664, column: 7)
!4707 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 664, column: 7)
!4708 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 662, column: 5)
!4709 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 661, column: 7)
!4710 = !DILocalVariable(name: "t", scope: !4711, file: !3, line: 681, type: !1468)
!4711 = distinct !DILexicalBlock(scope: !4712, file: !3, line: 680, column: 6)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 679, column: 4)
!4713 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 679, column: 4)
!4714 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 677, column: 2)
!4715 = distinct !DILexicalBlock(scope: !4716, file: !3, line: 676, column: 11)
!4716 = distinct !DILexicalBlock(scope: !4717, file: !3, line: 675, column: 5)
!4717 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 674, column: 7)
!4718 = !DILocalVariable(name: "c", scope: !4719, file: !3, line: 690, type: !2374)
!4719 = distinct !DILexicalBlock(scope: !4720, file: !3, line: 689, column: 6)
!4720 = distinct !DILexicalBlock(scope: !4721, file: !3, line: 688, column: 4)
!4721 = distinct !DILexicalBlock(scope: !4722, file: !3, line: 688, column: 4)
!4722 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 686, column: 2)
!4723 = !DILocation(line: 0, scope: !4683)
!4724 = !DILocation(line: 616, column: 9, scope: !4683)
!4725 = !DILocation(line: 617, column: 11, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4683, file: !3, line: 617, column: 7)
!4727 = !DILocation(line: 617, column: 7, scope: !4683)
!4728 = !DILocation(line: 620, column: 3, scope: !4683)
!4729 = !DILocation(line: 625, column: 3, scope: !4683)
!4730 = !DILocation(line: 627, column: 3, scope: !4683)
!4731 = !DILocation(line: 629, column: 17, scope: !4683)
!4732 = !DILocation(line: 630, column: 3, scope: !4683)
!4733 = !DILocation(line: 633, column: 9, scope: !4683)
!4734 = !DILocation(line: 634, column: 3, scope: !4683)
!4735 = !DILocation(line: 635, column: 11, scope: !4697)
!4736 = !DILocation(line: 635, column: 7, scope: !4683)
!4737 = !DILocation(line: 637, column: 7, scope: !4696)
!4738 = !DILocation(line: 638, column: 12, scope: !4695)
!4739 = !DILocation(line: 0, scope: !4695)
!4740 = !DILocation(line: 638, column: 21, scope: !4694)
!4741 = !DILocation(line: 638, column: 7, scope: !4695)
!4742 = !DILocation(line: 640, column: 48, scope: !4693)
!4743 = !DILocation(line: 640, column: 18, scope: !4693)
!4744 = !DILocation(line: 0, scope: !4693)
!4745 = !DILocation(line: 641, column: 4, scope: !4693)
!4746 = !DILocation(line: 638, column: 29, scope: !4694)
!4747 = !DILocation(line: 638, column: 7, scope: !4694)
!4748 = distinct !{!4748, !4741, !4749}
!4749 = !DILocation(line: 642, column: 2, scope: !4695)
!4750 = !DILocation(line: 646, column: 9, scope: !4683)
!4751 = !DILocation(line: 647, column: 3, scope: !4683)
!4752 = !DILocation(line: 648, column: 11, scope: !4703)
!4753 = !DILocation(line: 648, column: 7, scope: !4683)
!4754 = !DILocation(line: 650, column: 7, scope: !4702)
!4755 = !DILocation(line: 651, column: 12, scope: !4701)
!4756 = !DILocation(line: 0, scope: !4701)
!4757 = !DILocation(line: 651, column: 21, scope: !4700)
!4758 = !DILocation(line: 651, column: 7, scope: !4701)
!4759 = !DILocation(line: 653, column: 50, scope: !4699)
!4760 = !DILocation(line: 653, column: 24, scope: !4699)
!4761 = !DILocation(line: 0, scope: !4699)
!4762 = !DILocation(line: 654, column: 4, scope: !4699)
!4763 = !DILocation(line: 651, column: 29, scope: !4700)
!4764 = !DILocation(line: 651, column: 7, scope: !4700)
!4765 = distinct !{!4765, !4758, !4766}
!4766 = !DILocation(line: 655, column: 2, scope: !4701)
!4767 = !DILocation(line: 659, column: 9, scope: !4683)
!4768 = !DILocation(line: 660, column: 3, scope: !4683)
!4769 = !DILocation(line: 661, column: 11, scope: !4709)
!4770 = !DILocation(line: 661, column: 7, scope: !4683)
!4771 = !DILocation(line: 663, column: 7, scope: !4708)
!4772 = !DILocation(line: 664, column: 12, scope: !4707)
!4773 = !DILocation(line: 0, scope: !4707)
!4774 = !DILocation(line: 664, column: 21, scope: !4706)
!4775 = !DILocation(line: 664, column: 7, scope: !4707)
!4776 = !DILocation(line: 666, column: 17, scope: !4705)
!4777 = !DILocation(line: 0, scope: !4705)
!4778 = !DILocation(line: 667, column: 4, scope: !4705)
!4779 = !DILocation(line: 664, column: 29, scope: !4706)
!4780 = !DILocation(line: 664, column: 7, scope: !4706)
!4781 = distinct !{!4781, !4775, !4782}
!4782 = !DILocation(line: 668, column: 2, scope: !4707)
!4783 = !DILocation(line: 672, column: 9, scope: !4683)
!4784 = !DILocation(line: 673, column: 3, scope: !4683)
!4785 = !DILocation(line: 674, column: 11, scope: !4717)
!4786 = !DILocation(line: 674, column: 7, scope: !4683)
!4787 = !DILocation(line: 676, column: 19, scope: !4715)
!4788 = !DILocation(line: 676, column: 11, scope: !4715)
!4789 = !DILocation(line: 0, scope: !4715)
!4790 = !DILocation(line: 676, column: 11, scope: !4716)
!4791 = !DILocation(line: 678, column: 4, scope: !4714)
!4792 = !DILocation(line: 679, column: 9, scope: !4713)
!4793 = !DILocation(line: 0, scope: !4713)
!4794 = !DILocation(line: 679, column: 18, scope: !4712)
!4795 = !DILocation(line: 679, column: 4, scope: !4713)
!4796 = !DILocation(line: 681, column: 17, scope: !4711)
!4797 = !DILocation(line: 0, scope: !4711)
!4798 = !DILocation(line: 682, column: 8, scope: !4711)
!4799 = !DILocation(line: 679, column: 26, scope: !4712)
!4800 = !DILocation(line: 679, column: 4, scope: !4712)
!4801 = distinct !{!4801, !4795, !4802}
!4802 = !DILocation(line: 683, column: 6, scope: !4713)
!4803 = !DILocation(line: 687, column: 4, scope: !4722)
!4804 = !DILocation(line: 688, column: 9, scope: !4721)
!4805 = !DILocation(line: 0, scope: !4721)
!4806 = !DILocation(line: 688, column: 18, scope: !4720)
!4807 = !DILocation(line: 688, column: 4, scope: !4721)
!4808 = !DILocation(line: 690, column: 18, scope: !4719)
!4809 = !DILocation(line: 0, scope: !4719)
!4810 = !DILocation(line: 691, column: 8, scope: !4719)
!4811 = !DILocation(line: 688, column: 26, scope: !4720)
!4812 = !DILocation(line: 688, column: 4, scope: !4720)
!4813 = distinct !{!4813, !4807, !4814}
!4814 = !DILocation(line: 692, column: 6, scope: !4721)
!4815 = !DILocation(line: 698, column: 3, scope: !4683)
!4816 = !DILocation(line: 700, column: 9, scope: !4683)
!4817 = !DILocation(line: 701, column: 3, scope: !4683)
!4818 = !DILocation(line: 702, column: 1, scope: !4683)
!4819 = distinct !DISubprogram(name: "input_bb", scope: !3, file: !3, line: 1175, type: !4820, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4822)
!4820 = !DISubroutineType(types: !4821)
!4821 = !{null, !3815, !602, !2891, !2213}
!4822 = !{!4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4832, !4835}
!4823 = !DILocalVariable(name: "ib", arg: 1, scope: !4819, file: !3, line: 1175, type: !3815)
!4824 = !DILocalVariable(name: "tag", arg: 2, scope: !4819, file: !3, line: 1175, type: !602)
!4825 = !DILocalVariable(name: "data_in", arg: 3, scope: !4819, file: !3, line: 1176, type: !2891)
!4826 = !DILocalVariable(name: "fn", arg: 4, scope: !4819, file: !3, line: 1176, type: !2213)
!4827 = !DILocalVariable(name: "index", scope: !4819, file: !3, line: 1178, type: !7)
!4828 = !DILocalVariable(name: "bb", scope: !4819, file: !3, line: 1179, type: !2380)
!4829 = !DILocalVariable(name: "bsi", scope: !4819, file: !3, line: 1180, type: !4322)
!4830 = !DILocalVariable(name: "stmt", scope: !4831, file: !3, line: 1202, type: !1791)
!4831 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 1201, column: 5)
!4832 = !DILocalVariable(name: "region", scope: !4833, file: !3, line: 1221, type: !1523)
!4833 = distinct !DILexicalBlock(scope: !4834, file: !3, line: 1220, column: 2)
!4834 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 1219, column: 11)
!4835 = !DILocalVariable(name: "phi", scope: !4836, file: !3, line: 1232, type: !1791)
!4836 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 1231, column: 5)
!4837 = !DILocation(line: 0, scope: !4819)
!4838 = !DILocation(line: 1180, column: 3, scope: !4819)
!4839 = !DILocation(line: 1184, column: 3, scope: !4819)
!4840 = !DILocation(line: 1186, column: 11, scope: !4819)
!4841 = !DILocation(line: 1187, column: 8, scope: !4819)
!4842 = !DILocation(line: 1189, column: 15, scope: !4819)
!4843 = !DILocation(line: 1189, column: 7, scope: !4819)
!4844 = !DILocation(line: 1189, column: 13, scope: !4819)
!4845 = !DILocation(line: 1190, column: 20, scope: !4819)
!4846 = !DILocation(line: 1190, column: 7, scope: !4819)
!4847 = !DILocation(line: 1190, column: 18, scope: !4819)
!4848 = !DILocation(line: 1191, column: 19, scope: !4819)
!4849 = !DILocation(line: 1191, column: 7, scope: !4819)
!4850 = !DILocation(line: 1191, column: 17, scope: !4819)
!4851 = !DILocation(line: 1192, column: 15, scope: !4819)
!4852 = !DILocation(line: 1192, column: 7, scope: !4819)
!4853 = !DILocation(line: 1192, column: 13, scope: !4819)
!4854 = !DILocation(line: 1195, column: 11, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 1195, column: 7)
!4856 = !DILocation(line: 1195, column: 7, scope: !4819)
!4857 = !DILocation(line: 1198, column: 9, scope: !4819)
!4858 = !DILocation(line: 1199, column: 9, scope: !4819)
!4859 = !DILocation(line: 1200, column: 3, scope: !4819)
!4860 = !DILocation(line: 1202, column: 21, scope: !4831)
!4861 = !DILocation(line: 0, scope: !4831)
!4862 = !DILocation(line: 1207, column: 12, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 1207, column: 11)
!4864 = !DILocation(line: 1208, column: 4, scope: !4863)
!4865 = !DILocation(line: 1208, column: 7, scope: !4863)
!4866 = !DILocation(line: 1207, column: 11, scope: !4831)
!4867 = !DILocation(line: 1209, column: 9, scope: !4863)
!4868 = !DILocation(line: 1209, column: 2, scope: !4863)
!4869 = !DILocation(line: 1211, column: 7, scope: !4831)
!4870 = !DILocation(line: 1212, column: 7, scope: !4831)
!4871 = !DILocation(line: 1216, column: 13, scope: !4831)
!4872 = !DILocation(line: 1217, column: 7, scope: !4831)
!4873 = !DILocation(line: 1219, column: 15, scope: !4834)
!4874 = !DILocation(line: 1219, column: 11, scope: !4831)
!4875 = !DILocation(line: 1221, column: 27, scope: !4833)
!4876 = !DILocation(line: 0, scope: !4833)
!4877 = !DILocation(line: 1222, column: 4, scope: !4833)
!4878 = !DILocation(line: 1223, column: 29, scope: !4833)
!4879 = !DILocation(line: 1223, column: 4, scope: !4833)
!4880 = !DILocation(line: 1224, column: 2, scope: !4833)
!4881 = !DILocation(line: 1226, column: 13, scope: !4831)
!4882 = distinct !{!4882, !4859, !4883}
!4883 = !DILocation(line: 1227, column: 5, scope: !4819)
!4884 = !DILocation(line: 1229, column: 9, scope: !4819)
!4885 = !DILocation(line: 1230, column: 3, scope: !4819)
!4886 = !DILocation(line: 1232, column: 20, scope: !4836)
!4887 = !DILocation(line: 0, scope: !4836)
!4888 = !DILocation(line: 1233, column: 7, scope: !4836)
!4889 = !DILocation(line: 1234, column: 13, scope: !4836)
!4890 = distinct !{!4890, !4885, !4891}
!4891 = !DILocation(line: 1235, column: 5, scope: !4819)
!4892 = !DILocation(line: 1236, column: 1, scope: !4819)
!4893 = distinct !DISubprogram(name: "gimple_stmt_max_uid", scope: !4894, file: !4894, line: 150, type: !4895, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4897)
!4894 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!7, !2213}
!4897 = !{!4898}
!4898 = !DILocalVariable(name: "fn", arg: 1, scope: !4893, file: !4894, line: 150, type: !2213)
!4899 = !DILocation(line: 0, scope: !4893)
!4900 = !DILocation(line: 152, column: 14, scope: !4893)
!4901 = !DILocation(line: 152, column: 3, scope: !4893)
!4902 = distinct !DISubprogram(name: "gsi_start_bb", scope: !652, file: !652, line: 4418, type: !4903, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4905)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!4322, !2380}
!4905 = !{!4906, !4907, !4908}
!4906 = !DILocalVariable(name: "bb", arg: 1, scope: !4902, file: !652, line: 4418, type: !2380)
!4907 = !DILocalVariable(name: "i", scope: !4902, file: !652, line: 4420, type: !4322)
!4908 = !DILocalVariable(name: "seq", scope: !4902, file: !652, line: 4421, type: !1781)
!4909 = !DILocation(line: 0, scope: !4902)
!4910 = !DILocation(line: 4420, column: 24, scope: !4902)
!4911 = !DILocation(line: 4423, column: 9, scope: !4902)
!4912 = !DILocation(line: 4424, column: 11, scope: !4902)
!4913 = !DILocation(line: 4424, column: 5, scope: !4902)
!4914 = !DILocation(line: 4424, column: 9, scope: !4902)
!4915 = !DILocation(line: 4425, column: 5, scope: !4902)
!4916 = !DILocation(line: 4425, column: 9, scope: !4902)
!4917 = !DILocation(line: 4426, column: 5, scope: !4902)
!4918 = !DILocation(line: 4426, column: 8, scope: !4902)
!4919 = !DILocation(line: 4429, column: 1, scope: !4902)
!4920 = distinct !DISubprogram(name: "gsi_end_p", scope: !652, file: !652, line: 4467, type: !4921, scopeLine: 4468, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4923)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{!1460, !4322}
!4923 = !{!4924}
!4924 = !DILocalVariable(name: "i", arg: 1, scope: !4920, file: !652, line: 4467, type: !4322)
!4925 = !DILocation(line: 4467, column: 33, scope: !4920)
!4926 = !DILocation(line: 4469, column: 12, scope: !4920)
!4927 = !DILocation(line: 4469, column: 16, scope: !4920)
!4928 = !DILocation(line: 4469, column: 10, scope: !4920)
!4929 = !DILocation(line: 4469, column: 3, scope: !4920)
!4930 = distinct !DISubprogram(name: "gsi_stmt", scope: !652, file: !652, line: 4501, type: !4931, scopeLine: 4502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4933)
!4931 = !DISubroutineType(types: !4932)
!4932 = !{!1791, !4322}
!4933 = !{!4934}
!4934 = !DILocalVariable(name: "i", arg: 1, scope: !4930, file: !652, line: 4501, type: !4322)
!4935 = !DILocation(line: 4501, column: 32, scope: !4930)
!4936 = !DILocation(line: 4503, column: 12, scope: !4930)
!4937 = !DILocation(line: 4503, column: 17, scope: !4930)
!4938 = !DILocation(line: 4503, column: 3, scope: !4930)
!4939 = distinct !DISubprogram(name: "gimple_uid", scope: !652, file: !652, line: 1265, type: !4940, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4943)
!4940 = !DISubroutineType(types: !4941)
!4941 = !{!7, !4942}
!4942 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !1449, line: 60, baseType: !3230)
!4943 = !{!4944}
!4944 = !DILocalVariable(name: "g", arg: 1, scope: !4939, file: !652, line: 1265, type: !4942)
!4945 = !DILocation(line: 0, scope: !4939)
!4946 = !DILocation(line: 1267, column: 20, scope: !4939)
!4947 = !DILocation(line: 1267, column: 3, scope: !4939)
!4948 = distinct !DISubprogram(name: "gsi_next", scope: !652, file: !652, line: 4485, type: !4949, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4952)
!4949 = !DISubroutineType(types: !4950)
!4950 = !{null, !4951}
!4951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4952 = !{!4953}
!4953 = !DILocalVariable(name: "i", arg: 1, scope: !4948, file: !652, line: 4485, type: !4951)
!4954 = !DILocation(line: 0, scope: !4948)
!4955 = !DILocation(line: 4487, column: 15, scope: !4948)
!4956 = !DILocation(line: 4487, column: 20, scope: !4948)
!4957 = !DILocation(line: 4487, column: 10, scope: !4948)
!4958 = !DILocation(line: 4488, column: 1, scope: !4948)
!4959 = distinct !DISubprogram(name: "ei_start_1", scope: !337, file: !337, line: 696, type: !4960, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4962)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{!4334, !4339}
!4962 = !{!4963, !4964}
!4963 = !DILocalVariable(name: "ev", arg: 1, scope: !4959, file: !337, line: 696, type: !4339)
!4964 = !DILocalVariable(name: "i", scope: !4959, file: !337, line: 698, type: !4334)
!4965 = !DILocation(line: 0, scope: !4959)
!4966 = !DILocation(line: 700, column: 5, scope: !4959)
!4967 = !DILocation(line: 700, column: 11, scope: !4959)
!4968 = !DILocation(line: 701, column: 5, scope: !4959)
!4969 = !DILocation(line: 701, column: 15, scope: !4959)
!4970 = !DILocation(line: 703, column: 3, scope: !4959)
!4971 = distinct !DISubprogram(name: "bb_seq", scope: !652, file: !652, line: 237, type: !4972, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4977)
!4972 = !DISubroutineType(types: !4973)
!4973 = !{!1781, !4974}
!4974 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !1449, line: 112, baseType: !4975)
!4975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4976, size: 64)
!4976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1756)
!4977 = !{!4978}
!4978 = !DILocalVariable(name: "bb", arg: 1, scope: !4971, file: !652, line: 237, type: !4974)
!4979 = !DILocation(line: 0, scope: !4971)
!4980 = !DILocation(line: 239, column: 17, scope: !4971)
!4981 = !DILocation(line: 239, column: 23, scope: !4971)
!4982 = !DILocation(line: 239, column: 33, scope: !4971)
!4983 = !DILocation(line: 239, column: 43, scope: !4971)
!4984 = !DILocation(line: 239, column: 36, scope: !4971)
!4985 = !DILocation(line: 239, column: 10, scope: !4971)
!4986 = !DILocation(line: 239, column: 68, scope: !4971)
!4987 = !DILocation(line: 239, column: 3, scope: !4971)
!4988 = distinct !DISubprogram(name: "ei_edge", scope: !337, file: !337, line: 752, type: !4989, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4991)
!4989 = !DISubroutineType(types: !4990)
!4990 = !{!1771, !4334}
!4991 = !{!4992}
!4992 = !DILocalVariable(name: "i", arg: 1, scope: !4988, file: !337, line: 752, type: !4334)
!4993 = !DILocation(line: 754, column: 10, scope: !4988)
!4994 = !DILocation(line: 754, column: 3, scope: !4988)
!4995 = distinct !DISubprogram(name: "fixup_call_stmt_edges", scope: !3, file: !3, line: 1252, type: !3041, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4996)
!4996 = !{!4997, !4998, !4999}
!4997 = !DILocalVariable(name: "orig", arg: 1, scope: !4995, file: !3, line: 1252, type: !2932)
!4998 = !DILocalVariable(name: "stmts", arg: 2, scope: !4995, file: !3, line: 1252, type: !3043)
!4999 = !DILocalVariable(name: "node", scope: !4995, file: !3, line: 1254, type: !2932)
!5000 = !DILocation(line: 0, scope: !4995)
!5001 = !DILocation(line: 1256, column: 3, scope: !4995)
!5002 = !DILocation(line: 1256, column: 16, scope: !4995)
!5003 = distinct !{!5003, !5001, !5004}
!5004 = !DILocation(line: 1257, column: 18, scope: !4995)
!5005 = !DILocation(line: 1259, column: 3, scope: !4995)
!5006 = !DILocation(line: 1260, column: 13, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 1260, column: 7)
!5008 = !DILocation(line: 1260, column: 7, scope: !5007)
!5009 = !DILocation(line: 1260, column: 7, scope: !4995)
!5010 = !DILocation(line: 1261, column: 10, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 1261, column: 5)
!5012 = !DILocation(line: 0, scope: !5011)
!5013 = !DILocation(line: 1261, column: 36, scope: !5014)
!5014 = distinct !DILexicalBlock(scope: !5011, file: !3, line: 1261, column: 5)
!5015 = !DILocation(line: 1261, column: 5, scope: !5011)
!5016 = !DILocation(line: 1263, column: 2, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !3, line: 1262, column: 7)
!5018 = !DILocation(line: 1264, column: 12, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 1264, column: 6)
!5020 = !DILocation(line: 1264, column: 6, scope: !5019)
!5021 = !DILocation(line: 1264, column: 6, scope: !5017)
!5022 = !DILocation(line: 1265, column: 4, scope: !5019)
!5023 = !DILocation(line: 1266, column: 17, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 1266, column: 11)
!5025 = !DILocation(line: 1266, column: 11, scope: !5024)
!5026 = !DILocation(line: 1266, column: 11, scope: !5019)
!5027 = !DILocation(line: 1270, column: 6, scope: !5028)
!5028 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 1269, column: 4)
!5029 = !DILocation(line: 1267, column: 4, scope: !5024)
!5030 = !DILocation(line: 1270, column: 18, scope: !5028)
!5031 = !DILocation(line: 1270, column: 26, scope: !5028)
!5032 = !DILocation(line: 1270, column: 36, scope: !5028)
!5033 = !DILocation(line: 1270, column: 29, scope: !5028)
!5034 = !DILocation(line: 1271, column: 21, scope: !5028)
!5035 = distinct !{!5035, !5027, !5034}
!5036 = !DILocation(line: 1272, column: 10, scope: !5028)
!5037 = !DILocation(line: 1273, column: 21, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5028, file: !3, line: 1272, column: 10)
!5039 = !DILocation(line: 1273, column: 8, scope: !5038)
!5040 = !DILocation(line: 0, scope: !5019)
!5041 = !DILocation(line: 1261, column: 5, scope: !5014)
!5042 = distinct !{!5042, !5015, !5043}
!5043 = !DILocation(line: 1275, column: 7, scope: !5011)
!5044 = !DILocation(line: 1276, column: 1, scope: !4995)
!5045 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !135, file: !135, line: 182, type: !5046, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5050)
!5046 = !DISubroutineType(types: !5047)
!5047 = !{!7, !5048}
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2350)
!5050 = !{!5051}
!5051 = !DILocalVariable(name: "vec_", arg: 1, scope: !5045, file: !135, line: 182, type: !5048)
!5052 = !DILocation(line: 0, scope: !5045)
!5053 = !DILocation(line: 182, column: 1, scope: !5045)
!5054 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !135, file: !135, line: 182, type: !5055, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5058)
!5055 = !DISubroutineType(types: !5056)
!5056 = !{!1826, !5057, !1468}
!5057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2350, size: 64)
!5058 = !{!5059, !5060, !5061}
!5059 = !DILocalVariable(name: "vec_", arg: 1, scope: !5054, file: !135, line: 182, type: !5057)
!5060 = !DILocalVariable(name: "obj_", arg: 2, scope: !5054, file: !135, line: 182, type: !1468)
!5061 = !DILocalVariable(name: "slot_", scope: !5054, file: !135, line: 182, type: !1826)
!5062 = !DILocation(line: 0, scope: !5054)
!5063 = !DILocation(line: 182, column: 1, scope: !5054)
!5064 = distinct !DISubprogram(name: "lto_tag_check_range", scope: !3, file: !3, line: 88, type: !5065, scopeLine: 90, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5067)
!5065 = !DISubroutineType(types: !5066)
!5066 = !{null, !602, !602, !602}
!5067 = !{!5068, !5069, !5070}
!5068 = !DILocalVariable(name: "actual", arg: 1, scope: !5064, file: !3, line: 88, type: !602)
!5069 = !DILocalVariable(name: "tag1", arg: 2, scope: !5064, file: !3, line: 88, type: !602)
!5070 = !DILocalVariable(name: "tag2", arg: 3, scope: !5064, file: !3, line: 89, type: !602)
!5071 = !DILocation(line: 0, scope: !5064)
!5072 = !DILocation(line: 91, column: 14, scope: !5073)
!5073 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 91, column: 7)
!5074 = !DILocation(line: 91, column: 31, scope: !5073)
!5075 = !DILocation(line: 91, column: 21, scope: !5073)
!5076 = !DILocation(line: 94, column: 7, scope: !5073)
!5077 = !DILocation(line: 95, column: 7, scope: !5073)
!5078 = !DILocation(line: 96, column: 7, scope: !5073)
!5079 = !DILocation(line: 92, column: 5, scope: !5073)
!5080 = !DILocation(line: 97, column: 1, scope: !5064)
!5081 = !DILocation(line: 583, column: 7, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 583, column: 7)
!5083 = !DILocation(line: 583, column: 7, scope: !3268)
!5084 = !DILocation(line: 591, column: 19, scope: !3268)
!5085 = !DILocation(line: 592, column: 3, scope: !3268)
!5086 = !DILocation(line: 598, column: 7, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 598, column: 7)
!5088 = !DILocation(line: 598, column: 7, scope: !3268)
!5089 = !DILocation(line: 599, column: 5, scope: !5087)
!5090 = !DILocation(line: 602, column: 20, scope: !3268)
!5091 = !DILocation(line: 603, column: 1, scope: !3268)
!5092 = distinct !DISubprogram(name: "VEC_eh_region_gc_safe_grow", scope: !330, file: !330, line: 185, type: !5093, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5096)
!5093 = !DISubroutineType(types: !5094)
!5094 = !{null, !5095, !1461}
!5095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!5096 = !{!5097, !5098}
!5097 = !DILocalVariable(name: "vec_", arg: 1, scope: !5092, file: !330, line: 185, type: !5095)
!5098 = !DILocalVariable(name: "size_", arg: 2, scope: !5092, file: !330, line: 185, type: !1461)
!5099 = !DILocation(line: 0, scope: !5092)
!5100 = !DILocation(line: 185, column: 1, scope: !5092)
!5101 = distinct !DISubprogram(name: "input_eh_region", scope: !3, file: !3, line: 425, type: !5102, scopeLine: 426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5104)
!5102 = !DISubroutineType(types: !5103)
!5103 = !{!2221, !3815, !2891, !1461}
!5104 = !{!5105, !5106, !5107, !5108, !5109, !5110, !5113}
!5105 = !DILocalVariable(name: "ib", arg: 1, scope: !5101, file: !3, line: 425, type: !3815)
!5106 = !DILocalVariable(name: "data_in", arg: 2, scope: !5101, file: !3, line: 425, type: !2891)
!5107 = !DILocalVariable(name: "ix", arg: 3, scope: !5101, file: !3, line: 425, type: !1461)
!5108 = !DILocalVariable(name: "tag", scope: !5101, file: !3, line: 427, type: !602)
!5109 = !DILocalVariable(name: "r", scope: !5101, file: !3, line: 428, type: !2221)
!5110 = !DILocalVariable(name: "last_catch", scope: !5111, file: !3, line: 454, type: !2237)
!5111 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 453, column: 2)
!5112 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 447, column: 5)
!5113 = !DILocalVariable(name: "l", scope: !5114, file: !3, line: 464, type: !1468)
!5114 = distinct !DILexicalBlock(scope: !5112, file: !3, line: 463, column: 2)
!5115 = !DILocation(line: 0, scope: !5101)
!5116 = !DILocation(line: 431, column: 9, scope: !5101)
!5117 = !DILocation(line: 432, column: 11, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 432, column: 7)
!5119 = !DILocation(line: 432, column: 7, scope: !5101)
!5120 = !DILocation(line: 435, column: 7, scope: !5101)
!5121 = !DILocation(line: 436, column: 14, scope: !5101)
!5122 = !DILocation(line: 436, column: 6, scope: !5101)
!5123 = !DILocation(line: 436, column: 12, scope: !5101)
!5124 = !DILocation(line: 438, column: 3, scope: !5101)
!5125 = !DILocation(line: 442, column: 37, scope: !5101)
!5126 = !DILocation(line: 442, column: 14, scope: !5101)
!5127 = !DILocation(line: 442, column: 6, scope: !5101)
!5128 = !DILocation(line: 442, column: 12, scope: !5101)
!5129 = !DILocation(line: 443, column: 37, scope: !5101)
!5130 = !DILocation(line: 443, column: 14, scope: !5101)
!5131 = !DILocation(line: 443, column: 6, scope: !5101)
!5132 = !DILocation(line: 443, column: 12, scope: !5101)
!5133 = !DILocation(line: 444, column: 41, scope: !5101)
!5134 = !DILocation(line: 444, column: 18, scope: !5101)
!5135 = !DILocation(line: 444, column: 6, scope: !5101)
!5136 = !DILocation(line: 444, column: 16, scope: !5101)
!5137 = !DILocation(line: 446, column: 3, scope: !5101)
!5138 = !DILocation(line: 449, column: 5, scope: !5112)
!5139 = !DILocation(line: 449, column: 10, scope: !5112)
!5140 = !DILocation(line: 450, column: 2, scope: !5112)
!5141 = !DILocation(line: 454, column: 4, scope: !5111)
!5142 = !DILocation(line: 455, column: 7, scope: !5111)
!5143 = !DILocation(line: 455, column: 12, scope: !5111)
!5144 = !DILocation(line: 0, scope: !5111)
!5145 = !DILocation(line: 456, column: 30, scope: !5111)
!5146 = !DILocation(line: 456, column: 7, scope: !5111)
!5147 = !DILocation(line: 456, column: 16, scope: !5111)
!5148 = !DILocation(line: 456, column: 28, scope: !5111)
!5149 = !DILocation(line: 458, column: 29, scope: !5111)
!5150 = !DILocation(line: 458, column: 16, scope: !5111)
!5151 = !DILocation(line: 458, column: 27, scope: !5111)
!5152 = !DILocation(line: 460, column: 2, scope: !5112)
!5153 = !DILocation(line: 466, column: 7, scope: !5114)
!5154 = !DILocation(line: 466, column: 12, scope: !5114)
!5155 = !DILocation(line: 467, column: 29, scope: !5114)
!5156 = !DILocation(line: 467, column: 7, scope: !5114)
!5157 = !DILocation(line: 467, column: 17, scope: !5114)
!5158 = !DILocation(line: 467, column: 27, scope: !5114)
!5159 = !DILocation(line: 468, column: 25, scope: !5114)
!5160 = !DILocation(line: 468, column: 17, scope: !5114)
!5161 = !DILocation(line: 468, column: 23, scope: !5114)
!5162 = !DILocation(line: 469, column: 26, scope: !5114)
!5163 = !DILocation(line: 469, column: 17, scope: !5114)
!5164 = !DILocation(line: 469, column: 24, scope: !5114)
!5165 = !DILocation(line: 471, column: 9, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 471, column: 4)
!5167 = !DILocation(line: 0, scope: !5166)
!5168 = !DILocation(line: 0, scope: !5114)
!5169 = !DILocation(line: 471, column: 4, scope: !5166)
!5170 = !DILocation(line: 472, column: 28, scope: !5171)
!5171 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 471, column: 4)
!5172 = !DILocation(line: 472, column: 6, scope: !5171)
!5173 = !DILocation(line: 471, column: 45, scope: !5171)
!5174 = !DILocation(line: 471, column: 4, scope: !5171)
!5175 = distinct !{!5175, !5169, !5176}
!5176 = !DILocation(line: 472, column: 42, scope: !5166)
!5177 = !DILocation(line: 477, column: 5, scope: !5112)
!5178 = !DILocation(line: 477, column: 10, scope: !5112)
!5179 = !DILocation(line: 478, column: 37, scope: !5112)
!5180 = !DILocation(line: 478, column: 5, scope: !5112)
!5181 = !DILocation(line: 478, column: 22, scope: !5112)
!5182 = !DILocation(line: 478, column: 35, scope: !5112)
!5183 = !DILocation(line: 479, column: 36, scope: !5112)
!5184 = !DILocation(line: 479, column: 22, scope: !5112)
!5185 = !DILocation(line: 479, column: 34, scope: !5112)
!5186 = !DILocation(line: 480, column: 2, scope: !5112)
!5187 = !DILocation(line: 483, column: 2, scope: !5112)
!5188 = !DILocation(line: 484, column: 5, scope: !5112)
!5189 = !DILocation(line: 486, column: 49, scope: !5101)
!5190 = !DILocation(line: 486, column: 21, scope: !5101)
!5191 = !DILocation(line: 486, column: 6, scope: !5101)
!5192 = !DILocation(line: 486, column: 19, scope: !5101)
!5193 = !DILocation(line: 488, column: 3, scope: !5101)
!5194 = !DILocation(line: 489, column: 1, scope: !5101)
!5195 = distinct !DISubprogram(name: "VEC_eh_region_base_replace", scope: !330, file: !330, line: 184, type: !5196, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5199)
!5196 = !DISubroutineType(types: !5197)
!5197 = !{!2221, !5198, !7, !2221}
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2275, size: 64)
!5199 = !{!5200, !5201, !5202, !5203}
!5200 = !DILocalVariable(name: "vec_", arg: 1, scope: !5195, file: !330, line: 184, type: !5198)
!5201 = !DILocalVariable(name: "ix_", arg: 2, scope: !5195, file: !330, line: 184, type: !7)
!5202 = !DILocalVariable(name: "obj_", arg: 3, scope: !5195, file: !330, line: 184, type: !2221)
!5203 = !DILocalVariable(name: "old_obj_", scope: !5195, file: !330, line: 184, type: !2221)
!5204 = !DILocation(line: 0, scope: !5195)
!5205 = !DILocation(line: 184, column: 1, scope: !5195)
!5206 = distinct !DISubprogram(name: "VEC_eh_landing_pad_gc_safe_grow", scope: !330, file: !330, line: 189, type: !5207, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5210)
!5207 = !DISubroutineType(types: !5208)
!5208 = !{null, !5209, !1461}
!5209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!5210 = !{!5211, !5212}
!5211 = !DILocalVariable(name: "vec_", arg: 1, scope: !5206, file: !330, line: 189, type: !5209)
!5212 = !DILocalVariable(name: "size_", arg: 2, scope: !5206, file: !330, line: 189, type: !1461)
!5213 = !DILocation(line: 0, scope: !5206)
!5214 = !DILocation(line: 189, column: 1, scope: !5206)
!5215 = distinct !DISubprogram(name: "input_eh_lp", scope: !3, file: !3, line: 496, type: !5216, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5218)
!5216 = !DISubroutineType(types: !5217)
!5217 = !{!2295, !3815, !2891, !1461}
!5218 = !{!5219, !5220, !5221, !5222, !5223}
!5219 = !DILocalVariable(name: "ib", arg: 1, scope: !5215, file: !3, line: 496, type: !3815)
!5220 = !DILocalVariable(name: "data_in", arg: 2, scope: !5215, file: !3, line: 496, type: !2891)
!5221 = !DILocalVariable(name: "ix", arg: 3, scope: !5215, file: !3, line: 496, type: !1461)
!5222 = !DILocalVariable(name: "tag", scope: !5215, file: !3, line: 498, type: !602)
!5223 = !DILocalVariable(name: "lp", scope: !5215, file: !3, line: 499, type: !2295)
!5224 = !DILocation(line: 0, scope: !5215)
!5225 = !DILocation(line: 502, column: 9, scope: !5215)
!5226 = !DILocation(line: 503, column: 11, scope: !5227)
!5227 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 503, column: 7)
!5228 = !DILocation(line: 503, column: 7, scope: !5215)
!5229 = !DILocation(line: 506, column: 3, scope: !5215)
!5230 = !DILocation(line: 508, column: 8, scope: !5215)
!5231 = !DILocation(line: 509, column: 15, scope: !5215)
!5232 = !DILocation(line: 509, column: 7, scope: !5215)
!5233 = !DILocation(line: 509, column: 13, scope: !5215)
!5234 = !DILocation(line: 510, column: 3, scope: !5215)
!5235 = !DILocation(line: 511, column: 45, scope: !5215)
!5236 = !DILocation(line: 511, column: 17, scope: !5215)
!5237 = !DILocation(line: 511, column: 7, scope: !5215)
!5238 = !DILocation(line: 511, column: 15, scope: !5215)
!5239 = !DILocation(line: 512, column: 39, scope: !5215)
!5240 = !DILocation(line: 512, column: 16, scope: !5215)
!5241 = !DILocation(line: 512, column: 7, scope: !5215)
!5242 = !DILocation(line: 512, column: 14, scope: !5215)
!5243 = !DILocation(line: 513, column: 26, scope: !5215)
!5244 = !DILocation(line: 513, column: 7, scope: !5215)
!5245 = !DILocation(line: 513, column: 24, scope: !5215)
!5246 = !DILocation(line: 515, column: 3, scope: !5215)
!5247 = !DILocation(line: 516, column: 1, scope: !5215)
!5248 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_replace", scope: !330, file: !330, line: 188, type: !5249, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5252)
!5249 = !DISubroutineType(types: !5250)
!5250 = !{!2295, !5251, !7, !2295}
!5251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2288, size: 64)
!5252 = !{!5253, !5254, !5255, !5256}
!5253 = !DILocalVariable(name: "vec_", arg: 1, scope: !5248, file: !330, line: 188, type: !5251)
!5254 = !DILocalVariable(name: "ix_", arg: 2, scope: !5248, file: !330, line: 188, type: !7)
!5255 = !DILocalVariable(name: "obj_", arg: 3, scope: !5248, file: !330, line: 188, type: !2295)
!5256 = !DILocalVariable(name: "old_obj_", scope: !5248, file: !330, line: 188, type: !2295)
!5257 = !DILocation(line: 0, scope: !5248)
!5258 = !DILocation(line: 188, column: 1, scope: !5248)
!5259 = distinct !DISubprogram(name: "VEC_tree_gc_safe_grow", scope: !135, file: !135, line: 183, type: !5260, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5263)
!5260 = !DISubroutineType(types: !5261)
!5261 = !{null, !5262, !1461}
!5262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2345, size: 64)
!5263 = !{!5264, !5265}
!5264 = !DILocalVariable(name: "vec_", arg: 1, scope: !5259, file: !135, line: 183, type: !5262)
!5265 = !DILocalVariable(name: "size_", arg: 2, scope: !5259, file: !135, line: 183, type: !1461)
!5266 = !DILocation(line: 0, scope: !5259)
!5267 = !DILocation(line: 183, column: 1, scope: !5259)
!5268 = distinct !DISubprogram(name: "VEC_tree_base_replace", scope: !135, file: !135, line: 182, type: !5269, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5271)
!5269 = !DISubroutineType(types: !5270)
!5270 = !{!1468, !5057, !7, !1468}
!5271 = !{!5272, !5273, !5274, !5275}
!5272 = !DILocalVariable(name: "vec_", arg: 1, scope: !5268, file: !135, line: 182, type: !5057)
!5273 = !DILocalVariable(name: "ix_", arg: 2, scope: !5268, file: !135, line: 182, type: !7)
!5274 = !DILocalVariable(name: "obj_", arg: 3, scope: !5268, file: !135, line: 182, type: !1468)
!5275 = !DILocalVariable(name: "old_obj_", scope: !5268, file: !135, line: 182, type: !1468)
!5276 = !DILocation(line: 0, scope: !5268)
!5277 = !DILocation(line: 182, column: 1, scope: !5268)
!5278 = distinct !DISubprogram(name: "VEC_uchar_gc_safe_grow", scope: !2363, file: !2363, line: 29, type: !5279, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5282)
!5279 = !DISubroutineType(types: !5280)
!5280 = !{null, !5281, !1461}
!5281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2361, size: 64)
!5282 = !{!5283, !5284}
!5283 = !DILocalVariable(name: "vec_", arg: 1, scope: !5278, file: !2363, line: 29, type: !5281)
!5284 = !DILocalVariable(name: "size_", arg: 2, scope: !5278, file: !2363, line: 29, type: !1461)
!5285 = !DILocation(line: 0, scope: !5278)
!5286 = !DILocation(line: 29, column: 1, scope: !5278)
!5287 = distinct !DISubprogram(name: "VEC_uchar_base_replace", scope: !2363, file: !2363, line: 27, type: !5288, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5291)
!5288 = !DISubroutineType(types: !5289)
!5289 = !{!2374, !5290, !7, !2374}
!5290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2367, size: 64)
!5291 = !{!5292, !5293, !5294, !5295}
!5292 = !DILocalVariable(name: "vec_", arg: 1, scope: !5287, file: !2363, line: 27, type: !5290)
!5293 = !DILocalVariable(name: "ix_", arg: 2, scope: !5287, file: !2363, line: 27, type: !7)
!5294 = !DILocalVariable(name: "obj_", arg: 3, scope: !5287, file: !2363, line: 27, type: !2374)
!5295 = !DILocalVariable(name: "old_obj_", scope: !5287, file: !2363, line: 27, type: !2374)
!5296 = !DILocation(line: 0, scope: !5287)
!5297 = !DILocation(line: 27, column: 1, scope: !5287)
!5298 = distinct !DISubprogram(name: "fixup_eh_region_pointers", scope: !3, file: !3, line: 525, type: !5299, scopeLine: 526, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5301)
!5299 = !DISubroutineType(types: !5300)
!5300 = !{null, !2213, !1523}
!5301 = !{!5302, !5303, !5304, !5305, !5306, !5307, !5308}
!5302 = !DILocalVariable(name: "fn", arg: 1, scope: !5298, file: !3, line: 525, type: !2213)
!5303 = !DILocalVariable(name: "root_region", arg: 2, scope: !5298, file: !3, line: 525, type: !1523)
!5304 = !DILocalVariable(name: "i", scope: !5298, file: !3, line: 527, type: !7)
!5305 = !DILocalVariable(name: "eh_array", scope: !5298, file: !3, line: 528, type: !2270)
!5306 = !DILocalVariable(name: "lp_array", scope: !5298, file: !3, line: 529, type: !2283)
!5307 = !DILocalVariable(name: "r", scope: !5298, file: !3, line: 530, type: !2221)
!5308 = !DILocalVariable(name: "lp", scope: !5298, file: !3, line: 531, type: !2295)
!5309 = !DILocation(line: 0, scope: !5298)
!5310 = !DILocation(line: 528, column: 37, scope: !5298)
!5311 = !DILocation(line: 528, column: 41, scope: !5298)
!5312 = !DILocation(line: 529, column: 46, scope: !5298)
!5313 = !DILocation(line: 530, column: 3, scope: !5298)
!5314 = !DILocation(line: 531, column: 3, scope: !5298)
!5315 = !DILocation(line: 533, column: 3, scope: !5298)
!5316 = !DILocation(line: 535, column: 3, scope: !5298)
!5317 = !DILocation(line: 536, column: 25, scope: !5298)
!5318 = !DILocation(line: 536, column: 7, scope: !5298)
!5319 = !DILocation(line: 536, column: 11, scope: !5298)
!5320 = !DILocation(line: 536, column: 23, scope: !5298)
!5321 = !DILocation(line: 0, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 546, column: 5)
!5323 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 545, column: 3)
!5324 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 545, column: 3)
!5325 = !DILocation(line: 545, column: 8, scope: !5324)
!5326 = !DILocation(line: 0, scope: !5324)
!5327 = !DILocation(line: 545, column: 15, scope: !5323)
!5328 = !DILocation(line: 545, column: 3, scope: !5324)
!5329 = !DILocation(line: 0, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 561, column: 5)
!5331 = distinct !DILexicalBlock(scope: !5332, file: !3, line: 560, column: 3)
!5332 = distinct !DILexicalBlock(scope: !5298, file: !3, line: 560, column: 3)
!5333 = !DILocation(line: 560, column: 3, scope: !5332)
!5334 = !DILocation(line: 548, column: 11, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5322, file: !3, line: 548, column: 11)
!5336 = !DILocation(line: 548, column: 13, scope: !5335)
!5337 = !DILocation(line: 548, column: 11, scope: !5322)
!5338 = !DILocation(line: 551, column: 7, scope: !5322)
!5339 = !DILocation(line: 552, column: 7, scope: !5322)
!5340 = !DILocation(line: 553, column: 7, scope: !5322)
!5341 = !DILocation(line: 554, column: 7, scope: !5322)
!5342 = !DILocation(line: 555, column: 7, scope: !5322)
!5343 = !DILocation(line: 556, column: 5, scope: !5322)
!5344 = !DILocation(line: 545, column: 57, scope: !5323)
!5345 = !DILocation(line: 545, column: 3, scope: !5323)
!5346 = distinct !{!5346, !5328, !5347}
!5347 = !DILocation(line: 556, column: 5, scope: !5324)
!5348 = !DILocation(line: 0, scope: !5332)
!5349 = !DILocation(line: 560, column: 15, scope: !5331)
!5350 = !DILocation(line: 563, column: 11, scope: !5351)
!5351 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 563, column: 11)
!5352 = !DILocation(line: 563, column: 14, scope: !5351)
!5353 = !DILocation(line: 563, column: 11, scope: !5330)
!5354 = !DILocation(line: 566, column: 7, scope: !5330)
!5355 = !DILocation(line: 567, column: 7, scope: !5330)
!5356 = !DILocation(line: 568, column: 7, scope: !5330)
!5357 = !DILocation(line: 569, column: 5, scope: !5330)
!5358 = !DILocation(line: 560, column: 63, scope: !5331)
!5359 = !DILocation(line: 560, column: 3, scope: !5331)
!5360 = distinct !{!5360, !5333, !5361}
!5361 = !DILocation(line: 569, column: 5, scope: !5332)
!5362 = !DILocation(line: 573, column: 1, scope: !5298)
!5363 = distinct !DISubprogram(name: "VEC_eh_region_base_length", scope: !330, file: !330, line: 184, type: !5364, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5368)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{!7, !5366}
!5366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5367, size: 64)
!5367 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2275)
!5368 = !{!5369}
!5369 = !DILocalVariable(name: "vec_", arg: 1, scope: !5363, file: !330, line: 184, type: !5366)
!5370 = !DILocation(line: 0, scope: !5363)
!5371 = !DILocation(line: 184, column: 1, scope: !5363)
!5372 = distinct !DISubprogram(name: "VEC_eh_region_gc_reserve_exact", scope: !330, file: !330, line: 185, type: !5373, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5375)
!5373 = !DISubroutineType(types: !5374)
!5374 = !{!1461, !5095, !1461}
!5375 = !{!5376, !5377, !5378}
!5376 = !DILocalVariable(name: "vec_", arg: 1, scope: !5372, file: !330, line: 185, type: !5095)
!5377 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5372, file: !330, line: 185, type: !1461)
!5378 = !DILocalVariable(name: "extend", scope: !5372, file: !330, line: 185, type: !1461)
!5379 = !DILocation(line: 0, scope: !5372)
!5380 = !DILocation(line: 185, column: 1, scope: !5372)
!5381 = !DILocation(line: 185, column: 1, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5372, file: !330, line: 185, column: 1)
!5383 = distinct !DISubprogram(name: "VEC_eh_region_base_space", scope: !330, file: !330, line: 184, type: !5384, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5386)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{!1461, !5198, !1461}
!5386 = !{!5387, !5388}
!5387 = !DILocalVariable(name: "vec_", arg: 1, scope: !5383, file: !330, line: 184, type: !5198)
!5388 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5383, file: !330, line: 184, type: !1461)
!5389 = !DILocation(line: 0, scope: !5383)
!5390 = !DILocation(line: 184, column: 1, scope: !5383)
!5391 = distinct !DISubprogram(name: "lto_input_eh_catch_list", scope: !3, file: !3, line: 379, type: !5392, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5396)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{!2237, !3815, !2891, !5394}
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5395, size: 64)
!5395 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_catch", file: !330, line: 181, baseType: !2237)
!5396 = !{!5397, !5398, !5399, !5400, !5401, !5402, !5404}
!5397 = !DILocalVariable(name: "ib", arg: 1, scope: !5391, file: !3, line: 379, type: !3815)
!5398 = !DILocalVariable(name: "data_in", arg: 2, scope: !5391, file: !3, line: 379, type: !2891)
!5399 = !DILocalVariable(name: "last_p", arg: 3, scope: !5391, file: !3, line: 380, type: !5394)
!5400 = !DILocalVariable(name: "first", scope: !5391, file: !3, line: 382, type: !5395)
!5401 = !DILocalVariable(name: "tag", scope: !5391, file: !3, line: 383, type: !602)
!5402 = !DILocalVariable(name: "list", scope: !5403, file: !3, line: 389, type: !1468)
!5403 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 388, column: 5)
!5404 = !DILocalVariable(name: "n", scope: !5403, file: !3, line: 390, type: !5395)
!5405 = !DILocation(line: 0, scope: !5391)
!5406 = !DILocation(line: 385, column: 11, scope: !5391)
!5407 = !DILocation(line: 386, column: 9, scope: !5391)
!5408 = !DILocation(line: 0, scope: !5403)
!5409 = !DILocation(line: 387, column: 3, scope: !5391)
!5410 = !DILocation(line: 392, column: 7, scope: !5403)
!5411 = !DILocation(line: 395, column: 11, scope: !5403)
!5412 = !DILocation(line: 396, column: 22, scope: !5403)
!5413 = !DILocation(line: 396, column: 10, scope: !5403)
!5414 = !DILocation(line: 396, column: 20, scope: !5403)
!5415 = !DILocation(line: 397, column: 24, scope: !5403)
!5416 = !DILocation(line: 397, column: 10, scope: !5403)
!5417 = !DILocation(line: 397, column: 22, scope: !5403)
!5418 = !DILocation(line: 398, column: 18, scope: !5403)
!5419 = !DILocation(line: 398, column: 10, scope: !5403)
!5420 = !DILocation(line: 398, column: 16, scope: !5403)
!5421 = !DILocation(line: 401, column: 12, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 401, column: 7)
!5423 = !DILocation(line: 0, scope: !5422)
!5424 = !DILocation(line: 401, column: 7, scope: !5422)
!5425 = !DILocation(line: 402, column: 24, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 401, column: 7)
!5427 = !DILocation(line: 402, column: 2, scope: !5426)
!5428 = !DILocation(line: 401, column: 48, scope: !5426)
!5429 = !DILocation(line: 401, column: 7, scope: !5426)
!5430 = distinct !{!5430, !5424, !5431}
!5431 = !DILocation(line: 402, column: 41, scope: !5422)
!5432 = !DILocation(line: 405, column: 11, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 405, column: 11)
!5434 = !DILocation(line: 405, column: 11, scope: !5403)
!5435 = !DILocation(line: 406, column: 24, scope: !5433)
!5436 = !DILocation(line: 407, column: 23, scope: !5403)
!5437 = !DILocation(line: 406, column: 2, scope: !5433)
!5438 = !DILocation(line: 407, column: 10, scope: !5403)
!5439 = !DILocation(line: 407, column: 21, scope: !5403)
!5440 = !DILocation(line: 408, column: 15, scope: !5403)
!5441 = !DILocation(line: 411, column: 17, scope: !5442)
!5442 = distinct !DILexicalBlock(scope: !5403, file: !3, line: 411, column: 11)
!5443 = !DILocation(line: 411, column: 11, scope: !5403)
!5444 = !DILocation(line: 414, column: 13, scope: !5403)
!5445 = distinct !{!5445, !5409, !5446}
!5446 = !DILocation(line: 415, column: 5, scope: !5391)
!5447 = !DILocation(line: 417, column: 3, scope: !5391)
!5448 = distinct !DISubprogram(name: "lto_input_location", scope: !3, file: !3, line: 275, type: !5449, scopeLine: 276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5451)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{!1592, !3815, !2891}
!5451 = !{!5452, !5453, !5454}
!5452 = !DILocalVariable(name: "ib", arg: 1, scope: !5448, file: !3, line: 275, type: !3815)
!5453 = !DILocalVariable(name: "data_in", arg: 2, scope: !5448, file: !3, line: 275, type: !2891)
!5454 = !DILocalVariable(name: "xloc", scope: !5448, file: !3, line: 277, type: !5455)
!5455 = !DIDerivedType(tag: DW_TAG_typedef, name: "expanded_location", file: !1593, line: 52, baseType: !5456)
!5456 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1593, line: 40, size: 192, elements: !5457)
!5457 = !{!5458, !5459, !5460, !5461}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !5456, file: !1593, line: 43, baseType: !1466, size: 64)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "line", scope: !5456, file: !1593, line: 46, baseType: !1461, size: 32, offset: 64)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "column", scope: !5456, file: !1593, line: 48, baseType: !1461, size: 32, offset: 96)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "sysp", scope: !5456, file: !1593, line: 51, baseType: !1460, size: 8, offset: 128)
!5462 = !DILocation(line: 0, scope: !5448)
!5463 = !DILocation(line: 279, column: 15, scope: !5448)
!5464 = !DILocation(line: 280, column: 17, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 280, column: 7)
!5466 = !DILocation(line: 280, column: 7, scope: !5448)
!5467 = !DILocation(line: 283, column: 15, scope: !5448)
!5468 = !DILocation(line: 284, column: 15, scope: !5448)
!5469 = !DILocation(line: 285, column: 17, scope: !5448)
!5470 = !DILocation(line: 286, column: 15, scope: !5448)
!5471 = !DILocation(line: 288, column: 16, scope: !5472)
!5472 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 288, column: 7)
!5473 = !DILocation(line: 288, column: 29, scope: !5472)
!5474 = !DILocation(line: 288, column: 7, scope: !5448)
!5475 = !DILocation(line: 290, column: 11, scope: !5476)
!5476 = distinct !DILexicalBlock(scope: !5477, file: !3, line: 290, column: 11)
!5477 = distinct !DILexicalBlock(scope: !5472, file: !3, line: 289, column: 5)
!5478 = !DILocation(line: 290, column: 11, scope: !5477)
!5479 = !DILocation(line: 291, column: 15, scope: !5476)
!5480 = !DILocation(line: 291, column: 2, scope: !5476)
!5481 = !DILocation(line: 293, column: 20, scope: !5477)
!5482 = !DILocation(line: 293, column: 42, scope: !5477)
!5483 = !DILocation(line: 293, column: 7, scope: !5477)
!5484 = !DILocation(line: 294, column: 5, scope: !5477)
!5485 = !DILocation(line: 295, column: 21, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5472, file: !3, line: 295, column: 12)
!5487 = !DILocation(line: 295, column: 34, scope: !5486)
!5488 = !DILocation(line: 295, column: 12, scope: !5472)
!5489 = !DILocation(line: 296, column: 25, scope: !5486)
!5490 = !DILocation(line: 296, column: 5, scope: !5486)
!5491 = !DILocation(line: 298, column: 25, scope: !5448)
!5492 = !DILocation(line: 299, column: 12, scope: !5448)
!5493 = !DILocation(line: 299, column: 25, scope: !5448)
!5494 = !DILocation(line: 300, column: 12, scope: !5448)
!5495 = !DILocation(line: 300, column: 24, scope: !5448)
!5496 = !DILocation(line: 302, column: 39, scope: !5448)
!5497 = !DILocation(line: 302, column: 10, scope: !5448)
!5498 = !DILocation(line: 302, column: 3, scope: !5448)
!5499 = !DILocation(line: 303, column: 1, scope: !5448)
!5500 = distinct !DISubprogram(name: "input_string", scope: !3, file: !3, line: 198, type: !5501, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5503)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!1466, !2891, !3815}
!5503 = !{!5504, !5505, !5506, !5507, !5508}
!5504 = !DILocalVariable(name: "data_in", arg: 1, scope: !5500, file: !3, line: 198, type: !2891)
!5505 = !DILocalVariable(name: "ib", arg: 2, scope: !5500, file: !3, line: 198, type: !3815)
!5506 = !DILocalVariable(name: "len", scope: !5500, file: !3, line: 200, type: !7)
!5507 = !DILocalVariable(name: "ptr", scope: !5500, file: !3, line: 201, type: !1466)
!5508 = !DILocalVariable(name: "is_null", scope: !5500, file: !3, line: 202, type: !7)
!5509 = !DILocation(line: 0, scope: !5500)
!5510 = !DILocation(line: 200, column: 3, scope: !5500)
!5511 = !DILocation(line: 204, column: 13, scope: !5500)
!5512 = !DILocation(line: 205, column: 7, scope: !5513)
!5513 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 205, column: 7)
!5514 = !DILocation(line: 205, column: 7, scope: !5500)
!5515 = !DILocation(line: 208, column: 9, scope: !5500)
!5516 = !DILocation(line: 209, column: 11, scope: !5517)
!5517 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 209, column: 7)
!5518 = !DILocation(line: 209, column: 15, scope: !5517)
!5519 = !DILocation(line: 209, column: 7, scope: !5517)
!5520 = !DILocation(line: 209, column: 20, scope: !5517)
!5521 = !DILocation(line: 209, column: 7, scope: !5500)
!5522 = !DILocation(line: 210, column: 5, scope: !5517)
!5523 = !DILocation(line: 213, column: 1, scope: !5500)
!5524 = distinct !DISubprogram(name: "canon_file_name", scope: !3, file: !3, line: 230, type: !5525, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5527)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{!1466, !1466}
!5527 = !{!5528, !5529, !5530, !5531, !5534, !5535, !5536}
!5528 = !DILocalVariable(name: "string", arg: 1, scope: !5524, file: !3, line: 230, type: !1466)
!5529 = !DILocalVariable(name: "slot", scope: !5524, file: !3, line: 232, type: !2319)
!5530 = !DILocalVariable(name: "s_slot", scope: !5524, file: !3, line: 233, type: !3226)
!5531 = !DILocalVariable(name: "len", scope: !5532, file: !3, line: 239, type: !1937)
!5532 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 238, column: 5)
!5533 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 237, column: 7)
!5534 = !DILocalVariable(name: "saved_string", scope: !5532, file: !3, line: 240, type: !1463)
!5535 = !DILocalVariable(name: "new_slot", scope: !5532, file: !3, line: 241, type: !3225)
!5536 = !DILocalVariable(name: "old_slot", scope: !5537, file: !3, line: 253, type: !3225)
!5537 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 252, column: 5)
!5538 = !DILocation(line: 0, scope: !5524)
!5539 = !DILocation(line: 233, column: 3, scope: !5524)
!5540 = !DILocation(line: 234, column: 10, scope: !5524)
!5541 = !DILocation(line: 234, column: 12, scope: !5524)
!5542 = !DILocation(line: 236, column: 26, scope: !5524)
!5543 = !DILocation(line: 236, column: 10, scope: !5524)
!5544 = !DILocation(line: 237, column: 7, scope: !5533)
!5545 = !DILocation(line: 237, column: 13, scope: !5533)
!5546 = !DILocation(line: 237, column: 7, scope: !5524)
!5547 = !DILocation(line: 243, column: 13, scope: !5532)
!5548 = !DILocation(line: 0, scope: !5532)
!5549 = !DILocation(line: 244, column: 44, scope: !5532)
!5550 = !DILocation(line: 244, column: 31, scope: !5532)
!5551 = !DILocation(line: 245, column: 18, scope: !5532)
!5552 = !DILocation(line: 246, column: 7, scope: !5532)
!5553 = !DILocation(line: 247, column: 17, scope: !5532)
!5554 = !DILocation(line: 247, column: 19, scope: !5532)
!5555 = !DILocation(line: 248, column: 13, scope: !5532)
!5556 = !DILocation(line: 0, scope: !5537)
!5557 = !DILocation(line: 254, column: 24, scope: !5537)
!5558 = !DILocation(line: 0, scope: !5533)
!5559 = !DILocation(line: 256, column: 1, scope: !5524)
!5560 = distinct !DISubprogram(name: "input_string_internal", scope: !3, file: !3, line: 136, type: !5561, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5564)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{!1466, !2891, !3815, !5563}
!5563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!5564 = !{!5565, !5566, !5567, !5568, !5569, !5570, !5571}
!5565 = !DILocalVariable(name: "data_in", arg: 1, scope: !5560, file: !3, line: 136, type: !2891)
!5566 = !DILocalVariable(name: "ib", arg: 2, scope: !5560, file: !3, line: 136, type: !3815)
!5567 = !DILocalVariable(name: "rlen", arg: 3, scope: !5560, file: !3, line: 137, type: !5563)
!5568 = !DILocalVariable(name: "str_tab", scope: !5560, file: !3, line: 139, type: !3743)
!5569 = !DILocalVariable(name: "len", scope: !5560, file: !3, line: 140, type: !7)
!5570 = !DILocalVariable(name: "loc", scope: !5560, file: !3, line: 141, type: !7)
!5571 = !DILocalVariable(name: "result", scope: !5560, file: !3, line: 142, type: !1466)
!5572 = !DILocation(line: 0, scope: !5560)
!5573 = !DILocation(line: 139, column: 3, scope: !5560)
!5574 = !DILocation(line: 144, column: 9, scope: !5560)
!5575 = !DILocation(line: 145, column: 3, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 145, column: 3)
!5577 = !DILocation(line: 146, column: 9, scope: !5560)
!5578 = !DILocation(line: 147, column: 9, scope: !5560)
!5579 = !DILocation(line: 149, column: 15, scope: !5580)
!5580 = distinct !DILexicalBlock(scope: !5560, file: !3, line: 149, column: 7)
!5581 = !DILocation(line: 149, column: 17, scope: !5580)
!5582 = !DILocation(line: 149, column: 34, scope: !5580)
!5583 = !DILocation(line: 149, column: 23, scope: !5580)
!5584 = !DILocation(line: 149, column: 7, scope: !5560)
!5585 = !DILocation(line: 150, column: 5, scope: !5580)
!5586 = !DILocation(line: 152, column: 54, scope: !5560)
!5587 = !DILocation(line: 152, column: 36, scope: !5560)
!5588 = !DILocation(line: 152, column: 44, scope: !5560)
!5589 = !DILocation(line: 155, column: 1, scope: !5560)
!5590 = !DILocation(line: 154, column: 3, scope: !5560)
!5591 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_length", scope: !330, file: !330, line: 188, type: !5592, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5596)
!5592 = !DISubroutineType(types: !5593)
!5593 = !{!7, !5594}
!5594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5595, size: 64)
!5595 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2288)
!5596 = !{!5597}
!5597 = !DILocalVariable(name: "vec_", arg: 1, scope: !5591, file: !330, line: 188, type: !5594)
!5598 = !DILocation(line: 0, scope: !5591)
!5599 = !DILocation(line: 188, column: 1, scope: !5591)
!5600 = distinct !DISubprogram(name: "VEC_eh_landing_pad_gc_reserve_exact", scope: !330, file: !330, line: 189, type: !5601, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5603)
!5601 = !DISubroutineType(types: !5602)
!5602 = !{!1461, !5209, !1461}
!5603 = !{!5604, !5605, !5606}
!5604 = !DILocalVariable(name: "vec_", arg: 1, scope: !5600, file: !330, line: 189, type: !5209)
!5605 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5600, file: !330, line: 189, type: !1461)
!5606 = !DILocalVariable(name: "extend", scope: !5600, file: !330, line: 189, type: !1461)
!5607 = !DILocation(line: 0, scope: !5600)
!5608 = !DILocation(line: 189, column: 1, scope: !5600)
!5609 = !DILocation(line: 189, column: 1, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5600, file: !330, line: 189, column: 1)
!5611 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_space", scope: !330, file: !330, line: 188, type: !5612, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5614)
!5612 = !DISubroutineType(types: !5613)
!5613 = !{!1461, !5251, !1461}
!5614 = !{!5615, !5616}
!5615 = !DILocalVariable(name: "vec_", arg: 1, scope: !5611, file: !330, line: 188, type: !5251)
!5616 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5611, file: !330, line: 188, type: !1461)
!5617 = !DILocation(line: 0, scope: !5611)
!5618 = !DILocation(line: 188, column: 1, scope: !5611)
!5619 = distinct !DISubprogram(name: "VEC_tree_gc_reserve_exact", scope: !135, file: !135, line: 183, type: !5620, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5622)
!5620 = !DISubroutineType(types: !5621)
!5621 = !{!1461, !5262, !1461}
!5622 = !{!5623, !5624, !5625}
!5623 = !DILocalVariable(name: "vec_", arg: 1, scope: !5619, file: !135, line: 183, type: !5262)
!5624 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5619, file: !135, line: 183, type: !1461)
!5625 = !DILocalVariable(name: "extend", scope: !5619, file: !135, line: 183, type: !1461)
!5626 = !DILocation(line: 0, scope: !5619)
!5627 = !DILocation(line: 183, column: 1, scope: !5619)
!5628 = !DILocation(line: 183, column: 1, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5619, file: !135, line: 183, column: 1)
!5630 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !135, file: !135, line: 182, type: !5631, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5633)
!5631 = !DISubroutineType(types: !5632)
!5632 = !{!1461, !5057, !1461}
!5633 = !{!5634, !5635}
!5634 = !DILocalVariable(name: "vec_", arg: 1, scope: !5630, file: !135, line: 182, type: !5057)
!5635 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5630, file: !135, line: 182, type: !1461)
!5636 = !DILocation(line: 0, scope: !5630)
!5637 = !DILocation(line: 182, column: 1, scope: !5630)
!5638 = distinct !DISubprogram(name: "VEC_uchar_base_length", scope: !2363, file: !2363, line: 27, type: !5639, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5643)
!5639 = !DISubroutineType(types: !5640)
!5640 = !{!7, !5641}
!5641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5642, size: 64)
!5642 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2367)
!5643 = !{!5644}
!5644 = !DILocalVariable(name: "vec_", arg: 1, scope: !5638, file: !2363, line: 27, type: !5641)
!5645 = !DILocation(line: 0, scope: !5638)
!5646 = !DILocation(line: 27, column: 1, scope: !5638)
!5647 = distinct !DISubprogram(name: "VEC_uchar_gc_reserve_exact", scope: !2363, file: !2363, line: 29, type: !5648, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5650)
!5648 = !DISubroutineType(types: !5649)
!5649 = !{!1461, !5281, !1461}
!5650 = !{!5651, !5652, !5653}
!5651 = !DILocalVariable(name: "vec_", arg: 1, scope: !5647, file: !2363, line: 29, type: !5281)
!5652 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5647, file: !2363, line: 29, type: !1461)
!5653 = !DILocalVariable(name: "extend", scope: !5647, file: !2363, line: 29, type: !1461)
!5654 = !DILocation(line: 0, scope: !5647)
!5655 = !DILocation(line: 29, column: 1, scope: !5647)
!5656 = !DILocation(line: 29, column: 1, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5647, file: !2363, line: 29, column: 1)
!5658 = distinct !DISubprogram(name: "VEC_uchar_base_space", scope: !2363, file: !2363, line: 27, type: !5659, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5661)
!5659 = !DISubroutineType(types: !5660)
!5660 = !{!1461, !5290, !1461}
!5661 = !{!5662, !5663}
!5662 = !DILocalVariable(name: "vec_", arg: 1, scope: !5658, file: !2363, line: 27, type: !5290)
!5663 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5658, file: !2363, line: 27, type: !1461)
!5664 = !DILocation(line: 0, scope: !5658)
!5665 = !DILocation(line: 27, column: 1, scope: !5658)
!5666 = distinct !DISubprogram(name: "VEC_eh_region_base_index", scope: !330, file: !330, line: 184, type: !5667, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5669)
!5667 = !DISubroutineType(types: !5668)
!5668 = !{!2221, !5366, !7}
!5669 = !{!5670, !5671}
!5670 = !DILocalVariable(name: "vec_", arg: 1, scope: !5666, file: !330, line: 184, type: !5366)
!5671 = !DILocalVariable(name: "ix_", arg: 2, scope: !5666, file: !330, line: 184, type: !7)
!5672 = !DILocation(line: 0, scope: !5666)
!5673 = !DILocation(line: 184, column: 1, scope: !5666)
!5674 = distinct !DISubprogram(name: "VEC_eh_region_base_iterate", scope: !330, file: !330, line: 184, type: !5675, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5678)
!5675 = !DISubroutineType(types: !5676)
!5676 = !{!1461, !5366, !7, !5677}
!5677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!5678 = !{!5679, !5680, !5681}
!5679 = !DILocalVariable(name: "vec_", arg: 1, scope: !5674, file: !330, line: 184, type: !5366)
!5680 = !DILocalVariable(name: "ix_", arg: 2, scope: !5674, file: !330, line: 184, type: !7)
!5681 = !DILocalVariable(name: "ptr", arg: 3, scope: !5674, file: !330, line: 184, type: !5677)
!5682 = !DILocation(line: 0, scope: !5674)
!5683 = !DILocation(line: 184, column: 1, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5674, file: !330, line: 184, column: 1)
!5685 = !DILocation(line: 184, column: 1, scope: !5674)
!5686 = !DILocation(line: 184, column: 1, scope: !5687)
!5687 = distinct !DILexicalBlock(scope: !5684, file: !330, line: 184, column: 1)
!5688 = !DILocation(line: 184, column: 1, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5684, file: !330, line: 184, column: 1)
!5690 = !DILocation(line: 0, scope: !5684)
!5691 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_index", scope: !330, file: !330, line: 188, type: !5692, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5694)
!5692 = !DISubroutineType(types: !5693)
!5693 = !{!2295, !5594, !7}
!5694 = !{!5695, !5696}
!5695 = !DILocalVariable(name: "vec_", arg: 1, scope: !5691, file: !330, line: 188, type: !5594)
!5696 = !DILocalVariable(name: "ix_", arg: 2, scope: !5691, file: !330, line: 188, type: !7)
!5697 = !DILocation(line: 0, scope: !5691)
!5698 = !DILocation(line: 188, column: 1, scope: !5691)
!5699 = distinct !DISubprogram(name: "VEC_eh_landing_pad_base_iterate", scope: !330, file: !330, line: 188, type: !5700, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5703)
!5700 = !DISubroutineType(types: !5701)
!5701 = !{!1461, !5594, !7, !5702}
!5702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2295, size: 64)
!5703 = !{!5704, !5705, !5706}
!5704 = !DILocalVariable(name: "vec_", arg: 1, scope: !5699, file: !330, line: 188, type: !5594)
!5705 = !DILocalVariable(name: "ix_", arg: 2, scope: !5699, file: !330, line: 188, type: !7)
!5706 = !DILocalVariable(name: "ptr", arg: 3, scope: !5699, file: !330, line: 188, type: !5702)
!5707 = !DILocation(line: 0, scope: !5699)
!5708 = !DILocation(line: 188, column: 1, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5699, file: !330, line: 188, column: 1)
!5710 = !DILocation(line: 188, column: 1, scope: !5699)
!5711 = !DILocation(line: 188, column: 1, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5709, file: !330, line: 188, column: 1)
!5713 = !DILocation(line: 188, column: 1, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5709, file: !330, line: 188, column: 1)
!5715 = !DILocation(line: 0, scope: !5709)
!5716 = distinct !DISubprogram(name: "input_gimple_stmt", scope: !3, file: !3, line: 1000, type: !5717, scopeLine: 1002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5719)
!5717 = !DISubroutineType(types: !5718)
!5718 = !{!1791, !3815, !2891, !2213, !602}
!5719 = !{!5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5732, !5736, !5740, !5741, !5742, !5745, !5749}
!5720 = !DILocalVariable(name: "ib", arg: 1, scope: !5716, file: !3, line: 1000, type: !3815)
!5721 = !DILocalVariable(name: "data_in", arg: 2, scope: !5716, file: !3, line: 1000, type: !2891)
!5722 = !DILocalVariable(name: "fn", arg: 3, scope: !5716, file: !3, line: 1001, type: !2213)
!5723 = !DILocalVariable(name: "tag", arg: 4, scope: !5716, file: !3, line: 1001, type: !602)
!5724 = !DILocalVariable(name: "stmt", scope: !5716, file: !3, line: 1003, type: !1791)
!5725 = !DILocalVariable(name: "code", scope: !5716, file: !3, line: 1004, type: !651)
!5726 = !DILocalVariable(name: "num_ops", scope: !5716, file: !3, line: 1005, type: !1521)
!5727 = !DILocalVariable(name: "i", scope: !5716, file: !3, line: 1006, type: !1937)
!5728 = !DILocalVariable(name: "bp", scope: !5716, file: !3, line: 1007, type: !3809)
!5729 = !DILocalVariable(name: "str", scope: !5730, file: !3, line: 1046, type: !1468)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1044, column: 7)
!5731 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1030, column: 5)
!5732 = !DILocalVariable(name: "op", scope: !5733, file: !3, line: 1065, type: !1468)
!5733 = distinct !DILexicalBlock(scope: !5734, file: !3, line: 1064, column: 2)
!5734 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 1063, column: 7)
!5735 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1063, column: 7)
!5736 = !DILocalVariable(name: "field", scope: !5737, file: !3, line: 1093, type: !1468)
!5737 = distinct !DILexicalBlock(scope: !5738, file: !3, line: 1092, column: 3)
!5738 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 1091, column: 12)
!5739 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1090, column: 6)
!5740 = !DILocalVariable(name: "type", scope: !5737, file: !3, line: 1093, type: !1468)
!5741 = !DILocalVariable(name: "tem", scope: !5737, file: !3, line: 1093, type: !1468)
!5742 = !DILocalVariable(name: "lhs", scope: !5743, file: !3, line: 1141, type: !1468)
!5743 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 1140, column: 5)
!5744 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1139, column: 7)
!5745 = !DILocalVariable(name: "i", scope: !5746, file: !3, line: 1150, type: !7)
!5746 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 1149, column: 5)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !3, line: 1148, column: 12)
!5748 = distinct !DILexicalBlock(scope: !5744, file: !3, line: 1145, column: 12)
!5749 = !DILocalVariable(name: "op", scope: !5750, file: !3, line: 1154, type: !1468)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 1153, column: 2)
!5751 = distinct !DILexicalBlock(scope: !5752, file: !3, line: 1152, column: 7)
!5752 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 1152, column: 7)
!5753 = !DILocation(line: 0, scope: !5716)
!5754 = !DILocation(line: 1009, column: 10, scope: !5716)
!5755 = !DILocation(line: 1012, column: 8, scope: !5716)
!5756 = !DILocation(line: 1013, column: 13, scope: !5716)
!5757 = !DILocation(line: 1014, column: 10, scope: !5716)
!5758 = !DILocation(line: 1015, column: 29, scope: !5716)
!5759 = !DILocation(line: 1015, column: 16, scope: !5716)
!5760 = !DILocation(line: 1015, column: 27, scope: !5716)
!5761 = !DILocation(line: 1016, column: 7, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5716, file: !3, line: 1016, column: 7)
!5763 = !DILocation(line: 1016, column: 7, scope: !5716)
!5764 = !DILocation(line: 1017, column: 37, scope: !5762)
!5765 = !DILocation(line: 1017, column: 35, scope: !5762)
!5766 = !DILocation(line: 1017, column: 5, scope: !5762)
!5767 = !DILocation(line: 1018, column: 35, scope: !5716)
!5768 = !DILocation(line: 1018, column: 33, scope: !5716)
!5769 = !DILocation(line: 1019, column: 26, scope: !5716)
!5770 = !DILocation(line: 1019, column: 24, scope: !5716)
!5771 = !DILocation(line: 1020, column: 3, scope: !5716)
!5772 = !DILocation(line: 1023, column: 30, scope: !5716)
!5773 = !DILocation(line: 1023, column: 3, scope: !5716)
!5774 = !DILocation(line: 1026, column: 27, scope: !5716)
!5775 = !DILocation(line: 1026, column: 3, scope: !5716)
!5776 = !DILocation(line: 1029, column: 3, scope: !5716)
!5777 = !DILocation(line: 1032, column: 37, scope: !5731)
!5778 = !DILocation(line: 1032, column: 7, scope: !5731)
!5779 = !DILocation(line: 1033, column: 7, scope: !5731)
!5780 = !DILocation(line: 1036, column: 50, scope: !5731)
!5781 = !DILocation(line: 1036, column: 7, scope: !5731)
!5782 = !DILocation(line: 1037, column: 7, scope: !5731)
!5783 = !DILocation(line: 1040, column: 44, scope: !5731)
!5784 = !DILocation(line: 1040, column: 7, scope: !5731)
!5785 = !DILocation(line: 1041, column: 7, scope: !5731)
!5786 = !DILocation(line: 1047, column: 24, scope: !5730)
!5787 = !DILocation(line: 1047, column: 19, scope: !5730)
!5788 = !DILocation(line: 1047, column: 22, scope: !5730)
!5789 = !DILocation(line: 1048, column: 24, scope: !5730)
!5790 = !DILocation(line: 1048, column: 8, scope: !5730)
!5791 = !DILocation(line: 1048, column: 19, scope: !5730)
!5792 = !DILocation(line: 1048, column: 22, scope: !5730)
!5793 = !DILocation(line: 1049, column: 24, scope: !5730)
!5794 = !DILocation(line: 1049, column: 19, scope: !5730)
!5795 = !DILocation(line: 1049, column: 22, scope: !5730)
!5796 = !DILocation(line: 1050, column: 8, scope: !5730)
!5797 = !DILocation(line: 0, scope: !5730)
!5798 = !DILocation(line: 1051, column: 28, scope: !5730)
!5799 = !DILocation(line: 1051, column: 19, scope: !5730)
!5800 = !DILocation(line: 1051, column: 26, scope: !5730)
!5801 = !DILocation(line: 1052, column: 7, scope: !5730)
!5802 = !DILocation(line: 1063, column: 12, scope: !5735)
!5803 = !DILocation(line: 0, scope: !5735)
!5804 = !DILocation(line: 1063, column: 21, scope: !5734)
!5805 = !DILocation(line: 1063, column: 7, scope: !5735)
!5806 = !DILocation(line: 1065, column: 14, scope: !5733)
!5807 = !DILocation(line: 0, scope: !5733)
!5808 = !DILocation(line: 1066, column: 25, scope: !5733)
!5809 = !DILocation(line: 1066, column: 4, scope: !5733)
!5810 = !DILocation(line: 1067, column: 9, scope: !5811)
!5811 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1067, column: 8)
!5812 = !DILocation(line: 1067, column: 8, scope: !5733)
!5813 = !DILocation(line: 1074, column: 8, scope: !5814)
!5814 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1074, column: 8)
!5815 = !DILocation(line: 1074, column: 23, scope: !5814)
!5816 = !DILocation(line: 1075, column: 8, scope: !5814)
!5817 = !DILocation(line: 1075, column: 11, scope: !5814)
!5818 = !DILocation(line: 1075, column: 44, scope: !5814)
!5819 = !DILocation(line: 1076, column: 8, scope: !5814)
!5820 = !DILocation(line: 1076, column: 39, scope: !5814)
!5821 = !DILocation(line: 1077, column: 11, scope: !5814)
!5822 = !DILocation(line: 1076, column: 12, scope: !5814)
!5823 = !DILocation(line: 1074, column: 8, scope: !5733)
!5824 = !DILocation(line: 1087, column: 8, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1087, column: 8)
!5826 = !DILocation(line: 1080, column: 5, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5814, file: !3, line: 1078, column: 6)
!5828 = !DILocation(line: 1080, column: 3, scope: !5827)
!5829 = !DILocation(line: 1082, column: 8, scope: !5827)
!5830 = !DILocation(line: 1087, column: 23, scope: !5825)
!5831 = !DILocation(line: 1087, column: 8, scope: !5733)
!5832 = !DILocation(line: 1088, column: 11, scope: !5825)
!5833 = !DILocation(line: 1088, column: 6, scope: !5825)
!5834 = !DILocation(line: 1089, column: 4, scope: !5733)
!5835 = !DILocation(line: 1089, column: 11, scope: !5733)
!5836 = !DILocation(line: 1091, column: 12, scope: !5738)
!5837 = !DILocation(line: 1091, column: 27, scope: !5738)
!5838 = !DILocation(line: 1091, column: 12, scope: !5739)
!5839 = !DILocation(line: 1094, column: 13, scope: !5737)
!5840 = !DILocation(line: 0, scope: !5737)
!5841 = !DILocation(line: 1095, column: 12, scope: !5737)
!5842 = !DILocation(line: 1096, column: 16, scope: !5843)
!5843 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 1096, column: 5)
!5844 = !DILocation(line: 0, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5846, file: !3, line: 1098, column: 13)
!5846 = distinct !DILexicalBlock(scope: !5847, file: !3, line: 1097, column: 7)
!5847 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 1096, column: 5)
!5848 = !DILocation(line: 1096, column: 10, scope: !5843)
!5849 = !DILocation(line: 0, scope: !5843)
!5850 = !DILocation(line: 1096, column: 5, scope: !5843)
!5851 = !DILocation(line: 1098, column: 17, scope: !5845)
!5852 = !DILocation(line: 1099, column: 6, scope: !5845)
!5853 = !DILocation(line: 1099, column: 10, scope: !5845)
!5854 = !DILocation(line: 1099, column: 29, scope: !5845)
!5855 = !DILocation(line: 1099, column: 26, scope: !5845)
!5856 = !DILocation(line: 1100, column: 10, scope: !5845)
!5857 = !DILocation(line: 1100, column: 13, scope: !5845)
!5858 = !DILocation(line: 1098, column: 13, scope: !5846)
!5859 = !DILocation(line: 1096, column: 47, scope: !5847)
!5860 = !DILocation(line: 1096, column: 5, scope: !5847)
!5861 = distinct !{!5861, !5850, !5862}
!5862 = !DILocation(line: 1102, column: 7, scope: !5843)
!5863 = !DILocation(line: 1111, column: 28, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 1110, column: 9)
!5865 = !DILocation(line: 1111, column: 7, scope: !5864)
!5866 = !DILocation(line: 1116, column: 34, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5739, file: !3, line: 1116, column: 12)
!5868 = !DILocation(line: 1116, column: 13, scope: !5867)
!5869 = !DILocation(line: 1116, column: 12, scope: !5739)
!5870 = !DILocation(line: 1118, column: 13, scope: !5739)
!5871 = distinct !{!5871, !5834, !5872}
!5872 = !DILocation(line: 1119, column: 6, scope: !5733)
!5873 = !DILocation(line: 1123, column: 8, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5733, file: !3, line: 1123, column: 8)
!5875 = !DILocation(line: 1123, column: 8, scope: !5733)
!5876 = !DILocation(line: 1124, column: 6, scope: !5874)
!5877 = !DILocation(line: 1063, column: 33, scope: !5734)
!5878 = !DILocation(line: 1063, column: 7, scope: !5734)
!5879 = distinct !{!5879, !5805, !5880}
!5880 = !DILocation(line: 1125, column: 2, scope: !5735)
!5881 = !DILocation(line: 1134, column: 9, scope: !5731)
!5882 = !DILocation(line: 1133, column: 7, scope: !5731)
!5883 = !DILocation(line: 1135, column: 5, scope: !5731)
!5884 = !DILocation(line: 1139, column: 29, scope: !5744)
!5885 = !DILocation(line: 1152, column: 7, scope: !5752)
!5886 = !DILocation(line: 1141, column: 18, scope: !5743)
!5887 = !DILocation(line: 0, scope: !5743)
!5888 = !DILocation(line: 1142, column: 11, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5743, file: !3, line: 1142, column: 11)
!5890 = !DILocation(line: 1142, column: 15, scope: !5889)
!5891 = !DILocation(line: 1142, column: 18, scope: !5889)
!5892 = !DILocation(line: 1142, column: 34, scope: !5889)
!5893 = !DILocation(line: 1142, column: 11, scope: !5743)
!5894 = !DILocation(line: 1143, column: 2, scope: !5889)
!5895 = !DILocation(line: 1143, column: 26, scope: !5889)
!5896 = !DILocation(line: 1146, column: 5, scope: !5748)
!5897 = !DILocation(line: 0, scope: !5752)
!5898 = !DILocation(line: 0, scope: !5746)
!5899 = !DILocation(line: 1152, column: 23, scope: !5751)
!5900 = !DILocation(line: 1152, column: 21, scope: !5751)
!5901 = !DILocation(line: 1154, column: 14, scope: !5750)
!5902 = !DILocation(line: 0, scope: !5750)
!5903 = !DILocation(line: 1155, column: 8, scope: !5904)
!5904 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 1155, column: 8)
!5905 = !DILocation(line: 1155, column: 23, scope: !5904)
!5906 = !DILocation(line: 1155, column: 8, scope: !5750)
!5907 = !DILocation(line: 1156, column: 6, scope: !5904)
!5908 = !DILocation(line: 1156, column: 29, scope: !5904)
!5909 = !DILocation(line: 1152, column: 52, scope: !5751)
!5910 = !DILocation(line: 1152, column: 7, scope: !5751)
!5911 = distinct !{!5911, !5885, !5912}
!5912 = !DILocation(line: 1157, column: 2, scope: !5752)
!5913 = !DILocation(line: 1162, column: 3, scope: !5716)
!5914 = !DILocation(line: 1165, column: 3, scope: !5716)
!5915 = !DILocation(line: 1167, column: 3, scope: !5716)
!5916 = distinct !DISubprogram(name: "is_gimple_debug", scope: !652, file: !652, line: 3249, type: !5917, scopeLine: 3250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5919)
!5917 = !DISubroutineType(types: !5918)
!5918 = !{!1460, !4942}
!5919 = !{!5920}
!5920 = !DILocalVariable(name: "gs", arg: 1, scope: !5916, file: !652, line: 3249, type: !4942)
!5921 = !DILocation(line: 0, scope: !5916)
!5922 = !DILocation(line: 3251, column: 10, scope: !5916)
!5923 = !DILocation(line: 3251, column: 27, scope: !5916)
!5924 = !DILocation(line: 3251, column: 3, scope: !5916)
!5925 = distinct !DISubprogram(name: "lto_tag_check_set", scope: !3, file: !3, line: 67, type: !5926, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5928)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{null, !602, !1461, null}
!5928 = !{!5929, !5930, !5931, !5938}
!5929 = !DILocalVariable(name: "actual", arg: 1, scope: !5925, file: !3, line: 67, type: !602)
!5930 = !DILocalVariable(name: "ntags", arg: 2, scope: !5925, file: !3, line: 67, type: !1461)
!5931 = !DILocalVariable(name: "ap", scope: !5925, file: !3, line: 69, type: !5932)
!5932 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5933, line: 52, baseType: !5934)
!5933 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!5934 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5935, line: 32, baseType: !5936)
!5935 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stdarg.h", directory: "")
!5936 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 69, baseType: !5937)
!5937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3281, size: 192, elements: !1566)
!5938 = !DILocalVariable(name: "i", scope: !5925, file: !3, line: 70, type: !1461)
!5939 = !DILocation(line: 0, scope: !5925)
!5940 = !DILocation(line: 69, column: 3, scope: !5925)
!5941 = !DILocation(line: 69, column: 11, scope: !5925)
!5942 = !DILocation(line: 72, column: 3, scope: !5925)
!5943 = !DILocation(line: 0, scope: !5944)
!5944 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 74, column: 9)
!5945 = distinct !DILexicalBlock(scope: !5946, file: !3, line: 73, column: 3)
!5946 = distinct !DILexicalBlock(scope: !5925, file: !3, line: 73, column: 3)
!5947 = !DILocation(line: 73, column: 8, scope: !5946)
!5948 = !DILocation(line: 0, scope: !5946)
!5949 = !DILocation(line: 73, column: 17, scope: !5945)
!5950 = !DILocation(line: 73, column: 3, scope: !5946)
!5951 = !DILocation(line: 74, column: 30, scope: !5944)
!5952 = !DILocation(line: 74, column: 27, scope: !5944)
!5953 = !DILocation(line: 74, column: 9, scope: !5945)
!5954 = !DILocation(line: 76, column: 2, scope: !5955)
!5955 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 75, column: 7)
!5956 = !DILocation(line: 77, column: 2, scope: !5955)
!5957 = !DILocation(line: 73, column: 27, scope: !5945)
!5958 = !DILocation(line: 73, column: 3, scope: !5945)
!5959 = distinct !{!5959, !5950, !5960}
!5960 = !DILocation(line: 78, column: 7, scope: !5946)
!5961 = !DILocation(line: 80, column: 3, scope: !5925)
!5962 = !DILocation(line: 81, column: 57, scope: !5925)
!5963 = !DILocation(line: 81, column: 3, scope: !5925)
!5964 = !DILocation(line: 82, column: 1, scope: !5925)
!5965 = distinct !DISubprogram(name: "input_phi", scope: !3, file: !3, line: 804, type: !5966, scopeLine: 806, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5968)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{!1791, !3815, !2380, !2891, !2213}
!5968 = !{!5969, !5970, !5971, !5972, !5973, !5974, !5975, !5976, !5977, !5978, !5982, !5983, !5984, !5985, !5986}
!5969 = !DILocalVariable(name: "ib", arg: 1, scope: !5965, file: !3, line: 804, type: !3815)
!5970 = !DILocalVariable(name: "bb", arg: 2, scope: !5965, file: !3, line: 804, type: !2380)
!5971 = !DILocalVariable(name: "data_in", arg: 3, scope: !5965, file: !3, line: 804, type: !2891)
!5972 = !DILocalVariable(name: "fn", arg: 4, scope: !5965, file: !3, line: 805, type: !2213)
!5973 = !DILocalVariable(name: "ix", scope: !5965, file: !3, line: 807, type: !1521)
!5974 = !DILocalVariable(name: "phi_result", scope: !5965, file: !3, line: 808, type: !1468)
!5975 = !DILocalVariable(name: "i", scope: !5965, file: !3, line: 809, type: !1461)
!5976 = !DILocalVariable(name: "len", scope: !5965, file: !3, line: 809, type: !1461)
!5977 = !DILocalVariable(name: "result", scope: !5965, file: !3, line: 810, type: !1791)
!5978 = !DILocalVariable(name: "def", scope: !5979, file: !3, line: 823, type: !1468)
!5979 = distinct !DILexicalBlock(scope: !5980, file: !3, line: 822, column: 5)
!5980 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 821, column: 3)
!5981 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 821, column: 3)
!5982 = !DILocalVariable(name: "src_index", scope: !5979, file: !3, line: 824, type: !1461)
!5983 = !DILocalVariable(name: "arg_loc", scope: !5979, file: !3, line: 825, type: !1592)
!5984 = !DILocalVariable(name: "sbb", scope: !5979, file: !3, line: 826, type: !2380)
!5985 = !DILocalVariable(name: "e", scope: !5979, file: !3, line: 828, type: !1771)
!5986 = !DILocalVariable(name: "j", scope: !5979, file: !3, line: 829, type: !1461)
!5987 = !DILocation(line: 0, scope: !5965)
!5988 = !DILocation(line: 812, column: 8, scope: !5965)
!5989 = !DILocation(line: 813, column: 16, scope: !5965)
!5990 = !DILocation(line: 814, column: 9, scope: !5965)
!5991 = !DILocation(line: 815, column: 12, scope: !5965)
!5992 = !DILocation(line: 816, column: 3, scope: !5965)
!5993 = !DILocation(line: 816, column: 34, scope: !5965)
!5994 = !DILocation(line: 0, scope: !5979)
!5995 = !DILocation(line: 821, column: 8, scope: !5981)
!5996 = !DILocation(line: 0, scope: !5981)
!5997 = !DILocation(line: 821, column: 17, scope: !5980)
!5998 = !DILocation(line: 821, column: 3, scope: !5981)
!5999 = !DILocation(line: 823, column: 18, scope: !5979)
!6000 = !DILocation(line: 824, column: 23, scope: !5979)
!6001 = !DILocation(line: 825, column: 28, scope: !5979)
!6002 = !DILocation(line: 826, column: 25, scope: !5979)
!6003 = !DILocation(line: 831, column: 12, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5979, file: !3, line: 831, column: 7)
!6005 = !DILocation(line: 0, scope: !6004)
!6006 = !DILocation(line: 831, column: 21, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6004, file: !3, line: 831, column: 7)
!6008 = !DILocation(line: 831, column: 7, scope: !6004)
!6009 = !DILocation(line: 832, column: 6, scope: !6010)
!6010 = distinct !DILexicalBlock(scope: !6007, file: !3, line: 832, column: 6)
!6011 = !DILocation(line: 832, column: 25, scope: !6010)
!6012 = !DILocation(line: 832, column: 29, scope: !6010)
!6013 = !DILocation(line: 832, column: 6, scope: !6007)
!6014 = !DILocation(line: 834, column: 10, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6010, file: !3, line: 833, column: 4)
!6016 = !DILocation(line: 835, column: 6, scope: !6015)
!6017 = !DILocation(line: 831, column: 29, scope: !6007)
!6018 = !DILocation(line: 831, column: 7, scope: !6007)
!6019 = distinct !{!6019, !6008, !6020}
!6020 = !DILocation(line: 836, column: 4, scope: !6004)
!6021 = !DILocation(line: 838, column: 7, scope: !5979)
!6022 = !DILocation(line: 821, column: 25, scope: !5980)
!6023 = !DILocation(line: 821, column: 3, scope: !5980)
!6024 = distinct !{!6024, !5998, !6025}
!6025 = !DILocation(line: 839, column: 5, scope: !5981)
!6026 = !DILocation(line: 841, column: 3, scope: !5965)
!6027 = distinct !DISubprogram(name: "lto_tag_to_gimple_code", scope: !603, file: !603, line: 905, type: !6028, scopeLine: 906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6030)
!6028 = !DISubroutineType(types: !6029)
!6029 = !{!651, !602}
!6030 = !{!6031}
!6031 = !DILocalVariable(name: "tag", arg: 1, scope: !6027, file: !603, line: 905, type: !602)
!6032 = !DILocation(line: 0, scope: !6027)
!6033 = !DILocation(line: 907, column: 3, scope: !6027)
!6034 = !DILocation(line: 908, column: 62, scope: !6027)
!6035 = !DILocation(line: 908, column: 3, scope: !6027)
!6036 = distinct !DISubprogram(name: "is_gimple_assign", scope: !652, file: !652, line: 1677, type: !5917, scopeLine: 1678, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6037)
!6037 = !{!6038}
!6038 = !DILocalVariable(name: "gs", arg: 1, scope: !6036, file: !652, line: 1677, type: !4942)
!6039 = !DILocation(line: 0, scope: !6036)
!6040 = !DILocation(line: 1679, column: 10, scope: !6036)
!6041 = !DILocation(line: 1679, column: 27, scope: !6036)
!6042 = !DILocation(line: 1679, column: 3, scope: !6036)
!6043 = distinct !DISubprogram(name: "gimple_set_location", scope: !652, file: !652, line: 1156, type: !6044, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6046)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{null, !1791, !1592}
!6046 = !{!6047, !6048}
!6047 = !DILocalVariable(name: "g", arg: 1, scope: !6043, file: !652, line: 1156, type: !1791)
!6048 = !DILocalVariable(name: "location", arg: 2, scope: !6043, file: !652, line: 1156, type: !1592)
!6049 = !DILocation(line: 0, scope: !6043)
!6050 = !DILocation(line: 1158, column: 13, scope: !6043)
!6051 = !DILocation(line: 1158, column: 22, scope: !6043)
!6052 = !DILocation(line: 1159, column: 1, scope: !6043)
!6053 = distinct !DISubprogram(name: "gimple_set_block", scope: !652, file: !652, line: 1130, type: !6054, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6056)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{null, !1791, !1468}
!6056 = !{!6057, !6058}
!6057 = !DILocalVariable(name: "g", arg: 1, scope: !6053, file: !652, line: 1130, type: !1791)
!6058 = !DILocalVariable(name: "block", arg: 2, scope: !6053, file: !652, line: 1130, type: !1468)
!6059 = !DILocation(line: 0, scope: !6053)
!6060 = !DILocation(line: 1132, column: 13, scope: !6053)
!6061 = !DILocation(line: 1132, column: 19, scope: !6053)
!6062 = !DILocation(line: 1133, column: 1, scope: !6053)
!6063 = distinct !DISubprogram(name: "gimple_resx_set_region", scope: !652, file: !652, line: 3130, type: !6064, scopeLine: 3131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6066)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{null, !1791, !1461}
!6066 = !{!6067, !6068}
!6067 = !DILocalVariable(name: "gs", arg: 1, scope: !6063, file: !652, line: 3130, type: !1791)
!6068 = !DILocalVariable(name: "region", arg: 2, scope: !6063, file: !652, line: 3130, type: !1461)
!6069 = !DILocation(line: 0, scope: !6063)
!6070 = !DILocation(line: 3133, column: 22, scope: !6063)
!6071 = !DILocation(line: 3133, column: 29, scope: !6063)
!6072 = !DILocation(line: 3134, column: 1, scope: !6063)
!6073 = distinct !DISubprogram(name: "gimple_eh_must_not_throw_set_fndecl", scope: !652, file: !652, line: 2908, type: !6054, scopeLine: 2909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6074)
!6074 = !{!6075, !6076}
!6075 = !DILocalVariable(name: "gs", arg: 1, scope: !6073, file: !652, line: 2908, type: !1791)
!6076 = !DILocalVariable(name: "decl", arg: 2, scope: !6073, file: !652, line: 2908, type: !1468)
!6077 = !DILocation(line: 0, scope: !6073)
!6078 = !DILocation(line: 2911, column: 21, scope: !6073)
!6079 = !DILocation(line: 2911, column: 28, scope: !6073)
!6080 = !DILocation(line: 2912, column: 1, scope: !6073)
!6081 = distinct !DISubprogram(name: "gimple_eh_dispatch_set_region", scope: !652, file: !652, line: 3148, type: !6064, scopeLine: 3149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6082)
!6082 = !{!6083, !6084}
!6083 = !DILocalVariable(name: "gs", arg: 1, scope: !6081, file: !652, line: 3148, type: !1791)
!6084 = !DILocalVariable(name: "region", arg: 2, scope: !6081, file: !652, line: 3148, type: !1461)
!6085 = !DILocation(line: 0, scope: !6081)
!6086 = !DILocation(line: 3151, column: 22, scope: !6081)
!6087 = !DILocation(line: 3151, column: 29, scope: !6081)
!6088 = !DILocation(line: 3152, column: 1, scope: !6081)
!6089 = distinct !DISubprogram(name: "input_string_cst", scope: !3, file: !3, line: 162, type: !6090, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6092)
!6090 = !DISubroutineType(types: !6091)
!6091 = !{!1468, !2891, !3815}
!6092 = !{!6093, !6094, !6095, !6096, !6097}
!6093 = !DILocalVariable(name: "data_in", arg: 1, scope: !6089, file: !3, line: 162, type: !2891)
!6094 = !DILocalVariable(name: "ib", arg: 2, scope: !6089, file: !3, line: 162, type: !3815)
!6095 = !DILocalVariable(name: "len", scope: !6089, file: !3, line: 164, type: !7)
!6096 = !DILocalVariable(name: "ptr", scope: !6089, file: !3, line: 165, type: !1466)
!6097 = !DILocalVariable(name: "is_null", scope: !6089, file: !3, line: 166, type: !7)
!6098 = !DILocation(line: 0, scope: !6089)
!6099 = !DILocation(line: 164, column: 3, scope: !6089)
!6100 = !DILocation(line: 168, column: 13, scope: !6089)
!6101 = !DILocation(line: 169, column: 7, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 169, column: 7)
!6103 = !DILocation(line: 169, column: 7, scope: !6089)
!6104 = !DILocation(line: 172, column: 9, scope: !6089)
!6105 = !DILocation(line: 173, column: 24, scope: !6089)
!6106 = !DILocation(line: 173, column: 10, scope: !6089)
!6107 = !DILocation(line: 173, column: 3, scope: !6089)
!6108 = !DILocation(line: 174, column: 1, scope: !6089)
!6109 = distinct !DISubprogram(name: "gimple_set_op", scope: !652, file: !652, line: 1663, type: !6110, scopeLine: 1664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6112)
!6110 = !DISubroutineType(types: !6111)
!6111 = !{null, !1791, !7, !1468}
!6112 = !{!6113, !6114, !6115}
!6113 = !DILocalVariable(name: "gs", arg: 1, scope: !6109, file: !652, line: 1663, type: !1791)
!6114 = !DILocalVariable(name: "i", arg: 2, scope: !6109, file: !652, line: 1663, type: !7)
!6115 = !DILocalVariable(name: "op", arg: 3, scope: !6109, file: !652, line: 1663, type: !1468)
!6116 = !DILocation(line: 0, scope: !6109)
!6117 = !DILocation(line: 1665, column: 3, scope: !6109)
!6118 = !DILocation(line: 1671, column: 3, scope: !6109)
!6119 = !DILocation(line: 1671, column: 22, scope: !6109)
!6120 = !DILocation(line: 1672, column: 1, scope: !6109)
!6121 = distinct !DISubprogram(name: "handled_component_p", scope: !135, file: !135, line: 4551, type: !6122, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6127)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{!1460, !6124}
!6124 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !1449, line: 59, baseType: !6125)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1470)
!6127 = !{!6128}
!6128 = !DILocalVariable(name: "t", arg: 1, scope: !6121, file: !135, line: 4551, type: !6124)
!6129 = !DILocation(line: 0, scope: !6121)
!6130 = !DILocation(line: 4553, column: 11, scope: !6121)
!6131 = !DILocation(line: 4553, column: 3, scope: !6121)
!6132 = !DILocation(line: 4565, column: 7, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6121, file: !135, line: 4554, column: 5)
!6134 = !DILocation(line: 0, scope: !6133)
!6135 = !DILocation(line: 4567, column: 1, scope: !6121)
!6136 = distinct !DISubprogram(name: "maybe_fixup_handled_component", scope: !3, file: !3, line: 883, type: !6137, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6139)
!6137 = !DISubroutineType(types: !6138)
!6138 = !{null, !1468}
!6139 = !{!6140, !6141, !6142}
!6140 = !DILocalVariable(name: "op", arg: 1, scope: !6136, file: !3, line: 883, type: !1468)
!6141 = !DILocalVariable(name: "decl_type", scope: !6136, file: !3, line: 885, type: !1468)
!6142 = !DILocalVariable(name: "wanted_type", scope: !6136, file: !3, line: 886, type: !1468)
!6143 = !DILocation(line: 0, scope: !6136)
!6144 = !DILocation(line: 888, column: 3, scope: !6136)
!6145 = !DILocation(line: 888, column: 31, scope: !6136)
!6146 = !DILocation(line: 888, column: 10, scope: !6136)
!6147 = distinct !{!6147, !6144, !6148}
!6148 = !DILocation(line: 889, column: 10, scope: !6136)
!6149 = !DILocation(line: 890, column: 7, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 890, column: 7)
!6151 = !DILocation(line: 890, column: 40, scope: !6150)
!6152 = !DILocation(line: 890, column: 7, scope: !6136)
!6153 = !DILocation(line: 893, column: 15, scope: !6136)
!6154 = !DILocation(line: 895, column: 11, scope: !6136)
!6155 = !DILocation(line: 895, column: 3, scope: !6136)
!6156 = !DILocation(line: 899, column: 21, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 896, column: 5)
!6158 = !DILocation(line: 900, column: 7, scope: !6157)
!6159 = !DILocation(line: 903, column: 11, scope: !6160)
!6160 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 903, column: 11)
!6161 = !DILocation(line: 903, column: 33, scope: !6160)
!6162 = !DILocation(line: 904, column: 4, scope: !6160)
!6163 = !DILocation(line: 904, column: 8, scope: !6160)
!6164 = !DILocation(line: 904, column: 33, scope: !6160)
!6165 = !DILocation(line: 904, column: 30, scope: !6160)
!6166 = !DILocation(line: 905, column: 8, scope: !6160)
!6167 = !DILocation(line: 905, column: 11, scope: !6160)
!6168 = !DILocation(line: 903, column: 11, scope: !6157)
!6169 = !DILocation(line: 910, column: 39, scope: !6157)
!6170 = !DILocation(line: 910, column: 21, scope: !6157)
!6171 = !DILocation(line: 911, column: 7, scope: !6157)
!6172 = !DILocation(line: 914, column: 11, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 914, column: 11)
!6174 = !DILocation(line: 914, column: 33, scope: !6173)
!6175 = !DILocation(line: 915, column: 4, scope: !6173)
!6176 = !DILocation(line: 915, column: 8, scope: !6173)
!6177 = !DILocation(line: 915, column: 33, scope: !6173)
!6178 = !DILocation(line: 915, column: 30, scope: !6173)
!6179 = !DILocation(line: 916, column: 8, scope: !6173)
!6180 = !DILocation(line: 916, column: 11, scope: !6173)
!6181 = !DILocation(line: 914, column: 11, scope: !6157)
!6182 = !DILocation(line: 921, column: 39, scope: !6157)
!6183 = !DILocation(line: 921, column: 21, scope: !6157)
!6184 = !DILocation(line: 922, column: 7, scope: !6157)
!6185 = !DILocation(line: 931, column: 11, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 931, column: 11)
!6187 = !DILocation(line: 931, column: 33, scope: !6186)
!6188 = !DILocation(line: 932, column: 4, scope: !6186)
!6189 = !DILocation(line: 932, column: 8, scope: !6186)
!6190 = !DILocation(line: 932, column: 33, scope: !6186)
!6191 = !DILocation(line: 932, column: 30, scope: !6186)
!6192 = !DILocation(line: 933, column: 8, scope: !6186)
!6193 = !DILocation(line: 933, column: 11, scope: !6186)
!6194 = !DILocation(line: 931, column: 11, scope: !6157)
!6195 = !DILocation(line: 936, column: 41, scope: !6157)
!6196 = !DILocation(line: 936, column: 21, scope: !6157)
!6197 = !DILocation(line: 937, column: 7, scope: !6157)
!6198 = !DILocation(line: 940, column: 7, scope: !6157)
!6199 = !DILocation(line: 941, column: 5, scope: !6157)
!6200 = !DILocation(line: 943, column: 8, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 943, column: 7)
!6202 = !DILocation(line: 943, column: 7, scope: !6136)
!6203 = !DILocation(line: 944, column: 28, scope: !6201)
!6204 = !DILocation(line: 944, column: 26, scope: !6201)
!6205 = !DILocation(line: 944, column: 5, scope: !6201)
!6206 = !DILocation(line: 946, column: 1, scope: !6136)
!6207 = distinct !DISubprogram(name: "emit_label_in_global_context_p", scope: !603, file: !603, line: 1002, type: !6208, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6210)
!6208 = !DISubroutineType(types: !6209)
!6209 = !{!1460, !1468}
!6210 = !{!6211}
!6211 = !DILocalVariable(name: "label", arg: 1, scope: !6207, file: !603, line: 1002, type: !1468)
!6212 = !DILocation(line: 0, scope: !6207)
!6213 = !DILocation(line: 1004, column: 10, scope: !6207)
!6214 = !DILocation(line: 1004, column: 32, scope: !6207)
!6215 = !DILocation(line: 1004, column: 35, scope: !6207)
!6216 = !DILocation(line: 1004, column: 3, scope: !6207)
!6217 = distinct !DISubprogram(name: "gimple_label_label", scope: !652, file: !652, line: 2444, type: !6218, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6220)
!6218 = !DISubroutineType(types: !6219)
!6219 = !{!1468, !4942}
!6220 = !{!6221}
!6221 = !DILocalVariable(name: "gs", arg: 1, scope: !6217, file: !652, line: 2444, type: !4942)
!6222 = !DILocation(line: 0, scope: !6217)
!6223 = !DILocation(line: 2447, column: 10, scope: !6217)
!6224 = !DILocation(line: 2447, column: 3, scope: !6217)
!6225 = distinct !DISubprogram(name: "gimple_asm_noutputs", scope: !652, file: !652, line: 2591, type: !4940, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6226)
!6226 = !{!6227}
!6227 = !DILocalVariable(name: "gs", arg: 1, scope: !6225, file: !652, line: 2591, type: !4942)
!6228 = !DILocation(line: 0, scope: !6225)
!6229 = !DILocation(line: 2594, column: 14, scope: !6225)
!6230 = !DILocation(line: 2594, column: 25, scope: !6225)
!6231 = !DILocation(line: 2594, column: 10, scope: !6225)
!6232 = !DILocation(line: 2594, column: 3, scope: !6225)
!6233 = distinct !DISubprogram(name: "gimple_asm_output_op", scope: !652, file: !652, line: 2652, type: !6234, scopeLine: 2653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6236)
!6234 = !DISubroutineType(types: !6235)
!6235 = !{!1468, !4942, !7}
!6236 = !{!6237, !6238}
!6237 = !DILocalVariable(name: "gs", arg: 1, scope: !6233, file: !652, line: 2652, type: !4942)
!6238 = !DILocalVariable(name: "index", arg: 2, scope: !6233, file: !652, line: 2652, type: !7)
!6239 = !DILocation(line: 0, scope: !6233)
!6240 = !DILocation(line: 2655, column: 3, scope: !6233)
!6241 = !DILocation(line: 2656, column: 48, scope: !6233)
!6242 = !DILocation(line: 2656, column: 33, scope: !6233)
!6243 = !DILocation(line: 2656, column: 31, scope: !6233)
!6244 = !DILocation(line: 2656, column: 10, scope: !6233)
!6245 = !DILocation(line: 2656, column: 3, scope: !6233)
!6246 = distinct !DISubprogram(name: "maybe_fixup_decls", scope: !3, file: !3, line: 953, type: !6247, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6249)
!6247 = !DISubroutineType(types: !6248)
!6248 = !{null, !1791}
!6249 = !{!6250, !6251, !6254, !6255}
!6250 = !DILocalVariable(name: "stmt", arg: 1, scope: !6246, file: !3, line: 953, type: !1791)
!6251 = !DILocalVariable(name: "lhs", scope: !6252, file: !3, line: 961, type: !1468)
!6252 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 960, column: 5)
!6253 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 959, column: 7)
!6254 = !DILocalVariable(name: "rhs", scope: !6252, file: !3, line: 962, type: !1468)
!6255 = !DILocalVariable(name: "lhs", scope: !6256, file: !3, line: 981, type: !1468)
!6256 = distinct !DILexicalBlock(scope: !6257, file: !3, line: 980, column: 5)
!6257 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 979, column: 12)
!6258 = !DILocation(line: 0, scope: !6246)
!6259 = !DILocation(line: 959, column: 7, scope: !6253)
!6260 = !DILocation(line: 959, column: 7, scope: !6246)
!6261 = !DILocation(line: 961, column: 18, scope: !6252)
!6262 = !DILocation(line: 0, scope: !6252)
!6263 = !DILocation(line: 962, column: 18, scope: !6252)
!6264 = !DILocation(line: 965, column: 11, scope: !6265)
!6265 = distinct !DILexicalBlock(scope: !6252, file: !3, line: 965, column: 11)
!6266 = !DILocation(line: 965, column: 27, scope: !6265)
!6267 = !DILocation(line: 965, column: 11, scope: !6252)
!6268 = !DILocation(line: 967, column: 36, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 967, column: 8)
!6270 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 966, column: 2)
!6271 = !DILocation(line: 967, column: 53, scope: !6269)
!6272 = !DILocation(line: 967, column: 9, scope: !6269)
!6273 = !DILocation(line: 967, column: 8, scope: !6270)
!6274 = !DILocation(line: 968, column: 36, scope: !6269)
!6275 = !DILocation(line: 968, column: 6, scope: !6269)
!6276 = !DILocation(line: 972, column: 16, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6265, file: !3, line: 972, column: 16)
!6278 = !DILocation(line: 972, column: 32, scope: !6277)
!6279 = !DILocation(line: 972, column: 16, scope: !6265)
!6280 = !DILocation(line: 974, column: 36, scope: !6281)
!6281 = distinct !DILexicalBlock(scope: !6282, file: !3, line: 974, column: 8)
!6282 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 973, column: 2)
!6283 = !DILocation(line: 974, column: 53, scope: !6281)
!6284 = !DILocation(line: 974, column: 9, scope: !6281)
!6285 = !DILocation(line: 974, column: 8, scope: !6282)
!6286 = !DILocation(line: 975, column: 35, scope: !6281)
!6287 = !DILocation(line: 975, column: 6, scope: !6281)
!6288 = !DILocation(line: 979, column: 12, scope: !6257)
!6289 = !DILocation(line: 979, column: 12, scope: !6253)
!6290 = !DILocation(line: 981, column: 18, scope: !6256)
!6291 = !DILocation(line: 0, scope: !6256)
!6292 = !DILocation(line: 983, column: 11, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 983, column: 11)
!6294 = !DILocation(line: 983, column: 15, scope: !6293)
!6295 = !DILocation(line: 983, column: 18, scope: !6293)
!6296 = !DILocation(line: 983, column: 34, scope: !6293)
!6297 = !DILocation(line: 983, column: 11, scope: !6256)
!6298 = !DILocation(line: 985, column: 36, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 985, column: 8)
!6300 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 984, column: 2)
!6301 = !DILocation(line: 986, column: 8, scope: !6299)
!6302 = !DILocation(line: 985, column: 9, scope: !6299)
!6303 = !DILocation(line: 985, column: 8, scope: !6300)
!6304 = !DILocation(line: 987, column: 33, scope: !6299)
!6305 = !DILocation(line: 987, column: 6, scope: !6299)
!6306 = !DILocation(line: 994, column: 1, scope: !6246)
!6307 = distinct !DISubprogram(name: "lto_tag_is_gimple_code_p", scope: !603, file: !603, line: 886, type: !6308, scopeLine: 887, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6310)
!6308 = !DISubroutineType(types: !6309)
!6309 = !{!1460, !602}
!6310 = !{!6311}
!6311 = !DILocalVariable(name: "tag", arg: 1, scope: !6307, file: !603, line: 886, type: !602)
!6312 = !DILocation(line: 0, scope: !6307)
!6313 = !DILocation(line: 889, column: 3, scope: !6307)
!6314 = !DILocation(line: 888, column: 10, scope: !6307)
!6315 = !DILocation(line: 888, column: 3, scope: !6307)
!6316 = distinct !DISubprogram(name: "gimple_code", scope: !652, file: !652, line: 1052, type: !6317, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6319)
!6317 = !DISubroutineType(types: !6318)
!6318 = !{!651, !4942}
!6319 = !{!6320}
!6320 = !DILocalVariable(name: "g", arg: 1, scope: !6316, file: !652, line: 1052, type: !4942)
!6321 = !DILocation(line: 0, scope: !6316)
!6322 = !DILocation(line: 1054, column: 20, scope: !6316)
!6323 = !DILocation(line: 1054, column: 3, scope: !6316)
!6324 = distinct !DISubprogram(name: "gimple_has_ops", scope: !652, file: !652, line: 1274, type: !5917, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6325)
!6325 = !{!6326}
!6326 = !DILocalVariable(name: "g", arg: 1, scope: !6324, file: !652, line: 1274, type: !4942)
!6327 = !DILocation(line: 0, scope: !6324)
!6328 = !DILocation(line: 1276, column: 10, scope: !6324)
!6329 = !DILocation(line: 1276, column: 26, scope: !6324)
!6330 = !DILocation(line: 1276, column: 41, scope: !6324)
!6331 = !DILocation(line: 1276, column: 44, scope: !6324)
!6332 = !DILocation(line: 1276, column: 60, scope: !6324)
!6333 = !DILocation(line: 1276, column: 3, scope: !6324)
!6334 = distinct !DISubprogram(name: "gimple_num_ops", scope: !652, file: !652, line: 1596, type: !4940, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6335)
!6335 = !{!6336}
!6336 = !DILocalVariable(name: "gs", arg: 1, scope: !6334, file: !652, line: 1596, type: !4942)
!6337 = !DILocation(line: 0, scope: !6334)
!6338 = !DILocation(line: 1598, column: 21, scope: !6334)
!6339 = !DILocation(line: 1598, column: 3, scope: !6334)
!6340 = distinct !DISubprogram(name: "gimple_ops", scope: !652, file: !652, line: 1614, type: !6341, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6343)
!6341 = !DISubroutineType(types: !6342)
!6342 = !{!1826, !1791}
!6343 = !{!6344, !6345}
!6344 = !DILocalVariable(name: "gs", arg: 1, scope: !6340, file: !652, line: 1614, type: !1791)
!6345 = !DILocalVariable(name: "off", scope: !6340, file: !652, line: 1616, type: !1937)
!6346 = !DILocation(line: 0, scope: !6340)
!6347 = !DILocation(line: 1621, column: 28, scope: !6340)
!6348 = !DILocation(line: 1621, column: 9, scope: !6340)
!6349 = !DILocation(line: 1622, column: 3, scope: !6340)
!6350 = !DILocation(line: 1624, column: 20, scope: !6340)
!6351 = !DILocation(line: 1624, column: 32, scope: !6340)
!6352 = !DILocation(line: 1624, column: 10, scope: !6340)
!6353 = !DILocation(line: 1624, column: 3, scope: !6340)
!6354 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !652, file: !652, line: 1073, type: !6355, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6357)
!6355 = !DISubroutineType(types: !6356)
!6356 = !{!690, !1791}
!6357 = !{!6358}
!6358 = !DILocalVariable(name: "gs", arg: 1, scope: !6354, file: !652, line: 1073, type: !1791)
!6359 = !DILocation(line: 0, scope: !6354)
!6360 = !DILocation(line: 1075, column: 24, scope: !6354)
!6361 = !DILocation(line: 1075, column: 10, scope: !6354)
!6362 = !DILocation(line: 1075, column: 3, scope: !6354)
!6363 = distinct !DISubprogram(name: "gss_for_code", scope: !652, file: !652, line: 1061, type: !6364, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6366)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{!690, !651}
!6366 = !{!6367}
!6367 = !DILocalVariable(name: "code", arg: 1, scope: !6363, file: !652, line: 1061, type: !651)
!6368 = !DILocation(line: 0, scope: !6363)
!6369 = !DILocation(line: 1066, column: 10, scope: !6363)
!6370 = !DILocation(line: 1066, column: 3, scope: !6363)
!6371 = distinct !DISubprogram(name: "gimple_op", scope: !652, file: !652, line: 1631, type: !6234, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6372)
!6372 = !{!6373, !6374}
!6373 = !DILocalVariable(name: "gs", arg: 1, scope: !6371, file: !652, line: 1631, type: !4942)
!6374 = !DILocalVariable(name: "i", arg: 2, scope: !6371, file: !652, line: 1631, type: !7)
!6375 = !DILocation(line: 0, scope: !6371)
!6376 = !DILocation(line: 1633, column: 7, scope: !6377)
!6377 = distinct !DILexicalBlock(scope: !6371, file: !652, line: 1633, column: 7)
!6378 = !DILocation(line: 1633, column: 7, scope: !6371)
!6379 = !DILocation(line: 1638, column: 14, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6377, file: !652, line: 1634, column: 5)
!6381 = !DILocation(line: 1638, column: 7, scope: !6380)
!6382 = !DILocation(line: 0, scope: !6377)
!6383 = !DILocation(line: 1642, column: 1, scope: !6371)
!6384 = distinct !DISubprogram(name: "gimple_assign_lhs", scope: !652, file: !652, line: 1694, type: !6218, scopeLine: 1695, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6385)
!6385 = !{!6386}
!6386 = !DILocalVariable(name: "gs", arg: 1, scope: !6384, file: !652, line: 1694, type: !4942)
!6387 = !DILocation(line: 0, scope: !6384)
!6388 = !DILocation(line: 1697, column: 10, scope: !6384)
!6389 = !DILocation(line: 1697, column: 3, scope: !6384)
!6390 = distinct !DISubprogram(name: "gimple_assign_rhs1", scope: !652, file: !652, line: 1727, type: !6218, scopeLine: 1728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6391)
!6391 = !{!6392}
!6392 = !DILocalVariable(name: "gs", arg: 1, scope: !6390, file: !652, line: 1727, type: !4942)
!6393 = !DILocation(line: 0, scope: !6390)
!6394 = !DILocation(line: 1730, column: 10, scope: !6390)
!6395 = !DILocation(line: 1730, column: 3, scope: !6390)
!6396 = distinct !DISubprogram(name: "gimple_assign_set_rhs1", scope: !652, file: !652, line: 1747, type: !6054, scopeLine: 1748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6397)
!6397 = !{!6398, !6399}
!6398 = !DILocalVariable(name: "gs", arg: 1, scope: !6396, file: !652, line: 1747, type: !1791)
!6399 = !DILocalVariable(name: "rhs", arg: 2, scope: !6396, file: !652, line: 1747, type: !1468)
!6400 = !DILocation(line: 0, scope: !6396)
!6401 = !DILocation(line: 1751, column: 3, scope: !6396)
!6402 = !DILocation(line: 1752, column: 1, scope: !6396)
!6403 = distinct !DISubprogram(name: "gimple_assign_set_lhs", scope: !652, file: !652, line: 1714, type: !6054, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6404)
!6404 = !{!6405, !6406}
!6405 = !DILocalVariable(name: "gs", arg: 1, scope: !6403, file: !652, line: 1714, type: !1791)
!6406 = !DILocalVariable(name: "lhs", arg: 2, scope: !6403, file: !652, line: 1714, type: !1468)
!6407 = !DILocation(line: 0, scope: !6403)
!6408 = !DILocation(line: 1717, column: 3, scope: !6403)
!6409 = !DILocation(line: 1719, column: 7, scope: !6410)
!6410 = distinct !DILexicalBlock(scope: !6403, file: !652, line: 1719, column: 7)
!6411 = !DILocation(line: 1719, column: 11, scope: !6410)
!6412 = !DILocation(line: 1719, column: 14, scope: !6410)
!6413 = !DILocation(line: 1719, column: 30, scope: !6410)
!6414 = !DILocation(line: 1719, column: 7, scope: !6403)
!6415 = !DILocation(line: 1720, column: 5, scope: !6410)
!6416 = !DILocation(line: 1720, column: 29, scope: !6410)
!6417 = !DILocation(line: 1721, column: 1, scope: !6403)
!6418 = distinct !DISubprogram(name: "is_gimple_call", scope: !652, file: !652, line: 1870, type: !5917, scopeLine: 1871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6419)
!6419 = !{!6420}
!6420 = !DILocalVariable(name: "gs", arg: 1, scope: !6418, file: !652, line: 1870, type: !4942)
!6421 = !DILocation(line: 0, scope: !6418)
!6422 = !DILocation(line: 1872, column: 10, scope: !6418)
!6423 = !DILocation(line: 1872, column: 27, scope: !6418)
!6424 = !DILocation(line: 1872, column: 3, scope: !6418)
!6425 = distinct !DISubprogram(name: "gimple_call_lhs", scope: !652, file: !652, line: 1878, type: !6218, scopeLine: 1879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6426)
!6426 = !{!6427}
!6427 = !DILocalVariable(name: "gs", arg: 1, scope: !6425, file: !652, line: 1878, type: !4942)
!6428 = !DILocation(line: 0, scope: !6425)
!6429 = !DILocation(line: 1881, column: 10, scope: !6425)
!6430 = !DILocation(line: 1881, column: 3, scope: !6425)
!6431 = distinct !DISubprogram(name: "gimple_call_return_type", scope: !652, file: !652, line: 1966, type: !6218, scopeLine: 1967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6432)
!6432 = !{!6433, !6434, !6435}
!6433 = !DILocalVariable(name: "gs", arg: 1, scope: !6431, file: !652, line: 1966, type: !4942)
!6434 = !DILocalVariable(name: "fn", scope: !6431, file: !652, line: 1968, type: !1468)
!6435 = !DILocalVariable(name: "type", scope: !6431, file: !652, line: 1969, type: !1468)
!6436 = !DILocation(line: 0, scope: !6431)
!6437 = !DILocation(line: 1968, column: 13, scope: !6431)
!6438 = !DILocation(line: 1969, column: 15, scope: !6431)
!6439 = !DILocation(line: 1972, column: 10, scope: !6431)
!6440 = !DILocation(line: 1976, column: 10, scope: !6431)
!6441 = !DILocation(line: 1976, column: 3, scope: !6431)
!6442 = distinct !DISubprogram(name: "gimple_call_set_lhs", scope: !652, file: !652, line: 1898, type: !6054, scopeLine: 1899, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6443)
!6443 = !{!6444, !6445}
!6444 = !DILocalVariable(name: "gs", arg: 1, scope: !6442, file: !652, line: 1898, type: !1791)
!6445 = !DILocalVariable(name: "lhs", arg: 2, scope: !6442, file: !652, line: 1898, type: !1468)
!6446 = !DILocation(line: 0, scope: !6442)
!6447 = !DILocation(line: 1901, column: 3, scope: !6442)
!6448 = !DILocation(line: 1902, column: 7, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6442, file: !652, line: 1902, column: 7)
!6450 = !DILocation(line: 1902, column: 11, scope: !6449)
!6451 = !DILocation(line: 1902, column: 14, scope: !6449)
!6452 = !DILocation(line: 1902, column: 30, scope: !6449)
!6453 = !DILocation(line: 1902, column: 7, scope: !6442)
!6454 = !DILocation(line: 1903, column: 5, scope: !6449)
!6455 = !DILocation(line: 1903, column: 29, scope: !6449)
!6456 = !DILocation(line: 1904, column: 1, scope: !6442)
!6457 = distinct !DISubprogram(name: "gimple_call_fn", scope: !652, file: !652, line: 1911, type: !6218, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6458)
!6458 = !{!6459}
!6459 = !DILocalVariable(name: "gs", arg: 1, scope: !6457, file: !652, line: 1911, type: !4942)
!6460 = !DILocation(line: 0, scope: !6457)
!6461 = !DILocation(line: 1914, column: 10, scope: !6457)
!6462 = !DILocation(line: 1914, column: 3, scope: !6457)
!6463 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !135, file: !135, line: 182, type: !6464, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6466)
!6464 = !DISubroutineType(types: !6465)
!6465 = !{!1468, !5048, !7}
!6466 = !{!6467, !6468}
!6467 = !DILocalVariable(name: "vec_", arg: 1, scope: !6463, file: !135, line: 182, type: !5048)
!6468 = !DILocalVariable(name: "ix_", arg: 2, scope: !6463, file: !135, line: 182, type: !7)
!6469 = !DILocation(line: 0, scope: !6463)
!6470 = !DILocation(line: 182, column: 1, scope: !6463)
!6471 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !337, file: !337, line: 150, type: !6472, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6476)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!7, !6474}
!6474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6475, size: 64)
!6475 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1764)
!6476 = !{!6477}
!6477 = !DILocalVariable(name: "vec_", arg: 1, scope: !6471, file: !337, line: 150, type: !6474)
!6478 = !DILocation(line: 0, scope: !6471)
!6479 = !DILocation(line: 150, column: 1, scope: !6471)
!6480 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !337, file: !337, line: 150, type: !6481, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6483)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{!1771, !6474, !7}
!6483 = !{!6484, !6485}
!6484 = !DILocalVariable(name: "vec_", arg: 1, scope: !6480, file: !337, line: 150, type: !6474)
!6485 = !DILocalVariable(name: "ix_", arg: 2, scope: !6480, file: !337, line: 150, type: !7)
!6486 = !DILocation(line: 0, scope: !6480)
!6487 = !DILocation(line: 150, column: 1, scope: !6480)
!6488 = distinct !DISubprogram(name: "gimple_seq_first", scope: !652, file: !652, line: 159, type: !6489, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6494)
!6489 = !DISubroutineType(types: !6490)
!6490 = !{!1786, !6491}
!6491 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple_seq", file: !1449, line: 67, baseType: !6492)
!6492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6493, size: 64)
!6493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1783)
!6494 = !{!6495}
!6495 = !DILocalVariable(name: "s", arg: 1, scope: !6488, file: !652, line: 159, type: !6491)
!6496 = !DILocation(line: 0, scope: !6488)
!6497 = !DILocation(line: 161, column: 10, scope: !6488)
!6498 = !DILocation(line: 161, column: 17, scope: !6488)
!6499 = !DILocation(line: 161, column: 3, scope: !6488)
!6500 = distinct !DISubprogram(name: "ei_container", scope: !337, file: !337, line: 685, type: !6501, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6503)
!6501 = !DISubroutineType(types: !6502)
!6502 = !{!1759, !4334}
!6503 = !{!6504}
!6504 = !DILocalVariable(name: "i", arg: 1, scope: !6500, file: !337, line: 685, type: !4334)
!6505 = !DILocation(line: 687, column: 3, scope: !6500)
!6506 = !DILocation(line: 688, column: 10, scope: !6500)
!6507 = !DILocation(line: 688, column: 3, scope: !6500)
!6508 = distinct !DISubprogram(name: "fixup_call_stmt_edges_1", scope: !3, file: !3, line: 1242, type: !3041, scopeLine: 1243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6509)
!6509 = !{!6510, !6511, !6512}
!6510 = !DILocalVariable(name: "node", arg: 1, scope: !6508, file: !3, line: 1242, type: !2932)
!6511 = !DILocalVariable(name: "stmts", arg: 2, scope: !6508, file: !3, line: 1242, type: !3043)
!6512 = !DILocalVariable(name: "cedge", scope: !6508, file: !3, line: 1244, type: !2937)
!6513 = !DILocation(line: 0, scope: !6508)
!6514 = !DILocation(line: 1245, column: 22, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 1245, column: 3)
!6516 = !DILocation(line: 1245, column: 8, scope: !6515)
!6517 = !DILocation(line: 0, scope: !6515)
!6518 = !DILocation(line: 1245, column: 3, scope: !6515)
!6519 = !DILocation(line: 1246, column: 37, scope: !6520)
!6520 = distinct !DILexicalBlock(scope: !6515, file: !3, line: 1245, column: 3)
!6521 = !DILocation(line: 1246, column: 24, scope: !6520)
!6522 = !DILocation(line: 1246, column: 12, scope: !6520)
!6523 = !DILocation(line: 1246, column: 22, scope: !6520)
!6524 = !DILocation(line: 1245, column: 53, scope: !6520)
!6525 = !DILocation(line: 1245, column: 3, scope: !6520)
!6526 = distinct !{!6526, !6518, !6527}
!6527 = !DILocation(line: 1246, column: 49, scope: !6515)
!6528 = !DILocation(line: 1247, column: 1, scope: !6508)
!6529 = distinct !DISubprogram(name: "VEC_alias_pair_gc_safe_push", scope: !135, file: !135, line: 198, type: !6530, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6535)
!6530 = !DISubroutineType(types: !6531)
!6531 = !{!4480, !6532, !6533}
!6532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!6533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6534, size: 64)
!6534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3244)
!6535 = !{!6536, !6537}
!6536 = !DILocalVariable(name: "vec_", arg: 1, scope: !6529, file: !135, line: 198, type: !6532)
!6537 = !DILocalVariable(name: "obj_", arg: 2, scope: !6529, file: !135, line: 198, type: !6533)
!6538 = !DILocation(line: 0, scope: !6529)
!6539 = !DILocation(line: 198, column: 1, scope: !6529)
!6540 = distinct !DISubprogram(name: "VEC_alias_pair_gc_reserve", scope: !135, file: !135, line: 198, type: !6541, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6543)
!6541 = !DISubroutineType(types: !6542)
!6542 = !{!1461, !6532, !1461}
!6543 = !{!6544, !6545, !6546}
!6544 = !DILocalVariable(name: "vec_", arg: 1, scope: !6540, file: !135, line: 198, type: !6532)
!6545 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6540, file: !135, line: 198, type: !1461)
!6546 = !DILocalVariable(name: "extend", scope: !6540, file: !135, line: 198, type: !1461)
!6547 = !DILocation(line: 0, scope: !6540)
!6548 = !DILocation(line: 198, column: 1, scope: !6540)
!6549 = !DILocation(line: 198, column: 1, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6540, file: !135, line: 198, column: 1)
!6551 = distinct !DISubprogram(name: "VEC_alias_pair_base_quick_push", scope: !135, file: !135, line: 197, type: !6552, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6555)
!6552 = !DISubroutineType(types: !6553)
!6553 = !{!4480, !6554, !6533}
!6554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3237, size: 64)
!6555 = !{!6556, !6557, !6558}
!6556 = !DILocalVariable(name: "vec_", arg: 1, scope: !6551, file: !135, line: 197, type: !6554)
!6557 = !DILocalVariable(name: "obj_", arg: 2, scope: !6551, file: !135, line: 197, type: !6533)
!6558 = !DILocalVariable(name: "slot_", scope: !6551, file: !135, line: 197, type: !4480)
!6559 = !DILocation(line: 0, scope: !6551)
!6560 = !DILocation(line: 197, column: 1, scope: !6551)
!6561 = distinct !DISubprogram(name: "VEC_alias_pair_base_space", scope: !135, file: !135, line: 197, type: !6562, scopeLine: 197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6564)
!6562 = !DISubroutineType(types: !6563)
!6563 = !{!1461, !6554, !1461}
!6564 = !{!6565, !6566}
!6565 = !DILocalVariable(name: "vec_", arg: 1, scope: !6561, file: !135, line: 197, type: !6554)
!6566 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6561, file: !135, line: 197, type: !1461)
!6567 = !DILocation(line: 0, scope: !6561)
!6568 = !DILocation(line: 197, column: 1, scope: !6561)
!6569 = distinct !DISubprogram(name: "VEC_bitpack_word_t_heap_reserve", scope: !603, file: !603, line: 154, type: !6570, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6572)
!6570 = !DISubroutineType(types: !6571)
!6571 = !{!1461, !3845, !1461}
!6572 = !{!6573, !6574, !6575}
!6573 = !DILocalVariable(name: "vec_", arg: 1, scope: !6569, file: !603, line: 154, type: !3845)
!6574 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6569, file: !603, line: 154, type: !1461)
!6575 = !DILocalVariable(name: "extend", scope: !6569, file: !603, line: 154, type: !1461)
!6576 = !DILocation(line: 0, scope: !6569)
!6577 = !DILocation(line: 154, column: 1, scope: !6569)
!6578 = !DILocation(line: 154, column: 1, scope: !6579)
!6579 = distinct !DILexicalBlock(scope: !6569, file: !603, line: 154, column: 1)
!6580 = distinct !DISubprogram(name: "VEC_bitpack_word_t_base_quick_push", scope: !603, file: !603, line: 153, type: !6581, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6584)
!6581 = !DISubroutineType(types: !6582)
!6582 = !{!3844, !6583, !3261}
!6583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3254, size: 64)
!6584 = !{!6585, !6586, !6587}
!6585 = !DILocalVariable(name: "vec_", arg: 1, scope: !6580, file: !603, line: 153, type: !6583)
!6586 = !DILocalVariable(name: "obj_", arg: 2, scope: !6580, file: !603, line: 153, type: !3261)
!6587 = !DILocalVariable(name: "slot_", scope: !6580, file: !603, line: 153, type: !3844)
!6588 = !DILocation(line: 0, scope: !6580)
!6589 = !DILocation(line: 153, column: 1, scope: !6580)
!6590 = distinct !DISubprogram(name: "VEC_bitpack_word_t_base_space", scope: !603, file: !603, line: 153, type: !6591, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6593)
!6591 = !DISubroutineType(types: !6592)
!6592 = !{!1461, !6583, !1461}
!6593 = !{!6594, !6595}
!6594 = !DILocalVariable(name: "vec_", arg: 1, scope: !6590, file: !603, line: 153, type: !6583)
!6595 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6590, file: !603, line: 153, type: !1461)
!6596 = !DILocation(line: 0, scope: !6590)
!6597 = !DILocation(line: 153, column: 1, scope: !6590)
!6598 = distinct !DISubprogram(name: "lto_file_decl_data_get_type", scope: !603, file: !603, line: 1041, type: !4053, scopeLine: 1041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6599)
!6599 = !{!6600, !6601, !6602}
!6600 = !DILocalVariable(name: "data", arg: 1, scope: !6598, file: !603, line: 1041, type: !2895)
!6601 = !DILocalVariable(name: "idx", arg: 2, scope: !6598, file: !603, line: 1041, type: !7)
!6602 = !DILocalVariable(name: "state", scope: !6598, file: !603, line: 1041, type: !2899)
!6603 = !DILocation(line: 0, scope: !6598)
!6604 = !DILocation(line: 1041, column: 1, scope: !6598)
!6605 = distinct !DISubprogram(name: "lto_file_decl_data_get_field_decl", scope: !603, file: !603, line: 1042, type: !4053, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6606)
!6606 = !{!6607, !6608, !6609}
!6607 = !DILocalVariable(name: "data", arg: 1, scope: !6605, file: !603, line: 1042, type: !2895)
!6608 = !DILocalVariable(name: "idx", arg: 2, scope: !6605, file: !603, line: 1042, type: !7)
!6609 = !DILocalVariable(name: "state", scope: !6605, file: !603, line: 1042, type: !2899)
!6610 = !DILocation(line: 0, scope: !6605)
!6611 = !DILocation(line: 1042, column: 1, scope: !6605)
!6612 = distinct !DISubprogram(name: "lto_file_decl_data_get_fn_decl", scope: !603, file: !603, line: 1043, type: !4053, scopeLine: 1043, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6613)
!6613 = !{!6614, !6615, !6616}
!6614 = !DILocalVariable(name: "data", arg: 1, scope: !6612, file: !603, line: 1043, type: !2895)
!6615 = !DILocalVariable(name: "idx", arg: 2, scope: !6612, file: !603, line: 1043, type: !7)
!6616 = !DILocalVariable(name: "state", scope: !6612, file: !603, line: 1043, type: !2899)
!6617 = !DILocation(line: 0, scope: !6612)
!6618 = !DILocation(line: 1043, column: 1, scope: !6612)
!6619 = distinct !DISubprogram(name: "lto_file_decl_data_get_type_decl", scope: !603, file: !603, line: 1045, type: !4053, scopeLine: 1045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6620)
!6620 = !{!6621, !6622, !6623}
!6621 = !DILocalVariable(name: "data", arg: 1, scope: !6619, file: !603, line: 1045, type: !2895)
!6622 = !DILocalVariable(name: "idx", arg: 2, scope: !6619, file: !603, line: 1045, type: !7)
!6623 = !DILocalVariable(name: "state", scope: !6619, file: !603, line: 1045, type: !2899)
!6624 = !DILocation(line: 0, scope: !6619)
!6625 = !DILocation(line: 1045, column: 1, scope: !6619)
!6626 = distinct !DISubprogram(name: "lto_file_decl_data_get_namespace_decl", scope: !603, file: !603, line: 1046, type: !4053, scopeLine: 1046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6627)
!6627 = !{!6628, !6629, !6630}
!6628 = !DILocalVariable(name: "data", arg: 1, scope: !6626, file: !603, line: 1046, type: !2895)
!6629 = !DILocalVariable(name: "idx", arg: 2, scope: !6626, file: !603, line: 1046, type: !7)
!6630 = !DILocalVariable(name: "state", scope: !6626, file: !603, line: 1046, type: !2899)
!6631 = !DILocation(line: 0, scope: !6626)
!6632 = !DILocation(line: 1046, column: 1, scope: !6626)
!6633 = distinct !DISubprogram(name: "lto_tag_to_tree_code", scope: !603, file: !603, line: 924, type: !6634, scopeLine: 925, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6636)
!6634 = !DISubroutineType(types: !6635)
!6635 = !{!134, !602}
!6636 = !{!6637}
!6637 = !DILocalVariable(name: "tag", arg: 1, scope: !6633, file: !603, line: 924, type: !602)
!6638 = !DILocation(line: 0, scope: !6633)
!6639 = !DILocation(line: 926, column: 3, scope: !6633)
!6640 = !DILocation(line: 927, column: 43, scope: !6633)
!6641 = !DILocation(line: 927, column: 3, scope: !6633)
!6642 = distinct !DISubprogram(name: "lto_tag_is_tree_code_p", scope: !603, file: !603, line: 878, type: !6308, scopeLine: 879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6643)
!6643 = !{!6644}
!6644 = !DILocalVariable(name: "tag", arg: 1, scope: !6642, file: !603, line: 878, type: !602)
!6645 = !DILocation(line: 0, scope: !6642)
!6646 = !DILocation(line: 880, column: 25, scope: !6642)
!6647 = !DILocation(line: 880, column: 10, scope: !6642)
!6648 = !DILocation(line: 880, column: 3, scope: !6642)
!6649 = distinct !DISubprogram(name: "lto_materialize_tree", scope: !3, file: !3, line: 1884, type: !6650, scopeLine: 1886, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6653)
!6650 = !DISubroutineType(types: !6651)
!6651 = !{!1468, !3815, !2891, !602, !6652}
!6652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!6653 = !{!6654, !6655, !6656, !6657, !6658, !6659, !6660, !6661, !6662, !6667}
!6654 = !DILocalVariable(name: "ib", arg: 1, scope: !6649, file: !3, line: 1884, type: !3815)
!6655 = !DILocalVariable(name: "data_in", arg: 2, scope: !6649, file: !3, line: 1884, type: !2891)
!6656 = !DILocalVariable(name: "tag", arg: 3, scope: !6649, file: !3, line: 1885, type: !602)
!6657 = !DILocalVariable(name: "ix_p", arg: 4, scope: !6649, file: !3, line: 1885, type: !6652)
!6658 = !DILocalVariable(name: "bp", scope: !6649, file: !3, line: 1887, type: !3809)
!6659 = !DILocalVariable(name: "code", scope: !6649, file: !3, line: 1888, type: !134)
!6660 = !DILocalVariable(name: "result", scope: !6649, file: !3, line: 1889, type: !1468)
!6661 = !DILocalVariable(name: "ix", scope: !6649, file: !3, line: 1893, type: !1523)
!6662 = !DILocalVariable(name: "len", scope: !6663, file: !3, line: 1923, type: !1523)
!6663 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1922, column: 5)
!6664 = distinct !DILexicalBlock(scope: !6665, file: !3, line: 1921, column: 12)
!6665 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 1919, column: 12)
!6666 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 1917, column: 7)
!6667 = !DILocalVariable(name: "len", scope: !6668, file: !3, line: 1928, type: !1521)
!6668 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1927, column: 5)
!6669 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1926, column: 12)
!6670 = !DILocation(line: 0, scope: !6649)
!6671 = !DILocation(line: 1898, column: 8, scope: !6649)
!6672 = !DILocation(line: 1899, column: 3, scope: !6649)
!6673 = !DILocation(line: 1900, column: 11, scope: !6649)
!6674 = !DILocation(line: 1900, column: 9, scope: !6649)
!6675 = !DILocation(line: 1910, column: 10, scope: !6649)
!6676 = !DILocation(line: 1914, column: 3, scope: !6649)
!6677 = !DILocation(line: 1917, column: 7, scope: !6666)
!6678 = !DILocation(line: 1917, column: 7, scope: !6649)
!6679 = !DILocation(line: 1918, column: 14, scope: !6666)
!6680 = !DILocation(line: 1918, column: 5, scope: !6666)
!6681 = !DILocation(line: 1919, column: 12, scope: !6665)
!6682 = !DILocation(line: 1919, column: 12, scope: !6666)
!6683 = !DILocation(line: 1920, column: 14, scope: !6665)
!6684 = !DILocation(line: 1920, column: 5, scope: !6665)
!6685 = !DILocation(line: 1921, column: 12, scope: !6664)
!6686 = !DILocation(line: 1921, column: 12, scope: !6665)
!6687 = !DILocation(line: 1923, column: 27, scope: !6663)
!6688 = !DILocation(line: 0, scope: !6663)
!6689 = !DILocation(line: 1924, column: 16, scope: !6663)
!6690 = !DILocation(line: 1925, column: 5, scope: !6663)
!6691 = !DILocation(line: 1926, column: 12, scope: !6669)
!6692 = !DILocation(line: 1926, column: 12, scope: !6664)
!6693 = !DILocation(line: 1928, column: 36, scope: !6668)
!6694 = !DILocation(line: 0, scope: !6668)
!6695 = !DILocation(line: 1929, column: 16, scope: !6668)
!6696 = !DILocation(line: 1930, column: 5, scope: !6668)
!6697 = !DILocation(line: 1935, column: 16, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1932, column: 5)
!6699 = !DILocation(line: 0, scope: !6666)
!6700 = !DILocation(line: 1948, column: 8, scope: !6649)
!6701 = !DILocation(line: 1952, column: 27, scope: !6649)
!6702 = !DILocation(line: 1952, column: 10, scope: !6649)
!6703 = !DILocation(line: 1953, column: 18, scope: !6649)
!6704 = !DILocation(line: 1953, column: 3, scope: !6649)
!6705 = !DILocation(line: 1956, column: 3, scope: !6649)
!6706 = !DILocation(line: 1957, column: 3, scope: !6649)
!6707 = !DILocation(line: 1962, column: 42, scope: !6649)
!6708 = !DILocation(line: 1962, column: 3, scope: !6649)
!6709 = !DILocation(line: 1964, column: 3, scope: !6649)
!6710 = distinct !DISubprogram(name: "lto_input_tree_pointers", scope: !3, file: !3, line: 2343, type: !6711, scopeLine: 2345, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6713)
!6711 = !DISubroutineType(types: !6712)
!6712 = !{null, !3815, !2891, !1468}
!6713 = !{!6714, !6715, !6716, !6717}
!6714 = !DILocalVariable(name: "ib", arg: 1, scope: !6710, file: !3, line: 2343, type: !3815)
!6715 = !DILocalVariable(name: "data_in", arg: 2, scope: !6710, file: !3, line: 2343, type: !2891)
!6716 = !DILocalVariable(name: "expr", arg: 3, scope: !6710, file: !3, line: 2344, type: !1468)
!6717 = !DILocalVariable(name: "code", scope: !6710, file: !3, line: 2346, type: !134)
!6718 = !DILocation(line: 0, scope: !6710)
!6719 = !DILocation(line: 2348, column: 10, scope: !6710)
!6720 = !DILocation(line: 2350, column: 7, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2350, column: 7)
!6722 = !DILocation(line: 2350, column: 7, scope: !6710)
!6723 = !DILocation(line: 2351, column: 5, scope: !6721)
!6724 = !DILocation(line: 2353, column: 7, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2353, column: 7)
!6726 = !DILocation(line: 2353, column: 7, scope: !6710)
!6727 = !DILocation(line: 2354, column: 5, scope: !6725)
!6728 = !DILocation(line: 2356, column: 7, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2356, column: 7)
!6730 = !DILocation(line: 2356, column: 7, scope: !6710)
!6731 = !DILocation(line: 2357, column: 5, scope: !6729)
!6732 = !DILocation(line: 2359, column: 7, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2359, column: 7)
!6734 = !DILocation(line: 2359, column: 7, scope: !6710)
!6735 = !DILocation(line: 2360, column: 5, scope: !6733)
!6736 = !DILocation(line: 2362, column: 7, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2362, column: 7)
!6738 = !DILocation(line: 2362, column: 7, scope: !6710)
!6739 = !DILocation(line: 2363, column: 5, scope: !6737)
!6740 = !DILocation(line: 2365, column: 7, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2365, column: 7)
!6742 = !DILocation(line: 2365, column: 7, scope: !6710)
!6743 = !DILocation(line: 2366, column: 5, scope: !6741)
!6744 = !DILocation(line: 2368, column: 7, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2368, column: 7)
!6746 = !DILocation(line: 2368, column: 7, scope: !6710)
!6747 = !DILocation(line: 2369, column: 5, scope: !6745)
!6748 = !DILocation(line: 2371, column: 7, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2371, column: 7)
!6750 = !DILocation(line: 2371, column: 7, scope: !6710)
!6751 = !DILocation(line: 2372, column: 5, scope: !6749)
!6752 = !DILocation(line: 2374, column: 7, scope: !6753)
!6753 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2374, column: 7)
!6754 = !DILocation(line: 2374, column: 7, scope: !6710)
!6755 = !DILocation(line: 2375, column: 5, scope: !6753)
!6756 = !DILocation(line: 2377, column: 7, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2377, column: 7)
!6758 = !DILocation(line: 2377, column: 7, scope: !6710)
!6759 = !DILocation(line: 2378, column: 5, scope: !6757)
!6760 = !DILocation(line: 2380, column: 7, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2380, column: 7)
!6762 = !DILocation(line: 2380, column: 7, scope: !6710)
!6763 = !DILocation(line: 2381, column: 5, scope: !6761)
!6764 = !DILocation(line: 2383, column: 7, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2383, column: 7)
!6766 = !DILocation(line: 2383, column: 7, scope: !6710)
!6767 = !DILocation(line: 2384, column: 5, scope: !6765)
!6768 = !DILocation(line: 2386, column: 7, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2386, column: 7)
!6770 = !DILocation(line: 2386, column: 7, scope: !6710)
!6771 = !DILocation(line: 2387, column: 5, scope: !6769)
!6772 = !DILocation(line: 2389, column: 7, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2389, column: 7)
!6774 = !DILocation(line: 2389, column: 7, scope: !6710)
!6775 = !DILocation(line: 2392, column: 7, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 2390, column: 5)
!6777 = !DILocation(line: 2393, column: 5, scope: !6776)
!6778 = !DILocation(line: 2395, column: 7, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2395, column: 7)
!6780 = !DILocation(line: 2395, column: 7, scope: !6710)
!6781 = !DILocation(line: 2396, column: 5, scope: !6779)
!6782 = !DILocation(line: 2398, column: 7, scope: !6783)
!6783 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2398, column: 7)
!6784 = !DILocation(line: 2398, column: 7, scope: !6710)
!6785 = !DILocation(line: 2399, column: 5, scope: !6783)
!6786 = !DILocation(line: 2401, column: 7, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2401, column: 7)
!6788 = !DILocation(line: 2401, column: 7, scope: !6710)
!6789 = !DILocation(line: 2404, column: 7, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 2402, column: 5)
!6791 = !DILocation(line: 2405, column: 5, scope: !6790)
!6792 = !DILocation(line: 2407, column: 7, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2407, column: 7)
!6794 = !DILocation(line: 2407, column: 7, scope: !6710)
!6795 = !DILocation(line: 2408, column: 5, scope: !6793)
!6796 = !DILocation(line: 2410, column: 7, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2410, column: 7)
!6798 = !DILocation(line: 2410, column: 7, scope: !6710)
!6799 = !DILocation(line: 2413, column: 7, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 2411, column: 5)
!6801 = !DILocation(line: 2414, column: 5, scope: !6800)
!6802 = !DILocation(line: 2416, column: 7, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2416, column: 7)
!6804 = !DILocation(line: 2416, column: 7, scope: !6710)
!6805 = !DILocation(line: 2418, column: 7, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 2417, column: 5)
!6807 = !DILocation(line: 2419, column: 5, scope: !6806)
!6808 = !DILocation(line: 2421, column: 7, scope: !6809)
!6809 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2421, column: 7)
!6810 = !DILocation(line: 2421, column: 7, scope: !6710)
!6811 = !DILocation(line: 2423, column: 7, scope: !6812)
!6812 = distinct !DILexicalBlock(scope: !6809, file: !3, line: 2422, column: 5)
!6813 = !DILocation(line: 2424, column: 5, scope: !6812)
!6814 = !DILocation(line: 2425, column: 1, scope: !6710)
!6815 = distinct !DISubprogram(name: "lto_stream_as_builtin_p", scope: !603, file: !603, line: 1010, type: !6208, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6816)
!6816 = !{!6817}
!6817 = !DILocalVariable(name: "expr", arg: 1, scope: !6815, file: !603, line: 1010, type: !1468)
!6818 = !DILocation(line: 0, scope: !6815)
!6819 = !DILocation(line: 1012, column: 11, scope: !6815)
!6820 = !DILocation(line: 1012, column: 28, scope: !6815)
!6821 = !DILocation(line: 1013, column: 4, scope: !6815)
!6822 = !DILocation(line: 1013, column: 7, scope: !6815)
!6823 = !DILocation(line: 1014, column: 4, scope: !6815)
!6824 = !DILocation(line: 1014, column: 8, scope: !6815)
!6825 = !DILocation(line: 1014, column: 35, scope: !6815)
!6826 = !DILocation(line: 1015, column: 8, scope: !6815)
!6827 = !DILocation(line: 1015, column: 38, scope: !6815)
!6828 = !DILocation(line: 1012, column: 3, scope: !6815)
!6829 = distinct !DISubprogram(name: "lto_register_var_decl_in_symtab", scope: !3, file: !3, line: 2433, type: !6830, scopeLine: 2434, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6832)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{null, !2891, !1468}
!6832 = !{!6833, !6834, !6835, !6840, !6841, !6844, !6846}
!6833 = !DILocalVariable(name: "data_in", arg: 1, scope: !6829, file: !3, line: 2433, type: !2891)
!6834 = !DILocalVariable(name: "decl", arg: 2, scope: !6829, file: !3, line: 2433, type: !1468)
!6835 = !DILocalVariable(name: "name", scope: !6836, file: !3, line: 2449, type: !1466)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 2442, column: 9)
!6837 = distinct !DILexicalBlock(scope: !6838, file: !3, line: 2441, column: 11)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 2438, column: 5)
!6839 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 2437, column: 7)
!6840 = !DILocalVariable(name: "label", scope: !6836, file: !3, line: 2450, type: !1463)
!6841 = !DILocalVariable(name: "name_", scope: !6842, file: !3, line: 2452, type: !6843)
!6842 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 2452, column: 4)
!6843 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1466)
!6844 = !DILocalVariable(name: "output_", scope: !6842, file: !3, line: 2452, type: !6845)
!6845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1463)
!6846 = !DILocalVariable(name: "ix", scope: !6847, file: !3, line: 2462, type: !1461)
!6847 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 2461, column: 5)
!6848 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 2460, column: 7)
!6849 = !DILocation(line: 0, scope: !6829)
!6850 = !DILocation(line: 2437, column: 7, scope: !6839)
!6851 = !DILocation(line: 2437, column: 36, scope: !6839)
!6852 = !DILocation(line: 2437, column: 7, scope: !6829)
!6853 = !DILocation(line: 2441, column: 12, scope: !6837)
!6854 = !DILocation(line: 2441, column: 11, scope: !6838)
!6855 = !DILocation(line: 2449, column: 23, scope: !6836)
!6856 = !DILocation(line: 0, scope: !6836)
!6857 = !DILocation(line: 0, scope: !6842)
!6858 = !DILocation(line: 2452, column: 4, scope: !6842)
!6859 = !DILocation(line: 2453, column: 4, scope: !6836)
!6860 = !DILocation(line: 2454, column: 11, scope: !6836)
!6861 = !DILocation(line: 2455, column: 9, scope: !6836)
!6862 = !DILocation(line: 2460, column: 7, scope: !6848)
!6863 = !DILocation(line: 2460, column: 7, scope: !6829)
!6864 = !DILocation(line: 2462, column: 7, scope: !6847)
!6865 = !DILocation(line: 2463, column: 48, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6847, file: !3, line: 2463, column: 11)
!6867 = !DILocation(line: 0, scope: !6847)
!6868 = !DILocation(line: 2463, column: 12, scope: !6866)
!6869 = !DILocation(line: 2463, column: 11, scope: !6847)
!6870 = !DILocation(line: 2464, column: 2, scope: !6866)
!6871 = !DILocation(line: 2465, column: 64, scope: !6847)
!6872 = !DILocation(line: 2465, column: 39, scope: !6847)
!6873 = !DILocation(line: 2466, column: 14, scope: !6847)
!6874 = !DILocation(line: 2465, column: 7, scope: !6847)
!6875 = !DILocation(line: 2467, column: 5, scope: !6848)
!6876 = !DILocation(line: 2467, column: 5, scope: !6847)
!6877 = !DILocation(line: 2468, column: 1, scope: !6829)
!6878 = distinct !DISubprogram(name: "lto_register_function_decl_in_symtab", scope: !3, file: !3, line: 2478, type: !6830, scopeLine: 2479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6879)
!6879 = !{!6880, !6881, !6882, !6885, !6886, !6887, !6889, !6890, !6893}
!6880 = !DILocalVariable(name: "data_in", arg: 1, scope: !6878, file: !3, line: 2478, type: !2891)
!6881 = !DILocalVariable(name: "decl", arg: 2, scope: !6878, file: !3, line: 2478, type: !1468)
!6882 = !DILocalVariable(name: "old_assembler_name", scope: !6883, file: !3, line: 2486, type: !1468)
!6883 = distinct !DILexicalBlock(scope: !6884, file: !3, line: 2483, column: 5)
!6884 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 2482, column: 7)
!6885 = !DILocalVariable(name: "name", scope: !6883, file: !3, line: 2494, type: !1466)
!6886 = !DILocalVariable(name: "label", scope: !6883, file: !3, line: 2495, type: !1463)
!6887 = !DILocalVariable(name: "name_", scope: !6888, file: !3, line: 2497, type: !6843)
!6888 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 2497, column: 7)
!6889 = !DILocalVariable(name: "output_", scope: !6888, file: !3, line: 2497, type: !6845)
!6890 = !DILocalVariable(name: "new_assembler_name", scope: !6891, file: !3, line: 2505, type: !1468)
!6891 = distinct !DILexicalBlock(scope: !6892, file: !3, line: 2504, column: 2)
!6892 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 2503, column: 11)
!6893 = !DILocalVariable(name: "ix", scope: !6894, file: !3, line: 2529, type: !1461)
!6894 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 2528, column: 5)
!6895 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 2527, column: 7)
!6896 = !DILocation(line: 0, scope: !6878)
!6897 = !DILocation(line: 2482, column: 8, scope: !6884)
!6898 = !DILocation(line: 2482, column: 7, scope: !6878)
!6899 = !DILocation(line: 2486, column: 53, scope: !6883)
!6900 = !DILocation(line: 0, scope: !6883)
!6901 = !DILocation(line: 2494, column: 26, scope: !6883)
!6902 = !DILocation(line: 0, scope: !6888)
!6903 = !DILocation(line: 2497, column: 7, scope: !6888)
!6904 = !DILocation(line: 2498, column: 7, scope: !6883)
!6905 = !DILocation(line: 2503, column: 11, scope: !6892)
!6906 = !DILocation(line: 2503, column: 11, scope: !6883)
!6907 = !DILocation(line: 2505, column: 30, scope: !6891)
!6908 = !DILocation(line: 0, scope: !6891)
!6909 = !DILocation(line: 2512, column: 38, scope: !6891)
!6910 = !DILocation(line: 2513, column: 8, scope: !6891)
!6911 = !DILocation(line: 2514, column: 8, scope: !6891)
!6912 = !DILocation(line: 2512, column: 4, scope: !6891)
!6913 = !DILocation(line: 2519, column: 38, scope: !6891)
!6914 = !DILocation(line: 2520, column: 8, scope: !6891)
!6915 = !DILocation(line: 2521, column: 8, scope: !6891)
!6916 = !DILocation(line: 2519, column: 4, scope: !6891)
!6917 = !DILocation(line: 2522, column: 2, scope: !6891)
!6918 = !DILocation(line: 2527, column: 7, scope: !6895)
!6919 = !DILocation(line: 2527, column: 26, scope: !6895)
!6920 = !DILocation(line: 2527, column: 30, scope: !6895)
!6921 = !DILocation(line: 2527, column: 7, scope: !6878)
!6922 = !DILocation(line: 2529, column: 7, scope: !6894)
!6923 = !DILocation(line: 2530, column: 48, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 2530, column: 11)
!6925 = !DILocation(line: 0, scope: !6894)
!6926 = !DILocation(line: 2530, column: 12, scope: !6924)
!6927 = !DILocation(line: 2530, column: 11, scope: !6894)
!6928 = !DILocation(line: 2531, column: 2, scope: !6924)
!6929 = !DILocation(line: 2532, column: 64, scope: !6894)
!6930 = !DILocation(line: 2532, column: 39, scope: !6894)
!6931 = !DILocation(line: 2533, column: 14, scope: !6894)
!6932 = !DILocation(line: 2532, column: 7, scope: !6894)
!6933 = !DILocation(line: 2534, column: 5, scope: !6895)
!6934 = !DILocation(line: 2534, column: 5, scope: !6894)
!6935 = !DILocation(line: 2535, column: 1, scope: !6878)
!6936 = distinct !DISubprogram(name: "input_identifier", scope: !3, file: !3, line: 181, type: !6090, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6937)
!6937 = !{!6938, !6939, !6940, !6941, !6942}
!6938 = !DILocalVariable(name: "data_in", arg: 1, scope: !6936, file: !3, line: 181, type: !2891)
!6939 = !DILocalVariable(name: "ib", arg: 2, scope: !6936, file: !3, line: 181, type: !3815)
!6940 = !DILocalVariable(name: "len", scope: !6936, file: !3, line: 183, type: !7)
!6941 = !DILocalVariable(name: "ptr", scope: !6936, file: !3, line: 184, type: !1466)
!6942 = !DILocalVariable(name: "is_null", scope: !6936, file: !3, line: 185, type: !7)
!6943 = !DILocation(line: 0, scope: !6936)
!6944 = !DILocation(line: 183, column: 3, scope: !6936)
!6945 = !DILocation(line: 187, column: 13, scope: !6936)
!6946 = !DILocation(line: 188, column: 7, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 188, column: 7)
!6948 = !DILocation(line: 188, column: 7, scope: !6936)
!6949 = !DILocation(line: 191, column: 9, scope: !6936)
!6950 = !DILocation(line: 192, column: 43, scope: !6936)
!6951 = !DILocation(line: 192, column: 10, scope: !6936)
!6952 = !DILocation(line: 192, column: 3, scope: !6936)
!6953 = !DILocation(line: 193, column: 1, scope: !6936)
!6954 = distinct !DISubprogram(name: "unpack_value_fields", scope: !3, file: !3, line: 1799, type: !6955, scopeLine: 1800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6957)
!6955 = !DISubroutineType(types: !6956)
!6956 = !{null, !3809, !1468}
!6957 = !{!6958, !6959, !6960}
!6958 = !DILocalVariable(name: "bp", arg: 1, scope: !6954, file: !3, line: 1799, type: !3809)
!6959 = !DILocalVariable(name: "expr", arg: 2, scope: !6954, file: !3, line: 1799, type: !1468)
!6960 = !DILocalVariable(name: "code", scope: !6954, file: !3, line: 1801, type: !134)
!6961 = !DILocation(line: 0, scope: !6954)
!6962 = !DILocation(line: 1803, column: 10, scope: !6954)
!6963 = !DILocation(line: 1807, column: 3, scope: !6954)
!6964 = !DILocation(line: 1809, column: 7, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1809, column: 7)
!6966 = !DILocation(line: 1809, column: 7, scope: !6954)
!6967 = !DILocation(line: 1810, column: 5, scope: !6965)
!6968 = !DILocation(line: 1812, column: 7, scope: !6969)
!6969 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1812, column: 7)
!6970 = !DILocation(line: 1812, column: 7, scope: !6954)
!6971 = !DILocation(line: 1813, column: 5, scope: !6969)
!6972 = !DILocation(line: 1815, column: 7, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1815, column: 7)
!6974 = !DILocation(line: 1815, column: 7, scope: !6954)
!6975 = !DILocation(line: 1816, column: 5, scope: !6973)
!6976 = !DILocation(line: 1818, column: 7, scope: !6977)
!6977 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1818, column: 7)
!6978 = !DILocation(line: 1818, column: 7, scope: !6954)
!6979 = !DILocation(line: 1819, column: 5, scope: !6977)
!6980 = !DILocation(line: 1821, column: 7, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1821, column: 7)
!6982 = !DILocation(line: 1821, column: 7, scope: !6954)
!6983 = !DILocation(line: 1822, column: 5, scope: !6981)
!6984 = !DILocation(line: 1824, column: 7, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1824, column: 7)
!6986 = !DILocation(line: 1824, column: 7, scope: !6954)
!6987 = !DILocation(line: 1825, column: 5, scope: !6985)
!6988 = !DILocation(line: 1827, column: 7, scope: !6989)
!6989 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1827, column: 7)
!6990 = !DILocation(line: 1827, column: 7, scope: !6954)
!6991 = !DILocation(line: 1828, column: 5, scope: !6989)
!6992 = !DILocation(line: 1830, column: 7, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1830, column: 7)
!6994 = !DILocation(line: 1830, column: 7, scope: !6954)
!6995 = !DILocation(line: 1831, column: 5, scope: !6993)
!6996 = !DILocation(line: 1833, column: 7, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1833, column: 7)
!6998 = !DILocation(line: 1833, column: 7, scope: !6954)
!6999 = !DILocation(line: 1836, column: 7, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 1834, column: 5)
!7001 = !DILocation(line: 1837, column: 5, scope: !7000)
!7002 = !DILocation(line: 1839, column: 7, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1839, column: 7)
!7004 = !DILocation(line: 1839, column: 7, scope: !6954)
!7005 = !DILocation(line: 1842, column: 7, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1840, column: 5)
!7007 = !DILocation(line: 1843, column: 5, scope: !7006)
!7008 = !DILocation(line: 1845, column: 7, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1845, column: 7)
!7010 = !DILocation(line: 1845, column: 7, scope: !6954)
!7011 = !DILocation(line: 1848, column: 7, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 1846, column: 5)
!7013 = !DILocation(line: 1849, column: 5, scope: !7012)
!7014 = !DILocation(line: 1850, column: 1, scope: !6954)
!7015 = distinct !DISubprogram(name: "unpack_ts_base_value_fields", scope: !3, file: !3, line: 1563, type: !6955, scopeLine: 1564, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7016)
!7016 = !{!7017, !7018}
!7017 = !DILocalVariable(name: "bp", arg: 1, scope: !7015, file: !3, line: 1563, type: !3809)
!7018 = !DILocalVariable(name: "expr", arg: 2, scope: !7015, file: !3, line: 1563, type: !1468)
!7019 = !DILocation(line: 0, scope: !7015)
!7020 = !DILocation(line: 1567, column: 8, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 1567, column: 7)
!7022 = !DILocation(line: 1567, column: 7, scope: !7015)
!7023 = !DILocation(line: 1569, column: 45, scope: !7024)
!7024 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 1568, column: 5)
!7025 = !DILocation(line: 1569, column: 32, scope: !7024)
!7026 = !DILocation(line: 1570, column: 41, scope: !7024)
!7027 = !DILocation(line: 1570, column: 28, scope: !7024)
!7028 = !DILocation(line: 1571, column: 41, scope: !7024)
!7029 = !DILocation(line: 1571, column: 28, scope: !7024)
!7030 = !DILocation(line: 1576, column: 39, scope: !7024)
!7031 = !DILocation(line: 1576, column: 26, scope: !7024)
!7032 = !DILocation(line: 1577, column: 5, scope: !7024)
!7033 = !DILocation(line: 1578, column: 40, scope: !7015)
!7034 = !DILocation(line: 1578, column: 27, scope: !7015)
!7035 = !DILocation(line: 1579, column: 42, scope: !7015)
!7036 = !DILocation(line: 1579, column: 29, scope: !7015)
!7037 = !DILocation(line: 1580, column: 7, scope: !7038)
!7038 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 1580, column: 7)
!7039 = !DILocation(line: 1580, column: 7, scope: !7015)
!7040 = !DILocation(line: 1581, column: 39, scope: !7038)
!7041 = !DILocation(line: 1581, column: 26, scope: !7038)
!7042 = !DILocation(line: 1581, column: 5, scope: !7038)
!7043 = !DILocation(line: 1582, column: 12, scope: !7044)
!7044 = distinct !DILexicalBlock(scope: !7038, file: !3, line: 1582, column: 12)
!7045 = !DILocation(line: 1582, column: 12, scope: !7038)
!7046 = !DILocation(line: 1583, column: 39, scope: !7044)
!7047 = !DILocation(line: 1583, column: 26, scope: !7044)
!7048 = !DILocation(line: 1583, column: 5, scope: !7044)
!7049 = !DILocation(line: 1584, column: 40, scope: !7015)
!7050 = !DILocation(line: 1584, column: 27, scope: !7015)
!7051 = !DILocation(line: 1585, column: 39, scope: !7015)
!7052 = !DILocation(line: 1585, column: 26, scope: !7015)
!7053 = !DILocation(line: 1586, column: 33, scope: !7015)
!7054 = !DILocation(line: 1586, column: 20, scope: !7015)
!7055 = !DILocation(line: 1587, column: 36, scope: !7015)
!7056 = !DILocation(line: 1587, column: 23, scope: !7015)
!7057 = !DILocation(line: 1588, column: 35, scope: !7015)
!7058 = !DILocation(line: 1588, column: 22, scope: !7015)
!7059 = !DILocation(line: 1589, column: 36, scope: !7015)
!7060 = !DILocation(line: 1589, column: 23, scope: !7015)
!7061 = !DILocation(line: 1590, column: 38, scope: !7015)
!7062 = !DILocation(line: 1590, column: 25, scope: !7015)
!7063 = !DILocation(line: 1591, column: 39, scope: !7015)
!7064 = !DILocation(line: 1591, column: 26, scope: !7015)
!7065 = !DILocation(line: 1592, column: 7, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 1592, column: 7)
!7067 = !DILocation(line: 1592, column: 7, scope: !7015)
!7068 = !DILocation(line: 1593, column: 41, scope: !7066)
!7069 = !DILocation(line: 1593, column: 28, scope: !7066)
!7070 = !DILocation(line: 1593, column: 5, scope: !7066)
!7071 = !DILocation(line: 1594, column: 7, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7015, file: !3, line: 1594, column: 7)
!7073 = !DILocation(line: 1594, column: 24, scope: !7072)
!7074 = !DILocation(line: 1594, column: 7, scope: !7015)
!7075 = !DILocation(line: 1595, column: 49, scope: !7072)
!7076 = !DILocation(line: 1595, column: 36, scope: !7072)
!7077 = !DILocation(line: 1595, column: 5, scope: !7072)
!7078 = !DILocation(line: 1596, column: 1, scope: !7015)
!7079 = distinct !DISubprogram(name: "unpack_ts_real_cst_value_fields", scope: !3, file: !3, line: 1603, type: !6955, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7080)
!7080 = !{!7081, !7082, !7083, !7084, !7085}
!7081 = !DILocalVariable(name: "bp", arg: 1, scope: !7079, file: !3, line: 1603, type: !3809)
!7082 = !DILocalVariable(name: "expr", arg: 2, scope: !7079, file: !3, line: 1603, type: !1468)
!7083 = !DILocalVariable(name: "i", scope: !7079, file: !3, line: 1605, type: !7)
!7084 = !DILocalVariable(name: "r", scope: !7079, file: !3, line: 1606, type: !1530)
!7085 = !DILocalVariable(name: "rp", scope: !7079, file: !3, line: 1607, type: !1529)
!7086 = !DILocation(line: 0, scope: !7079)
!7087 = !DILocation(line: 1606, column: 3, scope: !7079)
!7088 = !DILocation(line: 1609, column: 21, scope: !7079)
!7089 = !DILocation(line: 1609, column: 10, scope: !7079)
!7090 = !DILocation(line: 1609, column: 5, scope: !7079)
!7091 = !DILocation(line: 1609, column: 8, scope: !7079)
!7092 = !DILocation(line: 1610, column: 26, scope: !7079)
!7093 = !DILocation(line: 1610, column: 15, scope: !7079)
!7094 = !DILocation(line: 1610, column: 13, scope: !7079)
!7095 = !DILocation(line: 1611, column: 23, scope: !7079)
!7096 = !DILocation(line: 1611, column: 12, scope: !7079)
!7097 = !DILocation(line: 1611, column: 10, scope: !7079)
!7098 = !DILocation(line: 1612, column: 29, scope: !7079)
!7099 = !DILocation(line: 1612, column: 18, scope: !7079)
!7100 = !DILocation(line: 1612, column: 16, scope: !7079)
!7101 = !DILocation(line: 1613, column: 28, scope: !7079)
!7102 = !DILocation(line: 1613, column: 17, scope: !7079)
!7103 = !DILocation(line: 1613, column: 15, scope: !7079)
!7104 = !DILocation(line: 1614, column: 23, scope: !7079)
!7105 = !DILocation(line: 1614, column: 12, scope: !7079)
!7106 = !DILocation(line: 1614, column: 10, scope: !7079)
!7107 = !DILocation(line: 1615, column: 8, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 1615, column: 3)
!7109 = !DILocation(line: 0, scope: !7108)
!7110 = !DILocation(line: 1615, column: 17, scope: !7111)
!7111 = distinct !DILexicalBlock(scope: !7108, file: !3, line: 1615, column: 3)
!7112 = !DILocation(line: 1615, column: 3, scope: !7108)
!7113 = !DILocation(line: 1616, column: 32, scope: !7111)
!7114 = !DILocation(line: 1616, column: 5, scope: !7111)
!7115 = !DILocation(line: 1616, column: 14, scope: !7111)
!7116 = !DILocation(line: 1615, column: 27, scope: !7111)
!7117 = !DILocation(line: 1615, column: 3, scope: !7111)
!7118 = distinct !{!7118, !7112, !7119}
!7119 = !DILocation(line: 1616, column: 71, scope: !7108)
!7120 = !DILocation(line: 1618, column: 8, scope: !7079)
!7121 = !DILocation(line: 1619, column: 3, scope: !7079)
!7122 = !DILocation(line: 1620, column: 3, scope: !7079)
!7123 = !DILocation(line: 1620, column: 28, scope: !7079)
!7124 = !DILocation(line: 1621, column: 1, scope: !7079)
!7125 = distinct !DISubprogram(name: "unpack_ts_fixed_cst_value_fields", scope: !3, file: !3, line: 1628, type: !6955, scopeLine: 1629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7126)
!7126 = !{!7127, !7128, !7129}
!7127 = !DILocalVariable(name: "bp", arg: 1, scope: !7125, file: !3, line: 1628, type: !3809)
!7128 = !DILocalVariable(name: "expr", arg: 2, scope: !7125, file: !3, line: 1628, type: !1468)
!7129 = !DILocalVariable(name: "fv", scope: !7125, file: !3, line: 1630, type: !1549)
!7130 = !DILocation(line: 0, scope: !7125)
!7131 = !DILocation(line: 1630, column: 3, scope: !7125)
!7132 = !DILocation(line: 1632, column: 33, scope: !7125)
!7133 = !DILocation(line: 1632, column: 11, scope: !7125)
!7134 = !DILocation(line: 1632, column: 15, scope: !7125)
!7135 = !DILocation(line: 1633, column: 34, scope: !7125)
!7136 = !DILocation(line: 1633, column: 11, scope: !7125)
!7137 = !DILocation(line: 1633, column: 16, scope: !7125)
!7138 = !DILocation(line: 1634, column: 3, scope: !7125)
!7139 = !DILocation(line: 1634, column: 27, scope: !7125)
!7140 = !DILocation(line: 1635, column: 1, scope: !7125)
!7141 = distinct !DISubprogram(name: "unpack_ts_decl_common_value_fields", scope: !3, file: !3, line: 1642, type: !6955, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7142)
!7142 = !{!7143, !7144, !7145}
!7143 = !DILocalVariable(name: "bp", arg: 1, scope: !7141, file: !3, line: 1642, type: !3809)
!7144 = !DILocalVariable(name: "expr", arg: 2, scope: !7141, file: !3, line: 1642, type: !1468)
!7145 = !DILocalVariable(name: "off_align", scope: !7146, file: !3, line: 1669, type: !1521)
!7146 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 1668, column: 5)
!7147 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 1667, column: 7)
!7148 = !DILocation(line: 0, scope: !7141)
!7149 = !DILocation(line: 1644, column: 42, scope: !7141)
!7150 = !DILocation(line: 1644, column: 3, scope: !7141)
!7151 = !DILocation(line: 1644, column: 20, scope: !7141)
!7152 = !DILocation(line: 1645, column: 37, scope: !7141)
!7153 = !DILocation(line: 1645, column: 24, scope: !7141)
!7154 = !DILocation(line: 1646, column: 38, scope: !7141)
!7155 = !DILocation(line: 1646, column: 25, scope: !7141)
!7156 = !DILocation(line: 1647, column: 38, scope: !7141)
!7157 = !DILocation(line: 1647, column: 25, scope: !7141)
!7158 = !DILocation(line: 1648, column: 37, scope: !7141)
!7159 = !DILocation(line: 1648, column: 24, scope: !7141)
!7160 = !DILocation(line: 1649, column: 39, scope: !7141)
!7161 = !DILocation(line: 1649, column: 26, scope: !7141)
!7162 = !DILocation(line: 1650, column: 39, scope: !7141)
!7163 = !DILocation(line: 1650, column: 3, scope: !7141)
!7164 = !DILocation(line: 1650, column: 26, scope: !7141)
!7165 = !DILocation(line: 1651, column: 39, scope: !7141)
!7166 = !DILocation(line: 1651, column: 26, scope: !7141)
!7167 = !DILocation(line: 1652, column: 47, scope: !7141)
!7168 = !DILocation(line: 1652, column: 34, scope: !7141)
!7169 = !DILocation(line: 1653, column: 37, scope: !7141)
!7170 = !DILocation(line: 1653, column: 24, scope: !7141)
!7171 = !DILocation(line: 1654, column: 41, scope: !7141)
!7172 = !DILocation(line: 1654, column: 28, scope: !7141)
!7173 = !DILocation(line: 1655, column: 34, scope: !7141)
!7174 = !DILocation(line: 1655, column: 23, scope: !7141)
!7175 = !DILocation(line: 1655, column: 3, scope: !7141)
!7176 = !DILocation(line: 1655, column: 21, scope: !7141)
!7177 = !DILocation(line: 1657, column: 7, scope: !7178)
!7178 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 1657, column: 7)
!7179 = !DILocation(line: 1657, column: 24, scope: !7178)
!7180 = !DILocation(line: 1657, column: 7, scope: !7141)
!7181 = !DILocation(line: 1659, column: 45, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 1658, column: 5)
!7183 = !DILocation(line: 1659, column: 32, scope: !7182)
!7184 = !DILocation(line: 1660, column: 40, scope: !7182)
!7185 = !DILocation(line: 1660, column: 34, scope: !7182)
!7186 = !DILocation(line: 1660, column: 7, scope: !7182)
!7187 = !DILocation(line: 1660, column: 32, scope: !7182)
!7188 = !DILocation(line: 1664, column: 7, scope: !7182)
!7189 = !DILocation(line: 1664, column: 29, scope: !7182)
!7190 = !DILocation(line: 1667, column: 7, scope: !7147)
!7191 = !DILocation(line: 1665, column: 5, scope: !7182)
!7192 = !DILocation(line: 1667, column: 24, scope: !7147)
!7193 = !DILocation(line: 1667, column: 7, scope: !7141)
!7194 = !DILocation(line: 1670, column: 39, scope: !7146)
!7195 = !DILocation(line: 1670, column: 26, scope: !7146)
!7196 = !DILocation(line: 1671, column: 49, scope: !7146)
!7197 = !DILocation(line: 1671, column: 36, scope: !7146)
!7198 = !DILocation(line: 1672, column: 44, scope: !7146)
!7199 = !DILocation(line: 0, scope: !7146)
!7200 = !DILocation(line: 1673, column: 7, scope: !7146)
!7201 = !DILocation(line: 1676, column: 7, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7141, file: !3, line: 1676, column: 7)
!7203 = !DILocation(line: 1676, column: 24, scope: !7202)
!7204 = !DILocation(line: 1674, column: 5, scope: !7146)
!7205 = !DILocation(line: 1677, column: 7, scope: !7202)
!7206 = !DILocation(line: 1677, column: 27, scope: !7202)
!7207 = !DILocation(line: 1678, column: 7, scope: !7202)
!7208 = !DILocation(line: 1678, column: 27, scope: !7202)
!7209 = !DILocation(line: 1676, column: 7, scope: !7141)
!7210 = !DILocation(line: 1680, column: 45, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 1679, column: 5)
!7212 = !DILocation(line: 1680, column: 32, scope: !7211)
!7213 = !DILocation(line: 1681, column: 11, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7211, file: !3, line: 1681, column: 11)
!7215 = !DILocation(line: 1681, column: 28, scope: !7214)
!7216 = !DILocation(line: 1682, column: 4, scope: !7214)
!7217 = !DILocation(line: 1682, column: 24, scope: !7214)
!7218 = !DILocation(line: 1681, column: 11, scope: !7211)
!7219 = !DILocation(line: 1683, column: 44, scope: !7214)
!7220 = !DILocation(line: 1683, column: 31, scope: !7214)
!7221 = !DILocation(line: 1683, column: 2, scope: !7214)
!7222 = !DILocation(line: 1684, column: 45, scope: !7211)
!7223 = !DILocation(line: 1684, column: 32, scope: !7211)
!7224 = !DILocation(line: 1685, column: 5, scope: !7211)
!7225 = !DILocation(line: 1686, column: 1, scope: !7141)
!7226 = distinct !DISubprogram(name: "unpack_ts_decl_wrtl_value_fields", scope: !3, file: !3, line: 1693, type: !6955, scopeLine: 1694, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7227)
!7227 = !{!7228, !7229}
!7228 = !DILocalVariable(name: "bp", arg: 1, scope: !7226, file: !3, line: 1693, type: !3809)
!7229 = !DILocalVariable(name: "expr", arg: 2, scope: !7226, file: !3, line: 1693, type: !1468)
!7230 = !DILocation(line: 0, scope: !7226)
!7231 = !DILocation(line: 1695, column: 37, scope: !7226)
!7232 = !DILocation(line: 1695, column: 3, scope: !7226)
!7233 = !DILocation(line: 1695, column: 24, scope: !7226)
!7234 = !DILocation(line: 1696, column: 1, scope: !7226)
!7235 = distinct !DISubprogram(name: "unpack_ts_decl_with_vis_value_fields", scope: !3, file: !3, line: 1703, type: !6955, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7236)
!7236 = !{!7237, !7238, !7239}
!7237 = !DILocalVariable(name: "bp", arg: 1, scope: !7235, file: !3, line: 1703, type: !3809)
!7238 = !DILocalVariable(name: "expr", arg: 2, scope: !7235, file: !3, line: 1703, type: !1468)
!7239 = !DILocalVariable(name: "p", scope: !7240, file: !3, line: 1723, type: !3262)
!7240 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 1722, column: 5)
!7241 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1721, column: 7)
!7242 = !DILocation(line: 0, scope: !7235)
!7243 = !DILocation(line: 1705, column: 41, scope: !7235)
!7244 = !DILocation(line: 1705, column: 30, scope: !7235)
!7245 = !DILocation(line: 1705, column: 3, scope: !7235)
!7246 = !DILocation(line: 1705, column: 28, scope: !7235)
!7247 = !DILocation(line: 1706, column: 35, scope: !7235)
!7248 = !DILocation(line: 1706, column: 24, scope: !7235)
!7249 = !DILocation(line: 1706, column: 22, scope: !7235)
!7250 = !DILocation(line: 1707, column: 40, scope: !7235)
!7251 = !DILocation(line: 1707, column: 29, scope: !7235)
!7252 = !DILocation(line: 1707, column: 27, scope: !7235)
!7253 = !DILocation(line: 1708, column: 33, scope: !7235)
!7254 = !DILocation(line: 1708, column: 22, scope: !7235)
!7255 = !DILocation(line: 1708, column: 20, scope: !7235)
!7256 = !DILocation(line: 1709, column: 48, scope: !7235)
!7257 = !DILocation(line: 1709, column: 37, scope: !7235)
!7258 = !DILocation(line: 1709, column: 35, scope: !7235)
!7259 = !DILocation(line: 1710, column: 35, scope: !7235)
!7260 = !DILocation(line: 1710, column: 24, scope: !7235)
!7261 = !DILocation(line: 1710, column: 22, scope: !7235)
!7262 = !DILocation(line: 1711, column: 53, scope: !7235)
!7263 = !DILocation(line: 1711, column: 28, scope: !7235)
!7264 = !DILocation(line: 1711, column: 26, scope: !7235)
!7265 = !DILocation(line: 1712, column: 49, scope: !7235)
!7266 = !DILocation(line: 1712, column: 38, scope: !7235)
!7267 = !DILocation(line: 1712, column: 36, scope: !7235)
!7268 = !DILocation(line: 1714, column: 7, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 1714, column: 7)
!7270 = !DILocation(line: 1714, column: 24, scope: !7269)
!7271 = !DILocation(line: 1714, column: 7, scope: !7235)
!7272 = !DILocation(line: 1716, column: 46, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7269, file: !3, line: 1715, column: 5)
!7274 = !DILocation(line: 1716, column: 35, scope: !7273)
!7275 = !DILocation(line: 1716, column: 33, scope: !7273)
!7276 = !DILocation(line: 1717, column: 48, scope: !7273)
!7277 = !DILocation(line: 1717, column: 37, scope: !7273)
!7278 = !DILocation(line: 1717, column: 35, scope: !7273)
!7279 = !DILocation(line: 1718, column: 48, scope: !7273)
!7280 = !DILocation(line: 1718, column: 31, scope: !7273)
!7281 = !DILocation(line: 1718, column: 29, scope: !7273)
!7282 = !DILocation(line: 1721, column: 7, scope: !7241)
!7283 = !DILocation(line: 1719, column: 5, scope: !7273)
!7284 = !DILocation(line: 1721, column: 7, scope: !7235)
!7285 = !DILocation(line: 1724, column: 27, scope: !7240)
!7286 = !DILocation(line: 1724, column: 11, scope: !7240)
!7287 = !DILocation(line: 0, scope: !7240)
!7288 = !DILocation(line: 1725, column: 7, scope: !7240)
!7289 = !DILocation(line: 1726, column: 5, scope: !7240)
!7290 = !DILocation(line: 1727, column: 1, scope: !7235)
!7291 = distinct !DISubprogram(name: "unpack_ts_function_decl_value_fields", scope: !3, file: !3, line: 1734, type: !6955, scopeLine: 1735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7292)
!7292 = !{!7293, !7294}
!7293 = !DILocalVariable(name: "bp", arg: 1, scope: !7291, file: !3, line: 1734, type: !3809)
!7294 = !DILocalVariable(name: "expr", arg: 2, scope: !7291, file: !3, line: 1734, type: !1468)
!7295 = !DILocation(line: 0, scope: !7291)
!7296 = !DILocation(line: 1736, column: 56, scope: !7291)
!7297 = !DILocation(line: 1736, column: 31, scope: !7291)
!7298 = !DILocation(line: 1736, column: 3, scope: !7291)
!7299 = !DILocation(line: 1736, column: 29, scope: !7291)
!7300 = !DILocation(line: 1737, column: 54, scope: !7291)
!7301 = !DILocation(line: 1737, column: 32, scope: !7291)
!7302 = !DILocation(line: 1737, column: 30, scope: !7291)
!7303 = !DILocation(line: 1738, column: 47, scope: !7291)
!7304 = !DILocation(line: 1738, column: 36, scope: !7291)
!7305 = !DILocation(line: 1738, column: 34, scope: !7291)
!7306 = !DILocation(line: 1739, column: 46, scope: !7291)
!7307 = !DILocation(line: 1739, column: 35, scope: !7291)
!7308 = !DILocation(line: 1739, column: 33, scope: !7291)
!7309 = !DILocation(line: 1740, column: 40, scope: !7291)
!7310 = !DILocation(line: 1740, column: 29, scope: !7291)
!7311 = !DILocation(line: 1740, column: 27, scope: !7291)
!7312 = !DILocation(line: 1741, column: 45, scope: !7291)
!7313 = !DILocation(line: 1741, column: 34, scope: !7291)
!7314 = !DILocation(line: 1741, column: 32, scope: !7291)
!7315 = !DILocation(line: 1742, column: 38, scope: !7291)
!7316 = !DILocation(line: 1742, column: 27, scope: !7291)
!7317 = !DILocation(line: 1742, column: 25, scope: !7291)
!7318 = !DILocation(line: 1743, column: 45, scope: !7291)
!7319 = !DILocation(line: 1743, column: 34, scope: !7291)
!7320 = !DILocation(line: 1743, column: 32, scope: !7291)
!7321 = !DILocation(line: 1744, column: 38, scope: !7291)
!7322 = !DILocation(line: 1744, column: 27, scope: !7291)
!7323 = !DILocation(line: 1744, column: 25, scope: !7291)
!7324 = !DILocation(line: 1745, column: 44, scope: !7291)
!7325 = !DILocation(line: 1745, column: 33, scope: !7291)
!7326 = !DILocation(line: 1745, column: 31, scope: !7291)
!7327 = !DILocation(line: 1746, column: 46, scope: !7291)
!7328 = !DILocation(line: 1746, column: 35, scope: !7291)
!7329 = !DILocation(line: 1746, column: 33, scope: !7291)
!7330 = !DILocation(line: 1747, column: 41, scope: !7291)
!7331 = !DILocation(line: 1747, column: 30, scope: !7291)
!7332 = !DILocation(line: 1747, column: 28, scope: !7291)
!7333 = !DILocation(line: 1748, column: 48, scope: !7291)
!7334 = !DILocation(line: 1748, column: 37, scope: !7291)
!7335 = !DILocation(line: 1748, column: 35, scope: !7291)
!7336 = !DILocation(line: 1750, column: 21, scope: !7291)
!7337 = !DILocation(line: 1750, column: 10, scope: !7291)
!7338 = !DILocation(line: 1750, column: 8, scope: !7291)
!7339 = !DILocation(line: 1751, column: 43, scope: !7291)
!7340 = !DILocation(line: 1751, column: 32, scope: !7291)
!7341 = !DILocation(line: 1751, column: 30, scope: !7291)
!7342 = !DILocation(line: 1752, column: 52, scope: !7291)
!7343 = !DILocation(line: 1752, column: 41, scope: !7291)
!7344 = !DILocation(line: 1752, column: 39, scope: !7291)
!7345 = !DILocation(line: 1753, column: 35, scope: !7291)
!7346 = !DILocation(line: 1753, column: 24, scope: !7291)
!7347 = !DILocation(line: 1753, column: 22, scope: !7291)
!7348 = !DILocation(line: 1754, column: 52, scope: !7291)
!7349 = !DILocation(line: 1754, column: 41, scope: !7291)
!7350 = !DILocation(line: 1754, column: 39, scope: !7291)
!7351 = !DILocation(line: 1755, column: 1, scope: !7291)
!7352 = distinct !DISubprogram(name: "unpack_ts_type_value_fields", scope: !3, file: !3, line: 1762, type: !6955, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7353)
!7353 = !{!7354, !7355, !7356}
!7354 = !DILocalVariable(name: "bp", arg: 1, scope: !7352, file: !3, line: 1762, type: !3809)
!7355 = !DILocalVariable(name: "expr", arg: 2, scope: !7352, file: !3, line: 1762, type: !1468)
!7356 = !DILocalVariable(name: "mode", scope: !7352, file: !3, line: 1764, type: !5)
!7357 = !DILocation(line: 0, scope: !7352)
!7358 = !DILocation(line: 1766, column: 38, scope: !7352)
!7359 = !DILocation(line: 1766, column: 27, scope: !7352)
!7360 = !DILocation(line: 1766, column: 3, scope: !7352)
!7361 = !DILocation(line: 1766, column: 25, scope: !7352)
!7362 = !DILocation(line: 1767, column: 30, scope: !7352)
!7363 = !DILocation(line: 1767, column: 10, scope: !7352)
!7364 = !DILocation(line: 1768, column: 3, scope: !7352)
!7365 = !DILocation(line: 1769, column: 40, scope: !7352)
!7366 = !DILocation(line: 1769, column: 29, scope: !7352)
!7367 = !DILocation(line: 1769, column: 27, scope: !7352)
!7368 = !DILocation(line: 1770, column: 41, scope: !7352)
!7369 = !DILocation(line: 1770, column: 30, scope: !7352)
!7370 = !DILocation(line: 1770, column: 28, scope: !7352)
!7371 = !DILocation(line: 1771, column: 46, scope: !7352)
!7372 = !DILocation(line: 1771, column: 35, scope: !7352)
!7373 = !DILocation(line: 1771, column: 33, scope: !7352)
!7374 = !DILocation(line: 1772, column: 7, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 1772, column: 7)
!7376 = !DILocation(line: 1772, column: 24, scope: !7375)
!7377 = !DILocation(line: 1772, column: 38, scope: !7375)
!7378 = !DILocation(line: 1772, column: 58, scope: !7375)
!7379 = !DILocation(line: 1772, column: 7, scope: !7352)
!7380 = !DILocation(line: 1773, column: 47, scope: !7375)
!7381 = !DILocation(line: 1773, column: 36, scope: !7375)
!7382 = !DILocation(line: 1773, column: 34, scope: !7375)
!7383 = !DILocation(line: 1773, column: 5, scope: !7375)
!7384 = !DILocation(line: 1774, column: 35, scope: !7352)
!7385 = !DILocation(line: 1774, column: 22, scope: !7352)
!7386 = !DILocation(line: 1775, column: 37, scope: !7352)
!7387 = !DILocation(line: 1775, column: 26, scope: !7352)
!7388 = !DILocation(line: 1775, column: 24, scope: !7352)
!7389 = !DILocation(line: 1777, column: 19, scope: !7352)
!7390 = !DILocation(line: 1777, column: 8, scope: !7352)
!7391 = !DILocation(line: 1777, column: 6, scope: !7352)
!7392 = !DILocation(line: 1778, column: 39, scope: !7352)
!7393 = !DILocation(line: 1778, column: 26, scope: !7352)
!7394 = !DILocation(line: 1779, column: 37, scope: !7352)
!7395 = !DILocation(line: 1779, column: 24, scope: !7352)
!7396 = !DILocation(line: 1780, column: 34, scope: !7352)
!7397 = !DILocation(line: 1780, column: 23, scope: !7352)
!7398 = !DILocation(line: 1780, column: 3, scope: !7352)
!7399 = !DILocation(line: 1780, column: 21, scope: !7352)
!7400 = !DILocation(line: 1781, column: 27, scope: !7352)
!7401 = !DILocation(line: 1781, column: 3, scope: !7352)
!7402 = !DILocation(line: 1781, column: 25, scope: !7352)
!7403 = !DILocation(line: 1782, column: 1, scope: !7352)
!7404 = distinct !DISubprogram(name: "unpack_ts_block_value_fields", scope: !3, file: !3, line: 1789, type: !6955, scopeLine: 1790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7405)
!7405 = !{!7406, !7407}
!7406 = !DILocalVariable(name: "bp", arg: 1, scope: !7404, file: !3, line: 1789, type: !3809)
!7407 = !DILocalVariable(name: "expr", arg: 2, scope: !7404, file: !3, line: 1789, type: !1468)
!7408 = !DILocation(line: 0, scope: !7404)
!7409 = !DILocation(line: 1791, column: 38, scope: !7404)
!7410 = !DILocation(line: 1791, column: 27, scope: !7404)
!7411 = !DILocation(line: 1791, column: 3, scope: !7404)
!7412 = !DILocation(line: 1791, column: 25, scope: !7404)
!7413 = !DILocation(line: 1792, column: 36, scope: !7404)
!7414 = !DILocation(line: 1792, column: 25, scope: !7404)
!7415 = !DILocation(line: 1792, column: 23, scope: !7404)
!7416 = !DILocation(line: 1793, column: 1, scope: !7404)
!7417 = distinct !DISubprogram(name: "lto_input_ts_common_tree_pointers", scope: !3, file: !3, line: 2001, type: !6711, scopeLine: 2003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7418)
!7418 = !{!7419, !7420, !7421}
!7419 = !DILocalVariable(name: "ib", arg: 1, scope: !7417, file: !3, line: 2001, type: !3815)
!7420 = !DILocalVariable(name: "data_in", arg: 2, scope: !7417, file: !3, line: 2002, type: !2891)
!7421 = !DILocalVariable(name: "expr", arg: 3, scope: !7417, file: !3, line: 2002, type: !1468)
!7422 = !DILocation(line: 0, scope: !7417)
!7423 = !DILocation(line: 2004, column: 22, scope: !7417)
!7424 = !DILocation(line: 2004, column: 3, scope: !7417)
!7425 = !DILocation(line: 2004, column: 20, scope: !7417)
!7426 = !DILocation(line: 2005, column: 1, scope: !7417)
!7427 = distinct !DISubprogram(name: "lto_input_ts_vector_tree_pointers", scope: !3, file: !3, line: 2013, type: !6711, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7428)
!7428 = !{!7429, !7430, !7431}
!7429 = !DILocalVariable(name: "ib", arg: 1, scope: !7427, file: !3, line: 2013, type: !3815)
!7430 = !DILocalVariable(name: "data_in", arg: 2, scope: !7427, file: !3, line: 2014, type: !2891)
!7431 = !DILocalVariable(name: "expr", arg: 3, scope: !7427, file: !3, line: 2014, type: !1468)
!7432 = !DILocation(line: 0, scope: !7427)
!7433 = !DILocation(line: 2016, column: 33, scope: !7427)
!7434 = !DILocation(line: 2016, column: 3, scope: !7427)
!7435 = !DILocation(line: 2016, column: 31, scope: !7427)
!7436 = !DILocation(line: 2017, column: 1, scope: !7427)
!7437 = distinct !DISubprogram(name: "lto_input_ts_complex_tree_pointers", scope: !3, file: !3, line: 2025, type: !6711, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7438)
!7438 = !{!7439, !7440, !7441}
!7439 = !DILocalVariable(name: "ib", arg: 1, scope: !7437, file: !3, line: 2025, type: !3815)
!7440 = !DILocalVariable(name: "data_in", arg: 2, scope: !7437, file: !3, line: 2026, type: !2891)
!7441 = !DILocalVariable(name: "expr", arg: 3, scope: !7437, file: !3, line: 2026, type: !1468)
!7442 = !DILocation(line: 0, scope: !7437)
!7443 = !DILocation(line: 2028, column: 26, scope: !7437)
!7444 = !DILocation(line: 2028, column: 3, scope: !7437)
!7445 = !DILocation(line: 2028, column: 24, scope: !7437)
!7446 = !DILocation(line: 2029, column: 26, scope: !7437)
!7447 = !DILocation(line: 2029, column: 3, scope: !7437)
!7448 = !DILocation(line: 2029, column: 24, scope: !7437)
!7449 = !DILocation(line: 2030, column: 1, scope: !7437)
!7450 = distinct !DISubprogram(name: "lto_input_ts_decl_minimal_tree_pointers", scope: !3, file: !3, line: 2038, type: !6711, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7451)
!7451 = !{!7452, !7453, !7454}
!7452 = !DILocalVariable(name: "ib", arg: 1, scope: !7450, file: !3, line: 2038, type: !3815)
!7453 = !DILocalVariable(name: "data_in", arg: 2, scope: !7450, file: !3, line: 2039, type: !2891)
!7454 = !DILocalVariable(name: "expr", arg: 3, scope: !7450, file: !3, line: 2039, type: !1468)
!7455 = !DILocation(line: 0, scope: !7450)
!7456 = !DILocation(line: 2041, column: 22, scope: !7450)
!7457 = !DILocation(line: 2041, column: 3, scope: !7450)
!7458 = !DILocation(line: 2041, column: 20, scope: !7450)
!7459 = !DILocation(line: 2042, column: 25, scope: !7450)
!7460 = !DILocation(line: 2042, column: 3, scope: !7450)
!7461 = !DILocation(line: 2042, column: 23, scope: !7450)
!7462 = !DILocation(line: 2043, column: 33, scope: !7450)
!7463 = !DILocation(line: 2043, column: 3, scope: !7450)
!7464 = !DILocation(line: 2043, column: 31, scope: !7450)
!7465 = !DILocation(line: 2044, column: 1, scope: !7450)
!7466 = distinct !DISubprogram(name: "lto_input_ts_decl_common_tree_pointers", scope: !3, file: !3, line: 2052, type: !6711, scopeLine: 2054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7467)
!7467 = !{!7468, !7469, !7470}
!7468 = !DILocalVariable(name: "ib", arg: 1, scope: !7466, file: !3, line: 2052, type: !3815)
!7469 = !DILocalVariable(name: "data_in", arg: 2, scope: !7466, file: !3, line: 2053, type: !2891)
!7470 = !DILocalVariable(name: "expr", arg: 3, scope: !7466, file: !3, line: 2053, type: !1468)
!7471 = !DILocation(line: 0, scope: !7466)
!7472 = !DILocation(line: 2055, column: 22, scope: !7466)
!7473 = !DILocation(line: 2055, column: 3, scope: !7466)
!7474 = !DILocation(line: 2055, column: 20, scope: !7466)
!7475 = !DILocation(line: 2056, column: 27, scope: !7466)
!7476 = !DILocation(line: 2056, column: 3, scope: !7466)
!7477 = !DILocation(line: 2056, column: 25, scope: !7466)
!7478 = !DILocation(line: 2058, column: 7, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 2058, column: 7)
!7480 = !DILocation(line: 2058, column: 24, scope: !7479)
!7481 = !DILocation(line: 2058, column: 7, scope: !7466)
!7482 = !DILocation(line: 2059, column: 27, scope: !7479)
!7483 = !DILocation(line: 2059, column: 5, scope: !7479)
!7484 = !DILocation(line: 2059, column: 25, scope: !7479)
!7485 = !DILocation(line: 2061, column: 28, scope: !7466)
!7486 = !DILocation(line: 2061, column: 3, scope: !7466)
!7487 = !DILocation(line: 2061, column: 26, scope: !7466)
!7488 = !DILocation(line: 2062, column: 33, scope: !7466)
!7489 = !DILocation(line: 2062, column: 3, scope: !7466)
!7490 = !DILocation(line: 2062, column: 31, scope: !7466)
!7491 = !DILocation(line: 2064, column: 7, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 2064, column: 7)
!7493 = !DILocation(line: 2064, column: 24, scope: !7492)
!7494 = !DILocation(line: 2064, column: 7, scope: !7466)
!7495 = !DILocation(line: 2065, column: 25, scope: !7492)
!7496 = !DILocation(line: 2065, column: 5, scope: !7492)
!7497 = !DILocation(line: 2065, column: 23, scope: !7492)
!7498 = !DILocation(line: 2067, column: 8, scope: !7499)
!7499 = distinct !DILexicalBlock(scope: !7466, file: !3, line: 2067, column: 7)
!7500 = !DILocation(line: 2067, column: 25, scope: !7499)
!7501 = !DILocation(line: 2068, column: 8, scope: !7499)
!7502 = !DILocation(line: 2068, column: 28, scope: !7499)
!7503 = !DILocation(line: 2069, column: 7, scope: !7499)
!7504 = !DILocation(line: 2069, column: 10, scope: !7499)
!7505 = !DILocation(line: 2067, column: 7, scope: !7466)
!7506 = !DILocation(line: 2070, column: 5, scope: !7499)
!7507 = !DILocation(line: 2071, column: 1, scope: !7466)
!7508 = distinct !DISubprogram(name: "lto_input_ts_decl_non_common_tree_pointers", scope: !3, file: !3, line: 2079, type: !6711, scopeLine: 2081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7509)
!7509 = !{!7510, !7511, !7512}
!7510 = !DILocalVariable(name: "ib", arg: 1, scope: !7508, file: !3, line: 2079, type: !3815)
!7511 = !DILocalVariable(name: "data_in", arg: 2, scope: !7508, file: !3, line: 2080, type: !2891)
!7512 = !DILocalVariable(name: "expr", arg: 3, scope: !7508, file: !3, line: 2080, type: !1468)
!7513 = !DILocation(line: 0, scope: !7508)
!7514 = !DILocation(line: 2082, column: 7, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 2082, column: 7)
!7516 = !DILocation(line: 2082, column: 24, scope: !7515)
!7517 = !DILocation(line: 2082, column: 7, scope: !7508)
!7518 = !DILocation(line: 2084, column: 31, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 2083, column: 5)
!7520 = !DILocation(line: 2084, column: 7, scope: !7519)
!7521 = !DILocation(line: 2084, column: 29, scope: !7519)
!7522 = !DILocation(line: 2085, column: 28, scope: !7519)
!7523 = !DILocation(line: 2085, column: 7, scope: !7519)
!7524 = !DILocation(line: 2085, column: 26, scope: !7519)
!7525 = !DILocation(line: 2086, column: 5, scope: !7519)
!7526 = !DILocation(line: 2087, column: 24, scope: !7508)
!7527 = !DILocation(line: 2087, column: 3, scope: !7508)
!7528 = !DILocation(line: 2087, column: 22, scope: !7508)
!7529 = !DILocation(line: 2088, column: 1, scope: !7508)
!7530 = distinct !DISubprogram(name: "lto_input_ts_decl_with_vis_tree_pointers", scope: !3, file: !3, line: 2096, type: !6711, scopeLine: 2098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7531)
!7531 = !{!7532, !7533, !7534, !7535}
!7532 = !DILocalVariable(name: "ib", arg: 1, scope: !7530, file: !3, line: 2096, type: !3815)
!7533 = !DILocalVariable(name: "data_in", arg: 2, scope: !7530, file: !3, line: 2097, type: !2891)
!7534 = !DILocalVariable(name: "expr", arg: 3, scope: !7530, file: !3, line: 2097, type: !1468)
!7535 = !DILocalVariable(name: "id", scope: !7530, file: !3, line: 2099, type: !1468)
!7536 = !DILocation(line: 0, scope: !7530)
!7537 = !DILocation(line: 2101, column: 8, scope: !7530)
!7538 = !DILocation(line: 2102, column: 7, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 2102, column: 7)
!7540 = !DILocation(line: 2102, column: 7, scope: !7530)
!7541 = !DILocation(line: 2104, column: 7, scope: !7542)
!7542 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 2103, column: 5)
!7543 = !DILocation(line: 2105, column: 7, scope: !7542)
!7544 = !DILocation(line: 2106, column: 5, scope: !7542)
!7545 = !DILocation(line: 2108, column: 30, scope: !7530)
!7546 = !DILocation(line: 2108, column: 3, scope: !7530)
!7547 = !DILocation(line: 2108, column: 28, scope: !7530)
!7548 = !DILocation(line: 2109, column: 30, scope: !7530)
!7549 = !DILocation(line: 2109, column: 3, scope: !7530)
!7550 = !DILocation(line: 2109, column: 28, scope: !7530)
!7551 = !DILocation(line: 2110, column: 1, scope: !7530)
!7552 = distinct !DISubprogram(name: "lto_input_ts_field_decl_tree_pointers", scope: !3, file: !3, line: 2118, type: !6711, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7553)
!7553 = !{!7554, !7555, !7556}
!7554 = !DILocalVariable(name: "ib", arg: 1, scope: !7552, file: !3, line: 2118, type: !3815)
!7555 = !DILocalVariable(name: "data_in", arg: 2, scope: !7552, file: !3, line: 2119, type: !2891)
!7556 = !DILocalVariable(name: "expr", arg: 3, scope: !7552, file: !3, line: 2119, type: !1468)
!7557 = !DILocation(line: 0, scope: !7552)
!7558 = !DILocation(line: 2121, column: 30, scope: !7552)
!7559 = !DILocation(line: 2121, column: 3, scope: !7552)
!7560 = !DILocation(line: 2121, column: 28, scope: !7552)
!7561 = !DILocation(line: 2122, column: 32, scope: !7552)
!7562 = !DILocation(line: 2122, column: 3, scope: !7552)
!7563 = !DILocation(line: 2122, column: 30, scope: !7552)
!7564 = !DILocation(line: 2123, column: 27, scope: !7552)
!7565 = !DILocation(line: 2123, column: 3, scope: !7552)
!7566 = !DILocation(line: 2123, column: 25, scope: !7552)
!7567 = !DILocation(line: 2124, column: 34, scope: !7552)
!7568 = !DILocation(line: 2124, column: 3, scope: !7552)
!7569 = !DILocation(line: 2124, column: 32, scope: !7552)
!7570 = !DILocation(line: 2125, column: 26, scope: !7552)
!7571 = !DILocation(line: 2125, column: 3, scope: !7552)
!7572 = !DILocation(line: 2125, column: 24, scope: !7552)
!7573 = !DILocation(line: 2126, column: 23, scope: !7552)
!7574 = !DILocation(line: 2126, column: 3, scope: !7552)
!7575 = !DILocation(line: 2126, column: 21, scope: !7552)
!7576 = !DILocation(line: 2127, column: 1, scope: !7552)
!7577 = distinct !DISubprogram(name: "lto_input_ts_function_decl_tree_pointers", scope: !3, file: !3, line: 2135, type: !6711, scopeLine: 2137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7578)
!7578 = !{!7579, !7580, !7581}
!7579 = !DILocalVariable(name: "ib", arg: 1, scope: !7577, file: !3, line: 2135, type: !3815)
!7580 = !DILocalVariable(name: "data_in", arg: 2, scope: !7577, file: !3, line: 2136, type: !2891)
!7581 = !DILocalVariable(name: "expr", arg: 3, scope: !7577, file: !3, line: 2136, type: !1468)
!7582 = !DILocation(line: 0, scope: !7577)
!7583 = !DILocation(line: 2140, column: 38, scope: !7577)
!7584 = !DILocation(line: 2140, column: 3, scope: !7577)
!7585 = !DILocation(line: 2140, column: 36, scope: !7577)
!7586 = !DILocation(line: 2141, column: 42, scope: !7577)
!7587 = !DILocation(line: 2141, column: 3, scope: !7577)
!7588 = !DILocation(line: 2141, column: 40, scope: !7577)
!7589 = !DILocation(line: 2142, column: 48, scope: !7577)
!7590 = !DILocation(line: 2142, column: 3, scope: !7577)
!7591 = !DILocation(line: 2142, column: 46, scope: !7577)
!7592 = !DILocation(line: 2147, column: 7, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 2147, column: 7)
!7594 = !DILocation(line: 2147, column: 7, scope: !7577)
!7595 = !DILocation(line: 2148, column: 5, scope: !7593)
!7596 = !DILocation(line: 2149, column: 1, scope: !7577)
!7597 = distinct !DISubprogram(name: "lto_input_ts_type_tree_pointers", scope: !3, file: !3, line: 2157, type: !6711, scopeLine: 2159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7598)
!7598 = !{!7599, !7600, !7601}
!7599 = !DILocalVariable(name: "ib", arg: 1, scope: !7597, file: !3, line: 2157, type: !3815)
!7600 = !DILocalVariable(name: "data_in", arg: 2, scope: !7597, file: !3, line: 2158, type: !2891)
!7601 = !DILocalVariable(name: "expr", arg: 3, scope: !7597, file: !3, line: 2158, type: !1468)
!7602 = !DILocation(line: 0, scope: !7597)
!7603 = !DILocation(line: 2160, column: 7, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 2160, column: 7)
!7605 = !DILocation(line: 2160, column: 24, scope: !7604)
!7606 = !DILocation(line: 2160, column: 7, scope: !7597)
!7607 = !DILocation(line: 2161, column: 26, scope: !7604)
!7608 = !DILocation(line: 2161, column: 5, scope: !7604)
!7609 = !DILocation(line: 2161, column: 24, scope: !7604)
!7610 = !DILocation(line: 2162, column: 29, scope: !7611)
!7611 = distinct !DILexicalBlock(scope: !7604, file: !3, line: 2162, column: 12)
!7612 = !DILocation(line: 2162, column: 12, scope: !7604)
!7613 = !DILocation(line: 2163, column: 26, scope: !7611)
!7614 = !DILocation(line: 2163, column: 5, scope: !7611)
!7615 = !DILocation(line: 2163, column: 24, scope: !7611)
!7616 = !DILocation(line: 2164, column: 29, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7611, file: !3, line: 2164, column: 12)
!7618 = !DILocation(line: 2164, column: 44, scope: !7617)
!7619 = !DILocation(line: 2164, column: 64, scope: !7617)
!7620 = !DILocation(line: 2164, column: 12, scope: !7611)
!7621 = !DILocation(line: 2165, column: 26, scope: !7617)
!7622 = !DILocation(line: 2165, column: 5, scope: !7617)
!7623 = !DILocation(line: 2165, column: 24, scope: !7617)
!7624 = !DILocation(line: 2166, column: 29, scope: !7625)
!7625 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 2166, column: 12)
!7626 = !DILocation(line: 2166, column: 46, scope: !7625)
!7627 = !DILocation(line: 2166, column: 66, scope: !7625)
!7628 = !DILocation(line: 2166, column: 12, scope: !7617)
!7629 = !DILocation(line: 2167, column: 29, scope: !7625)
!7630 = !DILocation(line: 2167, column: 5, scope: !7625)
!7631 = !DILocation(line: 2167, column: 27, scope: !7625)
!7632 = !DILocation(line: 2168, column: 29, scope: !7633)
!7633 = distinct !DILexicalBlock(scope: !7625, file: !3, line: 2168, column: 12)
!7634 = !DILocation(line: 2168, column: 12, scope: !7625)
!7635 = !DILocation(line: 2169, column: 45, scope: !7633)
!7636 = !DILocation(line: 2169, column: 5, scope: !7633)
!7637 = !DILocation(line: 2169, column: 43, scope: !7633)
!7638 = !DILocation(line: 2171, column: 22, scope: !7597)
!7639 = !DILocation(line: 2171, column: 3, scope: !7597)
!7640 = !DILocation(line: 2171, column: 20, scope: !7597)
!7641 = !DILocation(line: 2172, column: 27, scope: !7597)
!7642 = !DILocation(line: 2172, column: 3, scope: !7597)
!7643 = !DILocation(line: 2172, column: 25, scope: !7597)
!7644 = !DILocation(line: 2173, column: 28, scope: !7597)
!7645 = !DILocation(line: 2173, column: 3, scope: !7597)
!7646 = !DILocation(line: 2173, column: 26, scope: !7597)
!7647 = !DILocation(line: 2174, column: 22, scope: !7597)
!7648 = !DILocation(line: 2174, column: 3, scope: !7597)
!7649 = !DILocation(line: 2174, column: 20, scope: !7597)
!7650 = !DILocation(line: 2177, column: 8, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 2177, column: 7)
!7652 = !DILocation(line: 2177, column: 7, scope: !7597)
!7653 = !DILocation(line: 2178, column: 26, scope: !7651)
!7654 = !DILocation(line: 2178, column: 5, scope: !7651)
!7655 = !DILocation(line: 2178, column: 24, scope: !7651)
!7656 = !DILocation(line: 2179, column: 24, scope: !7597)
!7657 = !DILocation(line: 2179, column: 3, scope: !7597)
!7658 = !DILocation(line: 2179, column: 22, scope: !7597)
!7659 = !DILocation(line: 2180, column: 30, scope: !7597)
!7660 = !DILocation(line: 2180, column: 3, scope: !7597)
!7661 = !DILocation(line: 2180, column: 28, scope: !7597)
!7662 = !DILocation(line: 2183, column: 7, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 2183, column: 7)
!7664 = !DILocation(line: 2183, column: 7, scope: !7597)
!7665 = !DILocation(line: 2184, column: 25, scope: !7663)
!7666 = !DILocation(line: 2184, column: 5, scope: !7663)
!7667 = !DILocation(line: 2184, column: 23, scope: !7663)
!7668 = !DILocation(line: 2185, column: 25, scope: !7597)
!7669 = !DILocation(line: 2185, column: 3, scope: !7597)
!7670 = !DILocation(line: 2185, column: 23, scope: !7597)
!7671 = !DILocation(line: 2186, column: 27, scope: !7597)
!7672 = !DILocation(line: 2186, column: 3, scope: !7597)
!7673 = !DILocation(line: 2186, column: 25, scope: !7597)
!7674 = !DILocation(line: 2187, column: 27, scope: !7597)
!7675 = !DILocation(line: 2187, column: 3, scope: !7597)
!7676 = !DILocation(line: 2187, column: 25, scope: !7597)
!7677 = !DILocation(line: 2188, column: 1, scope: !7597)
!7678 = distinct !DISubprogram(name: "lto_input_ts_list_tree_pointers", scope: !3, file: !3, line: 2196, type: !6711, scopeLine: 2198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7679)
!7679 = !{!7680, !7681, !7682}
!7680 = !DILocalVariable(name: "ib", arg: 1, scope: !7678, file: !3, line: 2196, type: !3815)
!7681 = !DILocalVariable(name: "data_in", arg: 2, scope: !7678, file: !3, line: 2197, type: !2891)
!7682 = !DILocalVariable(name: "expr", arg: 3, scope: !7678, file: !3, line: 2197, type: !1468)
!7683 = !DILocation(line: 0, scope: !7678)
!7684 = !DILocation(line: 2199, column: 25, scope: !7678)
!7685 = !DILocation(line: 2199, column: 3, scope: !7678)
!7686 = !DILocation(line: 2199, column: 23, scope: !7678)
!7687 = !DILocation(line: 2200, column: 23, scope: !7678)
!7688 = !DILocation(line: 2200, column: 3, scope: !7678)
!7689 = !DILocation(line: 2200, column: 21, scope: !7678)
!7690 = !DILocation(line: 2201, column: 23, scope: !7678)
!7691 = !DILocation(line: 2201, column: 3, scope: !7678)
!7692 = !DILocation(line: 2201, column: 21, scope: !7678)
!7693 = !DILocation(line: 2202, column: 1, scope: !7678)
!7694 = distinct !DISubprogram(name: "lto_input_ts_vec_tree_pointers", scope: !3, file: !3, line: 2210, type: !6711, scopeLine: 2212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7695)
!7695 = !{!7696, !7697, !7698, !7699}
!7696 = !DILocalVariable(name: "ib", arg: 1, scope: !7694, file: !3, line: 2210, type: !3815)
!7697 = !DILocalVariable(name: "data_in", arg: 2, scope: !7694, file: !3, line: 2211, type: !2891)
!7698 = !DILocalVariable(name: "expr", arg: 3, scope: !7694, file: !3, line: 2211, type: !1468)
!7699 = !DILocalVariable(name: "i", scope: !7694, file: !3, line: 2213, type: !1461)
!7700 = !DILocation(line: 0, scope: !7694)
!7701 = !DILocation(line: 0, scope: !7702)
!7702 = distinct !DILexicalBlock(scope: !7703, file: !3, line: 2217, column: 3)
!7703 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2217, column: 3)
!7704 = !DILocation(line: 2217, column: 8, scope: !7703)
!7705 = !DILocation(line: 0, scope: !7703)
!7706 = !DILocation(line: 2217, column: 19, scope: !7702)
!7707 = !DILocation(line: 2217, column: 17, scope: !7702)
!7708 = !DILocation(line: 2217, column: 3, scope: !7703)
!7709 = !DILocation(line: 2218, column: 30, scope: !7702)
!7710 = !DILocation(line: 2218, column: 5, scope: !7702)
!7711 = !DILocation(line: 2218, column: 28, scope: !7702)
!7712 = !DILocation(line: 2217, column: 44, scope: !7702)
!7713 = !DILocation(line: 2217, column: 3, scope: !7702)
!7714 = distinct !{!7714, !7708, !7715}
!7715 = !DILocation(line: 2218, column: 57, scope: !7703)
!7716 = !DILocation(line: 2219, column: 1, scope: !7694)
!7717 = distinct !DISubprogram(name: "lto_input_ts_exp_tree_pointers", scope: !3, file: !3, line: 2228, type: !6711, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7718)
!7718 = !{!7719, !7720, !7721, !7722, !7723, !7724}
!7719 = !DILocalVariable(name: "ib", arg: 1, scope: !7717, file: !3, line: 2228, type: !3815)
!7720 = !DILocalVariable(name: "data_in", arg: 2, scope: !7717, file: !3, line: 2229, type: !2891)
!7721 = !DILocalVariable(name: "expr", arg: 3, scope: !7717, file: !3, line: 2229, type: !1468)
!7722 = !DILocalVariable(name: "i", scope: !7717, file: !3, line: 2231, type: !1461)
!7723 = !DILocalVariable(name: "length", scope: !7717, file: !3, line: 2231, type: !1461)
!7724 = !DILocalVariable(name: "loc", scope: !7717, file: !3, line: 2232, type: !1592)
!7725 = !DILocation(line: 0, scope: !7717)
!7726 = !DILocation(line: 2234, column: 12, scope: !7717)
!7727 = !DILocation(line: 2235, column: 3, scope: !7717)
!7728 = !DILocation(line: 0, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7730, file: !3, line: 2237, column: 3)
!7730 = distinct !DILexicalBlock(scope: !7717, file: !3, line: 2237, column: 3)
!7731 = !DILocation(line: 2237, column: 8, scope: !7730)
!7732 = !DILocation(line: 0, scope: !7730)
!7733 = !DILocation(line: 2237, column: 17, scope: !7729)
!7734 = !DILocation(line: 2237, column: 3, scope: !7730)
!7735 = !DILocation(line: 2238, column: 30, scope: !7729)
!7736 = !DILocation(line: 2238, column: 5, scope: !7729)
!7737 = !DILocation(line: 2238, column: 28, scope: !7729)
!7738 = !DILocation(line: 2237, column: 28, scope: !7729)
!7739 = !DILocation(line: 2237, column: 3, scope: !7729)
!7740 = distinct !{!7740, !7734, !7741}
!7741 = !DILocation(line: 2238, column: 57, scope: !7730)
!7742 = !DILocation(line: 2240, column: 9, scope: !7717)
!7743 = !DILocation(line: 2241, column: 3, scope: !7717)
!7744 = !DILocation(line: 2242, column: 23, scope: !7717)
!7745 = !DILocation(line: 2242, column: 3, scope: !7717)
!7746 = !DILocation(line: 2242, column: 21, scope: !7717)
!7747 = !DILocation(line: 2243, column: 1, scope: !7717)
!7748 = distinct !DISubprogram(name: "lto_input_ts_block_tree_pointers", scope: !3, file: !3, line: 2251, type: !6711, scopeLine: 2253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7749)
!7749 = !{!7750, !7751, !7752, !7753, !7754, !7755}
!7750 = !DILocalVariable(name: "ib", arg: 1, scope: !7748, file: !3, line: 2251, type: !3815)
!7751 = !DILocalVariable(name: "data_in", arg: 2, scope: !7748, file: !3, line: 2252, type: !2891)
!7752 = !DILocalVariable(name: "expr", arg: 3, scope: !7748, file: !3, line: 2252, type: !1468)
!7753 = !DILocalVariable(name: "i", scope: !7748, file: !3, line: 2254, type: !7)
!7754 = !DILocalVariable(name: "len", scope: !7748, file: !3, line: 2254, type: !7)
!7755 = !DILocalVariable(name: "t", scope: !7756, file: !3, line: 2262, type: !1468)
!7756 = distinct !DILexicalBlock(scope: !7757, file: !3, line: 2261, column: 5)
!7757 = distinct !DILexicalBlock(scope: !7758, file: !3, line: 2260, column: 3)
!7758 = distinct !DILexicalBlock(scope: !7748, file: !3, line: 2260, column: 3)
!7759 = !DILocation(line: 0, scope: !7748)
!7760 = !DILocation(line: 2256, column: 34, scope: !7748)
!7761 = !DILocation(line: 2256, column: 3, scope: !7748)
!7762 = !DILocation(line: 2256, column: 32, scope: !7748)
!7763 = !DILocation(line: 2257, column: 23, scope: !7748)
!7764 = !DILocation(line: 2257, column: 3, scope: !7748)
!7765 = !DILocation(line: 2257, column: 21, scope: !7748)
!7766 = !DILocation(line: 2259, column: 9, scope: !7748)
!7767 = !DILocation(line: 0, scope: !7756)
!7768 = !DILocation(line: 2260, column: 8, scope: !7758)
!7769 = !DILocation(line: 0, scope: !7758)
!7770 = !DILocation(line: 2260, column: 17, scope: !7757)
!7771 = !DILocation(line: 2260, column: 3, scope: !7758)
!7772 = !DILocation(line: 2263, column: 7, scope: !7756)
!7773 = !DILocation(line: 2260, column: 25, scope: !7757)
!7774 = !DILocation(line: 2260, column: 3, scope: !7757)
!7775 = distinct !{!7775, !7771, !7776}
!7776 = !DILocation(line: 2264, column: 5, scope: !7758)
!7777 = !DILocation(line: 2266, column: 3, scope: !7748)
!7778 = !DILocation(line: 2266, column: 29, scope: !7748)
!7779 = !DILocation(line: 2267, column: 34, scope: !7748)
!7780 = !DILocation(line: 2267, column: 3, scope: !7748)
!7781 = !DILocation(line: 2267, column: 32, scope: !7748)
!7782 = !DILocation(line: 2268, column: 34, scope: !7748)
!7783 = !DILocation(line: 2268, column: 3, scope: !7748)
!7784 = !DILocation(line: 2268, column: 32, scope: !7748)
!7785 = !DILocation(line: 2269, column: 33, scope: !7748)
!7786 = !DILocation(line: 2269, column: 3, scope: !7748)
!7787 = !DILocation(line: 2269, column: 31, scope: !7748)
!7788 = !DILocation(line: 2270, column: 28, scope: !7748)
!7789 = !DILocation(line: 2270, column: 3, scope: !7748)
!7790 = !DILocation(line: 2270, column: 26, scope: !7748)
!7791 = !DILocation(line: 2271, column: 1, scope: !7748)
!7792 = distinct !DISubprogram(name: "lto_input_ts_binfo_tree_pointers", scope: !3, file: !3, line: 2279, type: !6711, scopeLine: 2281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7793)
!7793 = !{!7794, !7795, !7796, !7797, !7798, !7799, !7800}
!7794 = !DILocalVariable(name: "ib", arg: 1, scope: !7792, file: !3, line: 2279, type: !3815)
!7795 = !DILocalVariable(name: "data_in", arg: 2, scope: !7792, file: !3, line: 2280, type: !2891)
!7796 = !DILocalVariable(name: "expr", arg: 3, scope: !7792, file: !3, line: 2280, type: !1468)
!7797 = !DILocalVariable(name: "i", scope: !7792, file: !3, line: 2282, type: !7)
!7798 = !DILocalVariable(name: "len", scope: !7792, file: !3, line: 2282, type: !7)
!7799 = !DILocalVariable(name: "t", scope: !7792, file: !3, line: 2283, type: !1468)
!7800 = !DILocalVariable(name: "a", scope: !7801, file: !3, line: 2306, type: !1468)
!7801 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 2305, column: 5)
!7802 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 2304, column: 3)
!7803 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 2304, column: 3)
!7804 = !DILocation(line: 0, scope: !7792)
!7805 = !DILocation(line: 0, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 2293, column: 11)
!7807 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 2291, column: 5)
!7808 = !DILocation(line: 2290, column: 3, scope: !7792)
!7809 = !DILocation(line: 2292, column: 11, scope: !7807)
!7810 = !DILocation(line: 2293, column: 11, scope: !7807)
!7811 = !DILocation(line: 2294, column: 2, scope: !7806)
!7812 = !DILocation(line: 2295, column: 5, scope: !7807)
!7813 = !DILocation(line: 2298, column: 25, scope: !7792)
!7814 = !DILocation(line: 2298, column: 3, scope: !7792)
!7815 = !DILocation(line: 2298, column: 23, scope: !7792)
!7816 = !DILocation(line: 2299, column: 25, scope: !7792)
!7817 = !DILocation(line: 2299, column: 3, scope: !7792)
!7818 = !DILocation(line: 2299, column: 23, scope: !7792)
!7819 = !DILocation(line: 2300, column: 27, scope: !7792)
!7820 = !DILocation(line: 2300, column: 3, scope: !7792)
!7821 = !DILocation(line: 2300, column: 25, scope: !7792)
!7822 = !DILocation(line: 2301, column: 29, scope: !7792)
!7823 = !DILocation(line: 2301, column: 3, scope: !7792)
!7824 = !DILocation(line: 2301, column: 27, scope: !7792)
!7825 = !DILocation(line: 2303, column: 9, scope: !7792)
!7826 = !DILocation(line: 0, scope: !7801)
!7827 = !DILocation(line: 2304, column: 8, scope: !7803)
!7828 = !DILocation(line: 0, scope: !7803)
!7829 = !DILocation(line: 2304, column: 17, scope: !7802)
!7830 = !DILocation(line: 2304, column: 3, scope: !7803)
!7831 = !DILocation(line: 2307, column: 7, scope: !7801)
!7832 = !DILocation(line: 2304, column: 25, scope: !7802)
!7833 = !DILocation(line: 2304, column: 3, scope: !7802)
!7834 = distinct !{!7834, !7830, !7835}
!7835 = !DILocation(line: 2308, column: 5, scope: !7803)
!7836 = !DILocation(line: 2310, column: 3, scope: !7792)
!7837 = !DILocation(line: 2310, column: 34, scope: !7792)
!7838 = !DILocation(line: 2311, column: 31, scope: !7792)
!7839 = !DILocation(line: 2311, column: 3, scope: !7792)
!7840 = !DILocation(line: 2311, column: 29, scope: !7792)
!7841 = !DILocation(line: 2312, column: 29, scope: !7792)
!7842 = !DILocation(line: 2312, column: 3, scope: !7792)
!7843 = !DILocation(line: 2312, column: 27, scope: !7792)
!7844 = !DILocation(line: 2313, column: 1, scope: !7792)
!7845 = distinct !DISubprogram(name: "lto_input_ts_constructor_tree_pointers", scope: !3, file: !3, line: 2321, type: !6711, scopeLine: 2323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7846)
!7846 = !{!7847, !7848, !7849, !7850, !7851, !7852, !7856, !7857}
!7847 = !DILocalVariable(name: "ib", arg: 1, scope: !7845, file: !3, line: 2321, type: !3815)
!7848 = !DILocalVariable(name: "data_in", arg: 2, scope: !7845, file: !3, line: 2322, type: !2891)
!7849 = !DILocalVariable(name: "expr", arg: 3, scope: !7845, file: !3, line: 2322, type: !1468)
!7850 = !DILocalVariable(name: "i", scope: !7845, file: !3, line: 2324, type: !7)
!7851 = !DILocalVariable(name: "len", scope: !7845, file: !3, line: 2324, type: !7)
!7852 = !DILocalVariable(name: "index", scope: !7853, file: !3, line: 2329, type: !1468)
!7853 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 2328, column: 5)
!7854 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 2327, column: 3)
!7855 = distinct !DILexicalBlock(scope: !7845, file: !3, line: 2327, column: 3)
!7856 = !DILocalVariable(name: "value", scope: !7853, file: !3, line: 2329, type: !1468)
!7857 = !DILocalVariable(name: "_ce___", scope: !7858, file: !3, line: 2333, type: !7859)
!7858 = distinct !DILexicalBlock(scope: !7853, file: !3, line: 2333, column: 7)
!7859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!7860 = !DILocation(line: 0, scope: !7845)
!7861 = !DILocation(line: 2326, column: 9, scope: !7845)
!7862 = !DILocation(line: 0, scope: !7858)
!7863 = !DILocation(line: 2327, column: 8, scope: !7855)
!7864 = !DILocation(line: 0, scope: !7855)
!7865 = !DILocation(line: 2327, column: 17, scope: !7854)
!7866 = !DILocation(line: 2327, column: 3, scope: !7855)
!7867 = !DILocation(line: 2331, column: 15, scope: !7853)
!7868 = !DILocation(line: 0, scope: !7853)
!7869 = !DILocation(line: 2332, column: 15, scope: !7853)
!7870 = !DILocation(line: 2333, column: 7, scope: !7858)
!7871 = !DILocation(line: 2327, column: 25, scope: !7854)
!7872 = !DILocation(line: 2327, column: 3, scope: !7854)
!7873 = distinct !{!7873, !7866, !7874}
!7874 = !DILocation(line: 2334, column: 5, scope: !7855)
!7875 = !DILocation(line: 2335, column: 1, scope: !7845)
!7876 = distinct !DISubprogram(name: "lto_input_chain", scope: !3, file: !3, line: 1972, type: !3853, scopeLine: 1973, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7877)
!7877 = !{!7878, !7879, !7880, !7881, !7882, !7883, !7884}
!7878 = !DILocalVariable(name: "ib", arg: 1, scope: !7876, file: !3, line: 1972, type: !3815)
!7879 = !DILocalVariable(name: "data_in", arg: 2, scope: !7876, file: !3, line: 1972, type: !2891)
!7880 = !DILocalVariable(name: "i", scope: !7876, file: !3, line: 1974, type: !1461)
!7881 = !DILocalVariable(name: "count", scope: !7876, file: !3, line: 1974, type: !1461)
!7882 = !DILocalVariable(name: "first", scope: !7876, file: !3, line: 1975, type: !1468)
!7883 = !DILocalVariable(name: "prev", scope: !7876, file: !3, line: 1975, type: !1468)
!7884 = !DILocalVariable(name: "curr", scope: !7876, file: !3, line: 1975, type: !1468)
!7885 = !DILocation(line: 0, scope: !7876)
!7886 = !DILocation(line: 1978, column: 11, scope: !7876)
!7887 = !DILocation(line: 1979, column: 8, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7876, file: !3, line: 1979, column: 3)
!7889 = !DILocation(line: 0, scope: !7888)
!7890 = !DILocation(line: 1977, column: 9, scope: !7876)
!7891 = !DILocation(line: 1979, column: 17, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7888, file: !3, line: 1979, column: 3)
!7893 = !DILocation(line: 1979, column: 3, scope: !7888)
!7894 = !DILocation(line: 1981, column: 14, scope: !7895)
!7895 = distinct !DILexicalBlock(scope: !7892, file: !3, line: 1980, column: 5)
!7896 = !DILocation(line: 1982, column: 11, scope: !7897)
!7897 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 1982, column: 11)
!7898 = !DILocation(line: 1982, column: 11, scope: !7895)
!7899 = !DILocation(line: 1983, column: 2, scope: !7897)
!7900 = !DILocation(line: 1983, column: 20, scope: !7897)
!7901 = !DILocation(line: 1987, column: 7, scope: !7895)
!7902 = !DILocation(line: 1987, column: 25, scope: !7895)
!7903 = !DILocation(line: 1979, column: 27, scope: !7892)
!7904 = !DILocation(line: 1979, column: 3, scope: !7892)
!7905 = distinct !{!7905, !7893, !7906}
!7906 = !DILocation(line: 1989, column: 5, scope: !7888)
!7907 = !DILocation(line: 1991, column: 3, scope: !7876)
!7908 = distinct !DISubprogram(name: "tree_operand_length", scope: !135, file: !135, line: 5347, type: !7909, scopeLine: 5348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7911)
!7909 = !DISubroutineType(types: !7910)
!7910 = !{!1461, !6124}
!7911 = !{!7912}
!7912 = !DILocalVariable(name: "node", arg: 1, scope: !7908, file: !135, line: 5347, type: !6124)
!7913 = !DILocation(line: 0, scope: !7908)
!7914 = !DILocation(line: 5349, column: 7, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7908, file: !135, line: 5349, column: 7)
!7916 = !DILocation(line: 5349, column: 7, scope: !7908)
!7917 = !DILocation(line: 5350, column: 12, scope: !7915)
!7918 = !DILocation(line: 5350, column: 5, scope: !7915)
!7919 = !DILocation(line: 5352, column: 12, scope: !7915)
!7920 = !DILocation(line: 5352, column: 5, scope: !7915)
!7921 = !DILocation(line: 0, scope: !7915)
!7922 = !DILocation(line: 5353, column: 1, scope: !7908)
!7923 = distinct !DISubprogram(name: "VEC_tree_gc_safe_push", scope: !135, file: !135, line: 183, type: !7924, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7926)
!7924 = !DISubroutineType(types: !7925)
!7925 = !{!1826, !5262, !1468}
!7926 = !{!7927, !7928}
!7927 = !DILocalVariable(name: "vec_", arg: 1, scope: !7923, file: !135, line: 183, type: !5262)
!7928 = !DILocalVariable(name: "obj_", arg: 2, scope: !7923, file: !135, line: 183, type: !1468)
!7929 = !DILocation(line: 0, scope: !7923)
!7930 = !DILocation(line: 183, column: 1, scope: !7923)
!7931 = distinct !DISubprogram(name: "VEC_tree_gc_reserve", scope: !135, file: !135, line: 183, type: !5620, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7932)
!7932 = !{!7933, !7934, !7935}
!7933 = !DILocalVariable(name: "vec_", arg: 1, scope: !7931, file: !135, line: 183, type: !5262)
!7934 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7931, file: !135, line: 183, type: !1461)
!7935 = !DILocalVariable(name: "extend", scope: !7931, file: !135, line: 183, type: !1461)
!7936 = !DILocation(line: 0, scope: !7931)
!7937 = !DILocation(line: 183, column: 1, scope: !7931)
!7938 = !DILocation(line: 183, column: 1, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7931, file: !135, line: 183, column: 1)
!7940 = distinct !DISubprogram(name: "VEC_constructor_elt_gc_safe_push", scope: !135, file: !135, line: 1538, type: !7941, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7946)
!7941 = !DISubroutineType(types: !7942)
!7942 = !{!7859, !7943, !7944}
!7943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!7944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 64)
!7945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2681)
!7946 = !{!7947, !7948}
!7947 = !DILocalVariable(name: "vec_", arg: 1, scope: !7940, file: !135, line: 1538, type: !7943)
!7948 = !DILocalVariable(name: "obj_", arg: 2, scope: !7940, file: !135, line: 1538, type: !7944)
!7949 = !DILocation(line: 0, scope: !7940)
!7950 = !DILocation(line: 1538, column: 1, scope: !7940)
!7951 = distinct !DISubprogram(name: "VEC_constructor_elt_gc_reserve", scope: !135, file: !135, line: 1538, type: !7952, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7954)
!7952 = !DISubroutineType(types: !7953)
!7953 = !{!1461, !7943, !1461}
!7954 = !{!7955, !7956, !7957}
!7955 = !DILocalVariable(name: "vec_", arg: 1, scope: !7951, file: !135, line: 1538, type: !7943)
!7956 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7951, file: !135, line: 1538, type: !1461)
!7957 = !DILocalVariable(name: "extend", scope: !7951, file: !135, line: 1538, type: !1461)
!7958 = !DILocation(line: 0, scope: !7951)
!7959 = !DILocation(line: 1538, column: 1, scope: !7951)
!7960 = !DILocation(line: 1538, column: 1, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7951, file: !135, line: 1538, column: 1)
!7962 = distinct !DISubprogram(name: "VEC_constructor_elt_base_quick_push", scope: !135, file: !135, line: 1537, type: !7963, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7966)
!7963 = !DISubroutineType(types: !7964)
!7964 = !{!7859, !7965, !7944}
!7965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2674, size: 64)
!7966 = !{!7967, !7968, !7969}
!7967 = !DILocalVariable(name: "vec_", arg: 1, scope: !7962, file: !135, line: 1537, type: !7965)
!7968 = !DILocalVariable(name: "obj_", arg: 2, scope: !7962, file: !135, line: 1537, type: !7944)
!7969 = !DILocalVariable(name: "slot_", scope: !7962, file: !135, line: 1537, type: !7859)
!7970 = !DILocation(line: 0, scope: !7962)
!7971 = !DILocation(line: 1537, column: 1, scope: !7962)
!7972 = distinct !DISubprogram(name: "VEC_constructor_elt_base_space", scope: !135, file: !135, line: 1537, type: !7973, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7975)
!7973 = !DISubroutineType(types: !7974)
!7974 = !{!1461, !7965, !1461}
!7975 = !{!7976, !7977}
!7976 = !DILocalVariable(name: "vec_", arg: 1, scope: !7972, file: !135, line: 1537, type: !7965)
!7977 = !DILocalVariable(name: "alloc_", arg: 2, scope: !7972, file: !135, line: 1537, type: !1461)
!7978 = !DILocation(line: 0, scope: !7972)
!7979 = !DILocation(line: 1537, column: 1, scope: !7972)
!7980 = distinct !DISubprogram(name: "get_resolution", scope: !3, file: !3, line: 1537, type: !7981, scopeLine: 1538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7983)
!7981 = !DISubroutineType(types: !7982)
!7982 = !{!590, !2891, !7}
!7983 = !{!7984, !7985, !7986}
!7984 = !DILocalVariable(name: "data_in", arg: 1, scope: !7980, file: !3, line: 1537, type: !2891)
!7985 = !DILocalVariable(name: "index", arg: 2, scope: !7980, file: !3, line: 1537, type: !7)
!7986 = !DILocalVariable(name: "ret", scope: !7987, file: !3, line: 1541, type: !3177)
!7987 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 1540, column: 5)
!7988 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 1539, column: 7)
!7989 = !DILocation(line: 0, scope: !7980)
!7990 = !DILocation(line: 1539, column: 16, scope: !7988)
!7991 = !DILocation(line: 1539, column: 7, scope: !7988)
!7992 = !DILocation(line: 1539, column: 7, scope: !7980)
!7993 = !DILocation(line: 1545, column: 11, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7987, file: !3, line: 1545, column: 11)
!7995 = !DILocation(line: 1546, column: 38, scope: !7994)
!7996 = !DILocation(line: 1545, column: 11, scope: !7987)
!7997 = !DILocation(line: 1548, column: 13, scope: !7987)
!7998 = !DILocation(line: 0, scope: !7987)
!7999 = !DILocation(line: 1551, column: 7, scope: !7987)
!8000 = !DILocation(line: 0, scope: !7988)
!8001 = !DILocation(line: 1556, column: 1, scope: !7980)
!8002 = distinct !DISubprogram(name: "VEC_ld_plugin_symbol_resolution_t_base_length", scope: !603, file: !603, line: 285, type: !8003, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8007)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!7, !8005}
!8005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8006, size: 64)
!8006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3170)
!8007 = !{!8008}
!8008 = !DILocalVariable(name: "vec_", arg: 1, scope: !8002, file: !603, line: 285, type: !8005)
!8009 = !DILocation(line: 0, scope: !8002)
!8010 = !DILocation(line: 285, column: 1, scope: !8002)
!8011 = distinct !DISubprogram(name: "VEC_ld_plugin_symbol_resolution_t_base_index", scope: !603, file: !603, line: 285, type: !8012, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8014)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{!3177, !8005, !7}
!8014 = !{!8015, !8016}
!8015 = !DILocalVariable(name: "vec_", arg: 1, scope: !8011, file: !603, line: 285, type: !8005)
!8016 = !DILocalVariable(name: "ix_", arg: 2, scope: !8011, file: !603, line: 285, type: !7)
!8017 = !DILocation(line: 0, scope: !8011)
!8018 = !DILocation(line: 285, column: 1, scope: !8011)
