; ModuleID = 'c-parser.bc'
source_filename = "c-parser.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.c_common_resword = type { i8*, i32 }
%struct.c_parser = type { [2 x %struct.c_token], i16, i8 }
%struct.c_token = type { i32, %union.tree_node*, i32 }
%struct.ggc_root_tab = type { i8*, i64, i64, void (i8*)*, void (i8*)* }
%struct.cpp_reader = type opaque
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.cpp_options = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8*, i8*, i8*, i32, i8, i8, %struct.anon, i64, i64, i64, i64, i8, i8, i8, i8, i8 }
%struct.anon = type { i32, i8, i8, i8, i8 }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.cpp_hashnode = type { %struct.ht_identifier, i8, i8, i16, %union._cpp_hashnode_value }
%struct.ht_identifier = type { i8*, i32, i32 }
%union._cpp_hashnode_value = type { %struct.cpp_macro* }
%struct.cpp_macro = type opaque
%struct.tree_string = type { %struct.tree_common, i32, [1 x i8] }
%struct.c_common_identifier = type { %struct.tree_common, %struct.cpp_hashnode }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.cgraph_asm_node = type { %struct.cgraph_asm_node*, %union.tree_node*, i32 }
%struct.c_expr = type { %union.tree_node*, i32, %union.tree_node* }
%struct.c_declspecs = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i8, i32, i16, i8 }
%struct.c_declarator = type { i32, %struct.c_declarator*, i32, %union.anon.0 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { %union.tree_node*, i32, %union.tree_node*, i8 }
%struct.c_parm = type { %struct.c_declspecs*, %union.tree_node*, %struct.c_declarator* }
%struct.c_type_name = type { %struct.c_declspecs*, %struct.c_declarator* }
%struct.c_typespec = type { i32, %union.tree_node*, %union.tree_node*, i8 }
%struct.c_enum_contents = type { %union.tree_node*, i32 }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.c_struct_parse_info = type opaque
%struct.anon.2 = type { %struct.c_expr, i32, i32, i32 }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.expanded_location = type { i8*, i32, i32, i8 }
%struct.stmt_tree_s = type { %union.tree_node*, i32 }
%struct.c_arg_info = type { %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8 }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.tree_omp_clause = type { %struct.tree_common, i32, i32, %union.omp_clause_subcode, %struct.gimple_seq_d*, %struct.gimple_seq_d*, [1 x %union.tree_node*] }
%union.omp_clause_subcode = type { i32 }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@flag_isoc99 = external dso_local local_unnamed_addr global i32, align 4
@flag_no_asm = external dso_local local_unnamed_addr global i32, align 4
@c_language = external dso_local local_unnamed_addr global i32, align 4
@ridpointers = external dso_local local_unnamed_addr global %union.tree_node**, align 8
@num_c_common_reswords = external dso_local local_unnamed_addr constant i32, align 4
@c_common_reswords = external dso_local local_unnamed_addr constant [0 x %struct.c_common_resword], align 8
@warn_cxx_compat = external dso_local local_unnamed_addr global i32, align 4
@the_parser = internal global %struct.c_parser* null, align 8, !dbg !0
@flag_exceptions = external dso_local local_unnamed_addr global i32, align 4
@gt_ggc_r_gt_c_parser_h = dso_local local_unnamed_addr constant [2 x %struct.ggc_root_tab] [%struct.ggc_root_tab { i8* bitcast (%struct.c_parser** @the_parser to i8*), i64 1, i64 8, void (i8*)* @gt_ggc_mx_c_parser, void (i8*)* @gt_pch_nx_c_parser }, %struct.ggc_root_tab zeroinitializer], align 16, !dbg !2079
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [42 x i8] c"identifier %qE conflicts with C++ keyword\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"c-parser.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"expected string literal\00", align 1
@parse_in = external dso_local local_unnamed_addr global %struct.cpp_reader*, align 8
@input_location = external dso_local local_unnamed_addr global i32, align 4
@.str.4 = private unnamed_addr constant [21 x i8] c"expected end of line\00", align 1
@.str.5 = private unnamed_addr constant [40 x i8] c"ISO C forbids an empty translation unit\00", align 1
@parser_obstack = external dso_local global %struct.obstack, align 8
@.str.6 = private unnamed_addr constant [55 x i8] c"ISO C does not allow extra %<;%> outside of a function\00", align 1
@pedantic = external dso_local local_unnamed_addr global i32, align 4
@warn_pointer_arith = external dso_local local_unnamed_addr global i32, align 4
@warn_traditional = external dso_local local_unnamed_addr global i32, align 4
@flag_iso = external dso_local local_unnamed_addr global i32, align 4
@warn_long_long = external dso_local local_unnamed_addr global i32, align 4
@cpp_opts = external dso_local local_unnamed_addr global %struct.cpp_options*, align 8
@.str.7 = private unnamed_addr constant [15 x i8] c"expected %<;%>\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"expected %<(%>\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"expected %<)%>\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"wide string literal in %<asm%>\00", align 1
@.str.11 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"expected identifier\00", align 1
@.str.13 = private unnamed_addr constant [18 x i8] c"expected %<@end%>\00", align 1
@.str.14 = private unnamed_addr constant [15 x i8] c"expected %<>%>\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"expected %<:%>\00", align 1
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@.str.16 = private unnamed_addr constant [34 x i8] c"expected specifier-qualifier-list\00", align 1
@.str.17 = private unnamed_addr constant [32 x i8] c"comma at end of enumerator list\00", align 1
@.str.18 = private unnamed_addr constant [24 x i8] c"expected %<,%> or %<}%>\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"expected %<{%>\00", align 1
@.str.20 = private unnamed_addr constant [51 x i8] c"ISO C forbids forward references to %<enum%> types\00", align 1
@.str.21 = private unnamed_addr constant [58 x i8] c"ISO C forbids omitting the middle term of a ?: expression\00", align 1
@c_global_trees = external dso_local local_unnamed_addr global [55 x %union.tree_node*], align 16
@c_inhibit_evaluation_warnings = external dso_local local_unnamed_addr global i32, align 4
@.str.22 = private unnamed_addr constant [15 x i8] c"expected %<]%>\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"compound literal has variable size\00", align 1
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@.str.24 = private unnamed_addr constant [54 x i8] c"compound literal qualified by address-space qualifier\00", align 1
@.str.25 = private unnamed_addr constant [34 x i8] c"ISO C90 forbids compound literals\00", align 1
@.str.26 = private unnamed_addr constant [39 x i8] c"ISO C forbids empty initializer braces\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"expected %<}%>\00", align 1
@.str.28 = private unnamed_addr constant [50 x i8] c"obsolete use of designated initializer with %<:%>\00", align 1
@.str.29 = private unnamed_addr constant [57 x i8] c"ISO C forbids specifying range of elements to initialize\00", align 1
@.str.30 = private unnamed_addr constant [51 x i8] c"ISO C90 forbids specifying subobject to initialize\00", align 1
@.str.31 = private unnamed_addr constant [53 x i8] c"obsolete use of designated initializer without %<=%>\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"expected %<=%>\00", align 1
@.str.33 = private unnamed_addr constant [46 x i8] c"traditional C rejects the unary plus operator\00", align 1
@in_sizeof = external dso_local local_unnamed_addr global i32, align 4
@.str.34 = private unnamed_addr constant [34 x i8] c"%<sizeof%> applied to a bit-field\00", align 1
@in_alignof = external dso_local local_unnamed_addr global i32, align 4
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@.str.35 = private unnamed_addr constant [48 x i8] c"fixed-point types not supported for this target\00", align 1
@.str.36 = private unnamed_addr constant [20 x i8] c"expected expression\00", align 1
@.str.37 = private unnamed_addr constant [62 x i8] c"braced-group within expression allowed only inside a function\00", align 1
@.str.38 = private unnamed_addr constant [47 x i8] c"ISO C forbids braced-groups within expressions\00", align 1
@.str.39 = private unnamed_addr constant [15 x i8] c"expected %<,%>\00", align 1
@.str.40 = private unnamed_addr constant [59 x i8] c"first argument to %<__builtin_choose_expr%> not a constant\00", align 1
@.str.41 = private unnamed_addr constant [33 x i8] c"ISO C forbids label declarations\00", align 1
@.str.42 = private unnamed_addr constant [34 x i8] c"expected declaration or statement\00", align 1
@.str.43 = private unnamed_addr constant [44 x i8] c"ISO C90 forbids mixed declarations and code\00", align 1
@.str.44 = private unnamed_addr constant [31 x i8] c"expected %<}%> before %<else%>\00", align 1
@.str.45 = private unnamed_addr constant [35 x i8] c"%<else%> without a previous %<if%>\00", align 1
@.str.46 = private unnamed_addr constant [35 x i8] c"label at end of compound statement\00", align 1
@.str.47 = private unnamed_addr constant [26 x i8] c"expected %<:%> or %<...%>\00", align 1
@.str.48 = private unnamed_addr constant [77 x i8] c"a label can only be part of a statement and a declaration is not a statement\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"expected identifier or %<*%>\00", align 1
@c_cont_label = external dso_local global %union.tree_node*, align 8
@c_break_label = external dso_local global %union.tree_node*, align 8
@.str.50 = private unnamed_addr constant [19 x i8] c"expected statement\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@warn_sequence_point = external dso_local local_unnamed_addr global i32, align 4
@.str.51 = private unnamed_addr constant [56 x i8] c"suggest braces around empty body in an %<if%> statement\00", align 1
@.str.52 = private unnamed_addr constant [58 x i8] c"suggest braces around empty body in an %<else%> statement\00", align 1
@.str.53 = private unnamed_addr constant [53 x i8] c"suggest braces around empty body in %<do%> statement\00", align 1
@.str.54 = private unnamed_addr constant [19 x i8] c"expected %<while%>\00", align 1
@.str.55 = private unnamed_addr constant [28 x i8] c"%E qualifier ignored on asm\00", align 1
@.str.56 = private unnamed_addr constant [24 x i8] c"expected %<:%> or %<)%>\00", align 1
@.str.57 = private unnamed_addr constant [20 x i8] c"expected class name\00", align 1
@.str.58 = private unnamed_addr constant [45 x i8] c"extra semicolon in struct or union specified\00", align 1
@.str.59 = private unnamed_addr constant [39 x i8] c"no semicolon at end of struct or union\00", align 1
@.str.60 = private unnamed_addr constant [50 x i8] c"ISO C forbids member declarations with no members\00", align 1
@.str.61 = private unnamed_addr constant [31 x i8] c"expected %<,%>, %<;%> or %<}%>\00", align 1
@.str.62 = private unnamed_addr constant [57 x i8] c"expected %<:%>, %<,%>, %<;%>, %<}%> or %<__attribute__%>\00", align 1
@in_typeof = external dso_local local_unnamed_addr global i32, align 4
@.str.63 = private unnamed_addr constant [34 x i8] c"%<typeof%> applied to a bit-field\00", align 1
@.str.64 = private unnamed_addr constant [29 x i8] c"expected identifier or %<(%>\00", align 1
@.str.65 = private unnamed_addr constant [47 x i8] c"ISO C requires a named argument before %<...%>\00", align 1
@.str.66 = private unnamed_addr constant [31 x i8] c"expected %<;%>, %<,%> or %<)%>\00", align 1
@.str.67 = private unnamed_addr constant [43 x i8] c"expected declaration specifiers or %<...%>\00", align 1
@.str.68 = private unnamed_addr constant [64 x i8] c"%<#pragma omp barrier%> may only be used in compound statements\00", align 1
@.str.69 = private unnamed_addr constant [62 x i8] c"%<#pragma omp flush%> may only be used in compound statements\00", align 1
@.str.70 = private unnamed_addr constant [65 x i8] c"%<#pragma omp taskwait%> may only be used in compound statements\00", align 1
@.str.71 = private unnamed_addr constant [79 x i8] c"%<#pragma omp section%> may only be used in %<#pragma omp sections%> construct\00", align 1
@.str.72 = private unnamed_addr constant [45 x i8] c"%<#pragma GCC pch_preprocess%> must be first\00", align 1
@.str.73 = private unnamed_addr constant [32 x i8] c"expected declaration specifiers\00", align 1
@.str.74 = private unnamed_addr constant [30 x i8] c"expected %<(%> or end of line\00", align 1
@.str.75 = private unnamed_addr constant [22 x i8] c"%qD is not a variable\00", align 1
@.str.76 = private unnamed_addr constant [47 x i8] c"%qE declared %<threadprivate%> after first use\00", align 1
@.str.77 = private unnamed_addr constant [51 x i8] c"automatic variable %qE cannot be %<threadprivate%>\00", align 1
@.str.78 = private unnamed_addr constant [42 x i8] c"%<threadprivate%> %qE has incomplete type\00", align 1
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@.str.79 = private unnamed_addr constant [44 x i8] c"invalid operator for %<#pragma omp atomic%>\00", align 1
@.str.80 = private unnamed_addr constant [16 x i8] c"#pragma omp for\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"collapse\00", align 1
@.str.82 = private unnamed_addr constant [7 x i8] c"copyin\00", align 1
@.str.83 = private unnamed_addr constant [12 x i8] c"copyprivate\00", align 1
@.str.84 = private unnamed_addr constant [8 x i8] c"default\00", align 1
@.str.85 = private unnamed_addr constant [13 x i8] c"firstprivate\00", align 1
@.str.86 = private unnamed_addr constant [3 x i8] c"if\00", align 1
@.str.87 = private unnamed_addr constant [12 x i8] c"lastprivate\00", align 1
@.str.88 = private unnamed_addr constant [7 x i8] c"nowait\00", align 1
@.str.89 = private unnamed_addr constant [12 x i8] c"num_threads\00", align 1
@.str.90 = private unnamed_addr constant [8 x i8] c"ordered\00", align 1
@.str.91 = private unnamed_addr constant [8 x i8] c"private\00", align 1
@.str.92 = private unnamed_addr constant [10 x i8] c"reduction\00", align 1
@.str.93 = private unnamed_addr constant [9 x i8] c"schedule\00", align 1
@.str.94 = private unnamed_addr constant [7 x i8] c"shared\00", align 1
@.str.95 = private unnamed_addr constant [7 x i8] c"untied\00", align 1
@.str.96 = private unnamed_addr constant [32 x i8] c"expected %<#pragma omp%> clause\00", align 1
@.str.97 = private unnamed_addr constant [25 x i8] c"%qs is not valid for %qs\00", align 1
@.str.98 = private unnamed_addr constant [61 x i8] c"collapse argument needs positive constant integer expression\00", align 1
@.str.99 = private unnamed_addr constant [21 x i8] c"too many %qs clauses\00", align 1
@.str.100 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.101 = private unnamed_addr constant [32 x i8] c"expected %<none%> or %<shared%>\00", align 1
@.str.102 = private unnamed_addr constant [28 x i8] c"expected integer expression\00", align 1
@.str.103 = private unnamed_addr constant [39 x i8] c"%<num_threads%> value must be positive\00", align 1
@.str.104 = private unnamed_addr constant [69 x i8] c"expected %<+%>, %<*%>, %<-%>, %<&%>, %<^%>, %<|%>, %<&&%>, or %<||%>\00", align 1
@.str.105 = private unnamed_addr constant [8 x i8] c"dynamic\00", align 1
@.str.106 = private unnamed_addr constant [7 x i8] c"guided\00", align 1
@.str.107 = private unnamed_addr constant [8 x i8] c"runtime\00", align 1
@.str.108 = private unnamed_addr constant [62 x i8] c"schedule %<runtime%> does not take a %<chunk_size%> parameter\00", align 1
@.str.109 = private unnamed_addr constant [59 x i8] c"schedule %<auto%> does not take a %<chunk_size%> parameter\00", align 1
@.str.110 = private unnamed_addr constant [24 x i8] c"expected %<,%> or %<)%>\00", align 1
@.str.111 = private unnamed_addr constant [22 x i8] c"invalid schedule kind\00", align 1
@.str.112 = private unnamed_addr constant [23 x i8] c"for statement expected\00", align 1
@.str.113 = private unnamed_addr constant [49 x i8] c"expected iteration declaration or initialization\00", align 1
@.str.114 = private unnamed_addr constant [34 x i8] c"not enough perfectly nested loops\00", align 1
@.str.115 = private unnamed_addr constant [37 x i8] c"collapsed loops not perfectly nested\00", align 1
@.str.116 = private unnamed_addr constant [50 x i8] c"iteration variable %qD should not be firstprivate\00", align 1
@.str.117 = private unnamed_addr constant [21 x i8] c"#pragma omp parallel\00", align 1
@.str.118 = private unnamed_addr constant [25 x i8] c"#pragma omp parallel for\00", align 1
@.str.119 = private unnamed_addr constant [9 x i8] c"sections\00", align 1
@.str.120 = private unnamed_addr constant [30 x i8] c"#pragma omp parallel sections\00", align 1
@.str.121 = private unnamed_addr constant [42 x i8] c"expected %<#pragma omp section%> or %<}%>\00", align 1
@.str.122 = private unnamed_addr constant [21 x i8] c"#pragma omp sections\00", align 1
@.str.123 = private unnamed_addr constant [19 x i8] c"#pragma omp single\00", align 1
@.str.124 = private unnamed_addr constant [17 x i8] c"#pragma omp task\00", align 1
@.str.125 = private unnamed_addr constant [47 x i8] c"extra semicolon in method definition specified\00", align 1
@.str.126 = private unnamed_addr constant [18 x i8] c"empty declaration\00", align 1
@.str.127 = private unnamed_addr constant [45 x i8] c"data definition has no type or storage class\00", align 1
@.str.128 = private unnamed_addr constant [24 x i8] c"expected %<,%> or %<;%>\00", align 1
@.str.129 = private unnamed_addr constant [59 x i8] c"expected %<=%>, %<,%>, %<;%>, %<asm%> or %<__attribute__%>\00", align 1
@.str.130 = private unnamed_addr constant [31 x i8] c"ISO C forbids nested functions\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2097 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2110, metadata !DIExpression()), !dbg !2112
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2111, metadata !DIExpression()), !dbg !2112
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2113
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2114
  ret i32 %call, !dbg !2115
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2116 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2120
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2121
  ret i32 %call, !dbg !2122
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2123 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2177, metadata !DIExpression()), !dbg !2178
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2179
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2179
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2179
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2179
  %cmp = icmp uge i8* %0, %1, !dbg !2179
  %conv1 = zext i1 %cmp to i64, !dbg !2179
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2179
  %tobool = icmp eq i64 %expval, 0, !dbg !2179
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2179

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2179
  br label %cond.end, !dbg !2179

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2179
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2179
  %2 = load i8, i8* %0, align 1, !dbg !2179
  %conv3 = zext i8 %2 to i32, !dbg !2179
  br label %cond.end, !dbg !2179

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2179
  ret i32 %cond, !dbg !2180
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2181 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2183, metadata !DIExpression()), !dbg !2184
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2185
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2185
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2185
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2185
  %cmp = icmp uge i8* %0, %1, !dbg !2185
  %conv1 = zext i1 %cmp to i64, !dbg !2185
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2185
  %tobool = icmp eq i64 %expval, 0, !dbg !2185
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2185

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2185
  br label %cond.end, !dbg !2185

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2185
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2185
  %2 = load i8, i8* %0, align 1, !dbg !2185
  %conv3 = zext i8 %2 to i32, !dbg !2185
  br label %cond.end, !dbg !2185

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2185
  ret i32 %cond, !dbg !2186
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2187 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2188
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2188
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2188
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2188
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2188
  %cmp = icmp uge i8* %1, %2, !dbg !2188
  %conv1 = zext i1 %cmp to i64, !dbg !2188
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2188
  %tobool = icmp eq i64 %expval, 0, !dbg !2188
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2188

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2188
  br label %cond.end, !dbg !2188

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2188
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2188
  %3 = load i8, i8* %1, align 1, !dbg !2188
  %conv3 = zext i8 %3 to i32, !dbg !2188
  br label %cond.end, !dbg !2188

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2188
  ret i32 %cond, !dbg !2189
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2190 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2194, metadata !DIExpression()), !dbg !2195
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2196
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2197
  ret i32 %call, !dbg !2198
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2199 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2203, metadata !DIExpression()), !dbg !2205
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2204, metadata !DIExpression()), !dbg !2205
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2206
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2206
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2206
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2206
  %cmp = icmp uge i8* %0, %1, !dbg !2206
  %conv1 = zext i1 %cmp to i64, !dbg !2206
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2206
  %tobool = icmp eq i64 %expval, 0, !dbg !2206
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2206

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2206
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2206
  br label %cond.end, !dbg !2206

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2206
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2206
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2206
  store i8 %conv2, i8* %0, align 1, !dbg !2206
  %conv6 = and i32 %__c, 255, !dbg !2206
  br label %cond.end, !dbg !2206

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2206
  ret i32 %cond, !dbg !2207
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2208 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2210, metadata !DIExpression()), !dbg !2212
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2211, metadata !DIExpression()), !dbg !2212
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2213
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2213
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2213
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2213
  %cmp = icmp uge i8* %0, %1, !dbg !2213
  %conv1 = zext i1 %cmp to i64, !dbg !2213
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2213
  %tobool = icmp eq i64 %expval, 0, !dbg !2213
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2213

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2213
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2213
  br label %cond.end, !dbg !2213

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2213
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2213
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2213
  store i8 %conv2, i8* %0, align 1, !dbg !2213
  %conv6 = and i32 %__c, 255, !dbg !2213
  br label %cond.end, !dbg !2213

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2213
  ret i32 %cond, !dbg !2214
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2215 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2217, metadata !DIExpression()), !dbg !2218
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2219
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2219
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2219
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2219
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2219
  %cmp = icmp uge i8* %1, %2, !dbg !2219
  %conv1 = zext i1 %cmp to i64, !dbg !2219
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2219
  %tobool = icmp eq i64 %expval, 0, !dbg !2219
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2219

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2219
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2219
  br label %cond.end, !dbg !2219

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2219
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2219
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2219
  store i8 %conv4, i8* %1, align 1, !dbg !2219
  %conv6 = and i32 %__c, 255, !dbg !2219
  br label %cond.end, !dbg !2219

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2219
  ret i32 %cond, !dbg !2220
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2221 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2227, metadata !DIExpression()), !dbg !2230
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2228, metadata !DIExpression()), !dbg !2230
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2229, metadata !DIExpression()), !dbg !2230
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2231
  ret i64 %call, !dbg !2232
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2233 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2235, metadata !DIExpression()), !dbg !2236
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2237
  %0 = load i32, i32* %_flags, align 8, !dbg !2237
  %and = lshr i32 %0, 4, !dbg !2237
  %and.lobit = and i32 %and, 1, !dbg !2237
  ret i32 %and.lobit, !dbg !2238
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2239 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2241, metadata !DIExpression()), !dbg !2242
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2243
  %0 = load i32, i32* %_flags, align 8, !dbg !2243
  %and = lshr i32 %0, 5, !dbg !2243
  %and.lobit = and i32 %and, 1, !dbg !2243
  ret i32 %and.lobit, !dbg !2244
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2245 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2248, metadata !DIExpression()), !dbg !2249
  %__c.off = add i32 %__c, 128, !dbg !2250
  %0 = icmp ult i32 %__c.off, 384, !dbg !2250
  br i1 %0, label %cond.true, label %cond.end, !dbg !2250

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2251
  %1 = load i32*, i32** %call, align 8, !dbg !2252
  %idxprom = sext i32 %__c to i64, !dbg !2253
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2253
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2253
  br label %cond.end, !dbg !2254

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2254
  ret i32 %cond, !dbg !2255
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2256 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2258, metadata !DIExpression()), !dbg !2259
  %__c.off = add i32 %__c, 128, !dbg !2260
  %0 = icmp ult i32 %__c.off, 384, !dbg !2260
  br i1 %0, label %cond.true, label %cond.end, !dbg !2260

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2261
  %1 = load i32*, i32** %call, align 8, !dbg !2262
  %idxprom = sext i32 %__c to i64, !dbg !2263
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2263
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2263
  br label %cond.end, !dbg !2264

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2264
  ret i32 %cond, !dbg !2265
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2266 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2271, metadata !DIExpression()), !dbg !2272
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2273
  %conv = trunc i64 %call to i32, !dbg !2274
  ret i32 %conv, !dbg !2275
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2276 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2280, metadata !DIExpression()), !dbg !2281
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2282
  ret i64 %call, !dbg !2283
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2284 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2289, metadata !DIExpression()), !dbg !2290
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2291
  ret i64 %call, !dbg !2292
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2293 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2299, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2300, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2301, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2302, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2303, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i64 0, metadata !2304, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2305, metadata !DIExpression()), !dbg !2309
  br label %while.cond, !dbg !2310

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2311
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2309
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2305, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2304, metadata !DIExpression()), !dbg !2309
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2312
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2310

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2313
  %div = lshr i64 %add, 1, !dbg !2315
  call void @llvm.dbg.value(metadata i64 %div, metadata !2306, metadata !DIExpression()), !dbg !2309
  %mul = mul i64 %div, %__size, !dbg !2316
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2317
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2307, metadata !DIExpression()), !dbg !2309
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2318
  call void @llvm.dbg.value(metadata i32 %call, metadata !2308, metadata !DIExpression()), !dbg !2309
  %cmp1 = icmp slt i32 %call, 0, !dbg !2319
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2321

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2322
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2324

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2325
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2304, metadata !DIExpression()), !dbg !2309
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2309
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2309
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2305, metadata !DIExpression()), !dbg !2309
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2304, metadata !DIExpression()), !dbg !2309
  br label %while.cond, !dbg !2310, !llvm.loop !2326

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2309
  ret i8* %retval.0, !dbg !2328
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2329 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2335, metadata !DIExpression()), !dbg !2336
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2337
  ret double %call, !dbg !2338
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2339 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2348, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2349, metadata !DIExpression()), !dbg !2351
  call void @llvm.dbg.value(metadata i32 %base, metadata !2350, metadata !DIExpression()), !dbg !2351
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2352
  ret i64 %call, !dbg !2353
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2354 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2360, metadata !DIExpression()), !dbg !2363
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2361, metadata !DIExpression()), !dbg !2363
  call void @llvm.dbg.value(metadata i32 %base, metadata !2362, metadata !DIExpression()), !dbg !2363
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2364
  ret i64 %call, !dbg !2365
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2366 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2377, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2378, metadata !DIExpression()), !dbg !2380
  call void @llvm.dbg.value(metadata i32 %base, metadata !2379, metadata !DIExpression()), !dbg !2380
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2381
  ret i64 %call, !dbg !2382
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2383 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2387, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2388, metadata !DIExpression()), !dbg !2390
  call void @llvm.dbg.value(metadata i32 %base, metadata !2389, metadata !DIExpression()), !dbg !2390
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2391
  ret i64 %call, !dbg !2392
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2393 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2433, metadata !DIExpression()), !dbg !2435
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2434, metadata !DIExpression()), !dbg !2435
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2436
  ret i32 %call, !dbg !2437
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2438 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2440, metadata !DIExpression()), !dbg !2442
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2441, metadata !DIExpression()), !dbg !2442
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2443
  ret i32 %call, !dbg !2444
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2445 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2449, metadata !DIExpression()), !dbg !2451
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2450, metadata !DIExpression()), !dbg !2451
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2452
  ret i32 %call, !dbg !2453
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2454 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2458, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2459, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2460, metadata !DIExpression()), !dbg !2462
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2461, metadata !DIExpression()), !dbg !2462
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2463
  ret i32 %call, !dbg !2464
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2465 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2469, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2470, metadata !DIExpression()), !dbg !2472
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2471, metadata !DIExpression()), !dbg !2472
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2471, metadata !DIExpression(DW_OP_deref)), !dbg !2472
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2473
  ret i32 %call, !dbg !2474
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2475 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2479, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2480, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2481, metadata !DIExpression()), !dbg !2483
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2482, metadata !DIExpression()), !dbg !2483
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2482, metadata !DIExpression(DW_OP_deref)), !dbg !2483
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2484
  ret i32 %call, !dbg !2485
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2486 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2510, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2511, metadata !DIExpression()), !dbg !2512
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2513
  ret i32 %call, !dbg !2514
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2515 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2517, metadata !DIExpression()), !dbg !2519
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2518, metadata !DIExpression()), !dbg !2519
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2520
  ret i32 %call, !dbg !2521
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2522 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2526, metadata !DIExpression()), !dbg !2528
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2527, metadata !DIExpression()), !dbg !2528
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2529
  ret i32 %call, !dbg !2530
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2531 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2535, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2536, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2537, metadata !DIExpression()), !dbg !2539
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2538, metadata !DIExpression()), !dbg !2539
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2540
  ret i32 %call, !dbg !2541
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @c_parse_init() local_unnamed_addr #5 !dbg !2542 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !2548, metadata !DIExpression()), !dbg !2549
  call void @llvm.dbg.value(metadata i32 2, metadata !2548, metadata !DIExpression()), !dbg !2549
  %0 = load i32, i32* @flag_isoc99, align 4, !dbg !2550
  %tobool = icmp eq i32 %0, 0, !dbg !2550
  %spec.select = select i1 %tobool, i32 6, i32 2, !dbg !2552
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2548, metadata !DIExpression()), !dbg !2549
  %1 = load i32, i32* @flag_no_asm, align 4, !dbg !2553
  %tobool2 = icmp eq i32 %1, 0, !dbg !2553
  br i1 %tobool2, label %if.end9, label %if.then3, !dbg !2555

if.then3:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !2548, metadata !DIExpression(DW_OP_constu, 80, DW_OP_or, DW_OP_stack_value)), !dbg !2549
  %spec.select1 = select i1 %tobool, i32 118, i32 82, !dbg !2556
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !2548, metadata !DIExpression()), !dbg !2549
  br label %if.end9, !dbg !2558

if.end9:                                          ; preds = %entry, %if.then3
  %mask.2 = phi i32 [ %spec.select1, %if.then3 ], [ %spec.select, %entry ], !dbg !2549
  call void @llvm.dbg.value(metadata i32 %mask.2, metadata !2548, metadata !DIExpression()), !dbg !2549
  %2 = load i32, i32* @c_language, align 4, !dbg !2559
  %and = and i32 %2, 1, !dbg !2559
  %cmp = icmp eq i32 %and, 0, !dbg !2559
  %or11 = or i32 %mask.2, 384, !dbg !2561
  %spec.select2 = select i1 %cmp, i32 %or11, i32 %mask.2, !dbg !2562
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !2548, metadata !DIExpression()), !dbg !2549
  %call = tail call i8* @ggc_alloc_cleared_stat(i64 1216) #6, !dbg !2563
  store i8* %call, i8** bitcast (%union.tree_node*** @ridpointers to i8**), align 8, !dbg !2564
  call void @llvm.dbg.value(metadata i32 0, metadata !2546, metadata !DIExpression()), !dbg !2549
  %3 = load i32, i32* @num_c_common_reswords, align 4, !dbg !2565
  %wide.trip.count = zext i32 %3 to i64, !dbg !2568
  br label %for.cond, !dbg !2569

for.cond:                                         ; preds = %for.inc, %if.end9
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end9 ], !dbg !2570
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2546, metadata !DIExpression()), !dbg !2549
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !2568
  br i1 %exitcond, label %for.end, label %for.body, !dbg !2571

for.body:                                         ; preds = %for.cond
  %disable = getelementptr inbounds [0 x %struct.c_common_resword], [0 x %struct.c_common_resword]* @c_common_reswords, i64 0, i64 %indvars.iv, i32 1, !dbg !2572
  %bf.load = load i32, i32* %disable, align 8, !dbg !2572
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !2572
  %and14 = and i32 %bf.lshr, %spec.select2, !dbg !2575
  %tobool15 = icmp eq i32 %and14, 0, !dbg !2575
  br i1 %tobool15, label %if.end31, label %if.then16, !dbg !2576

if.then16:                                        ; preds = %for.body
  %4 = load i32, i32* @warn_cxx_compat, align 4, !dbg !2577
  %tobool17 = icmp eq i32 %4, 0, !dbg !2577
  br i1 %tobool17, label %for.inc, label %land.lhs.true, !dbg !2580

land.lhs.true:                                    ; preds = %if.then16
  %and23 = and i32 %bf.load, 33554432, !dbg !2581
  %tobool24 = icmp eq i32 %and23, 0, !dbg !2581
  br i1 %tobool24, label %for.inc, label %if.then25, !dbg !2582

if.then25:                                        ; preds = %land.lhs.true
  %word = getelementptr inbounds [0 x %struct.c_common_resword], [0 x %struct.c_common_resword]* @c_common_reswords, i64 0, i64 %indvars.iv, i32 0, !dbg !2583
  %5 = load i8*, i8** %word, align 8, !dbg !2583
  %call28 = tail call %union.tree_node* @get_identifier(i8* %5) #6, !dbg !2585
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !2547, metadata !DIExpression()), !dbg !2549
  %node = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2586
  %6 = bitcast i32* %node to %struct.cpp_hashnode*, !dbg !2586
  %rid_code = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %6, i64 0, i32 2, !dbg !2586
  store i8 65, i8* %rid_code, align 1, !dbg !2586
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2587
  %bf.load29 = load i64, i64* %7, align 8, !dbg !2588
  %bf.set = or i64 %bf.load29, 8589934592, !dbg !2588
  store i64 %bf.set, i64* %7, align 8, !dbg !2588
  br label %for.inc, !dbg !2589

if.end31:                                         ; preds = %for.body
  %word34 = getelementptr inbounds [0 x %struct.c_common_resword], [0 x %struct.c_common_resword]* @c_common_reswords, i64 0, i64 %indvars.iv, i32 0, !dbg !2590
  %8 = load i8*, i8** %word34, align 8, !dbg !2590
  %call35 = tail call %union.tree_node* @get_identifier(i8* %8) #6, !dbg !2591
  call void @llvm.dbg.value(metadata %union.tree_node* %call35, metadata !2547, metadata !DIExpression()), !dbg !2549
  %conv = trunc i32 %bf.load to i8, !dbg !2592
  %node40 = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !2592
  %9 = bitcast i32* %node40 to %struct.cpp_hashnode*, !dbg !2592
  %rid_code41 = getelementptr inbounds %struct.cpp_hashnode, %struct.cpp_hashnode* %9, i64 0, i32 2, !dbg !2592
  store i8 %conv, i8* %rid_code41, align 1, !dbg !2592
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2593
  %bf.load43 = load i64, i64* %10, align 8, !dbg !2594
  %bf.set45 = or i64 %bf.load43, 8589934592, !dbg !2594
  store i64 %bf.set45, i64* %10, align 8, !dbg !2594
  %11 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !2595
  %bf.clear50 = and i32 %bf.load, 65535, !dbg !2596
  %idxprom51 = zext i32 %bf.clear50 to i64, !dbg !2595
  %arrayidx52 = getelementptr inbounds %union.tree_node*, %union.tree_node** %11, i64 %idxprom51, !dbg !2595
  store %union.tree_node* %call35, %union.tree_node** %arrayidx52, align 8, !dbg !2597
  br label %for.inc, !dbg !2598

for.inc:                                          ; preds = %land.lhs.true, %if.then16, %if.then25, %if.end31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !2599
  br label %for.cond, !dbg !2600, !llvm.loop !2601

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2603
}

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_identifier(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @pragma_lex(%union.tree_node** %value) local_unnamed_addr #5 !dbg !2604 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node** %value, metadata !2608, metadata !DIExpression()), !dbg !2612
  %0 = load %struct.c_parser*, %struct.c_parser** @the_parser, align 8, !dbg !2613
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %0) #7, !dbg !2614
  call void @llvm.dbg.value(metadata %struct.c_token* %call, metadata !2609, metadata !DIExpression()), !dbg !2612
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !2615
  %bf.load = load i32, i32* %1, align 8, !dbg !2615
  %bf.clear = and i32 %bf.load, 255, !dbg !2615
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !2611, metadata !DIExpression()), !dbg !2612
  %value1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 1, !dbg !2616
  %2 = bitcast %union.tree_node** %value1 to i64*, !dbg !2616
  %3 = load i64, i64* %2, align 8, !dbg !2616
  %4 = bitcast %union.tree_node** %value to i64*, !dbg !2617
  store i64 %3, i64* %4, align 8, !dbg !2617
  %trunc = trunc i32 %bf.load to i8, !dbg !2618
  switch i8 %trunc, label %if.end [
    i8 71, label %if.end5
    i8 22, label %if.end5
    i8 74, label %if.then4
  ], !dbg !2618

if.then4:                                         ; preds = %entry
  call void @llvm.dbg.value(metadata i32 53, metadata !2611, metadata !DIExpression()), !dbg !2612
  br label %if.end, !dbg !2620

if.end:                                           ; preds = %entry, %if.then4
  %ret.0 = phi i32 [ 53, %if.then4 ], [ %bf.clear, %entry ], !dbg !2612
  call void @llvm.dbg.value(metadata i32 %ret.0, metadata !2611, metadata !DIExpression()), !dbg !2612
  %5 = load %struct.c_parser*, %struct.c_parser** @the_parser, align 8, !dbg !2623
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %5) #7, !dbg !2624
  br label %if.end5

if.end5:                                          ; preds = %entry, %entry, %if.end
  %ret.1 = phi i32 [ %ret.0, %if.end ], [ 22, %entry ], [ 22, %entry ], !dbg !2625
  call void @llvm.dbg.value(metadata i32 %ret.1, metadata !2611, metadata !DIExpression()), !dbg !2612
  ret i32 %ret.1, !dbg !2626
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) unnamed_addr #0 !dbg !2627 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !2631, metadata !DIExpression()), !dbg !2632
  %tokens_avail = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 1, !dbg !2633
  %0 = load i16, i16* %tokens_avail, align 8, !dbg !2633
  %cmp = icmp eq i16 %0, 0, !dbg !2635
  br i1 %cmp, label %if.then, label %if.end, !dbg !2636

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 0, i64 0, !dbg !2637
  tail call fastcc void @c_lex_one_token(%struct.c_parser* %parser, %struct.c_token* %arrayidx) #7, !dbg !2639
  store i16 1, i16* %tokens_avail, align 8, !dbg !2640
  br label %if.end, !dbg !2641

if.end:                                           ; preds = %if.then, %entry
  %arrayidx4 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 0, i64 0, !dbg !2642
  ret %struct.c_token* %arrayidx4, !dbg !2643
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_consume_token(%struct.c_parser* %parser) unnamed_addr #5 !dbg !2644 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !2648, metadata !DIExpression()), !dbg !2649
  %tokens_avail = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 1, !dbg !2650
  %0 = load i16, i16* %tokens_avail, align 8, !dbg !2650
  %cmp = icmp sgt i16 %0, 0, !dbg !2650
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !2650

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 528, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2650
  br label %cond.end, !dbg !2650

cond.end:                                         ; preds = %entry, %cond.true
  %1 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 0, i64 0, i32 0, !dbg !2651
  %bf.load = load i32, i32* %1, align 8, !dbg !2651
  %bf.clear = and i32 %bf.load, 255, !dbg !2651
  %cmp2 = icmp eq i32 %bf.clear, 22, !dbg !2651
  br i1 %cmp2, label %cond.true4, label %cond.end6, !dbg !2651

cond.true4:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 529, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2651
  br label %cond.end6, !dbg !2651

cond.end6:                                        ; preds = %cond.end, %cond.true4
  %in_pragma = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !2652
  %bf.load8 = load i8, i8* %in_pragma, align 2, !dbg !2652
  %bf.clear9 = and i8 %bf.load8, 2, !dbg !2652
  %tobool = icmp eq i8 %bf.clear9, 0, !dbg !2652
  br i1 %tobool, label %cond.end18, label %lor.lhs.false, !dbg !2652

lor.lhs.false:                                    ; preds = %cond.end6
  %bf.load12 = load i32, i32* %1, align 8, !dbg !2652
  %bf.clear13 = and i32 %bf.load12, 255, !dbg !2652
  %cmp14 = icmp eq i32 %bf.clear13, 71, !dbg !2652
  br i1 %cmp14, label %cond.true16, label %cond.end18, !dbg !2652

cond.true16:                                      ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 530, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2652
  %bf.load20.pre = load i8, i8* %in_pragma, align 2, !dbg !2653
  br label %cond.end18, !dbg !2652

cond.end18:                                       ; preds = %lor.lhs.false, %cond.end6, %cond.true16
  %bf.load20 = phi i8 [ %bf.load8, %lor.lhs.false ], [ %bf.load8, %cond.end6 ], [ %bf.load20.pre, %cond.true16 ], !dbg !2653
  %bf.clear21 = and i8 %bf.load20, 1, !dbg !2653
  %tobool23 = icmp eq i8 %bf.clear21, 0, !dbg !2653
  br i1 %tobool23, label %lor.lhs.false24, label %cond.end33, !dbg !2653

lor.lhs.false24:                                  ; preds = %cond.end18
  %bf.load27 = load i32, i32* %1, align 8, !dbg !2653
  %bf.clear28 = and i32 %bf.load27, 255, !dbg !2653
  %cmp29 = icmp eq i32 %bf.clear28, 70, !dbg !2653
  br i1 %cmp29, label %cond.true31, label %cond.end33, !dbg !2653

cond.true31:                                      ; preds = %lor.lhs.false24
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 531, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2653
  br label %cond.end33, !dbg !2653

cond.end33:                                       ; preds = %lor.lhs.false24, %cond.end18, %cond.true31
  %2 = load i16, i16* %tokens_avail, align 8, !dbg !2654
  %cmp37 = icmp eq i16 %2, 2, !dbg !2656
  br i1 %cmp37, label %if.then, label %if.end, !dbg !2657

if.then:                                          ; preds = %cond.end33
  %arrayidx42 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 0, i64 1, !dbg !2658
  %3 = bitcast %struct.c_parser* %parser to i8*, !dbg !2658
  %4 = bitcast %struct.c_token* %arrayidx42 to i8*, !dbg !2658
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !2658
  br label %if.end, !dbg !2659

if.end:                                           ; preds = %if.then, %cond.end33
  %dec = add i16 %2, -1, !dbg !2660
  store i16 %dec, i16* %tokens_avail, align 8, !dbg !2660
  ret void, !dbg !2661
}

; Function Attrs: nounwind uwtable
define dso_local void @c_parse_file() local_unnamed_addr #5 !dbg !2662 {
entry:
  %tparser = alloca %struct.c_parser, align 8
  %0 = bitcast %struct.c_parser* %tparser to i8*, !dbg !2665
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %0) #8, !dbg !2665
  %call = call i8* @memset(i8* nonnull %0, i32 0, i64 56) #6, !dbg !2666
  store %struct.c_parser* %tparser, %struct.c_parser** @the_parser, align 8, !dbg !2667
  call void @llvm.dbg.value(metadata %struct.c_parser* %tparser, metadata !2664, metadata !DIExpression(DW_OP_deref)), !dbg !2668
  %call1 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* nonnull %tparser) #7, !dbg !2669
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !2671
  %bf.load = load i32, i32* %1, align 8, !dbg !2671
  %bf.lshr.mask = and i32 %bf.load, -16777216, !dbg !2672
  %cmp = icmp eq i32 %bf.lshr.mask, 285212672, !dbg !2672
  br i1 %cmp, label %if.then, label %if.end, !dbg !2673

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.c_parser* %tparser, metadata !2664, metadata !DIExpression(DW_OP_deref)), !dbg !2668
  call fastcc void @c_parser_pragma_pch_preprocess(%struct.c_parser* nonnull %tparser) #7, !dbg !2674
  br label %if.end, !dbg !2674

if.end:                                           ; preds = %if.then, %entry
  %call2 = call i8* @ggc_alloc_stat(i64 56) #6, !dbg !2675
  store i8* %call2, i8** bitcast (%struct.c_parser** @the_parser to i8**), align 8, !dbg !2676
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %call2, i8* nonnull align 8 %0, i64 56, i1 false), !dbg !2677
  %2 = load i32, i32* @flag_exceptions, align 4, !dbg !2678
  %tobool = icmp eq i32 %2, 0, !dbg !2678
  %3 = bitcast i8* %call2 to %struct.c_parser*, !dbg !2680
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !2680

if.then3:                                         ; preds = %if.end
  call void @using_eh_for_cleanups() #6, !dbg !2681
  %.pre = load %struct.c_parser*, %struct.c_parser** @the_parser, align 8, !dbg !2682
  br label %if.end4, !dbg !2681

if.end4:                                          ; preds = %if.end, %if.then3
  %4 = phi %struct.c_parser* [ %3, %if.end ], [ %.pre, %if.then3 ], !dbg !2682
  call fastcc void @c_parser_translation_unit(%struct.c_parser* %4) #7, !dbg !2683
  store %struct.c_parser* null, %struct.c_parser** @the_parser, align 8, !dbg !2684
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %0) #8, !dbg !2685
  ret void, !dbg !2685
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_pragma_pch_preprocess(%struct.c_parser* %parser) unnamed_addr #5 !dbg !2686 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !2688, metadata !DIExpression()), !dbg !2690
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !2689, metadata !DIExpression()), !dbg !2690
  tail call fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) #7, !dbg !2691
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 61) #7, !dbg !2692
  %tobool = icmp eq i8 %call, 0, !dbg !2692
  br i1 %tobool, label %if.else, label %if.then, !dbg !2694

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !2695
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 1, !dbg !2697
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !2697
  %1 = bitcast %union.tree_node* %0 to %struct.tree_string*, !dbg !2690
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !2689, metadata !DIExpression()), !dbg !2690
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !2698
  %phitmp = icmp eq %union.tree_node* %0, null, !dbg !2699
  br label %if.end, !dbg !2699

if.else:                                          ; preds = %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #7, !dbg !2700
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %2 = phi %struct.tree_string* [ %1, %if.then ], [ null, %if.else ], !dbg !2690
  %name.0 = phi i1 [ %phitmp, %if.then ], [ true, %if.else ]
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !2701
  br i1 %name.0, label %if.end4, label %if.then3, !dbg !2702

if.then3:                                         ; preds = %if.end
  %3 = load %struct.cpp_reader*, %struct.cpp_reader** @parse_in, align 8, !dbg !2703
  %arraydecay = getelementptr inbounds %struct.tree_string, %struct.tree_string* %2, i64 0, i32 2, i64 0, !dbg !2705
  tail call void @c_common_pch_pragma(%struct.cpp_reader* %3, i8* nonnull %arraydecay) #6, !dbg !2706
  br label %if.end4, !dbg !2706

if.end4:                                          ; preds = %if.end, %if.then3
  ret void, !dbg !2707
}

declare dso_local i8* @ggc_alloc_stat(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local void @using_eh_for_cleanups() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_translation_unit(%struct.c_parser* %parser) unnamed_addr #5 !dbg !2708 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !2710, metadata !DIExpression()), !dbg !2714
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 22) #7, !dbg !2715
  %tobool = icmp eq i8 %call, 0, !dbg !2715
  br i1 %tobool, label %if.else, label %if.then, !dbg !2716

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !2717
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !2719
  %0 = load i32, i32* %location, align 8, !dbg !2719
  %call2 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %0, i32 834, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2720
  br label %if.end, !dbg !2721

if.else:                                          ; preds = %entry
  store i64 0, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !2722
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !2722
  %2 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !2722
  %sub.ptr.sub = sub i64 %1, %2, !dbg !2722
  %cmp = icmp slt i64 %sub.ptr.sub, 0, !dbg !2722
  %3 = inttoptr i64 %2 to i8*, !dbg !2722
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !2722

cond.true:                                        ; preds = %if.else
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 0) #6, !dbg !2722
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !2722
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !2722
  br label %cond.end, !dbg !2722

cond.end:                                         ; preds = %if.else, %cond.true
  %4 = phi i8* [ %3, %if.else ], [ %.pre1, %cond.true ], !dbg !2722
  %5 = phi i64 [ 0, %if.else ], [ %.pre, %cond.true ], !dbg !2722
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !2722
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !2722
  %6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !2722
  %cmp3 = icmp eq i8* %add.ptr, %6, !dbg !2722
  %7 = ptrtoint i8* %6 to i64, !dbg !2722
  %8 = ptrtoint i8* %add.ptr to i64, !dbg !2722
  br i1 %cmp3, label %cond.true5, label %cond.end7, !dbg !2722

cond.true5:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !2722
  %bf.set = or i8 %bf.load, 2, !dbg !2722
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !2722
  br label %cond.end7, !dbg !2722

cond.end7:                                        ; preds = %cond.end, %cond.true5
  store i64 %7, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !2722
  %9 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !2722
  %conv13 = sext i32 %9 to i64, !dbg !2722
  %add = add nsw i64 %8, %conv13, !dbg !2722
  %neg = xor i32 %9, -1, !dbg !2722
  %conv14 = sext i32 %neg to i64, !dbg !2722
  %and = and i64 %add, %conv14, !dbg !2722
  %10 = inttoptr i64 %and to i8*, !dbg !2722
  store i8* %10, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !2722
  %11 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !2722
  %sub.ptr.sub17 = sub i64 %and, %11, !dbg !2722
  %12 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !2722
  %sub.ptr.sub20 = sub i64 %12, %11, !dbg !2722
  %cmp21 = icmp sgt i64 %sub.ptr.sub17, %sub.ptr.sub20, !dbg !2722
  br i1 %cmp21, label %cond.true23, label %cond.end25, !dbg !2722

cond.true23:                                      ; preds = %cond.end7
  store i64 %12, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !2722
  br label %cond.end25, !dbg !2722

cond.end25:                                       ; preds = %cond.end7, %cond.true23
  %13 = phi i64 [ %and, %cond.end7 ], [ %12, %cond.true23 ], !dbg !2722
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !2722
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext 0) #6, !dbg !2723
  br label %do.body, !dbg !2724

do.body:                                          ; preds = %do.cond, %cond.end25
  tail call void @ggc_collect() #6, !dbg !2725
  tail call fastcc void @c_parser_external_declaration(%struct.c_parser* %parser) #7, !dbg !2727
  %14 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !2728
  %sub.ptr.sub29 = sub i64 %7, %14, !dbg !2728
  store i64 %sub.ptr.sub29, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !2728
  %cmp30 = icmp sgt i64 %sub.ptr.sub29, 0, !dbg !2728
  %15 = inttoptr i64 %14 to i8*, !dbg !2728
  br i1 %cmp30, label %land.lhs.true, label %cond.false39, !dbg !2728

land.lhs.true:                                    ; preds = %do.body
  %16 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !2728
  %sub.ptr.sub34 = sub i64 %16, %14, !dbg !2728
  %cmp35 = icmp slt i64 %sub.ptr.sub29, %sub.ptr.sub34, !dbg !2728
  br i1 %cmp35, label %cond.true37, label %cond.false39, !dbg !2728

cond.true37:                                      ; preds = %land.lhs.true
  %add.ptr38 = getelementptr inbounds i8, i8* %15, i64 %sub.ptr.sub29, !dbg !2728
  store i8* %add.ptr38, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !2728
  store i8* %add.ptr38, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !2728
  br label %do.cond, !dbg !2728

cond.false39:                                     ; preds = %land.lhs.true, %do.body
  %add.ptr40 = getelementptr inbounds i8, i8* %15, i64 %sub.ptr.sub29, !dbg !2728
  tail call void @obstack_free(%struct.obstack* nonnull @parser_obstack, i8* %add.ptr40) #6, !dbg !2728
  br label %do.cond, !dbg !2728

do.cond:                                          ; preds = %cond.true37, %cond.false39
  %call43 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 22) #7, !dbg !2729
  %tobool44 = icmp eq i8 %call43, 0, !dbg !2730
  br i1 %tobool44, label %if.end.loopexit, label %do.body, !dbg !2730, !llvm.loop !2731

if.end.loopexit:                                  ; preds = %do.cond
  br label %if.end, !dbg !2733

if.end:                                           ; preds = %if.end.loopexit, %if.then
  ret void, !dbg !2733
}

; Function Attrs: nounwind uwtable
define dso_local void @gt_ggc_mx_c_parser(i8* %x_p) #5 !dbg !2734 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !2736, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !2737, metadata !DIExpression()), !dbg !2744
  %cmp = icmp ne i8* %x_p, null, !dbg !2745
  %cmp1 = icmp ne i8* %x_p, inttoptr (i64 1 to i8*), !dbg !2745
  %or.cond = and i1 %cmp, %cmp1, !dbg !2745
  br i1 %or.cond, label %land.lhs.true2, label %if.end9, !dbg !2745

land.lhs.true2:                                   ; preds = %entry
  %call = tail call i32 @ggc_set_mark(i8* nonnull %x_p) #6, !dbg !2745
  %tobool = icmp eq i32 %call, 0, !dbg !2745
  br i1 %tobool, label %for.cond.preheader, label %if.end9, !dbg !2746

for.cond.preheader:                               ; preds = %land.lhs.true2
  %tokens = bitcast i8* %x_p to [2 x %struct.c_token]*, !dbg !2747
  br label %for.cond, !dbg !2753

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !2754
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !2739, metadata !DIExpression()), !dbg !2755
  %cmp3 = icmp eq i64 %i0.0, 2, !dbg !2756
  br i1 %cmp3, label %if.end9.loopexit, label %do.body, !dbg !2753

do.body:                                          ; preds = %for.cond
  %value = getelementptr inbounds [2 x %struct.c_token], [2 x %struct.c_token]* %tokens, i64 0, i64 %i0.0, i32 1, !dbg !2757
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !2757
  %cmp4 = icmp eq %union.tree_node* %0, null, !dbg !2757
  br i1 %cmp4, label %for.inc, label %if.then5, !dbg !2758

if.then5:                                         ; preds = %do.body
  %1 = bitcast %union.tree_node* %0 to i8*, !dbg !2758
  tail call void @gt_ggc_mx_lang_tree_node(i8* nonnull %1) #6, !dbg !2757
  br label %for.inc, !dbg !2757

for.inc:                                          ; preds = %do.body, %if.then5
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !2759
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2739, metadata !DIExpression()), !dbg !2755
  br label %for.cond, !dbg !2760, !llvm.loop !2761

if.end9.loopexit:                                 ; preds = %for.cond
  br label %if.end9, !dbg !2763

if.end9:                                          ; preds = %if.end9.loopexit, %land.lhs.true2, %entry
  ret void, !dbg !2763
}

declare dso_local i32 @ggc_set_mark(i8*) local_unnamed_addr #2

declare dso_local void @gt_ggc_mx_lang_tree_node(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_nx_c_parser(i8* %x_p) #5 !dbg !2764 {
entry:
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !2766, metadata !DIExpression()), !dbg !2773
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !2767, metadata !DIExpression()), !dbg !2773
  %call = tail call i32 @gt_pch_note_object(i8* %x_p, i8* %x_p, void (i8*, i8*, void (i8*, i8*)*, i8*)* nonnull @gt_pch_p_8c_parser, i32 9) #6, !dbg !2774
  %tobool = icmp eq i32 %call, 0, !dbg !2774
  br i1 %tobool, label %if.end6, label %for.cond.preheader, !dbg !2775

for.cond.preheader:                               ; preds = %entry
  %tokens = bitcast i8* %x_p to [2 x %struct.c_token]*, !dbg !2776
  br label %for.cond, !dbg !2782

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i0.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !2783
  call void @llvm.dbg.value(metadata i64 %i0.0, metadata !2768, metadata !DIExpression()), !dbg !2784
  %cmp = icmp eq i64 %i0.0, 2, !dbg !2785
  br i1 %cmp, label %if.end6.loopexit, label %do.body, !dbg !2782

do.body:                                          ; preds = %for.cond
  %value = getelementptr inbounds [2 x %struct.c_token], [2 x %struct.c_token]* %tokens, i64 0, i64 %i0.0, i32 1, !dbg !2786
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !2786
  %cmp1 = icmp eq %union.tree_node* %0, null, !dbg !2786
  br i1 %cmp1, label %for.inc, label %if.then2, !dbg !2787

if.then2:                                         ; preds = %do.body
  %1 = bitcast %union.tree_node* %0 to i8*, !dbg !2787
  tail call void @gt_pch_nx_lang_tree_node(i8* nonnull %1) #6, !dbg !2786
  br label %for.inc, !dbg !2786

for.inc:                                          ; preds = %do.body, %if.then2
  %inc = add nuw nsw i64 %i0.0, 1, !dbg !2788
  call void @llvm.dbg.value(metadata i64 %inc, metadata !2768, metadata !DIExpression()), !dbg !2784
  br label %for.cond, !dbg !2789, !llvm.loop !2790

if.end6.loopexit:                                 ; preds = %for.cond
  br label %if.end6, !dbg !2792

if.end6:                                          ; preds = %if.end6.loopexit, %entry
  ret void, !dbg !2792
}

declare dso_local i32 @gt_pch_note_object(i8*, i8*, void (i8*, i8*, void (i8*, i8*)*, i8*)*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @gt_pch_p_8c_parser(i8* %this_obj, i8* %x_p, void (i8*, i8*)* %op, i8* %cookie) #5 !dbg !2793 {
entry:
  call void @llvm.dbg.value(metadata i8* %this_obj, metadata !2798, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !2799, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata void (i8*, i8*)* %op, metadata !2800, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata i8* %cookie, metadata !2801, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata i8* %x_p, metadata !2802, metadata !DIExpression()), !dbg !2806
  call void @llvm.dbg.value(metadata i64 2, metadata !2805, metadata !DIExpression()), !dbg !2807
  call void @llvm.dbg.value(metadata i64 0, metadata !2803, metadata !DIExpression()), !dbg !2807
  %cmp1 = icmp eq i8* %x_p, %this_obj, !dbg !2808
  %tokens = bitcast i8* %x_p to [2 x %struct.c_token]*, !dbg !2808
  br i1 %cmp1, label %entry.split.us, label %entry.entry.split_crit_edge, !dbg !2813

entry.entry.split_crit_edge:                      ; preds = %entry
  br label %for.end.us-lcssa, !dbg !2813

entry.split.us:                                   ; preds = %entry
  br label %for.cond.us, !dbg !2813

for.cond.us:                                      ; preds = %for.body.us, %entry.split.us
  %i0.0.us = phi i64 [ 0, %entry.split.us ], [ %inc.us, %for.body.us ], !dbg !2814
  call void @llvm.dbg.value(metadata i64 %i0.0.us, metadata !2803, metadata !DIExpression()), !dbg !2807
  %cmp.us = icmp eq i64 %i0.0.us, 2, !dbg !2815
  br i1 %cmp.us, label %for.end.us-lcssa.us, label %for.body.us, !dbg !2816

for.body.us:                                      ; preds = %for.cond.us
  %value.us = getelementptr inbounds [2 x %struct.c_token], [2 x %struct.c_token]* %tokens, i64 0, i64 %i0.0.us, i32 1, !dbg !2817
  %0 = bitcast %union.tree_node** %value.us to i8*, !dbg !2818
  tail call void %op(i8* nonnull %0, i8* %cookie) #6, !dbg !2819
  %inc.us = add nuw nsw i64 %i0.0.us, 1, !dbg !2820
  call void @llvm.dbg.value(metadata i64 %inc.us, metadata !2803, metadata !DIExpression()), !dbg !2807
  br label %for.cond.us, !dbg !2821, !llvm.loop !2822

for.end.us-lcssa.us:                              ; preds = %for.cond.us
  br label %for.end, !dbg !2824

for.end.us-lcssa:                                 ; preds = %entry.entry.split_crit_edge
  call void @llvm.dbg.value(metadata i32 undef, metadata !2803, metadata !DIExpression()), !dbg !2807
  br label %for.end, !dbg !2824

for.end:                                          ; preds = %for.end.us-lcssa.us, %for.end.us-lcssa
  ret void, !dbg !2824
}

declare dso_local void @gt_pch_nx_lang_tree_node(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_lex_one_token(%struct.c_parser* %parser, %struct.c_token* %token) unnamed_addr #5 !dbg !2825 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !2829, metadata !DIExpression()), !dbg !2842
  call void @llvm.dbg.value(metadata %struct.c_token* %token, metadata !2830, metadata !DIExpression()), !dbg !2842
  %0 = load i8, i8* @timevar_enable, align 1, !dbg !2843
  %tobool = icmp eq i8 %0, 0, !dbg !2843
  br i1 %tobool, label %do.end, label %if.then, !dbg !2846

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 43) #6, !dbg !2843
  br label %do.end, !dbg !2843

do.end:                                           ; preds = %entry, %if.then
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %token, i64 0, i32 1, !dbg !2847
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %token, i64 0, i32 2, !dbg !2848
  %lex_untranslated_string = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !2849
  %bf.load = load i8, i8* %lex_untranslated_string, align 2, !dbg !2849
  %bf.clear = lshr i8 %bf.load, 3, !dbg !2850
  %bf.clear.lobit = and i8 %bf.clear, 1, !dbg !2850
  %1 = zext i8 %bf.clear.lobit to i32, !dbg !2850
  %call = tail call i32 @c_lex_with_flags(%union.tree_node** nonnull %value, i32* nonnull %location, i8* null, i32 %1) #6, !dbg !2851
  %bf.value = and i32 %call, 255, !dbg !2852
  %2 = getelementptr inbounds %struct.c_token, %struct.c_token* %token, i64 0, i32 0, !dbg !2853
  %bf.clear11 = or i32 %bf.value, 9962496, !dbg !2854
  store i32 %bf.clear11, i32* %2, align 8, !dbg !2854
  %trunc = trunc i32 %call to i8, !dbg !2855
  switch i8 %trunc, label %do.body174 [
    i8 53, label %sw.bb
    i8 54, label %sw.bb142
    i8 18, label %sw.bb155
    i8 19, label %sw.bb155
    i8 21, label %sw.bb155
    i8 43, label %sw.bb155
    i8 70, label %sw.bb164
  ], !dbg !2855

sw.bb:                                            ; preds = %do.end
  %bf.load14 = load i8, i8* %lex_untranslated_string, align 2, !dbg !2856
  %bf.clear16 = and i8 %bf.load14, 32, !dbg !2856
  call void @llvm.dbg.value(metadata i8 %bf.clear16, metadata !2834, metadata !DIExpression()), !dbg !2857
  %3 = load i32, i32* @c_language, align 4, !dbg !2858
  %and = and i32 %3, 1, !dbg !2858
  %cmp = icmp eq i32 %and, 0, !dbg !2858
  br i1 %cmp, label %if.end23, label %if.then19, !dbg !2860

if.then19:                                        ; preds = %sw.bb
  %bf.clear22 = and i8 %bf.load14, -33, !dbg !2861
  store i8 %bf.clear22, i8* %lex_untranslated_string, align 2, !dbg !2861
  br label %if.end23, !dbg !2862

if.end23:                                         ; preds = %sw.bb, %if.then19
  %4 = bitcast %union.tree_node** %value to i64**, !dbg !2863
  %5 = load i64*, i64** %4, align 8, !dbg !2863
  %bf.load25 = load i64, i64* %5, align 8, !dbg !2863
  %bf.cast285 = and i64 %bf.load25, 8589934592, !dbg !2863
  %tobool29 = icmp eq i64 %bf.cast285, 0, !dbg !2863
  %6 = bitcast i64* %5 to %union.tree_node*, !dbg !2864
  br i1 %tobool29, label %if.end94, label %if.then30, !dbg !2864

if.then30:                                        ; preds = %if.end23
  %7 = bitcast i64* %5 to %struct.c_common_identifier*, !dbg !2864
  %rid_code32 = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %7, i64 0, i32 1, i32 2, !dbg !2865
  %8 = load i8, i8* %rid_code32, align 1, !dbg !2865
  %conv33 = zext i8 %8 to i32, !dbg !2865
  call void @llvm.dbg.value(metadata i32 %conv33, metadata !2835, metadata !DIExpression()), !dbg !2866
  %cmp34 = icmp eq i8 %8, 65, !dbg !2867
  br i1 %cmp34, label %if.then36, label %if.else, !dbg !2869

if.then36:                                        ; preds = %if.then30
  %9 = load i32, i32* %location, align 8, !dbg !2870
  %call39 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %9, i32 49, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64* %5) #6, !dbg !2872
  br label %cleanup, !dbg !2873

if.else:                                          ; preds = %if.then30
  %.off = add i8 %8, 120, !dbg !2874
  %10 = icmp ult i8 %.off, 16, !dbg !2874
  br i1 %10, label %if.then44, label %if.else52, !dbg !2874

if.then44:                                        ; preds = %if.else
  %bf.load45 = load i32, i32* %2, align 8, !dbg !2876
  %bf.shl = shl nuw nsw i32 %conv33, 16, !dbg !2878
  %bf.set47 = and i32 %bf.load45, -16776961, !dbg !2878
  %bf.clear50 = or i32 %bf.set47, %bf.shl, !dbg !2878
  %bf.set51 = or i32 %bf.clear50, 768, !dbg !2878
  store i32 %bf.set51, i32* %2, align 8, !dbg !2878
  br label %cleanup, !dbg !2879

if.else52:                                        ; preds = %if.else
  br i1 %cmp, label %if.else82, label %if.then56, !dbg !2880

if.then56:                                        ; preds = %if.else52
  %call58 = tail call i32 @objc_is_reserved_word(%union.tree_node* %6) #6, !dbg !2881
  %tobool59 = icmp eq i32 %call58, 0, !dbg !2881
  br i1 %tobool59, label %land.lhs.true60, label %cleanup, !dbg !2885

land.lhs.true60:                                  ; preds = %if.then56
  %.off7 = add i8 %8, -21, !dbg !2886
  %11 = icmp ult i8 %.off7, 6, !dbg !2886
  br i1 %11, label %lor.lhs.false, label %if.then71, !dbg !2886

lor.lhs.false:                                    ; preds = %land.lhs.true60
  %bf.load66 = load i8, i8* %lex_untranslated_string, align 2, !dbg !2887
  %bf.clear68 = and i8 %bf.load66, 16, !dbg !2887
  %tobool70 = icmp eq i8 %bf.clear68, 0, !dbg !2888
  br i1 %tobool70, label %cleanup, label %if.then71, !dbg !2889

if.then71:                                        ; preds = %lor.lhs.false, %land.lhs.true60
  %12 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !2890
  %idxprom = zext i8 %8 to i64, !dbg !2890
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %12, i64 %idxprom, !dbg !2890
  %13 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !2890
  %14 = load i64, i64* %13, align 8, !dbg !2890
  %15 = bitcast %union.tree_node** %value to i64*, !dbg !2892
  store i64 %14, i64* %15, align 8, !dbg !2892
  %bf.load73 = load i32, i32* %2, align 8, !dbg !2893
  %bf.shl78 = shl nuw nsw i32 %conv33, 16, !dbg !2894
  %bf.set75 = and i32 %bf.load73, -16711936, !dbg !2894
  %bf.clear79 = or i32 %bf.set75, %bf.shl78, !dbg !2894
  %bf.set80 = or i32 %bf.clear79, 74, !dbg !2894
  store i32 %bf.set80, i32* %2, align 8, !dbg !2894
  br label %cleanup, !dbg !2895

if.else82:                                        ; preds = %if.else52
  %bf.load83 = load i32, i32* %2, align 8, !dbg !2896
  %bf.shl88 = shl nuw nsw i32 %conv33, 16, !dbg !2898
  %bf.set85 = and i32 %bf.load83, -16711936, !dbg !2898
  %bf.clear89 = or i32 %bf.set85, %bf.shl88, !dbg !2898
  %bf.set90 = or i32 %bf.clear89, 74, !dbg !2898
  store i32 %bf.set90, i32* %2, align 8, !dbg !2898
  br label %cleanup, !dbg !2899

cleanup:                                          ; preds = %lor.lhs.false, %if.then56, %if.then36, %if.else82, %if.then71, %if.then44
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then44 ], [ false, %if.then71 ], [ false, %if.else82 ], [ true, %if.then56 ], [ true, %lor.lhs.false ], [ true, %if.then36 ]
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end94_crit_edge, label %do.body174

cleanup.if.end94_crit_edge:                       ; preds = %cleanup
  %.pre = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !2900
  br label %if.end94

if.end94:                                         ; preds = %cleanup.if.end94_crit_edge, %if.end23
  %16 = phi %union.tree_node* [ %.pre, %cleanup.if.end94_crit_edge ], [ %6, %if.end23 ], !dbg !2900
  %call96 = tail call %union.tree_node* @lookup_name(%union.tree_node* %16) #6, !dbg !2901
  call void @llvm.dbg.value(metadata %union.tree_node* %call96, metadata !2831, metadata !DIExpression()), !dbg !2857
  %tobool97 = icmp eq %union.tree_node* %call96, null, !dbg !2902
  br i1 %tobool97, label %if.else110, label %if.then98, !dbg !2903

if.then98:                                        ; preds = %if.end94
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %call96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !2904
  %bf.load100 = load i64, i64* %17, align 8, !dbg !2904
  %bf.cast1026 = and i64 %bf.load100, 65535, !dbg !2907
  %cmp103 = icmp eq i64 %bf.cast1026, 35, !dbg !2907
  br i1 %cmp103, label %if.then105, label %if.end135, !dbg !2908

if.then105:                                       ; preds = %if.then98
  %bf.load106 = load i32, i32* %2, align 8, !dbg !2909
  %bf.clear107 = and i32 %bf.load106, -65281, !dbg !2909
  %bf.set108 = or i32 %bf.clear107, 256, !dbg !2909
  store i32 %bf.set108, i32* %2, align 8, !dbg !2909
  br label %do.body174, !dbg !2911

if.else110:                                       ; preds = %if.end94
  %18 = load i32, i32* @c_language, align 4, !dbg !2912
  %and111 = and i32 %18, 1, !dbg !2912
  %cmp112 = icmp eq i32 %and111, 0, !dbg !2912
  br i1 %cmp112, label %if.end135, label %if.then114, !dbg !2913

if.then114:                                       ; preds = %if.else110
  %19 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !2914
  %call116 = tail call %union.tree_node* @objc_is_class_name(%union.tree_node* %19) #6, !dbg !2915
  call void @llvm.dbg.value(metadata %union.tree_node* %call116, metadata !2838, metadata !DIExpression()), !dbg !2916
  %tobool117 = icmp eq %union.tree_node* %call116, null, !dbg !2917
  br i1 %tobool117, label %cleanup131, label %land.lhs.true118, !dbg !2919

land.lhs.true118:                                 ; preds = %if.then114
  %call119 = tail call i32 @global_bindings_p() #6, !dbg !2920
  %tobool120 = icmp eq i32 %call119, 0, !dbg !2920
  br i1 %tobool120, label %lor.lhs.false121, label %if.then125, !dbg !2921

lor.lhs.false121:                                 ; preds = %land.lhs.true118
  %tobool122 = icmp eq i8 %bf.clear16, 0, !dbg !2922
  br i1 %tobool122, label %if.then125, label %cleanup131, !dbg !2923

if.then125:                                       ; preds = %lor.lhs.false121, %land.lhs.true118
  store %union.tree_node* %call116, %union.tree_node** %value, align 8, !dbg !2924
  %bf.load127 = load i32, i32* %2, align 8, !dbg !2926
  %bf.clear128 = and i32 %bf.load127, -65281, !dbg !2926
  %bf.set129 = or i32 %bf.clear128, 512, !dbg !2926
  store i32 %bf.set129, i32* %2, align 8, !dbg !2926
  br label %cleanup131, !dbg !2927

cleanup131:                                       ; preds = %lor.lhs.false121, %if.then114, %if.then125
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then125 ], [ true, %lor.lhs.false121 ], [ true, %if.then114 ]
  br i1 %cleanup.dest.slot.1, label %if.end135, label %do.body174

if.end135:                                        ; preds = %if.else110, %cleanup131, %if.then98
  %bf.load136 = load i32, i32* %2, align 8, !dbg !2928
  %bf.clear137 = and i32 %bf.load136, -65281, !dbg !2928
  store i32 %bf.clear137, i32* %2, align 8, !dbg !2928
  br label %do.body174, !dbg !2929

sw.bb142:                                         ; preds = %do.end
  store i32 9962570, i32* %2, align 8, !dbg !2930
  %20 = bitcast %union.tree_node** %value to %struct.c_common_identifier**, !dbg !2931
  %21 = load %struct.c_common_identifier*, %struct.c_common_identifier** %20, align 8, !dbg !2931
  %rid_code148 = getelementptr inbounds %struct.c_common_identifier, %struct.c_common_identifier* %21, i64 0, i32 1, i32 2, !dbg !2931
  %22 = load i8, i8* %rid_code148, align 1, !dbg !2931
  %conv149 = zext i8 %22 to i32, !dbg !2931
  %bf.shl152 = shl nuw nsw i32 %conv149, 16, !dbg !2932
  %bf.set154 = or i32 %bf.shl152, 1098, !dbg !2932
  store i32 %bf.set154, i32* %2, align 8, !dbg !2932
  br label %do.body174, !dbg !2933

sw.bb155:                                         ; preds = %do.end, %do.end, %do.end, %do.end
  %23 = load i32, i32* @c_language, align 4, !dbg !2934
  %and156 = and i32 %23, 1, !dbg !2934
  %cmp157 = icmp eq i32 %and156, 0, !dbg !2934
  br i1 %cmp157, label %do.body174, label %if.then159, !dbg !2936

if.then159:                                       ; preds = %sw.bb155
  %bf.load161 = load i8, i8* %lex_untranslated_string, align 2, !dbg !2937
  %bf.clear162 = and i8 %bf.load161, -33, !dbg !2937
  store i8 %bf.clear162, i8* %lex_untranslated_string, align 2, !dbg !2937
  br label %do.body174, !dbg !2938

sw.bb164:                                         ; preds = %do.end
  %24 = bitcast %union.tree_node** %value to %struct.tree_int_cst**, !dbg !2939
  %25 = load %struct.tree_int_cst*, %struct.tree_int_cst** %24, align 8, !dbg !2939
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %25, i64 0, i32 1, i32 0, !dbg !2939
  %26 = load i64, i64* %low, align 8, !dbg !2939
  %conv167 = trunc i64 %26 to i32, !dbg !2940
  %bf.shl170 = shl i32 %conv167, 24, !dbg !2941
  %bf.set172 = or i32 %bf.clear11, %bf.shl170, !dbg !2941
  store i32 %bf.set172, i32* %2, align 8, !dbg !2941
  store %union.tree_node* null, %union.tree_node** %value, align 8, !dbg !2942
  br label %do.body174, !dbg !2943

do.body174:                                       ; preds = %sw.bb155, %if.then105, %if.end135, %cleanup131, %cleanup, %sw.bb142, %sw.bb164, %if.then159, %do.end
  %27 = load i8, i8* @timevar_enable, align 1, !dbg !2944
  %tobool175 = icmp eq i8 %27, 0, !dbg !2944
  br i1 %tobool175, label %do.end178, label %if.then176, !dbg !2947

if.then176:                                       ; preds = %do.body174
  tail call void @timevar_pop_1(i32 43) #6, !dbg !2944
  br label %do.end178, !dbg !2944

do.end178:                                        ; preds = %do.body174, %if.then176
  ret void, !dbg !2948
}

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #2

declare dso_local i32 @c_lex_with_flags(%union.tree_node**, i32*, i8*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @warning_at(i32, i32, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @objc_is_reserved_word(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @lookup_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_is_class_name(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @global_bindings_p() local_unnamed_addr #2

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) unnamed_addr #5 !dbg !2949 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !2951, metadata !DIExpression()), !dbg !2952
  %in_pragma = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !2953
  %bf.load = load i8, i8* %in_pragma, align 2, !dbg !2953
  %bf.clear = and i8 %bf.load, 2, !dbg !2953
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !2953
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2953

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 543, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2953
  br label %cond.end, !dbg !2953

cond.end:                                         ; preds = %entry, %cond.true
  %tokens_avail = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 1, !dbg !2954
  %0 = load i16, i16* %tokens_avail, align 8, !dbg !2954
  %cmp = icmp sgt i16 %0, 0, !dbg !2954
  br i1 %cmp, label %cond.end4, label %cond.true2, !dbg !2954

cond.true2:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 544, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2954
  br label %cond.end4, !dbg !2954

cond.end4:                                        ; preds = %cond.end, %cond.true2
  %1 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 0, i64 0, i32 0, !dbg !2955
  %bf.load6 = load i32, i32* %1, align 8, !dbg !2955
  %bf.clear7 = and i32 %bf.load6, 255, !dbg !2955
  %cmp8 = icmp eq i32 %bf.clear7, 70, !dbg !2955
  br i1 %cmp8, label %cond.end12, label %cond.true10, !dbg !2955

cond.true10:                                      ; preds = %cond.end4
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 545, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2955
  br label %cond.end12, !dbg !2955

cond.end12:                                       ; preds = %cond.end4, %cond.true10
  %2 = load i16, i16* %tokens_avail, align 8, !dbg !2956
  %cmp16 = icmp eq i16 %2, 2, !dbg !2958
  br i1 %cmp16, label %if.then, label %if.end, !dbg !2959

if.then:                                          ; preds = %cond.end12
  %arrayidx21 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 0, i64 1, !dbg !2960
  %3 = bitcast %struct.c_parser* %parser to i8*, !dbg !2960
  %4 = bitcast %struct.c_token* %arrayidx21 to i8*, !dbg !2960
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !2960
  br label %if.end, !dbg !2961

if.end:                                           ; preds = %if.then, %cond.end12
  %dec = add i16 %2, -1, !dbg !2962
  store i16 %dec, i16* %tokens_avail, align 8, !dbg !2962
  %bf.load24 = load i8, i8* %in_pragma, align 2, !dbg !2963
  %bf.set = or i8 %bf.load24, 2, !dbg !2963
  store i8 %bf.set, i8* %in_pragma, align 2, !dbg !2963
  ret void, !dbg !2964
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 %type) unnamed_addr #0 !dbg !2965 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !2969, metadata !DIExpression()), !dbg !2971
  call void @llvm.dbg.value(metadata i32 %type, metadata !2970, metadata !DIExpression()), !dbg !2971
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !2972
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !2973
  %bf.load = load i32, i32* %0, align 8, !dbg !2973
  %bf.clear = and i32 %bf.load, 255, !dbg !2973
  %cmp = icmp eq i32 %bf.clear, %type, !dbg !2974
  %conv1 = zext i1 %cmp to i8, !dbg !2972
  ret i8 %conv1, !dbg !2975
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_error(%struct.c_parser* %parser, i8* %gmsgid) unnamed_addr #5 !dbg !2976 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !2980, metadata !DIExpression()), !dbg !2983
  call void @llvm.dbg.value(metadata i8* %gmsgid, metadata !2981, metadata !DIExpression()), !dbg !2983
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !2984
  call void @llvm.dbg.value(metadata %struct.c_token* %call, metadata !2982, metadata !DIExpression()), !dbg !2983
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !2985
  %bf.load = load i8, i8* %error, align 2, !dbg !2985
  %bf.clear = and i8 %bf.load, 1, !dbg !2985
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !2987
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !2988

if.end:                                           ; preds = %entry
  %bf.set = or i8 %bf.load, 1, !dbg !2989
  store i8 %bf.set, i8* %error, align 2, !dbg !2989
  %tobool4 = icmp eq i8* %gmsgid, null, !dbg !2990
  br i1 %tobool4, label %cleanup.cont, label %if.end6, !dbg !2992

if.end6:                                          ; preds = %if.end
  tail call fastcc void @c_parser_set_source_position_from_token(%struct.c_token* %call) #7, !dbg !2993
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !2994
  %bf.load7 = load i32, i32* %0, align 8, !dbg !2994
  %bf.clear8 = and i32 %bf.load7, 255, !dbg !2994
  %cmp = icmp eq i32 %bf.clear8, 74, !dbg !2995
  br i1 %cmp, label %cond.end, label %cond.false, !dbg !2996

cond.false:                                       ; preds = %if.end6
  br label %cond.end, !dbg !2996

cond.end:                                         ; preds = %if.end6, %cond.false
  %cond = phi i32 [ %bf.clear8, %cond.false ], [ 53, %if.end6 ], !dbg !2996
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 1, !dbg !2997
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !2997
  tail call void @c_parse_error(i8* nonnull %gmsgid, i32 %cond, %union.tree_node* %1, i8 zeroext 0) #6, !dbg !2998
  br label %cleanup.cont, !dbg !2999

cleanup.cont:                                     ; preds = %if.end, %entry, %cond.end
  ret void, !dbg !2999
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3000 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3002, metadata !DIExpression()), !dbg !3006
  %in_pragma = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !3007
  %bf.load = load i8, i8* %in_pragma, align 2, !dbg !3007
  %bf.clear = and i8 %bf.load, 2, !dbg !3007
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !3007
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3007

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 733, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3007
  %bf.load2.pre = load i8, i8* %in_pragma, align 2, !dbg !3008
  br label %cond.end, !dbg !3007

cond.end:                                         ; preds = %entry, %cond.true
  %bf.load2 = phi i8 [ %bf.load, %entry ], [ %bf.load2.pre, %cond.true ], !dbg !3008
  %bf.clear3 = and i8 %bf.load2, -3, !dbg !3008
  store i8 %bf.clear3, i8* %in_pragma, align 2, !dbg !3008
  %call = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 71, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)) #7, !dbg !3009
  %tobool4 = icmp eq i8 %call, 0, !dbg !3009
  br i1 %tobool4, label %while.body.preheader, label %if.end14, !dbg !3010

while.body.preheader:                             ; preds = %cond.end
  br label %while.body, !dbg !3011

while.body:                                       ; preds = %while.body.preheader, %cleanup
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3012
  call void @llvm.dbg.value(metadata %struct.c_token* %call5, metadata !3003, metadata !DIExpression()), !dbg !3013
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call5, i64 0, i32 0, !dbg !3014
  %bf.load6 = load i32, i32* %0, align 8, !dbg !3014
  %bf.clear7 = and i32 %bf.load6, 255, !dbg !3014
  %cmp = icmp eq i32 %bf.clear7, 22, !dbg !3016
  br i1 %cmp, label %cleanup, label %if.end, !dbg !3017

if.end:                                           ; preds = %while.body
  %cmp11 = icmp eq i32 %bf.clear7, 71, !dbg !3018
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3013
  %. = select i1 %cmp11, i32 3, i32 0, !dbg !3020
  br label %cleanup, !dbg !3020

cleanup:                                          ; preds = %if.end, %while.body
  %cleanup.dest.slot.0 = phi i32 [ 3, %while.body ], [ %., %if.end ]
  %switch = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %switch, label %while.body, label %if.end14.loopexit, !llvm.loop !3021

if.end14.loopexit:                                ; preds = %cleanup
  br label %if.end14, !dbg !3023

if.end14:                                         ; preds = %if.end14.loopexit, %cond.end
  %bf.load15 = load i8, i8* %in_pragma, align 2, !dbg !3024
  %bf.clear16 = and i8 %bf.load15, -2, !dbg !3024
  store i8 %bf.clear16, i8* %in_pragma, align 2, !dbg !3024
  ret void, !dbg !3025
}

declare dso_local void @c_common_pch_pragma(%struct.cpp_reader*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @c_parser_set_source_position_from_token(%struct.c_token* %token) unnamed_addr #0 !dbg !3026 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_token* %token, metadata !3030, metadata !DIExpression()), !dbg !3031
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %token, i64 0, i32 0, !dbg !3032
  %bf.load = load i32, i32* %0, align 8, !dbg !3032
  %bf.clear = and i32 %bf.load, 255, !dbg !3032
  %cmp = icmp eq i32 %bf.clear, 22, !dbg !3034
  br i1 %cmp, label %if.end, label %if.then, !dbg !3035

if.then:                                          ; preds = %entry
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %token, i64 0, i32 2, !dbg !3036
  %1 = load i32, i32* %location, align 8, !dbg !3036
  store i32 %1, i32* @input_location, align 4, !dbg !3038
  br label %if.end, !dbg !3039

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !3040
}

declare dso_local void @c_parse_error(i8*, i32, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 %type, i8* %msgid) unnamed_addr #5 !dbg !3041 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3045, metadata !DIExpression()), !dbg !3048
  call void @llvm.dbg.value(metadata i32 %type, metadata !3046, metadata !DIExpression()), !dbg !3048
  call void @llvm.dbg.value(metadata i8* %msgid, metadata !3047, metadata !DIExpression()), !dbg !3048
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 %type) #7, !dbg !3049
  %tobool = icmp eq i8 %call, 0, !dbg !3049
  br i1 %tobool, label %if.else, label %if.then, !dbg !3051

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3052
  br label %return, !dbg !3054

if.else:                                          ; preds = %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* %msgid) #7, !dbg !3055
  br label %return, !dbg !3057

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3058
  ret i8 %retval.0, !dbg !3059
}

declare dso_local zeroext i8 @pedwarn(i32, i32, i8*, ...) local_unnamed_addr #2

declare dso_local void @_obstack_newchunk(%struct.obstack*, i32) local_unnamed_addr #2

declare dso_local void @mark_valid_location_for_stdc_pragma(i8 zeroext) local_unnamed_addr #2

declare dso_local void @ggc_collect() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_external_declaration(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3060 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3062, metadata !DIExpression()), !dbg !3066
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3067
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !3068
  %bf.load = load i32, i32* %0, align 8, !dbg !3068
  %trunc = trunc i32 %bf.load to i8, !dbg !3069
  switch i8 %trunc, label %decl_or_fndef [
    i8 74, label %sw.bb
    i8 43, label %sw.bb36
    i8 70, label %sw.bb39
    i8 4, label %sw.bb41
    i8 5, label %sw.bb41
  ], !dbg !3069

sw.bb:                                            ; preds = %entry
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3070
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !3071
  %bf.load2 = load i32, i32* %1, align 8, !dbg !3071
  %bf.lshr = lshr i32 %bf.load2, 16, !dbg !3071
  %trunc1 = trunc i32 %bf.lshr to i8, !dbg !3072
  switch i8 %trunc1, label %decl_or_fndef [
    i8 54, label %sw.bb4
    i8 49, label %sw.bb6
    i8 -122, label %sw.bb7
    i8 -121, label %sw.bb7
    i8 71, label %sw.bb8
    i8 122, label %sw.bb15
    i8 127, label %sw.bb22
    i8 120, label %sw.bb29
  ], !dbg !3072

sw.bb4:                                           ; preds = %sw.bb
  %call5 = tail call fastcc i32 @disable_extension_diagnostics() #7, !dbg !3073
  call void @llvm.dbg.value(metadata i32 %call5, metadata !3063, metadata !DIExpression()), !dbg !3066
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3075
  tail call fastcc void @c_parser_external_declaration(%struct.c_parser* %parser) #7, !dbg !3076
  tail call fastcc void @restore_extension_diagnostics(i32 %call5) #7, !dbg !3077
  ret void, !dbg !3078

sw.bb6:                                           ; preds = %sw.bb
  tail call fastcc void @c_parser_asm_definition(%struct.c_parser* %parser) #7, !dbg !3079
  br label %sw.epilog45, !dbg !3080

sw.bb7:                                           ; preds = %sw.bb, %sw.bb
  %2 = load i32, i32* @c_language, align 4, !dbg !3081
  %and = and i32 %2, 1, !dbg !3081
  %cmp = icmp eq i32 %and, 0, !dbg !3081
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !3081

cond.true:                                        ; preds = %sw.bb7
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1056, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3081
  br label %cond.end, !dbg !3081

cond.end:                                         ; preds = %sw.bb7, %cond.true
  tail call fastcc void @c_parser_objc_class_definition(%struct.c_parser* %parser) #7, !dbg !3082
  br label %sw.epilog45, !dbg !3083

sw.bb8:                                           ; preds = %sw.bb
  %3 = load i32, i32* @c_language, align 4, !dbg !3084
  %and9 = and i32 %3, 1, !dbg !3084
  %cmp10 = icmp eq i32 %and9, 0, !dbg !3084
  br i1 %cmp10, label %cond.true11, label %cond.end13, !dbg !3084

cond.true11:                                      ; preds = %sw.bb8
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1060, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3084
  br label %cond.end13, !dbg !3084

cond.end13:                                       ; preds = %sw.bb8, %cond.true11
  tail call fastcc void @c_parser_objc_class_declaration(%struct.c_parser* %parser) #7, !dbg !3085
  br label %sw.epilog45, !dbg !3086

sw.bb15:                                          ; preds = %sw.bb
  %4 = load i32, i32* @c_language, align 4, !dbg !3087
  %and16 = and i32 %4, 1, !dbg !3087
  %cmp17 = icmp eq i32 %and16, 0, !dbg !3087
  br i1 %cmp17, label %cond.true18, label %cond.end20, !dbg !3087

cond.true18:                                      ; preds = %sw.bb15
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1064, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3087
  br label %cond.end20, !dbg !3087

cond.end20:                                       ; preds = %sw.bb15, %cond.true18
  tail call fastcc void @c_parser_objc_alias_declaration(%struct.c_parser* %parser) #7, !dbg !3088
  br label %sw.epilog45, !dbg !3089

sw.bb22:                                          ; preds = %sw.bb
  %5 = load i32, i32* @c_language, align 4, !dbg !3090
  %and23 = and i32 %5, 1, !dbg !3090
  %cmp24 = icmp eq i32 %and23, 0, !dbg !3090
  br i1 %cmp24, label %cond.true25, label %cond.end27, !dbg !3090

cond.true25:                                      ; preds = %sw.bb22
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1068, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3090
  br label %cond.end27, !dbg !3090

cond.end27:                                       ; preds = %sw.bb22, %cond.true25
  tail call fastcc void @c_parser_objc_protocol_definition(%struct.c_parser* %parser) #7, !dbg !3091
  br label %sw.epilog45, !dbg !3092

sw.bb29:                                          ; preds = %sw.bb
  %6 = load i32, i32* @c_language, align 4, !dbg !3093
  %and30 = and i32 %6, 1, !dbg !3093
  %cmp31 = icmp eq i32 %and30, 0, !dbg !3093
  br i1 %cmp31, label %cond.true32, label %cond.end34, !dbg !3093

cond.true32:                                      ; preds = %sw.bb29
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1072, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3093
  br label %cond.end34, !dbg !3093

cond.end34:                                       ; preds = %sw.bb29, %cond.true32
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3094
  tail call void @objc_finish_implementation() #6, !dbg !3095
  br label %sw.epilog45, !dbg !3096

sw.bb36:                                          ; preds = %entry
  %call37 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3097
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call37, i64 0, i32 2, !dbg !3098
  %7 = load i32, i32* %location, align 8, !dbg !3098
  %call38 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %7, i32 834, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3099
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3100
  br label %sw.epilog45, !dbg !3101

sw.bb39:                                          ; preds = %entry
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext 1) #6, !dbg !3102
  %call40 = tail call fastcc zeroext i8 @c_parser_pragma(%struct.c_parser* %parser, i32 0) #7, !dbg !3103
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext 0) #6, !dbg !3104
  br label %sw.epilog45, !dbg !3105

sw.bb41:                                          ; preds = %entry, %entry
  %8 = load i32, i32* @c_language, align 4, !dbg !3106
  %and42 = and i32 %8, 1, !dbg !3106
  %cmp43 = icmp eq i32 %and42, 0, !dbg !3106
  br i1 %cmp43, label %decl_or_fndef, label %if.then, !dbg !3108

if.then:                                          ; preds = %sw.bb41
  tail call fastcc void @c_parser_objc_method_definition(%struct.c_parser* %parser) #7, !dbg !3109
  br label %sw.epilog45, !dbg !3111

decl_or_fndef:                                    ; preds = %sw.bb41, %entry, %sw.bb
  call void @llvm.dbg.label(metadata !3064), !dbg !3112
  tail call fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext 1, i8 zeroext 1, i8 zeroext 0, i8 zeroext 1) #7, !dbg !3113
  br label %sw.epilog45, !dbg !3114

sw.epilog45:                                      ; preds = %sw.bb6, %cond.end, %cond.end13, %cond.end20, %cond.end27, %cond.end34, %decl_or_fndef, %if.then, %sw.bb39, %sw.bb36
  ret void, !dbg !3078
}

declare dso_local void @obstack_free(%struct.obstack*, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 %type) unnamed_addr #0 !dbg !3115 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3117, metadata !DIExpression()), !dbg !3119
  call void @llvm.dbg.value(metadata i32 %type, metadata !3118, metadata !DIExpression()), !dbg !3119
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 %type) #7, !dbg !3120
  %tobool = icmp eq i8 %call, 0, !dbg !3121
  %conv = zext i1 %tobool to i8, !dbg !3121
  ret i8 %conv, !dbg !3122
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @disable_extension_diagnostics() unnamed_addr #0 !dbg !3123 {
entry:
  %0 = load i32, i32* @pedantic, align 4, !dbg !3126
  %1 = load i32, i32* @warn_pointer_arith, align 4, !dbg !3127
  %shl = shl i32 %1, 1, !dbg !3128
  %or = or i32 %0, %shl, !dbg !3129
  %2 = load i32, i32* @warn_traditional, align 4, !dbg !3130
  %shl1 = shl i32 %2, 2, !dbg !3131
  %or2 = or i32 %or, %shl1, !dbg !3132
  %3 = load i32, i32* @flag_iso, align 4, !dbg !3133
  %shl3 = shl i32 %3, 3, !dbg !3134
  %or4 = or i32 %or2, %shl3, !dbg !3135
  %4 = load i32, i32* @warn_long_long, align 4, !dbg !3136
  %shl5 = shl i32 %4, 4, !dbg !3137
  %or6 = or i32 %or4, %shl5, !dbg !3138
  %5 = load i32, i32* @warn_cxx_compat, align 4, !dbg !3139
  %shl7 = shl i32 %5, 5, !dbg !3140
  %or8 = or i32 %or6, %shl7, !dbg !3141
  call void @llvm.dbg.value(metadata i32 %or8, metadata !3125, metadata !DIExpression()), !dbg !3142
  store i32 0, i32* @pedantic, align 4, !dbg !3143
  %6 = load %struct.cpp_options*, %struct.cpp_options** @cpp_opts, align 8, !dbg !3144
  %pedantic = getelementptr inbounds %struct.cpp_options, %struct.cpp_options* %6, i64 0, i32 31, !dbg !3145
  store i8 0, i8* %pedantic, align 1, !dbg !3146
  store i32 0, i32* @warn_pointer_arith, align 4, !dbg !3147
  store i32 0, i32* @warn_traditional, align 4, !dbg !3148
  %warn_traditional = getelementptr inbounds %struct.cpp_options, %struct.cpp_options* %6, i64 0, i32 17, !dbg !3149
  store i8 0, i8* %warn_traditional, align 1, !dbg !3150
  store i32 0, i32* @flag_iso, align 4, !dbg !3151
  store i32 0, i32* @warn_long_long, align 4, !dbg !3152
  %warn_long_long = getelementptr inbounds %struct.cpp_options, %struct.cpp_options* %6, i64 0, i32 18, !dbg !3153
  store i8 0, i8* %warn_long_long, align 8, !dbg !3154
  store i32 0, i32* @warn_cxx_compat, align 4, !dbg !3155
  ret i32 %or8, !dbg !3156
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @restore_extension_diagnostics(i32 %flags) unnamed_addr #0 !dbg !3157 {
entry:
  call void @llvm.dbg.value(metadata i32 %flags, metadata !3161, metadata !DIExpression()), !dbg !3162
  %and = and i32 %flags, 1, !dbg !3163
  store i32 %and, i32* @pedantic, align 4, !dbg !3164
  %conv = trunc i32 %and to i8, !dbg !3165
  %0 = load %struct.cpp_options*, %struct.cpp_options** @cpp_opts, align 8, !dbg !3166
  %pedantic = getelementptr inbounds %struct.cpp_options, %struct.cpp_options* %0, i64 0, i32 31, !dbg !3167
  store i8 %conv, i8* %pedantic, align 1, !dbg !3168
  %shr1 = lshr i32 %flags, 1, !dbg !3169
  %and1 = and i32 %shr1, 1, !dbg !3170
  store i32 %and1, i32* @warn_pointer_arith, align 4, !dbg !3171
  %shr22 = lshr i32 %flags, 2, !dbg !3172
  %and3 = and i32 %shr22, 1, !dbg !3173
  store i32 %and3, i32* @warn_traditional, align 4, !dbg !3174
  %conv4 = trunc i32 %and3 to i8, !dbg !3175
  %warn_traditional = getelementptr inbounds %struct.cpp_options, %struct.cpp_options* %0, i64 0, i32 17, !dbg !3176
  store i8 %conv4, i8* %warn_traditional, align 1, !dbg !3177
  %shr53 = lshr i32 %flags, 3, !dbg !3178
  %and6 = and i32 %shr53, 1, !dbg !3179
  store i32 %and6, i32* @flag_iso, align 4, !dbg !3180
  %shr74 = lshr i32 %flags, 4, !dbg !3181
  %and8 = and i32 %shr74, 1, !dbg !3182
  store i32 %and8, i32* @warn_long_long, align 4, !dbg !3183
  %conv9 = trunc i32 %and8 to i8, !dbg !3184
  %warn_long_long = getelementptr inbounds %struct.cpp_options, %struct.cpp_options* %0, i64 0, i32 18, !dbg !3185
  store i8 %conv9, i8* %warn_long_long, align 8, !dbg !3186
  %shr105 = lshr i32 %flags, 5, !dbg !3187
  %and11 = and i32 %shr105, 1, !dbg !3188
  store i32 %and11, i32* @warn_cxx_compat, align 4, !dbg !3189
  ret void, !dbg !3190
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_asm_definition(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3191 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3193, metadata !DIExpression()), !dbg !3195
  %call = tail call fastcc %union.tree_node* @c_parser_simple_asm_expr(%struct.c_parser* %parser) #7, !dbg !3196
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !3194, metadata !DIExpression()), !dbg !3195
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !3197
  br i1 %tobool, label %if.end, label %if.then, !dbg !3199

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.cgraph_asm_node* @cgraph_add_asm_node(%union.tree_node* nonnull %call) #6, !dbg !3200
  br label %if.end, !dbg !3200

if.end:                                           ; preds = %entry, %if.then
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !3201
  ret void, !dbg !3202
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_class_definition(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3203 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3205, metadata !DIExpression()), !dbg !3216
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 134) #7, !dbg !3217
  %tobool = icmp eq i8 %call, 0, !dbg !3217
  br i1 %tobool, label %if.else, label %if.end5, !dbg !3219

if.else:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 135) #7, !dbg !3220
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3220
  br i1 %tobool2, label %if.else4, label %if.end5, !dbg !3222

if.else4:                                         ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3223
  br label %if.end5

if.end5:                                          ; preds = %if.else, %entry, %if.else4
  %iface_p.1 = phi i8 [ 1, %entry ], [ 0, %if.else ], [ 0, %if.else4 ], !dbg !3224
  call void @llvm.dbg.value(metadata i8 %iface_p.1, metadata !3206, metadata !DIExpression()), !dbg !3216
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3225
  %call6 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !3226
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3226
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !3228

if.then8:                                         ; preds = %if.end5
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3229
  br label %cleanup.cont, !dbg !3231

if.end9:                                          ; preds = %if.end5
  %call10 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3232
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call10, i64 0, i32 1, !dbg !3233
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3233
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3207, metadata !DIExpression()), !dbg !3216
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3234
  %call11 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !3235
  %tobool12 = icmp eq i8 %call11, 0, !dbg !3235
  br i1 %tobool12, label %if.end30, label %if.then13, !dbg !3236

if.then13:                                        ; preds = %if.end9
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3212, metadata !DIExpression()), !dbg !3237
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3238
  %call14 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !3239
  %tobool15 = icmp eq i8 %call14, 0, !dbg !3239
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !3241

if.then16:                                        ; preds = %if.then13
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3242
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !3244
  br label %cleanup.cont, !dbg !3245

if.end17:                                         ; preds = %if.then13
  %call18 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3246
  %value19 = getelementptr inbounds %struct.c_token, %struct.c_token* %call18, i64 0, i32 1, !dbg !3247
  %1 = load %union.tree_node*, %union.tree_node** %value19, align 8, !dbg !3247
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3209, metadata !DIExpression()), !dbg !3237
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3248
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !3249
  %tobool20 = icmp eq i8 %iface_p.1, 0, !dbg !3250
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3252

if.then21:                                        ; preds = %if.end17
  tail call void @objc_start_category_implementation(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !3253
  br label %cleanup.cont, !dbg !3255

if.end22:                                         ; preds = %if.end17
  %call23 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 3) #7, !dbg !3256
  %tobool24 = icmp eq i8 %call23, 0, !dbg !3256
  br i1 %tobool24, label %if.end27, label %if.then25, !dbg !3258

if.then25:                                        ; preds = %if.end22
  %call26 = tail call fastcc %union.tree_node* @c_parser_objc_protocol_refs(%struct.c_parser* %parser) #7, !dbg !3259
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !3212, metadata !DIExpression()), !dbg !3237
  br label %if.end27, !dbg !3260

if.end27:                                         ; preds = %if.end22, %if.then25
  %proto.0 = phi %union.tree_node* [ %call26, %if.then25 ], [ null, %if.end22 ], !dbg !3237
  call void @llvm.dbg.value(metadata %union.tree_node* %proto.0, metadata !3212, metadata !DIExpression()), !dbg !3237
  tail call void @objc_start_category_interface(%union.tree_node* %0, %union.tree_node* %1, %union.tree_node* %proto.0) #6, !dbg !3261
  tail call fastcc void @c_parser_objc_methodprotolist(%struct.c_parser* %parser) #7, !dbg !3262
  %call28 = tail call fastcc zeroext i8 @c_parser_require_keyword(%struct.c_parser* %parser, i32 120, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #7, !dbg !3263
  tail call void @objc_finish_interface() #6, !dbg !3264
  br label %cleanup.cont, !dbg !3265

if.end30:                                         ; preds = %if.end9
  %call31 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !3266
  %tobool32 = icmp eq i8 %call31, 0, !dbg !3266
  br i1 %tobool32, label %if.end41, label %if.then33, !dbg !3268

if.then33:                                        ; preds = %if.end30
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3269
  %call34 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !3271
  %tobool35 = icmp eq i8 %call34, 0, !dbg !3271
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !3273

if.then36:                                        ; preds = %if.then33
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3274
  br label %cleanup.cont, !dbg !3276

if.end37:                                         ; preds = %if.then33
  %call38 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3277
  %value39 = getelementptr inbounds %struct.c_token, %struct.c_token* %call38, i64 0, i32 1, !dbg !3278
  %2 = load %union.tree_node*, %union.tree_node** %value39, align 8, !dbg !3278
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3208, metadata !DIExpression()), !dbg !3216
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3279
  br label %if.end41, !dbg !3280

if.end41:                                         ; preds = %if.end30, %if.end37
  %superclass.0 = phi %union.tree_node* [ %2, %if.end37 ], [ null, %if.end30 ], !dbg !3281
  call void @llvm.dbg.value(metadata %union.tree_node* %superclass.0, metadata !3208, metadata !DIExpression()), !dbg !3216
  %tobool42 = icmp eq i8 %iface_p.1, 0, !dbg !3282
  br i1 %tobool42, label %if.else50, label %if.then43, !dbg !3283

if.then43:                                        ; preds = %if.end41
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3213, metadata !DIExpression()), !dbg !3284
  %call45 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 3) #7, !dbg !3285
  %tobool46 = icmp eq i8 %call45, 0, !dbg !3285
  br i1 %tobool46, label %if.end49, label %if.then47, !dbg !3287

if.then47:                                        ; preds = %if.then43
  %call48 = tail call fastcc %union.tree_node* @c_parser_objc_protocol_refs(%struct.c_parser* %parser) #7, !dbg !3288
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !3213, metadata !DIExpression()), !dbg !3284
  br label %if.end49, !dbg !3289

if.end49:                                         ; preds = %if.then43, %if.then47
  %proto44.0 = phi %union.tree_node* [ %call48, %if.then47 ], [ null, %if.then43 ], !dbg !3284
  call void @llvm.dbg.value(metadata %union.tree_node* %proto44.0, metadata !3213, metadata !DIExpression()), !dbg !3284
  tail call void @objc_start_class_interface(%union.tree_node* %0, %union.tree_node* %superclass.0, %union.tree_node* %proto44.0) #6, !dbg !3290
  br label %if.end51, !dbg !3291

if.else50:                                        ; preds = %if.end41
  tail call void @objc_start_class_implementation(%union.tree_node* %0, %union.tree_node* %superclass.0) #6, !dbg !3292
  br label %if.end51

if.end51:                                         ; preds = %if.else50, %if.end49
  %call52 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !3293
  %tobool53 = icmp eq i8 %call52, 0, !dbg !3293
  br i1 %tobool53, label %if.end55, label %if.then54, !dbg !3295

if.then54:                                        ; preds = %if.end51
  tail call fastcc void @c_parser_objc_class_instance_variables(%struct.c_parser* %parser) #7, !dbg !3296
  br label %if.end55, !dbg !3296

if.end55:                                         ; preds = %if.end51, %if.then54
  br i1 %tobool42, label %if.else59, label %if.then57, !dbg !3297

if.then57:                                        ; preds = %if.end55
  tail call void @objc_continue_interface() #6, !dbg !3298
  tail call fastcc void @c_parser_objc_methodprotolist(%struct.c_parser* %parser) #7, !dbg !3301
  %call58 = tail call fastcc zeroext i8 @c_parser_require_keyword(%struct.c_parser* %parser, i32 120, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #7, !dbg !3302
  tail call void @objc_finish_interface() #6, !dbg !3303
  br label %cleanup.cont, !dbg !3304

if.else59:                                        ; preds = %if.end55
  tail call void @objc_continue_implementation() #6, !dbg !3305
  br label %cleanup.cont, !dbg !3307

cleanup.cont:                                     ; preds = %if.then8, %if.then36, %if.else59, %if.then57, %if.end27, %if.then21, %if.then16
  ret void, !dbg !3304
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_class_declaration(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3308 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3310, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3311, metadata !DIExpression()), !dbg !3314
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 71) #7, !dbg !3315
  %tobool = icmp eq i8 %call, 0, !dbg !3315
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3315

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6278, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3315
  br label %cond.end, !dbg !3315

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3316
  br label %while.cond, !dbg !3317

while.cond:                                       ; preds = %cleanup, %cond.end
  %list.0 = phi %union.tree_node* [ null, %cond.end ], [ %list.1, %cleanup ], !dbg !3318
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !3311, metadata !DIExpression()), !dbg !3314
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !3319
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3319
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3321

if.then:                                          ; preds = %while.cond
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3322
  br label %cleanup, !dbg !3324

if.end:                                           ; preds = %while.cond
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3325
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 1, !dbg !3326
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3326
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3312, metadata !DIExpression()), !dbg !3327
  %call4 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %0) #6, !dbg !3328
  %call5 = tail call %union.tree_node* @chainon(%union.tree_node* %list.0, %union.tree_node* %call4) #6, !dbg !3329
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3311, metadata !DIExpression()), !dbg !3314
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3330
  %call6 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !3331
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3331
  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !3333

if.then8:                                         ; preds = %if.end
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3334
  br label %cleanup, !dbg !3335

cleanup:                                          ; preds = %if.end, %if.then8, %if.then
  %list.1 = phi %union.tree_node* [ %list.0, %if.then ], [ %call5, %if.then8 ], [ %call5, %if.end ], !dbg !3314
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %if.then8 ], [ false, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1, metadata !3311, metadata !DIExpression()), !dbg !3314
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !3336

while.end:                                        ; preds = %cleanup
  %list.1.lcssa = phi %union.tree_node* [ %list.1, %cleanup ], !dbg !3314
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa, metadata !3311, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa, metadata !3311, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa, metadata !3311, metadata !DIExpression()), !dbg !3314
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !3337
  tail call void @objc_declare_class(%union.tree_node* %list.1.lcssa) #6, !dbg !3338
  ret void, !dbg !3339
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_alias_declaration(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3340 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3342, metadata !DIExpression()), !dbg !3345
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 122) #7, !dbg !3346
  %tobool = icmp eq i8 %call, 0, !dbg !3346
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3346

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6312, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3346
  br label %cond.end, !dbg !3346

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3347
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !3348
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3348
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3350

if.then:                                          ; preds = %cond.end
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3351
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* null) #7, !dbg !3353
  br label %cleanup.cont, !dbg !3354

if.end:                                           ; preds = %cond.end
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3355
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 1, !dbg !3356
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3356
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3343, metadata !DIExpression()), !dbg !3345
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3357
  %call4 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !3358
  %tobool5 = icmp eq i8 %call4, 0, !dbg !3358
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !3360

if.then6:                                         ; preds = %if.end
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3361
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* null) #7, !dbg !3363
  br label %cleanup.cont, !dbg !3364

if.end7:                                          ; preds = %if.end
  %call8 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3365
  %value9 = getelementptr inbounds %struct.c_token, %struct.c_token* %call8, i64 0, i32 1, !dbg !3366
  %1 = load %union.tree_node*, %union.tree_node** %value9, align 8, !dbg !3366
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3344, metadata !DIExpression()), !dbg !3345
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3367
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !3368
  tail call void @objc_declare_alias(%union.tree_node* %0, %union.tree_node* %1) #6, !dbg !3369
  br label %cleanup.cont, !dbg !3370

cleanup.cont:                                     ; preds = %if.then, %if.then6, %if.end7
  ret void, !dbg !3370
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_protocol_definition(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3371 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3373, metadata !DIExpression()), !dbg !3382
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 127) #7, !dbg !3383
  %tobool = icmp eq i8 %call, 0, !dbg !3383
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3383

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6348, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3383
  br label %cond.end, !dbg !3383

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3384
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !3385
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3385
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3387

if.then:                                          ; preds = %cond.end
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3388
  br label %if.end35, !dbg !3390

if.end:                                           ; preds = %cond.end
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !3391
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 0, !dbg !3392
  %bf.load = load i32, i32* %0, align 8, !dbg !3392
  %bf.clear = and i32 %bf.load, 255, !dbg !3392
  %cmp = icmp eq i32 %bf.clear, 19, !dbg !3393
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !3394

lor.lhs.false:                                    ; preds = %if.end
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !3395
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 0, !dbg !3396
  %bf.load5 = load i32, i32* %1, align 8, !dbg !3396
  %bf.clear6 = and i32 %bf.load5, 255, !dbg !3396
  %cmp7 = icmp eq i32 %bf.clear6, 43, !dbg !3397
  br i1 %cmp7, label %if.then8, label %if.else20, !dbg !3398

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3374, metadata !DIExpression()), !dbg !3399
  br label %while.cond, !dbg !3400

while.cond:                                       ; preds = %cleanup, %if.then8
  %list.0 = phi %union.tree_node* [ null, %if.then8 ], [ %list.1, %cleanup ], !dbg !3401
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !3374, metadata !DIExpression()), !dbg !3399
  %call9 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !3402
  %tobool10 = icmp eq i8 %call9, 0, !dbg !3402
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !3404

if.then11:                                        ; preds = %while.cond
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3405
  br label %cleanup, !dbg !3407

if.end12:                                         ; preds = %while.cond
  %call13 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3408
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call13, i64 0, i32 1, !dbg !3409
  %2 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3409
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !3377, metadata !DIExpression()), !dbg !3410
  %call14 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %2) #6, !dbg !3411
  %call15 = tail call %union.tree_node* @chainon(%union.tree_node* %list.0, %union.tree_node* %call14) #6, !dbg !3412
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !3374, metadata !DIExpression()), !dbg !3399
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3413
  %call16 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !3414
  %tobool17 = icmp eq i8 %call16, 0, !dbg !3414
  br i1 %tobool17, label %cleanup, label %if.then18, !dbg !3416

if.then18:                                        ; preds = %if.end12
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3417
  br label %cleanup, !dbg !3418

cleanup:                                          ; preds = %if.end12, %if.then18, %if.then11
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then11 ], [ true, %if.then18 ], [ false, %if.end12 ]
  %list.1 = phi %union.tree_node* [ %list.0, %if.then11 ], [ %call15, %if.then18 ], [ %call15, %if.end12 ], !dbg !3399
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1, metadata !3374, metadata !DIExpression()), !dbg !3399
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !3419

while.end:                                        ; preds = %cleanup
  %list.1.lcssa = phi %union.tree_node* [ %list.1, %cleanup ], !dbg !3399
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa, metadata !3374, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa, metadata !3374, metadata !DIExpression()), !dbg !3399
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa, metadata !3374, metadata !DIExpression()), !dbg !3399
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !3420
  tail call void @objc_declare_protocols(%union.tree_node* %list.1.lcssa) #6, !dbg !3421
  br label %if.end35, !dbg !3422

if.else20:                                        ; preds = %lor.lhs.false
  %call22 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3423
  %value23 = getelementptr inbounds %struct.c_token, %struct.c_token* %call22, i64 0, i32 1, !dbg !3424
  %3 = load %union.tree_node*, %union.tree_node** %value23, align 8, !dbg !3424
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !3379, metadata !DIExpression()), !dbg !3425
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3381, metadata !DIExpression()), !dbg !3425
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3426
  %call24 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 3) #7, !dbg !3427
  %tobool25 = icmp eq i8 %call24, 0, !dbg !3427
  br i1 %tobool25, label %if.end28, label %if.then26, !dbg !3429

if.then26:                                        ; preds = %if.else20
  %call27 = tail call fastcc %union.tree_node* @c_parser_objc_protocol_refs(%struct.c_parser* %parser) #7, !dbg !3430
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !3381, metadata !DIExpression()), !dbg !3425
  br label %if.end28, !dbg !3431

if.end28:                                         ; preds = %if.else20, %if.then26
  %proto.0 = phi %union.tree_node* [ %call27, %if.then26 ], [ null, %if.else20 ], !dbg !3425
  call void @llvm.dbg.value(metadata %union.tree_node* %proto.0, metadata !3381, metadata !DIExpression()), !dbg !3425
  %objc_pq_context = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !3432
  %bf.load29 = load i8, i8* %objc_pq_context, align 2, !dbg !3433
  %bf.set = or i8 %bf.load29, 16, !dbg !3433
  store i8 %bf.set, i8* %objc_pq_context, align 2, !dbg !3433
  tail call void @objc_start_protocol(%union.tree_node* %3, %union.tree_node* %proto.0) #6, !dbg !3434
  tail call fastcc void @c_parser_objc_methodprotolist(%struct.c_parser* %parser) #7, !dbg !3435
  %call31 = tail call fastcc zeroext i8 @c_parser_require_keyword(%struct.c_parser* %parser, i32 120, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0)) #7, !dbg !3436
  %bf.load33 = load i8, i8* %objc_pq_context, align 2, !dbg !3437
  %bf.clear34 = and i8 %bf.load33, -17, !dbg !3437
  store i8 %bf.clear34, i8* %objc_pq_context, align 2, !dbg !3437
  tail call void @objc_finish_interface() #6, !dbg !3438
  br label %if.end35

if.end35:                                         ; preds = %if.then, %if.end28, %while.end
  ret void, !dbg !3439
}

declare dso_local void @objc_finish_implementation() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @c_parser_pragma(%struct.c_parser* %parser, i32 %context) unnamed_addr #5 !dbg !3440 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3444, metadata !DIExpression()), !dbg !3453
  call void @llvm.dbg.value(metadata i32 %context, metadata !3445, metadata !DIExpression()), !dbg !3453
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3454
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !3455
  %bf.load = load i32, i32* %0, align 8, !dbg !3455
  %bf.lshr = lshr i32 %bf.load, 24, !dbg !3455
  call void @llvm.dbg.value(metadata i32 %bf.lshr, metadata !3446, metadata !DIExpression()), !dbg !3453
  %trunc = trunc i32 %bf.lshr to i8, !dbg !3456
  switch i8 %trunc, label %sw.default [
    i8 0, label %cond.true
    i8 2, label %sw.bb
    i8 4, label %sw.bb5
    i8 15, label %sw.bb12
    i8 16, label %sw.bb19
    i8 11, label %sw.bb20
    i8 17, label %sw.bb22
  ], !dbg !3456

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6980, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3456
  br label %sw.default, !dbg !3457

sw.bb:                                            ; preds = %entry
  switch i32 %context, label %bad_stmt [
    i32 2, label %if.end4
    i32 1, label %if.then3
  ], !dbg !3458

if.then3:                                         ; preds = %sw.bb
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.68, i64 0, i64 0)) #7, !dbg !3459
  br label %bad_stmt, !dbg !3459

if.end4:                                          ; preds = %sw.bb
  tail call fastcc void @c_parser_omp_barrier(%struct.c_parser* %parser) #7, !dbg !3463
  br label %cleanup, !dbg !3464

sw.bb5:                                           ; preds = %entry
  switch i32 %context, label %bad_stmt [
    i32 2, label %if.end11
    i32 1, label %if.then9
  ], !dbg !3465

if.then9:                                         ; preds = %sw.bb5
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.69, i64 0, i64 0)) #7, !dbg !3466
  br label %bad_stmt, !dbg !3466

if.end11:                                         ; preds = %sw.bb5
  tail call fastcc void @c_parser_omp_flush(%struct.c_parser* %parser) #7, !dbg !3470
  br label %cleanup, !dbg !3471

sw.bb12:                                          ; preds = %entry
  switch i32 %context, label %bad_stmt [
    i32 2, label %if.end18
    i32 1, label %if.then16
  ], !dbg !3472

if.then16:                                        ; preds = %sw.bb12
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.70, i64 0, i64 0)) #7, !dbg !3473
  br label %bad_stmt, !dbg !3473

if.end18:                                         ; preds = %sw.bb12
  tail call fastcc void @c_parser_omp_taskwait(%struct.c_parser* %parser) #7, !dbg !3477
  br label %cleanup, !dbg !3478

sw.bb19:                                          ; preds = %entry
  tail call fastcc void @c_parser_omp_threadprivate(%struct.c_parser* %parser) #7, !dbg !3479
  br label %cleanup, !dbg !3480

sw.bb20:                                          ; preds = %entry
  %call21 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3481
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call21, i64 0, i32 2, !dbg !3482
  %1 = load i32, i32* %location, align 8, !dbg !3482
  tail call void (i32, i8*, ...) @error_at(i32 %1, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.71, i64 0, i64 0)) #6, !dbg !3483
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 71, i8* null) #7, !dbg !3484
  br label %cleanup, !dbg !3485

sw.bb22:                                          ; preds = %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.72, i64 0, i64 0)) #7, !dbg !3486
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 71, i8* null) #7, !dbg !3487
  br label %cleanup, !dbg !3488

sw.default:                                       ; preds = %cond.true, %entry
  %cmp23 = icmp ult i32 %bf.load, 301989888, !dbg !3489
  br i1 %cmp23, label %if.then24, label %sw.epilog, !dbg !3490

if.then24:                                        ; preds = %sw.default
  %cmp25 = icmp eq i32 %context, 0, !dbg !3491
  br i1 %cmp25, label %bad_stmt, label %if.end27, !dbg !3492

bad_stmt:                                         ; preds = %if.then24, %if.then16, %sw.bb12, %if.then9, %sw.bb5, %if.then3, %sw.bb
  call void @llvm.dbg.label(metadata !3447), !dbg !3493
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #7, !dbg !3494
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 71, i8* null) #7, !dbg !3495
  br label %cleanup, !dbg !3496

if.end27:                                         ; preds = %if.then24
  tail call fastcc void @c_parser_omp_construct(%struct.c_parser* %parser) #7, !dbg !3497
  br label %cleanup, !dbg !3498

sw.epilog:                                        ; preds = %sw.default
  tail call fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) #7, !dbg !3499
  tail call void @c_invoke_pragma_handler(i32 %bf.lshr) #6, !dbg !3500
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !3501
  %bf.load29 = load i8, i8* %error, align 2, !dbg !3502
  %bf.set = or i8 %bf.load29, 1, !dbg !3502
  store i8 %bf.set, i8* %error, align 2, !dbg !3502
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !3503
  br label %cleanup, !dbg !3504

cleanup:                                          ; preds = %sw.epilog, %if.end27, %bad_stmt, %sw.bb22, %sw.bb20, %sw.bb19, %if.end18, %if.end11, %if.end4
  %retval.0 = phi i8 [ 0, %bad_stmt ], [ 1, %if.end27 ], [ 0, %sw.epilog ], [ 0, %sw.bb22 ], [ 0, %sw.bb20 ], [ 0, %sw.bb19 ], [ 0, %if.end18 ], [ 0, %if.end11 ], [ 0, %if.end4 ], !dbg !3453
  ret i8 %retval.0, !dbg !3505
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_method_definition(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3506 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3508, metadata !DIExpression()), !dbg !3511
  %call = tail call fastcc i32 @c_parser_objc_method_type(%struct.c_parser* %parser) #7, !dbg !3512
  call void @llvm.dbg.value(metadata i32 %call, metadata !3509, metadata !DIExpression()), !dbg !3511
  tail call void @objc_set_method_type(i32 %call) #6, !dbg !3513
  %objc_pq_context = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !3514
  %bf.load = load i8, i8* %objc_pq_context, align 2, !dbg !3515
  %bf.set = or i8 %bf.load, 16, !dbg !3515
  store i8 %bf.set, i8* %objc_pq_context, align 2, !dbg !3515
  %call1 = tail call fastcc %union.tree_node* @c_parser_objc_method_decl(%struct.c_parser* %parser) #7, !dbg !3516
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !3510, metadata !DIExpression()), !dbg !3511
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !3517
  %tobool = icmp eq i8 %call2, 0, !dbg !3517
  br i1 %tobool, label %if.end, label %if.then, !dbg !3519

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3520
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3522
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 2, !dbg !3523
  %0 = load i32, i32* %location, align 8, !dbg !3523
  %call4 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %0, i32 834, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.125, i64 0, i64 0)) #6, !dbg !3524
  br label %if.end, !dbg !3525

if.end:                                           ; preds = %entry, %if.then
  %call5 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !3526
  %tobool6 = icmp eq i8 %call5, 0, !dbg !3526
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !3528

if.then7:                                         ; preds = %if.end
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)) #7, !dbg !3529
  br label %cleanup.cont, !dbg !3531

if.end8:                                          ; preds = %if.end
  %bf.load10 = load i8, i8* %objc_pq_context, align 2, !dbg !3532
  %bf.clear11 = and i8 %bf.load10, -17, !dbg !3532
  store i8 %bf.clear11, i8* %objc_pq_context, align 2, !dbg !3532
  tail call void @objc_start_method_definition(%union.tree_node* %call1) #6, !dbg !3533
  %call12 = tail call fastcc %union.tree_node* @c_parser_compound_statement(%struct.c_parser* %parser) #7, !dbg !3534
  %call13 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call12) #6, !dbg !3535
  %1 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3536
  tail call void @objc_finish_method_definition(%union.tree_node* %1) #6, !dbg !3537
  br label %cleanup.cont, !dbg !3538

cleanup.cont:                                     ; preds = %if.then7, %if.end8
  ret void, !dbg !3538
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext %fndef_ok, i8 zeroext %empty_ok, i8 zeroext %nested, i8 zeroext %start_attr_ok) unnamed_addr #5 !dbg !3539 {
entry:
  %dummy = alloca i8, align 1
  %init = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3543, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8 %fndef_ok, metadata !3544, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8 %empty_ok, metadata !3545, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8 %nested, metadata !3546, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8 %start_attr_ok, metadata !3547, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8 0, metadata !3551, metadata !DIExpression()), !dbg !3571
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3572
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !3573
  %0 = load i32, i32* %location, align 8, !dbg !3573
  call void @llvm.dbg.value(metadata i32 %0, metadata !3552, metadata !DIExpression()), !dbg !3571
  %call1 = tail call %struct.c_declspecs* @build_null_declspecs() #6, !dbg !3574
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %call1, metadata !3548, metadata !DIExpression()), !dbg !3571
  tail call fastcc void @c_parser_declspecs(%struct.c_parser* %parser, %struct.c_declspecs* %call1, i8 zeroext 1, i8 zeroext 1, i8 zeroext %start_attr_ok) #7, !dbg !3575
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !3576
  %bf.load = load i8, i8* %error, align 2, !dbg !3576
  %bf.clear = and i8 %bf.load, 1, !dbg !3576
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !3578
  br i1 %tobool, label %if.end, label %if.then, !dbg !3579

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) #7, !dbg !3580
  br label %cleanup.cont, !dbg !3582

if.end:                                           ; preds = %entry
  %tobool2 = icmp eq i8 %nested, 0, !dbg !3583
  br i1 %tobool2, label %if.end8, label %land.lhs.true, !dbg !3585

land.lhs.true:                                    ; preds = %if.end
  %declspecs_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call1, i64 0, i32 6, !dbg !3586
  %bf.load3 = load i8, i8* %declspecs_seen_p, align 8, !dbg !3586
  %bf.clear4 = and i8 %bf.load3, 2, !dbg !3586
  %tobool6 = icmp eq i8 %bf.clear4, 0, !dbg !3587
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !3588

if.then7:                                         ; preds = %land.lhs.true
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.73, i64 0, i64 0)) #7, !dbg !3589
  tail call fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) #7, !dbg !3591
  br label %cleanup.cont, !dbg !3592

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %call9 = tail call %struct.c_declspecs* @finish_declspecs(%struct.c_declspecs* %call1) #6, !dbg !3593
  %call10 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !3594
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3594
  br i1 %tobool11, label %if.end17, label %if.then12, !dbg !3596

if.then12:                                        ; preds = %if.end8
  %tobool13 = icmp eq i8 %empty_ok, 0, !dbg !3597
  br i1 %tobool13, label %if.else, label %if.then14, !dbg !3600

if.then14:                                        ; preds = %if.then12
  tail call void @shadow_tag(%struct.c_declspecs* %call1) #6, !dbg !3601
  br label %if.end16, !dbg !3601

if.else:                                          ; preds = %if.then12
  tail call void @shadow_tag_warned(%struct.c_declspecs* %call1, i32 1) #6, !dbg !3602
  %call15 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %0, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.126, i64 0, i64 0)) #6, !dbg !3604
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then14
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3605
  br label %cleanup.cont, !dbg !3606

if.end17:                                         ; preds = %if.end8
  tail call void @pending_xref_error() #6, !dbg !3607
  %attrs = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call1, i64 0, i32 3, !dbg !3608
  %1 = load %union.tree_node*, %union.tree_node** %attrs, align 8, !dbg !3608
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3549, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3550, metadata !DIExpression()), !dbg !3571
  store %union.tree_node* null, %union.tree_node** %attrs, align 8, !dbg !3609
  %type_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call1, i64 0, i32 6, !dbg !3610
  %2 = bitcast %struct.c_expr* %init to i8*, !dbg !3611
  %3 = bitcast %struct.c_expr* %tmp to i8*, !dbg !3611
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init, i64 0, i32 0, !dbg !3612
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init, i64 0, i32 2, !dbg !3612
  br label %while.cond, !dbg !3615

while.cond:                                       ; preds = %cleanup145, %if.end17
  %all_prefix_attrs.0 = phi %union.tree_node* [ %1, %if.end17 ], [ %all_prefix_attrs.3, %cleanup145 ], !dbg !3616
  %diagnosed_no_specs.0 = phi i8 [ 0, %if.end17 ], [ %diagnosed_no_specs.2, %cleanup145 ], !dbg !3617
  %fndef_ok.addr.0 = phi i8 [ %fndef_ok, %if.end17 ], [ %fndef_ok.addr.1, %cleanup145 ]
  call void @llvm.dbg.value(metadata i8 %fndef_ok.addr.0, metadata !3544, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8 %diagnosed_no_specs.0, metadata !3551, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata %union.tree_node* %all_prefix_attrs.0, metadata !3550, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !3555, metadata !DIExpression(DW_OP_deref)), !dbg !3610
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %dummy) #8, !dbg !3618
  call void @llvm.dbg.value(metadata i8 0, metadata !3555, metadata !DIExpression()), !dbg !3610
  store i8 0, i8* %dummy, align 1, !dbg !3619
  %bf.load19 = load i8, i8* %type_seen_p, align 8, !dbg !3620
  %bf.lshr20 = lshr i8 %bf.load19, 2, !dbg !3620
  %bf.clear21 = and i8 %bf.lshr20, 1, !dbg !3620
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !3555, metadata !DIExpression(DW_OP_deref)), !dbg !3610
  %call24 = call fastcc %struct.c_declarator* @c_parser_declarator(%struct.c_parser* %parser, i8 zeroext %bf.clear21, i32 0, i8* nonnull %dummy) #7, !dbg !3621
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call24, metadata !3553, metadata !DIExpression()), !dbg !3610
  %cmp = icmp eq %struct.c_declarator* %call24, null, !dbg !3622
  br i1 %cmp, label %if.then26, label %if.end27, !dbg !3624

if.then26:                                        ; preds = %while.cond
  call fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) #7, !dbg !3625
  br label %cleanup145, !dbg !3627

if.end27:                                         ; preds = %while.cond
  %call28 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 0) #7, !dbg !3628
  %tobool30 = icmp eq i8 %call28, 0, !dbg !3628
  br i1 %tobool30, label %lor.lhs.false, label %if.then46, !dbg !3629

lor.lhs.false:                                    ; preds = %if.end27
  %call31 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !3630
  %tobool33 = icmp eq i8 %call31, 0, !dbg !3630
  br i1 %tobool33, label %lor.lhs.false34, label %if.then46, !dbg !3631

lor.lhs.false34:                                  ; preds = %lor.lhs.false
  %call35 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !3632
  %tobool37 = icmp eq i8 %call35, 0, !dbg !3632
  br i1 %tobool37, label %lor.lhs.false38, label %if.then46, !dbg !3633

lor.lhs.false38:                                  ; preds = %lor.lhs.false34
  %call39 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 49) #7, !dbg !3634
  %tobool41 = icmp eq i8 %call39, 0, !dbg !3634
  br i1 %tobool41, label %lor.lhs.false42, label %if.then46, !dbg !3635

lor.lhs.false42:                                  ; preds = %lor.lhs.false38
  %call43 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 52) #7, !dbg !3636
  %tobool45 = icmp eq i8 %call43, 0, !dbg !3636
  br i1 %tobool45, label %if.else107, label %if.then46, !dbg !3637

if.then46:                                        ; preds = %lor.lhs.false42, %lor.lhs.false38, %lor.lhs.false34, %lor.lhs.false, %if.end27
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3557, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3560, metadata !DIExpression()), !dbg !3638
  %tobool47 = icmp eq i8 %diagnosed_no_specs.0, 0, !dbg !3639
  br i1 %tobool47, label %land.lhs.true48, label %if.end57, !dbg !3641

land.lhs.true48:                                  ; preds = %if.then46
  %bf.load50 = load i8, i8* %type_seen_p, align 8, !dbg !3642
  %bf.clear52 = and i8 %bf.load50, 2, !dbg !3642
  %tobool54 = icmp eq i8 %bf.clear52, 0, !dbg !3643
  br i1 %tobool54, label %if.then55, label %if.end57, !dbg !3644

if.then55:                                        ; preds = %land.lhs.true48
  call void @llvm.dbg.value(metadata i8 1, metadata !3551, metadata !DIExpression()), !dbg !3571
  %call56 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %0, i32 0, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.127, i64 0, i64 0)) #6, !dbg !3645
  br label %if.end57, !dbg !3647

if.end57:                                         ; preds = %land.lhs.true48, %if.then46, %if.then55
  %diagnosed_no_specs.1 = phi i8 [ %diagnosed_no_specs.0, %if.then46 ], [ 0, %land.lhs.true48 ], [ 1, %if.then55 ], !dbg !3571
  call void @llvm.dbg.value(metadata i8 %diagnosed_no_specs.1, metadata !3551, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8 0, metadata !3544, metadata !DIExpression()), !dbg !3571
  %call58 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 49) #7, !dbg !3648
  %tobool59 = icmp eq i8 %call58, 0, !dbg !3648
  br i1 %tobool59, label %if.end62, label %if.then60, !dbg !3650

if.then60:                                        ; preds = %if.end57
  %call61 = call fastcc %union.tree_node* @c_parser_simple_asm_expr(%struct.c_parser* %parser) #7, !dbg !3651
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !3557, metadata !DIExpression()), !dbg !3638
  br label %if.end62, !dbg !3652

if.end62:                                         ; preds = %if.end57, %if.then60
  %asm_name.0 = phi %union.tree_node* [ %call61, %if.then60 ], [ null, %if.end57 ], !dbg !3638
  call void @llvm.dbg.value(metadata %union.tree_node* %asm_name.0, metadata !3557, metadata !DIExpression()), !dbg !3638
  %call63 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 52) #7, !dbg !3653
  %tobool64 = icmp eq i8 %call63, 0, !dbg !3653
  br i1 %tobool64, label %if.end67, label %if.then65, !dbg !3655

if.then65:                                        ; preds = %if.end62
  %call66 = call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !3656
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !3560, metadata !DIExpression()), !dbg !3638
  br label %if.end67, !dbg !3657

if.end67:                                         ; preds = %if.end62, %if.then65
  %postfix_attrs.0 = phi %union.tree_node* [ %call66, %if.then65 ], [ null, %if.end62 ], !dbg !3638
  call void @llvm.dbg.value(metadata %union.tree_node* %postfix_attrs.0, metadata !3560, metadata !DIExpression()), !dbg !3638
  %call68 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 0) #7, !dbg !3658
  %tobool69 = icmp eq i8 %call68, 0, !dbg !3658
  br i1 %tobool69, label %if.else83, label %if.then70, !dbg !3659

if.then70:                                        ; preds = %if.end67
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3660
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3661
  %call71 = call %union.tree_node* @chainon(%union.tree_node* %postfix_attrs.0, %union.tree_node* %all_prefix_attrs.0) #6, !dbg !3662
  %call72 = call %union.tree_node* @start_decl(%struct.c_declarator* nonnull %call24, %struct.c_declspecs* %call1, i8 zeroext 1, %union.tree_node* %call71) #6, !dbg !3663
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !3561, metadata !DIExpression()), !dbg !3611
  %tobool73 = icmp eq %union.tree_node* %call72, null, !dbg !3664
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3666
  %spec.select = select i1 %tobool73, %union.tree_node* %4, %union.tree_node* %call72, !dbg !3667
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !3561, metadata !DIExpression()), !dbg !3611
  %call76 = call i32 @global_bindings_p() #6, !dbg !3668
  call void @start_init(%union.tree_node* %spec.select, %union.tree_node* %asm_name.0, i32 %call76) #6, !dbg !3669
  %call77 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3670
  %location78 = getelementptr inbounds %struct.c_token, %struct.c_token* %call77, i64 0, i32 2, !dbg !3671
  %5 = load i32, i32* %location78, align 8, !dbg !3671
  call void @llvm.dbg.value(metadata i32 %5, metadata !3565, metadata !DIExpression()), !dbg !3611
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3672
  call fastcc void @c_parser_initializer(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !3672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !3672
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !3672
  call void @finish_init() #6, !dbg !3673
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !3674
  %cmp79 = icmp eq %union.tree_node* %spec.select, %6, !dbg !3675
  br i1 %cmp79, label %if.end82, label %if.then81, !dbg !3676

if.then81:                                        ; preds = %if.then70
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %spec.select, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !3677
  %7 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !3677
  call void @llvm.dbg.value(metadata %struct.c_expr* %init, metadata !3564, metadata !DIExpression(DW_OP_deref)), !dbg !3611
  call void @maybe_warn_string_init(%union.tree_node* %7, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %init) #6, !dbg !3678
  %8 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3679
  %9 = load %union.tree_node*, %union.tree_node** %original_type, align 8, !dbg !3680
  call void @finish_decl(%union.tree_node* %spec.select, i32 %5, %union.tree_node* %8, %union.tree_node* %9, %union.tree_node* %asm_name.0) #6, !dbg !3681
  br label %if.end82, !dbg !3682

if.end82:                                         ; preds = %if.then70, %if.then81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !3683
  br label %if.end90, !dbg !3684

if.else83:                                        ; preds = %if.end67
  %call85 = call %union.tree_node* @chainon(%union.tree_node* %postfix_attrs.0, %union.tree_node* %all_prefix_attrs.0) #6, !dbg !3685
  %call86 = call %union.tree_node* @start_decl(%struct.c_declarator* nonnull %call24, %struct.c_declspecs* %call1, i8 zeroext 0, %union.tree_node* %call85) #6, !dbg !3686
  call void @llvm.dbg.value(metadata %union.tree_node* %call86, metadata !3566, metadata !DIExpression()), !dbg !3687
  %tobool87 = icmp eq %union.tree_node* %call86, null, !dbg !3688
  br i1 %tobool87, label %if.end90, label %if.then88, !dbg !3690

if.then88:                                        ; preds = %if.else83
  call void @finish_decl(%union.tree_node* nonnull %call86, i32 0, %union.tree_node* null, %union.tree_node* null, %union.tree_node* %asm_name.0) #6, !dbg !3691
  br label %if.end90, !dbg !3691

if.end90:                                         ; preds = %if.else83, %if.then88, %if.end82
  %call91 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !3692
  %tobool92 = icmp eq i8 %call91, 0, !dbg !3692
  br i1 %tobool92, label %if.else101, label %if.then93, !dbg !3694

if.then93:                                        ; preds = %if.end90
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3695
  %call94 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 52) #7, !dbg !3697
  %tobool95 = icmp eq i8 %call94, 0, !dbg !3697
  br i1 %tobool95, label %cleanup145, label %if.then96, !dbg !3699, !llvm.loop !3700

if.then96:                                        ; preds = %if.then93
  %call97 = call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !3702
  %call98 = call %union.tree_node* @chainon(%union.tree_node* %call97, %union.tree_node* %1) #6, !dbg !3703
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !3550, metadata !DIExpression()), !dbg !3571
  br label %cleanup145, !dbg !3704, !llvm.loop !3700

if.else101:                                       ; preds = %if.end90
  %call102 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !3705
  %tobool103 = icmp eq i8 %call102, 0, !dbg !3705
  br i1 %tobool103, label %if.else105, label %if.then104, !dbg !3707

if.then104:                                       ; preds = %if.else101
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3708
  br label %cleanup145, !dbg !3710

if.else105:                                       ; preds = %if.else101
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.128, i64 0, i64 0)) #7, !dbg !3711
  call fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) #7, !dbg !3713
  br label %cleanup145, !dbg !3714

if.else107:                                       ; preds = %lor.lhs.false42
  %tobool108 = icmp eq i8 %fndef_ok.addr.0, 0, !dbg !3715
  br i1 %tobool108, label %if.then109, label %if.end111, !dbg !3717

if.then109:                                       ; preds = %if.else107
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.129, i64 0, i64 0)) #7, !dbg !3718
  call fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) #7, !dbg !3720
  br label %cleanup145, !dbg !3721

if.end111:                                        ; preds = %if.else107
  br i1 %tobool2, label %if.end115, label %if.then113, !dbg !3722

if.then113:                                       ; preds = %if.end111
  %call114 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %0, i32 834, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.130, i64 0, i64 0)) #6, !dbg !3723
  call void @c_push_function_context() #6, !dbg !3726
  br label %if.end115, !dbg !3727

if.end115:                                        ; preds = %if.end111, %if.then113
  %call116 = call i32 @start_function(%struct.c_declspecs* %call1, %struct.c_declarator* nonnull %call24, %union.tree_node* %all_prefix_attrs.0) #6, !dbg !3728
  %tobool117 = icmp eq i32 %call116, 0, !dbg !3728
  br i1 %tobool117, label %if.then118, label %while.cond123.preheader, !dbg !3730

while.cond123.preheader:                          ; preds = %if.end115
  br label %while.cond123, !dbg !3731

if.then118:                                       ; preds = %if.end115
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.129, i64 0, i64 0)) #7, !dbg !3732
  br i1 %tobool2, label %cleanup145, label %if.then120, !dbg !3734

if.then120:                                       ; preds = %if.then118
  call void @c_pop_function_context() #6, !dbg !3735
  br label %cleanup145, !dbg !3735

while.cond123:                                    ; preds = %while.cond123.preheader, %while.body130
  %call124 = call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 22) #7, !dbg !3737
  %tobool126 = icmp eq i8 %call124, 0, !dbg !3737
  br i1 %tobool126, label %while.end, label %land.rhs, !dbg !3738

land.rhs:                                         ; preds = %while.cond123
  %call127 = call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 41) #7, !dbg !3739
  %tobool129 = icmp eq i8 %call127, 0, !dbg !3738
  br i1 %tobool129, label %while.end, label %while.body130, !dbg !3731

while.body130:                                    ; preds = %land.rhs
  call fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext 0, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0) #7, !dbg !3740
  br label %while.cond123, !dbg !3731, !llvm.loop !3741

while.end:                                        ; preds = %land.rhs, %while.cond123
  call void @store_parm_decls() #6, !dbg !3743
  %call131 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3744
  %location132 = getelementptr inbounds %struct.c_token, %struct.c_token* %call131, i64 0, i32 2, !dbg !3745
  %10 = load i32, i32* %location132, align 8, !dbg !3745
  %11 = load %struct.tree_function_decl*, %struct.tree_function_decl** bitcast (%union.tree_node** @current_function_decl to %struct.tree_function_decl**), align 8, !dbg !3746
  %f = getelementptr inbounds %struct.tree_function_decl, %struct.tree_function_decl* %11, i64 0, i32 1, !dbg !3746
  %12 = load %struct.function*, %struct.function** %f, align 8, !dbg !3746
  %function_start_locus = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, i32 15, !dbg !3747
  store i32 %10, i32* %function_start_locus, align 8, !dbg !3748
  %call133 = call fastcc %union.tree_node* @c_parser_compound_statement(%struct.c_parser* %parser) #7, !dbg !3749
  call void @llvm.dbg.value(metadata %union.tree_node* %call133, metadata !3556, metadata !DIExpression()), !dbg !3610
  br i1 %tobool2, label %if.else142, label %if.then135, !dbg !3750

if.then135:                                       ; preds = %while.end
  %13 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !3751
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !3568, metadata !DIExpression()), !dbg !3752
  %regdecl_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 5, !dbg !3753
  %bf.load137 = load i32, i32* %regdecl_flag, align 8, !dbg !3754
  %bf.set = or i32 %bf.load137, 4194304, !dbg !3754
  store i32 %bf.set, i32* %regdecl_flag, align 8, !dbg !3754
  %call139 = call %union.tree_node* @add_stmt(%union.tree_node* %call133) #6, !dbg !3755
  call void @finish_function() #6, !dbg !3756
  call void @c_pop_function_context() #6, !dbg !3757
  %locus = getelementptr inbounds %union.tree_node, %union.tree_node* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !3758
  %14 = load i32, i32* %locus, align 8, !dbg !3758
  %call140 = call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %14, i32 132, %union.tree_node* %13) #6, !dbg !3759
  %call141 = call %union.tree_node* @add_stmt(%union.tree_node* %call140) #6, !dbg !3760
  br label %cleanup145, !dbg !3761

if.else142:                                       ; preds = %while.end
  %call143 = call %union.tree_node* @add_stmt(%union.tree_node* %call133) #6, !dbg !3762
  call void @finish_function() #6, !dbg !3764
  br label %cleanup145

cleanup145:                                       ; preds = %if.then93, %if.then118, %if.then135, %if.else142, %if.then120, %if.then104, %if.else105, %if.then96, %if.then109, %if.then26
  %all_prefix_attrs.3 = phi %union.tree_node* [ %all_prefix_attrs.0, %if.then26 ], [ %all_prefix_attrs.0, %if.then109 ], [ %all_prefix_attrs.0, %if.then104 ], [ %all_prefix_attrs.0, %if.else105 ], [ %call98, %if.then96 ], [ %1, %if.then93 ], [ %all_prefix_attrs.0, %if.then120 ], [ %all_prefix_attrs.0, %if.then118 ], [ %all_prefix_attrs.0, %if.else142 ], [ %all_prefix_attrs.0, %if.then135 ], !dbg !3571
  %diagnosed_no_specs.2 = phi i8 [ %diagnosed_no_specs.0, %if.then26 ], [ %diagnosed_no_specs.0, %if.then109 ], [ %diagnosed_no_specs.1, %if.then104 ], [ %diagnosed_no_specs.1, %if.else105 ], [ %diagnosed_no_specs.1, %if.then96 ], [ %diagnosed_no_specs.1, %if.then93 ], [ %diagnosed_no_specs.0, %if.then120 ], [ %diagnosed_no_specs.0, %if.then118 ], [ %diagnosed_no_specs.0, %if.else142 ], [ %diagnosed_no_specs.0, %if.then135 ], !dbg !3617
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then26 ], [ false, %if.then109 ], [ false, %if.then104 ], [ false, %if.else105 ], [ true, %if.then96 ], [ true, %if.then93 ], [ false, %if.then120 ], [ false, %if.then118 ], [ false, %if.else142 ], [ false, %if.then135 ]
  %fndef_ok.addr.1 = phi i8 [ %fndef_ok.addr.0, %if.then26 ], [ 0, %if.then109 ], [ 0, %if.then104 ], [ 0, %if.else105 ], [ 0, %if.then96 ], [ 0, %if.then93 ], [ %fndef_ok.addr.0, %if.then120 ], [ %fndef_ok.addr.0, %if.then118 ], [ %fndef_ok.addr.0, %if.else142 ], [ %fndef_ok.addr.0, %if.then135 ]
  call void @llvm.dbg.value(metadata i8 %fndef_ok.addr.1, metadata !3544, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8 %diagnosed_no_specs.2, metadata !3551, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata %union.tree_node* %all_prefix_attrs.3, metadata !3550, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !3555, metadata !DIExpression(DW_OP_deref)), !dbg !3610
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %dummy) #8, !dbg !3701
  br i1 %cleanup.dest.slot.1, label %while.cond, label %cleanup.cont.loopexit

cleanup.cont.loopexit:                            ; preds = %cleanup145
  br label %cleanup.cont, !dbg !3765

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then, %if.then7, %if.end16
  ret void, !dbg !3765
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_simple_asm_expr(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3766 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3770, metadata !DIExpression()), !dbg !3772
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 49) #7, !dbg !3773
  %tobool = icmp eq i8 %call, 0, !dbg !3773
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3773

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2783, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3773
  br label %cond.end, !dbg !3773

cond.end:                                         ; preds = %entry, %cond.true
  %lex_untranslated_string = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !3774
  %bf.load = load i8, i8* %lex_untranslated_string, align 2, !dbg !3775
  %bf.set = or i8 %bf.load, 8, !dbg !3775
  store i8 %bf.set, i8* %lex_untranslated_string, align 2, !dbg !3775
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3776
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !3777
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3777
  br i1 %tobool2, label %if.then, label %if.end, !dbg !3779

if.then:                                          ; preds = %cond.end
  %bf.load4 = load i8, i8* %lex_untranslated_string, align 2, !dbg !3780
  %bf.clear5 = and i8 %bf.load4, -9, !dbg !3780
  store i8 %bf.clear5, i8* %lex_untranslated_string, align 2, !dbg !3780
  br label %cleanup, !dbg !3782

if.end:                                           ; preds = %cond.end
  %call6 = tail call fastcc %union.tree_node* @c_parser_asm_string_literal(%struct.c_parser* %parser) #7, !dbg !3783
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !3771, metadata !DIExpression()), !dbg !3772
  %bf.load8 = load i8, i8* %lex_untranslated_string, align 2, !dbg !3784
  %bf.clear9 = and i8 %bf.load8, -9, !dbg !3784
  store i8 %bf.clear9, i8* %lex_untranslated_string, align 2, !dbg !3784
  %call10 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !3785
  %tobool11 = icmp eq i8 %call10, 0, !dbg !3785
  br i1 %tobool11, label %if.then12, label %cleanup, !dbg !3787

if.then12:                                        ; preds = %if.end
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !3788
  br label %cleanup, !dbg !3790

cleanup:                                          ; preds = %if.end, %if.then12, %if.then
  %retval.0 = phi %union.tree_node* [ null, %if.then12 ], [ null, %if.then ], [ %call6, %if.end ], !dbg !3772
  ret %union.tree_node* %retval.0, !dbg !3791
}

declare dso_local %struct.cgraph_asm_node* @cgraph_add_asm_node(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 %type, i8* %msgid) unnamed_addr #5 !dbg !3792 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3796, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 %type, metadata !3797, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i8* %msgid, metadata !3798, metadata !DIExpression()), !dbg !3802
  call void @llvm.dbg.value(metadata i32 0, metadata !3799, metadata !DIExpression()), !dbg !3802
  %call = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 %type, i8* %msgid) #7, !dbg !3803
  %tobool = icmp eq i8 %call, 0, !dbg !3803
  br i1 %tobool, label %while.cond.preheader, label %cleanup.cont51, !dbg !3805

while.cond.preheader:                             ; preds = %entry
  %in_pragma = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !3806
  br label %while.cond, !dbg !3808

while.cond:                                       ; preds = %while.cond.preheader, %cleanup
  %nesting_depth.0 = phi i32 [ %nesting_depth.3, %cleanup ], [ 0, %while.cond.preheader ], !dbg !3809
  call void @llvm.dbg.value(metadata i32 %nesting_depth.0, metadata !3799, metadata !DIExpression()), !dbg !3802
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3810
  call void @llvm.dbg.value(metadata %struct.c_token* %call1, metadata !3800, metadata !DIExpression()), !dbg !3811
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !3812
  %bf.load = load i32, i32* %0, align 8, !dbg !3812
  %bf.clear = and i32 %bf.load, 255, !dbg !3812
  %cmp = icmp ne i32 %bf.clear, %type, !dbg !3814
  %tobool2 = icmp ne i32 %nesting_depth.0, 0, !dbg !3815
  %or.cond = or i1 %cmp, %tobool2, !dbg !3816
  br i1 %or.cond, label %if.end4, label %if.then3, !dbg !3816

if.then3:                                         ; preds = %while.cond
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3817
  br label %cleanup, !dbg !3819

if.end4:                                          ; preds = %while.cond
  %cmp7 = icmp eq i32 %bf.clear, 22, !dbg !3820
  br i1 %cmp7, label %cleanup, label %if.end9, !dbg !3822

if.end9:                                          ; preds = %if.end4
  %cmp12 = icmp eq i32 %bf.clear, 71, !dbg !3823
  br i1 %cmp12, label %land.lhs.true13, label %if.end18, !dbg !3824

land.lhs.true13:                                  ; preds = %if.end9
  %bf.load14 = load i8, i8* %in_pragma, align 2, !dbg !3825
  %bf.clear15 = and i8 %bf.load14, 2, !dbg !3825
  %tobool16 = icmp eq i8 %bf.clear15, 0, !dbg !3826
  br i1 %tobool16, label %if.end18, label %cleanup, !dbg !3827

if.end18:                                         ; preds = %land.lhs.true13, %if.end9
  %cmp21 = icmp eq i32 %bf.clear, 41, !dbg !3828
  br i1 %cmp21, label %if.then29, label %lor.lhs.false, !dbg !3830

lor.lhs.false:                                    ; preds = %if.end18
  %cmp24 = icmp eq i32 %bf.clear, 20, !dbg !3831
  br i1 %cmp24, label %if.then29, label %lor.lhs.false25, !dbg !3832

lor.lhs.false25:                                  ; preds = %lor.lhs.false
  %cmp28 = icmp eq i32 %bf.clear, 39, !dbg !3833
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !3834

if.then29:                                        ; preds = %lor.lhs.false25, %lor.lhs.false, %if.end18
  %inc = add i32 %nesting_depth.0, 1, !dbg !3835
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3799, metadata !DIExpression()), !dbg !3802
  br label %if.end46, !dbg !3835

if.else:                                          ; preds = %lor.lhs.false25
  %cmp32 = icmp eq i32 %bf.clear, 42, !dbg !3836
  br i1 %cmp32, label %if.then41, label %lor.lhs.false33, !dbg !3838

lor.lhs.false33:                                  ; preds = %if.else
  %cmp36 = icmp eq i32 %bf.clear, 21, !dbg !3839
  br i1 %cmp36, label %if.then41, label %lor.lhs.false37, !dbg !3840

lor.lhs.false37:                                  ; preds = %lor.lhs.false33
  %cmp40 = icmp eq i32 %bf.clear, 40, !dbg !3841
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !3842

if.then41:                                        ; preds = %lor.lhs.false37, %lor.lhs.false33, %if.else
  %dec = add i32 %nesting_depth.0, -1, !dbg !3843
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3799, metadata !DIExpression()), !dbg !3802
  %cmp42 = icmp eq i32 %nesting_depth.0, 0, !dbg !3846
  br i1 %cmp42, label %cleanup, label %if.end46, !dbg !3847

if.end46:                                         ; preds = %lor.lhs.false37, %if.then41, %if.then29
  %nesting_depth.2 = phi i32 [ %inc, %if.then29 ], [ %nesting_depth.0, %lor.lhs.false37 ], [ %dec, %if.then41 ], !dbg !3848
  call void @llvm.dbg.value(metadata i32 %nesting_depth.2, metadata !3799, metadata !DIExpression()), !dbg !3802
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3849
  br label %cleanup, !dbg !3850

cleanup:                                          ; preds = %land.lhs.true13, %if.then41, %if.end4, %if.end46, %if.then3
  %nesting_depth.3 = phi i32 [ %nesting_depth.2, %if.end46 ], [ 0, %if.then3 ], [ %nesting_depth.0, %if.end4 ], [ %nesting_depth.0, %land.lhs.true13 ], [ %dec, %if.then41 ], !dbg !3802
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end46 ], [ 3, %if.then3 ], [ 1, %if.end4 ], [ 1, %land.lhs.true13 ], [ 3, %if.then41 ]
  call void @llvm.dbg.value(metadata i32 %nesting_depth.3, metadata !3799, metadata !DIExpression()), !dbg !3802
  switch i32 %cleanup.dest.slot.0, label %cleanup.cont51.loopexit [
    i32 0, label %while.cond
    i32 3, label %while.end
  ], !llvm.loop !3851

while.end:                                        ; preds = %cleanup
  %bf.load47 = load i8, i8* %in_pragma, align 2, !dbg !3852
  %bf.clear48 = and i8 %bf.load47, -2, !dbg !3852
  store i8 %bf.clear48, i8* %in_pragma, align 2, !dbg !3852
  br label %cleanup.cont51, !dbg !3853

cleanup.cont51.loopexit:                          ; preds = %cleanup
  br label %cleanup.cont51, !dbg !3853

cleanup.cont51:                                   ; preds = %cleanup.cont51.loopexit, %entry, %while.end
  ret void, !dbg !3853
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 %keyword) unnamed_addr #0 !dbg !3854 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3858, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata i32 %keyword, metadata !3859, metadata !DIExpression()), !dbg !3860
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3861
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !3862
  %bf.load = load i32, i32* %0, align 8, !dbg !3862
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !3862
  %bf.clear = and i32 %bf.lshr, 255, !dbg !3862
  %cmp = icmp eq i32 %bf.clear, %keyword, !dbg !3863
  %conv1 = zext i1 %cmp to i8, !dbg !3861
  ret i8 %conv1, !dbg !3864
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_asm_string_literal(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3865 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3867, metadata !DIExpression()), !dbg !3869
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 61) #7, !dbg !3870
  %tobool = icmp eq i8 %call, 0, !dbg !3870
  br i1 %tobool, label %if.else, label %if.then, !dbg !3872

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3873
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 1, !dbg !3875
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3875
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3868, metadata !DIExpression()), !dbg !3869
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3876
  br label %if.end8, !dbg !3877

if.else:                                          ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 62) #7, !dbg !3878
  %tobool3 = icmp eq i8 %call2, 0, !dbg !3878
  br i1 %tobool3, label %if.else7, label %if.then4, !dbg !3880

if.then4:                                         ; preds = %if.else
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3881
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call5, i64 0, i32 2, !dbg !3883
  %1 = load i32, i32* %location, align 8, !dbg !3883
  tail call void (i32, i8*, ...) @error_at(i32 %1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !3884
  %call6 = tail call %union.tree_node* @build_string(i32 1, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.11, i64 0, i64 0)) #6, !dbg !3885
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !3868, metadata !DIExpression()), !dbg !3869
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3886
  br label %if.end8, !dbg !3887

if.else7:                                         ; preds = %if.else
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #7, !dbg !3888
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3868, metadata !DIExpression()), !dbg !3869
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.else7, %if.then
  %str.1 = phi %union.tree_node* [ %0, %if.then ], [ %call6, %if.then4 ], [ null, %if.else7 ], !dbg !3890
  call void @llvm.dbg.value(metadata %union.tree_node* %str.1, metadata !3868, metadata !DIExpression()), !dbg !3869
  ret %union.tree_node* %str.1, !dbg !3891
}

declare dso_local void @error_at(i32, i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_string(i32, i8*) local_unnamed_addr #2

declare dso_local void @objc_start_category_implementation(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_objc_protocol_refs(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3892 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3894, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !3895, metadata !DIExpression()), !dbg !3898
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 3) #7, !dbg !3899
  %tobool = icmp eq i8 %call, 0, !dbg !3899
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3899

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6675, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3899
  br label %cond.end, !dbg !3899

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3900
  br label %while.cond, !dbg !3901

while.cond:                                       ; preds = %cleanup, %cond.end
  %list.0 = phi %union.tree_node* [ null, %cond.end ], [ %list.1, %cleanup ], !dbg !3902
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !3895, metadata !DIExpression()), !dbg !3898
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !3903
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3903
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3905

if.then:                                          ; preds = %while.cond
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !3906
  br label %cleanup, !dbg !3908

if.end:                                           ; preds = %while.cond
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3909
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 1, !dbg !3910
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !3910
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !3896, metadata !DIExpression()), !dbg !3911
  %call4 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %0) #6, !dbg !3912
  %call5 = tail call %union.tree_node* @chainon(%union.tree_node* %list.0, %union.tree_node* %call4) #6, !dbg !3913
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !3895, metadata !DIExpression()), !dbg !3898
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3914
  %call6 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !3915
  %tobool7 = icmp eq i8 %call6, 0, !dbg !3915
  br i1 %tobool7, label %cleanup, label %if.then8, !dbg !3917

if.then8:                                         ; preds = %if.end
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3918
  br label %cleanup, !dbg !3919

cleanup:                                          ; preds = %if.end, %if.then8, %if.then
  %list.1 = phi %union.tree_node* [ %list.0, %if.then ], [ %call5, %if.then8 ], [ %call5, %if.end ], !dbg !3898
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %if.then8 ], [ false, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1, metadata !3895, metadata !DIExpression()), !dbg !3898
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !3920

while.end:                                        ; preds = %cleanup
  %list.1.lcssa = phi %union.tree_node* [ %list.1, %cleanup ], !dbg !3898
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa, metadata !3895, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa, metadata !3895, metadata !DIExpression()), !dbg !3898
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa, metadata !3895, metadata !DIExpression()), !dbg !3898
  %call10 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 2, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.14, i64 0, i64 0)) #7, !dbg !3921
  ret %union.tree_node* %list.1.lcssa, !dbg !3922
}

declare dso_local void @objc_start_category_interface(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_methodprotolist(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3923 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3925, metadata !DIExpression()), !dbg !3926
  br label %while.body, !dbg !3927

while.body:                                       ; preds = %entry, %sw.epilog
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3928
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !3930
  %bf.load = load i32, i32* %0, align 8, !dbg !3930
  %trunc = trunc i32 %bf.load to i8, !dbg !3931
  switch i8 %trunc, label %sw.default [
    i8 43, label %sw.bb
    i8 4, label %sw.bb3
    i8 5, label %sw.bb3
    i8 70, label %sw.bb4
    i8 22, label %return
  ], !dbg !3931

sw.bb:                                            ; preds = %while.body
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3932
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !3934
  %1 = load i32, i32* %location, align 8, !dbg !3934
  %call2 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %1, i32 834, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3935
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3936
  br label %sw.epilog, !dbg !3937

sw.bb3:                                           ; preds = %while.body, %while.body
  tail call fastcc void @c_parser_objc_methodproto(%struct.c_parser* %parser) #7, !dbg !3938
  br label %sw.epilog, !dbg !3939

sw.bb4:                                           ; preds = %while.body
  %call5 = tail call fastcc zeroext i8 @c_parser_pragma(%struct.c_parser* %parser, i32 0) #7, !dbg !3940
  br label %sw.epilog, !dbg !3941

sw.default:                                       ; preds = %while.body
  %call7 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 120) #7, !dbg !3942
  %tobool = icmp eq i8 %call7, 0, !dbg !3942
  br i1 %tobool, label %if.end, label %return, !dbg !3944

if.end:                                           ; preds = %sw.default
  tail call fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 1) #7, !dbg !3945
  br label %sw.epilog, !dbg !3946

sw.epilog:                                        ; preds = %if.end, %sw.bb4, %sw.bb3, %sw.bb
  br label %while.body, !dbg !3927, !llvm.loop !3947

return:                                           ; preds = %sw.default, %while.body
  ret void, !dbg !3949
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @c_parser_require_keyword(%struct.c_parser* %parser, i32 %keyword, i8* %msgid) unnamed_addr #5 !dbg !3950 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3954, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i32 %keyword, metadata !3955, metadata !DIExpression()), !dbg !3957
  call void @llvm.dbg.value(metadata i8* %msgid, metadata !3956, metadata !DIExpression()), !dbg !3957
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 %keyword) #7, !dbg !3958
  %tobool = icmp eq i8 %call, 0, !dbg !3958
  br i1 %tobool, label %if.else, label %if.then, !dbg !3960

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3961
  br label %return, !dbg !3963

if.else:                                          ; preds = %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* %msgid) #7, !dbg !3964
  br label %return, !dbg !3966

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !3967
  ret i8 %retval.0, !dbg !3968
}

declare dso_local void @objc_finish_interface() local_unnamed_addr #2

declare dso_local void @objc_start_class_interface(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_start_class_implementation(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_class_instance_variables(%struct.c_parser* %parser) unnamed_addr #5 !dbg !3969 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !3971, metadata !DIExpression()), !dbg !3976
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !3977
  %tobool = icmp eq i8 %call, 0, !dbg !3977
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3977

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6211, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !3977
  br label %cond.end, !dbg !3977

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3978
  br label %while.cond, !dbg !3979

while.cond:                                       ; preds = %cleanup, %cond.end
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 22) #7, !dbg !3980
  %tobool2 = icmp eq i8 %call1, 0, !dbg !3979
  br i1 %tobool2, label %while.end, label %while.body, !dbg !3979

while.body:                                       ; preds = %while.cond
  %call3 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !3981
  %tobool4 = icmp eq i8 %call3, 0, !dbg !3981
  br i1 %tobool4, label %if.end, label %if.then, !dbg !3983

if.then:                                          ; preds = %while.body
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !3984
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call5, i64 0, i32 2, !dbg !3986
  %0 = load i32, i32* %location, align 8, !dbg !3986
  %call6 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %0, i32 834, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !3987
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3988
  br label %cleanup, !dbg !3989, !llvm.loop !3990

if.end:                                           ; preds = %while.body
  %call7 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !3992
  %tobool8 = icmp eq i8 %call7, 0, !dbg !3992
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !3994

if.then9:                                         ; preds = %if.end
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !3995
  br label %cleanup, !dbg !3997

if.end10:                                         ; preds = %if.end
  %call11 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 73) #7, !dbg !3998
  %tobool12 = icmp eq i8 %call11, 0, !dbg !3998
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !4000

if.then13:                                        ; preds = %if.end10
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4001
  tail call void @objc_set_visibility(i32 2) #6, !dbg !4003
  br label %cleanup, !dbg !4004, !llvm.loop !3990

if.else:                                          ; preds = %if.end10
  %call14 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 74) #7, !dbg !4005
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4005
  br i1 %tobool15, label %if.else17, label %if.then16, !dbg !4007

if.then16:                                        ; preds = %if.else
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4008
  tail call void @objc_set_visibility(i32 0) #6, !dbg !4010
  br label %cleanup, !dbg !4011, !llvm.loop !3990

if.else17:                                        ; preds = %if.else
  %call18 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 72) #7, !dbg !4012
  %tobool19 = icmp eq i8 %call18, 0, !dbg !4012
  br i1 %tobool19, label %if.else21, label %if.then20, !dbg !4014

if.then20:                                        ; preds = %if.else17
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4015
  tail call void @objc_set_visibility(i32 1) #6, !dbg !4017
  br label %cleanup, !dbg !4018, !llvm.loop !3990

if.else21:                                        ; preds = %if.else17
  %call22 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 70) #7, !dbg !4019
  %tobool23 = icmp eq i8 %call22, 0, !dbg !4019
  br i1 %tobool23, label %if.end29, label %if.then24, !dbg !4021

if.then24:                                        ; preds = %if.else21
  %call25 = tail call fastcc zeroext i8 @c_parser_pragma(%struct.c_parser* %parser, i32 0) #7, !dbg !4022
  br label %cleanup, !dbg !4024, !llvm.loop !3990

if.end29:                                         ; preds = %if.else21
  %call30 = tail call fastcc %union.tree_node* @c_parser_struct_declaration(%struct.c_parser* %parser) #7, !dbg !4025
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !3972, metadata !DIExpression()), !dbg !4026
  %call31 = tail call %union.tree_node* @nreverse(%union.tree_node* %call30) #6, !dbg !4027
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !3974, metadata !DIExpression()), !dbg !4028
  br label %for.cond, !dbg !4029

for.cond:                                         ; preds = %for.body, %if.end29
  %ivar.0 = phi %union.tree_node* [ %call31, %if.end29 ], [ %1, %for.body ], !dbg !4028
  call void @llvm.dbg.value(metadata %union.tree_node* %ivar.0, metadata !3974, metadata !DIExpression()), !dbg !4028
  %tobool32 = icmp eq %union.tree_node* %ivar.0, null, !dbg !4030
  br i1 %tobool32, label %for.end, label %for.body, !dbg !4030

for.body:                                         ; preds = %for.cond
  %call33 = tail call %union.tree_node* @copy_node_stat(%union.tree_node* nonnull %ivar.0) #6, !dbg !4032
  tail call void @objc_add_instance_variable(%union.tree_node* %call33) #6, !dbg !4034
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %ivar.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4035
  %1 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !4035
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !3974, metadata !DIExpression()), !dbg !4028
  br label %for.cond, !dbg !4036, !llvm.loop !4037

for.end:                                          ; preds = %for.cond
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !4039
  br label %cleanup, !dbg !3991

cleanup:                                          ; preds = %for.end, %if.then24, %if.then20, %if.then16, %if.then13, %if.then9, %if.then
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then ], [ true, %if.then9 ], [ false, %if.then13 ], [ false, %if.then16 ], [ false, %if.then20 ], [ false, %if.then24 ], [ false, %for.end ]
  br i1 %cleanup.dest.slot.0, label %while.end, label %while.cond

while.end:                                        ; preds = %while.cond, %cleanup
  ret void, !dbg !4040
}

declare dso_local void @objc_continue_interface() local_unnamed_addr #2

declare dso_local void @objc_continue_implementation() local_unnamed_addr #2

declare dso_local %union.tree_node* @chainon(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_tree_list_stat(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_methodproto(%struct.c_parser* %parser) unnamed_addr #5 !dbg !4041 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4043, metadata !DIExpression()), !dbg !4046
  %call = tail call fastcc i32 @c_parser_objc_method_type(%struct.c_parser* %parser) #7, !dbg !4047
  call void @llvm.dbg.value(metadata i32 %call, metadata !4044, metadata !DIExpression()), !dbg !4046
  tail call void @objc_set_method_type(i32 %call) #6, !dbg !4048
  %objc_pq_context = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !4049
  %bf.load = load i8, i8* %objc_pq_context, align 2, !dbg !4050
  %bf.set = or i8 %bf.load, 16, !dbg !4050
  store i8 %bf.set, i8* %objc_pq_context, align 2, !dbg !4050
  %call1 = tail call fastcc %union.tree_node* @c_parser_objc_method_decl(%struct.c_parser* %parser) #7, !dbg !4051
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4045, metadata !DIExpression()), !dbg !4046
  %bf.load3 = load i8, i8* %objc_pq_context, align 2, !dbg !4052
  %bf.clear4 = and i8 %bf.load3, -17, !dbg !4052
  store i8 %bf.clear4, i8* %objc_pq_context, align 2, !dbg !4052
  tail call void @objc_add_method_declaration(%union.tree_node* %call1) #6, !dbg !4053
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !4054
  ret void, !dbg !4055
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @c_parser_objc_method_type(%struct.c_parser* %parser) unnamed_addr #5 !dbg !4056 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4060, metadata !DIExpression()), !dbg !4061
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4062
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !4063
  %bf.load = load i32, i32* %0, align 8, !dbg !4063
  %trunc = trunc i32 %bf.load to i8, !dbg !4064
  switch i8 %trunc, label %sw.default [
    i8 4, label %sw.bb
    i8 5, label %sw.bb1
  ], !dbg !4064

sw.bb:                                            ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4065
  br label %return, !dbg !4067

sw.bb1:                                           ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4068
  br label %return, !dbg !4069

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6415, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4070
  br label %return, !dbg !4071

return:                                           ; preds = %sw.default, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ 191, %sw.default ], [ 64, %sw.bb1 ], [ 63, %sw.bb ], !dbg !4061
  ret i32 %retval.0, !dbg !4072
}

declare dso_local void @objc_set_method_type(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_objc_method_decl(%struct.c_parser* %parser) unnamed_addr #5 !dbg !4073 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4075, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4076, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4078, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata i8 0, metadata !4079, metadata !DIExpression()), !dbg !4096
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !4097
  %tobool = icmp eq i8 %call, 0, !dbg !4097
  br i1 %tobool, label %if.end, label %if.then, !dbg !4099

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4100
  %call1 = tail call fastcc %union.tree_node* @c_parser_objc_type_name(%struct.c_parser* %parser) #7, !dbg !4102
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4076, metadata !DIExpression()), !dbg !4096
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !4103
  br label %if.end, !dbg !4104

if.end:                                           ; preds = %entry, %if.then
  %type.0 = phi %union.tree_node* [ %call1, %if.then ], [ null, %entry ], !dbg !4096
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !4076, metadata !DIExpression()), !dbg !4096
  %call2 = tail call fastcc %union.tree_node* @c_parser_objc_selector(%struct.c_parser* %parser) #7, !dbg !4105
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4077, metadata !DIExpression()), !dbg !4096
  %tobool3 = icmp eq %union.tree_node* %call2, null, !dbg !4106
  br i1 %tobool3, label %if.then6, label %lor.lhs.false, !dbg !4107

lor.lhs.false:                                    ; preds = %if.end
  %call4 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !4108
  %tobool5 = icmp eq i8 %call4, 0, !dbg !4108
  br i1 %tobool5, label %if.end56, label %if.then6, !dbg !4109

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4080, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4083, metadata !DIExpression()), !dbg !4110
  br label %while.cond, !dbg !4111

while.cond:                                       ; preds = %cleanup, %if.then6
  %list.0 = phi %union.tree_node* [ null, %if.then6 ], [ %list.1, %cleanup ], !dbg !4112
  %tsel.0 = phi %union.tree_node* [ %call2, %if.then6 ], [ %tsel.1, %cleanup ], !dbg !4113
  %retval.0 = phi %union.tree_node* [ undef, %if.then6 ], [ %retval.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %tsel.0, metadata !4080, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !4083, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4084, metadata !DIExpression()), !dbg !4114
  %call7 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #7, !dbg !4115
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4115
  br i1 %tobool8, label %cleanup, label %if.end10, !dbg !4117

if.end10:                                         ; preds = %while.cond
  %call11 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !4118
  %tobool12 = icmp eq i8 %call11, 0, !dbg !4118
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !4120

if.then13:                                        ; preds = %if.end10
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4121
  %call14 = tail call fastcc %union.tree_node* @c_parser_objc_type_name(%struct.c_parser* %parser) #7, !dbg !4123
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !4084, metadata !DIExpression()), !dbg !4114
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !4124
  br label %if.end15, !dbg !4125

if.end15:                                         ; preds = %if.end10, %if.then13
  %atype.0 = phi %union.tree_node* [ %call14, %if.then13 ], [ null, %if.end10 ], !dbg !4114
  call void @llvm.dbg.value(metadata %union.tree_node* %atype.0, metadata !4084, metadata !DIExpression()), !dbg !4114
  %call16 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !4126
  %tobool17 = icmp eq i8 %call16, 0, !dbg !4126
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !4128

if.then18:                                        ; preds = %if.end15
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !4129
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4131
  br label %cleanup, !dbg !4132

if.end19:                                         ; preds = %if.end15
  %call20 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4133
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call20, i64 0, i32 1, !dbg !4134
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !4134
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4086, metadata !DIExpression()), !dbg !4114
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4135
  %call21 = tail call %union.tree_node* @objc_build_keyword_decl(%union.tree_node* %tsel.0, %union.tree_node* %atype.0, %union.tree_node* %1) #6, !dbg !4136
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !4087, metadata !DIExpression()), !dbg !4114
  %call22 = tail call %union.tree_node* @chainon(%union.tree_node* %list.0, %union.tree_node* %call21) #6, !dbg !4137
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !4083, metadata !DIExpression()), !dbg !4110
  %call23 = tail call fastcc %union.tree_node* @c_parser_objc_selector(%struct.c_parser* %parser) #7, !dbg !4138
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !4080, metadata !DIExpression()), !dbg !4110
  %tobool24 = icmp eq %union.tree_node* %call23, null, !dbg !4139
  br i1 %tobool24, label %land.lhs.true, label %if.end29, !dbg !4141

land.lhs.true:                                    ; preds = %if.end19
  %call25 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 18) #7, !dbg !4142
  %tobool27 = icmp eq i8 %call25, 0, !dbg !4142
  br i1 %tobool27, label %if.end29, label %cleanup, !dbg !4143

if.end29:                                         ; preds = %land.lhs.true, %if.end19
  br label %cleanup, !dbg !4144

cleanup:                                          ; preds = %land.lhs.true, %while.cond, %if.end29, %if.then18
  %list.1 = phi %union.tree_node* [ %list.0, %if.then18 ], [ %call22, %if.end29 ], [ %list.0, %while.cond ], [ %call22, %land.lhs.true ], !dbg !4110
  %tsel.1 = phi %union.tree_node* [ %tsel.0, %if.then18 ], [ %call23, %if.end29 ], [ %tsel.0, %while.cond ], [ null, %land.lhs.true ], !dbg !4110
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then18 ], [ 0, %if.end29 ], [ 3, %while.cond ], [ 3, %land.lhs.true ]
  %retval.1 = phi %union.tree_node* [ %0, %if.then18 ], [ %retval.0, %if.end29 ], [ %retval.0, %while.cond ], [ %retval.0, %land.lhs.true ]
  call void @llvm.dbg.value(metadata %union.tree_node* %tsel.1, metadata !4080, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1, metadata !4083, metadata !DIExpression()), !dbg !4110
  switch i32 %cleanup.dest.slot.0, label %cleanup52.loopexit1 [
    i32 0, label %while.cond
    i32 3, label %while.end
  ], !llvm.loop !4145

while.end:                                        ; preds = %cleanup
  %list.1.lcssa13 = phi %union.tree_node* [ %list.1, %cleanup ], !dbg !4110
  %retval.1.lcssa10 = phi %union.tree_node* [ %retval.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa13, metadata !4083, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa13, metadata !4083, metadata !DIExpression()), !dbg !4110
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa13, metadata !4083, metadata !DIExpression()), !dbg !4110
  %call32 = tail call %union.tree_node* @make_node_stat(i32 2) #6, !dbg !4146
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !4078, metadata !DIExpression()), !dbg !4096
  br label %while.cond33, !dbg !4147

while.cond33:                                     ; preds = %cleanup48, %while.end
  %ellipsis.0 = phi i8 [ 0, %while.end ], [ %ellipsis.1, %cleanup48 ], !dbg !4096
  %parms.0 = phi %union.tree_node* [ %call32, %while.end ], [ %parms.1, %cleanup48 ], !dbg !4148
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.0, metadata !4078, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata i8 %ellipsis.0, metadata !4079, metadata !DIExpression()), !dbg !4096
  %call34 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !4149
  %tobool35 = icmp eq i8 %call34, 0, !dbg !4147
  br i1 %tobool35, label %cleanup52.loopexit, label %while.body36, !dbg !4147

while.body36:                                     ; preds = %while.cond33
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4150
  %call37 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 44) #7, !dbg !4151
  %tobool38 = icmp eq i8 %call37, 0, !dbg !4151
  br i1 %tobool38, label %if.end40, label %if.then39, !dbg !4153

if.then39:                                        ; preds = %while.body36
  call void @llvm.dbg.value(metadata i8 1, metadata !4079, metadata !DIExpression()), !dbg !4096
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4154
  br label %cleanup48, !dbg !4156

if.end40:                                         ; preds = %while.body36
  %call41 = tail call fastcc %struct.c_parm* @c_parser_parameter_declaration(%struct.c_parser* %parser, %union.tree_node* null) #7, !dbg !4157
  call void @llvm.dbg.value(metadata %struct.c_parm* %call41, metadata !4088, metadata !DIExpression()), !dbg !4158
  %cmp = icmp eq %struct.c_parm* %call41, null, !dbg !4159
  br i1 %cmp, label %cleanup48, label %if.end44, !dbg !4161

if.end44:                                         ; preds = %if.end40
  %call45 = tail call %union.tree_node* @grokparm(%struct.c_parm* nonnull %call41) #6, !dbg !4162
  %call46 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %call45) #6, !dbg !4162
  %call47 = tail call %union.tree_node* @chainon(%union.tree_node* %parms.0, %union.tree_node* %call46) #6, !dbg !4163
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !4078, metadata !DIExpression()), !dbg !4096
  br label %cleanup48, !dbg !4164

cleanup48:                                        ; preds = %if.end40, %if.end44, %if.then39
  %ellipsis.1 = phi i8 [ 1, %if.then39 ], [ %ellipsis.0, %if.end44 ], [ %ellipsis.0, %if.end40 ], !dbg !4096
  %parms.1 = phi %union.tree_node* [ %parms.0, %if.then39 ], [ %call47, %if.end44 ], [ %parms.0, %if.end40 ], !dbg !4110
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then39 ], [ true, %if.end44 ], [ false, %if.end40 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.1, metadata !4078, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata i8 %ellipsis.1, metadata !4079, metadata !DIExpression()), !dbg !4096
  br i1 %cleanup.dest.slot.1, label %while.cond33, label %cleanup52.loopexit, !llvm.loop !4165

cleanup52.loopexit:                               ; preds = %cleanup48, %while.cond33
  %ellipsis.3.ph = phi i8 [ %ellipsis.0, %while.cond33 ], [ %ellipsis.1, %cleanup48 ]
  %parms.3.ph = phi %union.tree_node* [ %parms.0, %while.cond33 ], [ %parms.1, %cleanup48 ]
  br label %cleanup52

cleanup52.loopexit1:                              ; preds = %cleanup
  %cleanup.dest.slot.0.lcssa = phi i32 [ %cleanup.dest.slot.0, %cleanup ]
  %retval.1.lcssa = phi %union.tree_node* [ %retval.1, %cleanup ]
  br label %cleanup52

cleanup52:                                        ; preds = %cleanup52.loopexit1, %cleanup52.loopexit
  %retval.111 = phi %union.tree_node* [ %retval.1.lcssa10, %cleanup52.loopexit ], [ %retval.1.lcssa, %cleanup52.loopexit1 ]
  %ellipsis.3 = phi i8 [ %ellipsis.3.ph, %cleanup52.loopexit ], [ 0, %cleanup52.loopexit1 ], !dbg !4096
  %parms.3 = phi %union.tree_node* [ %parms.3.ph, %cleanup52.loopexit ], [ null, %cleanup52.loopexit1 ], !dbg !4096
  %sel.0 = phi %union.tree_node* [ %list.1.lcssa13, %cleanup52.loopexit ], [ %call2, %cleanup52.loopexit1 ], !dbg !4096
  %cleanup.dest.slot.2 = phi i32 [ 0, %cleanup52.loopexit ], [ %cleanup.dest.slot.0.lcssa, %cleanup52.loopexit1 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %sel.0, metadata !4077, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.3, metadata !4078, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata i8 %ellipsis.3, metadata !4079, metadata !DIExpression()), !dbg !4096
  %cond = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond, label %if.end56, label %cleanup58

if.end56:                                         ; preds = %lor.lhs.false, %cleanup52
  %ellipsis.4 = phi i8 [ 0, %lor.lhs.false ], [ %ellipsis.3, %cleanup52 ], !dbg !4166
  %parms.4 = phi %union.tree_node* [ null, %lor.lhs.false ], [ %parms.3, %cleanup52 ], !dbg !4167
  %sel.1 = phi %union.tree_node* [ %call2, %lor.lhs.false ], [ %sel.0, %cleanup52 ], !dbg !4168
  call void @llvm.dbg.value(metadata %union.tree_node* %sel.1, metadata !4077, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata %union.tree_node* %parms.4, metadata !4078, metadata !DIExpression()), !dbg !4096
  call void @llvm.dbg.value(metadata i8 %ellipsis.4, metadata !4079, metadata !DIExpression()), !dbg !4096
  %call57 = tail call %union.tree_node* @objc_build_method_signature(%union.tree_node* %type.0, %union.tree_node* %sel.1, %union.tree_node* %parms.4, i8 zeroext %ellipsis.4) #6, !dbg !4169
  br label %cleanup58, !dbg !4170

cleanup58:                                        ; preds = %cleanup52, %if.end56
  %retval.2 = phi %union.tree_node* [ %retval.111, %cleanup52 ], [ %call57, %if.end56 ], !dbg !4096
  ret %union.tree_node* %retval.2, !dbg !4171
}

declare dso_local void @objc_add_method_declaration(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_objc_type_name(%struct.c_parser* %parser) unnamed_addr #5 !dbg !4172 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4174, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4175, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata %struct.c_type_name* null, metadata !4176, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4177, metadata !DIExpression()), !dbg !4180
  br label %while.cond, !dbg !4181

while.cond:                                       ; preds = %cleanup, %entry
  %quals.0 = phi %union.tree_node* [ null, %entry ], [ %quals.1, %cleanup ], !dbg !4180
  call void @llvm.dbg.value(metadata %union.tree_node* %quals.0, metadata !4175, metadata !DIExpression()), !dbg !4180
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4182
  call void @llvm.dbg.value(metadata %struct.c_token* %call, metadata !4178, metadata !DIExpression()), !dbg !4183
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !4184
  %bf.load = load i32, i32* %0, align 8, !dbg !4184
  %bf.clear = and i32 %bf.load, 255, !dbg !4184
  %cmp = icmp eq i32 %bf.clear, 74, !dbg !4186
  br i1 %cmp, label %land.lhs.true, label %cleanup, !dbg !4187

land.lhs.true:                                    ; preds = %while.cond
  %bf.clear2 = and i32 %bf.load, 16711680, !dbg !4188
  %cmp3 = icmp eq i32 %bf.clear2, 1376256, !dbg !4189
  br i1 %cmp3, label %if.then, label %lor.lhs.false, !dbg !4190

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp7 = icmp eq i32 %bf.clear2, 1441792, !dbg !4191
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !4192

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i32 %bf.clear2, 1507328, !dbg !4193
  br i1 %cmp12, label %if.then, label %lor.lhs.false13, !dbg !4194

lor.lhs.false13:                                  ; preds = %lor.lhs.false8
  %cmp17 = icmp eq i32 %bf.clear2, 1572864, !dbg !4195
  br i1 %cmp17, label %if.then, label %lor.lhs.false18, !dbg !4196

lor.lhs.false18:                                  ; preds = %lor.lhs.false13
  %cmp22 = icmp eq i32 %bf.clear2, 1638400, !dbg !4197
  br i1 %cmp22, label %if.then, label %lor.lhs.false23, !dbg !4198

lor.lhs.false23:                                  ; preds = %lor.lhs.false18
  %cmp27 = icmp eq i32 %bf.clear2, 1703936, !dbg !4199
  br i1 %cmp27, label %if.then, label %cleanup, !dbg !4200

if.then:                                          ; preds = %lor.lhs.false23, %lor.lhs.false18, %lor.lhs.false13, %lor.lhs.false8, %lor.lhs.false, %land.lhs.true
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 1, !dbg !4201
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !4201
  %call28 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %1) #6, !dbg !4201
  %call29 = tail call %union.tree_node* @chainon(%union.tree_node* %quals.0, %union.tree_node* %call28) #6, !dbg !4203
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4175, metadata !DIExpression()), !dbg !4180
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4204
  br label %cleanup, !dbg !4205

cleanup:                                          ; preds = %while.cond, %lor.lhs.false23, %if.then
  %quals.1 = phi %union.tree_node* [ %call29, %if.then ], [ %quals.0, %lor.lhs.false23 ], [ %quals.0, %while.cond ], !dbg !4180
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then ], [ false, %lor.lhs.false23 ], [ false, %while.cond ]
  call void @llvm.dbg.value(metadata %union.tree_node* %quals.1, metadata !4175, metadata !DIExpression()), !dbg !4180
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !4206

while.end:                                        ; preds = %cleanup
  %quals.1.lcssa = phi %union.tree_node* [ %quals.1, %cleanup ], !dbg !4180
  call void @llvm.dbg.value(metadata %union.tree_node* %quals.1.lcssa, metadata !4175, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata %union.tree_node* %quals.1.lcssa, metadata !4175, metadata !DIExpression()), !dbg !4180
  call void @llvm.dbg.value(metadata %union.tree_node* %quals.1.lcssa, metadata !4175, metadata !DIExpression()), !dbg !4180
  %call30 = tail call fastcc zeroext i8 @c_parser_next_token_starts_typename(%struct.c_parser* %parser) #7, !dbg !4207
  %tobool = icmp eq i8 %call30, 0, !dbg !4207
  br i1 %tobool, label %if.end33, label %if.then31, !dbg !4209

if.then31:                                        ; preds = %while.end
  %call32 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !4210
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call32, metadata !4176, metadata !DIExpression()), !dbg !4180
  br label %if.end33, !dbg !4211

if.end33:                                         ; preds = %while.end, %if.then31
  %type_name.0 = phi %struct.c_type_name* [ %call32, %if.then31 ], [ null, %while.end ], !dbg !4180
  call void @llvm.dbg.value(metadata %struct.c_type_name* %type_name.0, metadata !4176, metadata !DIExpression()), !dbg !4180
  %tobool34 = icmp eq %struct.c_type_name* %type_name.0, null, !dbg !4212
  br i1 %tobool34, label %if.end37, label %if.then35, !dbg !4214

if.then35:                                        ; preds = %if.end33
  %call36 = tail call %union.tree_node* @groktypename(%struct.c_type_name* nonnull %type_name.0, %union.tree_node** null, i8* null) #6, !dbg !4215
  call void @llvm.dbg.value(metadata %union.tree_node* %call36, metadata !4177, metadata !DIExpression()), !dbg !4180
  br label %if.end37, !dbg !4216

if.end37:                                         ; preds = %if.end33, %if.then35
  %type.0 = phi %union.tree_node* [ %call36, %if.then35 ], [ null, %if.end33 ], !dbg !4180
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !4177, metadata !DIExpression()), !dbg !4180
  %call38 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* %quals.1.lcssa, %union.tree_node* %type.0) #6, !dbg !4217
  ret %union.tree_node* %call38, !dbg !4218
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_objc_selector(%struct.c_parser* %parser) unnamed_addr #5 !dbg !4219 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4221, metadata !DIExpression()), !dbg !4224
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4225
  call void @llvm.dbg.value(metadata %struct.c_token* %call, metadata !4222, metadata !DIExpression()), !dbg !4224
  %value1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 1, !dbg !4226
  %0 = load %union.tree_node*, %union.tree_node** %value1, align 8, !dbg !4226
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4223, metadata !DIExpression()), !dbg !4224
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !4227
  %bf.load = load i32, i32* %1, align 8, !dbg !4227
  %bf.clear = and i32 %bf.load, 255, !dbg !4227
  %cmp = icmp eq i32 %bf.clear, 53, !dbg !4229
  br i1 %cmp, label %if.then, label %if.end, !dbg !4230

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4231
  br label %cleanup, !dbg !4233

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i32 %bf.clear, 74, !dbg !4234
  br i1 %cmp4, label %if.end6, label %cleanup, !dbg !4236

if.end6:                                          ; preds = %if.end
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4237
  %trunc = trunc i32 %bf.lshr to i8, !dbg !4238
  switch i8 %trunc, label %cleanup [
    i8 33, label %sw.bb
    i8 34, label %sw.bb
    i8 35, label %sw.bb
    i8 36, label %sw.bb
    i8 37, label %sw.bb
    i8 38, label %sw.bb
    i8 39, label %sw.bb
    i8 40, label %sw.bb
    i8 41, label %sw.bb
    i8 42, label %sw.bb
    i8 43, label %sw.bb
    i8 44, label %sw.bb
    i8 45, label %sw.bb
    i8 46, label %sw.bb
    i8 47, label %sw.bb
    i8 49, label %sw.bb
    i8 48, label %sw.bb
    i8 50, label %sw.bb
    i8 51, label %sw.bb
    i8 1, label %sw.bb
    i8 2, label %sw.bb
    i8 3, label %sw.bb
    i8 7, label %sw.bb
    i8 9, label %sw.bb
    i8 10, label %sw.bb
    i8 12, label %sw.bb
    i8 13, label %sw.bb
    i8 21, label %sw.bb
    i8 22, label %sw.bb
    i8 23, label %sw.bb
    i8 24, label %sw.bb
    i8 25, label %sw.bb
    i8 26, label %sw.bb
    i8 28, label %sw.bb
    i8 29, label %sw.bb
    i8 30, label %sw.bb
    i8 31, label %sw.bb
    i8 32, label %sw.bb
    i8 69, label %sw.bb
  ], !dbg !4238

sw.bb:                                            ; preds = %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6, %if.end6
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4239
  br label %cleanup, !dbg !4241

cleanup:                                          ; preds = %if.end, %if.end6, %sw.bb, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ %0, %sw.bb ], [ null, %if.end ], [ null, %if.end6 ], !dbg !4224
  ret %union.tree_node* %retval.0, !dbg !4242
}

declare dso_local %union.tree_node* @objc_build_keyword_decl(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_node_stat(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.c_parm* @c_parser_parameter_declaration(%struct.c_parser* %parser, %union.tree_node* %attrs) unnamed_addr #5 !dbg !4243 {
entry:
  %dummy = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4247, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !4248, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4252, metadata !DIExpression()), !dbg !4254
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4254
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %dummy) #8, !dbg !4255
  call void @llvm.dbg.value(metadata i8 0, metadata !4253, metadata !DIExpression()), !dbg !4254
  store i8 0, i8* %dummy, align 1, !dbg !4256
  %call = tail call fastcc zeroext i8 @c_parser_next_token_starts_declspecs(%struct.c_parser* %parser) #7, !dbg !4257
  %tobool = icmp eq i8 %call, 0, !dbg !4257
  br i1 %tobool, label %if.then, label %if.end, !dbg !4259

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.67, i64 0, i64 0)) #7, !dbg !4260
  tail call fastcc void @c_parser_skip_to_end_of_parameter(%struct.c_parser* %parser) #7, !dbg !4262
  br label %cleanup, !dbg !4263

if.end:                                           ; preds = %entry
  %call1 = tail call %struct.c_declspecs* @build_null_declspecs() #6, !dbg !4264
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %call1, metadata !4249, metadata !DIExpression()), !dbg !4254
  %tobool2 = icmp eq %union.tree_node* %attrs, null, !dbg !4265
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !4267

if.then3:                                         ; preds = %if.end
  %call4 = tail call %struct.c_declspecs* @declspecs_add_attrs(%struct.c_declspecs* %call1, %union.tree_node* nonnull %attrs) #6, !dbg !4268
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4248, metadata !DIExpression()), !dbg !4254
  br label %if.end5, !dbg !4270

if.end5:                                          ; preds = %if.end, %if.then3
  tail call fastcc void @c_parser_declspecs(%struct.c_parser* %parser, %struct.c_declspecs* %call1, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1) #7, !dbg !4271
  %call6 = tail call %struct.c_declspecs* @finish_declspecs(%struct.c_declspecs* %call1) #6, !dbg !4272
  tail call void @pending_xref_error() #6, !dbg !4273
  %attrs7 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call1, i64 0, i32 3, !dbg !4274
  %0 = load %union.tree_node*, %union.tree_node** %attrs7, align 8, !dbg !4274
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !4251, metadata !DIExpression()), !dbg !4254
  store %union.tree_node* null, %union.tree_node** %attrs7, align 8, !dbg !4275
  %type_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call1, i64 0, i32 6, !dbg !4276
  %bf.load = load i8, i8* %type_seen_p, align 8, !dbg !4276
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !4276
  %bf.clear = and i8 %bf.lshr, 1, !dbg !4276
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4254
  %call9 = call fastcc %struct.c_declarator* @c_parser_declarator(%struct.c_parser* %parser, i8 zeroext %bf.clear, i32 2, i8* nonnull %dummy) #7, !dbg !4277
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call9, metadata !4250, metadata !DIExpression()), !dbg !4254
  %cmp = icmp eq %struct.c_declarator* %call9, null, !dbg !4278
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !4280

if.then11:                                        ; preds = %if.end5
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 19, i8* null) #7, !dbg !4281
  br label %cleanup, !dbg !4283

if.end12:                                         ; preds = %if.end5
  %call13 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 52) #7, !dbg !4284
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4284
  br i1 %tobool14, label %if.end17, label %if.then15, !dbg !4286

if.then15:                                        ; preds = %if.end12
  %call16 = call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !4287
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !4252, metadata !DIExpression()), !dbg !4254
  br label %if.end17, !dbg !4288

if.end17:                                         ; preds = %if.end12, %if.then15
  %postfix_attrs.0 = phi %union.tree_node* [ %call16, %if.then15 ], [ null, %if.end12 ], !dbg !4254
  call void @llvm.dbg.value(metadata %union.tree_node* %postfix_attrs.0, metadata !4252, metadata !DIExpression()), !dbg !4254
  %call18 = call %union.tree_node* @chainon(%union.tree_node* %postfix_attrs.0, %union.tree_node* %0) #6, !dbg !4289
  %call19 = call %struct.c_parm* @build_c_parm(%struct.c_declspecs* %call1, %union.tree_node* %call18, %struct.c_declarator* nonnull %call9) #6, !dbg !4290
  br label %cleanup, !dbg !4291

cleanup:                                          ; preds = %if.end17, %if.then11, %if.then
  %retval.0 = phi %struct.c_parm* [ null, %if.then11 ], [ %call19, %if.end17 ], [ null, %if.then ], !dbg !4254
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !4253, metadata !DIExpression(DW_OP_deref)), !dbg !4254
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %dummy) #8, !dbg !4292
  ret %struct.c_parm* %retval.0, !dbg !4292
}

declare dso_local %union.tree_node* @grokparm(%struct.c_parm*) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_build_method_signature(%union.tree_node*, %union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @c_parser_next_token_starts_typename(%struct.c_parser* %parser) unnamed_addr #0 !dbg !4293 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4297, metadata !DIExpression()), !dbg !4299
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4300
  call void @llvm.dbg.value(metadata %struct.c_token* %call, metadata !4298, metadata !DIExpression()), !dbg !4299
  %call1 = tail call fastcc zeroext i8 @c_token_starts_typename(%struct.c_token* %call) #7, !dbg !4301
  ret i8 %call1, !dbg !4302
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) unnamed_addr #5 !dbg !4303 {
entry:
  %dummy = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4307, metadata !DIExpression()), !dbg !4312
  %call = tail call %struct.c_declspecs* @build_null_declspecs() #6, !dbg !4313
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %call, metadata !4308, metadata !DIExpression()), !dbg !4312
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !4311, metadata !DIExpression(DW_OP_deref)), !dbg !4312
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %dummy) #8, !dbg !4314
  call void @llvm.dbg.value(metadata i8 0, metadata !4311, metadata !DIExpression()), !dbg !4312
  store i8 0, i8* %dummy, align 1, !dbg !4315
  tail call fastcc void @c_parser_declspecs(%struct.c_parser* %parser, %struct.c_declspecs* %call, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1) #7, !dbg !4316
  %declspecs_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call, i64 0, i32 6, !dbg !4317
  %bf.load = load i8, i8* %declspecs_seen_p, align 8, !dbg !4317
  %bf.clear = and i8 %bf.load, 2, !dbg !4317
  %tobool = icmp eq i8 %bf.clear, 0, !dbg !4319
  br i1 %tobool, label %if.then, label %if.end, !dbg !4320

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0)) #7, !dbg !4321
  br label %cleanup, !dbg !4323

if.end:                                           ; preds = %entry
  tail call void @pending_xref_error() #6, !dbg !4324
  %call1 = tail call %struct.c_declspecs* @finish_declspecs(%struct.c_declspecs* %call) #6, !dbg !4325
  %bf.load2 = load i8, i8* %declspecs_seen_p, align 8, !dbg !4326
  %bf.lshr3 = lshr i8 %bf.load2, 2, !dbg !4326
  %bf.clear4 = and i8 %bf.lshr3, 1, !dbg !4326
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !4311, metadata !DIExpression(DW_OP_deref)), !dbg !4312
  %call6 = call fastcc %struct.c_declarator* @c_parser_declarator(%struct.c_parser* %parser, i8 zeroext %bf.clear4, i32 1, i8* nonnull %dummy) #7, !dbg !4327
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call6, metadata !4309, metadata !DIExpression()), !dbg !4312
  %cmp = icmp eq %struct.c_declarator* %call6, null, !dbg !4328
  br i1 %cmp, label %cleanup, label %if.end9, !dbg !4330

if.end9:                                          ; preds = %if.end
  store i64 16, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !4331
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !4331
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !4331
  %sub.ptr.sub = sub i64 %0, %1, !dbg !4331
  %cmp10 = icmp slt i64 %sub.ptr.sub, 16, !dbg !4331
  %2 = inttoptr i64 %1 to i8*, !dbg !4331
  br i1 %cmp10, label %cond.true, label %cond.end, !dbg !4331

cond.true:                                        ; preds = %if.end9
  call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 16) #6, !dbg !4331
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !4331
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !4331
  br label %cond.end, !dbg !4331

cond.end:                                         ; preds = %if.end9, %cond.true
  %3 = phi i8* [ %2, %if.end9 ], [ %.pre1, %cond.true ], !dbg !4331
  %4 = phi i64 [ 16, %if.end9 ], [ %.pre, %cond.true ], !dbg !4331
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !4331
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !4331
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !4331
  %cmp13 = icmp eq i8* %add.ptr, %5, !dbg !4331
  %6 = ptrtoint i8* %5 to i64, !dbg !4331
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !4331
  br i1 %cmp13, label %cond.true15, label %cond.end19, !dbg !4331

cond.true15:                                      ; preds = %cond.end
  %bf.load16 = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !4331
  %bf.set = or i8 %bf.load16, 2, !dbg !4331
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !4331
  br label %cond.end19, !dbg !4331

cond.end19:                                       ; preds = %cond.end, %cond.true15
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !4331
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !4331
  %conv25 = sext i32 %8 to i64, !dbg !4331
  %add = add nsw i64 %7, %conv25, !dbg !4331
  %neg = xor i32 %8, -1, !dbg !4331
  %conv26 = sext i32 %neg to i64, !dbg !4331
  %and = and i64 %add, %conv26, !dbg !4331
  %9 = inttoptr i64 %and to i8*, !dbg !4331
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !4331
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !4331
  %sub.ptr.sub29 = sub i64 %and, %10, !dbg !4331
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !4331
  %sub.ptr.sub32 = sub i64 %11, %10, !dbg !4331
  %cmp33 = icmp sgt i64 %sub.ptr.sub29, %sub.ptr.sub32, !dbg !4331
  %12 = bitcast i8* %5 to %struct.c_type_name*, !dbg !4331
  br i1 %cmp33, label %cond.true35, label %cond.end37, !dbg !4331

cond.true35:                                      ; preds = %cond.end19
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !4331
  br label %cond.end37, !dbg !4331

cond.end37:                                       ; preds = %cond.end19, %cond.true35
  %13 = phi i64 [ %and, %cond.end19 ], [ %11, %cond.true35 ], !dbg !4331
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !4331
  call void @llvm.dbg.value(metadata %struct.c_type_name* %12, metadata !4310, metadata !DIExpression()), !dbg !4312
  %specs39 = bitcast i8* %5 to %struct.c_declspecs**, !dbg !4332
  store %struct.c_declspecs* %call, %struct.c_declspecs** %specs39, align 8, !dbg !4333
  %declarator40 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !4334
  %14 = bitcast i8* %declarator40 to %struct.c_declarator**, !dbg !4334
  store %struct.c_declarator* %call6, %struct.c_declarator** %14, align 8, !dbg !4335
  br label %cleanup, !dbg !4336

cleanup:                                          ; preds = %if.end, %cond.end37, %if.then
  %retval.0 = phi %struct.c_type_name* [ %12, %cond.end37 ], [ null, %if.then ], [ null, %if.end ], !dbg !4312
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !4311, metadata !DIExpression(DW_OP_deref)), !dbg !4312
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %dummy) #8, !dbg !4337
  ret %struct.c_type_name* %retval.0, !dbg !4337
}

declare dso_local %union.tree_node* @groktypename(%struct.c_type_name*, %union.tree_node**, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @c_token_starts_typename(%struct.c_token* %token) unnamed_addr #5 !dbg !4338 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_token* %token, metadata !4342, metadata !DIExpression()), !dbg !4343
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %token, i64 0, i32 0, !dbg !4344
  %bf.load = load i32, i32* %0, align 8, !dbg !4344
  %trunc = trunc i32 %bf.load to i8, !dbg !4345
  switch i8 %trunc, label %return [
    i8 53, label %sw.bb
    i8 74, label %sw.bb7
    i8 3, label %sw.bb13
  ], !dbg !4345

sw.bb:                                            ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !4346
  %trunc2 = trunc i32 %bf.lshr to i8, !dbg !4348
  switch i8 %trunc2, label %sw.default [
    i8 0, label %return
    i8 3, label %sw.bb4
    i8 1, label %sw.bb5
    i8 2, label %sw.bb6
  ], !dbg !4348

sw.bb4:                                           ; preds = %sw.bb
  br label %return, !dbg !4349

sw.bb5:                                           ; preds = %sw.bb
  br label %return, !dbg !4351

sw.bb6:                                           ; preds = %sw.bb
  %1 = load i32, i32* @c_language, align 4, !dbg !4352
  %and = and i32 %1, 1, !dbg !4352
  %cmp = icmp eq i32 %and, 0, !dbg !4352
  br i1 %cmp, label %cond.true, label %return, !dbg !4352

cond.true:                                        ; preds = %sw.bb6
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4352
  br label %return, !dbg !4352

sw.default:                                       ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 376, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4353
  %bf.load8.pre = load i32, i32* %0, align 8, !dbg !4354
  br label %sw.bb7, !dbg !4355

sw.bb7:                                           ; preds = %entry, %sw.default
  %bf.load8 = phi i32 [ %bf.load, %entry ], [ %bf.load8.pre, %sw.default ], !dbg !4354
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !4354
  %trunc1 = trunc i32 %bf.lshr9 to i8, !dbg !4356
  switch i8 %trunc1, label %sw.default12 [
    i8 1, label %return
    i8 2, label %return
    i8 7, label %return
    i8 10, label %return
    i8 13, label %return
    i8 28, label %return
    i8 29, label %return
    i8 30, label %return
    i8 31, label %return
    i8 32, label %return
    i8 60, label %return
    i8 61, label %return
    i8 62, label %return
    i8 69, label %return
    i8 33, label %return
    i8 34, label %return
    i8 35, label %return
    i8 50, label %return
    i8 3, label %return
    i8 9, label %return
    i8 12, label %return
    i8 52, label %return
    i8 63, label %return
    i8 64, label %return
    i8 15, label %return
  ], !dbg !4356

sw.default12:                                     ; preds = %sw.bb7
  br label %return, !dbg !4357

sw.bb13:                                          ; preds = %entry
  %2 = load i32, i32* @c_language, align 4, !dbg !4359
  %3 = trunc i32 %2 to i8, !dbg !4361
  %4 = and i8 %3, 1, !dbg !4361
  br label %return, !dbg !4361

return:                                           ; preds = %sw.bb6, %entry, %sw.bb13, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %cond.true, %sw.bb, %sw.default12, %sw.bb5, %sw.bb4
  %retval.0 = phi i8 [ 0, %sw.default12 ], [ 1, %sw.bb5 ], [ 1, %sw.bb4 ], [ 0, %sw.bb ], [ 1, %sw.bb6 ], [ 1, %cond.true ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ %4, %sw.bb13 ], [ 0, %entry ], !dbg !4361
  ret i8 %retval.0, !dbg !4362
}

declare dso_local %struct.c_declspecs* @build_null_declspecs() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_declspecs(%struct.c_parser* %parser, %struct.c_declspecs* %specs, i8 zeroext %scspec_ok, i8 zeroext %typespec_ok, i8 zeroext %start_attr_ok) unnamed_addr #5 !dbg !4363 {
entry:
  %t = alloca %struct.c_typespec, align 8
  %tmp = alloca %struct.c_typespec, align 8
  %tmp137 = alloca %struct.c_typespec, align 8
  %tmp148 = alloca %struct.c_typespec, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4367, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %specs, metadata !4368, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 %scspec_ok, metadata !4369, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 %typespec_ok, metadata !4370, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 %start_attr_ok, metadata !4371, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 %start_attr_ok, metadata !4372, metadata !DIExpression()), !dbg !4399
  %type_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %specs, i64 0, i32 6, !dbg !4400
  %bf.load = load i8, i8* %type_seen_p, align 8, !dbg !4400
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !4400
  %bf.clear = and i8 %bf.lshr, 1, !dbg !4400
  call void @llvm.dbg.value(metadata i8 %bf.clear, metadata !4373, metadata !DIExpression()), !dbg !4399
  %0 = bitcast %struct.c_typespec* %t to i8*, !dbg !4401
  %tobool27 = icmp ne i8 %typespec_ok, 0, !dbg !4402
  %kind54 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %t, i64 0, i32 0, !dbg !4404
  %spec61 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %t, i64 0, i32 1, !dbg !4404
  %expr62 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %t, i64 0, i32 2, !dbg !4404
  %expr_const_operands63 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %t, i64 0, i32 3, !dbg !4404
  %tobool79 = icmp eq i8 %typespec_ok, 0, !dbg !4405
  %1 = bitcast %struct.c_typespec* %tmp148 to i8*, !dbg !4407
  %2 = bitcast %struct.c_typespec* %tmp137 to i8*, !dbg !4407
  %3 = bitcast %union.tree_node** %spec61 to i8**, !dbg !4407
  %4 = bitcast %struct.c_typespec* %tmp to i8*, !dbg !4407
  %objc_need_raw_identifier = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !4409
  %5 = bitcast %union.tree_node** %spec61 to i64*, !dbg !4407
  %tobool104 = icmp eq i8 %scspec_ok, 0, !dbg !4411
  br label %while.cond, !dbg !4413

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %attrs_ok.0 = phi i8 [ %start_attr_ok, %entry ], [ %attrs_ok.3, %while.cond.backedge ], !dbg !4399
  %seen_type.0 = phi i8 [ %bf.clear, %entry ], [ %seen_type.3, %while.cond.backedge ], !dbg !4414
  call void @llvm.dbg.value(metadata i8 %seen_type.0, metadata !4373, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 %attrs_ok.0, metadata !4372, metadata !DIExpression()), !dbg !4399
  %call = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !4415
  %tobool = icmp eq i8 %call, 0, !dbg !4415
  br i1 %tobool, label %lor.lhs.false, label %while.body, !dbg !4416

lor.lhs.false:                                    ; preds = %while.cond
  %call2 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 74) #7, !dbg !4417
  %tobool4 = icmp eq i8 %call2, 0, !dbg !4417
  br i1 %tobool4, label %lor.rhs, label %while.body, !dbg !4418

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i32, i32* @c_language, align 4, !dbg !4419
  %and = and i32 %6, 1, !dbg !4419
  %cmp = icmp eq i32 %and, 0, !dbg !4419
  br i1 %cmp, label %out, label %land.rhs, !dbg !4420

land.rhs:                                         ; preds = %lor.rhs
  %call6 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 3) #7, !dbg !4421
  %tobool8 = icmp eq i8 %call6, 0, !dbg !4420
  br i1 %tobool8, label %out, label %while.body, !dbg !4413

while.body:                                       ; preds = %land.rhs, %lor.lhs.false, %while.cond
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4422
  %call9 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4423
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call9, i64 0, i32 2, !dbg !4424
  %7 = load i32, i32* %location, align 8, !dbg !4424
  call void @llvm.dbg.value(metadata i32 %7, metadata !4383, metadata !DIExpression()), !dbg !4401
  %call10 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !4425
  %tobool11 = icmp eq i8 %call10, 0, !dbg !4425
  br i1 %tobool11, label %if.end67, label %if.then, !dbg !4426

if.then:                                          ; preds = %while.body
  %call12 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4427
  %value13 = getelementptr inbounds %struct.c_token, %struct.c_token* %call12, i64 0, i32 1, !dbg !4428
  %8 = load %union.tree_node*, %union.tree_node** %value13, align 8, !dbg !4428
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4384, metadata !DIExpression()), !dbg !4429
  %call14 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4430
  %9 = getelementptr inbounds %struct.c_token, %struct.c_token* %call14, i64 0, i32 0, !dbg !4431
  %bf.load15 = load i32, i32* %9, align 8, !dbg !4431
  %bf.lshr16 = lshr i32 %bf.load15, 8, !dbg !4431
  %bf.clear17 = and i32 %bf.lshr16, 255, !dbg !4431
  call void @llvm.dbg.value(metadata i32 %bf.clear17, metadata !4387, metadata !DIExpression()), !dbg !4429
  %cmp18 = icmp eq i32 %bf.clear17, 3, !dbg !4432
  br i1 %cmp18, label %if.then20, label %if.end, !dbg !4433

if.then20:                                        ; preds = %if.then
  %call21 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4434
  %10 = getelementptr inbounds %struct.c_token, %struct.c_token* %call21, i64 0, i32 0, !dbg !4435
  %bf.load22 = load i32, i32* %10, align 8, !dbg !4435
  %bf.lshr23 = lshr i32 %bf.load22, 16, !dbg !4435
  %11 = trunc i32 %bf.lshr23 to i8, !dbg !4434
  %conv25 = add i8 %11, 120, !dbg !4434
  call void @llvm.dbg.value(metadata i8 %conv25, metadata !4389, metadata !DIExpression()), !dbg !4436
  %call26 = call %struct.c_declspecs* @declspecs_add_addrspace(%struct.c_declspecs* %specs, i8 zeroext %conv25) #6, !dbg !4437
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4438
  call void @llvm.dbg.value(metadata i8 1, metadata !4372, metadata !DIExpression()), !dbg !4399
  br label %cleanup160

if.end:                                           ; preds = %if.then
  %tobool30 = icmp eq i8 %seen_type.0, 0, !dbg !4439
  %or.cond.not = and i1 %tobool30, %tobool27, !dbg !4440
  %bf.clear17.off = add nsw i32 %bf.clear17, -1, !dbg !4441
  %switch = icmp ult i32 %bf.clear17.off, 2, !dbg !4441
  %or.cond4 = and i1 %or.cond.not, %switch, !dbg !4440
  br i1 %or.cond4, label %if.end37, label %cleanup160, !dbg !4440

if.end37:                                         ; preds = %if.end
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4442
  call void @llvm.dbg.value(metadata i8 1, metadata !4373, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 1, metadata !4372, metadata !DIExpression()), !dbg !4399
  %cmp38 = icmp eq i32 %bf.clear17, 1, !dbg !4443
  br i1 %cmp38, label %land.lhs.true40, label %if.else, !dbg !4444

land.lhs.true40:                                  ; preds = %if.end37
  %12 = load i32, i32* @c_language, align 4, !dbg !4445
  %and41 = and i32 %12, 1, !dbg !4445
  %cmp42 = icmp eq i32 %and41, 0, !dbg !4445
  br i1 %cmp42, label %if.then48, label %lor.lhs.false44, !dbg !4446

lor.lhs.false44:                                  ; preds = %land.lhs.true40
  %call45 = call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 3) #7, !dbg !4447
  %tobool47 = icmp eq i8 %call45, 0, !dbg !4447
  br i1 %tobool47, label %if.else, label %if.then48, !dbg !4448

if.then48:                                        ; preds = %lor.lhs.false44, %land.lhs.true40
  store i32 4, i32* %kind54, align 8, !dbg !4449
  %call50 = call %union.tree_node* @lookup_name(%union.tree_node* %8) #6, !dbg !4451
  br label %if.end64, !dbg !4452

if.else:                                          ; preds = %lor.lhs.false44, %if.end37
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4392, metadata !DIExpression()), !dbg !4404
  %13 = load i32, i32* @c_language, align 4, !dbg !4453
  %and51 = and i32 %13, 1, !dbg !4453
  %cmp52 = icmp eq i32 %and51, 0, !dbg !4453
  br i1 %cmp52, label %cond.true, label %cond.end, !dbg !4453

cond.true:                                        ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1520, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4453
  br label %cond.end, !dbg !4453

cond.end:                                         ; preds = %if.else, %cond.true
  store i32 5, i32* %kind54, align 8, !dbg !4454
  %call55 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 3) #7, !dbg !4455
  %tobool56 = icmp eq i8 %call55, 0, !dbg !4455
  br i1 %tobool56, label %if.end59, label %if.then57, !dbg !4457

if.then57:                                        ; preds = %cond.end
  %call58 = call fastcc %union.tree_node* @c_parser_objc_protocol_refs(%struct.c_parser* %parser) #7, !dbg !4458
  call void @llvm.dbg.value(metadata %union.tree_node* %call58, metadata !4392, metadata !DIExpression()), !dbg !4404
  br label %if.end59, !dbg !4459

if.end59:                                         ; preds = %cond.end, %if.then57
  %proto.0 = phi %union.tree_node* [ %call58, %if.then57 ], [ null, %cond.end ], !dbg !4404
  call void @llvm.dbg.value(metadata %union.tree_node* %proto.0, metadata !4392, metadata !DIExpression()), !dbg !4404
  %call60 = call %union.tree_node* @objc_get_protocol_qualified_type(%union.tree_node* %8, %union.tree_node* %proto.0) #6, !dbg !4460
  br label %if.end64

if.end64:                                         ; preds = %if.end59, %if.then48
  %storemerge = phi %union.tree_node* [ %call60, %if.end59 ], [ %call50, %if.then48 ], !dbg !4461
  store %union.tree_node* %storemerge, %union.tree_node** %spec61, align 8, !dbg !4461
  store %union.tree_node* null, %union.tree_node** %expr62, align 8, !dbg !4461
  store i8 1, i8* %expr_const_operands63, align 8, !dbg !4461
  call void @llvm.dbg.value(metadata %struct.c_typespec* %t, metadata !4374, metadata !DIExpression(DW_OP_deref)), !dbg !4401
  %call65 = call %struct.c_declspecs* @declspecs_add_type(i32 %7, %struct.c_declspecs* %specs, %struct.c_typespec* nonnull byval(%struct.c_typespec) align 8 %t) #6, !dbg !4462
  br label %cleanup160, !dbg !4463, !llvm.loop !4464

if.end67:                                         ; preds = %while.body
  %call68 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 3) #7, !dbg !4466
  %tobool69 = icmp eq i8 %call68, 0, !dbg !4466
  br i1 %tobool69, label %if.end93, label %if.then70, !dbg !4467

if.then70:                                        ; preds = %if.end67
  %14 = load i32, i32* @c_language, align 4, !dbg !4468
  %and72 = and i32 %14, 1, !dbg !4468
  %cmp73 = icmp eq i32 %and72, 0, !dbg !4468
  br i1 %cmp73, label %cond.true75, label %cond.end77, !dbg !4468

cond.true75:                                      ; preds = %if.then70
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1536, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4468
  br label %cond.end77, !dbg !4468

cond.end77:                                       ; preds = %if.then70, %cond.true75
  %tobool82 = icmp ne i8 %seen_type.0, 0, !dbg !4469
  %or.cond2 = or i1 %tobool79, %tobool82, !dbg !4470
  br i1 %or.cond2, label %cleanup160, label %if.end84, !dbg !4470

if.end84:                                         ; preds = %cond.end77
  %call85 = call fastcc %union.tree_node* @c_parser_objc_protocol_refs(%struct.c_parser* %parser) #7, !dbg !4471
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !4395, metadata !DIExpression()), !dbg !4472
  store i32 5, i32* %kind54, align 8, !dbg !4473
  %call87 = call %union.tree_node* @objc_get_protocol_qualified_type(%union.tree_node* null, %union.tree_node* %call85) #6, !dbg !4474
  store %union.tree_node* %call87, %union.tree_node** %spec61, align 8, !dbg !4475
  store %union.tree_node* null, %union.tree_node** %expr62, align 8, !dbg !4476
  store i8 1, i8* %expr_const_operands63, align 8, !dbg !4477
  call void @llvm.dbg.value(metadata %struct.c_typespec* %t, metadata !4374, metadata !DIExpression(DW_OP_deref)), !dbg !4401
  %call91 = call %struct.c_declspecs* @declspecs_add_type(i32 %7, %struct.c_declspecs* %specs, %struct.c_typespec* nonnull byval(%struct.c_typespec) align 8 %t) #6, !dbg !4478
  br label %cleanup160, !dbg !4479, !llvm.loop !4464

if.end93:                                         ; preds = %if.end67
  %call94 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 74) #7, !dbg !4480
  %tobool95 = icmp eq i8 %call94, 0, !dbg !4480
  br i1 %tobool95, label %cond.true96, label %cond.end98, !dbg !4480

cond.true96:                                      ; preds = %if.end93
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1547, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4480
  br label %cond.end98, !dbg !4480

cond.end98:                                       ; preds = %if.end93, %cond.true96
  %call100 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4481
  %15 = getelementptr inbounds %struct.c_token, %struct.c_token* %call100, i64 0, i32 0, !dbg !4482
  %bf.load101 = load i32, i32* %15, align 8, !dbg !4482
  %bf.lshr102 = lshr i32 %bf.load101, 16, !dbg !4482
  %trunc = trunc i32 %bf.lshr102 to i8, !dbg !4483
  switch i8 %trunc, label %cleanup160 [
    i8 0, label %sw.bb
    i8 4, label %sw.bb
    i8 5, label %sw.bb
    i8 6, label %sw.bb
    i8 8, label %sw.bb
    i8 11, label %sw.bb
    i8 14, label %sw.bb
    i8 1, label %sw.bb110
    i8 2, label %sw.bb110
    i8 7, label %sw.bb110
    i8 10, label %sw.bb110
    i8 13, label %sw.bb110
    i8 28, label %sw.bb110
    i8 29, label %sw.bb110
    i8 30, label %sw.bb110
    i8 31, label %sw.bb110
    i8 32, label %sw.bb110
    i8 60, label %sw.bb110
    i8 61, label %sw.bb110
    i8 62, label %sw.bb110
    i8 69, label %sw.bb110
    i8 63, label %sw.bb110
    i8 64, label %sw.bb110
    i8 15, label %sw.bb110
    i8 33, label %sw.bb128
    i8 34, label %sw.bb133
    i8 35, label %sw.bb133
    i8 50, label %sw.bb141
    i8 3, label %sw.bb150
    i8 9, label %sw.bb150
    i8 12, label %sw.bb150
    i8 52, label %sw.bb154
  ], !dbg !4483

sw.bb:                                            ; preds = %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98
  br i1 %tobool104, label %cleanup160, label %if.end106, !dbg !4484

if.end106:                                        ; preds = %sw.bb
  call void @llvm.dbg.value(metadata i8 1, metadata !4372, metadata !DIExpression()), !dbg !4399
  %call107 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4485
  %value108 = getelementptr inbounds %struct.c_token, %struct.c_token* %call107, i64 0, i32 1, !dbg !4486
  %16 = load %union.tree_node*, %union.tree_node** %value108, align 8, !dbg !4486
  %call109 = call %struct.c_declspecs* @declspecs_add_scspec(%struct.c_declspecs* %specs, %union.tree_node* %16) #6, !dbg !4487
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4488
  br label %cleanup160, !dbg !4489

sw.bb110:                                         ; preds = %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98, %cond.end98
  br i1 %tobool79, label %cleanup160, label %if.end113, !dbg !4490

if.end113:                                        ; preds = %sw.bb110
  call void @llvm.dbg.value(metadata i8 1, metadata !4372, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 1, metadata !4373, metadata !DIExpression()), !dbg !4399
  %17 = load i32, i32* @c_language, align 4, !dbg !4491
  %and114 = and i32 %17, 1, !dbg !4491
  %cmp115 = icmp eq i32 %and114, 0, !dbg !4491
  br i1 %cmp115, label %if.end120, label %if.then117, !dbg !4492

if.then117:                                       ; preds = %if.end113
  %bf.load118 = load i8, i8* %objc_need_raw_identifier, align 2, !dbg !4493
  %bf.set = or i8 %bf.load118, 32, !dbg !4493
  store i8 %bf.set, i8* %objc_need_raw_identifier, align 2, !dbg !4493
  br label %if.end120, !dbg !4494

if.end120:                                        ; preds = %if.end113, %if.then117
  store i32 0, i32* %kind54, align 8, !dbg !4495
  %call122 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4496
  %value123 = getelementptr inbounds %struct.c_token, %struct.c_token* %call122, i64 0, i32 1, !dbg !4497
  %18 = bitcast %union.tree_node** %value123 to i64*, !dbg !4497
  %19 = load i64, i64* %18, align 8, !dbg !4497
  store i64 %19, i64* %5, align 8, !dbg !4498
  store %union.tree_node* null, %union.tree_node** %expr62, align 8, !dbg !4499
  store i8 1, i8* %expr_const_operands63, align 8, !dbg !4500
  call void @llvm.dbg.value(metadata %struct.c_typespec* %t, metadata !4374, metadata !DIExpression(DW_OP_deref)), !dbg !4401
  %call127 = call %struct.c_declspecs* @declspecs_add_type(i32 %7, %struct.c_declspecs* %specs, %struct.c_typespec* nonnull byval(%struct.c_typespec) align 8 %t) #6, !dbg !4501
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4502
  br label %cleanup160, !dbg !4503

sw.bb128:                                         ; preds = %cond.end98
  br i1 %tobool79, label %cleanup160, label %if.end131, !dbg !4504

if.end131:                                        ; preds = %sw.bb128
  call void @llvm.dbg.value(metadata i8 1, metadata !4372, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 1, metadata !4373, metadata !DIExpression()), !dbg !4399
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8, !dbg !4505
  call fastcc void @c_parser_enum_specifier(%struct.c_typespec* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !4505
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 32, i1 false), !dbg !4505
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8, !dbg !4505
  call void @llvm.dbg.value(metadata %struct.c_typespec* %t, metadata !4374, metadata !DIExpression(DW_OP_deref)), !dbg !4401
  %call132 = call %struct.c_declspecs* @declspecs_add_type(i32 %7, %struct.c_declspecs* %specs, %struct.c_typespec* nonnull byval(%struct.c_typespec) align 8 %t) #6, !dbg !4506
  br label %cleanup160, !dbg !4507

sw.bb133:                                         ; preds = %cond.end98, %cond.end98
  br i1 %tobool79, label %cleanup160, label %if.end136, !dbg !4508

if.end136:                                        ; preds = %sw.bb133
  call void @llvm.dbg.value(metadata i8 1, metadata !4372, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 1, metadata !4373, metadata !DIExpression()), !dbg !4399
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4509
  call fastcc void @c_parser_struct_or_union_specifier(%struct.c_typespec* nonnull sret %tmp137, %struct.c_parser* %parser) #7, !dbg !4509
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 32, i1 false), !dbg !4509
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !4509
  %20 = load i8*, i8** %3, align 8, !dbg !4510
  %call139 = call i32 @invoke_plugin_callbacks(i32 1, i8* %20) #6, !dbg !4511
  call void @llvm.dbg.value(metadata %struct.c_typespec* %t, metadata !4374, metadata !DIExpression(DW_OP_deref)), !dbg !4401
  %call140 = call %struct.c_declspecs* @declspecs_add_type(i32 %7, %struct.c_declspecs* %specs, %struct.c_typespec* nonnull byval(%struct.c_typespec) align 8 %t) #6, !dbg !4512
  br label %cleanup160, !dbg !4513

sw.bb141:                                         ; preds = %cond.end98
  %tobool145 = icmp ne i8 %seen_type.0, 0, !dbg !4514
  %or.cond3 = or i1 %tobool79, %tobool145, !dbg !4516
  br i1 %or.cond3, label %cleanup160, label %if.end147, !dbg !4516

if.end147:                                        ; preds = %sw.bb141
  call void @llvm.dbg.value(metadata i8 1, metadata !4372, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 1, metadata !4373, metadata !DIExpression()), !dbg !4399
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4517
  call fastcc void @c_parser_typeof_specifier(%struct.c_typespec* nonnull sret %tmp148, %struct.c_parser* %parser) #7, !dbg !4517
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 32, i1 false), !dbg !4517
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4517
  call void @llvm.dbg.value(metadata %struct.c_typespec* %t, metadata !4374, metadata !DIExpression(DW_OP_deref)), !dbg !4401
  %call149 = call %struct.c_declspecs* @declspecs_add_type(i32 %7, %struct.c_declspecs* %specs, %struct.c_typespec* nonnull byval(%struct.c_typespec) align 8 %t) #6, !dbg !4518
  br label %cleanup160, !dbg !4519

sw.bb150:                                         ; preds = %cond.end98, %cond.end98, %cond.end98
  call void @llvm.dbg.value(metadata i8 1, metadata !4372, metadata !DIExpression()), !dbg !4399
  %call151 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4520
  %value152 = getelementptr inbounds %struct.c_token, %struct.c_token* %call151, i64 0, i32 1, !dbg !4521
  %21 = load %union.tree_node*, %union.tree_node** %value152, align 8, !dbg !4521
  %call153 = call %struct.c_declspecs* @declspecs_add_qual(%struct.c_declspecs* %specs, %union.tree_node* %21) #6, !dbg !4522
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4523
  br label %cleanup160, !dbg !4524

sw.bb154:                                         ; preds = %cond.end98
  %tobool155 = icmp eq i8 %attrs_ok.0, 0, !dbg !4525
  br i1 %tobool155, label %cleanup160, label %if.end157, !dbg !4527

if.end157:                                        ; preds = %sw.bb154
  %call158 = call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !4528
  call void @llvm.dbg.value(metadata %union.tree_node* %call158, metadata !4382, metadata !DIExpression()), !dbg !4401
  %call159 = call %struct.c_declspecs* @declspecs_add_attrs(%struct.c_declspecs* %specs, %union.tree_node* %call158) #6, !dbg !4529
  br label %cleanup160, !dbg !4530

cleanup160:                                       ; preds = %sw.bb, %sw.bb110, %sw.bb128, %sw.bb133, %sw.bb154, %if.end, %if.end106, %if.end120, %if.end131, %if.end136, %if.end147, %sw.bb150, %if.end157, %cond.end98, %sw.bb141, %if.end84, %cond.end77, %if.then20, %if.end64
  %attrs_ok.3 = phi i8 [ 1, %if.then20 ], [ 1, %if.end64 ], [ %attrs_ok.0, %if.end ], [ %attrs_ok.0, %cond.end77 ], [ %attrs_ok.0, %if.end84 ], [ %attrs_ok.0, %sw.bb ], [ %attrs_ok.0, %sw.bb110 ], [ %attrs_ok.0, %sw.bb128 ], [ %attrs_ok.0, %sw.bb133 ], [ %attrs_ok.0, %sw.bb141 ], [ 0, %sw.bb154 ], [ %attrs_ok.0, %cond.end98 ], [ %attrs_ok.0, %if.end157 ], [ 1, %sw.bb150 ], [ 1, %if.end147 ], [ 1, %if.end136 ], [ 1, %if.end131 ], [ 1, %if.end120 ], [ 1, %if.end106 ], !dbg !4399
  %seen_type.3 = phi i8 [ %seen_type.0, %if.then20 ], [ 1, %if.end64 ], [ %seen_type.0, %if.end ], [ %seen_type.0, %cond.end77 ], [ 0, %if.end84 ], [ %seen_type.0, %sw.bb ], [ %seen_type.0, %sw.bb110 ], [ %seen_type.0, %sw.bb128 ], [ %seen_type.0, %sw.bb133 ], [ %seen_type.0, %sw.bb141 ], [ %seen_type.0, %sw.bb154 ], [ %seen_type.0, %cond.end98 ], [ %seen_type.0, %if.end157 ], [ %seen_type.0, %sw.bb150 ], [ 1, %if.end147 ], [ 1, %if.end136 ], [ 1, %if.end131 ], [ 1, %if.end120 ], [ %seen_type.0, %if.end106 ], !dbg !4414
  %cleanup.dest.slot.2 = phi i32 [ 2, %if.then20 ], [ 2, %if.end64 ], [ 3, %if.end ], [ 3, %cond.end77 ], [ 2, %if.end84 ], [ 5, %sw.bb ], [ 5, %sw.bb110 ], [ 5, %sw.bb128 ], [ 5, %sw.bb133 ], [ 5, %sw.bb141 ], [ 5, %sw.bb154 ], [ 5, %cond.end98 ], [ 0, %if.end157 ], [ 0, %sw.bb150 ], [ 0, %if.end147 ], [ 0, %if.end136 ], [ 0, %if.end131 ], [ 0, %if.end120 ], [ 0, %if.end106 ]
  call void @llvm.dbg.value(metadata i8 %seen_type.3, metadata !4373, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.value(metadata i8 %attrs_ok.3, metadata !4372, metadata !DIExpression()), !dbg !4399
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !4465
  switch i32 %cleanup.dest.slot.2, label %unreachable [
    i32 0, label %while.cond.backedge
    i32 2, label %while.cond.backedge
    i32 3, label %out
    i32 5, label %out
  ]

while.cond.backedge:                              ; preds = %cleanup160, %cleanup160
  br label %while.cond, !dbg !4399, !llvm.loop !4464

out:                                              ; preds = %land.rhs, %lor.rhs, %cleanup160, %cleanup160
  call void @llvm.dbg.label(metadata !4398), !dbg !4531
  ret void, !dbg !4532

unreachable:                                      ; preds = %cleanup160
  unreachable
}

declare dso_local void @pending_xref_error() local_unnamed_addr #2

declare dso_local %struct.c_declspecs* @finish_declspecs(%struct.c_declspecs*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.c_declarator* @c_parser_declarator(%struct.c_parser* %parser, i8 zeroext %type_seen_p, i32 %kind, i8* %seen_id) unnamed_addr #5 !dbg !4533 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4538, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i8 %type_seen_p, metadata !4539, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i32 %kind, metadata !4540, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i8* %seen_id, metadata !4541, metadata !DIExpression()), !dbg !4546
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 6) #7, !dbg !4547
  %tobool = icmp eq i8 %call, 0, !dbg !4547
  br i1 %tobool, label %if.end, label %if.then, !dbg !4548

if.then:                                          ; preds = %entry
  %call1 = tail call %struct.c_declspecs* @build_null_declspecs() #6, !dbg !4549
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %call1, metadata !4542, metadata !DIExpression()), !dbg !4550
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4551
  tail call fastcc void @c_parser_declspecs(%struct.c_parser* %parser, %struct.c_declspecs* %call1, i8 zeroext 0, i8 zeroext 0, i8 zeroext 1) #7, !dbg !4552
  %call2 = tail call fastcc %struct.c_declarator* @c_parser_declarator(%struct.c_parser* %parser, i8 zeroext %type_seen_p, i32 %kind, i8* %seen_id) #7, !dbg !4553
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call2, metadata !4545, metadata !DIExpression()), !dbg !4550
  %cmp = icmp eq %struct.c_declarator* %call2, null, !dbg !4554
  br i1 %cmp, label %return, label %if.else, !dbg !4556

if.else:                                          ; preds = %if.then
  %call4 = tail call %struct.c_declarator* @make_pointer_declarator(%struct.c_declspecs* %call1, %struct.c_declarator* nonnull %call2) #6, !dbg !4557
  br label %return, !dbg !4558

if.end:                                           ; preds = %entry
  %call6 = tail call fastcc %struct.c_declarator* @c_parser_direct_declarator(%struct.c_parser* %parser, i8 zeroext %type_seen_p, i32 %kind, i8* %seen_id) #7, !dbg !4559
  br label %return, !dbg !4560

return:                                           ; preds = %if.else, %if.then, %if.end
  %retval.1 = phi %struct.c_declarator* [ %call6, %if.end ], [ %call4, %if.else ], [ null, %if.then ], !dbg !4546
  ret %struct.c_declarator* %retval.1, !dbg !4561
}

declare dso_local %struct.c_declspecs* @declspecs_add_addrspace(%struct.c_declspecs*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_get_protocol_qualified_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.c_declspecs* @declspecs_add_type(i32, %struct.c_declspecs*, %struct.c_typespec* byval(%struct.c_typespec) align 8) local_unnamed_addr #2

declare dso_local %struct.c_declspecs* @declspecs_add_scspec(%struct.c_declspecs*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_enum_specifier(%struct.c_typespec* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !4562 {
entry:
  %the_enum = alloca %struct.c_enum_contents, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp71 = alloca %struct.c_typespec, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4566, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.declare(metadata %struct.c_typespec* %agg.result, metadata !4567, metadata !DIExpression()), !dbg !4591
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4569, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 0, metadata !4571, metadata !DIExpression()), !dbg !4590
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 33) #7, !dbg !4592
  %tobool = icmp eq i8 %call, 0, !dbg !4592
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4592

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1675, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4592
  br label %cond.end, !dbg !4592

cond.end:                                         ; preds = %entry, %cond.true
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4593
  call void @llvm.dbg.value(metadata i32 undef, metadata !4570, metadata !DIExpression()), !dbg !4590
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4594
  %call2 = tail call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !4595
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !4568, metadata !DIExpression()), !dbg !4590
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4596
  %location4 = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 2, !dbg !4597
  %0 = load i32, i32* %location4, align 8, !dbg !4597
  call void @llvm.dbg.value(metadata i32 %0, metadata !4570, metadata !DIExpression()), !dbg !4590
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4598
  tail call fastcc void @c_parser_set_source_position_from_token(%struct.c_token* %call5) #7, !dbg !4599
  %call6 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !4600
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4600
  br i1 %tobool7, label %if.end, label %if.then, !dbg !4602

if.then:                                          ; preds = %cond.end
  %call8 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4603
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call8, i64 0, i32 1, !dbg !4605
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !4605
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !4569, metadata !DIExpression()), !dbg !4590
  %call9 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4606
  %location10 = getelementptr inbounds %struct.c_token, %struct.c_token* %call9, i64 0, i32 2, !dbg !4607
  %2 = load i32, i32* %location10, align 8, !dbg !4607
  call void @llvm.dbg.value(metadata i32 %2, metadata !4571, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 %2, metadata !4570, metadata !DIExpression()), !dbg !4590
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4608
  br label %if.end, !dbg !4609

if.end:                                           ; preds = %cond.end, %if.then
  %ident_loc.0 = phi i32 [ %2, %if.then ], [ 0, %cond.end ], !dbg !4590
  %enum_loc.0 = phi i32 [ %2, %if.then ], [ %0, %cond.end ], !dbg !4590
  %ident.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %cond.end ], !dbg !4590
  call void @llvm.dbg.value(metadata %union.tree_node* %ident.0, metadata !4569, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 %enum_loc.0, metadata !4570, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.value(metadata i32 %ident_loc.0, metadata !4571, metadata !DIExpression()), !dbg !4590
  %call11 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !4610
  %tobool12 = icmp eq i8 %call11, 0, !dbg !4610
  br i1 %tobool12, label %if.else62, label %if.then13, !dbg !4611

if.then13:                                        ; preds = %if.end
  %3 = bitcast %struct.c_enum_contents* %the_enum to i8*, !dbg !4612
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #8, !dbg !4612
  call void @llvm.dbg.value(metadata %struct.c_enum_contents* %the_enum, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4613
  %call14 = call %union.tree_node* @start_enum(i32 %enum_loc.0, %struct.c_enum_contents* nonnull %the_enum, %union.tree_node* %ident.0) #6, !dbg !4614
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !4579, metadata !DIExpression()), !dbg !4613
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4581, metadata !DIExpression()), !dbg !4613
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4615
  %value27 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !4616
  br label %while.cond, !dbg !4619

while.cond:                                       ; preds = %cleanup, %if.then13
  %values.0 = phi %union.tree_node* [ null, %if.then13 ], [ %values.1, %cleanup ], !dbg !4613
  call void @llvm.dbg.value(metadata %union.tree_node* %values.0, metadata !4581, metadata !DIExpression()), !dbg !4613
  call void @llvm.dbg.value(metadata i32 0, metadata !4588, metadata !DIExpression()), !dbg !4620
  %call15 = call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !4621
  %tobool16 = icmp eq i8 %call15, 0, !dbg !4621
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !4623

if.then17:                                        ; preds = %while.cond
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !4624
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 42, i8* null) #7, !dbg !4626
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4627
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4581, metadata !DIExpression()), !dbg !4613
  br label %cleanup, !dbg !4628

if.end18:                                         ; preds = %while.cond
  %call19 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4629
  call void @llvm.dbg.value(metadata %struct.c_token* %call19, metadata !4587, metadata !DIExpression()), !dbg !4620
  %value20 = getelementptr inbounds %struct.c_token, %struct.c_token* %call19, i64 0, i32 1, !dbg !4630
  %5 = load %union.tree_node*, %union.tree_node** %value20, align 8, !dbg !4630
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !4582, metadata !DIExpression()), !dbg !4620
  call fastcc void @c_parser_set_source_position_from_token(%struct.c_token* %call19) #7, !dbg !4631
  %location21 = getelementptr inbounds %struct.c_token, %struct.c_token* %call19, i64 0, i32 2, !dbg !4632
  %6 = load i32, i32* %location21, align 8, !dbg !4632
  call void @llvm.dbg.value(metadata i32 %6, metadata !4589, metadata !DIExpression()), !dbg !4620
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4633
  %call22 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 0) #7, !dbg !4634
  %tobool23 = icmp eq i8 %call22, 0, !dbg !4634
  br i1 %tobool23, label %if.end28, label %if.then24, !dbg !4635

if.then24:                                        ; preds = %if.end18
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4636
  %call25 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4637
  %location26 = getelementptr inbounds %struct.c_token, %struct.c_token* %call25, i64 0, i32 2, !dbg !4638
  %7 = load i32, i32* %location26, align 8, !dbg !4638
  call void @llvm.dbg.value(metadata i32 %7, metadata !4589, metadata !DIExpression()), !dbg !4620
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !4639
  %8 = load %union.tree_node*, %union.tree_node** %value27, align 8, !dbg !4640
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4584, metadata !DIExpression()), !dbg !4620
  br label %if.end28, !dbg !4641

if.end28:                                         ; preds = %if.end18, %if.then24
  %enum_value.0 = phi %union.tree_node* [ %8, %if.then24 ], [ null, %if.end18 ], !dbg !4642
  %value_loc.0 = phi i32 [ %7, %if.then24 ], [ %6, %if.end18 ], !dbg !4620
  call void @llvm.dbg.value(metadata i32 %value_loc.0, metadata !4589, metadata !DIExpression()), !dbg !4620
  call void @llvm.dbg.value(metadata %union.tree_node* %enum_value.0, metadata !4584, metadata !DIExpression()), !dbg !4620
  call void @llvm.dbg.value(metadata %struct.c_enum_contents* %the_enum, metadata !4572, metadata !DIExpression(DW_OP_deref)), !dbg !4613
  %call29 = call %union.tree_node* @build_enumerator(i32 %value_loc.0, %struct.c_enum_contents* nonnull %the_enum, %union.tree_node* %5, %union.tree_node* %enum_value.0) #6, !dbg !4643
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4585, metadata !DIExpression()), !dbg !4620
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4644
  store %union.tree_node* %values.0, %union.tree_node** %chain, align 8, !dbg !4645
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !4581, metadata !DIExpression()), !dbg !4613
  call void @llvm.dbg.value(metadata i8 0, metadata !4586, metadata !DIExpression()), !dbg !4620
  %call30 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !4646
  %tobool31 = icmp eq i8 %call30, 0, !dbg !4646
  br i1 %tobool31, label %if.end35, label %if.then32, !dbg !4648

if.then32:                                        ; preds = %if.end28
  %call33 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4649
  %location34 = getelementptr inbounds %struct.c_token, %struct.c_token* %call33, i64 0, i32 2, !dbg !4651
  %9 = load i32, i32* %location34, align 8, !dbg !4651
  call void @llvm.dbg.value(metadata i32 %9, metadata !4588, metadata !DIExpression()), !dbg !4620
  call void @llvm.dbg.value(metadata i8 1, metadata !4586, metadata !DIExpression()), !dbg !4620
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4652
  br label %if.end35, !dbg !4653

if.end35:                                         ; preds = %if.end28, %if.then32
  %seen_comma.0 = phi i8 [ 1, %if.then32 ], [ 0, %if.end28 ], !dbg !4620
  %comma_loc.0 = phi i32 [ %9, %if.then32 ], [ 0, %if.end28 ], !dbg !4620
  call void @llvm.dbg.value(metadata i32 %comma_loc.0, metadata !4588, metadata !DIExpression()), !dbg !4620
  call void @llvm.dbg.value(metadata i8 %seen_comma.0, metadata !4586, metadata !DIExpression()), !dbg !4620
  %call36 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !4654
  %tobool37 = icmp eq i8 %call36, 0, !dbg !4654
  br i1 %tobool37, label %if.end44, label %if.then38, !dbg !4656

if.then38:                                        ; preds = %if.end35
  %tobool39 = icmp eq i8 %seen_comma.0, 0, !dbg !4657
  %10 = load i32, i32* @flag_isoc99, align 4, !dbg !4660
  %tobool40 = icmp ne i32 %10, 0, !dbg !4660
  %or.cond = or i1 %tobool39, %tobool40, !dbg !4661
  br i1 %or.cond, label %if.end43, label %if.then41, !dbg !4661

if.then41:                                        ; preds = %if.then38
  %call42 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %comma_loc.0, i32 834, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.17, i64 0, i64 0)) #6, !dbg !4662
  br label %if.end43, !dbg !4662

if.end43:                                         ; preds = %if.then38, %if.then41
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4663
  br label %cleanup, !dbg !4664

if.end44:                                         ; preds = %if.end35
  %tobool45 = icmp eq i8 %seen_comma.0, 0, !dbg !4665
  br i1 %tobool45, label %if.then46, label %cleanup, !dbg !4667

if.then46:                                        ; preds = %if.end44
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i64 0, i64 0)) #7, !dbg !4668
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 42, i8* null) #7, !dbg !4670
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !4671
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4581, metadata !DIExpression()), !dbg !4613
  br label %cleanup, !dbg !4672

cleanup:                                          ; preds = %if.end44, %if.then46, %if.end43, %if.then17
  %values.1 = phi %union.tree_node* [ %4, %if.then17 ], [ %call29, %if.end43 ], [ %11, %if.then46 ], [ %call29, %if.end44 ], !dbg !4620
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then17 ], [ false, %if.end43 ], [ false, %if.then46 ], [ true, %if.end44 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %values.1, metadata !4581, metadata !DIExpression()), !dbg !4613
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !4673

while.end:                                        ; preds = %cleanup
  %values.1.lcssa = phi %union.tree_node* [ %values.1, %cleanup ], !dbg !4620
  call void @llvm.dbg.value(metadata %union.tree_node* %values.1.lcssa, metadata !4581, metadata !DIExpression()), !dbg !4613
  call void @llvm.dbg.value(metadata %union.tree_node* %values.1.lcssa, metadata !4581, metadata !DIExpression()), !dbg !4613
  call void @llvm.dbg.value(metadata %union.tree_node* %values.1.lcssa, metadata !4581, metadata !DIExpression()), !dbg !4613
  %call54 = call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !4675
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !4580, metadata !DIExpression()), !dbg !4613
  %call55 = call %union.tree_node* @nreverse(%union.tree_node* %values.1.lcssa) #6, !dbg !4676
  %call56 = call %union.tree_node* @chainon(%union.tree_node* %call2, %union.tree_node* %call54) #6, !dbg !4677
  %call57 = call %union.tree_node* @finish_enum(%union.tree_node* %call14, %union.tree_node* %call55, %union.tree_node* %call56) #6, !dbg !4678
  %spec = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 1, !dbg !4679
  store %union.tree_node* %call57, %union.tree_node** %spec, align 8, !dbg !4680
  %kind = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 0, !dbg !4681
  store i32 3, i32* %kind, align 8, !dbg !4682
  %expr = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 2, !dbg !4683
  store %union.tree_node* null, %union.tree_node** %expr, align 8, !dbg !4684
  %expr_const_operands = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 3, !dbg !4685
  store i8 1, i8* %expr_const_operands, align 8, !dbg !4686
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #8, !dbg !4687
  br label %cleanup85

if.else62:                                        ; preds = %if.end
  %tobool63 = icmp eq %union.tree_node* %ident.0, null, !dbg !4688
  br i1 %tobool63, label %if.then64, label %if.end70, !dbg !4690

if.then64:                                        ; preds = %if.else62
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)) #7, !dbg !4691
  %12 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !4693
  %spec65 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 1, !dbg !4694
  %13 = bitcast %union.tree_node** %spec65 to i64*, !dbg !4695
  store i64 %12, i64* %13, align 8, !dbg !4695
  %kind66 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 0, !dbg !4696
  store i32 1, i32* %kind66, align 8, !dbg !4697
  %expr67 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 2, !dbg !4698
  store %union.tree_node* null, %union.tree_node** %expr67, align 8, !dbg !4699
  %expr_const_operands68 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 3, !dbg !4700
  store i8 1, i8* %expr_const_operands68, align 8, !dbg !4701
  br label %cleanup85, !dbg !4702

if.end70:                                         ; preds = %if.else62
  %14 = bitcast %struct.c_typespec* %tmp71 to i8*, !dbg !4703
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #8, !dbg !4703
  call void @parser_xref_tag(%struct.c_typespec* nonnull sret %tmp71, i32 %ident_loc.0, i32 6, %union.tree_node* nonnull %ident.0) #6, !dbg !4703
  %15 = bitcast %struct.c_typespec* %agg.result to i8*, !dbg !4703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* nonnull align 8 %14, i64 32, i1 false), !dbg !4703
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #8, !dbg !4703
  %16 = load i32, i32* @pedantic, align 4, !dbg !4704
  %tobool72 = icmp eq i32 %16, 0, !dbg !4704
  br i1 %tobool72, label %cleanup85, label %land.lhs.true73, !dbg !4706

land.lhs.true73:                                  ; preds = %if.end70
  %spec74 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 1, !dbg !4707
  %17 = bitcast %union.tree_node** %spec74 to %struct.tree_type**, !dbg !4707
  %18 = load %struct.tree_type*, %struct.tree_type** %17, align 8, !dbg !4707
  %size = getelementptr inbounds %struct.tree_type, %struct.tree_type* %18, i64 0, i32 2, !dbg !4707
  %19 = load %union.tree_node*, %union.tree_node** %size, align 8, !dbg !4707
  %cmp = icmp eq %union.tree_node* %19, null, !dbg !4707
  br i1 %cmp, label %if.then77, label %cleanup85, !dbg !4708

if.then77:                                        ; preds = %land.lhs.true73
  %call83 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %enum_loc.0, i32 834, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20, i64 0, i64 0)) #6, !dbg !4709
  br label %cleanup85, !dbg !4711

cleanup85:                                        ; preds = %land.lhs.true73, %if.end70, %if.then77, %if.then64, %while.end
  ret void, !dbg !4712
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_struct_or_union_specifier(%struct.c_typespec* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !4713 {
entry:
  %struct_info = alloca %struct.c_struct_parse_info*, align 8
  %tmp = alloca %struct.c_typespec, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4715, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.declare(metadata %struct.c_typespec* %agg.result, metadata !4716, metadata !DIExpression()), !dbg !4737
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4718, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata i32 0, metadata !4720, metadata !DIExpression()), !dbg !4736
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4738
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !4739
  %bf.load = load i32, i32* %0, align 8, !dbg !4739
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4739
  %trunc = trunc i32 %bf.lshr to i8, !dbg !4740
  switch i8 %trunc, label %sw.default [
    i8 34, label %sw.epilog
    i8 35, label %sw.bb1
  ], !dbg !4740

sw.bb1:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i32 17, metadata !4721, metadata !DIExpression()), !dbg !4736
  br label %sw.epilog, !dbg !4741

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1841, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4743
  br label %sw.epilog, !dbg !4744

sw.epilog:                                        ; preds = %entry, %sw.default, %sw.bb1
  %code.0 = phi i32 [ undef, %sw.default ], [ 17, %sw.bb1 ], [ 16, %entry ]
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !4721, metadata !DIExpression()), !dbg !4736
  %call2 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4745
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call2, i64 0, i32 2, !dbg !4746
  %1 = load i32, i32* %location, align 8, !dbg !4746
  call void @llvm.dbg.value(metadata i32 %1, metadata !4719, metadata !DIExpression()), !dbg !4736
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4747
  %call3 = tail call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !4748
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !4717, metadata !DIExpression()), !dbg !4736
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4749
  tail call fastcc void @c_parser_set_source_position_from_token(%struct.c_token* %call4) #7, !dbg !4750
  %call5 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !4751
  %tobool = icmp eq i8 %call5, 0, !dbg !4751
  br i1 %tobool, label %if.end, label %if.then, !dbg !4753

if.then:                                          ; preds = %sw.epilog
  %call6 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4754
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call6, i64 0, i32 1, !dbg !4756
  %2 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !4756
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !4718, metadata !DIExpression()), !dbg !4736
  %call7 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4757
  %location8 = getelementptr inbounds %struct.c_token, %struct.c_token* %call7, i64 0, i32 2, !dbg !4758
  %3 = load i32, i32* %location8, align 8, !dbg !4758
  call void @llvm.dbg.value(metadata i32 %3, metadata !4720, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata i32 %3, metadata !4719, metadata !DIExpression()), !dbg !4736
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4759
  br label %if.end, !dbg !4760

if.end:                                           ; preds = %sw.epilog, %if.then
  %ident_loc.0 = phi i32 [ %3, %if.then ], [ 0, %sw.epilog ], !dbg !4736
  %struct_loc.0 = phi i32 [ %3, %if.then ], [ %1, %sw.epilog ], !dbg !4736
  %ident.0 = phi %union.tree_node* [ %2, %if.then ], [ null, %sw.epilog ], !dbg !4736
  call void @llvm.dbg.value(metadata %union.tree_node* %ident.0, metadata !4718, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata i32 %struct_loc.0, metadata !4719, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.value(metadata i32 %ident_loc.0, metadata !4720, metadata !DIExpression()), !dbg !4736
  %call9 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !4761
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4761
  br i1 %tobool10, label %if.else77, label %if.then11, !dbg !4762

if.then11:                                        ; preds = %if.end
  %4 = bitcast %struct.c_struct_parse_info** %struct_info to i8*, !dbg !4763
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4763
  call void @llvm.dbg.value(metadata %struct.c_struct_parse_info** %struct_info, metadata !4722, metadata !DIExpression(DW_OP_deref)), !dbg !4764
  %call12 = call %union.tree_node* @start_struct(i32 %struct_loc.0, i32 %code.0, %union.tree_node* %ident.0, %struct.c_struct_parse_info** nonnull %struct_info) #6, !dbg !4765
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !4727, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4729, metadata !DIExpression()), !dbg !4764
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4766
  %call13 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 123) #7, !dbg !4767
  %tobool14 = icmp eq i8 %call13, 0, !dbg !4767
  br i1 %tobool14, label %end_at_defs, label %if.then15, !dbg !4768

if.then15:                                        ; preds = %if.then11
  %5 = load i32, i32* @c_language, align 4, !dbg !4769
  %and = and i32 %5, 1, !dbg !4769
  %cmp = icmp eq i32 %and, 0, !dbg !4769
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !4769

cond.true:                                        ; preds = %if.then15
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 1881, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4769
  br label %cond.end, !dbg !4769

cond.end:                                         ; preds = %if.then15, %cond.true
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4770
  %call16 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !4771
  %tobool17 = icmp eq i8 %call16, 0, !dbg !4771
  br i1 %tobool17, label %cleanup, label %if.end19, !dbg !4773

if.end19:                                         ; preds = %cond.end
  %call20 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !4774
  %tobool21 = icmp eq i8 %call20, 0, !dbg !4774
  br i1 %tobool21, label %if.else, label %land.lhs.true, !dbg !4776

land.lhs.true:                                    ; preds = %if.end19
  %call22 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4777
  %6 = getelementptr inbounds %struct.c_token, %struct.c_token* %call22, i64 0, i32 0, !dbg !4778
  %bf.load23 = load i32, i32* %6, align 8, !dbg !4778
  %bf.clear25 = and i32 %bf.load23, 65280, !dbg !4778
  %cmp26 = icmp eq i32 %bf.clear25, 512, !dbg !4779
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !4780

if.then28:                                        ; preds = %land.lhs.true
  %call29 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4781
  %value30 = getelementptr inbounds %struct.c_token, %struct.c_token* %call29, i64 0, i32 1, !dbg !4783
  %7 = load %union.tree_node*, %union.tree_node** %value30, align 8, !dbg !4783
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !4730, metadata !DIExpression()), !dbg !4784
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4785
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !4786
  %call32 = call %union.tree_node* @objc_get_class_ivars(%union.tree_node* %7) #6, !dbg !4787
  %call33 = call %union.tree_node* @nreverse(%union.tree_node* %call32) #6, !dbg !4788
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !4729, metadata !DIExpression()), !dbg !4764
  br label %cleanup, !dbg !4789

if.else:                                          ; preds = %if.end19, %land.lhs.true
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.57, i64 0, i64 0)) #7, !dbg !4790
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !4792
  br label %cleanup, !dbg !4793

cleanup:                                          ; preds = %cond.end, %if.else, %if.then28
  %contents.0 = phi %union.tree_node* [ %call33, %if.then28 ], [ null, %if.else ], [ null, %cond.end ], !dbg !4764
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.then28 ], [ 3, %if.else ], [ 3, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %contents.0, metadata !4729, metadata !DIExpression()), !dbg !4764
  switch i32 %cleanup.dest.slot.0, label %cleanup73 [
    i32 0, label %end_at_defs
    i32 3, label %end_at_defs
  ]

end_at_defs:                                      ; preds = %if.then11, %cleanup, %cleanup
  %contents.2 = phi %union.tree_node* [ %contents.0, %cleanup ], [ null, %if.then11 ], [ %contents.0, %cleanup ], !dbg !4794
  call void @llvm.dbg.value(metadata %union.tree_node* %contents.2, metadata !4729, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.label(metadata !4735), !dbg !4795
  br label %while.cond, !dbg !4796

while.cond:                                       ; preds = %cleanup66, %end_at_defs
  %contents.3 = phi %union.tree_node* [ %contents.2, %end_at_defs ], [ %contents.4, %cleanup66 ], !dbg !4794
  call void @llvm.dbg.value(metadata %union.tree_node* %contents.3, metadata !4729, metadata !DIExpression()), !dbg !4764
  %call35 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !4797
  %tobool36 = icmp eq i8 %call35, 0, !dbg !4797
  br i1 %tobool36, label %if.end41, label %if.then37, !dbg !4799

if.then37:                                        ; preds = %while.cond
  %call38 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4800
  %location39 = getelementptr inbounds %struct.c_token, %struct.c_token* %call38, i64 0, i32 2, !dbg !4802
  %8 = load i32, i32* %location39, align 8, !dbg !4802
  %call40 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %8, i32 834, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.58, i64 0, i64 0)) #6, !dbg !4803
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4804
  br label %cleanup66, !dbg !4805, !llvm.loop !4806

if.end41:                                         ; preds = %while.cond
  %call42 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !4808
  %tobool43 = icmp eq i8 %call42, 0, !dbg !4808
  br i1 %tobool43, label %if.end45, label %if.then44, !dbg !4810

if.then44:                                        ; preds = %if.end41
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4811
  br label %cleanup66, !dbg !4813

if.end45:                                         ; preds = %if.end41
  %call46 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 70) #7, !dbg !4814
  %tobool47 = icmp eq i8 %call46, 0, !dbg !4814
  br i1 %tobool47, label %if.end50, label %if.then48, !dbg !4816

if.then48:                                        ; preds = %if.end45
  %call49 = call fastcc zeroext i8 @c_parser_pragma(%struct.c_parser* %parser, i32 0) #7, !dbg !4817
  br label %cleanup66, !dbg !4819, !llvm.loop !4806

if.end50:                                         ; preds = %if.end45
  %call51 = call fastcc %union.tree_node* @c_parser_struct_declaration(%struct.c_parser* %parser) #7, !dbg !4820
  call void @llvm.dbg.value(metadata %union.tree_node* %call51, metadata !4733, metadata !DIExpression()), !dbg !4821
  %call52 = call %union.tree_node* @chainon(%union.tree_node* %call51, %union.tree_node* %contents.3) #6, !dbg !4822
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !4729, metadata !DIExpression()), !dbg !4764
  %call53 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !4823
  %tobool54 = icmp eq i8 %call53, 0, !dbg !4823
  br i1 %tobool54, label %if.else56, label %if.then55, !dbg !4825

if.then55:                                        ; preds = %if.end50
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4826
  br label %cleanup66, !dbg !4826

if.else56:                                        ; preds = %if.end50
  %call57 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !4827
  %tobool58 = icmp eq i8 %call57, 0, !dbg !4827
  br i1 %tobool58, label %if.else63, label %if.then59, !dbg !4830

if.then59:                                        ; preds = %if.else56
  %call60 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4831
  %location61 = getelementptr inbounds %struct.c_token, %struct.c_token* %call60, i64 0, i32 2, !dbg !4832
  %9 = load i32, i32* %location61, align 8, !dbg !4832
  %call62 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %9, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.59, i64 0, i64 0)) #6, !dbg !4833
  br label %cleanup66

if.else63:                                        ; preds = %if.else56
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !4834
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 42, i8* null) #7, !dbg !4836
  br label %cleanup66, !dbg !4837

cleanup66:                                        ; preds = %if.then55, %if.then59, %if.else63, %if.then48, %if.then44, %if.then37
  %contents.4 = phi %union.tree_node* [ %contents.3, %if.then37 ], [ %contents.3, %if.then44 ], [ %contents.3, %if.then48 ], [ %call52, %if.else63 ], [ %call52, %if.then59 ], [ %call52, %if.then55 ], !dbg !4764
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then37 ], [ true, %if.then44 ], [ false, %if.then48 ], [ true, %if.else63 ], [ false, %if.then59 ], [ false, %if.then55 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %contents.4, metadata !4729, metadata !DIExpression()), !dbg !4764
  br i1 %cleanup.dest.slot.1, label %while.end, label %while.cond

while.end:                                        ; preds = %cleanup66
  %contents.4.lcssa = phi %union.tree_node* [ %contents.4, %cleanup66 ], !dbg !4764
  call void @llvm.dbg.value(metadata %union.tree_node* %contents.4.lcssa, metadata !4729, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata %union.tree_node* %contents.4.lcssa, metadata !4729, metadata !DIExpression()), !dbg !4764
  call void @llvm.dbg.value(metadata %union.tree_node* %contents.4.lcssa, metadata !4729, metadata !DIExpression()), !dbg !4764
  %call69 = call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !4838
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !4728, metadata !DIExpression()), !dbg !4764
  %call70 = call %union.tree_node* @nreverse(%union.tree_node* %contents.4.lcssa) #6, !dbg !4839
  %call71 = call %union.tree_node* @chainon(%union.tree_node* %call3, %union.tree_node* %call69) #6, !dbg !4840
  %10 = load %struct.c_struct_parse_info*, %struct.c_struct_parse_info** %struct_info, align 8, !dbg !4841
  call void @llvm.dbg.value(metadata %struct.c_struct_parse_info* %10, metadata !4722, metadata !DIExpression()), !dbg !4764
  %call72 = call %union.tree_node* @finish_struct(i32 %struct_loc.0, %union.tree_node* %call12, %union.tree_node* %call70, %union.tree_node* %call71, %struct.c_struct_parse_info* %10) #6, !dbg !4842
  %spec = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 1, !dbg !4843
  store %union.tree_node* %call72, %union.tree_node** %spec, align 8, !dbg !4844
  %kind = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 0, !dbg !4845
  store i32 3, i32* %kind, align 8, !dbg !4846
  %expr = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 2, !dbg !4847
  store %union.tree_node* null, %union.tree_node** %expr, align 8, !dbg !4848
  %expr_const_operands = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 3, !dbg !4849
  store i8 1, i8* %expr_const_operands, align 8, !dbg !4850
  br label %cleanup73, !dbg !4851

cleanup73:                                        ; preds = %while.end, %cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !4852
  br label %cleanup86

if.else77:                                        ; preds = %if.end
  %tobool78 = icmp eq %union.tree_node* %ident.0, null, !dbg !4853
  br i1 %tobool78, label %if.then79, label %if.end85, !dbg !4855

if.then79:                                        ; preds = %if.else77
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)) #7, !dbg !4856
  %11 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !4858
  %spec80 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 1, !dbg !4859
  %12 = bitcast %union.tree_node** %spec80 to i64*, !dbg !4860
  store i64 %11, i64* %12, align 8, !dbg !4860
  %kind81 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 0, !dbg !4861
  store i32 1, i32* %kind81, align 8, !dbg !4862
  %expr82 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 2, !dbg !4863
  store %union.tree_node* null, %union.tree_node** %expr82, align 8, !dbg !4864
  %expr_const_operands83 = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 3, !dbg !4865
  store i8 1, i8* %expr_const_operands83, align 8, !dbg !4866
  br label %cleanup86, !dbg !4867

if.end85:                                         ; preds = %if.else77
  %13 = bitcast %struct.c_typespec* %tmp to i8*, !dbg !4868
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !dbg !4868
  call void @parser_xref_tag(%struct.c_typespec* nonnull sret %tmp, i32 %ident_loc.0, i32 %code.0, %union.tree_node* nonnull %ident.0) #6, !dbg !4868
  %14 = bitcast %struct.c_typespec* %agg.result to i8*, !dbg !4868
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %13, i64 32, i1 false), !dbg !4868
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !dbg !4868
  br label %cleanup86, !dbg !4869

cleanup86:                                        ; preds = %if.end85, %if.then79, %cleanup73
  ret void, !dbg !4870
}

declare dso_local i32 @invoke_plugin_callbacks(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_typeof_specifier(%struct.c_typespec* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !4871 {
entry:
  %expr20 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4873, metadata !DIExpression()), !dbg !4882
  call void @llvm.dbg.declare(metadata %struct.c_typespec* %agg.result, metadata !4874, metadata !DIExpression()), !dbg !4883
  %kind = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 0, !dbg !4884
  store i32 6, i32* %kind, align 8, !dbg !4885
  %0 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !4886
  %spec = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 1, !dbg !4887
  %1 = bitcast %union.tree_node** %spec to i64*, !dbg !4888
  store i64 %0, i64* %1, align 8, !dbg !4888
  %expr = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 2, !dbg !4889
  store %union.tree_node* null, %union.tree_node** %expr, align 8, !dbg !4890
  %expr_const_operands = getelementptr inbounds %struct.c_typespec, %struct.c_typespec* %agg.result, i64 0, i32 3, !dbg !4891
  store i8 1, i8* %expr_const_operands, align 8, !dbg !4892
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 50) #7, !dbg !4893
  %tobool = icmp eq i8 %call, 0, !dbg !4893
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4893

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 2143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !4893
  br label %cond.end, !dbg !4893

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4894
  %2 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4895
  %inc = add nsw i32 %2, 1, !dbg !4895
  store i32 %inc, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4895
  %3 = load i32, i32* @in_typeof, align 4, !dbg !4896
  %inc1 = add nsw i32 %3, 1, !dbg !4896
  store i32 %inc1, i32* @in_typeof, align 4, !dbg !4896
  %call2 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !4897
  %tobool3 = icmp eq i8 %call2, 0, !dbg !4897
  br i1 %tobool3, label %if.then, label %if.end, !dbg !4899

if.then:                                          ; preds = %cond.end
  %4 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4900
  %dec = add nsw i32 %4, -1, !dbg !4900
  store i32 %dec, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4900
  %5 = load i32, i32* @in_typeof, align 4, !dbg !4902
  %dec4 = add nsw i32 %5, -1, !dbg !4902
  store i32 %dec4, i32* @in_typeof, align 4, !dbg !4902
  br label %return, !dbg !4903

if.end:                                           ; preds = %cond.end
  %call5 = tail call fastcc zeroext i8 @c_parser_next_token_starts_typename(%struct.c_parser* %parser) #7, !dbg !4904
  %tobool6 = icmp eq i8 %call5, 0, !dbg !4904
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !4905

if.then7:                                         ; preds = %if.end
  %call8 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !4906
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call8, metadata !4875, metadata !DIExpression()), !dbg !4907
  %6 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4908
  %dec9 = add nsw i32 %6, -1, !dbg !4908
  store i32 %dec9, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4908
  %7 = load i32, i32* @in_typeof, align 4, !dbg !4909
  %dec10 = add nsw i32 %7, -1, !dbg !4909
  store i32 %dec10, i32* @in_typeof, align 4, !dbg !4909
  %cmp = icmp eq %struct.c_type_name* %call8, null, !dbg !4910
  br i1 %cmp, label %if.end43, label %if.then11, !dbg !4912

if.then11:                                        ; preds = %if.then7
  %call14 = tail call %union.tree_node* @groktypename(%struct.c_type_name* nonnull %call8, %union.tree_node** nonnull %expr, i8* nonnull %expr_const_operands) #6, !dbg !4913
  store %union.tree_node* %call14, %union.tree_node** %spec, align 8, !dbg !4915
  %call17 = tail call zeroext i8 @variably_modified_type_p(%union.tree_node* %call14, %union.tree_node* null) #6, !dbg !4916
  tail call void @pop_maybe_used(i8 zeroext %call17) #6, !dbg !4917
  br label %if.end43, !dbg !4918

if.else:                                          ; preds = %if.end
  %call19 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !4919
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call19, i64 0, i32 2, !dbg !4920
  %8 = load i32, i32* %location, align 8, !dbg !4920
  call void @llvm.dbg.value(metadata i32 %8, metadata !4880, metadata !DIExpression()), !dbg !4921
  %9 = bitcast %struct.c_expr* %expr20 to i8*, !dbg !4922
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4922
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr20, metadata !4881, metadata !DIExpression(DW_OP_deref)), !dbg !4921
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %expr20, %struct.c_parser* %parser) #7, !dbg !4923
  %10 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4924
  %dec21 = add nsw i32 %10, -1, !dbg !4924
  store i32 %dec21, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !4924
  %11 = load i32, i32* @in_typeof, align 4, !dbg !4925
  %dec22 = add nsw i32 %11, -1, !dbg !4925
  store i32 %dec22, i32* @in_typeof, align 4, !dbg !4925
  %12 = bitcast %struct.c_expr* %expr20 to i64**, !dbg !4926
  %13 = load i64*, i64** %12, align 8, !dbg !4926
  %bf.load = load i64, i64* %13, align 8, !dbg !4926
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4928
  %cmp23 = icmp eq i64 %bf.cast1, 41, !dbg !4928
  %14 = bitcast i64* %13 to %struct.tree_common*, !dbg !4929
  br i1 %cmp23, label %land.lhs.true, label %if.end30, !dbg !4929

land.lhs.true:                                    ; preds = %if.else
  %arrayidx = getelementptr inbounds i64, i64* %13, i64 6, !dbg !4930
  %15 = bitcast i64* %arrayidx to %struct.tree_decl_common**, !dbg !4930
  %16 = load %struct.tree_decl_common*, %struct.tree_decl_common** %15, align 8, !dbg !4930
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %16, i64 0, i32 2, !dbg !4930
  %17 = bitcast i40* %lang_flag_4 to i64*, !dbg !4930
  %bf.load25 = load i64, i64* %17, align 8, !dbg !4930
  %bf.cast272 = and i64 %bf.load25, 524288, !dbg !4930
  %cmp28 = icmp eq i64 %bf.cast272, 0, !dbg !4930
  br i1 %cmp28, label %if.end30, label %if.then29, !dbg !4931

if.then29:                                        ; preds = %land.lhs.true
  call void (i32, i8*, ...) @error_at(i32 %8, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.63, i64 0, i64 0)) #6, !dbg !4932
  %.phi.trans.insert = bitcast %struct.c_expr* %expr20 to %struct.tree_common**, !dbg !4921
  %.pre = load %struct.tree_common*, %struct.tree_common** %.phi.trans.insert, align 8, !dbg !4933
  br label %if.end30, !dbg !4932

if.end30:                                         ; preds = %land.lhs.true, %if.then29, %if.else
  %18 = phi %struct.tree_common* [ %14, %land.lhs.true ], [ %.pre, %if.then29 ], [ %14, %if.else ], !dbg !4933
  %type32 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %18, i64 0, i32 2, !dbg !4933
  %19 = bitcast %union.tree_node** %type32 to i64*, !dbg !4933
  %20 = load i64, i64* %19, align 8, !dbg !4933
  store i64 %20, i64* %1, align 8, !dbg !4934
  %.cast = inttoptr i64 %20 to %union.tree_node*, !dbg !4935
  %call35 = call zeroext i8 @variably_modified_type_p(%union.tree_node* %.cast, %union.tree_node* null) #6, !dbg !4936
  call void @llvm.dbg.value(metadata i8 %call35, metadata !4878, metadata !DIExpression()), !dbg !4921
  %tobool36 = icmp eq i8 %call35, 0, !dbg !4937
  br i1 %tobool36, label %if.end42, label %if.then37, !dbg !4939

if.then37:                                        ; preds = %if.end30
  %value38 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr20, i64 0, i32 0, !dbg !4940
  %21 = load %union.tree_node*, %union.tree_node** %value38, align 8, !dbg !4940
  %call40 = call %union.tree_node* @c_fully_fold(%union.tree_node* %21, i8 zeroext 0, i8* nonnull %expr_const_operands) #6, !dbg !4941
  store %union.tree_node* %call40, %union.tree_node** %expr, align 8, !dbg !4942
  br label %if.end42, !dbg !4943

if.end42:                                         ; preds = %if.end30, %if.then37
  call void @pop_maybe_used(i8 zeroext %call35) #6, !dbg !4944
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !4945
  br label %if.end43

if.end43:                                         ; preds = %if.then7, %if.then11, %if.end42
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !4946
  br label %return, !dbg !4947

return:                                           ; preds = %if.end43, %if.then
  ret void, !dbg !4948
}

declare dso_local %struct.c_declspecs* @declspecs_add_qual(%struct.c_declspecs*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) unnamed_addr #5 !dbg !4949 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !4951, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !4952, metadata !DIExpression()), !dbg !4968
  %lex_untranslated_string = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !4969
  br label %while.cond, !dbg !4970

while.cond:                                       ; preds = %if.then115, %entry
  %attr_name.0 = phi %union.tree_node* [ undef, %entry ], [ %attr_name.5, %if.then115 ]
  %attrs.0 = phi %union.tree_node* [ null, %entry ], [ %attrs.3, %if.then115 ], !dbg !4971
  %retval.0 = phi %union.tree_node* [ undef, %entry ], [ %retval.3, %if.then115 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attr_name.0, metadata !4956, metadata !DIExpression()), !dbg !4972
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 52) #7, !dbg !4973
  %tobool = icmp eq i8 %call, 0, !dbg !4970
  br i1 %tobool, label %cleanup125.loopexit2, label %while.body, !dbg !4970

while.body:                                       ; preds = %while.cond
  %bf.load = load i8, i8* %lex_untranslated_string, align 2, !dbg !4974
  %bf.set = or i8 %bf.load, 8, !dbg !4974
  store i8 %bf.set, i8* %lex_untranslated_string, align 2, !dbg !4974
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4975
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !4976
  %tobool2 = icmp eq i8 %call1, 0, !dbg !4976
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4978

if.then:                                          ; preds = %while.body
  %attrs.0.lcssa15 = phi %union.tree_node* [ %attrs.0, %while.body ], !dbg !4971
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0.lcssa15, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0.lcssa15, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0.lcssa15, metadata !4952, metadata !DIExpression()), !dbg !4968
  %bf.load4 = load i8, i8* %lex_untranslated_string, align 2, !dbg !4979
  %bf.clear5 = and i8 %bf.load4, -9, !dbg !4979
  store i8 %bf.clear5, i8* %lex_untranslated_string, align 2, !dbg !4979
  br label %cleanup125, !dbg !4981

if.end:                                           ; preds = %while.body
  %call6 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !4982
  %tobool7 = icmp eq i8 %call6, 0, !dbg !4982
  br i1 %tobool7, label %if.then8, label %while.cond13.preheader, !dbg !4984

while.cond13.preheader:                           ; preds = %if.end
  br label %while.cond13, !dbg !4985

if.then8:                                         ; preds = %if.end
  %attrs.0.lcssa16 = phi %union.tree_node* [ %attrs.0, %if.end ], !dbg !4971
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0.lcssa16, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0.lcssa16, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0.lcssa16, metadata !4952, metadata !DIExpression()), !dbg !4968
  %bf.load10 = load i8, i8* %lex_untranslated_string, align 2, !dbg !4986
  %bf.clear11 = and i8 %bf.load10, -9, !dbg !4986
  store i8 %bf.clear11, i8* %lex_untranslated_string, align 2, !dbg !4986
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !4988
  br label %cleanup125, !dbg !4989

while.cond13:                                     ; preds = %while.cond13.backedge, %while.cond13.preheader
  %attr_name.1 = phi %union.tree_node* [ %attr_name.0, %while.cond13.preheader ], [ %attr_name.4, %while.cond13.backedge ]
  %attrs.1 = phi %union.tree_node* [ %attrs.0, %while.cond13.preheader ], [ %attrs.2, %while.cond13.backedge ], !dbg !4971
  %retval.1 = phi %union.tree_node* [ %retval.0, %while.cond13.preheader ], [ %retval.2, %while.cond13.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.1, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attr_name.1, metadata !4956, metadata !DIExpression()), !dbg !4972
  %call14 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !4990
  %tobool15 = icmp eq i8 %call14, 0, !dbg !4990
  br i1 %tobool15, label %lor.lhs.false, label %while.body22, !dbg !4991

lor.lhs.false:                                    ; preds = %while.cond13
  %call16 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !4992
  %tobool18 = icmp eq i8 %call16, 0, !dbg !4992
  br i1 %tobool18, label %lor.rhs, label %while.body22, !dbg !4993

lor.rhs:                                          ; preds = %lor.lhs.false
  %call19 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 74) #7, !dbg !4994
  %tobool21 = icmp eq i8 %call19, 0, !dbg !4993
  br i1 %tobool21, label %while.end, label %while.body22, !dbg !4985

while.body22:                                     ; preds = %lor.rhs, %lor.lhs.false, %while.cond13
  %call23 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !4995
  %tobool24 = icmp eq i8 %call23, 0, !dbg !4995
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !4997

if.then25:                                        ; preds = %while.body22
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !4998
  br label %cleanup99, !dbg !5000, !llvm.loop !5001

if.end26:                                         ; preds = %while.body22
  %call27 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 74) #7, !dbg !5003
  %tobool28 = icmp eq i8 %call27, 0, !dbg !5003
  %call30 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5004
  br i1 %tobool28, label %if.else, label %if.then29, !dbg !5005

if.then29:                                        ; preds = %if.end26
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call30, i64 0, i32 0, !dbg !5006
  %bf.load31 = load i32, i32* %0, align 8, !dbg !5006
  %bf.lshr = lshr i32 %bf.load31, 16, !dbg !5006
  %trunc = trunc i32 %bf.lshr to i8, !dbg !5007
  switch i8 %trunc, label %sw.default [
    i8 0, label %sw.epilog
    i8 1, label %sw.epilog
    i8 2, label %sw.epilog
    i8 3, label %sw.epilog
    i8 4, label %sw.epilog
    i8 5, label %sw.epilog
    i8 6, label %sw.epilog
    i8 7, label %sw.epilog
    i8 8, label %sw.epilog
    i8 9, label %sw.epilog
    i8 10, label %sw.epilog
    i8 11, label %sw.epilog
    i8 12, label %sw.epilog
    i8 13, label %sw.epilog
    i8 14, label %sw.epilog
    i8 28, label %sw.epilog
    i8 29, label %sw.epilog
    i8 30, label %sw.epilog
    i8 31, label %sw.epilog
    i8 32, label %sw.epilog
    i8 60, label %sw.epilog
    i8 61, label %sw.epilog
    i8 62, label %sw.epilog
    i8 69, label %sw.epilog
    i8 63, label %sw.epilog
    i8 64, label %sw.epilog
    i8 15, label %sw.epilog
  ], !dbg !5007

sw.default:                                       ; preds = %if.then29
  call void @llvm.dbg.value(metadata i8 0, metadata !4959, metadata !DIExpression()), !dbg !5008
  br label %sw.epilog, !dbg !5009

sw.epilog:                                        ; preds = %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %if.then29, %sw.default
  %ok.0 = phi i1 [ false, %sw.default ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ], [ true, %if.then29 ]
  br i1 %ok.0, label %if.end35, label %cleanup, !dbg !5011

if.end35:                                         ; preds = %sw.epilog
  %1 = load %union.tree_node**, %union.tree_node*** @ridpointers, align 8, !dbg !5012
  %call36 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5013
  %2 = getelementptr inbounds %struct.c_token, %struct.c_token* %call36, i64 0, i32 0, !dbg !5014
  %bf.load37 = load i32, i32* %2, align 8, !dbg !5014
  %bf.lshr38 = lshr i32 %bf.load37, 16, !dbg !5014
  %bf.clear39 = and i32 %bf.lshr38, 255, !dbg !5014
  %idxprom = zext i32 %bf.clear39 to i64, !dbg !5012
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %1, i64 %idxprom, !dbg !5012
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5012
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !4956, metadata !DIExpression()), !dbg !4972
  br label %cleanup, !dbg !5015

cleanup:                                          ; preds = %sw.epilog, %if.end35
  %attr_name.2 = phi %union.tree_node* [ %3, %if.end35 ], [ %attr_name.1, %sw.epilog ]
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end35 ], [ 5, %sw.epilog ]
  call void @llvm.dbg.value(metadata %union.tree_node* %attr_name.2, metadata !4956, metadata !DIExpression()), !dbg !4972
  %cond = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond, label %if.end41, label %cleanup99

if.else:                                          ; preds = %if.end26
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call30, i64 0, i32 1, !dbg !5016
  %4 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5016
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !4956, metadata !DIExpression()), !dbg !4972
  br label %if.end41

if.end41:                                         ; preds = %cleanup, %if.else
  %attr_name.3 = phi %union.tree_node* [ %4, %if.else ], [ %attr_name.2, %cleanup ], !dbg !5004
  call void @llvm.dbg.value(metadata %union.tree_node* %attr_name.3, metadata !4956, metadata !DIExpression()), !dbg !4972
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5017
  %call42 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 20) #7, !dbg !5018
  %tobool43 = icmp eq i8 %call42, 0, !dbg !5018
  br i1 %tobool43, label %if.end47, label %if.then44, !dbg !5020

if.then44:                                        ; preds = %if.end41
  %call45 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* %attr_name.3, %union.tree_node* null) #6, !dbg !5021
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !4953, metadata !DIExpression()), !dbg !4972
  %call46 = tail call %union.tree_node* @chainon(%union.tree_node* %attrs.1, %union.tree_node* %call45) #6, !dbg !5023
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !4952, metadata !DIExpression()), !dbg !4968
  br label %cleanup99, !dbg !5024, !llvm.loop !5001

if.end47:                                         ; preds = %if.end41
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5025
  %call48 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !5026
  %tobool50 = icmp eq i8 %call48, 0, !dbg !5026
  br i1 %tobool50, label %if.else80, label %land.lhs.true, !dbg !5027

land.lhs.true:                                    ; preds = %if.end47
  %call51 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5028
  %5 = getelementptr inbounds %struct.c_token, %struct.c_token* %call51, i64 0, i32 0, !dbg !5029
  %bf.load52 = load i32, i32* %5, align 8, !dbg !5029
  %bf.clear54 = and i32 %bf.load52, 65280, !dbg !5029
  %cmp = icmp eq i32 %bf.clear54, 0, !dbg !5030
  br i1 %cmp, label %land.lhs.true56, label %if.else80, !dbg !5031

land.lhs.true56:                                  ; preds = %land.lhs.true
  %call57 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !5032
  %6 = getelementptr inbounds %struct.c_token, %struct.c_token* %call57, i64 0, i32 0, !dbg !5033
  %bf.load58 = load i32, i32* %6, align 8, !dbg !5033
  %bf.clear59 = and i32 %bf.load58, 255, !dbg !5033
  %cmp60 = icmp eq i32 %bf.clear59, 19, !dbg !5034
  br i1 %cmp60, label %if.then68, label %lor.lhs.false62, !dbg !5035

lor.lhs.false62:                                  ; preds = %land.lhs.true56
  %call63 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !5036
  %7 = getelementptr inbounds %struct.c_token, %struct.c_token* %call63, i64 0, i32 0, !dbg !5037
  %bf.load64 = load i32, i32* %7, align 8, !dbg !5037
  %bf.clear65 = and i32 %bf.load64, 255, !dbg !5037
  %cmp66 = icmp eq i32 %bf.clear65, 21, !dbg !5038
  br i1 %cmp66, label %if.then68, label %if.else80, !dbg !5039

if.then68:                                        ; preds = %lor.lhs.false62, %land.lhs.true56
  %call69 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5040
  %value70 = getelementptr inbounds %struct.c_token, %struct.c_token* %call69, i64 0, i32 1, !dbg !5041
  %8 = load %union.tree_node*, %union.tree_node** %value70, align 8, !dbg !5041
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !4962, metadata !DIExpression()), !dbg !5042
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5043
  %call71 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !5044
  %tobool72 = icmp eq i8 %call71, 0, !dbg !5044
  br i1 %tobool72, label %if.else75, label %if.then73, !dbg !5045

if.then73:                                        ; preds = %if.then68
  %call74 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %8) #6, !dbg !5046
  call void @llvm.dbg.value(metadata %union.tree_node* %call74, metadata !4957, metadata !DIExpression()), !dbg !4972
  br label %if.end88, !dbg !5047

if.else75:                                        ; preds = %if.then68
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5048
  %call76 = tail call fastcc %struct.VEC_tree_gc* @c_parser_expr_list(%struct.c_parser* %parser, i8 zeroext 0, i8 zeroext 1, %struct.VEC_tree_gc** null) #7, !dbg !5049
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call76, metadata !4958, metadata !DIExpression()), !dbg !4972
  %call77 = tail call %union.tree_node* @build_tree_list_vec_stat(%struct.VEC_tree_gc* %call76) #6, !dbg !5050
  call void @llvm.dbg.value(metadata %union.tree_node* %call77, metadata !4965, metadata !DIExpression()), !dbg !5051
  %call78 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %8, %union.tree_node* %call77) #6, !dbg !5052
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !4957, metadata !DIExpression()), !dbg !4972
  tail call void @release_tree_vector(%struct.VEC_tree_gc* %call76) #6, !dbg !5053
  br label %if.end88

if.else80:                                        ; preds = %if.end47, %lor.lhs.false62, %land.lhs.true
  %call81 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !5054
  %tobool82 = icmp eq i8 %call81, 0, !dbg !5054
  br i1 %tobool82, label %if.else84, label %if.end88, !dbg !5057

if.else84:                                        ; preds = %if.else80
  %call85 = tail call fastcc %struct.VEC_tree_gc* @c_parser_expr_list(%struct.c_parser* %parser, i8 zeroext 0, i8 zeroext 1, %struct.VEC_tree_gc** null) #7, !dbg !5058
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call85, metadata !4958, metadata !DIExpression()), !dbg !4972
  %call86 = tail call %union.tree_node* @build_tree_list_vec_stat(%struct.VEC_tree_gc* %call85) #6, !dbg !5060
  call void @llvm.dbg.value(metadata %union.tree_node* %call86, metadata !4957, metadata !DIExpression()), !dbg !4972
  tail call void @release_tree_vector(%struct.VEC_tree_gc* %call85) #6, !dbg !5061
  br label %if.end88

if.end88:                                         ; preds = %if.else80, %if.else84, %if.then73, %if.else75
  %attr_args.2 = phi %union.tree_node* [ %call74, %if.then73 ], [ %call78, %if.else75 ], [ %call86, %if.else84 ], [ null, %if.else80 ], !dbg !5062
  call void @llvm.dbg.value(metadata %union.tree_node* %attr_args.2, metadata !4957, metadata !DIExpression()), !dbg !4972
  %call89 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* %attr_name.3, %union.tree_node* %attr_args.2) #6, !dbg !5063
  call void @llvm.dbg.value(metadata %union.tree_node* %call89, metadata !4953, metadata !DIExpression()), !dbg !4972
  %call90 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !5064
  %tobool91 = icmp eq i8 %call90, 0, !dbg !5064
  br i1 %tobool91, label %if.else93, label %if.then92, !dbg !5066

if.then92:                                        ; preds = %if.end88
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5067
  %call98 = tail call %union.tree_node* @chainon(%union.tree_node* %attrs.1, %union.tree_node* %call89) #6, !dbg !5068
  call void @llvm.dbg.value(metadata %union.tree_node* %call98, metadata !4952, metadata !DIExpression()), !dbg !4968
  br label %cleanup99, !dbg !5002

if.else93:                                        ; preds = %if.end88
  %bf.load95 = load i8, i8* %lex_untranslated_string, align 2, !dbg !5069
  %bf.clear96 = and i8 %bf.load95, -9, !dbg !5069
  store i8 %bf.clear96, i8* %lex_untranslated_string, align 2, !dbg !5069
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !5071
  br label %cleanup99, !dbg !5072

cleanup99:                                        ; preds = %cleanup, %if.then92, %if.else93, %if.then44, %if.then25
  %attr_name.4 = phi %union.tree_node* [ %attr_name.1, %if.then25 ], [ %attr_name.2, %cleanup ], [ %attr_name.3, %if.then44 ], [ %attr_name.3, %if.then92 ], [ %attr_name.3, %if.else93 ]
  %cleanup.dest.slot.1 = phi i32 [ 4, %if.then25 ], [ %cleanup.dest.slot.0, %cleanup ], [ 4, %if.then44 ], [ 0, %if.then92 ], [ 1, %if.else93 ]
  %attrs.2 = phi %union.tree_node* [ %attrs.1, %if.then25 ], [ %attrs.1, %cleanup ], [ %call46, %if.then44 ], [ %call98, %if.then92 ], [ %attrs.1, %if.else93 ], !dbg !4968
  %retval.2 = phi %union.tree_node* [ %retval.1, %if.then25 ], [ %retval.1, %cleanup ], [ %retval.1, %if.then44 ], [ %retval.1, %if.then92 ], [ %attrs.1, %if.else93 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.2, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attr_name.4, metadata !4956, metadata !DIExpression()), !dbg !4972
  switch i32 %cleanup.dest.slot.1, label %cleanup125.loopexit [
    i32 0, label %while.cond13.backedge
    i32 4, label %while.cond13.backedge
    i32 5, label %while.end
  ]

while.cond13.backedge:                            ; preds = %cleanup99, %cleanup99
  br label %while.cond13, !dbg !4968, !llvm.loop !5001

while.end:                                        ; preds = %lor.rhs, %cleanup99
  %attr_name.5 = phi %union.tree_node* [ %attr_name.4, %cleanup99 ], [ %attr_name.1, %lor.rhs ]
  %attrs.3 = phi %union.tree_node* [ %attrs.2, %cleanup99 ], [ %attrs.1, %lor.rhs ], !dbg !4971
  %retval.3 = phi %union.tree_node* [ %retval.2, %cleanup99 ], [ %retval.1, %lor.rhs ]
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.3, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attr_name.5, metadata !4956, metadata !DIExpression()), !dbg !4972
  %call105 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !5073
  %tobool106 = icmp eq i8 %call105, 0, !dbg !5073
  br i1 %tobool106, label %if.else108, label %if.then107, !dbg !5075

if.then107:                                       ; preds = %while.end
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5076
  %call113 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !5077
  %tobool114 = icmp eq i8 %call113, 0, !dbg !5077
  br i1 %tobool114, label %if.else116, label %if.then115, !dbg !5079

if.else108:                                       ; preds = %while.end
  %attrs.3.lcssa = phi %union.tree_node* [ %attrs.3, %while.end ], !dbg !4971
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.3.lcssa, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.3.lcssa, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.3.lcssa, metadata !4952, metadata !DIExpression()), !dbg !4968
  %bf.load110 = load i8, i8* %lex_untranslated_string, align 2, !dbg !5080
  %bf.clear111 = and i8 %bf.load110, -9, !dbg !5080
  store i8 %bf.clear111, i8* %lex_untranslated_string, align 2, !dbg !5080
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !5082
  br label %cleanup125, !dbg !5083

if.then115:                                       ; preds = %if.then107
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5084
  %bf.load122 = load i8, i8* %lex_untranslated_string, align 2, !dbg !5085
  %bf.clear123 = and i8 %bf.load122, -9, !dbg !5085
  store i8 %bf.clear123, i8* %lex_untranslated_string, align 2, !dbg !5085
  br label %while.cond, !dbg !4970, !llvm.loop !5086

if.else116:                                       ; preds = %if.then107
  %attrs.3.lcssa20 = phi %union.tree_node* [ %attrs.3, %if.then107 ], !dbg !4971
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.3.lcssa20, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.3.lcssa20, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.3.lcssa20, metadata !4952, metadata !DIExpression()), !dbg !4968
  %bf.load118 = load i8, i8* %lex_untranslated_string, align 2, !dbg !5088
  %bf.clear119 = and i8 %bf.load118, -9, !dbg !5088
  store i8 %bf.clear119, i8* %lex_untranslated_string, align 2, !dbg !5088
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !5090
  br label %cleanup125, !dbg !5091

cleanup125.loopexit:                              ; preds = %cleanup99
  %retval.2.lcssa = phi %union.tree_node* [ %retval.2, %cleanup99 ]
  br label %cleanup125, !dbg !5092

cleanup125.loopexit2:                             ; preds = %while.cond
  %attrs.0.lcssa = phi %union.tree_node* [ %attrs.0, %while.cond ], !dbg !4971
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0.lcssa, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0.lcssa, metadata !4952, metadata !DIExpression()), !dbg !4968
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.0.lcssa, metadata !4952, metadata !DIExpression()), !dbg !4968
  br label %cleanup125, !dbg !5092

cleanup125:                                       ; preds = %cleanup125.loopexit2, %cleanup125.loopexit, %if.else116, %if.else108, %if.then8, %if.then
  %retval.4 = phi %union.tree_node* [ %attrs.3.lcssa20, %if.else116 ], [ %attrs.3.lcssa, %if.else108 ], [ %attrs.0.lcssa16, %if.then8 ], [ %attrs.0.lcssa15, %if.then ], [ %retval.2.lcssa, %cleanup125.loopexit ], [ %attrs.0.lcssa, %cleanup125.loopexit2 ]
  ret %union.tree_node* %retval.4, !dbg !5092
}

declare dso_local %struct.c_declspecs* @declspecs_add_attrs(%struct.c_declspecs*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @start_enum(i32, %struct.c_enum_contents*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_expr_no_commas(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser, %struct.c_expr* %after) unnamed_addr #5 !dbg !5093 {
entry:
  %lhs = alloca %struct.c_expr, align 8
  %rhs = alloca %struct.c_expr, align 8
  %ret = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp14 = alloca %struct.c_expr, align 8
  %tmp15 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5095, metadata !DIExpression()), !dbg !5103
  call void @llvm.dbg.value(metadata %struct.c_expr* %after, metadata !5096, metadata !DIExpression()), !dbg !5103
  %0 = bitcast %struct.c_expr* %lhs to i8*, !dbg !5104
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5104
  %1 = bitcast %struct.c_expr* %rhs to i8*, !dbg !5104
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5104
  %2 = bitcast %struct.c_expr* %ret to i8*, !dbg !5104
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5104
  %tobool = icmp eq %struct.c_expr* %after, null, !dbg !5105
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !5105

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* @c_language, align 4, !dbg !5105
  %and = and i32 %3, 1, !dbg !5105
  %cmp = icmp eq i32 %and, 0, !dbg !5105
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5105

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4564, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5105
  br label %cond.end, !dbg !5105

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %4 = bitcast %struct.c_expr* %tmp to i8*, !dbg !5106
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5106
  call fastcc void @c_parser_conditional_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* %after) #7, !dbg !5106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !5106
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5106
  %call = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5107
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !5108
  %5 = load i32, i32* %location, align 8, !dbg !5108
  call void @llvm.dbg.value(metadata i32 %5, metadata !5101, metadata !DIExpression()), !dbg !5103
  %call1 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5109
  %6 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !5110
  %bf.load = load i32, i32* %6, align 8, !dbg !5110
  %trunc = trunc i32 %bf.load to i8, !dbg !5111
  switch i8 %trunc, label %sw.default [
    i8 0, label %sw.epilog
    i8 29, label %sw.bb2
    i8 30, label %sw.bb3
    i8 31, label %sw.bb4
    i8 27, label %sw.bb5
    i8 28, label %sw.bb6
    i8 36, label %sw.bb7
    i8 35, label %sw.bb8
    i8 32, label %sw.bb9
    i8 34, label %sw.bb10
    i8 33, label %sw.bb11
  ], !dbg !5111

sw.bb2:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 65, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5112

sw.bb3:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 67, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5114

sw.bb4:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 71, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5115

sw.bb5:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 63, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5116

sw.bb6:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 64, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5117

sw.bb7:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 83, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5118

sw.bb8:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 84, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5119

sw.bb9:                                           ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 89, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5120

sw.bb10:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 88, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5121

sw.bb11:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 87, metadata !5100, metadata !DIExpression()), !dbg !5103
  br label %sw.epilog, !dbg !5122

sw.default:                                       ; preds = %cond.end
  %7 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5123
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !5123
  br label %cleanup, !dbg !5124

sw.epilog:                                        ; preds = %cond.end, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2
  %code.0 = phi i32 [ 87, %sw.bb11 ], [ 88, %sw.bb10 ], [ 89, %sw.bb9 ], [ 84, %sw.bb8 ], [ 83, %sw.bb7 ], [ 64, %sw.bb6 ], [ 63, %sw.bb5 ], [ 71, %sw.bb4 ], [ 67, %sw.bb3 ], [ 65, %sw.bb2 ], [ 116, %cond.end ], !dbg !5125
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !5100, metadata !DIExpression()), !dbg !5103
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5126
  %call12 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5127
  %location13 = getelementptr inbounds %struct.c_token, %struct.c_token* %call12, i64 0, i32 2, !dbg !5128
  %8 = load i32, i32* %location13, align 8, !dbg !5128
  call void @llvm.dbg.value(metadata i32 %8, metadata !5102, metadata !DIExpression()), !dbg !5103
  %9 = bitcast %struct.c_expr* %tmp14 to i8*, !dbg !5129
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !5129
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp14, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !5129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !5129
  %10 = bitcast %struct.c_expr* %tmp15 to i8*, !dbg !5130
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !5130
  call void @llvm.dbg.value(metadata %struct.c_expr* %rhs, metadata !5098, metadata !DIExpression(DW_OP_deref)), !dbg !5103
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp15, i32 %8, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %rhs) #6, !dbg !5130
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !5130
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !5130
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %lhs, i64 0, i32 0, !dbg !5131
  %11 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5131
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %lhs, i64 0, i32 2, !dbg !5132
  %12 = load %union.tree_node*, %union.tree_node** %original_type, align 8, !dbg !5132
  %value16 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %rhs, i64 0, i32 0, !dbg !5133
  %13 = load %union.tree_node*, %union.tree_node** %value16, align 8, !dbg !5133
  %original_type17 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %rhs, i64 0, i32 2, !dbg !5134
  %14 = load %union.tree_node*, %union.tree_node** %original_type17, align 8, !dbg !5134
  %call18 = call %union.tree_node* @build_modify_expr(i32 %5, %union.tree_node* %11, %union.tree_node* %12, i32 %code.0, i32 %8, %union.tree_node* %13, %union.tree_node* %14) #6, !dbg !5135
  %value19 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 0, !dbg !5136
  store %union.tree_node* %call18, %union.tree_node** %value19, align 8, !dbg !5137
  %cmp20 = icmp eq i32 %code.0, 116, !dbg !5138
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5140
  br i1 %cmp20, label %if.then, label %if.else, !dbg !5140

if.then:                                          ; preds = %sw.epilog
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 1, !dbg !5141
  store i32 53, i32* %original_code, align 8, !dbg !5142
  br label %if.end, !dbg !5143

if.else:                                          ; preds = %sw.epilog
  %bf.load22 = load i64, i64* %15, align 8, !dbg !5144
  %bf.set = or i64 %bf.load22, 8388608, !dbg !5144
  store i64 %bf.set, i64* %15, align 8, !dbg !5144
  %original_code24 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 1, !dbg !5146
  store i32 0, i32* %original_code24, align 8, !dbg !5147
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %original_type25 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 2, !dbg !5148
  store %union.tree_node* null, %union.tree_node** %original_type25, align 8, !dbg !5149
  %16 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !5150
  br label %cleanup, !dbg !5151

cleanup:                                          ; preds = %if.end, %sw.default
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5152
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5152
  ret void, !dbg !5152
}

declare dso_local %union.tree_node* @build_enumerator(i32, %struct.c_enum_contents*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @finish_enum(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @nreverse(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @parser_xref_tag(%struct.c_typespec* sret, i32, i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_conditional_expression(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser, %struct.c_expr* %after) unnamed_addr #5 !dbg !5153 {
entry:
  %cond = alloca %struct.c_expr, align 8
  %exp1 = alloca %struct.c_expr, align 8
  %exp2 = alloca %struct.c_expr, align 8
  %ret = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp4 = alloca %struct.c_expr, align 8
  %tmp40 = alloca %struct.c_expr, align 8
  %tmp63 = alloca %struct.c_expr, align 8
  %tmp64 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5155, metadata !DIExpression()), !dbg !5172
  call void @llvm.dbg.value(metadata %struct.c_expr* %after, metadata !5156, metadata !DIExpression()), !dbg !5172
  %0 = bitcast %struct.c_expr* %cond to i8*, !dbg !5173
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5173
  %1 = bitcast %struct.c_expr* %exp1 to i8*, !dbg !5173
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5173
  %2 = bitcast %struct.c_expr* %exp2 to i8*, !dbg !5173
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5173
  %3 = bitcast %struct.c_expr* %ret to i8*, !dbg !5173
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5173
  %tobool = icmp eq %struct.c_expr* %after, null, !dbg !5174
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !5174

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* @c_language, align 4, !dbg !5174
  %and = and i32 %4, 1, !dbg !5174
  %cmp = icmp eq i32 %and, 0, !dbg !5174
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5174

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4643, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5174
  br label %cond.end, !dbg !5174

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %5 = bitcast %struct.c_expr* %tmp to i8*, !dbg !5175
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5175
  call fastcc void @c_parser_binary_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* %after) #7, !dbg !5175
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !5175
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5175
  %call = call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 17) #7, !dbg !5176
  %tobool2 = icmp eq i8 %call, 0, !dbg !5176
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5178

if.then:                                          ; preds = %cond.end
  %6 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5179
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !5179
  br label %cleanup, !dbg !5180

if.end:                                           ; preds = %cond.end
  %call3 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5181
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 2, !dbg !5182
  %7 = load i32, i32* %location, align 8, !dbg !5182
  call void @llvm.dbg.value(metadata i32 %7, metadata !5161, metadata !DIExpression()), !dbg !5172
  %8 = bitcast %struct.c_expr* %tmp4 to i8*, !dbg !5183
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !5183
  call void @llvm.dbg.value(metadata %struct.c_expr* %cond, metadata !5157, metadata !DIExpression(DW_OP_deref)), !dbg !5172
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp4, i32 %7, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %cond) #6, !dbg !5183
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !5183
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !5183
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5184
  %call5 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !5185
  %tobool6 = icmp eq i8 %call5, 0, !dbg !5185
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !5186

if.then7:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5163, metadata !DIExpression()), !dbg !5187
  %call8 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5188
  %location9 = getelementptr inbounds %struct.c_token, %struct.c_token* %call8, i64 0, i32 2, !dbg !5189
  %9 = load i32, i32* %location9, align 8, !dbg !5189
  %call10 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %9, i32 834, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.21, i64 0, i64 0)) #6, !dbg !5190
  %10 = bitcast %struct.c_expr* %cond to i64**, !dbg !5191
  %11 = load i64*, i64** %10, align 8, !dbg !5191
  %bf.load = load i64, i64* %11, align 8, !dbg !5191
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5193
  %cmp11 = icmp eq i64 %bf.cast2, 190, !dbg !5193
  %12 = bitcast i64* %11 to %union.tree_node*, !dbg !5194
  br i1 %cmp11, label %if.then12, label %if.end16, !dbg !5194

if.then12:                                        ; preds = %if.then7
  %type = getelementptr inbounds i64, i64* %11, i64 2, !dbg !5195
  %13 = bitcast i64* %type to %union.tree_node**, !dbg !5195
  %14 = load %union.tree_node*, %union.tree_node** %13, align 8, !dbg !5195
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !5163, metadata !DIExpression()), !dbg !5187
  %operands = getelementptr inbounds i64, i64* %11, i64 5, !dbg !5197
  %15 = load i64, i64* %operands, align 8, !dbg !5197
  %16 = bitcast %struct.c_expr* %cond to i64*, !dbg !5198
  store i64 %15, i64* %16, align 8, !dbg !5198
  %17 = inttoptr i64 %15 to %union.tree_node*, !dbg !5199
  br label %if.end16, !dbg !5199

if.end16:                                         ; preds = %if.then12, %if.then7
  %18 = phi %union.tree_node* [ %17, %if.then12 ], [ %12, %if.then7 ], !dbg !5200
  %eptype.0 = phi %union.tree_node* [ %14, %if.then12 ], [ null, %if.then7 ], !dbg !5187
  call void @llvm.dbg.value(metadata %union.tree_node* %eptype.0, metadata !5163, metadata !DIExpression()), !dbg !5187
  %value17 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %cond, i64 0, i32 0, !dbg !5200
  %call18 = call %union.tree_node* @default_conversion(%union.tree_node* %18) #6, !dbg !5201
  %call19 = call %union.tree_node* @c_save_expr(%union.tree_node* %call18) #6, !dbg !5202
  %value20 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %exp1, i64 0, i32 0, !dbg !5203
  store %union.tree_node* %call19, %union.tree_node** %value20, align 8, !dbg !5204
  %tobool21 = icmp eq %union.tree_node* %eptype.0, null, !dbg !5205
  br i1 %tobool21, label %if.end26, label %if.then22, !dbg !5207

if.then22:                                        ; preds = %if.end16
  %call24 = call %union.tree_node* @build1_stat(i32 190, %union.tree_node* nonnull %eptype.0, %union.tree_node* %call19) #6, !dbg !5208
  store %union.tree_node* %call24, %union.tree_node** %value20, align 8, !dbg !5209
  br label %if.end26, !dbg !5210

if.end26:                                         ; preds = %if.end16, %if.then22
  %19 = phi %union.tree_node* [ %call19, %if.end16 ], [ %call24, %if.then22 ], !dbg !5211
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %exp1, i64 0, i32 2, !dbg !5212
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !5213
  %call28 = call %union.tree_node* @c_objc_common_truthvalue_conversion(i32 %7, %union.tree_node* %19) #6, !dbg !5214
  store %union.tree_node* %call28, %union.tree_node** %value17, align 8, !dbg !5215
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !5216
  %cmp31 = icmp eq %union.tree_node* %call28, %20, !dbg !5217
  %conv = zext i1 %cmp31 to i32, !dbg !5217
  %21 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5218
  %add = add nsw i32 %21, %conv, !dbg !5218
  br label %if.end48, !dbg !5219

if.else:                                          ; preds = %if.end
  %value32 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %cond, i64 0, i32 0, !dbg !5220
  %22 = load %union.tree_node*, %union.tree_node** %value32, align 8, !dbg !5220
  %call33 = call %union.tree_node* @default_conversion(%union.tree_node* %22) #6, !dbg !5222
  %call34 = call %union.tree_node* @c_objc_common_truthvalue_conversion(i32 %7, %union.tree_node* %call33) #6, !dbg !5223
  store %union.tree_node* %call34, %union.tree_node** %value32, align 8, !dbg !5224
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !5225
  %cmp37 = icmp eq %union.tree_node* %call34, %23, !dbg !5226
  %conv38 = zext i1 %cmp37 to i32, !dbg !5226
  %24 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5227
  %add39 = add nsw i32 %24, %conv38, !dbg !5227
  store i32 %add39, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5227
  %25 = bitcast %struct.c_expr* %tmp40 to i8*, !dbg !5228
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8, !dbg !5228
  call fastcc void @c_parser_expression_conv(%struct.c_expr* nonnull sret %tmp40, %struct.c_parser* %parser) #7, !dbg !5228
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %25, i64 24, i1 false), !dbg !5228
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8, !dbg !5228
  %26 = load %union.tree_node*, %union.tree_node** %value32, align 8, !dbg !5229
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !5230
  %cmp42 = icmp eq %union.tree_node* %26, %27, !dbg !5231
  %conv43 = zext i1 %cmp42 to i32, !dbg !5231
  %28 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !5232
  %cmp45 = icmp eq %union.tree_node* %26, %28, !dbg !5233
  %conv46 = zext i1 %cmp45 to i32, !dbg !5233
  %sub = sub nsw i32 %conv43, %conv46, !dbg !5234
  %29 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5235
  %add47 = add nsw i32 %29, %sub, !dbg !5235
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.end26
  %storemerge = phi i32 [ %add47, %if.else ], [ %add, %if.end26 ], !dbg !5236
  store i32 %storemerge, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5236
  %call49 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5237
  %location50 = getelementptr inbounds %struct.c_token, %struct.c_token* %call49, i64 0, i32 2, !dbg !5238
  %30 = load i32, i32* %location50, align 8, !dbg !5238
  call void @llvm.dbg.value(metadata i32 %30, metadata !5162, metadata !DIExpression()), !dbg !5172
  %call51 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #7, !dbg !5239
  %tobool52 = icmp eq i8 %call51, 0, !dbg !5239
  br i1 %tobool52, label %if.then53, label %if.end60, !dbg !5241

if.then53:                                        ; preds = %if.end48
  %value54 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %cond, i64 0, i32 0, !dbg !5242
  %31 = load %union.tree_node*, %union.tree_node** %value54, align 8, !dbg !5242
  %32 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !5244
  %cmp55 = icmp eq %union.tree_node* %31, %32, !dbg !5245
  %conv56 = zext i1 %cmp55 to i32, !dbg !5245
  %33 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5246
  %sub57 = sub nsw i32 %33, %conv56, !dbg !5246
  store i32 %sub57, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5246
  %34 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !5247
  %35 = bitcast %struct.c_expr* %ret to i64*, !dbg !5248
  store i64 %34, i64* %35, align 8, !dbg !5248
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 1, !dbg !5249
  store i32 0, i32* %original_code, align 8, !dbg !5250
  %original_type59 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 2, !dbg !5251
  store %union.tree_node* null, %union.tree_node** %original_type59, align 8, !dbg !5252
  %36 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5253
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5253
  br label %cleanup, !dbg !5254

if.end60:                                         ; preds = %if.end48
  %call61 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5255
  %location62 = getelementptr inbounds %struct.c_token, %struct.c_token* %call61, i64 0, i32 2, !dbg !5256
  %37 = load i32, i32* %location62, align 8, !dbg !5256
  call void @llvm.dbg.value(metadata i32 %37, metadata !5166, metadata !DIExpression()), !dbg !5257
  %38 = bitcast %struct.c_expr* %tmp63 to i8*, !dbg !5258
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #8, !dbg !5258
  call fastcc void @c_parser_conditional_expression(%struct.c_expr* nonnull sret %tmp63, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5258
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %38, i64 24, i1 false), !dbg !5258
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #8, !dbg !5258
  %39 = bitcast %struct.c_expr* %tmp64 to i8*, !dbg !5259
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8, !dbg !5259
  call void @llvm.dbg.value(metadata %struct.c_expr* %exp2, metadata !5159, metadata !DIExpression(DW_OP_deref)), !dbg !5172
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp64, i32 %37, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %exp2) #6, !dbg !5259
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %39, i64 24, i1 false), !dbg !5259
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8, !dbg !5259
  %value65 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %cond, i64 0, i32 0, !dbg !5260
  %40 = load %union.tree_node*, %union.tree_node** %value65, align 8, !dbg !5260
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !5261
  %cmp66 = icmp eq %union.tree_node* %40, %41, !dbg !5262
  %conv67 = zext i1 %cmp66 to i32, !dbg !5262
  %42 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5263
  %sub68 = sub nsw i32 %42, %conv67, !dbg !5263
  store i32 %sub68, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5263
  %original_code70 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %cond, i64 0, i32 1, !dbg !5264
  %43 = load i32, i32* %original_code70, align 8, !dbg !5264
  %cmp71 = icmp eq i32 %43, 189, !dbg !5265
  %conv73 = zext i1 %cmp71 to i8, !dbg !5266
  %value74 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %exp1, i64 0, i32 0, !dbg !5267
  %44 = load %union.tree_node*, %union.tree_node** %value74, align 8, !dbg !5267
  %original_type75 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %exp1, i64 0, i32 2, !dbg !5268
  %45 = load %union.tree_node*, %union.tree_node** %original_type75, align 8, !dbg !5268
  %value76 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %exp2, i64 0, i32 0, !dbg !5269
  %46 = load %union.tree_node*, %union.tree_node** %value76, align 8, !dbg !5269
  %original_type77 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %exp2, i64 0, i32 2, !dbg !5270
  %47 = load %union.tree_node*, %union.tree_node** %original_type77, align 8, !dbg !5270
  %call78 = call %union.tree_node* @build_conditional_expr(i32 %30, %union.tree_node* %40, i8 zeroext %conv73, %union.tree_node* %44, %union.tree_node* %45, %union.tree_node* %46, %union.tree_node* %47) #6, !dbg !5271
  %value79 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 0, !dbg !5272
  store %union.tree_node* %call78, %union.tree_node** %value79, align 8, !dbg !5273
  %original_code80 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 1, !dbg !5274
  store i32 0, i32* %original_code80, align 8, !dbg !5275
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5276
  %cmp82 = icmp eq %union.tree_node* %44, %48, !dbg !5277
  br i1 %cmp82, label %if.then88, label %lor.lhs.false84, !dbg !5278

lor.lhs.false84:                                  ; preds = %if.end60
  %49 = load %union.tree_node*, %union.tree_node** %value76, align 8, !dbg !5279
  %cmp86 = icmp eq %union.tree_node* %49, %48, !dbg !5280
  br i1 %cmp86, label %if.then88, label %if.else90, !dbg !5281

if.then88:                                        ; preds = %lor.lhs.false84, %if.end60
  %original_type89 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 2, !dbg !5282
  store %union.tree_node* null, %union.tree_node** %original_type89, align 8, !dbg !5283
  br label %if.end126, !dbg !5284

if.else90:                                        ; preds = %lor.lhs.false84
  %tobool92 = icmp eq %union.tree_node* %45, null, !dbg !5285
  br i1 %tobool92, label %cond.false95, label %cond.true93, !dbg !5285

cond.true93:                                      ; preds = %if.else90
  br label %cond.end99, !dbg !5285

cond.false95:                                     ; preds = %if.else90
  %type98 = getelementptr inbounds %union.tree_node, %union.tree_node* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5286
  %50 = load %union.tree_node*, %union.tree_node** %type98, align 8, !dbg !5286
  br label %cond.end99, !dbg !5285

cond.end99:                                       ; preds = %cond.false95, %cond.true93
  %.in = phi %union.tree_node* [ %45, %cond.true93 ], [ %50, %cond.false95 ]
  %cond100 = phi %union.tree_node* [ %45, %cond.true93 ], [ %50, %cond.false95 ], !dbg !5285
  call void @llvm.dbg.value(metadata %union.tree_node* %cond100, metadata !5168, metadata !DIExpression()), !dbg !5287
  %51 = load %union.tree_node*, %union.tree_node** %original_type77, align 8, !dbg !5288
  %tobool102 = icmp eq %union.tree_node* %51, null, !dbg !5289
  br i1 %tobool102, label %cond.false105, label %cond.true103, !dbg !5289

cond.true103:                                     ; preds = %cond.end99
  br label %cond.end109, !dbg !5289

cond.false105:                                    ; preds = %cond.end99
  %type108 = getelementptr inbounds %union.tree_node, %union.tree_node* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5290
  %52 = load %union.tree_node*, %union.tree_node** %type108, align 8, !dbg !5290
  br label %cond.end109, !dbg !5289

cond.end109:                                      ; preds = %cond.false105, %cond.true103
  %.in1 = phi %union.tree_node* [ %51, %cond.true103 ], [ %52, %cond.false105 ]
  %cond110 = phi %union.tree_node* [ %51, %cond.true103 ], [ %52, %cond.false105 ], !dbg !5289
  call void @llvm.dbg.value(metadata %union.tree_node* %cond110, metadata !5171, metadata !DIExpression()), !dbg !5287
  %cmp111 = icmp ne %union.tree_node* %cond100, %48, !dbg !5291
  %cmp113 = icmp ne %union.tree_node* %cond110, %48, !dbg !5292
  %or.cond = and i1 %cmp111, %cmp113, !dbg !5293
  br i1 %or.cond, label %land.lhs.true115, label %cond.false122, !dbg !5293

land.lhs.true115:                                 ; preds = %cond.end109
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5294
  %54 = load %union.tree_node*, %union.tree_node** %53, align 8, !dbg !5294
  %55 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in1, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5295
  %56 = load %union.tree_node*, %union.tree_node** %55, align 8, !dbg !5295
  %cmp119 = icmp eq %union.tree_node* %54, %56, !dbg !5296
  br i1 %cmp119, label %cond.end123, label %cond.false122, !dbg !5297

cond.false122:                                    ; preds = %land.lhs.true115, %cond.end109
  br label %cond.end123, !dbg !5297

cond.end123:                                      ; preds = %land.lhs.true115, %cond.false122
  %cond124 = phi %union.tree_node* [ null, %cond.false122 ], [ %cond100, %land.lhs.true115 ], !dbg !5297
  %original_type125 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 2, !dbg !5298
  store %union.tree_node* %cond124, %union.tree_node** %original_type125, align 8, !dbg !5299
  br label %if.end126

if.end126:                                        ; preds = %cond.end123, %if.then88
  %57 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5300
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5300
  br label %cleanup, !dbg !5301

cleanup:                                          ; preds = %if.end126, %if.then53, %if.then
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5302
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5302
  ret void, !dbg !5302
}

declare dso_local void @default_function_array_conversion(%struct.c_expr* sret, i32, %struct.c_expr* byval(%struct.c_expr) align 8) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_modify_expr(i32, %union.tree_node*, %union.tree_node*, i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_binary_expression(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser, %struct.c_expr* %after) unnamed_addr #5 !dbg !712 {
entry:
  %stack = alloca [11 x %struct.anon.2], align 16
  %tmp = alloca %struct.c_expr, align 8
  %tmp54 = alloca %struct.c_expr, align 8
  %tmp66 = alloca %struct.c_expr, align 8
  %tmp77 = alloca %struct.c_expr, align 8
  %tmp95 = alloca %struct.c_expr, align 8
  %tmp125 = alloca %struct.c_expr, align 8
  %tmp160 = alloca %struct.c_expr, align 8
  %tmp203 = alloca %struct.c_expr, align 8
  %tmp215 = alloca %struct.c_expr, align 8
  %tmp226 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !1921, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.value(metadata %struct.c_expr* %after, metadata !1922, metadata !DIExpression()), !dbg !5303
  %0 = bitcast [11 x %struct.anon.2]* %stack to i8*, !dbg !5304
  call void @llvm.lifetime.start.p0i8(i64 440, i8* nonnull %0) #8, !dbg !5304
  call void @llvm.dbg.declare(metadata [11 x %struct.anon.2]* %stack, metadata !1923, metadata !DIExpression()), !dbg !5305
  call void @llvm.dbg.value(metadata i32 0, metadata !1934, metadata !DIExpression()), !dbg !5303
  %tobool = icmp eq %struct.c_expr* %after, null, !dbg !5306
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !5306

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @c_language, align 4, !dbg !5306
  %and = and i32 %1, 1, !dbg !5306
  %cmp = icmp eq i32 %and, 0, !dbg !5306
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5306

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4857, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5306
  br label %cond.end, !dbg !5306

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5307
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !5308
  %2 = load i32, i32* %location, align 8, !dbg !5308
  %loc = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 0, i32 3, !dbg !5309
  store i32 %2, i32* %loc, align 16, !dbg !5310
  %3 = bitcast %struct.c_expr* %tmp to i8*, !dbg !5311
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5311
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* %after) #7, !dbg !5311
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5311
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5311
  %prec = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 0, i32 1, !dbg !5312
  store i32 0, i32* %prec, align 8, !dbg !5313
  call void @llvm.dbg.value(metadata i32 0, metadata !1933, metadata !DIExpression()), !dbg !5303
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !5314
  %4 = bitcast %struct.c_expr* %tmp54 to i8*, !dbg !5316
  %5 = bitcast %struct.c_expr* %tmp66 to i8*, !dbg !5316
  %6 = bitcast %struct.c_expr* %tmp77 to i8*, !dbg !5316
  %7 = bitcast %struct.c_expr* %tmp125 to i8*, !dbg !5318
  %8 = bitcast %struct.c_expr* %tmp95 to i8*, !dbg !5318
  %9 = bitcast %struct.c_expr* %tmp160 to i8*, !dbg !5320
  br label %while.cond, !dbg !5321

while.cond:                                       ; preds = %cleanup, %cond.end
  %sp.0 = phi i32 [ 0, %cond.end ], [ %sp.2, %cleanup ], !dbg !5322
  call void @llvm.dbg.value(metadata i32 %sp.0, metadata !1933, metadata !DIExpression()), !dbg !5303
  %bf.load = load i8, i8* %error, align 2, !dbg !5323
  %bf.clear = and i8 %bf.load, 1, !dbg !5323
  %tobool3 = icmp eq i8 %bf.clear, 0, !dbg !5324
  br i1 %tobool3, label %if.end, label %cleanup, !dbg !5325

if.end:                                           ; preds = %while.cond
  %call4 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5326
  %10 = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 0, !dbg !5327
  %bf.load5 = load i32, i32* %10, align 8, !dbg !5327
  %trunc = trunc i32 %bf.load5 to i8, !dbg !5328
  switch i8 %trunc, label %cleanup [
    i8 6, label %sw.epilog
    i8 7, label %sw.bb7
    i8 8, label %sw.bb8
    i8 4, label %sw.bb9
    i8 5, label %sw.bb10
    i8 13, label %sw.bb11
    i8 12, label %sw.bb12
    i8 3, label %sw.bb13
    i8 2, label %sw.bb14
    i8 26, label %sw.bb15
    i8 25, label %sw.bb16
    i8 23, label %sw.bb17
    i8 24, label %sw.bb18
    i8 9, label %sw.bb19
    i8 11, label %sw.bb20
    i8 10, label %sw.bb21
    i8 15, label %sw.bb22
    i8 16, label %sw.bb23
  ], !dbg !5328

sw.bb7:                                           ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 10, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 67, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5329

sw.bb8:                                           ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 10, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 71, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5331

sw.bb9:                                           ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 9, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 63, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5332

sw.bb10:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 9, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 64, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5333

sw.bb11:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 8, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 83, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5334

sw.bb12:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 8, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 84, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5335

sw.bb13:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 7, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 97, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5336

sw.bb14:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 7, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 99, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5337

sw.bb15:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 7, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 98, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5338

sw.bb16:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 7, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 100, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5339

sw.bb17:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 6, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 101, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5340

sw.bb18:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 6, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 102, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5341

sw.bb19:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 5, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 89, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5342

sw.bb20:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 4, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 88, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5343

sw.bb21:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 3, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 87, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5344

sw.bb22:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 2, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 91, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5345

sw.bb23:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 1, metadata !1935, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 92, metadata !1937, metadata !DIExpression()), !dbg !5320
  br label %sw.epilog, !dbg !5346

sw.epilog:                                        ; preds = %if.end, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7
  %oprec.0 = phi i32 [ 1, %sw.bb23 ], [ 2, %sw.bb22 ], [ 3, %sw.bb21 ], [ 4, %sw.bb20 ], [ 5, %sw.bb19 ], [ 6, %sw.bb18 ], [ 6, %sw.bb17 ], [ 7, %sw.bb16 ], [ 7, %sw.bb15 ], [ 7, %sw.bb14 ], [ 7, %sw.bb13 ], [ 8, %sw.bb12 ], [ 8, %sw.bb11 ], [ 9, %sw.bb10 ], [ 9, %sw.bb9 ], [ 10, %sw.bb8 ], [ 10, %sw.bb7 ], [ 10, %if.end ], !dbg !5347
  %ocode.0 = phi i32 [ 92, %sw.bb23 ], [ 91, %sw.bb22 ], [ 87, %sw.bb21 ], [ 88, %sw.bb20 ], [ 89, %sw.bb19 ], [ 102, %sw.bb18 ], [ 101, %sw.bb17 ], [ 100, %sw.bb16 ], [ 98, %sw.bb15 ], [ 99, %sw.bb14 ], [ 97, %sw.bb13 ], [ 84, %sw.bb12 ], [ 83, %sw.bb11 ], [ 64, %sw.bb10 ], [ 63, %sw.bb9 ], [ 71, %sw.bb8 ], [ 67, %sw.bb7 ], [ 65, %if.end ], !dbg !5347
  call void @llvm.dbg.value(metadata i32 %ocode.0, metadata !1937, metadata !DIExpression()), !dbg !5320
  call void @llvm.dbg.value(metadata i32 %oprec.0, metadata !1935, metadata !DIExpression()), !dbg !5320
  %call24 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5348
  %location25 = getelementptr inbounds %struct.c_token, %struct.c_token* %call24, i64 0, i32 2, !dbg !5349
  %11 = load i32, i32* %location25, align 8, !dbg !5349
  call void @llvm.dbg.value(metadata i32 %11, metadata !1934, metadata !DIExpression()), !dbg !5303
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5350
  br label %while.cond26, !dbg !5351

while.cond26:                                     ; preds = %sw.epilog49, %sw.epilog
  %sp.1 = phi i32 [ %sp.0, %sw.epilog ], [ %sub50.pre-phi, %sw.epilog49 ], !dbg !5303
  call void @llvm.dbg.value(metadata i32 %sp.1, metadata !1933, metadata !DIExpression()), !dbg !5303
  %idxprom = sext i32 %sp.1 to i64, !dbg !5352
  %prec28 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom, i32 1, !dbg !5353
  %12 = load i32, i32* %prec28, align 8, !dbg !5353
  %cmp29 = icmp ugt i32 %oprec.0, %12, !dbg !5354
  br i1 %cmp29, label %while.end, label %do.body, !dbg !5351

do.body:                                          ; preds = %while.cond26
  %op = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom, i32 2, !dbg !5355
  %13 = load i32, i32* %op, align 4, !dbg !5355
  switch i32 %13, label %do.body.sw.epilog49_crit_edge [
    i32 91, label %sw.bb33
    i32 92, label %sw.bb39
  ], !dbg !5355

do.body.sw.epilog49_crit_edge:                    ; preds = %do.body
  %.pre3 = add nsw i32 %sp.1, -1, !dbg !5355
  %.pre4 = sext i32 %.pre3 to i64, !dbg !5355
  br label %sw.epilog49, !dbg !5355

sw.bb33:                                          ; preds = %do.body
  %sub = add nsw i32 %sp.1, -1, !dbg !5356
  %idxprom34 = sext i32 %sub to i64, !dbg !5356
  %value = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom34, i32 0, i32 0, !dbg !5356
  %14 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5356
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !5356
  %cmp37 = icmp eq %union.tree_node* %14, %15, !dbg !5356
  %conv = zext i1 %cmp37 to i32, !dbg !5356
  %16 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5356
  %sub38 = sub nsw i32 %16, %conv, !dbg !5356
  store i32 %sub38, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5356
  br label %sw.epilog49, !dbg !5356

sw.bb39:                                          ; preds = %do.body
  %sub40 = add nsw i32 %sp.1, -1, !dbg !5356
  %idxprom41 = sext i32 %sub40 to i64, !dbg !5356
  %value44 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom41, i32 0, i32 0, !dbg !5356
  %17 = load %union.tree_node*, %union.tree_node** %value44, align 8, !dbg !5356
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !5356
  %cmp45 = icmp eq %union.tree_node* %17, %18, !dbg !5356
  %conv46 = zext i1 %cmp45 to i32, !dbg !5356
  %19 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5356
  %sub47 = sub nsw i32 %19, %conv46, !dbg !5356
  store i32 %sub47, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5356
  br label %sw.epilog49, !dbg !5356

sw.epilog49:                                      ; preds = %do.body.sw.epilog49_crit_edge, %sw.bb39, %sw.bb33
  %idxprom51.pre-phi = phi i64 [ %.pre4, %do.body.sw.epilog49_crit_edge ], [ %idxprom41, %sw.bb39 ], [ %idxprom34, %sw.bb33 ], !dbg !5355
  %sub50.pre-phi = phi i32 [ %.pre3, %do.body.sw.epilog49_crit_edge ], [ %sub40, %sw.bb39 ], [ %sub, %sw.bb33 ], !dbg !5355
  %expr53 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom51.pre-phi, i32 0, !dbg !5355
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5355
  %loc58 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom51.pre-phi, i32 3, !dbg !5355
  %20 = load i32, i32* %loc58, align 8, !dbg !5355
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp54, i32 %20, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr53) #6, !dbg !5355
  %21 = bitcast %struct.c_expr* %expr53 to i8*, !dbg !5355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !5355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5355
  %expr65 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom, i32 0, !dbg !5355
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5355
  %loc69 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom, i32 3, !dbg !5355
  %22 = load i32, i32* %loc69, align 8, !dbg !5355
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp66, i32 %22, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr65) #6, !dbg !5355
  %23 = bitcast %struct.c_expr* %expr65 to i8*, !dbg !5355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %23, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !5355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5355
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !5355
  %24 = load i32, i32* %loc69, align 8, !dbg !5355
  %25 = load i32, i32* %op, align 4, !dbg !5355
  call void @parser_build_binary_op(%struct.c_expr* nonnull sret %tmp77, i32 %24, i32 %25, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr53, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr65) #6, !dbg !5355
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %21, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !5355
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !5355
  call void @llvm.dbg.value(metadata i32 %sub50.pre-phi, metadata !1933, metadata !DIExpression()), !dbg !5303
  br label %while.cond26, !dbg !5351, !llvm.loop !5358

while.end:                                        ; preds = %while.cond26
  %sp.1.lcssa = phi i32 [ %sp.1, %while.cond26 ], !dbg !5303
  %idxprom.lcssa = phi i64 [ %idxprom, %while.cond26 ], !dbg !5352
  call void @llvm.dbg.value(metadata i32 %sp.1.lcssa, metadata !1933, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.value(metadata i32 %sp.1.lcssa, metadata !1933, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.value(metadata i32 %sp.1.lcssa, metadata !1933, metadata !DIExpression()), !dbg !5303
  switch i32 %ocode.0, label %sw.epilog153 [
    i32 91, label %sw.bb91
    i32 92, label %sw.bb121
  ], !dbg !5360

sw.bb91:                                          ; preds = %while.end
  %expr94 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom.lcssa, i32 0, !dbg !5361
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !5362
  %loc98 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom.lcssa, i32 3, !dbg !5363
  %26 = load i32, i32* %loc98, align 8, !dbg !5363
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp95, i32 %26, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr94) #6, !dbg !5362
  %27 = bitcast %struct.c_expr* %expr94 to i8*, !dbg !5362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %27, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !5362
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !5362
  %28 = load i32, i32* %loc98, align 8, !dbg !5364
  %value108 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom.lcssa, i32 0, i32 0, !dbg !5365
  %29 = load %union.tree_node*, %union.tree_node** %value108, align 8, !dbg !5365
  %call109 = call %union.tree_node* @default_conversion(%union.tree_node* %29) #6, !dbg !5366
  %call110 = call %union.tree_node* @c_objc_common_truthvalue_conversion(i32 %28, %union.tree_node* %call109) #6, !dbg !5367
  store %union.tree_node* %call110, %union.tree_node** %value108, align 8, !dbg !5368
  %30 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !5369
  %cmp119 = icmp eq %union.tree_node* %call110, %30, !dbg !5370
  %conv120 = zext i1 %cmp119 to i32, !dbg !5370
  %31 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5371
  %add = add nsw i32 %31, %conv120, !dbg !5371
  store i32 %add, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5371
  br label %sw.epilog153, !dbg !5372

sw.bb121:                                         ; preds = %while.end
  %expr124 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom.lcssa, i32 0, !dbg !5373
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !5374
  %loc128 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom.lcssa, i32 3, !dbg !5375
  %32 = load i32, i32* %loc128, align 8, !dbg !5375
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp125, i32 %32, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr124) #6, !dbg !5374
  %33 = bitcast %struct.c_expr* %expr124 to i8*, !dbg !5374
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %33, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !5374
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !5374
  %34 = load i32, i32* %loc128, align 8, !dbg !5376
  %value138 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom.lcssa, i32 0, i32 0, !dbg !5377
  %35 = load %union.tree_node*, %union.tree_node** %value138, align 8, !dbg !5377
  %call139 = call %union.tree_node* @default_conversion(%union.tree_node* %35) #6, !dbg !5378
  %call140 = call %union.tree_node* @c_objc_common_truthvalue_conversion(i32 %34, %union.tree_node* %call139) #6, !dbg !5379
  store %union.tree_node* %call140, %union.tree_node** %value138, align 8, !dbg !5380
  %36 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !5381
  %cmp149 = icmp eq %union.tree_node* %call140, %36, !dbg !5382
  %conv150 = zext i1 %cmp149 to i32, !dbg !5382
  %37 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5383
  %add151 = add nsw i32 %37, %conv150, !dbg !5383
  store i32 %add151, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5383
  br label %sw.epilog153, !dbg !5384

sw.epilog153:                                     ; preds = %while.end, %sw.bb121, %sw.bb91
  %inc = add nsw i32 %sp.1.lcssa, 1, !dbg !5385
  call void @llvm.dbg.value(metadata i32 %inc, metadata !1933, metadata !DIExpression()), !dbg !5303
  %idxprom154 = sext i32 %inc to i64, !dbg !5386
  %loc156 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom154, i32 3, !dbg !5387
  store i32 %11, i32* %loc156, align 8, !dbg !5388
  %expr159 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom154, i32 0, !dbg !5389
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !5390
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp160, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5390
  %38 = bitcast %struct.c_expr* %expr159 to i8*, !dbg !5390
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !5390
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !5390
  %prec163 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom154, i32 1, !dbg !5391
  store i32 %oprec.0, i32* %prec163, align 8, !dbg !5392
  %op166 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom154, i32 2, !dbg !5393
  store i32 %ocode.0, i32* %op166, align 4, !dbg !5394
  store i32 %11, i32* %loc156, align 8, !dbg !5395
  br label %cleanup, !dbg !5396

cleanup:                                          ; preds = %while.cond, %if.end, %sw.epilog153
  %sp.2 = phi i32 [ %inc, %sw.epilog153 ], [ %sp.0, %while.cond ], [ %sp.0, %if.end ], !dbg !5303
  %cleanup.dest.slot.0 = phi i1 [ true, %sw.epilog153 ], [ false, %while.cond ], [ false, %if.end ]
  call void @llvm.dbg.value(metadata i32 %sp.2, metadata !1933, metadata !DIExpression()), !dbg !5303
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.cond171.preheader, !llvm.loop !5397

while.cond171.preheader:                          ; preds = %cleanup
  %sp.2.lcssa = phi i32 [ %sp.2, %cleanup ], !dbg !5303
  call void @llvm.dbg.value(metadata i32 %sp.2.lcssa, metadata !1933, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.value(metadata i32 %sp.2.lcssa, metadata !1933, metadata !DIExpression()), !dbg !5303
  call void @llvm.dbg.value(metadata i32 %sp.2.lcssa, metadata !1933, metadata !DIExpression()), !dbg !5303
  %39 = bitcast %struct.c_expr* %tmp203 to i8*, !dbg !5398
  %40 = bitcast %struct.c_expr* %tmp215 to i8*, !dbg !5398
  %41 = bitcast %struct.c_expr* %tmp226 to i8*, !dbg !5398
  br label %while.cond171, !dbg !5400

while.cond171:                                    ; preds = %while.cond171.preheader, %sw.epilog198
  %sp.3 = phi i32 [ %sub199.pre-phi, %sw.epilog198 ], [ %sp.2.lcssa, %while.cond171.preheader ], !dbg !5303
  call void @llvm.dbg.value(metadata i32 %sp.3, metadata !1933, metadata !DIExpression()), !dbg !5303
  %cmp172 = icmp sgt i32 %sp.3, 0, !dbg !5401
  br i1 %cmp172, label %do.body175, label %while.end243, !dbg !5400

do.body175:                                       ; preds = %while.cond171
  %idxprom176 = sext i32 %sp.3 to i64, !dbg !5402
  %op178 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom176, i32 2, !dbg !5402
  %42 = load i32, i32* %op178, align 4, !dbg !5402
  switch i32 %42, label %do.body175.sw.epilog198_crit_edge [
    i32 91, label %sw.bb179
    i32 92, label %sw.bb188
  ], !dbg !5402

do.body175.sw.epilog198_crit_edge:                ; preds = %do.body175
  %.pre = add nsw i32 %sp.3, -1, !dbg !5402
  %.pre2 = sext i32 %.pre to i64, !dbg !5402
  br label %sw.epilog198, !dbg !5402

sw.bb179:                                         ; preds = %do.body175
  %sub180 = add nsw i32 %sp.3, -1, !dbg !5403
  %idxprom181 = sext i32 %sub180 to i64, !dbg !5403
  %value184 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom181, i32 0, i32 0, !dbg !5403
  %43 = load %union.tree_node*, %union.tree_node** %value184, align 8, !dbg !5403
  %44 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 47), align 8, !dbg !5403
  %cmp185 = icmp eq %union.tree_node* %43, %44, !dbg !5403
  %conv186 = zext i1 %cmp185 to i32, !dbg !5403
  %45 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5403
  %sub187 = sub nsw i32 %45, %conv186, !dbg !5403
  store i32 %sub187, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5403
  br label %sw.epilog198, !dbg !5403

sw.bb188:                                         ; preds = %do.body175
  %sub189 = add nsw i32 %sp.3, -1, !dbg !5403
  %idxprom190 = sext i32 %sub189 to i64, !dbg !5403
  %value193 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom190, i32 0, i32 0, !dbg !5403
  %46 = load %union.tree_node*, %union.tree_node** %value193, align 8, !dbg !5403
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([55 x %union.tree_node*], [55 x %union.tree_node*]* @c_global_trees, i64 0, i64 46), align 16, !dbg !5403
  %cmp194 = icmp eq %union.tree_node* %46, %47, !dbg !5403
  %conv195 = zext i1 %cmp194 to i32, !dbg !5403
  %48 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5403
  %sub196 = sub nsw i32 %48, %conv195, !dbg !5403
  store i32 %sub196, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !5403
  br label %sw.epilog198, !dbg !5403

sw.epilog198:                                     ; preds = %do.body175.sw.epilog198_crit_edge, %sw.bb188, %sw.bb179
  %idxprom200.pre-phi = phi i64 [ %.pre2, %do.body175.sw.epilog198_crit_edge ], [ %idxprom190, %sw.bb188 ], [ %idxprom181, %sw.bb179 ], !dbg !5402
  %sub199.pre-phi = phi i32 [ %.pre, %do.body175.sw.epilog198_crit_edge ], [ %sub189, %sw.bb188 ], [ %sub180, %sw.bb179 ], !dbg !5402
  %expr202 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom200.pre-phi, i32 0, !dbg !5402
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8, !dbg !5402
  %loc207 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom200.pre-phi, i32 3, !dbg !5402
  %49 = load i32, i32* %loc207, align 8, !dbg !5402
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp203, i32 %49, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr202) #6, !dbg !5402
  %50 = bitcast %struct.c_expr* %expr202 to i8*, !dbg !5402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %39, i64 24, i1 false), !dbg !5402
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8, !dbg !5402
  %expr214 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom176, i32 0, !dbg !5402
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8, !dbg !5402
  %loc218 = getelementptr inbounds [11 x %struct.anon.2], [11 x %struct.anon.2]* %stack, i64 0, i64 %idxprom176, i32 3, !dbg !5402
  %51 = load i32, i32* %loc218, align 8, !dbg !5402
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp215, i32 %51, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr214) #6, !dbg !5402
  %52 = bitcast %struct.c_expr* %expr214 to i8*, !dbg !5402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %40, i64 24, i1 false), !dbg !5402
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8, !dbg !5402
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8, !dbg !5402
  %53 = load i32, i32* %loc218, align 8, !dbg !5402
  %54 = load i32, i32* %op178, align 4, !dbg !5402
  call void @parser_build_binary_op(%struct.c_expr* nonnull sret %tmp226, i32 %53, i32 %54, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr202, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr214) #6, !dbg !5402
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %50, i8* nonnull align 8 %41, i64 24, i1 false), !dbg !5402
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8, !dbg !5402
  call void @llvm.dbg.value(metadata i32 %sub199.pre-phi, metadata !1933, metadata !DIExpression()), !dbg !5303
  br label %while.cond171, !dbg !5400, !llvm.loop !5405

while.end243:                                     ; preds = %while.cond171
  %55 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5407
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* nonnull align 16 %0, i64 24, i1 false), !dbg !5407
  call void @llvm.lifetime.end.p0i8(i64 440, i8* nonnull %0) #8, !dbg !5408
  ret void, !dbg !5408
}

declare dso_local %union.tree_node* @c_save_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @default_conversion(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_objc_common_truthvalue_conversion(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_expression_conv(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !5409 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  %tmp1 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5413, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !5414, metadata !DIExpression()), !dbg !5417
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5418
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !5419
  %0 = load i32, i32* %location, align 8, !dbg !5419
  call void @llvm.dbg.value(metadata i32 %0, metadata !5415, metadata !DIExpression()), !dbg !5416
  %1 = bitcast %struct.c_expr* %tmp to i8*, !dbg !5420
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5420
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !5420
  %2 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5420
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !5420
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5420
  %3 = bitcast %struct.c_expr* %tmp1 to i8*, !dbg !5421
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5421
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp1, i32 %0, %struct.c_expr* byval(%struct.c_expr) align 8 %agg.result) #6, !dbg !5421
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5421
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5421
  ret void, !dbg !5422
}

declare dso_local %union.tree_node* @build_conditional_expr(i32, %union.tree_node*, i8 zeroext, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_cast_expression(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser, %struct.c_expr* %after) unnamed_addr #5 !dbg !5423 {
entry:
  %ret = alloca %struct.c_expr, align 8
  %expr = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp20 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5425, metadata !DIExpression()), !dbg !5435
  call void @llvm.dbg.value(metadata %struct.c_expr* %after, metadata !5426, metadata !DIExpression()), !dbg !5435
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5436
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !5437
  %0 = load i32, i32* %location, align 8, !dbg !5437
  call void @llvm.dbg.value(metadata i32 %0, metadata !5427, metadata !DIExpression()), !dbg !5435
  %tobool = icmp eq %struct.c_expr* %after, null, !dbg !5438
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !5438

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @c_language, align 4, !dbg !5438
  %and = and i32 %1, 1, !dbg !5438
  %cmp = icmp eq i32 %and, 0, !dbg !5438
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !5438

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5001, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5438
  br label %cond.end, !dbg !5438

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  br i1 %tobool, label %if.end, label %if.then, !dbg !5439

if.then:                                          ; preds = %cond.end
  tail call fastcc void @c_parser_postfix_expression_after_primary(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser, i32 %0, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %after) #7, !dbg !5440
  br label %cleanup28, !dbg !5442

if.end:                                           ; preds = %cond.end
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !5443
  %tobool3 = icmp eq i8 %call2, 0, !dbg !5443
  br i1 %tobool3, label %if.else, label %land.lhs.true, !dbg !5444

land.lhs.true:                                    ; preds = %if.end
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !5445
  %call5 = tail call fastcc zeroext i8 @c_token_starts_typename(%struct.c_token* %call4) #7, !dbg !5446
  %tobool7 = icmp eq i8 %call5, 0, !dbg !5446
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !5447

if.then8:                                         ; preds = %land.lhs.true
  %2 = bitcast %struct.c_expr* %ret to i8*, !dbg !5448
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5448
  %3 = bitcast %struct.c_expr* %expr to i8*, !dbg !5449
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5449
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5450
  %call9 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !5451
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call9, metadata !5428, metadata !DIExpression()), !dbg !5452
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !5453
  %cmp10 = icmp eq %struct.c_type_name* %call9, null, !dbg !5454
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !5456

if.then12:                                        ; preds = %if.then8
  %4 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !5457
  %5 = bitcast %struct.c_expr* %ret to i64*, !dbg !5459
  store i64 %4, i64* %5, align 8, !dbg !5459
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 1, !dbg !5460
  store i32 0, i32* %original_code, align 8, !dbg !5461
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 2, !dbg !5462
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !5463
  %6 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5464
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !5464
  br label %cleanup, !dbg !5465

if.end13:                                         ; preds = %if.then8
  %specs = getelementptr inbounds %struct.c_type_name, %struct.c_type_name* %call9, i64 0, i32 0, !dbg !5466
  %7 = load %struct.c_declspecs*, %struct.c_declspecs** %specs, align 8, !dbg !5466
  %type = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %7, i64 0, i32 0, !dbg !5467
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5467
  tail call void @used_types_insert(%union.tree_node* %8) #6, !dbg !5468
  %call14 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !5469
  %tobool15 = icmp eq i8 %call14, 0, !dbg !5469
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !5471

if.then16:                                        ; preds = %if.end13
  tail call fastcc void @c_parser_postfix_expression_after_paren_type(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser, %struct.c_type_name* nonnull %call9, i32 %0) #7, !dbg !5472
  br label %cleanup, !dbg !5473

if.end17:                                         ; preds = %if.end13
  %call18 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5474
  %location19 = getelementptr inbounds %struct.c_token, %struct.c_token* %call18, i64 0, i32 2, !dbg !5475
  %9 = load i32, i32* %location19, align 8, !dbg !5475
  call void @llvm.dbg.value(metadata i32 %9, metadata !5433, metadata !DIExpression()), !dbg !5476
  %10 = bitcast %struct.c_expr* %tmp to i8*, !dbg !5477
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !5477
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5477
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !5477
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !5477
  %11 = bitcast %struct.c_expr* %tmp20 to i8*, !dbg !5478
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !5478
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr, metadata !5432, metadata !DIExpression(DW_OP_deref)), !dbg !5452
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp20, i32 %9, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #6, !dbg !5478
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !5478
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !5478
  %value21 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !5479
  %12 = load %union.tree_node*, %union.tree_node** %value21, align 8, !dbg !5479
  %call22 = call %union.tree_node* @c_cast_expr(i32 %0, %struct.c_type_name* nonnull %call9, %union.tree_node* %12) #6, !dbg !5480
  %value23 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 0, !dbg !5481
  store %union.tree_node* %call22, %union.tree_node** %value23, align 8, !dbg !5482
  %original_code24 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 1, !dbg !5483
  store i32 0, i32* %original_code24, align 8, !dbg !5484
  %original_type25 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 2, !dbg !5485
  store %union.tree_node* null, %union.tree_node** %original_type25, align 8, !dbg !5486
  %13 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5487
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !5487
  br label %cleanup, !dbg !5488

cleanup:                                          ; preds = %if.end17, %if.then16, %if.then12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5489
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5489
  br label %cleanup28

if.else:                                          ; preds = %land.lhs.true, %if.end
  tail call fastcc void @c_parser_unary_expression(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser) #7, !dbg !5490
  br label %cleanup28, !dbg !5491

cleanup28:                                        ; preds = %if.else, %cleanup, %if.then
  ret void, !dbg !5492
}

declare dso_local void @parser_build_binary_op(%struct.c_expr* sret, i32, i32, %struct.c_expr* byval(%struct.c_expr) align 8, %struct.c_expr* byval(%struct.c_expr) align 8) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_postfix_expression_after_primary(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser, i32 %expr_loc, %struct.c_expr* byval(%struct.c_expr) align 8 %expr) unnamed_addr #5 !dbg !5493 {
entry:
  %orig_expr = alloca %struct.c_expr, align 8
  %origtypes = alloca %struct.VEC_tree_gc*, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp40 = alloca %struct.c_expr, align 8
  %tmp77 = alloca %struct.c_expr, align 8
  %tmp121 = alloca %struct.c_expr, align 8
  %tmp128 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5497, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.value(metadata i32 %expr_loc, metadata !5498, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.declare(metadata %struct.c_expr* %expr, metadata !5499, metadata !DIExpression()), !dbg !5515
  %0 = bitcast %struct.c_expr* %orig_expr to i8*, !dbg !5516
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5516
  %1 = bitcast %struct.VEC_tree_gc** %origtypes to i8*, !dbg !5517
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5517
  %2 = bitcast %struct.c_expr* %tmp128 to i8*, !dbg !5518
  %3 = bitcast %struct.c_expr* %expr to i8*, !dbg !5518
  %value129 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !5518
  %original_code132 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 1, !dbg !5518
  %original_type133 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 2, !dbg !5518
  %4 = bitcast %struct.c_expr* %tmp121 to i8*, !dbg !5518
  %5 = bitcast %struct.c_expr* %tmp77 to i8*, !dbg !5518
  %6 = bitcast %union.tree_node** %original_type133 to i64*, !dbg !5519
  %7 = bitcast %struct.c_expr* %expr to i64*, !dbg !5521
  %8 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5521
  %9 = bitcast %struct.c_expr* %tmp40 to i8*, !dbg !5518
  %10 = bitcast %struct.c_expr* %orig_expr to i64**, !dbg !5524
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !5518
  br label %while.cond, !dbg !5526

while.cond:                                       ; preds = %cleanup, %entry
  %call = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5527
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !5528
  %11 = load i32, i32* %location, align 8, !dbg !5528
  call void @llvm.dbg.value(metadata i32 %11, metadata !5505, metadata !DIExpression()), !dbg !5529
  %call1 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5530
  %12 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !5531
  %bf.load = load i32, i32* %12, align 8, !dbg !5531
  %trunc = trunc i32 %bf.load to i8, !dbg !5532
  switch i8 %trunc, label %sw.default [
    i8 39, label %sw.bb
    i8 20, label %sw.bb5
    i8 48, label %sw.bb39
    i8 47, label %sw.bb76
    i8 45, label %sw.bb120
    i8 46, label %sw.bb127
  ], !dbg !5532

sw.bb:                                            ; preds = %while.cond
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5533
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !5534
  %13 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5535
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !5502, metadata !DIExpression()), !dbg !5514
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !5536
  %14 = load %union.tree_node*, %union.tree_node** %value129, align 8, !dbg !5537
  %call3 = call %union.tree_node* @build_array_ref(i32 %11, %union.tree_node* %14, %union.tree_node* %13) #6, !dbg !5538
  store %union.tree_node* %call3, %union.tree_node** %value129, align 8, !dbg !5539
  store i32 0, i32* %original_code132, align 8, !dbg !5540
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5541
  br label %cleanup, !dbg !5542

sw.bb5:                                           ; preds = %while.cond
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5543
  %call6 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !5544
  %tobool = icmp eq i8 %call6, 0, !dbg !5544
  br i1 %tobool, label %if.else, label %if.end, !dbg !5546

if.else:                                          ; preds = %sw.bb5
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %origtypes, metadata !5504, metadata !DIExpression(DW_OP_deref)), !dbg !5514
  %call7 = call fastcc %struct.VEC_tree_gc* @c_parser_expr_list(%struct.c_parser* %parser, i8 zeroext 1, i8 zeroext 0, %struct.VEC_tree_gc** nonnull %origtypes) #7, !dbg !5547
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call7, metadata !5503, metadata !DIExpression()), !dbg !5514
  br label %if.end

if.end:                                           ; preds = %sw.bb5, %if.else
  %exprlist.0 = phi %struct.VEC_tree_gc* [ %call7, %if.else ], [ null, %sw.bb5 ], !dbg !5548
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %exprlist.0, metadata !5503, metadata !DIExpression()), !dbg !5514
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !5549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5550
  %15 = load %union.tree_node*, %union.tree_node** %value129, align 8, !dbg !5551
  %16 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %origtypes, align 8, !dbg !5552
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %16, metadata !5504, metadata !DIExpression()), !dbg !5514
  %call9 = call %union.tree_node* @build_function_call_vec(i32 %11, %union.tree_node* %15, %struct.VEC_tree_gc* %exprlist.0, %struct.VEC_tree_gc* %16) #6, !dbg !5553
  store %union.tree_node* %call9, %union.tree_node** %value129, align 8, !dbg !5554
  store i32 0, i32* %original_code132, align 8, !dbg !5555
  %.cast6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5556
  %bf.load13 = load i64, i64* %.cast6, align 8, !dbg !5556
  %bf.cast7 = and i64 %bf.load13, 65535, !dbg !5557
  %cmp = icmp eq i64 %bf.cast7, 23, !dbg !5557
  br i1 %cmp, label %land.lhs.true, label %if.end34, !dbg !5558

land.lhs.true:                                    ; preds = %if.end
  %17 = load i64*, i64** %10, align 8, !dbg !5559
  %bf.load17 = load i64, i64* %17, align 8, !dbg !5559
  %bf.cast198 = and i64 %bf.load17, 65535, !dbg !5560
  %cmp20 = icmp eq i64 %bf.cast198, 29, !dbg !5560
  br i1 %cmp20, label %land.lhs.true21, label %if.end34, !dbg !5561

land.lhs.true21:                                  ; preds = %land.lhs.true
  %built_in_class = getelementptr inbounds i64, i64* %17, i64 27, !dbg !5562
  %18 = bitcast i64* %built_in_class to i32*, !dbg !5562
  %bf.load23 = load i32, i32* %18, align 8, !dbg !5562
  %bf.clear24 = and i32 %bf.load23, 6144, !dbg !5562
  %cmp25 = icmp eq i32 %bf.clear24, 6144, !dbg !5563
  br i1 %cmp25, label %land.lhs.true26, label %if.end34, !dbg !5564

land.lhs.true26:                                  ; preds = %land.lhs.true21
  %bf.clear30 = and i32 %bf.load23, 2047, !dbg !5565
  %cmp31 = icmp eq i32 %bf.clear30, 428, !dbg !5566
  br i1 %cmp31, label %if.then32, label %if.end34, !dbg !5567

if.then32:                                        ; preds = %land.lhs.true26
  store i32 189, i32* %original_code132, align 8, !dbg !5568
  br label %if.end34, !dbg !5569

if.end34:                                         ; preds = %if.then32, %land.lhs.true26, %land.lhs.true21, %land.lhs.true, %if.end
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5570
  %cmp36 = icmp eq %struct.VEC_tree_gc* %exprlist.0, null, !dbg !5571
  br i1 %cmp36, label %cleanup, label %if.then37, !dbg !5573

if.then37:                                        ; preds = %if.end34
  call void @release_tree_vector(%struct.VEC_tree_gc* nonnull %exprlist.0) #6, !dbg !5574
  %19 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %origtypes, align 8, !dbg !5576
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %19, metadata !5504, metadata !DIExpression()), !dbg !5514
  call void @release_tree_vector(%struct.VEC_tree_gc* %19) #6, !dbg !5577
  br label %cleanup, !dbg !5578

sw.bb39:                                          ; preds = %while.cond
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5579
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !5580
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp40, i32 %expr_loc, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #6, !dbg !5580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !5580
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !5580
  %call41 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !5581
  %tobool42 = icmp eq i8 %call41, 0, !dbg !5581
  br i1 %tobool42, label %if.else46, label %if.then43, !dbg !5583

if.then43:                                        ; preds = %sw.bb39
  %call44 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5584
  %value45 = getelementptr inbounds %struct.c_token, %struct.c_token* %call44, i64 0, i32 1, !dbg !5585
  %20 = load %union.tree_node*, %union.tree_node** %value45, align 8, !dbg !5585
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !5501, metadata !DIExpression()), !dbg !5514
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5586
  %21 = load %union.tree_node*, %union.tree_node** %value129, align 8, !dbg !5587
  %call52 = call %union.tree_node* @build_component_ref(i32 %11, %union.tree_node* %21, %union.tree_node* %20) #6, !dbg !5588
  store %union.tree_node* %call52, %union.tree_node** %value129, align 8, !dbg !5589
  store i32 0, i32* %original_code132, align 8, !dbg !5590
  %.cast3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5591
  %bf.load57 = load i64, i64* %.cast3, align 8, !dbg !5591
  %bf.cast594 = and i64 %bf.load57, 65535, !dbg !5592
  %cmp60 = icmp eq i64 %bf.cast594, 41, !dbg !5592
  br i1 %cmp60, label %if.else63, label %if.then61, !dbg !5593

if.else46:                                        ; preds = %sw.bb39
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !5594
  %22 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !5596
  store i64 %22, i64* %7, align 8, !dbg !5597
  store i32 0, i32* %original_code132, align 8, !dbg !5598
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5599
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5600
  br label %cleanup, !dbg !5601

if.then61:                                        ; preds = %if.then43
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5602
  br label %cleanup, !dbg !5603

if.else63:                                        ; preds = %if.then43
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5604
  %24 = load %union.tree_node*, %union.tree_node** %23, align 8, !dbg !5604
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !5507, metadata !DIExpression()), !dbg !5605
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5606
  %bf.load66 = load i64, i64* %25, align 8, !dbg !5606
  %bf.cast685 = and i64 %bf.load66, 65535, !dbg !5608
  %cmp69 = icmp eq i64 %bf.cast685, 31, !dbg !5608
  br i1 %cmp69, label %if.else72, label %if.then70, !dbg !5609

if.then70:                                        ; preds = %if.else63
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5610
  br label %cleanup, !dbg !5611

if.else72:                                        ; preds = %if.else63
  %26 = getelementptr inbounds %union.tree_node, %union.tree_node* %24, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !5612
  %27 = bitcast %union.tree_node** %26 to i64*, !dbg !5612
  %28 = load i64, i64* %27, align 8, !dbg !5612
  store i64 %28, i64* %6, align 8, !dbg !5613
  br label %cleanup

sw.bb76:                                          ; preds = %while.cond
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5614
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5615
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp77, i32 %expr_loc, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #6, !dbg !5615
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !5615
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5615
  %call78 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !5616
  %tobool79 = icmp eq i8 %call78, 0, !dbg !5616
  br i1 %tobool79, label %if.else83, label %if.then80, !dbg !5617

if.then80:                                        ; preds = %sw.bb76
  %call81 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5618
  %value82 = getelementptr inbounds %struct.c_token, %struct.c_token* %call81, i64 0, i32 1, !dbg !5619
  %29 = load %union.tree_node*, %union.tree_node** %value82, align 8, !dbg !5619
  call void @llvm.dbg.value(metadata %union.tree_node* %29, metadata !5501, metadata !DIExpression()), !dbg !5514
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5620
  %30 = load %union.tree_node*, %union.tree_node** %value129, align 8, !dbg !5621
  %call89 = call %union.tree_node* @build_indirect_ref(i32 %11, %union.tree_node* %30, i32 3) #6, !dbg !5622
  %call90 = call %union.tree_node* @build_component_ref(i32 %11, %union.tree_node* %call89, %union.tree_node* %29) #6, !dbg !5623
  store %union.tree_node* %call90, %union.tree_node** %value129, align 8, !dbg !5624
  store i32 0, i32* %original_code132, align 8, !dbg !5625
  %.cast = getelementptr inbounds %union.tree_node, %union.tree_node* %call90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5626
  %bf.load95 = load i64, i64* %.cast, align 8, !dbg !5626
  %bf.cast971 = and i64 %bf.load95, 65535, !dbg !5627
  %cmp98 = icmp eq i64 %bf.cast971, 41, !dbg !5627
  br i1 %cmp98, label %if.else101, label %if.then99, !dbg !5628

if.else83:                                        ; preds = %sw.bb76
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !5629
  %31 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !5630
  store i64 %31, i64* %7, align 8, !dbg !5631
  store i32 0, i32* %original_code132, align 8, !dbg !5632
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5633
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5634
  br label %cleanup, !dbg !5635

if.then99:                                        ; preds = %if.then80
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5636
  br label %cleanup, !dbg !5637

if.else101:                                       ; preds = %if.then80
  %32 = getelementptr inbounds %union.tree_node, %union.tree_node* %call90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5638
  %33 = load %union.tree_node*, %union.tree_node** %32, align 8, !dbg !5638
  call void @llvm.dbg.value(metadata %union.tree_node* %33, metadata !5511, metadata !DIExpression()), !dbg !5639
  %34 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5640
  %bf.load108 = load i64, i64* %34, align 8, !dbg !5640
  %bf.cast1102 = and i64 %bf.load108, 65535, !dbg !5641
  %cmp111 = icmp eq i64 %bf.cast1102, 31, !dbg !5641
  br i1 %cmp111, label %if.else114, label %if.then112, !dbg !5642

if.then112:                                       ; preds = %if.else101
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5643
  br label %cleanup, !dbg !5644

if.else114:                                       ; preds = %if.else101
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %33, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !5645
  %36 = bitcast %union.tree_node** %35 to i64*, !dbg !5645
  %37 = load i64, i64* %36, align 8, !dbg !5645
  store i64 %37, i64* %6, align 8, !dbg !5646
  br label %cleanup

sw.bb120:                                         ; preds = %while.cond
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5647
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5648
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp121, i32 %expr_loc, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #6, !dbg !5648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !5648
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5648
  %38 = load %union.tree_node*, %union.tree_node** %value129, align 8, !dbg !5649
  %call123 = call %union.tree_node* @build_unary_op(i32 %11, i32 128, %union.tree_node* %38, i32 0) #6, !dbg !5650
  store %union.tree_node* %call123, %union.tree_node** %value129, align 8, !dbg !5651
  store i32 0, i32* %original_code132, align 8, !dbg !5652
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5653
  br label %cleanup, !dbg !5654

sw.bb127:                                         ; preds = %while.cond
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5655
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5656
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp128, i32 %expr_loc, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #6, !dbg !5656
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !5656
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5656
  %39 = load %union.tree_node*, %union.tree_node** %value129, align 8, !dbg !5657
  %call130 = call %union.tree_node* @build_unary_op(i32 %11, i32 127, %union.tree_node* %39, i32 0) #6, !dbg !5658
  store %union.tree_node* %call130, %union.tree_node** %value129, align 8, !dbg !5659
  store i32 0, i32* %original_code132, align 8, !dbg !5660
  store %union.tree_node* null, %union.tree_node** %original_type133, align 8, !dbg !5661
  br label %cleanup, !dbg !5662

sw.default:                                       ; preds = %while.cond
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5663
  br label %cleanup, !dbg !5664

cleanup:                                          ; preds = %if.end34, %sw.bb, %sw.bb120, %sw.bb127, %if.then37, %if.then70, %if.else72, %if.then61, %if.then112, %if.else114, %if.then99, %sw.default, %if.else83, %if.else46
  %cleanup.dest.slot.0 = phi i1 [ false, %sw.default ], [ false, %if.else83 ], [ false, %if.else46 ], [ true, %if.then99 ], [ true, %if.else114 ], [ true, %if.then112 ], [ true, %if.then61 ], [ true, %if.else72 ], [ true, %if.then70 ], [ true, %if.end34 ], [ true, %if.then37 ], [ true, %sw.bb127 ], [ true, %sw.bb120 ], [ true, %sw.bb ]
  br i1 %cleanup.dest.slot.0, label %while.cond, label %cleanup134, !llvm.loop !5665

cleanup134:                                       ; preds = %cleanup
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5667
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5667
  ret void, !dbg !5667
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) unnamed_addr #5 !dbg !5668 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5670, metadata !DIExpression()), !dbg !5671
  %tokens_avail = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 1, !dbg !5672
  %0 = load i16, i16* %tokens_avail, align 8, !dbg !5672
  %cmp = icmp sgt i16 %0, 1, !dbg !5674
  br i1 %cmp, label %if.then, label %if.end, !dbg !5675

if.then:                                          ; preds = %entry
  br label %return, !dbg !5676

if.end:                                           ; preds = %entry
  %cmp4 = icmp eq i16 %0, 1, !dbg !5677
  br i1 %cmp4, label %cond.end, label %cond.true, !dbg !5677

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 515, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5677
  br label %cond.end, !dbg !5677

cond.end:                                         ; preds = %if.end, %cond.true
  %1 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 0, i64 0, i32 0, !dbg !5678
  %bf.load = load i32, i32* %1, align 8, !dbg !5678
  %bf.clear = and i32 %bf.load, 255, !dbg !5678
  %cmp8 = icmp eq i32 %bf.clear, 22, !dbg !5678
  br i1 %cmp8, label %cond.true10, label %cond.end12, !dbg !5678

cond.true10:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 516, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5678
  %bf.load16.pre = load i32, i32* %1, align 8, !dbg !5679
  br label %cond.end12, !dbg !5678

cond.end12:                                       ; preds = %cond.end, %cond.true10
  %bf.load16 = phi i32 [ %bf.load, %cond.end ], [ %bf.load16.pre, %cond.true10 ], !dbg !5679
  %bf.clear17 = and i32 %bf.load16, 255, !dbg !5679
  %cmp18 = icmp eq i32 %bf.clear17, 71, !dbg !5679
  br i1 %cmp18, label %cond.true20, label %cond.end22, !dbg !5679

cond.true20:                                      ; preds = %cond.end12
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 517, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5679
  br label %cond.end22, !dbg !5679

cond.end22:                                       ; preds = %cond.end12, %cond.true20
  %arrayidx25 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 0, i64 1, !dbg !5680
  tail call fastcc void @c_lex_one_token(%struct.c_parser* %parser, %struct.c_token* nonnull %arrayidx25) #7, !dbg !5681
  store i16 2, i16* %tokens_avail, align 8, !dbg !5682
  br label %return, !dbg !5683

return:                                           ; preds = %cond.end22, %if.then
  %retval.0 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 0, i64 1, !dbg !5671
  ret %struct.c_token* %retval.0, !dbg !5684
}

declare dso_local void @used_types_insert(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_postfix_expression_after_paren_type(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser, %struct.c_type_name* %type_name, i32 %type_loc) unnamed_addr #5 !dbg !5685 {
entry:
  %init = alloca %struct.c_expr, align 8
  %expr = alloca %struct.c_expr, align 8
  %type_expr = alloca %union.tree_node*, align 8
  %type_expr_const = alloca i8, align 1
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5689, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata %struct.c_type_name* %type_name, metadata !5690, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.value(metadata i32 %type_loc, metadata !5691, metadata !DIExpression()), !dbg !5699
  %0 = bitcast %struct.c_expr* %init to i8*, !dbg !5700
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5700
  %1 = bitcast %struct.c_expr* %expr to i8*, !dbg !5701
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5701
  %2 = bitcast %union.tree_node** %type_expr to i8*, !dbg !5702
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5702
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !5697, metadata !DIExpression()), !dbg !5699
  store %union.tree_node* null, %union.tree_node** %type_expr, align 8, !dbg !5703
  call void @llvm.dbg.value(metadata i8* %type_expr_const, metadata !5698, metadata !DIExpression(DW_OP_deref)), !dbg !5699
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %type_expr_const) #8, !dbg !5704
  call void @llvm.dbg.value(metadata i8 1, metadata !5698, metadata !DIExpression()), !dbg !5699
  store i8 1, i8* %type_expr_const, align 1, !dbg !5705
  tail call void @check_compound_literal_type(i32 %type_loc, %struct.c_type_name* %type_name) #6, !dbg !5706
  tail call void @start_init(%union.tree_node* null, %union.tree_node* null, i32 0) #6, !dbg !5707
  call void @llvm.dbg.value(metadata %union.tree_node** %type_expr, metadata !5697, metadata !DIExpression(DW_OP_deref)), !dbg !5699
  call void @llvm.dbg.value(metadata i8* %type_expr_const, metadata !5698, metadata !DIExpression(DW_OP_deref)), !dbg !5699
  %call = call %union.tree_node* @groktypename(%struct.c_type_name* %type_name, %union.tree_node** nonnull %type_expr, i8* nonnull %type_expr_const) #6, !dbg !5708
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5692, metadata !DIExpression()), !dbg !5699
  %call1 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5709
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !5710
  %3 = load i32, i32* %location, align 8, !dbg !5710
  call void @llvm.dbg.value(metadata i32 %3, metadata !5696, metadata !DIExpression()), !dbg !5699
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5711
  %cmp = icmp eq %union.tree_node* %call, %4, !dbg !5713
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !5714

land.lhs.true:                                    ; preds = %entry
  %type2 = bitcast %union.tree_node* %call to %struct.tree_type*, !dbg !5715
  %lang_flag_1 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type2, i64 0, i32 6, !dbg !5715
  %bf.load = load i32, i32* %lang_flag_1, align 4, !dbg !5715
  %bf.clear = and i32 %bf.load, 67108864, !dbg !5715
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !5715
  br i1 %tobool, label %if.end, label %if.then, !dbg !5716

if.then:                                          ; preds = %land.lhs.true
  call void (i32, i8*, ...) @error_at(i32 %type_loc, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !5717
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5719
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5692, metadata !DIExpression()), !dbg !5699
  br label %if.end, !dbg !5720

if.end:                                           ; preds = %land.lhs.true, %entry, %if.then
  %type.0 = phi %union.tree_node* [ %5, %if.then ], [ %call, %land.lhs.true ], [ %call, %entry ], !dbg !5699
  call void @llvm.dbg.value(metadata %union.tree_node* %type.0, metadata !5692, metadata !DIExpression()), !dbg !5699
  %6 = bitcast %struct.c_expr* %tmp to i8*, !dbg !5721
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !5721
  call fastcc void @c_parser_braced_init(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %union.tree_node* %type.0, i8 zeroext 0) #7, !dbg !5721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !5721
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !5721
  call void @finish_init() #6, !dbg !5722
  call void @llvm.dbg.value(metadata %struct.c_expr* %init, metadata !5693, metadata !DIExpression(DW_OP_deref)), !dbg !5699
  call void @maybe_warn_string_init(%union.tree_node* %type.0, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %init) #6, !dbg !5723
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5724
  %cmp3 = icmp eq %union.tree_node* %type.0, %7, !dbg !5726
  br i1 %cmp3, label %if.end11, label %land.lhs.true4, !dbg !5727

land.lhs.true4:                                   ; preds = %if.end
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5728
  %bf.load5 = load i64, i64* %8, align 8, !dbg !5728
  %cmp7 = icmp ugt i64 %bf.load5, 72057594037927935, !dbg !5728
  %9 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5729
  %tobool9 = icmp ne %union.tree_node* %9, null, !dbg !5729
  %or.cond = and i1 %cmp7, %tobool9, !dbg !5730
  br i1 %or.cond, label %if.then10, label %if.end11, !dbg !5730

if.then10:                                        ; preds = %land.lhs.true4
  call void (i8*, ...) @error(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !5731
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5733
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !5692, metadata !DIExpression()), !dbg !5699
  br label %if.end11, !dbg !5734

if.end11:                                         ; preds = %if.end, %land.lhs.true4, %if.then10
  %type.1 = phi %union.tree_node* [ %type.0, %land.lhs.true4 ], [ %10, %if.then10 ], [ %type.0, %if.end ], !dbg !5699
  call void @llvm.dbg.value(metadata %union.tree_node* %type.1, metadata !5692, metadata !DIExpression()), !dbg !5699
  %11 = load i32, i32* @flag_isoc99, align 4, !dbg !5735
  %tobool12 = icmp eq i32 %11, 0, !dbg !5735
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !5737

if.then13:                                        ; preds = %if.end11
  %call14 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %3, i32 834, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !5738
  br label %if.end15, !dbg !5738

if.end15:                                         ; preds = %if.end11, %if.then13
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init, i64 0, i32 0, !dbg !5739
  %12 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5739
  %tobool16 = icmp eq %union.tree_node* %12, null, !dbg !5740
  br i1 %tobool16, label %cond.false, label %land.lhs.true17, !dbg !5741

land.lhs.true17:                                  ; preds = %if.end15
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5741
  %bf.load20 = load i64, i64* %13, align 8, !dbg !5742
  %bf.cast222 = and i64 %bf.load20, 65535, !dbg !5743
  %cmp23 = icmp eq i64 %bf.cast222, 51, !dbg !5743
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !5744

cond.true:                                        ; preds = %land.lhs.true17
  %bf.lshr27 = lshr i64 %bf.load20, 34, !dbg !5745
  %14 = trunc i64 %bf.lshr27 to i8, !dbg !5745
  %bf.cast29 = and i8 %14, 1, !dbg !5745
  br label %cond.end, !dbg !5744

cond.false:                                       ; preds = %if.end15, %land.lhs.true17
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init, i64 0, i32 1, !dbg !5746
  %15 = load i32, i32* %original_code, align 8, !dbg !5746
  %cmp30 = icmp eq i32 %15, 189, !dbg !5747
  %conv = zext i1 %cmp30 to i8, !dbg !5747
  br label %cond.end, !dbg !5744

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8 [ %bf.cast29, %cond.true ], [ %conv, %cond.false ], !dbg !5744
  %16 = load i8, i8* %type_expr_const, align 1, !dbg !5748
  call void @llvm.dbg.value(metadata i8 %16, metadata !5698, metadata !DIExpression()), !dbg !5699
  %tobool32 = icmp eq i8 %16, 0, !dbg !5749
  %lnot.ext = zext i1 %tobool32 to i8, !dbg !5749
  %or = or i8 %cond, %lnot.ext, !dbg !5750
  call void @llvm.dbg.value(metadata i8 %or, metadata !5694, metadata !DIExpression()), !dbg !5699
  %call36 = call %union.tree_node* @build_compound_literal(i32 %3, %union.tree_node* %type.1, %union.tree_node* %12, i8 zeroext %or) #6, !dbg !5751
  %value37 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !5752
  store %union.tree_node* %call36, %union.tree_node** %value37, align 8, !dbg !5753
  %original_code38 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 1, !dbg !5754
  store i32 0, i32* %original_code38, align 8, !dbg !5755
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 2, !dbg !5756
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !5757
  %17 = load %union.tree_node*, %union.tree_node** %type_expr, align 8, !dbg !5758
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5697, metadata !DIExpression()), !dbg !5699
  %tobool39 = icmp eq %union.tree_node* %17, null, !dbg !5758
  %18 = bitcast %union.tree_node* %call36 to %struct.tree_exp*, !dbg !5760
  %19 = ptrtoint %union.tree_node* %17 to i64, !dbg !5760
  br i1 %tobool39, label %if.end69, label %if.then40, !dbg !5760

if.then40:                                        ; preds = %cond.end
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5760
  %bf.load43 = load i64, i64* %20, align 8, !dbg !5761
  %bf.cast451 = and i64 %bf.load43, 65535, !dbg !5764
  %cmp46 = icmp eq i64 %bf.cast451, 189, !dbg !5764
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !5765

if.then48:                                        ; preds = %if.then40
  %21 = getelementptr inbounds %union.tree_node, %union.tree_node* %call36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5766
  %22 = load %union.tree_node*, %union.tree_node** %21, align 8, !dbg !5766
  %cmp50 = icmp eq %union.tree_node* %22, null, !dbg !5766
  br i1 %cmp50, label %if.then48.cond.end54_crit_edge, label %cond.true52, !dbg !5766

if.then48.cond.end54_crit_edge:                   ; preds = %if.then48
  br label %cond.end54, !dbg !5766

cond.true52:                                      ; preds = %if.then48
  %23 = bitcast %struct.c_expr* %expr to %struct.tree_exp**, !dbg !5766
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5834, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5766
  %.phi.trans.insert = bitcast %union.tree_node** %type_expr to i64*, !dbg !5768
  %.pre4 = load i64, i64* %.phi.trans.insert, align 8, !dbg !5769
  %.pre5 = load %struct.tree_exp*, %struct.tree_exp** %23, align 8, !dbg !5770
  br label %cond.end54, !dbg !5766

cond.end54:                                       ; preds = %if.then48.cond.end54_crit_edge, %cond.true52
  %24 = phi %struct.tree_exp* [ %18, %if.then48.cond.end54_crit_edge ], [ %.pre5, %cond.true52 ], !dbg !5770
  %25 = phi i64 [ %19, %if.then48.cond.end54_crit_edge ], [ %.pre4, %cond.true52 ], !dbg !5769
  %operands58 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %24, i64 0, i32 3, !dbg !5770
  %26 = bitcast [1 x %union.tree_node*]* %operands58 to i64*, !dbg !5771
  store i64 %25, i64* %26, align 8, !dbg !5771
  br label %if.end69, !dbg !5772

if.else:                                          ; preds = %if.then40
  %tobool60 = icmp eq i8 %or, 0, !dbg !5773
  br i1 %tobool60, label %cond.end63, label %cond.true61, !dbg !5773

cond.true61:                                      ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5839, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !5773
  %.pre = load %union.tree_node*, %union.tree_node** %type_expr, align 8, !dbg !5775
  %.pre3 = load %union.tree_node*, %union.tree_node** %value37, align 8, !dbg !5775
  br label %cond.end63, !dbg !5773

cond.end63:                                       ; preds = %if.else, %cond.true61
  %27 = phi %union.tree_node* [ %call36, %if.else ], [ %.pre3, %cond.true61 ], !dbg !5775
  %28 = phi %union.tree_node* [ %17, %if.else ], [ %.pre, %cond.true61 ], !dbg !5775
  call void @llvm.dbg.value(metadata %union.tree_node* %28, metadata !5697, metadata !DIExpression()), !dbg !5699
  %call66 = call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %type.1, %union.tree_node* %28, %union.tree_node* %27) #6, !dbg !5775
  store %union.tree_node* %call66, %union.tree_node** %value37, align 8, !dbg !5776
  br label %if.end69

if.end69:                                         ; preds = %cond.end, %cond.end54, %cond.end63
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr, metadata !5695, metadata !DIExpression(DW_OP_deref)), !dbg !5699
  call fastcc void @c_parser_postfix_expression_after_primary(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser, i32 %3, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #7, !dbg !5777
  call void @llvm.dbg.value(metadata i8* %type_expr_const, metadata !5698, metadata !DIExpression(DW_OP_deref)), !dbg !5699
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %type_expr_const) #8, !dbg !5778
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !5778
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5778
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5778
  ret void, !dbg !5778
}

declare dso_local %union.tree_node* @c_cast_expr(i32, %struct.c_type_name*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_unary_expression(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !5779 {
entry:
  %ret = alloca %struct.c_expr, align 8
  %op = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp4 = alloca %struct.c_expr, align 8
  %tmp8 = alloca %struct.c_expr, align 8
  %tmp9 = alloca %struct.c_expr, align 8
  %agg.tmp = alloca %struct.c_expr, align 8
  %tmp14 = alloca %struct.c_expr, align 8
  %tmp15 = alloca %struct.c_expr, align 8
  %tmp19 = alloca %struct.expanded_location, align 8
  %tmp25 = alloca %struct.c_expr, align 8
  %tmp26 = alloca %struct.c_expr, align 8
  %tmp30 = alloca %struct.c_expr, align 8
  %tmp31 = alloca %struct.c_expr, align 8
  %tmp35 = alloca %struct.c_expr, align 8
  %tmp36 = alloca %struct.c_expr, align 8
  %tmp40 = alloca %struct.c_expr, align 8
  %tmp41 = alloca %struct.c_expr, align 8
  %tmp59 = alloca %struct.c_expr, align 8
  %tmp63 = alloca %struct.c_expr, align 8
  %tmp64 = alloca %struct.c_expr, align 8
  %tmp68 = alloca %struct.c_expr, align 8
  %tmp69 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5781, metadata !DIExpression()), !dbg !5787
  %0 = bitcast %struct.c_expr* %ret to i8*, !dbg !5788
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5788
  %1 = bitcast %struct.c_expr* %op to i8*, !dbg !5788
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5788
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5789
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !5790
  %2 = load i32, i32* %location, align 8, !dbg !5790
  call void @llvm.dbg.value(metadata i32 %2, metadata !5785, metadata !DIExpression()), !dbg !5787
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 1, !dbg !5791
  store i32 0, i32* %original_code, align 8, !dbg !5792
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 2, !dbg !5793
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !5794
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5795
  %3 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !5796
  %bf.load = load i32, i32* %3, align 8, !dbg !5796
  %trunc = trunc i32 %bf.load to i8, !dbg !5797
  switch i8 %trunc, label %sw.default70 [
    i8 45, label %sw.bb
    i8 46, label %sw.bb5
    i8 9, label %sw.bb10
    i8 6, label %sw.bb11
    i8 4, label %sw.bb18
    i8 5, label %sw.bb27
    i8 14, label %sw.bb32
    i8 1, label %sw.bb37
    i8 15, label %sw.bb42
    i8 74, label %sw.bb51
  ], !dbg !5797

sw.bb:                                            ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5798
  %call2 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5800
  %location3 = getelementptr inbounds %struct.c_token, %struct.c_token* %call2, i64 0, i32 2, !dbg !5801
  %4 = load i32, i32* %location3, align 8, !dbg !5801
  call void @llvm.dbg.value(metadata i32 %4, metadata !5786, metadata !DIExpression()), !dbg !5787
  %5 = bitcast %struct.c_expr* %tmp to i8*, !dbg !5802
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5802
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5802
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !5802
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5802
  %6 = bitcast %struct.c_expr* %tmp4 to i8*, !dbg !5803
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !5803
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp4, i32 %4, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5803
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %6, i64 24, i1 false), !dbg !5803
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !5803
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @parser_build_unary_op(%struct.c_expr* sret %agg.result, i32 %2, i32 126, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5804
  br label %cleanup, !dbg !5805

sw.bb5:                                           ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5806
  %call6 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5807
  %location7 = getelementptr inbounds %struct.c_token, %struct.c_token* %call6, i64 0, i32 2, !dbg !5808
  %7 = load i32, i32* %location7, align 8, !dbg !5808
  call void @llvm.dbg.value(metadata i32 %7, metadata !5786, metadata !DIExpression()), !dbg !5787
  %8 = bitcast %struct.c_expr* %tmp8 to i8*, !dbg !5809
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !5809
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp8, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5809
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !5809
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !5809
  %9 = bitcast %struct.c_expr* %tmp9 to i8*, !dbg !5810
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !5810
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp9, i32 %7, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5810
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !5810
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !5810
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @parser_build_unary_op(%struct.c_expr* sret %agg.result, i32 %2, i32 125, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5811
  br label %cleanup, !dbg !5812

sw.bb10:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5813
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %agg.tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5814
  call void @parser_build_unary_op(%struct.c_expr* sret %agg.result, i32 %2, i32 121, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %agg.tmp) #6, !dbg !5815
  br label %cleanup, !dbg !5816

sw.bb11:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5817
  %call12 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5818
  %location13 = getelementptr inbounds %struct.c_token, %struct.c_token* %call12, i64 0, i32 2, !dbg !5819
  %10 = load i32, i32* %location13, align 8, !dbg !5819
  call void @llvm.dbg.value(metadata i32 %10, metadata !5786, metadata !DIExpression()), !dbg !5787
  %11 = bitcast %struct.c_expr* %tmp14 to i8*, !dbg !5820
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !5820
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp14, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !5820
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !5820
  %12 = bitcast %struct.c_expr* %tmp15 to i8*, !dbg !5821
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !5821
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp15, i32 %10, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5821
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %12, i64 24, i1 false), !dbg !5821
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !5821
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %op, i64 0, i32 0, !dbg !5822
  %13 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5822
  %call16 = call %union.tree_node* @build_indirect_ref(i32 %2, %union.tree_node* %13, i32 2) #6, !dbg !5823
  %value17 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 0, !dbg !5824
  store %union.tree_node* %call16, %union.tree_node** %value17, align 8, !dbg !5825
  %14 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !5826
  br label %cleanup, !dbg !5827

sw.bb18:                                          ; preds = %entry
  %15 = load i32, i32* @c_language, align 4, !dbg !5828
  %and = and i32 %15, 1, !dbg !5828
  %cmp = icmp eq i32 %and, 0, !dbg !5828
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5830

land.lhs.true:                                    ; preds = %sw.bb18
  %16 = load i32, i32* @input_location, align 4, !dbg !5831
  call void @expand_location(%struct.expanded_location* nonnull sret %tmp19, i32 %16) #6, !dbg !5831
  %sysp = getelementptr inbounds %struct.expanded_location, %struct.expanded_location* %tmp19, i64 0, i32 3, !dbg !5831
  %17 = load i8, i8* %sysp, align 8, !dbg !5831
  %cmp20 = icmp eq i8 %17, 0, !dbg !5831
  br i1 %cmp20, label %if.then, label %if.end, !dbg !5832

if.then:                                          ; preds = %land.lhs.true
  %call22 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %2, i32 202, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !5833
  br label %if.end, !dbg !5833

if.end:                                           ; preds = %land.lhs.true, %sw.bb18, %if.then
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5834
  %call23 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5835
  %location24 = getelementptr inbounds %struct.c_token, %struct.c_token* %call23, i64 0, i32 2, !dbg !5836
  %18 = load i32, i32* %location24, align 8, !dbg !5836
  call void @llvm.dbg.value(metadata i32 %18, metadata !5786, metadata !DIExpression()), !dbg !5787
  %19 = bitcast %struct.c_expr* %tmp25 to i8*, !dbg !5837
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #8, !dbg !5837
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp25, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %19, i64 24, i1 false), !dbg !5837
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #8, !dbg !5837
  %20 = bitcast %struct.c_expr* %tmp26 to i8*, !dbg !5838
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #8, !dbg !5838
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp26, i32 %18, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5838
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %20, i64 24, i1 false), !dbg !5838
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #8, !dbg !5838
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @parser_build_unary_op(%struct.c_expr* sret %agg.result, i32 %2, i32 113, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5839
  br label %cleanup, !dbg !5840

sw.bb27:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5841
  %call28 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5842
  %location29 = getelementptr inbounds %struct.c_token, %struct.c_token* %call28, i64 0, i32 2, !dbg !5843
  %21 = load i32, i32* %location29, align 8, !dbg !5843
  call void @llvm.dbg.value(metadata i32 %21, metadata !5786, metadata !DIExpression()), !dbg !5787
  %22 = bitcast %struct.c_expr* %tmp30 to i8*, !dbg !5844
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #8, !dbg !5844
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp30, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5844
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %22, i64 24, i1 false), !dbg !5844
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #8, !dbg !5844
  %23 = bitcast %struct.c_expr* %tmp31 to i8*, !dbg !5845
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #8, !dbg !5845
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp31, i32 %21, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %23, i64 24, i1 false), !dbg !5845
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #8, !dbg !5845
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @parser_build_unary_op(%struct.c_expr* sret %agg.result, i32 %2, i32 79, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5846
  br label %cleanup, !dbg !5847

sw.bb32:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5848
  %call33 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5849
  %location34 = getelementptr inbounds %struct.c_token, %struct.c_token* %call33, i64 0, i32 2, !dbg !5850
  %24 = load i32, i32* %location34, align 8, !dbg !5850
  call void @llvm.dbg.value(metadata i32 %24, metadata !5786, metadata !DIExpression()), !dbg !5787
  %25 = bitcast %struct.c_expr* %tmp35 to i8*, !dbg !5851
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #8, !dbg !5851
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp35, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %25, i64 24, i1 false), !dbg !5851
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #8, !dbg !5851
  %26 = bitcast %struct.c_expr* %tmp36 to i8*, !dbg !5852
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8, !dbg !5852
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp36, i32 %24, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5852
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %26, i64 24, i1 false), !dbg !5852
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8, !dbg !5852
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @parser_build_unary_op(%struct.c_expr* sret %agg.result, i32 %2, i32 90, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5853
  br label %cleanup, !dbg !5854

sw.bb37:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5855
  %call38 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5856
  %location39 = getelementptr inbounds %struct.c_token, %struct.c_token* %call38, i64 0, i32 2, !dbg !5857
  %27 = load i32, i32* %location39, align 8, !dbg !5857
  call void @llvm.dbg.value(metadata i32 %27, metadata !5786, metadata !DIExpression()), !dbg !5787
  %28 = bitcast %struct.c_expr* %tmp40 to i8*, !dbg !5858
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #8, !dbg !5858
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp40, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5858
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %28, i64 24, i1 false), !dbg !5858
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #8, !dbg !5858
  %29 = bitcast %struct.c_expr* %tmp41 to i8*, !dbg !5859
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #8, !dbg !5859
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp41, i32 %27, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5859
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %29, i64 24, i1 false), !dbg !5859
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #8, !dbg !5859
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @parser_build_unary_op(%struct.c_expr* sret %agg.result, i32 %2, i32 96, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5860
  br label %cleanup, !dbg !5861

sw.bb42:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5862
  %call43 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !5863
  %tobool = icmp eq i8 %call43, 0, !dbg !5863
  br i1 %tobool, label %if.else, label %if.then44, !dbg !5865

if.then44:                                        ; preds = %sw.bb42
  %call45 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5866
  %value46 = getelementptr inbounds %struct.c_token, %struct.c_token* %call45, i64 0, i32 1, !dbg !5868
  %30 = load %union.tree_node*, %union.tree_node** %value46, align 8, !dbg !5868
  %call47 = tail call %union.tree_node* @finish_label_address_expr(%union.tree_node* %30, i32 %2) #6, !dbg !5869
  %value48 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 0, !dbg !5870
  store %union.tree_node* %call47, %union.tree_node** %value48, align 8, !dbg !5871
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5872
  br label %if.end50, !dbg !5873

if.else:                                          ; preds = %sw.bb42
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !5874
  %31 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !5876
  %32 = bitcast %struct.c_expr* %ret to i64*, !dbg !5877
  store i64 %31, i64* %32, align 8, !dbg !5877
  br label %if.end50

if.end50:                                         ; preds = %if.else, %if.then44
  %33 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5878
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !5878
  br label %cleanup, !dbg !5879

sw.bb51:                                          ; preds = %entry
  %call52 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5880
  %34 = getelementptr inbounds %struct.c_token, %struct.c_token* %call52, i64 0, i32 0, !dbg !5881
  %bf.load53 = load i32, i32* %34, align 8, !dbg !5881
  %bf.lshr = lshr i32 %bf.load53, 16, !dbg !5881
  %trunc1 = trunc i32 %bf.lshr to i8, !dbg !5882
  switch i8 %trunc1, label %sw.default [
    i8 48, label %sw.bb55
    i8 51, label %sw.bb56
    i8 54, label %sw.bb57
    i8 56, label %sw.bb60
    i8 55, label %sw.bb65
  ], !dbg !5882

sw.bb55:                                          ; preds = %sw.bb51
  tail call fastcc void @c_parser_sizeof_expression(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser) #7, !dbg !5883
  br label %cleanup, !dbg !5885

sw.bb56:                                          ; preds = %sw.bb51
  tail call fastcc void @c_parser_alignof_expression(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser) #7, !dbg !5886
  br label %cleanup, !dbg !5887

sw.bb57:                                          ; preds = %sw.bb51
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5888
  %call58 = tail call fastcc i32 @disable_extension_diagnostics() #7, !dbg !5889
  call void @llvm.dbg.value(metadata i32 %call58, metadata !5782, metadata !DIExpression()), !dbg !5787
  %35 = bitcast %struct.c_expr* %tmp59 to i8*, !dbg !5890
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %35) #8, !dbg !5890
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp59, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5890
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %35, i64 24, i1 false), !dbg !5890
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %35) #8, !dbg !5890
  call fastcc void @restore_extension_diagnostics(i32 %call58) #7, !dbg !5891
  %36 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5892
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !5892
  br label %cleanup, !dbg !5893

sw.bb60:                                          ; preds = %sw.bb51
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5894
  %call61 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5895
  %location62 = getelementptr inbounds %struct.c_token, %struct.c_token* %call61, i64 0, i32 2, !dbg !5896
  %37 = load i32, i32* %location62, align 8, !dbg !5896
  call void @llvm.dbg.value(metadata i32 %37, metadata !5786, metadata !DIExpression()), !dbg !5787
  %38 = bitcast %struct.c_expr* %tmp63 to i8*, !dbg !5897
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #8, !dbg !5897
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp63, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5897
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %38, i64 24, i1 false), !dbg !5897
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #8, !dbg !5897
  %39 = bitcast %struct.c_expr* %tmp64 to i8*, !dbg !5898
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #8, !dbg !5898
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp64, i32 %37, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5898
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %39, i64 24, i1 false), !dbg !5898
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #8, !dbg !5898
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @parser_build_unary_op(%struct.c_expr* sret %agg.result, i32 %2, i32 43, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5899
  br label %cleanup, !dbg !5900

sw.bb65:                                          ; preds = %sw.bb51
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5901
  %call66 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5902
  %location67 = getelementptr inbounds %struct.c_token, %struct.c_token* %call66, i64 0, i32 2, !dbg !5903
  %40 = load i32, i32* %location67, align 8, !dbg !5903
  call void @llvm.dbg.value(metadata i32 %40, metadata !5786, metadata !DIExpression()), !dbg !5787
  %41 = bitcast %struct.c_expr* %tmp68 to i8*, !dbg !5904
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #8, !dbg !5904
  call fastcc void @c_parser_cast_expression(%struct.c_expr* nonnull sret %tmp68, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5904
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %41, i64 24, i1 false), !dbg !5904
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #8, !dbg !5904
  %42 = bitcast %struct.c_expr* %tmp69 to i8*, !dbg !5905
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #8, !dbg !5905
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp69, i32 %40, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5905
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %42, i64 24, i1 false), !dbg !5905
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #8, !dbg !5905
  call void @llvm.dbg.value(metadata %struct.c_expr* %op, metadata !5784, metadata !DIExpression(DW_OP_deref)), !dbg !5787
  call void @parser_build_unary_op(%struct.c_expr* sret %agg.result, i32 %2, i32 44, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %op) #6, !dbg !5906
  br label %cleanup, !dbg !5907

sw.default:                                       ; preds = %sw.bb51
  tail call fastcc void @c_parser_postfix_expression(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser) #7, !dbg !5908
  br label %cleanup, !dbg !5909

sw.default70:                                     ; preds = %entry
  tail call fastcc void @c_parser_postfix_expression(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser) #7, !dbg !5910
  br label %cleanup, !dbg !5911

cleanup:                                          ; preds = %sw.default70, %sw.default, %sw.bb65, %sw.bb60, %sw.bb57, %sw.bb56, %sw.bb55, %if.end50, %sw.bb37, %sw.bb32, %sw.bb27, %if.end, %sw.bb11, %sw.bb10, %sw.bb5, %sw.bb
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !5912
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5912
  ret void, !dbg !5912
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_expression(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !5913 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  %next = alloca %struct.c_expr, align 8
  %tmp4 = alloca %struct.c_expr, align 8
  %tmp5 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5915, metadata !DIExpression()), !dbg !5921
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !5916, metadata !DIExpression()), !dbg !5922
  %0 = bitcast %struct.c_expr* %tmp to i8*, !dbg !5923
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5923
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5923
  %1 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !5923
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* nonnull align 8 %0, i64 24, i1 false), !dbg !5923
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !5923
  %2 = bitcast %struct.c_expr* %next to i8*, !dbg !5924
  %3 = bitcast %struct.c_expr* %tmp4 to i8*, !dbg !5924
  %4 = bitcast %struct.c_expr* %tmp5 to i8*, !dbg !5924
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 0, !dbg !5924
  %value6 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %next, i64 0, i32 0, !dbg !5924
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !5924
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %next, i64 0, i32 2, !dbg !5924
  %5 = bitcast %union.tree_node** %original_type to i64*, !dbg !5924
  %original_type9 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !5924
  %6 = bitcast %union.tree_node** %original_type9 to i64*, !dbg !5924
  br label %while.cond, !dbg !5925

while.cond:                                       ; preds = %while.body, %entry
  %call = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !5926
  %tobool = icmp eq i8 %call, 0, !dbg !5925
  br i1 %tobool, label %while.end, label %while.body, !dbg !5925

while.body:                                       ; preds = %while.cond
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5927
  %call1 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5928
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !5929
  %7 = load i32, i32* %location, align 8, !dbg !5929
  call void @llvm.dbg.value(metadata i32 %7, metadata !5919, metadata !DIExpression()), !dbg !5924
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5930
  %call2 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5931
  %location3 = getelementptr inbounds %struct.c_token, %struct.c_token* %call2, i64 0, i32 2, !dbg !5932
  %8 = load i32, i32* %location3, align 8, !dbg !5932
  call void @llvm.dbg.value(metadata i32 %8, metadata !5920, metadata !DIExpression()), !dbg !5924
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5933
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp4, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5933
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !5933
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !5933
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5934
  call void @llvm.dbg.value(metadata %struct.c_expr* %next, metadata !5917, metadata !DIExpression(DW_OP_deref)), !dbg !5924
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp5, i32 %8, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %next) #6, !dbg !5934
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !5934
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5934
  %9 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5935
  %10 = load %union.tree_node*, %union.tree_node** %value6, align 8, !dbg !5936
  %call7 = call %union.tree_node* @build_compound_expr(i32 %7, %union.tree_node* %9, %union.tree_node* %10) #6, !dbg !5937
  store %union.tree_node* %call7, %union.tree_node** %value, align 8, !dbg !5938
  store i32 52, i32* %original_code, align 8, !dbg !5939
  %11 = load i64, i64* %5, align 8, !dbg !5940
  store i64 %11, i64* %6, align 8, !dbg !5941
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5942
  br label %while.cond, !dbg !5925, !llvm.loop !5943

while.end:                                        ; preds = %while.cond
  ret void, !dbg !5944
}

declare dso_local %union.tree_node* @build_array_ref(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.VEC_tree_gc* @c_parser_expr_list(%struct.c_parser* %parser, i8 zeroext %convert_p, i8 zeroext %fold_p, %struct.VEC_tree_gc** %p_orig_types) unnamed_addr #5 !dbg !5945 {
entry:
  %ret = alloca %struct.VEC_tree_gc*, align 8
  %orig_types = alloca %struct.VEC_tree_gc*, align 8
  %expr = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp4 = alloca %struct.c_expr, align 8
  %tmp28 = alloca %struct.c_expr, align 8
  %tmp31 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !5950, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata i8 %convert_p, metadata !5951, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata i8 %fold_p, metadata !5952, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %p_orig_types, metadata !5953, metadata !DIExpression()), !dbg !5958
  %0 = bitcast %struct.VEC_tree_gc** %ret to i8*, !dbg !5959
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5959
  %1 = bitcast %struct.VEC_tree_gc** %orig_types to i8*, !dbg !5960
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !5960
  %2 = bitcast %struct.c_expr* %expr to i8*, !dbg !5961
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !5961
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !5962
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !5963
  %3 = load i32, i32* %location, align 8, !dbg !5963
  call void @llvm.dbg.value(metadata i32 %3, metadata !5957, metadata !DIExpression()), !dbg !5958
  %call1 = tail call %struct.VEC_tree_gc* @make_tree_vector() #6, !dbg !5964
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call1, metadata !5954, metadata !DIExpression()), !dbg !5958
  store %struct.VEC_tree_gc* %call1, %struct.VEC_tree_gc** %ret, align 8, !dbg !5965
  %cmp = icmp eq %struct.VEC_tree_gc** %p_orig_types, null, !dbg !5966
  br i1 %cmp, label %if.then, label %if.else, !dbg !5968

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* null, metadata !5955, metadata !DIExpression()), !dbg !5958
  br label %if.end, !dbg !5969

if.else:                                          ; preds = %entry
  %call2 = tail call %struct.VEC_tree_gc* @make_tree_vector() #6, !dbg !5970
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call2, metadata !5955, metadata !DIExpression()), !dbg !5958
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.VEC_tree_gc* [ %call2, %if.else ], [ null, %if.then ], !dbg !5971
  store %struct.VEC_tree_gc* %storemerge, %struct.VEC_tree_gc** %orig_types, align 8, !dbg !5971
  %4 = bitcast %struct.c_expr* %tmp to i8*, !dbg !5972
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5972
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !5972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !5972
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !5972
  %tobool = icmp eq i8 %convert_p, 0, !dbg !5973
  br i1 %tobool, label %if.end5, label %if.then3, !dbg !5975

if.then3:                                         ; preds = %if.end
  %5 = bitcast %struct.c_expr* %tmp4 to i8*, !dbg !5976
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5976
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr, metadata !5956, metadata !DIExpression(DW_OP_deref)), !dbg !5958
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp4, i32 %3, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #6, !dbg !5976
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !5976
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !5976
  br label %if.end5, !dbg !5977

if.end5:                                          ; preds = %if.end, %if.then3
  %tobool6 = icmp eq i8 %fold_p, 0, !dbg !5978
  br i1 %tobool6, label %if.end5.if.end10_crit_edge, label %if.then7, !dbg !5980

if.end5.if.end10_crit_edge:                       ; preds = %if.end5
  %value12.phi.trans.insert = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !5958
  %.pre = load %union.tree_node*, %union.tree_node** %value12.phi.trans.insert, align 8, !dbg !5981
  br label %if.end10, !dbg !5980

if.then7:                                         ; preds = %if.end5
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !5982
  %6 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !5982
  %call8 = call %union.tree_node* @c_fully_fold(%union.tree_node* %6, i8 zeroext 0, i8* null) #6, !dbg !5983
  store %union.tree_node* %call8, %union.tree_node** %value, align 8, !dbg !5984
  br label %if.end10, !dbg !5985

if.end10:                                         ; preds = %if.end5.if.end10_crit_edge, %if.then7
  %7 = phi %union.tree_node* [ %.pre, %if.end5.if.end10_crit_edge ], [ %call8, %if.then7 ], !dbg !5981
  %8 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ret, align 8, !dbg !5981
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %8, metadata !5954, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %8, metadata !5954, metadata !DIExpression()), !dbg !5958
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %8, i64 0, i32 0, !dbg !5981
  %value12 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !5981
  %call13 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %base, %union.tree_node* %7) #7, !dbg !5981
  %9 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %orig_types, align 8, !dbg !5986
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %9, metadata !5955, metadata !DIExpression()), !dbg !5958
  %cmp14 = icmp eq %struct.VEC_tree_gc* %9, null, !dbg !5988
  br i1 %cmp14, label %if.end23, label %if.then15, !dbg !5989

if.then15:                                        ; preds = %if.end10
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %9, metadata !5955, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %9, metadata !5955, metadata !DIExpression()), !dbg !5958
  %base18 = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %9, i64 0, i32 0, !dbg !5990
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 2, !dbg !5990
  %10 = load %union.tree_node*, %union.tree_node** %original_type, align 8, !dbg !5990
  %call22 = call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* nonnull %base18, %union.tree_node* %10) #7, !dbg !5990
  br label %if.end23, !dbg !5990

if.end23:                                         ; preds = %if.end10, %if.then15
  %11 = bitcast %struct.c_expr* %tmp28 to i8*, !dbg !5991
  %12 = bitcast %struct.c_expr* %tmp31 to i8*, !dbg !5993
  %original_type43 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 2, !dbg !5995
  br i1 %tobool, label %if.end23.split.us, label %if.end23.if.end23.split_crit_edge, !dbg !5997

if.end23.if.end23.split_crit_edge:                ; preds = %if.end23
  br label %while.cond, !dbg !5997

if.end23.split.us:                                ; preds = %if.end23
  br label %while.cond.us, !dbg !5997

while.cond.us:                                    ; preds = %if.end45.us, %if.end23.split.us
  %call24.us = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !5998
  %tobool25.us = icmp eq i8 %call24.us, 0, !dbg !5997
  br i1 %tobool25.us, label %while.end.us-lcssa.us, label %while.body.us, !dbg !5997

while.body.us:                                    ; preds = %while.cond.us
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5999
  %call26.us = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6000
  call void @llvm.dbg.value(metadata i32 undef, metadata !5957, metadata !DIExpression()), !dbg !5958
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !6001
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp28, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !6001
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !6001
  br i1 %tobool6, label %while.body.us.if.end38.us_crit_edge, label %if.then34.us, !dbg !6002

while.body.us.if.end38.us_crit_edge:              ; preds = %while.body.us
  %.pre2 = load %union.tree_node*, %union.tree_node** %value12, align 8, !dbg !6003
  br label %if.end38.us, !dbg !6002

if.then34.us:                                     ; preds = %while.body.us
  %13 = load %union.tree_node*, %union.tree_node** %value12, align 8, !dbg !6004
  %call36.us = call %union.tree_node* @c_fully_fold(%union.tree_node* %13, i8 zeroext 0, i8* null) #6, !dbg !6006
  store %union.tree_node* %call36.us, %union.tree_node** %value12, align 8, !dbg !6007
  br label %if.end38.us, !dbg !6008

if.end38.us:                                      ; preds = %while.body.us.if.end38.us_crit_edge, %if.then34.us
  %14 = phi %union.tree_node* [ %.pre2, %while.body.us.if.end38.us_crit_edge ], [ %call36.us, %if.then34.us ], !dbg !6003
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %ret, metadata !5954, metadata !DIExpression(DW_OP_deref)), !dbg !5958
  %call40.us = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %ret, %union.tree_node* %14) #7, !dbg !6003
  %15 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %orig_types, align 8, !dbg !6009
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %15, metadata !5955, metadata !DIExpression()), !dbg !5958
  %cmp41.us = icmp eq %struct.VEC_tree_gc* %15, null, !dbg !6010
  br i1 %cmp41.us, label %if.end45.us, label %if.then42.us, !dbg !6011

if.then42.us:                                     ; preds = %if.end38.us
  %16 = load %union.tree_node*, %union.tree_node** %original_type43, align 8, !dbg !6012
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %orig_types, metadata !5955, metadata !DIExpression(DW_OP_deref)), !dbg !5958
  %call44.us = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %orig_types, %union.tree_node* %16) #7, !dbg !6012
  br label %if.end45.us, !dbg !6012

if.end45.us:                                      ; preds = %if.then42.us, %if.end38.us
  br label %while.cond.us, !dbg !5997, !llvm.loop !6013

while.end.us-lcssa.us:                            ; preds = %while.cond.us
  br label %while.end, !dbg !6015

while.cond:                                       ; preds = %if.end45, %if.end23.if.end23.split_crit_edge
  %call24 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !5998
  %tobool25 = icmp eq i8 %call24, 0, !dbg !5997
  br i1 %tobool25, label %while.end.us-lcssa, label %while.body, !dbg !5997

while.body:                                       ; preds = %while.cond
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !5999
  %call26 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6000
  %location27 = getelementptr inbounds %struct.c_token, %struct.c_token* %call26, i64 0, i32 2, !dbg !6017
  %17 = load i32, i32* %location27, align 8, !dbg !6017
  call void @llvm.dbg.value(metadata i32 %17, metadata !5957, metadata !DIExpression()), !dbg !5958
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !6001
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp28, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6001
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !6001
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !6001
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !6018
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr, metadata !5956, metadata !DIExpression(DW_OP_deref)), !dbg !5958
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp31, i32 %17, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #6, !dbg !6018
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %12, i64 24, i1 false), !dbg !6018
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !6018
  br i1 %tobool6, label %while.body.if.end38_crit_edge, label %if.then34, !dbg !6002

while.body.if.end38_crit_edge:                    ; preds = %while.body
  %.pre1 = load %union.tree_node*, %union.tree_node** %value12, align 8, !dbg !6003
  br label %if.end38, !dbg !6002

if.then34:                                        ; preds = %while.body
  %18 = load %union.tree_node*, %union.tree_node** %value12, align 8, !dbg !6004
  %call36 = call %union.tree_node* @c_fully_fold(%union.tree_node* %18, i8 zeroext 0, i8* null) #6, !dbg !6006
  store %union.tree_node* %call36, %union.tree_node** %value12, align 8, !dbg !6007
  br label %if.end38, !dbg !6008

if.end38:                                         ; preds = %while.body.if.end38_crit_edge, %if.then34
  %19 = phi %union.tree_node* [ %.pre1, %while.body.if.end38_crit_edge ], [ %call36, %if.then34 ], !dbg !6003
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %ret, metadata !5954, metadata !DIExpression(DW_OP_deref)), !dbg !5958
  %call40 = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %ret, %union.tree_node* %19) #7, !dbg !6003
  %20 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %orig_types, align 8, !dbg !6009
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %20, metadata !5955, metadata !DIExpression()), !dbg !5958
  %cmp41 = icmp eq %struct.VEC_tree_gc* %20, null, !dbg !6010
  br i1 %cmp41, label %if.end45, label %if.then42, !dbg !6011

if.then42:                                        ; preds = %if.end38
  %21 = load %union.tree_node*, %union.tree_node** %original_type43, align 8, !dbg !6012
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %orig_types, metadata !5955, metadata !DIExpression(DW_OP_deref)), !dbg !5958
  %call44 = call fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** nonnull %orig_types, %union.tree_node* %21) #7, !dbg !6012
  br label %if.end45, !dbg !6012

if.end45:                                         ; preds = %if.end38, %if.then42
  br label %while.cond, !dbg !5997, !llvm.loop !6013

while.end.us-lcssa:                               ; preds = %while.cond
  br label %while.end, !dbg !6015

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %22 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %orig_types, align 8, !dbg !6015
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %22, metadata !5955, metadata !DIExpression()), !dbg !5958
  %cmp46 = icmp eq %struct.VEC_tree_gc* %22, null, !dbg !6019
  br i1 %cmp46, label %if.end48, label %if.then47, !dbg !6020

if.then47:                                        ; preds = %while.end
  %23 = ptrtoint %struct.VEC_tree_gc* %22 to i64, !dbg !6020
  %24 = bitcast %struct.VEC_tree_gc** %p_orig_types to i64*, !dbg !6021
  store i64 %23, i64* %24, align 8, !dbg !6021
  br label %if.end48, !dbg !6022

if.end48:                                         ; preds = %while.end, %if.then47
  %25 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %ret, align 8, !dbg !6023
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %25, metadata !5954, metadata !DIExpression()), !dbg !5958
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6024
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !6024
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !6024
  ret %struct.VEC_tree_gc* %25, !dbg !6025
}

declare dso_local %union.tree_node* @build_function_call_vec(i32, %union.tree_node*, %struct.VEC_tree_gc*, %struct.VEC_tree_gc*) local_unnamed_addr #2

declare dso_local void @release_tree_vector(%struct.VEC_tree_gc*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_component_ref(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_indirect_ref(i32, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_unary_op(i32, i32, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_compound_expr(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.VEC_tree_gc* @make_tree_vector() local_unnamed_addr #2

declare dso_local %union.tree_node* @c_fully_fold(%union.tree_node*, i8 zeroext, i8*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !6026 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6031, metadata !DIExpression()), !dbg !6034
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !6032, metadata !DIExpression()), !dbg !6034
  %num1 = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6035
  %0 = load i32, i32* %num1, align 8, !dbg !6035
  %inc = add i32 %0, 1, !dbg !6035
  store i32 %inc, i32* %num1, align 8, !dbg !6035
  %idxprom = zext i32 %0 to i64, !dbg !6035
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !6035
  call void @llvm.dbg.value(metadata %union.tree_node** %arrayidx, metadata !6033, metadata !DIExpression()), !dbg !6034
  store %union.tree_node* %obj_, %union.tree_node** %arrayidx, align 8, !dbg !6035
  ret %union.tree_node** %arrayidx, !dbg !6035
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @VEC_tree_gc_safe_push(%struct.VEC_tree_gc** %vec_, %union.tree_node* %obj_) unnamed_addr #0 !dbg !6036 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !6040, metadata !DIExpression()), !dbg !6042
  call void @llvm.dbg.value(metadata %union.tree_node* %obj_, metadata !6041, metadata !DIExpression()), !dbg !6042
  %call = tail call fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 1) #7, !dbg !6043
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !6043
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !6043
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6043

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !6043
  br label %cond.end, !dbg !6043

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6043
  %call1 = tail call fastcc %union.tree_node** @VEC_tree_base_quick_push(%struct.VEC_tree_base* %cond, %union.tree_node* %obj_) #7, !dbg !6043
  ret %union.tree_node** %call1, !dbg !6043
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_gc_reserve(%struct.VEC_tree_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6044 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc** %vec_, metadata !6048, metadata !DIExpression()), !dbg !6051
  call void @llvm.dbg.value(metadata i32 1, metadata !6049, metadata !DIExpression()), !dbg !6051
  %0 = load %struct.VEC_tree_gc*, %struct.VEC_tree_gc** %vec_, align 8, !dbg !6052
  %tobool = icmp eq %struct.VEC_tree_gc* %0, null, !dbg !6052
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6052

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %0, i64 0, i32 0, !dbg !6052
  br label %cond.end, !dbg !6052

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_tree_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6052
  %call = tail call fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %cond, i32 1) #7, !dbg !6052
  %tobool1 = icmp eq i32 %call, 0, !dbg !6052
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6052
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6050, metadata !DIExpression()), !dbg !6051
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6052

if.then:                                          ; preds = %cond.end
  %1 = bitcast %struct.VEC_tree_gc** %vec_ to i8**, !dbg !6053
  %2 = load i8*, i8** %1, align 8, !dbg !6053
  %call3 = tail call i8* @vec_gc_p_reserve(i8* %2, i32 1) #6, !dbg !6053
  store i8* %call3, i8** %1, align 8, !dbg !6053
  br label %if.end, !dbg !6053

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6052
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_space(%struct.VEC_tree_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6055 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6059, metadata !DIExpression()), !dbg !6061
  call void @llvm.dbg.value(metadata i32 1, metadata !6060, metadata !DIExpression()), !dbg !6061
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6062
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6062

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 1, !dbg !6062
  %0 = load i32, i32* %alloc, align 4, !dbg !6062
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6062
  %1 = load i32, i32* %num, align 8, !dbg !6062
  %cmp1 = icmp ne i32 %0, %1, !dbg !6062
  %phitmp = zext i1 %cmp1 to i32, !dbg !6062
  br label %cond.end, !dbg !6062

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6062

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i32 [ %phitmp, %cond.true ], [ 0, %cond.false ]
  ret i32 %cond.in, !dbg !6062
}

declare dso_local i8* @vec_gc_p_reserve(i8*, i32) local_unnamed_addr #2

declare dso_local void @check_compound_literal_type(i32, %struct.c_type_name*) local_unnamed_addr #2

declare dso_local void @start_init(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_braced_init(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser, %union.tree_node* %type, i8 zeroext %nested_p) unnamed_addr #5 !dbg !6063 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !6067, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6068, metadata !DIExpression()), !dbg !6074
  call void @llvm.dbg.value(metadata i8 %nested_p, metadata !6069, metadata !DIExpression()), !dbg !6074
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6075
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !6076
  %0 = load i32, i32* %location, align 8, !dbg !6076
  call void @llvm.dbg.value(metadata i32 %0, metadata !6070, metadata !DIExpression()), !dbg !6074
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !6077
  %tobool = icmp eq i8 %call1, 0, !dbg !6077
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6077

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3091, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6077
  br label %cond.end, !dbg !6077

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6078
  %tobool2 = icmp eq i8 %nested_p, 0, !dbg !6079
  br i1 %tobool2, label %if.else, label %if.then, !dbg !6081

if.then:                                          ; preds = %cond.end
  tail call void @push_init_level(i32 0) #6, !dbg !6082
  br label %if.end, !dbg !6082

if.else:                                          ; preds = %cond.end
  tail call void @really_start_incremental_init(%union.tree_node* %type) #6, !dbg !6083
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %call3 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !6084
  %tobool4 = icmp eq i8 %call3, 0, !dbg !6084
  br i1 %tobool4, label %while.cond.preheader, label %if.then5, !dbg !6086

while.cond.preheader:                             ; preds = %if.end
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !6087
  br label %while.cond, !dbg !6091

if.then5:                                         ; preds = %if.end
  %call6 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %0, i32 834, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !6092
  br label %if.end20, !dbg !6094

while.cond:                                       ; preds = %while.cond.preheader, %if.then13
  tail call fastcc void @c_parser_initelt(%struct.c_parser* %parser) #7, !dbg !6095
  %bf.load = load i8, i8* %error, align 2, !dbg !6096
  %bf.clear = and i8 %bf.load, 1, !dbg !6096
  %tobool8 = icmp eq i8 %bf.clear, 0, !dbg !6097
  br i1 %tobool8, label %if.end10, label %if.end20.loopexit, !dbg !6098

if.end10:                                         ; preds = %while.cond
  %call11 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !6099
  %tobool12 = icmp eq i8 %call11, 0, !dbg !6099
  br i1 %tobool12, label %if.end20.loopexit, label %if.then13, !dbg !6101

if.then13:                                        ; preds = %if.end10
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6102
  %call16 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !6103
  %tobool17 = icmp eq i8 %call16, 0, !dbg !6103
  br i1 %tobool17, label %while.cond, label %if.end20.loopexit, !dbg !6105, !llvm.loop !6106

if.end20.loopexit:                                ; preds = %while.cond, %if.end10, %if.then13
  br label %if.end20, !dbg !6108

if.end20:                                         ; preds = %if.end20.loopexit, %if.then5
  %call21 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 42) #7, !dbg !6108
  %tobool22 = icmp eq i8 %call21, 0, !dbg !6108
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !6109

if.then23:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !6071, metadata !DIExpression()), !dbg !6110
  %1 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6111
  %2 = bitcast %struct.c_expr* %agg.result to i64*, !dbg !6112
  store i64 %1, i64* %2, align 8, !dbg !6112
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !6113
  store i32 0, i32* %original_code, align 8, !dbg !6114
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !6115
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !6116
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 42, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i64 0, i64 0)) #7, !dbg !6117
  %3 = bitcast %struct.c_expr* %tmp to i8*, !dbg !6118
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !6118
  call void @pop_init_level(%struct.c_expr* nonnull sret %tmp, i32 0) #6, !dbg !6118
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !6118
  br label %cleanup, !dbg !6119

if.end24:                                         ; preds = %if.end20
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6120
  tail call void @pop_init_level(%struct.c_expr* sret %agg.result, i32 0) #6, !dbg !6121
  br label %cleanup, !dbg !6122

cleanup:                                          ; preds = %if.end24, %if.then23
  ret void, !dbg !6123
}

declare dso_local void @finish_init() local_unnamed_addr #2

declare dso_local void @maybe_warn_string_init(%union.tree_node*, %struct.c_expr* byval(%struct.c_expr) align 8) local_unnamed_addr #2

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_compound_literal(i32, %union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @push_init_level(i32) local_unnamed_addr #2

declare dso_local void @really_start_incremental_init(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_initelt(%struct.c_parser* %parser) unnamed_addr #5 !dbg !6124 {
entry:
  %init = alloca %struct.c_expr, align 8
  %mexpr = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %next = alloca %struct.c_expr, align 8
  %tmp86 = alloca %struct.c_expr, align 8
  %tmp87 = alloca %struct.c_expr, align 8
  %tmp99 = alloca %struct.c_expr, align 8
  %tmp107 = alloca %struct.c_expr, align 8
  %init147 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !6126, metadata !DIExpression()), !dbg !6163
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !6164
  %tobool = icmp eq i8 %call, 0, !dbg !6164
  br i1 %tobool, label %if.else, label %land.lhs.true, !dbg !6165

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !6166
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !6167
  %bf.load = load i32, i32* %0, align 8, !dbg !6167
  %bf.clear = and i32 %bf.load, 255, !dbg !6167
  %cmp = icmp eq i32 %bf.clear, 18, !dbg !6168
  br i1 %cmp, label %if.then, label %if.else, !dbg !6169

if.then:                                          ; preds = %land.lhs.true
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6170
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 1, !dbg !6172
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !6172
  tail call void @set_init_label(%union.tree_node* %1) #6, !dbg !6173
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !6174
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 2, !dbg !6175
  %2 = load i32, i32* %location, align 8, !dbg !6175
  %call5 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %2, i32 834, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !6176
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6177
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6178
  br label %if.end159, !dbg !6179

if.else:                                          ; preds = %entry, %land.lhs.true
  call void @llvm.dbg.value(metadata i32 0, metadata !6127, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 0, metadata !6130, metadata !DIExpression()), !dbg !6180
  %3 = bitcast %struct.c_expr* %init to i8*, !dbg !6181
  %4 = bitcast %struct.c_expr* %init to i64*, !dbg !6181
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init, i64 0, i32 1, !dbg !6181
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init, i64 0, i32 2, !dbg !6181
  %5 = bitcast %struct.c_expr* %mexpr to i8*, !dbg !6182
  %value68 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !6182
  %6 = bitcast %struct.c_expr* %next to i8*, !dbg !6183
  %7 = bitcast %struct.c_expr* %tmp86 to i8*, !dbg !6183
  %8 = bitcast %struct.c_expr* %tmp87 to i8*, !dbg !6183
  %value88 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %next, i64 0, i32 0, !dbg !6183
  %value93 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %mexpr, i64 0, i32 0, !dbg !6182
  %original_code94 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %mexpr, i64 0, i32 1, !dbg !6182
  %original_type95 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %mexpr, i64 0, i32 2, !dbg !6182
  %value100 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp99, i64 0, i32 0, !dbg !6184
  %value108 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp107, i64 0, i32 0, !dbg !6185
  br label %while.cond, !dbg !6188

while.cond:                                       ; preds = %cleanup125, %if.else
  %first.0 = phi %union.tree_node* [ undef, %if.else ], [ %first.6, %cleanup125 ]
  %des_loc.0 = phi i32 [ 0, %if.else ], [ %des_loc.1, %cleanup125 ], !dbg !6189
  %des_seen.0 = phi i32 [ 0, %if.else ], [ %des_seen.4, %cleanup125 ], !dbg !6180
  call void @llvm.dbg.value(metadata i32 %des_seen.0, metadata !6127, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 %des_loc.0, metadata !6130, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata %union.tree_node* %first.0, metadata !6138, metadata !DIExpression()), !dbg !6184
  %call6 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 39) #7, !dbg !6190
  %tobool8 = icmp eq i8 %call6, 0, !dbg !6190
  br i1 %tobool8, label %lor.rhs, label %while.body, !dbg !6191

lor.rhs:                                          ; preds = %while.cond
  %call9 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 48) #7, !dbg !6192
  %tobool11 = icmp eq i8 %call9, 0, !dbg !6191
  br i1 %tobool11, label %while.end128, label %while.body, !dbg !6188

while.body:                                       ; preds = %lor.rhs, %while.cond
  call void @llvm.dbg.value(metadata i32 %des_seen.0, metadata !6131, metadata !DIExpression()), !dbg !6193
  %tobool12 = icmp eq i32 %des_seen.0, 0, !dbg !6194
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !6196

if.then13:                                        ; preds = %while.body
  %call14 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6197
  %location15 = getelementptr inbounds %struct.c_token, %struct.c_token* %call14, i64 0, i32 2, !dbg !6198
  %9 = load i32, i32* %location15, align 8, !dbg !6198
  call void @llvm.dbg.value(metadata i32 %9, metadata !6130, metadata !DIExpression()), !dbg !6180
  br label %if.end, !dbg !6199

if.end:                                           ; preds = %while.body, %if.then13
  %des_loc.1 = phi i32 [ %des_loc.0, %while.body ], [ %9, %if.then13 ], !dbg !6180
  call void @llvm.dbg.value(metadata i32 %des_loc.1, metadata !6130, metadata !DIExpression()), !dbg !6180
  %cmp16 = icmp slt i32 %des_seen.0, 2, !dbg !6200
  %inc = zext i1 %cmp16 to i32, !dbg !6202
  %spec.select = add nsw i32 %des_seen.0, %inc, !dbg !6202
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !6127, metadata !DIExpression()), !dbg !6180
  %call20 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 48) #7, !dbg !6203
  %tobool21 = icmp eq i8 %call20, 0, !dbg !6203
  br i1 %tobool21, label %if.else31, label %if.then22, !dbg !6204

if.then22:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 2, metadata !6127, metadata !DIExpression()), !dbg !6180
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6205
  %call23 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !6206
  %tobool24 = icmp eq i8 %call23, 0, !dbg !6206
  br i1 %tobool24, label %if.else28, label %if.then25, !dbg !6207

if.then25:                                        ; preds = %if.then22
  %call26 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6208
  %value27 = getelementptr inbounds %struct.c_token, %struct.c_token* %call26, i64 0, i32 1, !dbg !6210
  %10 = load %union.tree_node*, %union.tree_node** %value27, align 8, !dbg !6210
  call void @set_init_label(%union.tree_node* %10) #6, !dbg !6211
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6212
  br label %if.end124, !dbg !6213

if.else28:                                        ; preds = %if.then22
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !6214
  %11 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6215
  store i64 %11, i64* %4, align 8, !dbg !6216
  store i32 0, i32* %original_code, align 8, !dbg !6217
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !6218
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !6219
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 19, i8* null) #7, !dbg !6220
  call void @llvm.dbg.value(metadata %struct.c_expr* %init, metadata !6133, metadata !DIExpression(DW_OP_deref)), !dbg !6181
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %init, i8 zeroext 0) #6, !dbg !6221
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !6222
  br label %cleanup125

if.else31:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata i32 0, metadata !6141, metadata !DIExpression()), !dbg !6184
  switch i32 %des_seen.0, label %if.end98 [
    i32 1, label %land.lhs.true34
    i32 0, label %if.else31.land.lhs.true41_crit_edge
  ], !dbg !6223

if.else31.land.lhs.true41_crit_edge:              ; preds = %if.else31
  %.pre = load i32, i32* @c_language, align 4, !dbg !6225
  %.pre2 = and i32 %.pre, 1, !dbg !6225
  br label %land.lhs.true41, !dbg !6223

land.lhs.true34:                                  ; preds = %if.else31
  %12 = load i32, i32* @c_language, align 4, !dbg !6226
  %and = and i32 %12, 1, !dbg !6226
  %cmp35 = icmp eq i32 %and, 0, !dbg !6226
  br i1 %cmp35, label %if.end38, label %cleanup120, !dbg !6227

if.end38:                                         ; preds = %land.lhs.true34
  br i1 false, label %if.end38.land.lhs.true41_crit_edge, label %if.end98, !dbg !6228

if.end38.land.lhs.true41_crit_edge:               ; preds = %if.end38
  br label %land.lhs.true41, !dbg !6228

land.lhs.true41:                                  ; preds = %if.else31.land.lhs.true41_crit_edge, %if.end38.land.lhs.true41_crit_edge
  %and42.pre-phi = phi i32 [ %.pre2, %if.else31.land.lhs.true41_crit_edge ], [ 0, %if.end38.land.lhs.true41_crit_edge ], !dbg !6225
  %cmp43 = icmp eq i32 %and42.pre-phi, 0, !dbg !6225
  br i1 %cmp43, label %if.end98, label %if.then45, !dbg !6229

if.then45:                                        ; preds = %land.lhs.true41
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !6230
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6231
  %call46 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6232
  %13 = getelementptr inbounds %struct.c_token, %struct.c_token* %call46, i64 0, i32 0, !dbg !6233
  %bf.load47 = load i32, i32* %13, align 8, !dbg !6233
  %bf.clear48 = and i32 %bf.load47, 255, !dbg !6233
  %cmp49 = icmp eq i32 %bf.clear48, 53, !dbg !6234
  br i1 %cmp49, label %land.lhs.true51, label %if.end67, !dbg !6235

land.lhs.true51:                                  ; preds = %if.then45
  %call52 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6236
  %14 = getelementptr inbounds %struct.c_token, %struct.c_token* %call52, i64 0, i32 0, !dbg !6237
  %bf.load53 = load i32, i32* %14, align 8, !dbg !6237
  %bf.clear54 = and i32 %bf.load53, 65280, !dbg !6237
  %cmp55 = icmp eq i32 %bf.clear54, 256, !dbg !6238
  br i1 %cmp55, label %if.then63, label %lor.lhs.false, !dbg !6239

lor.lhs.false:                                    ; preds = %land.lhs.true51
  %call57 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6240
  %15 = getelementptr inbounds %struct.c_token, %struct.c_token* %call57, i64 0, i32 0, !dbg !6241
  %bf.load58 = load i32, i32* %15, align 8, !dbg !6241
  %bf.clear60 = and i32 %bf.load58, 65280, !dbg !6241
  %cmp61 = icmp eq i32 %bf.clear60, 512, !dbg !6242
  br i1 %cmp61, label %if.then63, label %if.end67, !dbg !6243

if.then63:                                        ; preds = %lor.lhs.false, %land.lhs.true51
  %call64 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6244
  %value65 = getelementptr inbounds %struct.c_token, %struct.c_token* %call64, i64 0, i32 1, !dbg !6245
  %16 = load %union.tree_node*, %union.tree_node** %value65, align 8, !dbg !6245
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !6147, metadata !DIExpression()), !dbg !6246
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6247
  %call66 = call %union.tree_node* @objc_get_class_reference(%union.tree_node* %16) #6, !dbg !6248
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !6142, metadata !DIExpression()), !dbg !6182
  br label %parse_message_args

if.end67:                                         ; preds = %lor.lhs.false, %if.then45
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6249
  %17 = load %union.tree_node*, %union.tree_node** %value68, align 8, !dbg !6250
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !6138, metadata !DIExpression()), !dbg !6184
  %call69 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 44) #7, !dbg !6251
  %tobool71 = icmp eq i8 %call69, 0, !dbg !6251
  br i1 %tobool71, label %lor.lhs.false72, label %cleanup, !dbg !6253

lor.lhs.false72:                                  ; preds = %if.end67
  %call73 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 40) #7, !dbg !6254
  %tobool75 = icmp eq i8 %call73, 0, !dbg !6254
  br i1 %tobool75, label %while.cond78.preheader, label %cleanup, !dbg !6255

while.cond78.preheader:                           ; preds = %lor.lhs.false72
  br label %while.cond78, !dbg !6256

while.cond78:                                     ; preds = %while.cond78.preheader, %while.body81
  %rec.0 = phi %union.tree_node* [ %call89, %while.body81 ], [ %17, %while.cond78.preheader ], !dbg !6182
  call void @llvm.dbg.value(metadata %union.tree_node* %rec.0, metadata !6142, metadata !DIExpression()), !dbg !6182
  %call79 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !6257
  %tobool80 = icmp eq i8 %call79, 0, !dbg !6256
  br i1 %tobool80, label %parse_message_args.loopexit, label %while.body81, !dbg !6256

while.body81:                                     ; preds = %while.cond78
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !6258
  %call82 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6259
  %location83 = getelementptr inbounds %struct.c_token, %struct.c_token* %call82, i64 0, i32 2, !dbg !6260
  %18 = load i32, i32* %location83, align 8, !dbg !6260
  call void @llvm.dbg.value(metadata i32 %18, metadata !6152, metadata !DIExpression()), !dbg !6183
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6261
  %call84 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6262
  %location85 = getelementptr inbounds %struct.c_token, %struct.c_token* %call84, i64 0, i32 2, !dbg !6263
  %19 = load i32, i32* %location85, align 8, !dbg !6263
  call void @llvm.dbg.value(metadata i32 %19, metadata !6153, metadata !DIExpression()), !dbg !6183
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !6264
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp86, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6264
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !6264
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !6264
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !6265
  call void @llvm.dbg.value(metadata %struct.c_expr* %next, metadata !6150, metadata !DIExpression(DW_OP_deref)), !dbg !6183
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp87, i32 %19, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %next) #6, !dbg !6265
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !6265
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !6265
  %20 = load %union.tree_node*, %union.tree_node** %value88, align 8, !dbg !6266
  %call89 = call %union.tree_node* @build_compound_expr(i32 %18, %union.tree_node* %rec.0, %union.tree_node* %20) #6, !dbg !6267
  call void @llvm.dbg.value(metadata %union.tree_node* %call89, metadata !6142, metadata !DIExpression()), !dbg !6182
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !6268
  br label %while.cond78, !dbg !6256, !llvm.loop !6269

parse_message_args.loopexit:                      ; preds = %while.cond78
  %rec.0.lcssa = phi %union.tree_node* [ %rec.0, %while.cond78 ], !dbg !6182
  call void @llvm.dbg.value(metadata %union.tree_node* %rec.0.lcssa, metadata !6142, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata %union.tree_node* %rec.0.lcssa, metadata !6142, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata %union.tree_node* %rec.0.lcssa, metadata !6142, metadata !DIExpression()), !dbg !6182
  br label %parse_message_args, !dbg !6270

parse_message_args:                               ; preds = %parse_message_args.loopexit, %if.then63
  %first.1 = phi %union.tree_node* [ %first.0, %if.then63 ], [ %17, %parse_message_args.loopexit ]
  %rec.1 = phi %union.tree_node* [ %call66, %if.then63 ], [ %rec.0.lcssa, %parse_message_args.loopexit ], !dbg !6182
  call void @llvm.dbg.value(metadata %union.tree_node* %rec.1, metadata !6142, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.value(metadata %union.tree_node* %first.1, metadata !6138, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.label(metadata !6161), !dbg !6271
  %call90 = call fastcc %union.tree_node* @c_parser_objc_message_args(%struct.c_parser* %parser) #7, !dbg !6270
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !6145, metadata !DIExpression()), !dbg !6182
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !6272
  %call91 = call %union.tree_node* @build_tree_list_stat(%union.tree_node* %rec.1, %union.tree_node* %call90) #6, !dbg !6273
  %call92 = call %union.tree_node* @objc_build_message_expr(%union.tree_node* %call91) #6, !dbg !6274
  store %union.tree_node* %call92, %union.tree_node** %value93, align 8, !dbg !6275
  store i32 0, i32* %original_code94, align 8, !dbg !6276
  store %union.tree_node* null, %union.tree_node** %original_type95, align 8, !dbg !6277
  call void @llvm.dbg.value(metadata %struct.c_expr* %mexpr, metadata !6146, metadata !DIExpression(DW_OP_deref)), !dbg !6182
  call fastcc void @c_parser_initval(%struct.c_parser* %parser, %struct.c_expr* nonnull %mexpr) #7, !dbg !6278
  br label %cleanup, !dbg !6279

cleanup:                                          ; preds = %lor.lhs.false72, %if.end67, %parse_message_args
  %first.2 = phi %union.tree_node* [ %first.1, %parse_message_args ], [ %17, %lor.lhs.false72 ], [ %17, %if.end67 ]
  %cleanup.dest.slot.0 = phi i32 [ 1, %parse_message_args ], [ 5, %lor.lhs.false72 ], [ 5, %if.end67 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %first.2, metadata !6138, metadata !DIExpression()), !dbg !6184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !6280
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 5
  br i1 %cond1, label %array_desig_after_first, label %cleanup120

if.end98:                                         ; preds = %land.lhs.true41, %if.else31, %if.end38
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6281
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp99, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6282
  %21 = load %union.tree_node*, %union.tree_node** %value100, align 8, !dbg !6283
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !6138, metadata !DIExpression()), !dbg !6184
  br label %array_desig_after_first, !dbg !6284

array_desig_after_first:                          ; preds = %cleanup, %if.end98
  %first.3 = phi %union.tree_node* [ %first.2, %cleanup ], [ %21, %if.end98 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %first.3, metadata !6138, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.label(metadata !6162), !dbg !6285
  %call102 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 44) #7, !dbg !6286
  %tobool103 = icmp eq i8 %call102, 0, !dbg !6286
  br i1 %tobool103, label %if.end110, label %if.then104, !dbg !6287

if.then104:                                       ; preds = %array_desig_after_first
  %call105 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6288
  %location106 = getelementptr inbounds %struct.c_token, %struct.c_token* %call105, i64 0, i32 2, !dbg !6289
  %22 = load i32, i32* %location106, align 8, !dbg !6289
  call void @llvm.dbg.value(metadata i32 %22, metadata !6141, metadata !DIExpression()), !dbg !6184
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6290
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp107, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6291
  %23 = load %union.tree_node*, %union.tree_node** %value108, align 8, !dbg !6292
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !6140, metadata !DIExpression()), !dbg !6184
  br label %if.end110, !dbg !6293

if.end110:                                        ; preds = %array_desig_after_first, %if.then104
  %second.0 = phi %union.tree_node* [ %23, %if.then104 ], [ null, %array_desig_after_first ], !dbg !6294
  %ellipsis_loc.0 = phi i32 [ %22, %if.then104 ], [ 0, %array_desig_after_first ], !dbg !6184
  call void @llvm.dbg.value(metadata i32 %ellipsis_loc.0, metadata !6141, metadata !DIExpression()), !dbg !6184
  call void @llvm.dbg.value(metadata %union.tree_node* %second.0, metadata !6140, metadata !DIExpression()), !dbg !6184
  %call111 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 40) #7, !dbg !6295
  %tobool112 = icmp eq i8 %call111, 0, !dbg !6295
  br i1 %tobool112, label %if.else118, label %if.then113, !dbg !6297

if.then113:                                       ; preds = %if.end110
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6298
  call void @set_init_index(%union.tree_node* %first.3, %union.tree_node* %second.0) #6, !dbg !6300
  %tobool114 = icmp eq %union.tree_node* %second.0, null, !dbg !6301
  br i1 %tobool114, label %cleanup120, label %if.then115, !dbg !6303

if.then115:                                       ; preds = %if.then113
  %call116 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %ellipsis_loc.0, i32 834, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.29, i64 0, i64 0)) #6, !dbg !6304
  br label %cleanup120, !dbg !6304

if.else118:                                       ; preds = %if.end110
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !6305
  br label %cleanup120

cleanup120:                                       ; preds = %land.lhs.true34, %if.then113, %if.else118, %if.then115, %cleanup
  %first.4 = phi %union.tree_node* [ %first.2, %cleanup ], [ %first.0, %land.lhs.true34 ], [ %first.3, %if.then113 ], [ %first.3, %if.then115 ], [ %first.3, %if.else118 ]
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 3, %land.lhs.true34 ], [ 0, %if.then113 ], [ 0, %if.then115 ], [ 0, %if.else118 ]
  %des_seen.2 = phi i32 [ %spec.select, %cleanup ], [ 1, %land.lhs.true34 ], [ %spec.select, %if.then113 ], [ %spec.select, %if.then115 ], [ %spec.select, %if.else118 ], !dbg !6193
  call void @llvm.dbg.value(metadata i32 %des_seen.2, metadata !6127, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata %union.tree_node* %first.4, metadata !6138, metadata !DIExpression()), !dbg !6184
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %if.end124, label %cleanup125

if.end124:                                        ; preds = %cleanup120, %if.then25
  %first.5 = phi %union.tree_node* [ %first.0, %if.then25 ], [ %first.4, %cleanup120 ]
  %des_seen.3 = phi i32 [ 2, %if.then25 ], [ %des_seen.2, %cleanup120 ], !dbg !6306
  call void @llvm.dbg.value(metadata i32 %des_seen.3, metadata !6127, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata %union.tree_node* %first.5, metadata !6138, metadata !DIExpression()), !dbg !6184
  br label %cleanup125, !dbg !6307

cleanup125:                                       ; preds = %cleanup120, %if.end124, %if.else28
  %first.6 = phi %union.tree_node* [ %first.5, %if.end124 ], [ %first.0, %if.else28 ], [ %first.4, %cleanup120 ]
  %cleanup.dest.slot.2 = phi i32 [ 0, %if.end124 ], [ 1, %if.else28 ], [ %cleanup.dest.slot.1, %cleanup120 ]
  %des_seen.4 = phi i32 [ %des_seen.3, %if.end124 ], [ 2, %if.else28 ], [ %des_seen.2, %cleanup120 ], !dbg !6306
  call void @llvm.dbg.value(metadata i32 %des_seen.4, metadata !6127, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata %union.tree_node* %first.6, metadata !6138, metadata !DIExpression()), !dbg !6184
  switch i32 %cleanup.dest.slot.2, label %cleanup155.loopexit [
    i32 0, label %while.cond
    i32 3, label %while.end128
  ], !llvm.loop !6308

while.end128:                                     ; preds = %lor.rhs, %cleanup125
  %des_loc.2 = phi i32 [ %des_loc.1, %cleanup125 ], [ %des_loc.0, %lor.rhs ], !dbg !6189
  %des_seen.5 = phi i32 [ %des_seen.4, %cleanup125 ], [ %des_seen.0, %lor.rhs ], !dbg !6180
  call void @llvm.dbg.value(metadata i32 %des_seen.5, metadata !6127, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.value(metadata i32 %des_loc.2, metadata !6130, metadata !DIExpression()), !dbg !6180
  %cmp129 = icmp sgt i32 %des_seen.5, 0, !dbg !6309
  br i1 %cmp129, label %if.then131, label %cleanup155, !dbg !6310

if.then131:                                       ; preds = %while.end128
  %call132 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 0) #7, !dbg !6311
  %tobool133 = icmp eq i8 %call132, 0, !dbg !6311
  br i1 %tobool133, label %if.else139, label %if.then134, !dbg !6312

if.then134:                                       ; preds = %if.then131
  %24 = load i32, i32* @flag_isoc99, align 4, !dbg !6313
  %tobool135 = icmp eq i32 %24, 0, !dbg !6313
  br i1 %tobool135, label %if.then136, label %if.end138, !dbg !6316

if.then136:                                       ; preds = %if.then134
  %call137 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %des_loc.2, i32 834, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !6317
  br label %if.end138, !dbg !6317

if.end138:                                        ; preds = %if.then134, %if.then136
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6318
  br label %cleanup155, !dbg !6319

if.else139:                                       ; preds = %if.then131
  %cmp140 = icmp eq i32 %des_seen.5, 1, !dbg !6320
  br i1 %cmp140, label %if.then142, label %if.else146, !dbg !6321

if.then142:                                       ; preds = %if.else139
  %call143 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6322
  %location144 = getelementptr inbounds %struct.c_token, %struct.c_token* %call143, i64 0, i32 2, !dbg !6323
  %25 = load i32, i32* %location144, align 8, !dbg !6323
  %call145 = call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %25, i32 834, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !6324
  br label %cleanup155

if.else146:                                       ; preds = %if.else139
  %26 = bitcast %struct.c_expr* %init147 to i8*, !dbg !6325
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #8, !dbg !6325
  %27 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6326
  %28 = bitcast %struct.c_expr* %init147 to i64*, !dbg !6327
  store i64 %27, i64* %28, align 8, !dbg !6327
  %original_code149 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init147, i64 0, i32 1, !dbg !6328
  store i32 0, i32* %original_code149, align 8, !dbg !6329
  %original_type150 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init147, i64 0, i32 2, !dbg !6330
  store %union.tree_node* null, %union.tree_node** %original_type150, align 8, !dbg !6331
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0)) #7, !dbg !6332
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 19, i8* null) #7, !dbg !6333
  call void @llvm.dbg.value(metadata %struct.c_expr* %init147, metadata !6154, metadata !DIExpression(DW_OP_deref)), !dbg !6334
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %init147, i8 zeroext 0) #6, !dbg !6335
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #8, !dbg !6336
  br label %cleanup155

cleanup155.loopexit:                              ; preds = %cleanup125
  %cleanup.dest.slot.2.lcssa = phi i32 [ %cleanup.dest.slot.2, %cleanup125 ]
  br label %cleanup155

cleanup155:                                       ; preds = %cleanup155.loopexit, %while.end128, %if.then142, %if.end138, %if.else146
  %cleanup.dest.slot.3 = phi i32 [ 1, %if.else146 ], [ 0, %if.end138 ], [ 0, %if.then142 ], [ 0, %while.end128 ], [ %cleanup.dest.slot.2.lcssa, %cleanup155.loopexit ]
  %switch = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %switch, label %if.end159, label %return

if.end159:                                        ; preds = %cleanup155, %if.then
  call fastcc void @c_parser_initval(%struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6337
  br label %return, !dbg !6338

return:                                           ; preds = %cleanup155, %if.end159
  ret void, !dbg !6338
}

declare dso_local void @pop_init_level(%struct.c_expr* sret, i32) local_unnamed_addr #2

declare dso_local void @set_init_label(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @process_init_element(%struct.c_expr* byval(%struct.c_expr) align 8, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_get_class_reference(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_objc_message_args(%struct.c_parser* %parser) unnamed_addr #5 !dbg !6339 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !6341, metadata !DIExpression()), !dbg !6346
  %call = tail call fastcc %union.tree_node* @c_parser_objc_selector(%struct.c_parser* %parser) #7, !dbg !6347
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6342, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6343, metadata !DIExpression()), !dbg !6346
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !6348
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !6350

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 18) #7, !dbg !6351
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6351
  br i1 %tobool2, label %if.end, label %cleanup18, !dbg !6352

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %while.cond, !dbg !6353

while.cond:                                       ; preds = %cleanup, %if.end
  %list.0 = phi %union.tree_node* [ null, %if.end ], [ %list.1, %cleanup ], !dbg !6346
  %sel.0 = phi %union.tree_node* [ %call, %if.end ], [ %sel.1, %cleanup ], !dbg !6346
  %retval.0 = phi %union.tree_node* [ undef, %if.end ], [ %retval.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %sel.0, metadata !6342, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !6343, metadata !DIExpression()), !dbg !6346
  %call3 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #7, !dbg !6354
  %tobool4 = icmp eq i8 %call3, 0, !dbg !6354
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !6356

if.then5:                                         ; preds = %while.cond
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6357
  br label %cleanup, !dbg !6358

if.end6:                                          ; preds = %while.cond
  %call7 = tail call fastcc %union.tree_node* @c_parser_objc_keywordexpr(%struct.c_parser* %parser) #7, !dbg !6359
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !6344, metadata !DIExpression()), !dbg !6360
  %call8 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* %sel.0, %union.tree_node* %call7) #6, !dbg !6361
  %call9 = tail call %union.tree_node* @chainon(%union.tree_node* %list.0, %union.tree_node* %call8) #6, !dbg !6362
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6343, metadata !DIExpression()), !dbg !6346
  %call10 = tail call fastcc %union.tree_node* @c_parser_objc_selector(%struct.c_parser* %parser) #7, !dbg !6363
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !6342, metadata !DIExpression()), !dbg !6346
  %tobool11 = icmp eq %union.tree_node* %call10, null, !dbg !6364
  br i1 %tobool11, label %land.lhs.true12, label %if.end17, !dbg !6366

land.lhs.true12:                                  ; preds = %if.end6
  %call13 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 18) #7, !dbg !6367
  %tobool15 = icmp eq i8 %call13, 0, !dbg !6367
  br i1 %tobool15, label %if.end17, label %cleanup, !dbg !6368

if.end17:                                         ; preds = %land.lhs.true12, %if.end6
  br label %cleanup, !dbg !6369

cleanup:                                          ; preds = %land.lhs.true12, %if.end17, %if.then5
  %list.1 = phi %union.tree_node* [ %call9, %if.end17 ], [ %list.0, %if.then5 ], [ %call9, %land.lhs.true12 ], !dbg !6346
  %sel.1 = phi %union.tree_node* [ %call10, %if.end17 ], [ %sel.0, %if.then5 ], [ null, %land.lhs.true12 ], !dbg !6346
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end17 ], [ 1, %if.then5 ], [ 3, %land.lhs.true12 ]
  %retval.1 = phi %union.tree_node* [ %retval.0, %if.end17 ], [ %0, %if.then5 ], [ %retval.0, %land.lhs.true12 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %sel.1, metadata !6342, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1, metadata !6343, metadata !DIExpression()), !dbg !6346
  switch i32 %cleanup.dest.slot.0, label %cleanup18.loopexit [
    i32 0, label %while.cond
    i32 3, label %while.end
  ], !llvm.loop !6370

while.end:                                        ; preds = %cleanup
  %list.1.lcssa6 = phi %union.tree_node* [ %list.1, %cleanup ], !dbg !6346
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa6, metadata !6343, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa6, metadata !6343, metadata !DIExpression()), !dbg !6346
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa6, metadata !6343, metadata !DIExpression()), !dbg !6346
  br label %cleanup18, !dbg !6371

cleanup18.loopexit:                               ; preds = %cleanup
  %retval.1.lcssa = phi %union.tree_node* [ %retval.1, %cleanup ]
  br label %cleanup18, !dbg !6372

cleanup18:                                        ; preds = %cleanup18.loopexit, %land.lhs.true, %while.end
  %retval.2 = phi %union.tree_node* [ %list.1.lcssa6, %while.end ], [ %call, %land.lhs.true ], [ %retval.1.lcssa, %cleanup18.loopexit ]
  ret %union.tree_node* %retval.2, !dbg !6372
}

declare dso_local %union.tree_node* @objc_build_message_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_initval(%struct.c_parser* %parser, %struct.c_expr* %after) unnamed_addr #5 !dbg !6373 {
entry:
  %init = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp4 = alloca %struct.c_expr, align 8
  %tmp20 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !6377, metadata !DIExpression()), !dbg !6383
  call void @llvm.dbg.value(metadata %struct.c_expr* %after, metadata !6378, metadata !DIExpression()), !dbg !6383
  %0 = bitcast %struct.c_expr* %init to i8*, !dbg !6384
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6384
  %tobool = icmp eq %struct.c_expr* %after, null, !dbg !6385
  br i1 %tobool, label %cond.end, label %lor.lhs.false, !dbg !6385

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* @c_language, align 4, !dbg !6385
  %and = and i32 %1, 1, !dbg !6385
  %cmp = icmp eq i32 %and, 0, !dbg !6385
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6385

cond.true:                                        ; preds = %lor.lhs.false
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3330, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6385
  br label %cond.end, !dbg !6385

cond.end:                                         ; preds = %lor.lhs.false, %entry, %cond.true
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !6386
  %tobool1 = icmp eq i8 %call, 0, !dbg !6386
  %tobool2 = icmp ne %struct.c_expr* %after, null, !dbg !6387
  %or.cond = or i1 %tobool1, %tobool2, !dbg !6388
  br i1 %or.cond, label %if.else, label %if.then, !dbg !6388

if.then:                                          ; preds = %cond.end
  %2 = bitcast %struct.c_expr* %tmp to i8*, !dbg !6389
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6389
  call fastcc void @c_parser_braced_init(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %union.tree_node* null, i8 zeroext 1) #7, !dbg !6389
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !6389
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6389
  br label %if.end21, !dbg !6390

if.else:                                          ; preds = %cond.end
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6391
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 2, !dbg !6392
  %3 = load i32, i32* %location, align 8, !dbg !6392
  call void @llvm.dbg.value(metadata i32 %3, metadata !6380, metadata !DIExpression()), !dbg !6393
  %4 = bitcast %struct.c_expr* %tmp4 to i8*, !dbg !6394
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6394
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp4, %struct.c_parser* %parser, %struct.c_expr* %after) #7, !dbg !6394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !6394
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6394
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init, i64 0, i32 0, !dbg !6395
  %5 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !6395
  %cmp5 = icmp eq %union.tree_node* %5, null, !dbg !6397
  br i1 %cmp5, label %if.end21, label %land.lhs.true7, !dbg !6398

land.lhs.true7:                                   ; preds = %if.else
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6398
  %bf.load = load i64, i64* %6, align 8, !dbg !6399
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6400
  %cmp9 = icmp eq i64 %bf.cast1, 28, !dbg !6400
  br i1 %cmp9, label %if.end21, label %land.lhs.true11, !dbg !6401

land.lhs.true11:                                  ; preds = %land.lhs.true7
  %cmp17 = icmp eq i64 %bf.cast1, 119, !dbg !6402
  br i1 %cmp17, label %if.end21, label %if.then19, !dbg !6403

if.then19:                                        ; preds = %land.lhs.true11
  %7 = bitcast %struct.c_expr* %tmp20 to i8*, !dbg !6404
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !6404
  call void @llvm.dbg.value(metadata %struct.c_expr* %init, metadata !6379, metadata !DIExpression(DW_OP_deref)), !dbg !6383
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp20, i32 %3, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %init) #6, !dbg !6404
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !6404
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !6404
  br label %if.end21, !dbg !6405

if.end21:                                         ; preds = %land.lhs.true11, %land.lhs.true7, %if.else, %if.then19, %if.then
  call void @llvm.dbg.value(metadata %struct.c_expr* %init, metadata !6379, metadata !DIExpression(DW_OP_deref)), !dbg !6383
  call void @process_init_element(%struct.c_expr* nonnull byval(%struct.c_expr) align 8 %init, i8 zeroext 0) #6, !dbg !6406
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6407
  ret void, !dbg !6407
}

declare dso_local void @set_init_index(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_objc_keywordexpr(%struct.c_parser* %parser) unnamed_addr #5 !dbg !6408 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !6410, metadata !DIExpression()), !dbg !6413
  %call = tail call fastcc %struct.VEC_tree_gc* @c_parser_expr_list(%struct.c_parser* %parser, i8 zeroext 1, i8 zeroext 1, %struct.VEC_tree_gc** null) #7, !dbg !6414
  call void @llvm.dbg.value(metadata %struct.VEC_tree_gc* %call, metadata !6412, metadata !DIExpression()), !dbg !6413
  %base = getelementptr inbounds %struct.VEC_tree_gc, %struct.VEC_tree_gc* %call, i64 0, i32 0, !dbg !6415
  %call1 = tail call fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %base) #7, !dbg !6415
  %cmp = icmp eq i32 %call1, 1, !dbg !6417
  br i1 %cmp, label %if.then, label %if.else, !dbg !6418

if.then:                                          ; preds = %entry
  %call8 = tail call fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %base, i32 0) #7, !dbg !6419
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !6411, metadata !DIExpression()), !dbg !6413
  br label %if.end, !dbg !6421

if.else:                                          ; preds = %entry
  %call9 = tail call %union.tree_node* @build_tree_list_vec_stat(%struct.VEC_tree_gc* %call) #6, !dbg !6422
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !6411, metadata !DIExpression()), !dbg !6413
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %ret.0 = phi %union.tree_node* [ %call8, %if.then ], [ %call9, %if.else ], !dbg !6424
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !6411, metadata !DIExpression()), !dbg !6413
  tail call void @release_tree_vector(%struct.VEC_tree_gc* %call) #6, !dbg !6425
  ret %union.tree_node* %ret.0, !dbg !6426
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_tree_base_length(%struct.VEC_tree_base* %vec_) unnamed_addr #0 !dbg !6427 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6433, metadata !DIExpression()), !dbg !6434
  %tobool = icmp eq %struct.VEC_tree_base* %vec_, null, !dbg !6435
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6435

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 0, !dbg !6435
  %0 = load i32, i32* %num, align 8, !dbg !6435
  br label %cond.end, !dbg !6435

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6435
  ret i32 %cond, !dbg !6435
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @VEC_tree_base_index(%struct.VEC_tree_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !6436 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_tree_base* %vec_, metadata !6440, metadata !DIExpression()), !dbg !6442
  call void @llvm.dbg.value(metadata i32 0, metadata !6441, metadata !DIExpression()), !dbg !6442
  br label %land.end, !dbg !6443

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %arrayidx = getelementptr inbounds %struct.VEC_tree_base, %struct.VEC_tree_base* %vec_, i64 0, i32 2, i64 0, !dbg !6443
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6443
  ret %union.tree_node* %0, !dbg !6443
}

declare dso_local %union.tree_node* @build_tree_list_vec_stat(%struct.VEC_tree_gc*) local_unnamed_addr #2

declare dso_local void @parser_build_unary_op(%struct.c_expr* sret, i32, i32, %struct.c_expr* byval(%struct.c_expr) align 8) local_unnamed_addr #2

declare dso_local void @expand_location(%struct.expanded_location* sret, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @finish_label_address_expr(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_sizeof_expression(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !6444 {
entry:
  %expr = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp21 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !6446, metadata !DIExpression()), !dbg !6457
  %0 = bitcast %struct.c_expr* %expr to i8*, !dbg !6458
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6458
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 48) #7, !dbg !6459
  %tobool = icmp eq i8 %call, 0, !dbg !6459
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6459

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5190, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6459
  br label %cond.end, !dbg !6459

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6460
  %1 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6461
  %inc = add nsw i32 %1, 1, !dbg !6461
  store i32 %inc, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6461
  %2 = load i32, i32* @in_sizeof, align 4, !dbg !6462
  %inc1 = add nsw i32 %2, 1, !dbg !6462
  store i32 %inc1, i32* @in_sizeof, align 4, !dbg !6462
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !6463
  %tobool3 = icmp eq i8 %call2, 0, !dbg !6463
  br i1 %tobool3, label %if.else, label %land.lhs.true, !dbg !6464

land.lhs.true:                                    ; preds = %cond.end
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !6465
  %call5 = tail call fastcc zeroext i8 @c_token_starts_typename(%struct.c_token* %call4) #7, !dbg !6466
  %tobool7 = icmp eq i8 %call5, 0, !dbg !6466
  br i1 %tobool7, label %if.else, label %if.then, !dbg !6467

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6468
  %call8 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6469
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call8, i64 0, i32 2, !dbg !6470
  %3 = load i32, i32* %location, align 8, !dbg !6470
  call void @llvm.dbg.value(metadata i32 %3, metadata !6448, metadata !DIExpression()), !dbg !6457
  %call9 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !6471
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call9, metadata !6449, metadata !DIExpression()), !dbg !6472
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !6473
  %cmp = icmp eq %struct.c_type_name* %call9, null, !dbg !6474
  br i1 %cmp, label %if.then11, label %if.end, !dbg !6475

if.then11:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !6452, metadata !DIExpression()), !dbg !6476
  %4 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6477
  %dec = add nsw i32 %4, -1, !dbg !6477
  store i32 %dec, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6477
  %5 = load i32, i32* @in_sizeof, align 4, !dbg !6478
  %dec12 = add nsw i32 %5, -1, !dbg !6478
  store i32 %dec12, i32* @in_sizeof, align 4, !dbg !6478
  %6 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6479
  %7 = bitcast %struct.c_expr* %agg.result to i64*, !dbg !6480
  store i64 %6, i64* %7, align 8, !dbg !6480
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !6481
  store i32 0, i32* %original_code, align 8, !dbg !6482
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !6483
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !6484
  br label %cleanup, !dbg !6485

if.end:                                           ; preds = %if.then
  %call13 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !6486
  %tobool14 = icmp eq i8 %call13, 0, !dbg !6486
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !6488

if.then15:                                        ; preds = %if.end
  %8 = bitcast %struct.c_expr* %tmp to i8*, !dbg !6489
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !6489
  call fastcc void @c_parser_postfix_expression_after_paren_type(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_type_name* nonnull %call9, i32 %3) #7, !dbg !6489
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !6489
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !6489
  br label %cleanup, !dbg !6491

if.end16:                                         ; preds = %if.end
  %9 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6492
  %dec17 = add nsw i32 %9, -1, !dbg !6492
  store i32 %dec17, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6492
  %10 = load i32, i32* @in_sizeof, align 4, !dbg !6493
  %dec18 = add nsw i32 %10, -1, !dbg !6493
  store i32 %dec18, i32* @in_sizeof, align 4, !dbg !6493
  tail call void @c_expr_sizeof_type(%struct.c_expr* sret %agg.result, i32 %3, %struct.c_type_name* nonnull %call9) #6, !dbg !6494
  br label %cleanup, !dbg !6495

cleanup:                                          ; preds = %if.then15, %if.end16, %if.then11
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then11 ], [ true, %if.then15 ], [ false, %if.end16 ]
  br i1 %cleanup.dest.slot.0, label %sizeof_expr, label %cleanup36

if.else:                                          ; preds = %land.lhs.true, %cond.end
  %call19 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6496
  %location20 = getelementptr inbounds %struct.c_token, %struct.c_token* %call19, i64 0, i32 2, !dbg !6497
  %11 = load i32, i32* %location20, align 8, !dbg !6497
  call void @llvm.dbg.value(metadata i32 %11, metadata !6448, metadata !DIExpression()), !dbg !6457
  %12 = bitcast %struct.c_expr* %tmp21 to i8*, !dbg !6498
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #8, !dbg !6498
  call fastcc void @c_parser_unary_expression(%struct.c_expr* nonnull sret %tmp21, %struct.c_parser* %parser) #7, !dbg !6498
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %12, i64 24, i1 false), !dbg !6498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #8, !dbg !6498
  br label %sizeof_expr, !dbg !6499

sizeof_expr:                                      ; preds = %cleanup, %if.else
  %expr_loc.0 = phi i32 [ %3, %cleanup ], [ %11, %if.else ], !dbg !6500
  call void @llvm.dbg.value(metadata i32 %expr_loc.0, metadata !6448, metadata !DIExpression()), !dbg !6457
  call void @llvm.dbg.label(metadata !6455), !dbg !6501
  %13 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6502
  %dec22 = add nsw i32 %13, -1, !dbg !6502
  store i32 %dec22, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6502
  %14 = load i32, i32* @in_sizeof, align 4, !dbg !6503
  %dec23 = add nsw i32 %14, -1, !dbg !6503
  store i32 %dec23, i32* @in_sizeof, align 4, !dbg !6503
  %15 = bitcast %struct.c_expr* %expr to i64**, !dbg !6504
  %16 = load i64*, i64** %15, align 8, !dbg !6504
  %bf.load = load i64, i64* %16, align 8, !dbg !6504
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6506
  %cmp25 = icmp eq i64 %bf.cast2, 41, !dbg !6506
  br i1 %cmp25, label %land.lhs.true27, label %if.end35, !dbg !6507

land.lhs.true27:                                  ; preds = %sizeof_expr
  %arrayidx = getelementptr inbounds i64, i64* %16, i64 6, !dbg !6508
  %17 = bitcast i64* %arrayidx to %struct.tree_decl_common**, !dbg !6508
  %18 = load %struct.tree_decl_common*, %struct.tree_decl_common** %17, align 8, !dbg !6508
  %lang_flag_4 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %18, i64 0, i32 2, !dbg !6508
  %19 = bitcast i40* %lang_flag_4 to i64*, !dbg !6508
  %bf.load29 = load i64, i64* %19, align 8, !dbg !6508
  %bf.cast313 = and i64 %bf.load29, 524288, !dbg !6508
  %cmp32 = icmp eq i64 %bf.cast313, 0, !dbg !6508
  br i1 %cmp32, label %if.end35, label %if.then34, !dbg !6509

if.then34:                                        ; preds = %land.lhs.true27
  call void (i32, i8*, ...) @error_at(i32 %expr_loc.0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.34, i64 0, i64 0)) #6, !dbg !6510
  br label %if.end35, !dbg !6510

if.end35:                                         ; preds = %land.lhs.true27, %if.then34, %sizeof_expr
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr, metadata !6447, metadata !DIExpression(DW_OP_deref)), !dbg !6457
  call void @c_expr_sizeof_expr(%struct.c_expr* sret %agg.result, i32 %expr_loc.0, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #6, !dbg !6511
  br label %cleanup36, !dbg !6512

cleanup36:                                        ; preds = %cleanup, %if.end35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6513
  ret void, !dbg !6513
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_alignof_expression(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !6514 {
entry:
  %expr = alloca %struct.c_expr, align 8
  %ret = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp29 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !6516, metadata !DIExpression()), !dbg !6530
  %0 = bitcast %struct.c_expr* %expr to i8*, !dbg !6531
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6531
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6532
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !6533
  %1 = load i32, i32* %location, align 8, !dbg !6533
  call void @llvm.dbg.value(metadata i32 %1, metadata !6518, metadata !DIExpression()), !dbg !6530
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 51) #7, !dbg !6534
  %tobool = icmp eq i8 %call1, 0, !dbg !6534
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6534

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5247, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6534
  br label %cond.end, !dbg !6534

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6535
  %2 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6536
  %inc = add nsw i32 %2, 1, !dbg !6536
  store i32 %inc, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6536
  %3 = load i32, i32* @in_alignof, align 4, !dbg !6537
  %inc2 = add nsw i32 %3, 1, !dbg !6537
  store i32 %inc2, i32* @in_alignof, align 4, !dbg !6537
  %call3 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !6538
  %tobool4 = icmp eq i8 %call3, 0, !dbg !6538
  br i1 %tobool4, label %if.else, label %land.lhs.true, !dbg !6539

land.lhs.true:                                    ; preds = %cond.end
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !6540
  %call6 = tail call fastcc zeroext i8 @c_token_starts_typename(%struct.c_token* %call5) #7, !dbg !6541
  %tobool8 = icmp eq i8 %call6, 0, !dbg !6541
  br i1 %tobool8, label %if.else, label %if.then, !dbg !6542

if.then:                                          ; preds = %land.lhs.true
  %4 = bitcast %struct.c_expr* %ret to i8*, !dbg !6543
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6543
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6544
  %call10 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6545
  %location11 = getelementptr inbounds %struct.c_token, %struct.c_token* %call10, i64 0, i32 2, !dbg !6546
  %5 = load i32, i32* %location11, align 8, !dbg !6546
  call void @llvm.dbg.value(metadata i32 %5, metadata !6519, metadata !DIExpression()), !dbg !6547
  %call12 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !6548
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call12, metadata !6522, metadata !DIExpression()), !dbg !6547
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !6549
  %cmp = icmp eq %struct.c_type_name* %call12, null, !dbg !6550
  br i1 %cmp, label %if.then14, label %if.end, !dbg !6551

if.then14:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !6524, metadata !DIExpression()), !dbg !6552
  %6 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6553
  %dec = add nsw i32 %6, -1, !dbg !6553
  store i32 %dec, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6553
  %7 = load i32, i32* @in_alignof, align 4, !dbg !6554
  %dec15 = add nsw i32 %7, -1, !dbg !6554
  store i32 %dec15, i32* @in_alignof, align 4, !dbg !6554
  %8 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6555
  %9 = bitcast %struct.c_expr* %agg.result to i64*, !dbg !6556
  store i64 %8, i64* %9, align 8, !dbg !6556
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !6557
  store i32 0, i32* %original_code, align 8, !dbg !6558
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !6559
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !6560
  br label %cleanup, !dbg !6561

if.end:                                           ; preds = %if.then
  %call16 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !6562
  %tobool17 = icmp eq i8 %call16, 0, !dbg !6562
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !6564

if.then18:                                        ; preds = %if.end
  %10 = bitcast %struct.c_expr* %tmp to i8*, !dbg !6565
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !6565
  call fastcc void @c_parser_postfix_expression_after_paren_type(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_type_name* nonnull %call12, i32 %5) #7, !dbg !6565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !6565
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !6565
  br label %cleanup, !dbg !6567

if.end19:                                         ; preds = %if.end
  %11 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6568
  %dec20 = add nsw i32 %11, -1, !dbg !6568
  store i32 %dec20, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6568
  %12 = load i32, i32* @in_alignof, align 4, !dbg !6569
  %dec21 = add nsw i32 %12, -1, !dbg !6569
  store i32 %dec21, i32* @in_alignof, align 4, !dbg !6569
  %call22 = tail call %union.tree_node* @groktypename(%struct.c_type_name* nonnull %call12, %union.tree_node** null, i8* null) #6, !dbg !6570
  %call23 = tail call %union.tree_node* @c_sizeof_or_alignof_type(i32 %5, %union.tree_node* %call22, i8 zeroext 0, i32 1) #6, !dbg !6570
  %value24 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 0, !dbg !6571
  store %union.tree_node* %call23, %union.tree_node** %value24, align 8, !dbg !6572
  %original_code25 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 1, !dbg !6573
  store i32 0, i32* %original_code25, align 8, !dbg !6574
  %original_type26 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %ret, i64 0, i32 2, !dbg !6575
  store %union.tree_node* null, %union.tree_node** %original_type26, align 8, !dbg !6576
  %13 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !6577
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* nonnull align 8 %4, i64 24, i1 false), !dbg !6577
  br label %cleanup, !dbg !6578

cleanup:                                          ; preds = %if.then18, %if.end19, %if.then14
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then14 ], [ true, %if.then18 ], [ false, %if.end19 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8, !dbg !6579
  br i1 %cleanup.dest.slot.0, label %alignof_expr, label %cleanup37

if.else:                                          ; preds = %land.lhs.true, %cond.end
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !6527, metadata !DIExpression()), !dbg !6580
  %14 = bitcast %struct.c_expr* %tmp29 to i8*, !dbg !6581
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8, !dbg !6581
  call fastcc void @c_parser_unary_expression(%struct.c_expr* nonnull sret %tmp29, %struct.c_parser* %parser) #7, !dbg !6581
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %14, i64 24, i1 false), !dbg !6581
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8, !dbg !6581
  br label %alignof_expr, !dbg !6582

alignof_expr:                                     ; preds = %cleanup, %if.else
  call void @llvm.dbg.label(metadata !6529), !dbg !6583
  %15 = load i32, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6584
  %dec30 = add nsw i32 %15, -1, !dbg !6584
  store i32 %dec30, i32* @c_inhibit_evaluation_warnings, align 4, !dbg !6584
  %16 = load i32, i32* @in_alignof, align 4, !dbg !6585
  %dec31 = add nsw i32 %16, -1, !dbg !6585
  store i32 %dec31, i32* @in_alignof, align 4, !dbg !6585
  %value32 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !6586
  %17 = load %union.tree_node*, %union.tree_node** %value32, align 8, !dbg !6586
  %call33 = call %union.tree_node* @c_alignof_expr(i32 %1, %union.tree_node* %17) #6, !dbg !6587
  %value34 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 0, !dbg !6588
  store %union.tree_node* %call33, %union.tree_node** %value34, align 8, !dbg !6589
  %original_code35 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 1, !dbg !6590
  store i32 0, i32* %original_code35, align 8, !dbg !6591
  %original_type36 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %agg.result, i64 0, i32 2, !dbg !6592
  store %union.tree_node* null, %union.tree_node** %original_type36, align 8, !dbg !6593
  br label %cleanup37, !dbg !6594

cleanup37:                                        ; preds = %cleanup, %alignof_expr
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6595
  ret void, !dbg !6595
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_postfix_expression(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !6596 {
entry:
  %expr = alloca %struct.c_expr, align 8
  %e1 = alloca %struct.c_expr, align 8
  %e2 = alloca %struct.c_expr, align 8
  %e3 = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp80 = alloca %struct.c_expr, align 8
  %tmp123 = alloca %struct.c_expr, align 8
  %type_expr = alloca %union.tree_node*, align 8
  %tmp217 = alloca %struct.c_expr, align 8
  %tmp235 = alloca %struct.c_expr, align 8
  %tmp241 = alloca %struct.c_expr, align 8
  %tmp247 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !6598, metadata !DIExpression()), !dbg !6648
  %0 = bitcast %struct.c_expr* %expr to i8*, !dbg !6649
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !6649
  %1 = bitcast %struct.c_expr* %e1 to i8*, !dbg !6649
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !6649
  %2 = bitcast %struct.c_expr* %e2 to i8*, !dbg !6649
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !6649
  %3 = bitcast %struct.c_expr* %e3 to i8*, !dbg !6649
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #8, !dbg !6649
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6650
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !6651
  %4 = load i32, i32* %location, align 8, !dbg !6651
  call void @llvm.dbg.value(metadata i32 %4, metadata !6605, metadata !DIExpression()), !dbg !6648
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 1, !dbg !6652
  store i32 0, i32* %original_code, align 8, !dbg !6653
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 2, !dbg !6654
  store %union.tree_node* null, %union.tree_node** %original_type, align 8, !dbg !6655
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6656
  %5 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !6657
  %bf.load = load i32, i32* %5, align 8, !dbg !6657
  %trunc = trunc i32 %bf.load to i8, !dbg !6658
  switch i8 %trunc, label %sw.default404 [
    i8 55, label %sw.bb
    i8 56, label %sw.bb11
    i8 58, label %sw.bb11
    i8 59, label %sw.bb11
    i8 57, label %sw.bb11
    i8 61, label %sw.bb15
    i8 63, label %sw.bb15
    i8 64, label %sw.bb15
    i8 62, label %sw.bb15
    i8 65, label %sw.bb15
    i8 66, label %sw.bb20
    i8 53, label %sw.bb26
    i8 20, label %sw.bb43
    i8 74, label %sw.bb103
    i8 39, label %sw.bb391
  ], !dbg !6658

sw.bb:                                            ; preds = %entry
  %call2 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6659
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call2, i64 0, i32 1, !dbg !6660
  %6 = bitcast %union.tree_node** %value to i64*, !dbg !6660
  %7 = load i64, i64* %6, align 8, !dbg !6660
  %8 = bitcast %struct.c_expr* %expr to i64*, !dbg !6661
  store i64 %7, i64* %8, align 8, !dbg !6661
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6662
  %location5 = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 2, !dbg !6663
  %9 = load i32, i32* %location5, align 8, !dbg !6663
  call void @llvm.dbg.value(metadata i32 %9, metadata !6605, metadata !DIExpression()), !dbg !6648
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6664
  %.cast12 = inttoptr i64 %7 to i64*, !dbg !6665
  %bf.load7 = load i64, i64* %.cast12, align 8, !dbg !6665
  %bf.cast9 = and i64 %bf.load7, 65535, !dbg !6667
  %cmp = icmp eq i64 %bf.cast9, 25, !dbg !6667
  br i1 %cmp, label %land.lhs.true, label %sw.epilog406, !dbg !6668

land.lhs.true:                                    ; preds = %sw.bb
  %10 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 20), align 8, !dbg !6669
  %call9 = tail call zeroext i8 %10() #6, !dbg !6670
  %tobool = icmp eq i8 %call9, 0, !dbg !6670
  br i1 %tobool, label %if.then, label %sw.epilog406, !dbg !6671

if.then:                                          ; preds = %land.lhs.true
  tail call void (i32, i8*, ...) @error_at(i32 %9, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !6672
  %11 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6674
  store i64 %11, i64* %8, align 8, !dbg !6675
  br label %sw.epilog406, !dbg !6676

sw.bb11:                                          ; preds = %entry, %entry, %entry, %entry
  %call12 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6677
  %value13 = getelementptr inbounds %struct.c_token, %struct.c_token* %call12, i64 0, i32 1, !dbg !6678
  %12 = bitcast %union.tree_node** %value13 to i64*, !dbg !6678
  %13 = load i64, i64* %12, align 8, !dbg !6678
  %14 = bitcast %struct.c_expr* %expr to i64*, !dbg !6679
  store i64 %13, i64* %14, align 8, !dbg !6679
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6680
  br label %sw.epilog406, !dbg !6681

sw.bb15:                                          ; preds = %entry, %entry, %entry, %entry, %entry
  %call16 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6682
  %value17 = getelementptr inbounds %struct.c_token, %struct.c_token* %call16, i64 0, i32 1, !dbg !6683
  %15 = bitcast %union.tree_node** %value17 to i64*, !dbg !6683
  %16 = load i64, i64* %15, align 8, !dbg !6683
  %17 = bitcast %struct.c_expr* %expr to i64*, !dbg !6684
  store i64 %16, i64* %17, align 8, !dbg !6684
  store i32 28, i32* %original_code, align 8, !dbg !6685
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6686
  br label %sw.epilog406, !dbg !6687

sw.bb20:                                          ; preds = %entry
  %18 = load i32, i32* @c_language, align 4, !dbg !6688
  %and = and i32 %18, 1, !dbg !6688
  %cmp21 = icmp eq i32 %and, 0, !dbg !6688
  br i1 %cmp21, label %cond.true, label %cond.end, !dbg !6688

cond.true:                                        ; preds = %sw.bb20
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5393, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !6688
  br label %cond.end, !dbg !6688

cond.end:                                         ; preds = %sw.bb20, %cond.true
  %call22 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6689
  %value23 = getelementptr inbounds %struct.c_token, %struct.c_token* %call22, i64 0, i32 1, !dbg !6690
  %19 = load %union.tree_node*, %union.tree_node** %value23, align 8, !dbg !6690
  %call24 = tail call %union.tree_node* @objc_build_string_object(%union.tree_node* %19) #6, !dbg !6691
  %value25 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !6692
  store %union.tree_node* %call24, %union.tree_node** %value25, align 8, !dbg !6693
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6694
  br label %sw.epilog406, !dbg !6695

sw.bb26:                                          ; preds = %entry
  %call27 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6696
  %20 = getelementptr inbounds %struct.c_token, %struct.c_token* %call27, i64 0, i32 0, !dbg !6698
  %bf.load28 = load i32, i32* %20, align 8, !dbg !6698
  %bf.clear29 = and i32 %bf.load28, 65280, !dbg !6698
  %cmp30 = icmp eq i32 %bf.clear29, 0, !dbg !6699
  br i1 %cmp30, label %if.end33, label %if.then31, !dbg !6700

if.then31:                                        ; preds = %sw.bb26
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0)) #7, !dbg !6701
  %21 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6703
  %22 = bitcast %struct.c_expr* %expr to i64*, !dbg !6704
  store i64 %21, i64* %22, align 8, !dbg !6704
  br label %sw.epilog406, !dbg !6705

if.end33:                                         ; preds = %sw.bb26
  %call34 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6706
  %value35 = getelementptr inbounds %struct.c_token, %struct.c_token* %call34, i64 0, i32 1, !dbg !6707
  %23 = load %union.tree_node*, %union.tree_node** %value35, align 8, !dbg !6707
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !6606, metadata !DIExpression()), !dbg !6708
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6709
  %call36 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6710
  %24 = getelementptr inbounds %struct.c_token, %struct.c_token* %call36, i64 0, i32 0, !dbg !6711
  %bf.load37 = load i32, i32* %24, align 8, !dbg !6711
  %bf.clear38 = and i32 %bf.load37, 255, !dbg !6711
  %cmp39 = icmp eq i32 %bf.clear38, 20, !dbg !6712
  %conv = zext i1 %cmp39 to i32, !dbg !6712
  %call41 = call %union.tree_node* @build_external_ref(i32 %4, %union.tree_node* %23, i32 %conv, %union.tree_node** nonnull %original_type) #6, !dbg !6713
  %value42 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !6714
  store %union.tree_node* %call41, %union.tree_node** %value42, align 8, !dbg !6715
  br label %sw.epilog406, !dbg !6716

sw.bb43:                                          ; preds = %entry
  %call44 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !6717
  %25 = getelementptr inbounds %struct.c_token, %struct.c_token* %call44, i64 0, i32 0, !dbg !6718
  %bf.load45 = load i32, i32* %25, align 8, !dbg !6718
  %bf.clear46 = and i32 %bf.load45, 255, !dbg !6718
  %cmp47 = icmp eq i32 %bf.clear46, 41, !dbg !6719
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !6720

if.then49:                                        ; preds = %sw.bb43
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6721
  %call50 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6722
  %location51 = getelementptr inbounds %struct.c_token, %struct.c_token* %call50, i64 0, i32 2, !dbg !6723
  %26 = load i32, i32* %location51, align 8, !dbg !6723
  call void @llvm.dbg.value(metadata i32 %26, metadata !6612, metadata !DIExpression()), !dbg !6724
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6725
  %call52 = tail call %struct.stmt_tree_s* @current_stmt_tree() #6, !dbg !6726
  %x_cur_stmt_list = getelementptr inbounds %struct.stmt_tree_s, %struct.stmt_tree_s* %call52, i64 0, i32 0, !dbg !6726
  %27 = load %union.tree_node*, %union.tree_node** %x_cur_stmt_list, align 8, !dbg !6726
  %cmp53 = icmp eq %union.tree_node* %27, null, !dbg !6728
  br i1 %cmp53, label %if.then55, label %if.end59, !dbg !6729

if.then55:                                        ; preds = %if.then49
  tail call void (i32, i8*, ...) @error_at(i32 %4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.37, i64 0, i64 0)) #6, !dbg !6730
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !6732
  %bf.load56 = load i8, i8* %error, align 2, !dbg !6733
  %bf.set = or i8 %bf.load56, 1, !dbg !6733
  store i8 %bf.set, i8* %error, align 2, !dbg !6733
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 42, i8* null) #7, !dbg !6734
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !6735
  %28 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6736
  %29 = bitcast %struct.c_expr* %expr to i64*, !dbg !6737
  store i64 %28, i64* %29, align 8, !dbg !6737
  br label %sw.epilog406, !dbg !6738

if.end59:                                         ; preds = %if.then49
  %call60 = tail call %union.tree_node* @c_begin_stmt_expr() #6, !dbg !6739
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !6609, metadata !DIExpression()), !dbg !6724
  tail call fastcc void @c_parser_compound_statement_nostart(%struct.c_parser* %parser) #7, !dbg !6740
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !6741
  %call61 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %4, i32 834, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !6742
  %call62 = tail call %union.tree_node* @c_finish_stmt_expr(i32 %26, %union.tree_node* %call60) #6, !dbg !6743
  %value63 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !6744
  store %union.tree_node* %call62, %union.tree_node** %value63, align 8, !dbg !6745
  br label %sw.epilog406, !dbg !6746

if.else:                                          ; preds = %sw.bb43
  %call65 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !6747
  %call66 = tail call fastcc zeroext i8 @c_token_starts_typename(%struct.c_token* %call65) #7, !dbg !6748
  %tobool67 = icmp eq i8 %call66, 0, !dbg !6748
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6749
  br i1 %tobool67, label %if.else79, label %if.then68, !dbg !6750

if.then68:                                        ; preds = %if.else
  %call70 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6751
  %location71 = getelementptr inbounds %struct.c_token, %struct.c_token* %call70, i64 0, i32 2, !dbg !6752
  %30 = load i32, i32* %location71, align 8, !dbg !6752
  call void @llvm.dbg.value(metadata i32 %30, metadata !6613, metadata !DIExpression()), !dbg !6753
  %call72 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !6754
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call72, metadata !6616, metadata !DIExpression()), !dbg !6753
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !6755
  %cmp73 = icmp eq %struct.c_type_name* %call72, null, !dbg !6756
  br i1 %cmp73, label %if.then75, label %if.else77, !dbg !6758

if.then75:                                        ; preds = %if.then68
  %31 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6759
  %32 = bitcast %struct.c_expr* %expr to i64*, !dbg !6761
  store i64 %31, i64* %32, align 8, !dbg !6761
  br label %sw.epilog406, !dbg !6762

if.else77:                                        ; preds = %if.then68
  %33 = bitcast %struct.c_expr* %tmp to i8*, !dbg !6763
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8, !dbg !6763
  call fastcc void @c_parser_postfix_expression_after_paren_type(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_type_name* nonnull %call72, i32 %30) #7, !dbg !6763
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %33, i64 24, i1 false), !dbg !6763
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8, !dbg !6763
  br label %sw.epilog406

if.else79:                                        ; preds = %if.else
  %34 = bitcast %struct.c_expr* %tmp80 to i8*, !dbg !6764
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #8, !dbg !6764
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp80, %struct.c_parser* %parser) #7, !dbg !6764
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %34, i64 24, i1 false), !dbg !6764
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #8, !dbg !6764
  %35 = bitcast %struct.c_expr* %expr to i64**, !dbg !6766
  %36 = load i64*, i64** %35, align 8, !dbg !6766
  %bf.load83 = load i64, i64* %36, align 8, !dbg !6766
  %bf.cast858 = and i64 %bf.load83, 65535, !dbg !6768
  %cmp86 = icmp eq i64 %bf.cast858, 53, !dbg !6768
  br i1 %cmp86, label %if.then88, label %if.end94, !dbg !6769

if.then88:                                        ; preds = %if.else79
  %bf.set93 = or i64 %bf.load83, 8388608, !dbg !6770
  store i64 %bf.set93, i64* %36, align 8, !dbg !6770
  br label %if.end94, !dbg !6771

if.end94:                                         ; preds = %if.then88, %if.else79
  %37 = load i32, i32* %original_code, align 8, !dbg !6772
  %cmp96 = icmp eq i32 %37, 189, !dbg !6774
  br i1 %cmp96, label %if.end100, label %if.then98, !dbg !6775

if.then98:                                        ; preds = %if.end94
  store i32 0, i32* %original_code, align 8, !dbg !6776
  br label %if.end100, !dbg !6777

if.end100:                                        ; preds = %if.end94, %if.then98
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !6778
  br label %sw.epilog406

sw.bb103:                                         ; preds = %entry
  %call104 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6779
  %38 = getelementptr inbounds %struct.c_token, %struct.c_token* %call104, i64 0, i32 0, !dbg !6780
  %bf.load105 = load i32, i32* %38, align 8, !dbg !6780
  %bf.lshr106 = lshr i32 %bf.load105, 16, !dbg !6780
  %trunc2 = trunc i32 %bf.lshr106 to i8, !dbg !6781
  switch i8 %trunc2, label %sw.default [
    i8 66, label %sw.bb108
    i8 67, label %sw.bb108
    i8 68, label %sw.bb108
    i8 53, label %sw.bb117
    i8 82, label %sw.bb157
    i8 58, label %sw.bb227
    i8 59, label %sw.bb289
    i8 -128, label %sw.bb328
    i8 127, label %sw.bb344
    i8 119, label %sw.bb367
  ], !dbg !6781

sw.bb108:                                         ; preds = %sw.bb103, %sw.bb103, %sw.bb103
  %call109 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6782
  %39 = getelementptr inbounds %struct.c_token, %struct.c_token* %call109, i64 0, i32 0, !dbg !6783
  %bf.load110 = load i32, i32* %39, align 8, !dbg !6783
  %bf.lshr111 = lshr i32 %bf.load110, 16, !dbg !6783
  %bf.clear112 = and i32 %bf.lshr111, 255, !dbg !6783
  %call113 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6784
  %value114 = getelementptr inbounds %struct.c_token, %struct.c_token* %call113, i64 0, i32 1, !dbg !6785
  %40 = load %union.tree_node*, %union.tree_node** %value114, align 8, !dbg !6785
  %call115 = tail call %union.tree_node* @fname_decl(i32 %4, i32 %bf.clear112, %union.tree_node* %40) #6, !dbg !6786
  %value116 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !6787
  store %union.tree_node* %call115, %union.tree_node** %value116, align 8, !dbg !6788
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6789
  br label %sw.epilog406, !dbg !6790

sw.bb117:                                         ; preds = %sw.bb103
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6791
  %call118 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !6792
  %tobool119 = icmp eq i8 %call118, 0, !dbg !6792
  br i1 %tobool119, label %if.then120, label %if.end122, !dbg !6794

if.then120:                                       ; preds = %sw.bb117
  %41 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6795
  %42 = bitcast %struct.c_expr* %expr to i64*, !dbg !6797
  store i64 %41, i64* %42, align 8, !dbg !6797
  br label %sw.epilog406, !dbg !6798

if.end122:                                        ; preds = %sw.bb117
  %43 = bitcast %struct.c_expr* %tmp123 to i8*, !dbg !6799
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #8, !dbg !6799
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp123, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6799
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %43, i64 24, i1 false), !dbg !6799
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #8, !dbg !6799
  %value124 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %e1, i64 0, i32 0, !dbg !6800
  %44 = load %union.tree_node*, %union.tree_node** %value124, align 8, !dbg !6800
  %call125 = call %union.tree_node* @c_fully_fold(%union.tree_node* %44, i8 zeroext 0, i8* null) #6, !dbg !6801
  store %union.tree_node* %call125, %union.tree_node** %value124, align 8, !dbg !6802
  %call127 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #7, !dbg !6803
  %tobool128 = icmp eq i8 %call127, 0, !dbg !6803
  br i1 %tobool128, label %if.then129, label %if.end131, !dbg !6805

if.then129:                                       ; preds = %if.end122
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !6806
  %45 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6808
  %46 = bitcast %struct.c_expr* %expr to i64*, !dbg !6809
  store i64 %45, i64* %46, align 8, !dbg !6809
  br label %sw.epilog406, !dbg !6810

if.end131:                                        ; preds = %if.end122
  %call132 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6811
  %location133 = getelementptr inbounds %struct.c_token, %struct.c_token* %call132, i64 0, i32 2, !dbg !6812
  %47 = load i32, i32* %location133, align 8, !dbg !6812
  call void @llvm.dbg.value(metadata i32 %47, metadata !6605, metadata !DIExpression()), !dbg !6648
  %call134 = call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !6813
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call134, metadata !6603, metadata !DIExpression()), !dbg !6648
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !6814
  %cmp135 = icmp eq %struct.c_type_name* %call134, null, !dbg !6815
  br i1 %cmp135, label %if.then137, label %if.else139, !dbg !6816

if.then137:                                       ; preds = %if.end131
  %48 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6817
  %49 = bitcast %struct.c_expr* %expr to i64*, !dbg !6819
  store i64 %48, i64* %49, align 8, !dbg !6819
  br label %sw.epilog406, !dbg !6820

if.else139:                                       ; preds = %if.end131
  %50 = bitcast %union.tree_node** %type_expr to i8*, !dbg !6821
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #8, !dbg !6821
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6617, metadata !DIExpression()), !dbg !6822
  store %union.tree_node* null, %union.tree_node** %type_expr, align 8, !dbg !6823
  call void @llvm.dbg.value(metadata %union.tree_node** %type_expr, metadata !6617, metadata !DIExpression(DW_OP_deref)), !dbg !6822
  %call141 = call %union.tree_node* @groktypename(%struct.c_type_name* nonnull %call134, %union.tree_node** nonnull %type_expr, i8* null) #6, !dbg !6824
  %call142 = call %union.tree_node* @c_build_va_arg(i32 %47, %union.tree_node* %call125, %union.tree_node* %call141) #6, !dbg !6825
  %value143 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !6826
  store %union.tree_node* %call142, %union.tree_node** %value143, align 8, !dbg !6827
  %51 = load %union.tree_node*, %union.tree_node** %type_expr, align 8, !dbg !6828
  call void @llvm.dbg.value(metadata %union.tree_node* %51, metadata !6617, metadata !DIExpression()), !dbg !6822
  %tobool144 = icmp eq %union.tree_node* %51, null, !dbg !6828
  br i1 %tobool144, label %if.end155, label %if.then145, !dbg !6830

if.then145:                                       ; preds = %if.else139
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call142, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6831
  %52 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6831
  call void @llvm.dbg.value(metadata %union.tree_node* %51, metadata !6617, metadata !DIExpression()), !dbg !6822
  %call148 = call %union.tree_node* @build2_stat(i32 189, %union.tree_node* %52, %union.tree_node* nonnull %51, %union.tree_node* %call142) #6, !dbg !6831
  store %union.tree_node* %call148, %union.tree_node** %value143, align 8, !dbg !6833
  %.cast7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call148, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6834
  %bf.load152 = load i64, i64* %.cast7, align 8, !dbg !6835
  %bf.set154 = or i64 %bf.load152, 17179869184, !dbg !6835
  store i64 %bf.set154, i64* %.cast7, align 8, !dbg !6835
  br label %if.end155, !dbg !6836

if.end155:                                        ; preds = %if.else139, %if.then145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #8, !dbg !6837
  br label %sw.epilog406

sw.bb157:                                         ; preds = %sw.bb103
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6838
  %call158 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !6839
  %tobool159 = icmp eq i8 %call158, 0, !dbg !6839
  br i1 %tobool159, label %if.then160, label %if.end162, !dbg !6841

if.then160:                                       ; preds = %sw.bb157
  %53 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6842
  %54 = bitcast %struct.c_expr* %expr to i64*, !dbg !6844
  store i64 %53, i64* %54, align 8, !dbg !6844
  br label %sw.epilog406, !dbg !6845

if.end162:                                        ; preds = %sw.bb157
  %call163 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !6846
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call163, metadata !6603, metadata !DIExpression()), !dbg !6648
  %cmp164 = icmp eq %struct.c_type_name* %call163, null, !dbg !6847
  br i1 %cmp164, label %if.then166, label %if.end168, !dbg !6849

if.then166:                                       ; preds = %if.end162
  %55 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6850
  %56 = bitcast %struct.c_expr* %expr to i64*, !dbg !6852
  store i64 %55, i64* %56, align 8, !dbg !6852
  br label %sw.epilog406, !dbg !6853

if.end168:                                        ; preds = %if.end162
  %call169 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #7, !dbg !6854
  %tobool170 = icmp eq i8 %call169, 0, !dbg !6854
  br i1 %tobool170, label %if.then171, label %if.end173, !dbg !6856

if.then171:                                       ; preds = %if.end168
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !6857
  %57 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6859
  %58 = bitcast %struct.c_expr* %expr to i64*, !dbg !6860
  store i64 %57, i64* %58, align 8, !dbg !6860
  br label %sw.epilog406, !dbg !6861

if.end173:                                        ; preds = %if.end168
  %call175 = tail call %union.tree_node* @groktypename(%struct.c_type_name* nonnull %call163, %union.tree_node** null, i8* null) #6, !dbg !6862
  call void @llvm.dbg.value(metadata %union.tree_node* %call175, metadata !6621, metadata !DIExpression()), !dbg !6863
  %59 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !6864
  %cmp176 = icmp eq %union.tree_node* %call175, %59, !dbg !6866
  br i1 %cmp176, label %if.then178, label %if.else179, !dbg !6867

if.then178:                                       ; preds = %if.end173
  call void @llvm.dbg.value(metadata %union.tree_node* %59, metadata !6623, metadata !DIExpression()), !dbg !6863
  br label %if.end181, !dbg !6868

if.else179:                                       ; preds = %if.end173
  %60 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 16), align 16, !dbg !6869
  %call180 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %call175, %union.tree_node* %60) #6, !dbg !6869
  call void @llvm.dbg.value(metadata %union.tree_node* %call180, metadata !6623, metadata !DIExpression()), !dbg !6863
  %61 = getelementptr inbounds %union.tree_node, %union.tree_node* %call180, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6871
  store i32 %4, i32* %61, align 8, !dbg !6871
  br label %if.end181

if.end181:                                        ; preds = %if.else179, %if.then178
  %offsetof_ref.0 = phi %union.tree_node* [ %call175, %if.then178 ], [ %call180, %if.else179 ], !dbg !6872
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.0, metadata !6623, metadata !DIExpression()), !dbg !6863
  %call182 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !6873
  %tobool183 = icmp eq i8 %call182, 0, !dbg !6873
  br i1 %tobool183, label %if.else223, label %if.then184, !dbg !6874

if.then184:                                       ; preds = %if.end181
  %call185 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6875
  %value186 = getelementptr inbounds %struct.c_token, %struct.c_token* %call185, i64 0, i32 1, !dbg !6876
  %62 = load %union.tree_node*, %union.tree_node** %value186, align 8, !dbg !6876
  %call187 = tail call %union.tree_node* @build_component_ref(i32 %4, %union.tree_node* %offsetof_ref.0, %union.tree_node* %62) #6, !dbg !6877
  call void @llvm.dbg.value(metadata %union.tree_node* %call187, metadata !6623, metadata !DIExpression()), !dbg !6863
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6878
  %value218 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp217, i64 0, i32 0, !dbg !6879
  br label %while.cond, !dbg !6880

while.cond:                                       ; preds = %if.end222, %if.then184
  %loc.0 = phi i32 [ %4, %if.then184 ], [ %loc.2, %if.end222 ], !dbg !6648
  %offsetof_ref.1 = phi %union.tree_node* [ %call187, %if.then184 ], [ %offsetof_ref.3, %if.end222 ], !dbg !6881
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.1, metadata !6623, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %loc.0, metadata !6605, metadata !DIExpression()), !dbg !6648
  %call188 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 48) #7, !dbg !6882
  %tobool190 = icmp eq i8 %call188, 0, !dbg !6882
  br i1 %tobool190, label %lor.lhs.false, label %while.body, !dbg !6883

lor.lhs.false:                                    ; preds = %while.cond
  %call191 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 39) #7, !dbg !6884
  %tobool193 = icmp eq i8 %call191, 0, !dbg !6884
  br i1 %tobool193, label %lor.rhs, label %while.body, !dbg !6885

lor.rhs:                                          ; preds = %lor.lhs.false
  %call194 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 47) #7, !dbg !6886
  %tobool196 = icmp eq i8 %call194, 0, !dbg !6885
  br i1 %tobool196, label %if.end224.loopexit, label %while.body, !dbg !6880

while.body:                                       ; preds = %lor.rhs, %lor.lhs.false, %while.cond
  %call197 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 47) #7, !dbg !6887
  %tobool198 = icmp eq i8 %call197, 0, !dbg !6887
  br i1 %tobool198, label %if.else203, label %if.then199, !dbg !6888

if.then199:                                       ; preds = %while.body
  %call200 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6889
  %location201 = getelementptr inbounds %struct.c_token, %struct.c_token* %call200, i64 0, i32 2, !dbg !6891
  %63 = load i32, i32* %location201, align 8, !dbg !6891
  call void @llvm.dbg.value(metadata i32 %63, metadata !6605, metadata !DIExpression()), !dbg !6648
  %64 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6892
  %call202 = call %union.tree_node* @build_array_ref(i32 %63, %union.tree_node* %offsetof_ref.1, %union.tree_node* %64) #6, !dbg !6893
  call void @llvm.dbg.value(metadata %union.tree_node* %call202, metadata !6623, metadata !DIExpression()), !dbg !6863
  br label %do_dot, !dbg !6894

if.else203:                                       ; preds = %while.body
  %call204 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 48) #7, !dbg !6895
  %tobool205 = icmp eq i8 %call204, 0, !dbg !6895
  br i1 %tobool205, label %if.else214, label %do_dot, !dbg !6896

do_dot:                                           ; preds = %if.else203, %if.then199
  %loc.1 = phi i32 [ %63, %if.then199 ], [ %loc.0, %if.else203 ], !dbg !6648
  %offsetof_ref.2 = phi %union.tree_node* [ %call202, %if.then199 ], [ %offsetof_ref.1, %if.else203 ], !dbg !6881
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.2, metadata !6623, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %loc.1, metadata !6605, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.label(metadata !6646), !dbg !6897
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6898
  %call207 = call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !6899
  %tobool208 = icmp eq i8 %call207, 0, !dbg !6899
  br i1 %tobool208, label %if.end210, label %if.then209, !dbg !6901

if.then209:                                       ; preds = %do_dot
  %loc.1.lcssa = phi i32 [ %loc.1, %do_dot ], !dbg !6648
  %offsetof_ref.2.lcssa = phi %union.tree_node* [ %offsetof_ref.2, %do_dot ], !dbg !6881
  call void @llvm.dbg.value(metadata i32 %loc.1.lcssa, metadata !6605, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.2.lcssa, metadata !6623, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %loc.1.lcssa, metadata !6605, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.2.lcssa, metadata !6623, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %loc.1.lcssa, metadata !6605, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.2.lcssa, metadata !6623, metadata !DIExpression()), !dbg !6863
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !6902
  br label %if.end224, !dbg !6904

if.end210:                                        ; preds = %do_dot
  %call211 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6905
  %value212 = getelementptr inbounds %struct.c_token, %struct.c_token* %call211, i64 0, i32 1, !dbg !6906
  %65 = load %union.tree_node*, %union.tree_node** %value212, align 8, !dbg !6906
  %call213 = call %union.tree_node* @build_component_ref(i32 %loc.1, %union.tree_node* %offsetof_ref.2, %union.tree_node* %65) #6, !dbg !6907
  call void @llvm.dbg.value(metadata %union.tree_node* %call213, metadata !6623, metadata !DIExpression()), !dbg !6863
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6908
  br label %if.end222, !dbg !6909

if.else214:                                       ; preds = %if.else203
  %call215 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6910
  %location216 = getelementptr inbounds %struct.c_token, %struct.c_token* %call215, i64 0, i32 2, !dbg !6911
  %66 = load i32, i32* %location216, align 8, !dbg !6911
  call void @llvm.dbg.value(metadata i32 %66, metadata !6605, metadata !DIExpression()), !dbg !6648
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6912
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp217, %struct.c_parser* %parser) #7, !dbg !6913
  %67 = load %union.tree_node*, %union.tree_node** %value218, align 8, !dbg !6914
  call void @llvm.dbg.value(metadata %union.tree_node* %67, metadata !6624, metadata !DIExpression()), !dbg !6879
  %call219 = call %union.tree_node* @c_fully_fold(%union.tree_node* %67, i8 zeroext 0, i8* null) #6, !dbg !6915
  call void @llvm.dbg.value(metadata %union.tree_node* %call219, metadata !6624, metadata !DIExpression()), !dbg !6879
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !6916
  %call220 = call %union.tree_node* @build_array_ref(i32 %66, %union.tree_node* %offsetof_ref.1, %union.tree_node* %call219) #6, !dbg !6917
  call void @llvm.dbg.value(metadata %union.tree_node* %call220, metadata !6623, metadata !DIExpression()), !dbg !6863
  br label %if.end222

if.end222:                                        ; preds = %if.end210, %if.else214
  %loc.2 = phi i32 [ %loc.1, %if.end210 ], [ %66, %if.else214 ], !dbg !6918
  %offsetof_ref.3 = phi %union.tree_node* [ %call213, %if.end210 ], [ %call220, %if.else214 ], !dbg !6919
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.3, metadata !6623, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %loc.2, metadata !6605, metadata !DIExpression()), !dbg !6648
  br label %while.cond, !dbg !6880, !llvm.loop !6920

if.else223:                                       ; preds = %if.end181
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !6922
  br label %if.end224

if.end224.loopexit:                               ; preds = %lor.rhs
  %loc.0.lcssa = phi i32 [ %loc.0, %lor.rhs ], !dbg !6648
  %offsetof_ref.1.lcssa = phi %union.tree_node* [ %offsetof_ref.1, %lor.rhs ], !dbg !6881
  call void @llvm.dbg.value(metadata i32 %loc.0.lcssa, metadata !6605, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.1.lcssa, metadata !6623, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %loc.0.lcssa, metadata !6605, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.1.lcssa, metadata !6623, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %loc.0.lcssa, metadata !6605, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.1.lcssa, metadata !6623, metadata !DIExpression()), !dbg !6863
  br label %if.end224, !dbg !6923

if.end224:                                        ; preds = %if.end224.loopexit, %if.then209, %if.else223
  %loc.4 = phi i32 [ %4, %if.else223 ], [ %loc.1.lcssa, %if.then209 ], [ %loc.0.lcssa, %if.end224.loopexit ], !dbg !6648
  %offsetof_ref.5 = phi %union.tree_node* [ %offsetof_ref.0, %if.else223 ], [ %offsetof_ref.2.lcssa, %if.then209 ], [ %offsetof_ref.1.lcssa, %if.end224.loopexit ], !dbg !6863
  call void @llvm.dbg.value(metadata %union.tree_node* %offsetof_ref.5, metadata !6623, metadata !DIExpression()), !dbg !6863
  call void @llvm.dbg.value(metadata i32 %loc.4, metadata !6605, metadata !DIExpression()), !dbg !6648
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !6923
  %call225 = call %union.tree_node* @fold_offsetof(%union.tree_node* %offsetof_ref.5, %union.tree_node* null) #6, !dbg !6924
  %value226 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !6925
  store %union.tree_node* %call225, %union.tree_node** %value226, align 8, !dbg !6926
  br label %sw.epilog406, !dbg !6927

sw.bb227:                                         ; preds = %sw.bb103
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6928
  %call228 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !6929
  %tobool229 = icmp eq i8 %call228, 0, !dbg !6929
  br i1 %tobool229, label %if.then230, label %if.end232, !dbg !6931

if.then230:                                       ; preds = %sw.bb227
  %68 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6932
  %69 = bitcast %struct.c_expr* %expr to i64*, !dbg !6934
  store i64 %68, i64* %69, align 8, !dbg !6934
  br label %sw.epilog406, !dbg !6935

if.end232:                                        ; preds = %sw.bb227
  %call233 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !6936
  %location234 = getelementptr inbounds %struct.c_token, %struct.c_token* %call233, i64 0, i32 2, !dbg !6937
  %70 = load i32, i32* %location234, align 8, !dbg !6937
  call void @llvm.dbg.value(metadata i32 %70, metadata !6605, metadata !DIExpression()), !dbg !6648
  %71 = bitcast %struct.c_expr* %tmp235 to i8*, !dbg !6938
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #8, !dbg !6938
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp235, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %71, i64 24, i1 false), !dbg !6938
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #8, !dbg !6938
  %call236 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #7, !dbg !6939
  %tobool237 = icmp eq i8 %call236, 0, !dbg !6939
  br i1 %tobool237, label %if.then238, label %if.end240, !dbg !6941

if.then238:                                       ; preds = %if.end232
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !6942
  %72 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6944
  %73 = bitcast %struct.c_expr* %expr to i64*, !dbg !6945
  store i64 %72, i64* %73, align 8, !dbg !6945
  br label %sw.epilog406, !dbg !6946

if.end240:                                        ; preds = %if.end232
  %74 = bitcast %struct.c_expr* %tmp241 to i8*, !dbg !6947
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %74) #8, !dbg !6947
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp241, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6947
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* nonnull align 8 %74, i64 24, i1 false), !dbg !6947
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %74) #8, !dbg !6947
  %call242 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #7, !dbg !6948
  %tobool243 = icmp eq i8 %call242, 0, !dbg !6948
  br i1 %tobool243, label %if.then244, label %if.end246, !dbg !6950

if.then244:                                       ; preds = %if.end240
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !6951
  %75 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6953
  %76 = bitcast %struct.c_expr* %expr to i64*, !dbg !6954
  store i64 %75, i64* %76, align 8, !dbg !6954
  br label %sw.epilog406, !dbg !6955

if.end246:                                        ; preds = %if.end240
  %77 = bitcast %struct.c_expr* %tmp247 to i8*, !dbg !6956
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %77) #8, !dbg !6956
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp247, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !6956
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* nonnull align 8 %77, i64 24, i1 false), !dbg !6956
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %77) #8, !dbg !6956
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !6957
  %value248 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %e1, i64 0, i32 0, !dbg !6958
  %78 = load %union.tree_node*, %union.tree_node** %value248, align 8, !dbg !6958
  call void @llvm.dbg.value(metadata %union.tree_node* %78, metadata !6631, metadata !DIExpression()), !dbg !6959
  %79 = getelementptr inbounds %union.tree_node, %union.tree_node* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6960
  %bf.load250 = load i64, i64* %79, align 8, !dbg !6960
  %bf.cast2523 = and i64 %bf.load250, 65535, !dbg !6962
  %cmp253 = icmp eq i64 %bf.cast2523, 23, !dbg !6962
  br i1 %cmp253, label %lor.lhs.false255, label %if.then282, !dbg !6963

lor.lhs.false255:                                 ; preds = %if.end246
  %type257 = getelementptr inbounds %union.tree_node, %union.tree_node* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6964
  %80 = bitcast %union.tree_node** %type257 to i64**, !dbg !6964
  %81 = load i64*, i64** %80, align 8, !dbg !6964
  %bf.load259 = load i64, i64* %81, align 8, !dbg !6964
  %bf.cast2614 = and i64 %bf.load259, 65535, !dbg !6964
  %cmp262 = icmp eq i64 %bf.cast2614, 6, !dbg !6964
  br i1 %cmp262, label %if.end283, label %lor.lhs.false264, !dbg !6964

lor.lhs.false264:                                 ; preds = %lor.lhs.false255
  %cmp271 = icmp eq i64 %bf.cast2614, 7, !dbg !6964
  br i1 %cmp271, label %if.end283, label %lor.lhs.false273, !dbg !6964

lor.lhs.false273:                                 ; preds = %lor.lhs.false264
  %cmp280 = icmp eq i64 %bf.cast2614, 8, !dbg !6964
  br i1 %cmp280, label %if.end283, label %if.then282, !dbg !6965

if.then282:                                       ; preds = %if.end246, %lor.lhs.false273
  call void (i32, i8*, ...) @error_at(i32 %70, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !6966
  br label %if.end283, !dbg !6966

if.end283:                                        ; preds = %if.then282, %lor.lhs.false273, %lor.lhs.false264, %lor.lhs.false255
  call void @constant_expression_warning(%union.tree_node* %78) #6, !dbg !6967
  %call284 = call i32 @integer_zerop(%union.tree_node* %78) #6, !dbg !6968
  %tobool285 = icmp eq i32 %call284, 0, !dbg !6968
  br i1 %tobool285, label %cond.false287, label %cond.true286, !dbg !6968

cond.true286:                                     ; preds = %if.end283
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %3, i64 24, i1 false), !dbg !6969
  br label %sw.epilog406, !dbg !6968

cond.false287:                                    ; preds = %if.end283
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !6970
  br label %sw.epilog406, !dbg !6968

sw.bb289:                                         ; preds = %sw.bb103
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !6971
  %call290 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !6972
  %tobool291 = icmp eq i8 %call290, 0, !dbg !6972
  br i1 %tobool291, label %if.then292, label %if.end294, !dbg !6974

if.then292:                                       ; preds = %sw.bb289
  %82 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6975
  %83 = bitcast %struct.c_expr* %expr to i64*, !dbg !6977
  store i64 %82, i64* %83, align 8, !dbg !6977
  br label %sw.epilog406, !dbg !6978

if.end294:                                        ; preds = %sw.bb289
  %call295 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !6979
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call295, metadata !6603, metadata !DIExpression()), !dbg !6648
  %cmp296 = icmp eq %struct.c_type_name* %call295, null, !dbg !6980
  br i1 %cmp296, label %if.then298, label %if.end300, !dbg !6982

if.then298:                                       ; preds = %if.end294
  %84 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6983
  %85 = bitcast %struct.c_expr* %expr to i64*, !dbg !6985
  store i64 %84, i64* %85, align 8, !dbg !6985
  br label %sw.epilog406, !dbg !6986

if.end300:                                        ; preds = %if.end294
  %call301 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.39, i64 0, i64 0)) #7, !dbg !6987
  %tobool302 = icmp eq i8 %call301, 0, !dbg !6987
  br i1 %tobool302, label %if.then303, label %if.end305, !dbg !6989

if.then303:                                       ; preds = %if.end300
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !6990
  %86 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6992
  %87 = bitcast %struct.c_expr* %expr to i64*, !dbg !6993
  store i64 %86, i64* %87, align 8, !dbg !6993
  br label %sw.epilog406, !dbg !6994

if.end305:                                        ; preds = %if.end300
  %call306 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !6995
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call306, metadata !6604, metadata !DIExpression()), !dbg !6648
  %cmp307 = icmp eq %struct.c_type_name* %call306, null, !dbg !6996
  br i1 %cmp307, label %if.then309, label %if.end311, !dbg !6998

if.then309:                                       ; preds = %if.end305
  %88 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !6999
  %89 = bitcast %struct.c_expr* %expr to i64*, !dbg !7001
  store i64 %88, i64* %89, align 8, !dbg !7001
  br label %sw.epilog406, !dbg !7002

if.end311:                                        ; preds = %if.end305
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !7003
  %call314 = tail call %union.tree_node* @groktypename(%struct.c_type_name* nonnull %call295, %union.tree_node** null, i8* null) #6, !dbg !7004
  %90 = getelementptr inbounds %union.tree_node, %union.tree_node* %call314, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7004
  %91 = load %union.tree_node*, %union.tree_node** %90, align 8, !dbg !7004
  call void @llvm.dbg.value(metadata %union.tree_node* %91, metadata !6633, metadata !DIExpression()), !dbg !7005
  %call316 = tail call %union.tree_node* @groktypename(%struct.c_type_name* nonnull %call306, %union.tree_node** null, i8* null) #6, !dbg !7006
  %92 = getelementptr inbounds %union.tree_node, %union.tree_node* %call316, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !7006
  %93 = load %union.tree_node*, %union.tree_node** %92, align 8, !dbg !7006
  call void @llvm.dbg.value(metadata %union.tree_node* %93, metadata !6635, metadata !DIExpression()), !dbg !7005
  %call319 = tail call i32 @comptypes(%union.tree_node* %91, %union.tree_node* %93) #6, !dbg !7007
  %tobool320 = icmp eq i32 %call319, 0, !dbg !7007
  br i1 %tobool320, label %cond.false323, label %cond.true321, !dbg !7007

cond.true321:                                     ; preds = %if.end311
  %call322 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 1) #6, !dbg !7008
  br label %cond.end325, !dbg !7007

cond.false323:                                    ; preds = %if.end311
  %call324 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 0) #6, !dbg !7009
  br label %cond.end325, !dbg !7007

cond.end325:                                      ; preds = %cond.false323, %cond.true321
  %cond326 = phi %union.tree_node* [ %call322, %cond.true321 ], [ %call324, %cond.false323 ], !dbg !7007
  %value327 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !7010
  store %union.tree_node* %cond326, %union.tree_node** %value327, align 8, !dbg !7011
  br label %sw.epilog406, !dbg !7012

sw.bb328:                                         ; preds = %sw.bb103
  %94 = load i32, i32* @c_language, align 4, !dbg !7013
  %and329 = and i32 %94, 1, !dbg !7013
  %cmp330 = icmp eq i32 %and329, 0, !dbg !7013
  br i1 %cmp330, label %cond.true332, label %cond.end334, !dbg !7013

cond.true332:                                     ; preds = %sw.bb328
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5690, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7013
  br label %cond.end334, !dbg !7013

cond.end334:                                      ; preds = %sw.bb328, %cond.true332
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7014
  %call336 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !7015
  %tobool337 = icmp eq i8 %call336, 0, !dbg !7015
  br i1 %tobool337, label %if.then338, label %if.end340, !dbg !7017

if.then338:                                       ; preds = %cond.end334
  %95 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7018
  %96 = bitcast %struct.c_expr* %expr to i64*, !dbg !7020
  store i64 %95, i64* %96, align 8, !dbg !7020
  br label %sw.epilog406, !dbg !7021

if.end340:                                        ; preds = %cond.end334
  %call341 = tail call fastcc %union.tree_node* @c_parser_objc_selector_arg(%struct.c_parser* %parser) #7, !dbg !7022
  call void @llvm.dbg.value(metadata %union.tree_node* %call341, metadata !6636, metadata !DIExpression()), !dbg !7023
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !7024
  %call342 = tail call %union.tree_node* @objc_build_selector_expr(i32 %4, %union.tree_node* %call341) #6, !dbg !7025
  %value343 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !7026
  store %union.tree_node* %call342, %union.tree_node** %value343, align 8, !dbg !7027
  br label %sw.epilog406, !dbg !7028

sw.bb344:                                         ; preds = %sw.bb103
  %97 = load i32, i32* @c_language, align 4, !dbg !7029
  %and345 = and i32 %97, 1, !dbg !7029
  %cmp346 = icmp eq i32 %and345, 0, !dbg !7029
  br i1 %cmp346, label %cond.true348, label %cond.end350, !dbg !7029

cond.true348:                                     ; preds = %sw.bb344
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5705, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7029
  br label %cond.end350, !dbg !7029

cond.end350:                                      ; preds = %sw.bb344, %cond.true348
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7030
  %call352 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !7031
  %tobool353 = icmp eq i8 %call352, 0, !dbg !7031
  br i1 %tobool353, label %if.then354, label %if.end356, !dbg !7033

if.then354:                                       ; preds = %cond.end350
  %98 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7034
  %99 = bitcast %struct.c_expr* %expr to i64*, !dbg !7036
  store i64 %98, i64* %99, align 8, !dbg !7036
  br label %sw.epilog406, !dbg !7037

if.end356:                                        ; preds = %cond.end350
  %call357 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !7038
  %tobool358 = icmp eq i8 %call357, 0, !dbg !7038
  br i1 %tobool358, label %if.end361, label %if.then359, !dbg !7040

if.then359:                                       ; preds = %if.end356
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !7041
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !7043
  %100 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7044
  %101 = bitcast %struct.c_expr* %expr to i64*, !dbg !7045
  store i64 %100, i64* %101, align 8, !dbg !7045
  br label %sw.epilog406, !dbg !7046

if.end361:                                        ; preds = %if.end356
  %call363 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7047
  %value364 = getelementptr inbounds %struct.c_token, %struct.c_token* %call363, i64 0, i32 1, !dbg !7048
  %102 = load %union.tree_node*, %union.tree_node** %value364, align 8, !dbg !7048
  call void @llvm.dbg.value(metadata %union.tree_node* %102, metadata !6638, metadata !DIExpression()), !dbg !7049
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7050
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !7051
  %call365 = tail call %union.tree_node* @objc_build_protocol_expr(%union.tree_node* %102) #6, !dbg !7052
  %value366 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !7053
  store %union.tree_node* %call365, %union.tree_node** %value366, align 8, !dbg !7054
  br label %sw.epilog406, !dbg !7055

sw.bb367:                                         ; preds = %sw.bb103
  %103 = load i32, i32* @c_language, align 4, !dbg !7056
  %and368 = and i32 %103, 1, !dbg !7056
  %cmp369 = icmp eq i32 %and368, 0, !dbg !7056
  br i1 %cmp369, label %cond.true371, label %cond.end373, !dbg !7056

cond.true371:                                     ; preds = %sw.bb367
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 5729, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7056
  br label %cond.end373, !dbg !7056

cond.end373:                                      ; preds = %sw.bb367, %cond.true371
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7057
  %call375 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !7058
  %tobool376 = icmp eq i8 %call375, 0, !dbg !7058
  br i1 %tobool376, label %if.then377, label %if.end379, !dbg !7060

if.then377:                                       ; preds = %cond.end373
  %104 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7061
  %105 = bitcast %struct.c_expr* %expr to i64*, !dbg !7063
  store i64 %104, i64* %105, align 8, !dbg !7063
  br label %sw.epilog406, !dbg !7064

if.end379:                                        ; preds = %cond.end373
  %call380 = tail call fastcc %struct.c_type_name* @c_parser_type_name(%struct.c_parser* %parser) #7, !dbg !7065
  call void @llvm.dbg.value(metadata %struct.c_type_name* %call380, metadata !6603, metadata !DIExpression()), !dbg !6648
  %cmp381 = icmp eq %struct.c_type_name* %call380, null, !dbg !7066
  br i1 %cmp381, label %if.then383, label %if.end385, !dbg !7068

if.then383:                                       ; preds = %if.end379
  %106 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7069
  %107 = bitcast %struct.c_expr* %expr to i64*, !dbg !7071
  store i64 %106, i64* %107, align 8, !dbg !7071
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !7072
  br label %sw.epilog406, !dbg !7073

if.end385:                                        ; preds = %if.end379
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !7074
  %call387 = tail call %union.tree_node* @groktypename(%struct.c_type_name* nonnull %call380, %union.tree_node** null, i8* null) #6, !dbg !7075
  call void @llvm.dbg.value(metadata %union.tree_node* %call387, metadata !6640, metadata !DIExpression()), !dbg !7076
  %call388 = tail call %union.tree_node* @objc_build_encode_expr(%union.tree_node* %call387) #6, !dbg !7077
  %value389 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !7078
  store %union.tree_node* %call388, %union.tree_node** %value389, align 8, !dbg !7079
  br label %sw.epilog406, !dbg !7080

sw.default:                                       ; preds = %sw.bb103
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0)) #7, !dbg !7081
  %108 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7082
  %109 = bitcast %struct.c_expr* %expr to i64*, !dbg !7083
  store i64 %108, i64* %109, align 8, !dbg !7083
  br label %sw.epilog406, !dbg !7084

sw.bb391:                                         ; preds = %entry
  %110 = load i32, i32* @c_language, align 4, !dbg !7085
  %and392 = and i32 %110, 1, !dbg !7085
  %cmp393 = icmp eq i32 %and392, 0, !dbg !7085
  br i1 %cmp393, label %sw.default404, label %if.then395, !dbg !7086

if.then395:                                       ; preds = %sw.bb391
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7087
  %call396 = tail call fastcc %union.tree_node* @c_parser_objc_receiver(%struct.c_parser* %parser) #7, !dbg !7088
  call void @llvm.dbg.value(metadata %union.tree_node* %call396, metadata !6642, metadata !DIExpression()), !dbg !7089
  %call397 = tail call fastcc %union.tree_node* @c_parser_objc_message_args(%struct.c_parser* %parser) #7, !dbg !7090
  call void @llvm.dbg.value(metadata %union.tree_node* %call397, metadata !6645, metadata !DIExpression()), !dbg !7089
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !7091
  %call398 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* %call396, %union.tree_node* %call397) #6, !dbg !7092
  %call399 = tail call %union.tree_node* @objc_build_message_expr(%union.tree_node* %call398) #6, !dbg !7093
  %value400 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !7094
  store %union.tree_node* %call399, %union.tree_node** %value400, align 8, !dbg !7095
  br label %sw.epilog406

sw.default404:                                    ; preds = %sw.bb391, %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.36, i64 0, i64 0)) #7, !dbg !7096
  %111 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !7097
  %112 = bitcast %struct.c_expr* %expr to i64*, !dbg !7098
  store i64 %111, i64* %112, align 8, !dbg !7098
  br label %sw.epilog406, !dbg !7099

sw.epilog406:                                     ; preds = %land.lhs.true, %if.then55, %if.end59, %sw.bb108, %if.then120, %if.then129, %if.then160, %if.then166, %if.then171, %if.end224, %if.then230, %if.then238, %if.then244, %if.then292, %if.then298, %if.then303, %if.then309, %cond.end325, %if.then338, %if.end340, %if.then354, %if.then359, %if.end361, %if.then377, %if.then383, %if.end385, %sw.default, %if.end155, %if.then137, %cond.false287, %cond.true286, %if.then75, %if.else77, %if.end100, %sw.bb, %if.then, %sw.default404, %if.then395, %if.end33, %if.then31, %cond.end, %sw.bb15, %sw.bb11
  %loc.6 = phi i32 [ %4, %sw.default404 ], [ %4, %if.then395 ], [ %4, %if.then31 ], [ %4, %if.end33 ], [ %4, %cond.end ], [ %4, %sw.bb15 ], [ %4, %sw.bb11 ], [ %9, %if.then ], [ %9, %land.lhs.true ], [ %9, %sw.bb ], [ %4, %if.end100 ], [ %4, %if.else77 ], [ %4, %if.then75 ], [ %4, %sw.default ], [ %4, %if.then383 ], [ %4, %if.end385 ], [ %4, %if.then377 ], [ %4, %if.then359 ], [ %4, %if.end361 ], [ %4, %if.then354 ], [ %4, %if.end340 ], [ %4, %if.then338 ], [ %4, %if.then298 ], [ %4, %if.then309 ], [ %4, %cond.end325 ], [ %4, %if.then303 ], [ %4, %if.then292 ], [ %70, %if.then244 ], [ %70, %if.then238 ], [ %4, %if.then230 ], [ %4, %if.then166 ], [ %loc.4, %if.end224 ], [ %4, %if.then171 ], [ %4, %if.then160 ], [ %4, %if.then129 ], [ %4, %if.then120 ], [ %4, %sw.bb108 ], [ %47, %if.end155 ], [ %47, %if.then137 ], [ %70, %cond.false287 ], [ %70, %cond.true286 ], [ %4, %if.end59 ], [ %4, %if.then55 ], !dbg !6648
  call void @llvm.dbg.value(metadata i32 %loc.6, metadata !6605, metadata !DIExpression()), !dbg !6648
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr, metadata !6599, metadata !DIExpression(DW_OP_deref)), !dbg !6648
  call fastcc void @c_parser_postfix_expression_after_primary(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser, i32 %loc.6, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #7, !dbg !7100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #8, !dbg !7101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !7101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !7101
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !7101
  ret void, !dbg !7101
}

declare dso_local void @c_expr_sizeof_type(%struct.c_expr* sret, i32, %struct.c_type_name*) local_unnamed_addr #2

declare dso_local void @c_expr_sizeof_expr(%struct.c_expr* sret, i32, %struct.c_expr* byval(%struct.c_expr) align 8) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_sizeof_or_alignof_type(i32, %union.tree_node*, i8 zeroext, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_alignof_expr(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_build_string_object(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_external_ref(i32, %union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

declare dso_local %struct.stmt_tree_s* @current_stmt_tree() local_unnamed_addr #2

declare dso_local %union.tree_node* @c_begin_stmt_expr() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_compound_statement_nostart(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7102 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7104, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 0, metadata !7105, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 0, metadata !7106, metadata !DIExpression()), !dbg !7128
  %call = tail call zeroext i8 @valid_location_for_stdc_pragma_p() #6, !dbg !7129
  call void @llvm.dbg.value(metadata i8 %call, metadata !7107, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i32 0, metadata !7108, metadata !DIExpression()), !dbg !7128
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !7130
  %tobool = icmp eq i8 %call1, 0, !dbg !7130
  br i1 %tobool, label %if.end, label %if.then, !dbg !7132

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7133
  br label %cleanup.cont151, !dbg !7135

if.end:                                           ; preds = %entry
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext 1) #6, !dbg !7136
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 57) #7, !dbg !7137
  %tobool3 = icmp eq i8 %call2, 0, !dbg !7137
  br i1 %tobool3, label %if.end24, label %if.then4, !dbg !7138

if.then4:                                         ; preds = %if.end
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext 0) #6, !dbg !7139
  br label %while.cond, !dbg !7140

while.cond:                                       ; preds = %while.end, %if.then4
  %label_loc.0 = phi i32 [ 0, %if.then4 ], [ %0, %while.end ], !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.0, metadata !7108, metadata !DIExpression()), !dbg !7128
  %call5 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 57) #7, !dbg !7141
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7140
  br i1 %tobool6, label %while.end22, label %while.body, !dbg !7140

while.body:                                       ; preds = %while.cond
  %call7 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7142
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call7, i64 0, i32 2, !dbg !7143
  %0 = load i32, i32* %location, align 8, !dbg !7143
  call void @llvm.dbg.value(metadata i32 %0, metadata !7108, metadata !DIExpression()), !dbg !7128
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7144
  br label %while.cond8, !dbg !7145

while.cond8:                                      ; preds = %cleanup, %while.body
  %call10 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !7146
  %tobool11 = icmp eq i8 %call10, 0, !dbg !7146
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !7148

if.then12:                                        ; preds = %while.cond8
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !7149
  br label %cleanup, !dbg !7151

if.end13:                                         ; preds = %while.cond8
  %call14 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7152
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call14, i64 0, i32 1, !dbg !7153
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !7153
  %call15 = tail call %union.tree_node* @declare_label(%union.tree_node* %1) #6, !dbg !7154
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !7109, metadata !DIExpression()), !dbg !7155
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7156
  %bf.load = load i64, i64* %2, align 8, !dbg !7157
  %bf.set = or i64 %bf.load, 17179869184, !dbg !7157
  store i64 %bf.set, i64* %2, align 8, !dbg !7157
  %call16 = tail call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %0, i32 132, %union.tree_node* %call15) #6, !dbg !7158
  %call17 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call16) #6, !dbg !7159
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7160
  %call18 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !7161
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7161
  br i1 %tobool19, label %cleanup, label %if.then20, !dbg !7163

if.then20:                                        ; preds = %if.end13
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7164
  br label %cleanup, !dbg !7165

cleanup:                                          ; preds = %if.end13, %if.then20, %if.then12
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then12 ], [ true, %if.then20 ], [ false, %if.end13 ]
  br i1 %cleanup.dest.slot.0, label %while.cond8, label %while.end, !llvm.loop !7166

while.end:                                        ; preds = %cleanup
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !7167
  br label %while.cond, !dbg !7140, !llvm.loop !7168

while.end22:                                      ; preds = %while.cond
  %label_loc.0.lcssa = phi i32 [ %label_loc.0, %while.cond ], !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.0.lcssa, metadata !7108, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.0.lcssa, metadata !7108, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.0.lcssa, metadata !7108, metadata !DIExpression()), !dbg !7128
  %call23 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %label_loc.0.lcssa, i32 834, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !7170
  br label %if.end24, !dbg !7171

if.end24:                                         ; preds = %if.end, %while.end22
  %label_loc.1 = phi i32 [ %label_loc.0.lcssa, %while.end22 ], [ 0, %if.end ], !dbg !7172
  call void @llvm.dbg.value(metadata i32 %label_loc.1, metadata !7108, metadata !DIExpression()), !dbg !7128
  %call25 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !7173
  %tobool26 = icmp eq i8 %call25, 0, !dbg !7173
  br i1 %tobool26, label %while.cond29.preheader, label %if.then27, !dbg !7175

while.cond29.preheader:                           ; preds = %if.end24
  %in_if_block = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !7176
  br label %while.cond29, !dbg !7179

if.then27:                                        ; preds = %if.end24
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext %call) #6, !dbg !7180
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i64 0, i64 0)) #7, !dbg !7182
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7183
  br label %cleanup.cont151, !dbg !7184

while.cond29:                                     ; preds = %while.cond29.backedge, %while.cond29.preheader
  %label_loc.2 = phi i32 [ %label_loc.1, %while.cond29.preheader ], [ %label_loc.5, %while.cond29.backedge ], !dbg !7128
  %last_label.0 = phi i8 [ 0, %while.cond29.preheader ], [ %last_label.6, %while.cond29.backedge ], !dbg !7128
  %last_stmt.0 = phi i8 [ 0, %while.cond29.preheader ], [ %last_stmt.6, %while.cond29.backedge ], !dbg !7128
  call void @llvm.dbg.value(metadata i8 %last_stmt.0, metadata !7105, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 %last_label.0, metadata !7106, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.2, metadata !7108, metadata !DIExpression()), !dbg !7128
  %call30 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 42) #7, !dbg !7185
  %tobool31 = icmp eq i8 %call30, 0, !dbg !7179
  br i1 %tobool31, label %while.end142, label %while.body32, !dbg !7179

while.body32:                                     ; preds = %while.cond29
  %call33 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7186
  %location34 = getelementptr inbounds %struct.c_token, %struct.c_token* %call33, i64 0, i32 2, !dbg !7187
  %3 = load i32, i32* %location34, align 8, !dbg !7187
  call void @llvm.dbg.value(metadata i32 %3, metadata !7114, metadata !DIExpression()), !dbg !7188
  %call35 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 42) #7, !dbg !7189
  %tobool36 = icmp eq i8 %call35, 0, !dbg !7189
  br i1 %tobool36, label %lor.lhs.false, label %if.then48, !dbg !7190

lor.lhs.false:                                    ; preds = %while.body32
  %call37 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 43) #7, !dbg !7191
  %tobool39 = icmp eq i8 %call37, 0, !dbg !7191
  br i1 %tobool39, label %lor.lhs.false40, label %if.then48, !dbg !7192

lor.lhs.false40:                                  ; preds = %lor.lhs.false
  %call41 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !7193
  %tobool43 = icmp eq i8 %call41, 0, !dbg !7193
  br i1 %tobool43, label %if.else58, label %land.lhs.true, !dbg !7194

land.lhs.true:                                    ; preds = %lor.lhs.false40
  %call44 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !7195
  %4 = getelementptr inbounds %struct.c_token, %struct.c_token* %call44, i64 0, i32 0, !dbg !7196
  %bf.load45 = load i32, i32* %4, align 8, !dbg !7196
  %bf.clear46 = and i32 %bf.load45, 255, !dbg !7196
  %cmp = icmp eq i32 %bf.clear46, 18, !dbg !7197
  br i1 %cmp, label %if.then48, label %if.else58, !dbg !7198

if.then48:                                        ; preds = %lor.lhs.false, %while.body32, %land.lhs.true
  %call49 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 42) #7, !dbg !7199
  %tobool50 = icmp eq i8 %call49, 0, !dbg !7199
  br i1 %tobool50, label %if.else54, label %if.then51, !dbg !7202

if.then51:                                        ; preds = %if.then48
  %call52 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !7203
  br label %if.end57, !dbg !7204

if.else54:                                        ; preds = %if.then48
  %call55 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7205
  br label %if.end57

if.end57:                                         ; preds = %if.else54, %if.then51
  %call52.pn = phi %struct.c_token* [ %call52, %if.then51 ], [ %call55, %if.else54 ]
  %label_loc.3.in = getelementptr inbounds %struct.c_token, %struct.c_token* %call52.pn, i64 0, i32 2, !dbg !7206
  %label_loc.3 = load i32, i32* %label_loc.3.in, align 8, !dbg !7206
  call void @llvm.dbg.value(metadata i32 %label_loc.3, metadata !7108, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 1, metadata !7106, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 0, metadata !7105, metadata !DIExpression()), !dbg !7128
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext 0) #6, !dbg !7207
  tail call fastcc void @c_parser_label(%struct.c_parser* %parser) #7, !dbg !7208
  br label %if.end136, !dbg !7209

if.else58:                                        ; preds = %lor.lhs.false40, %land.lhs.true
  %cond2 = icmp eq i8 %last_label.0, 0, !dbg !7210
  br i1 %cond2, label %land.lhs.true60, label %if.else108, !dbg !7210

land.lhs.true60:                                  ; preds = %if.else58
  %call61 = tail call fastcc zeroext i8 @c_parser_next_token_starts_declspecs(%struct.c_parser* %parser) #7, !dbg !7211
  %tobool63 = icmp eq i8 %call61, 0, !dbg !7211
  br i1 %tobool63, label %if.else70, label %if.then64, !dbg !7212

if.then64:                                        ; preds = %land.lhs.true60
  call void @llvm.dbg.value(metadata i8 0, metadata !7106, metadata !DIExpression()), !dbg !7128
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext 0) #6, !dbg !7213
  tail call fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1) #7, !dbg !7215
  %tobool65 = icmp eq i8 %last_stmt.0, 0, !dbg !7216
  br i1 %tobool65, label %if.end136, label %if.then66, !dbg !7218

if.then66:                                        ; preds = %if.then64
  %5 = load i32, i32* @pedantic, align 4, !dbg !7219
  %tobool67 = icmp eq i32 %5, 0, !dbg !7219
  br i1 %tobool67, label %land.end, label %land.rhs, !dbg !7220

land.rhs:                                         ; preds = %if.then66
  %6 = load i32, i32* @flag_isoc99, align 4, !dbg !7221
  %tobool68 = icmp eq i32 %6, 0, !dbg !7222
  br label %land.end

land.end:                                         ; preds = %if.then66, %land.rhs
  %7 = phi i1 [ false, %if.then66 ], [ %tobool68, %land.rhs ], !dbg !7223
  %cond = select i1 %7, i32 834, i32 65, !dbg !7224
  tail call void (i32, i32, i8*, ...) @pedwarn_c90(i32 %3, i32 %cond, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !7225
  br label %if.end136, !dbg !7225

if.else70:                                        ; preds = %land.lhs.true60
  br i1 true, label %land.lhs.true72, label %if.else70.if.else108_crit_edge, !dbg !7226

if.else70.if.else108_crit_edge:                   ; preds = %if.else70
  br label %if.else108, !dbg !7226

land.lhs.true72:                                  ; preds = %if.else70
  %call73 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 54) #7, !dbg !7227
  %tobool75 = icmp eq i8 %call73, 0, !dbg !7227
  br i1 %tobool75, label %if.else108, label %while.cond77.preheader, !dbg !7228

while.cond77.preheader:                           ; preds = %land.lhs.true72
  br label %while.cond77, !dbg !7229

while.cond77:                                     ; preds = %while.cond77.preheader, %while.body90
  %call78 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !7230
  %8 = getelementptr inbounds %struct.c_token, %struct.c_token* %call78, i64 0, i32 0, !dbg !7231
  %bf.load79 = load i32, i32* %8, align 8, !dbg !7231
  %bf.clear80 = and i32 %bf.load79, 255, !dbg !7231
  %cmp81 = icmp eq i32 %bf.clear80, 74, !dbg !7232
  br i1 %cmp81, label %land.rhs83, label %while.end91, !dbg !7233

land.rhs83:                                       ; preds = %while.cond77
  %call84 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !7234
  %9 = getelementptr inbounds %struct.c_token, %struct.c_token* %call84, i64 0, i32 0, !dbg !7235
  %bf.load85 = load i32, i32* %9, align 8, !dbg !7235
  %bf.clear86 = and i32 %bf.load85, 16711680, !dbg !7235
  %cmp87 = icmp eq i32 %bf.clear86, 3538944, !dbg !7236
  br i1 %cmp87, label %while.body90, label %while.end91, !dbg !7229

while.body90:                                     ; preds = %land.rhs83
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7237
  br label %while.cond77, !dbg !7229, !llvm.loop !7238

while.end91:                                      ; preds = %while.cond77, %land.rhs83
  %call92 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !7240
  %call93 = tail call fastcc zeroext i8 @c_token_starts_declspecs(%struct.c_token* %call92) #7, !dbg !7241
  %tobool94 = icmp eq i8 %call93, 0, !dbg !7241
  br i1 %tobool94, label %statement, label %if.then95, !dbg !7242

if.then95:                                        ; preds = %while.end91
  %call96 = tail call fastcc i32 @disable_extension_diagnostics() #7, !dbg !7243
  call void @llvm.dbg.value(metadata i32 %call96, metadata !7116, metadata !DIExpression()), !dbg !7244
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7245
  call void @llvm.dbg.value(metadata i8 0, metadata !7106, metadata !DIExpression()), !dbg !7128
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext 0) #6, !dbg !7246
  tail call fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1) #7, !dbg !7247
  tail call fastcc void @restore_extension_diagnostics(i32 %call96) #7, !dbg !7248
  %tobool97 = icmp eq i8 %last_stmt.0, 0, !dbg !7249
  br i1 %tobool97, label %if.end136, label %if.then98, !dbg !7251

if.then98:                                        ; preds = %if.then95
  %10 = load i32, i32* @pedantic, align 4, !dbg !7252
  %tobool99 = icmp eq i32 %10, 0, !dbg !7252
  br i1 %tobool99, label %land.end103, label %land.rhs100, !dbg !7253

land.rhs100:                                      ; preds = %if.then98
  %11 = load i32, i32* @flag_isoc99, align 4, !dbg !7254
  %tobool101 = icmp eq i32 %11, 0, !dbg !7255
  br label %land.end103

land.end103:                                      ; preds = %if.then98, %land.rhs100
  %12 = phi i1 [ false, %if.then98 ], [ %tobool101, %land.rhs100 ], !dbg !7256
  %cond104 = select i1 %12, i32 834, i32 65, !dbg !7257
  tail call void (i32, i32, i8*, ...) @pedwarn_c90(i32 %3, i32 %cond104, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !7258
  br label %if.end136, !dbg !7258

if.else108:                                       ; preds = %if.else70.if.else108_crit_edge, %land.lhs.true72, %if.else58
  %call109 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 70) #7, !dbg !7259
  %tobool110 = icmp eq i8 %call109, 0, !dbg !7259
  br i1 %tobool110, label %if.else116, label %if.then111, !dbg !7260

if.then111:                                       ; preds = %if.else108
  %call112 = tail call fastcc zeroext i8 @c_parser_pragma(%struct.c_parser* %parser, i32 2) #7, !dbg !7261
  %tobool113 = icmp ne i8 %call112, 0, !dbg !7261
  %spec.select = select i1 %tobool113, i8 0, i8 %last_label.0, !dbg !7264
  %spec.select1 = select i1 %tobool113, i8 1, i8 %last_stmt.0, !dbg !7264
  call void @llvm.dbg.value(metadata i8 %spec.select1, metadata !7105, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !7106, metadata !DIExpression()), !dbg !7128
  br label %if.end136, !dbg !7265

if.else116:                                       ; preds = %if.else108
  %call117 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 22) #7, !dbg !7266
  %tobool118 = icmp eq i8 %call117, 0, !dbg !7266
  br i1 %tobool118, label %if.else120, label %if.then119, !dbg !7267

if.then119:                                       ; preds = %if.else116
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext %call) #6, !dbg !7268
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.42, i64 0, i64 0)) #7, !dbg !7270
  br label %cleanup139, !dbg !7271

if.else120:                                       ; preds = %if.else116
  %call121 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 37) #7, !dbg !7272
  %tobool122 = icmp eq i8 %call121, 0, !dbg !7272
  br i1 %tobool122, label %statement, label %if.then123, !dbg !7273

if.then123:                                       ; preds = %if.else120
  %bf.load124 = load i8, i8* %in_if_block, align 2, !dbg !7274
  %bf.clear126 = and i8 %bf.load124, 4, !dbg !7274
  %tobool127 = icmp eq i8 %bf.clear126, 0, !dbg !7275
  br i1 %tobool127, label %if.else129, label %if.then128, !dbg !7276

if.then128:                                       ; preds = %if.then123
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext %call) #6, !dbg !7277
  tail call void (i32, i8*, ...) @error_at(i32 %3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !7279
  br label %cleanup139, !dbg !7280

if.else129:                                       ; preds = %if.then123
  tail call void (i32, i8*, ...) @error_at(i32 %3, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !7281
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7283
  br label %cleanup139, !dbg !7284, !llvm.loop !7285

statement:                                        ; preds = %while.end91, %if.else120
  call void @llvm.dbg.label(metadata !7123), !dbg !7287
  call void @llvm.dbg.value(metadata i8 0, metadata !7106, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 1, metadata !7105, metadata !DIExpression()), !dbg !7128
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext 0) #6, !dbg !7288
  tail call fastcc void @c_parser_statement_after_labels(%struct.c_parser* %parser) #7, !dbg !7289
  br label %if.end136

if.end136:                                        ; preds = %if.then64, %if.then95, %land.end, %if.then111, %statement, %land.end103, %if.end57
  %label_loc.4 = phi i32 [ %label_loc.3, %if.end57 ], [ %label_loc.2, %if.then95 ], [ %label_loc.2, %land.end103 ], [ %label_loc.2, %statement ], [ %label_loc.2, %if.then111 ], [ %label_loc.2, %if.then64 ], [ %label_loc.2, %land.end ], !dbg !7128
  %last_label.5 = phi i8 [ 1, %if.end57 ], [ 0, %if.then95 ], [ 0, %land.end103 ], [ 0, %statement ], [ %spec.select, %if.then111 ], [ 0, %if.then64 ], [ 0, %land.end ], !dbg !7290
  %last_stmt.5 = phi i8 [ 0, %if.end57 ], [ 0, %if.then95 ], [ 0, %land.end103 ], [ 1, %statement ], [ %spec.select1, %if.then111 ], [ 0, %if.then64 ], [ 0, %land.end ], !dbg !7290
  call void @llvm.dbg.value(metadata i8 %last_stmt.5, metadata !7105, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 %last_label.5, metadata !7106, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.4, metadata !7108, metadata !DIExpression()), !dbg !7128
  %bf.load137 = load i8, i8* %in_if_block, align 2, !dbg !7291
  %bf.clear138 = and i8 %bf.load137, -2, !dbg !7291
  store i8 %bf.clear138, i8* %in_if_block, align 2, !dbg !7291
  br label %cleanup139, !dbg !7286

cleanup139:                                       ; preds = %if.end136, %if.else129, %if.then128, %if.then119
  %label_loc.5 = phi i32 [ %label_loc.4, %if.end136 ], [ %label_loc.2, %if.then119 ], [ %label_loc.2, %if.then128 ], [ %label_loc.2, %if.else129 ], !dbg !7128
  %last_label.6 = phi i8 [ %last_label.5, %if.end136 ], [ %last_label.0, %if.then119 ], [ %last_label.0, %if.then128 ], [ %last_label.0, %if.else129 ], !dbg !7128
  %last_stmt.6 = phi i8 [ %last_stmt.5, %if.end136 ], [ %last_stmt.0, %if.then119 ], [ %last_stmt.0, %if.then128 ], [ %last_stmt.0, %if.else129 ], !dbg !7128
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end136 ], [ 1, %if.then119 ], [ 1, %if.then128 ], [ 6, %if.else129 ]
  call void @llvm.dbg.value(metadata i8 %last_stmt.6, metadata !7105, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 %last_label.6, metadata !7106, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.5, metadata !7108, metadata !DIExpression()), !dbg !7128
  switch i32 %cleanup.dest.slot.1, label %cleanup.cont151.loopexit [
    i32 0, label %while.cond29.backedge
    i32 6, label %while.cond29.backedge
  ]

while.cond29.backedge:                            ; preds = %cleanup139, %cleanup139
  br label %while.cond29, !dbg !7128, !llvm.loop !7285

while.end142:                                     ; preds = %while.cond29
  %label_loc.2.lcssa = phi i32 [ %label_loc.2, %while.cond29 ], !dbg !7128
  %last_label.0.lcssa = phi i8 [ %last_label.0, %while.cond29 ], !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.2.lcssa, metadata !7108, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 %last_label.0.lcssa, metadata !7106, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.2.lcssa, metadata !7108, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 %last_label.0.lcssa, metadata !7106, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i32 %label_loc.2.lcssa, metadata !7108, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.value(metadata i8 %last_label.0.lcssa, metadata !7106, metadata !DIExpression()), !dbg !7128
  %tobool143 = icmp eq i8 %last_label.0.lcssa, 0, !dbg !7292
  br i1 %tobool143, label %if.end145, label %if.then144, !dbg !7294

if.then144:                                       ; preds = %while.end142
  tail call void (i32, i8*, ...) @error_at(i32 %label_loc.2.lcssa, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !7295
  br label %if.end145, !dbg !7295

if.end145:                                        ; preds = %while.end142, %if.then144
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7296
  tail call void @mark_valid_location_for_stdc_pragma(i8 zeroext %call) #6, !dbg !7297
  br label %cleanup.cont151, !dbg !7298

cleanup.cont151.loopexit:                         ; preds = %cleanup139
  br label %cleanup.cont151, !dbg !7298

cleanup.cont151:                                  ; preds = %cleanup.cont151.loopexit, %if.then, %if.then27, %if.end145
  ret void, !dbg !7298
}

declare dso_local %union.tree_node* @c_finish_stmt_expr(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fname_decl(i32, i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_build_va_arg(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_offsetof(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @constant_expression_warning(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @comptypes(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_objc_selector_arg(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7299 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7301, metadata !DIExpression()), !dbg !7304
  %call = tail call fastcc %union.tree_node* @c_parser_objc_selector(%struct.c_parser* %parser) #7, !dbg !7305
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7302, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7303, metadata !DIExpression()), !dbg !7304
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7306
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7308

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 18) #7, !dbg !7309
  %tobool2 = icmp eq i8 %call1, 0, !dbg !7309
  br i1 %tobool2, label %if.end, label %cleanup, !dbg !7310

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %while.cond, !dbg !7311

while.cond:                                       ; preds = %if.end16, %if.end
  %list.0 = phi %union.tree_node* [ null, %if.end ], [ %call8, %if.end16 ], !dbg !7304
  %sel.0 = phi %union.tree_node* [ %call, %if.end ], [ %call9, %if.end16 ], !dbg !7304
  call void @llvm.dbg.value(metadata %union.tree_node* %sel.0, metadata !7302, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !7303, metadata !DIExpression()), !dbg !7304
  %call3 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #7, !dbg !7312
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7312
  br i1 %tobool4, label %cleanup.loopexit, label %if.end6, !dbg !7315

if.end6:                                          ; preds = %while.cond
  %call7 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* %sel.0, %union.tree_node* null) #6, !dbg !7316
  %call8 = tail call %union.tree_node* @chainon(%union.tree_node* %list.0, %union.tree_node* %call7) #6, !dbg !7317
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !7303, metadata !DIExpression()), !dbg !7304
  %call9 = tail call fastcc %union.tree_node* @c_parser_objc_selector(%struct.c_parser* %parser) #7, !dbg !7318
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !7302, metadata !DIExpression()), !dbg !7304
  %tobool10 = icmp eq %union.tree_node* %call9, null, !dbg !7319
  br i1 %tobool10, label %land.lhs.true11, label %if.end16, !dbg !7321

land.lhs.true11:                                  ; preds = %if.end6
  %call12 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 18) #7, !dbg !7322
  %tobool14 = icmp eq i8 %call12, 0, !dbg !7322
  br i1 %tobool14, label %if.end16, label %cleanup.loopexit, !dbg !7323

if.end16:                                         ; preds = %land.lhs.true11, %if.end6
  br label %while.cond, !dbg !7311, !llvm.loop !7324

cleanup.loopexit:                                 ; preds = %while.cond, %land.lhs.true11
  %retval.0.ph = phi %union.tree_node* [ %call8, %land.lhs.true11 ], [ %list.0, %while.cond ]
  br label %cleanup, !dbg !7326

cleanup:                                          ; preds = %cleanup.loopexit, %land.lhs.true
  %retval.0 = phi %union.tree_node* [ %call, %land.lhs.true ], [ %retval.0.ph, %cleanup.loopexit ], !dbg !7304
  ret %union.tree_node* %retval.0, !dbg !7326
}

declare dso_local %union.tree_node* @objc_build_selector_expr(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_build_protocol_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_build_encode_expr(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_objc_receiver(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7327 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7329, metadata !DIExpression()), !dbg !7333
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7334
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !7335
  %bf.load = load i32, i32* %0, align 8, !dbg !7335
  %bf.clear = and i32 %bf.load, 255, !dbg !7335
  %cmp = icmp eq i32 %bf.clear, 53, !dbg !7336
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7337

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7338
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !7339
  %bf.load2 = load i32, i32* %1, align 8, !dbg !7339
  %bf.clear3 = and i32 %bf.load2, 65280, !dbg !7339
  %cmp4 = icmp eq i32 %bf.clear3, 256, !dbg !7340
  br i1 %cmp4, label %if.then, label %lor.lhs.false, !dbg !7341

lor.lhs.false:                                    ; preds = %land.lhs.true
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7342
  %2 = getelementptr inbounds %struct.c_token, %struct.c_token* %call5, i64 0, i32 0, !dbg !7343
  %bf.load6 = load i32, i32* %2, align 8, !dbg !7343
  %bf.clear8 = and i32 %bf.load6, 65280, !dbg !7343
  %cmp9 = icmp eq i32 %bf.clear8, 512, !dbg !7344
  br i1 %cmp9, label %if.then, label %if.end, !dbg !7345

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %call10 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7346
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call10, i64 0, i32 1, !dbg !7347
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !7347
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7330, metadata !DIExpression()), !dbg !7348
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7349
  %call11 = tail call %union.tree_node* @objc_get_class_reference(%union.tree_node* %3) #6, !dbg !7350
  br label %return

if.end:                                           ; preds = %lor.lhs.false, %entry
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !7351
  %value12 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !7352
  %4 = load %union.tree_node*, %union.tree_node** %value12, align 8, !dbg !7352
  %call13 = call %union.tree_node* @c_fully_fold(%union.tree_node* %4, i8 zeroext 0, i8* null) #6, !dbg !7353
  br label %return, !dbg !7354

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node* [ %call11, %if.then ], [ %call13, %if.end ], !dbg !7333
  ret %union.tree_node* %retval.0, !dbg !7355
}

declare dso_local zeroext i8 @valid_location_for_stdc_pragma_p() local_unnamed_addr #2

declare dso_local %union.tree_node* @declare_label(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @add_stmt(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_stmt(i32, i32, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_label(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7356 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  %tmp9 = alloca %struct.c_expr, align 8
  %tlab = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7358, metadata !DIExpression()), !dbg !7371
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7372
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !7373
  %0 = load i32, i32* %location, align 8, !dbg !7373
  call void @llvm.dbg.value(metadata i32 %0, metadata !7359, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7360, metadata !DIExpression()), !dbg !7371
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 42) #7, !dbg !7374
  %tobool = icmp eq i8 %call1, 0, !dbg !7374
  br i1 %tobool, label %if.else18, label %if.then, !dbg !7375

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7376
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !7377
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !7378
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !7378
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7361, metadata !DIExpression()), !dbg !7379
  %call2 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !7380
  %tobool3 = icmp eq i8 %call2, 0, !dbg !7380
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !7382

if.then4:                                         ; preds = %if.then
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7383
  %call5 = call %union.tree_node* @do_case(i32 %0, %union.tree_node* %1, %union.tree_node* null) #6, !dbg !7385
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7360, metadata !DIExpression()), !dbg !7371
  br label %if.end49, !dbg !7386

if.else:                                          ; preds = %if.then
  %call6 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 44) #7, !dbg !7387
  %tobool7 = icmp eq i8 %call6, 0, !dbg !7387
  br i1 %tobool7, label %if.else15, label %if.then8, !dbg !7389

if.then8:                                         ; preds = %if.else
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7390
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp9, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !7392
  %value10 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp9, i64 0, i32 0, !dbg !7393
  %2 = load %union.tree_node*, %union.tree_node** %value10, align 8, !dbg !7393
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7364, metadata !DIExpression()), !dbg !7379
  %call11 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #7, !dbg !7394
  %tobool12 = icmp eq i8 %call11, 0, !dbg !7394
  br i1 %tobool12, label %if.end49, label %if.then13, !dbg !7396

if.then13:                                        ; preds = %if.then8
  %call14 = call %union.tree_node* @do_case(i32 %0, %union.tree_node* %1, %union.tree_node* %2) #6, !dbg !7397
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !7360, metadata !DIExpression()), !dbg !7371
  br label %if.end49, !dbg !7398

if.else15:                                        ; preds = %if.else
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.47, i64 0, i64 0)) #7, !dbg !7399
  br label %if.end49

if.else18:                                        ; preds = %entry
  %call19 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 43) #7, !dbg !7400
  %tobool20 = icmp eq i8 %call19, 0, !dbg !7400
  br i1 %tobool20, label %if.else27, label %if.then21, !dbg !7401

if.then21:                                        ; preds = %if.else18
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7402
  %call22 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #7, !dbg !7404
  %tobool23 = icmp eq i8 %call22, 0, !dbg !7404
  br i1 %tobool23, label %if.end49, label %if.then24, !dbg !7406

if.then24:                                        ; preds = %if.then21
  %call25 = tail call %union.tree_node* @do_case(i32 %0, %union.tree_node* null, %union.tree_node* null) #6, !dbg !7407
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !7360, metadata !DIExpression()), !dbg !7371
  br label %if.end49, !dbg !7408

if.else27:                                        ; preds = %if.else18
  %call28 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7409
  %value29 = getelementptr inbounds %struct.c_token, %struct.c_token* %call28, i64 0, i32 1, !dbg !7410
  %3 = load %union.tree_node*, %union.tree_node** %value29, align 8, !dbg !7410
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7365, metadata !DIExpression()), !dbg !7411
  %4 = bitcast %union.tree_node** %tlab to i8*, !dbg !7412
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7412
  %call30 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7413
  %location31 = getelementptr inbounds %struct.c_token, %struct.c_token* %call30, i64 0, i32 2, !dbg !7414
  %5 = load i32, i32* %location31, align 8, !dbg !7414
  call void @llvm.dbg.value(metadata i32 %5, metadata !7370, metadata !DIExpression()), !dbg !7411
  %call32 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !7415
  %tobool33 = icmp eq i8 %call32, 0, !dbg !7415
  br i1 %tobool33, label %cond.true, label %cond.end, !dbg !7415

cond.true:                                        ; preds = %if.else27
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3640, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7415
  br label %cond.end, !dbg !7415

cond.end:                                         ; preds = %if.else27, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7416
  %call34 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !7417
  %tobool35 = icmp eq i8 %call34, 0, !dbg !7417
  br i1 %tobool35, label %cond.true36, label %cond.end38, !dbg !7417

cond.true36:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3642, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7417
  br label %cond.end38, !dbg !7417

cond.end38:                                       ; preds = %cond.end, %cond.true36
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7418
  %call40 = tail call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !7419
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !7369, metadata !DIExpression()), !dbg !7411
  %call41 = tail call %union.tree_node* @define_label(i32 %5, %union.tree_node* %3) #6, !dbg !7420
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !7368, metadata !DIExpression()), !dbg !7411
  store %union.tree_node* %call41, %union.tree_node** %tlab, align 8, !dbg !7421
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !7368, metadata !DIExpression()), !dbg !7411
  %tobool42 = icmp eq %union.tree_node* %call41, null, !dbg !7422
  br i1 %tobool42, label %if.end47, label %if.then43, !dbg !7424

if.then43:                                        ; preds = %cond.end38
  call void @llvm.dbg.value(metadata %union.tree_node** %tlab, metadata !7368, metadata !DIExpression(DW_OP_deref)), !dbg !7411
  %call44 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %tlab, %union.tree_node* %call40, i32 0) #6, !dbg !7425
  %6 = load %union.tree_node*, %union.tree_node** %tlab, align 8, !dbg !7427
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7368, metadata !DIExpression()), !dbg !7411
  %call45 = call %union.tree_node* (i32, i32, ...) @build_stmt(i32 %0, i32 133, %union.tree_node* %6) #6, !dbg !7428
  %call46 = call %union.tree_node* @add_stmt(%union.tree_node* %call45) #6, !dbg !7429
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !7360, metadata !DIExpression()), !dbg !7371
  br label %if.end47, !dbg !7430

if.end47:                                         ; preds = %cond.end38, %if.then43
  %label.4 = phi %union.tree_node* [ %call46, %if.then43 ], [ null, %cond.end38 ], !dbg !7371
  call void @llvm.dbg.value(metadata %union.tree_node* %label.4, metadata !7360, metadata !DIExpression()), !dbg !7371
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !7431
  br label %if.end49

if.end49:                                         ; preds = %if.then8, %if.then21, %if.end47, %if.then24, %if.then4, %if.then13, %if.else15
  %label.6 = phi %union.tree_node* [ %call5, %if.then4 ], [ null, %if.else15 ], [ %call14, %if.then13 ], [ null, %if.then8 ], [ %label.4, %if.end47 ], [ %call25, %if.then24 ], [ null, %if.then21 ], !dbg !7432
  call void @llvm.dbg.value(metadata %union.tree_node* %label.6, metadata !7360, metadata !DIExpression()), !dbg !7371
  %tobool50 = icmp eq %union.tree_node* %label.6, null, !dbg !7433
  br i1 %tobool50, label %if.end64, label %if.then51, !dbg !7435

if.then51:                                        ; preds = %if.end49
  %call52 = call fastcc zeroext i8 @c_parser_next_token_starts_declspecs(%struct.c_parser* %parser) #7, !dbg !7436
  %tobool53 = icmp eq i8 %call52, 0, !dbg !7436
  br i1 %tobool53, label %if.end64, label %land.lhs.true, !dbg !7439

land.lhs.true:                                    ; preds = %if.then51
  %call54 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !7440
  %tobool56 = icmp eq i8 %call54, 0, !dbg !7440
  br i1 %tobool56, label %if.then60, label %land.lhs.true57, !dbg !7441

land.lhs.true57:                                  ; preds = %land.lhs.true
  %call58 = call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !7442
  %7 = getelementptr inbounds %struct.c_token, %struct.c_token* %call58, i64 0, i32 0, !dbg !7443
  %bf.load = load i32, i32* %7, align 8, !dbg !7443
  %bf.clear = and i32 %bf.load, 255, !dbg !7443
  %cmp = icmp eq i32 %bf.clear, 18, !dbg !7444
  br i1 %cmp, label %if.end64, label %if.then60, !dbg !7445

if.then60:                                        ; preds = %land.lhs.true, %land.lhs.true57
  %call61 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7446
  %location62 = getelementptr inbounds %struct.c_token, %struct.c_token* %call61, i64 0, i32 2, !dbg !7448
  %8 = load i32, i32* %location62, align 8, !dbg !7448
  call void (i32, i8*, ...) @error_at(i32 %8, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.48, i64 0, i64 0)) #6, !dbg !7449
  call fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext 0, i8 zeroext 1, i8 zeroext 0, i8 zeroext 1) #7, !dbg !7450
  br label %if.end64, !dbg !7451

if.end64:                                         ; preds = %if.then51, %if.end49, %land.lhs.true57, %if.then60
  ret void, !dbg !7452
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @c_parser_next_token_starts_declspecs(%struct.c_parser* %parser) unnamed_addr #0 !dbg !7453 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7455, metadata !DIExpression()), !dbg !7457
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7458
  call void @llvm.dbg.value(metadata %struct.c_token* %call, metadata !7456, metadata !DIExpression()), !dbg !7457
  %call1 = tail call fastcc zeroext i8 @c_token_starts_declspecs(%struct.c_token* %call) #7, !dbg !7459
  ret i8 %call1, !dbg !7460
}

declare dso_local void @pedwarn_c90(i32, i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @c_token_starts_declspecs(%struct.c_token* %token) unnamed_addr #5 !dbg !7461 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_token* %token, metadata !7463, metadata !DIExpression()), !dbg !7464
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %token, i64 0, i32 0, !dbg !7465
  %bf.load = load i32, i32* %0, align 8, !dbg !7465
  %trunc = trunc i32 %bf.load to i8, !dbg !7466
  switch i8 %trunc, label %return [
    i8 53, label %sw.bb
    i8 74, label %sw.bb7
    i8 3, label %sw.bb13
  ], !dbg !7466

sw.bb:                                            ; preds = %entry
  %bf.lshr = lshr i32 %bf.load, 8, !dbg !7467
  %trunc2 = trunc i32 %bf.lshr to i8, !dbg !7469
  switch i8 %trunc2, label %sw.default [
    i8 0, label %return
    i8 3, label %sw.bb4
    i8 1, label %sw.bb5
    i8 2, label %sw.bb6
  ], !dbg !7469

sw.bb4:                                           ; preds = %sw.bb
  br label %return, !dbg !7470

sw.bb5:                                           ; preds = %sw.bb
  br label %return, !dbg !7472

sw.bb6:                                           ; preds = %sw.bb
  %1 = load i32, i32* @c_language, align 4, !dbg !7473
  %and = and i32 %1, 1, !dbg !7473
  %cmp = icmp eq i32 %and, 0, !dbg !7473
  br i1 %cmp, label %cond.true, label %return, !dbg !7473

cond.true:                                        ; preds = %sw.bb6
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 445, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7473
  br label %return, !dbg !7473

sw.default:                                       ; preds = %sw.bb
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 448, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7474
  %bf.load8.pre = load i32, i32* %0, align 8, !dbg !7475
  br label %sw.bb7, !dbg !7476

sw.bb7:                                           ; preds = %entry, %sw.default
  %bf.load8 = phi i32 [ %bf.load, %entry ], [ %bf.load8.pre, %sw.default ], !dbg !7475
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !7475
  %trunc1 = trunc i32 %bf.lshr9 to i8, !dbg !7477
  switch i8 %trunc1, label %sw.default12 [
    i8 0, label %return
    i8 4, label %return
    i8 5, label %return
    i8 6, label %return
    i8 8, label %return
    i8 11, label %return
    i8 14, label %return
    i8 1, label %return
    i8 2, label %return
    i8 7, label %return
    i8 10, label %return
    i8 13, label %return
    i8 28, label %return
    i8 29, label %return
    i8 30, label %return
    i8 31, label %return
    i8 32, label %return
    i8 60, label %return
    i8 61, label %return
    i8 62, label %return
    i8 69, label %return
    i8 33, label %return
    i8 34, label %return
    i8 35, label %return
    i8 50, label %return
    i8 3, label %return
    i8 9, label %return
    i8 12, label %return
    i8 52, label %return
    i8 63, label %return
    i8 64, label %return
    i8 15, label %return
  ], !dbg !7477

sw.default12:                                     ; preds = %sw.bb7
  br label %return, !dbg !7478

sw.bb13:                                          ; preds = %entry
  %2 = load i32, i32* @c_language, align 4, !dbg !7480
  %3 = trunc i32 %2 to i8, !dbg !7482
  %4 = and i8 %3, 1, !dbg !7482
  br label %return, !dbg !7482

return:                                           ; preds = %sw.bb6, %entry, %sw.bb13, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %sw.bb7, %cond.true, %sw.bb, %sw.default12, %sw.bb5, %sw.bb4
  %retval.0 = phi i8 [ 0, %sw.default12 ], [ 1, %sw.bb5 ], [ 1, %sw.bb4 ], [ 0, %sw.bb ], [ 1, %sw.bb6 ], [ 1, %cond.true ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ 1, %sw.bb7 ], [ %4, %sw.bb13 ], [ 0, %entry ], !dbg !7482
  ret i8 %retval.0, !dbg !7483
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_statement_after_labels(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7484 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  %expr = alloca %struct.c_expr, align 8
  %tmp54 = alloca %struct.c_expr, align 8
  %tmp80 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7486, metadata !DIExpression()), !dbg !7500
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7501
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !7502
  %0 = load i32, i32* %location, align 8, !dbg !7502
  call void @llvm.dbg.value(metadata i32 %0, metadata !7487, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7488, metadata !DIExpression()), !dbg !7500
  %in_if_block1 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !7503
  %bf.load = load i8, i8* %in_if_block1, align 2, !dbg !7503
  %bf.clear = and i8 %bf.load, 4, !dbg !7503
  call void @llvm.dbg.value(metadata i8 %bf.clear, metadata !7489, metadata !DIExpression()), !dbg !7500
  %bf.clear4 = and i8 %bf.load, -5, !dbg !7504
  store i8 %bf.clear4, i8* %in_if_block1, align 2, !dbg !7504
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7505
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call5, i64 0, i32 0, !dbg !7506
  %bf.load6 = load i32, i32* %1, align 8, !dbg !7506
  %trunc = trunc i32 %bf.load6 to i8, !dbg !7507
  switch i8 %trunc, label %expr_stmt [
    i8 41, label %sw.bb
    i8 74, label %sw.bb10
    i8 43, label %sw.bb75
    i8 21, label %sw.bb76
    i8 40, label %sw.bb76
    i8 70, label %sw.bb77
  ], !dbg !7507

sw.bb:                                            ; preds = %entry
  %call8 = tail call fastcc %union.tree_node* @c_parser_compound_statement(%struct.c_parser* %parser) #7, !dbg !7508
  %call9 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call8) #6, !dbg !7509
  br label %sw.epilog84, !dbg !7510

sw.bb10:                                          ; preds = %entry
  %call11 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7511
  %2 = getelementptr inbounds %struct.c_token, %struct.c_token* %call11, i64 0, i32 0, !dbg !7512
  %bf.load12 = load i32, i32* %2, align 8, !dbg !7512
  %bf.lshr13 = lshr i32 %bf.load12, 16, !dbg !7512
  %trunc1 = trunc i32 %bf.lshr13 to i8, !dbg !7513
  switch i8 %trunc1, label %expr_stmt [
    i8 36, label %sw.bb15
    i8 41, label %sw.bb16
    i8 38, label %sw.bb17
    i8 39, label %sw.bb18
    i8 40, label %sw.bb19
    i8 47, label %sw.bb20
    i8 45, label %sw.bb31
    i8 44, label %sw.bb33
    i8 46, label %sw.bb35
    i8 49, label %sw.bb44
    i8 85, label %sw.bb46
    i8 87, label %sw.bb59
    i8 -123, label %sw.bb67
  ], !dbg !7513

sw.bb15:                                          ; preds = %sw.bb10
  tail call fastcc void @c_parser_if_statement(%struct.c_parser* %parser) #7, !dbg !7514
  br label %sw.epilog84, !dbg !7515

sw.bb16:                                          ; preds = %sw.bb10
  tail call fastcc void @c_parser_switch_statement(%struct.c_parser* %parser) #7, !dbg !7516
  br label %sw.epilog84, !dbg !7517

sw.bb17:                                          ; preds = %sw.bb10
  tail call fastcc void @c_parser_while_statement(%struct.c_parser* %parser) #7, !dbg !7518
  br label %sw.epilog84, !dbg !7519

sw.bb18:                                          ; preds = %sw.bb10
  tail call fastcc void @c_parser_do_statement(%struct.c_parser* %parser) #7, !dbg !7520
  br label %sw.epilog84, !dbg !7521

sw.bb19:                                          ; preds = %sw.bb10
  tail call fastcc void @c_parser_for_statement(%struct.c_parser* %parser) #7, !dbg !7522
  br label %sw.epilog84, !dbg !7523

sw.bb20:                                          ; preds = %sw.bb10
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7524
  %call21 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !7525
  %tobool = icmp eq i8 %call21, 0, !dbg !7525
  br i1 %tobool, label %if.else, label %if.then, !dbg !7527

if.then:                                          ; preds = %sw.bb20
  %call22 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7528
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call22, i64 0, i32 1, !dbg !7530
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !7530
  %call23 = tail call %union.tree_node* @c_finish_goto_label(i32 %0, %union.tree_node* %3) #6, !dbg !7531
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !7488, metadata !DIExpression()), !dbg !7500
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7532
  br label %expect_semicolon, !dbg !7533

if.else:                                          ; preds = %sw.bb20
  %call24 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 6) #7, !dbg !7534
  %tobool25 = icmp eq i8 %call24, 0, !dbg !7534
  br i1 %tobool25, label %if.else29, label %if.then26, !dbg !7536

if.then26:                                        ; preds = %if.else
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7537
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !7539
  %value27 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !7540
  %4 = load %union.tree_node*, %union.tree_node** %value27, align 8, !dbg !7540
  %call28 = call %union.tree_node* @c_finish_goto_ptr(i32 %0, %union.tree_node* %4) #6, !dbg !7541
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !7488, metadata !DIExpression()), !dbg !7500
  br label %expect_semicolon, !dbg !7542

if.else29:                                        ; preds = %if.else
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i64 0, i64 0)) #7, !dbg !7543
  br label %expect_semicolon

sw.bb31:                                          ; preds = %sw.bb10
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7544
  %call32 = tail call %union.tree_node* @c_finish_bc_stmt(i32 %0, %union.tree_node** nonnull @c_cont_label, i8 zeroext 0) #6, !dbg !7545
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !7488, metadata !DIExpression()), !dbg !7500
  br label %expect_semicolon, !dbg !7546

sw.bb33:                                          ; preds = %sw.bb10
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7547
  %call34 = tail call %union.tree_node* @c_finish_bc_stmt(i32 %0, %union.tree_node** nonnull @c_break_label, i8 zeroext 1) #6, !dbg !7548
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !7488, metadata !DIExpression()), !dbg !7500
  br label %expect_semicolon, !dbg !7549

sw.bb35:                                          ; preds = %sw.bb10
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7550
  %call36 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !7551
  %tobool37 = icmp eq i8 %call36, 0, !dbg !7551
  br i1 %tobool37, label %if.else40, label %if.then38, !dbg !7552

if.then38:                                        ; preds = %sw.bb35
  %call39 = tail call %union.tree_node* @c_finish_return(i32 %0, %union.tree_node* null, %union.tree_node* null) #6, !dbg !7553
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !7488, metadata !DIExpression()), !dbg !7500
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7555
  br label %sw.epilog84, !dbg !7556

if.else40:                                        ; preds = %sw.bb35
  %5 = bitcast %struct.c_expr* %expr to i8*, !dbg !7557
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !7557
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr, metadata !7490, metadata !DIExpression(DW_OP_deref)), !dbg !7558
  call fastcc void @c_parser_expression_conv(%struct.c_expr* nonnull sret %expr, %struct.c_parser* %parser) #7, !dbg !7559
  %value41 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !7560
  %6 = load %union.tree_node*, %union.tree_node** %value41, align 8, !dbg !7560
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 2, !dbg !7561
  %7 = load %union.tree_node*, %union.tree_node** %original_type, align 8, !dbg !7561
  %call42 = call %union.tree_node* @c_finish_return(i32 %0, %union.tree_node* %6, %union.tree_node* %7) #6, !dbg !7562
  call void @llvm.dbg.value(metadata %union.tree_node* %call42, metadata !7488, metadata !DIExpression()), !dbg !7500
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !7563
  br label %expect_semicolon

sw.bb44:                                          ; preds = %sw.bb10
  %call45 = tail call fastcc %union.tree_node* @c_parser_asm_statement(%struct.c_parser* %parser) #7, !dbg !7564
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !7488, metadata !DIExpression()), !dbg !7500
  br label %sw.epilog84, !dbg !7565

sw.bb46:                                          ; preds = %sw.bb10
  %8 = load i32, i32* @c_language, align 4, !dbg !7566
  %and = and i32 %8, 1, !dbg !7566
  %cmp = icmp eq i32 %and, 0, !dbg !7566
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7566

cond.true:                                        ; preds = %sw.bb46
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3851, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7566
  br label %cond.end, !dbg !7566

cond.end:                                         ; preds = %sw.bb46, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7567
  %call48 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !7568
  %tobool49 = icmp eq i8 %call48, 0, !dbg !7568
  br i1 %tobool49, label %if.else52, label %if.then50, !dbg !7569

if.then50:                                        ; preds = %cond.end
  %call51 = tail call %union.tree_node* @objc_build_throw_stmt(i32 %0, %union.tree_node* null) #6, !dbg !7570
  call void @llvm.dbg.value(metadata %union.tree_node* %call51, metadata !7488, metadata !DIExpression()), !dbg !7500
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7572
  br label %sw.epilog84, !dbg !7573

if.else52:                                        ; preds = %cond.end
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp54, %struct.c_parser* %parser) #7, !dbg !7574
  %value55 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp54, i64 0, i32 0, !dbg !7575
  %9 = load %union.tree_node*, %union.tree_node** %value55, align 8, !dbg !7575
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !7495, metadata !DIExpression()), !dbg !7576
  %call56 = call %union.tree_node* @c_fully_fold(%union.tree_node* %9, i8 zeroext 0, i8* null) #6, !dbg !7577
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !7495, metadata !DIExpression()), !dbg !7576
  %call57 = call %union.tree_node* @objc_build_throw_stmt(i32 %0, %union.tree_node* %call56) #6, !dbg !7578
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !7488, metadata !DIExpression()), !dbg !7500
  br label %expect_semicolon

sw.bb59:                                          ; preds = %sw.bb10
  %10 = load i32, i32* @c_language, align 4, !dbg !7579
  %and60 = and i32 %10, 1, !dbg !7579
  %cmp61 = icmp eq i32 %and60, 0, !dbg !7579
  br i1 %cmp61, label %cond.true63, label %cond.end65, !dbg !7579

cond.true63:                                      ; preds = %sw.bb59
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3867, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7579
  br label %cond.end65, !dbg !7579

cond.end65:                                       ; preds = %sw.bb59, %cond.true63
  tail call fastcc void @c_parser_objc_try_catch_statement(%struct.c_parser* %parser) #7, !dbg !7580
  br label %sw.epilog84, !dbg !7581

sw.bb67:                                          ; preds = %sw.bb10
  %11 = load i32, i32* @c_language, align 4, !dbg !7582
  %and68 = and i32 %11, 1, !dbg !7582
  %cmp69 = icmp eq i32 %and68, 0, !dbg !7582
  br i1 %cmp69, label %cond.true71, label %cond.end73, !dbg !7582

cond.true71:                                      ; preds = %sw.bb67
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 3871, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7582
  br label %cond.end73, !dbg !7582

cond.end73:                                       ; preds = %sw.bb67, %cond.true71
  tail call fastcc void @c_parser_objc_synchronized_statement(%struct.c_parser* %parser) #7, !dbg !7583
  br label %sw.epilog84, !dbg !7584

sw.bb75:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7585
  br label %sw.epilog84, !dbg !7586

sw.bb76:                                          ; preds = %entry, %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i64 0, i64 0)) #7, !dbg !7587
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7588
  br label %sw.epilog84, !dbg !7589

sw.bb77:                                          ; preds = %entry
  %call78 = tail call fastcc zeroext i8 @c_parser_pragma(%struct.c_parser* %parser, i32 1) #7, !dbg !7590
  br label %sw.epilog84, !dbg !7591

expr_stmt:                                        ; preds = %entry, %sw.bb10
  call void @llvm.dbg.label(metadata !7498), !dbg !7592
  call fastcc void @c_parser_expression_conv(%struct.c_expr* nonnull sret %tmp80, %struct.c_parser* %parser) #7, !dbg !7593
  %value81 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp80, i64 0, i32 0, !dbg !7594
  %12 = load %union.tree_node*, %union.tree_node** %value81, align 8, !dbg !7594
  %call82 = call %union.tree_node* @c_finish_expr_stmt(i32 %0, %union.tree_node* %12) #6, !dbg !7595
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !7488, metadata !DIExpression()), !dbg !7500
  br label %expect_semicolon, !dbg !7596

expect_semicolon:                                 ; preds = %if.then, %if.else29, %if.then26, %if.else40, %if.else52, %expr_stmt, %sw.bb33, %sw.bb31
  %stmt.3 = phi %union.tree_node* [ %call82, %expr_stmt ], [ %call57, %if.else52 ], [ %call42, %if.else40 ], [ %call34, %sw.bb33 ], [ %call32, %sw.bb31 ], [ %call23, %if.then ], [ %call28, %if.then26 ], [ null, %if.else29 ], !dbg !7597
  call void @llvm.dbg.value(metadata %union.tree_node* %stmt.3, metadata !7488, metadata !DIExpression()), !dbg !7500
  call void @llvm.dbg.label(metadata !7499), !dbg !7598
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !7599
  br label %sw.epilog84, !dbg !7600

sw.epilog84:                                      ; preds = %sw.bb15, %sw.bb16, %sw.bb17, %sw.bb18, %sw.bb19, %if.then38, %sw.bb44, %if.then50, %cond.end65, %cond.end73, %expect_semicolon, %sw.bb77, %sw.bb76, %sw.bb75, %sw.bb
  %stmt.4 = phi %union.tree_node* [ %stmt.3, %expect_semicolon ], [ null, %sw.bb77 ], [ null, %sw.bb76 ], [ null, %sw.bb75 ], [ null, %sw.bb ], [ null, %cond.end73 ], [ null, %cond.end65 ], [ %call51, %if.then50 ], [ %call45, %sw.bb44 ], [ %call39, %if.then38 ], [ null, %sw.bb19 ], [ null, %sw.bb18 ], [ null, %sw.bb17 ], [ null, %sw.bb16 ], [ null, %sw.bb15 ], !dbg !7500
  call void @llvm.dbg.value(metadata %union.tree_node* %stmt.4, metadata !7488, metadata !DIExpression()), !dbg !7500
  %tobool85 = icmp eq %union.tree_node* %stmt.4, null, !dbg !7601
  br i1 %tobool85, label %if.end127, label %land.lhs.true, !dbg !7601

land.lhs.true:                                    ; preds = %sw.epilog84
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %stmt.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7601
  %bf.load86 = load i64, i64* %13, align 8, !dbg !7601
  %bf.cast88 = and i64 %bf.load86, 65535, !dbg !7601
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast88, !dbg !7601
  %14 = load i32, i32* %arrayidx, align 4, !dbg !7601
  %cmp89 = icmp ugt i32 %14, 3, !dbg !7601
  br i1 %cmp89, label %land.lhs.true91, label %if.end127, !dbg !7601

land.lhs.true91:                                  ; preds = %land.lhs.true
  %cmp98 = icmp ult i32 %14, 11, !dbg !7601
  br i1 %cmp98, label %land.lhs.true100, label %if.end127, !dbg !7603

land.lhs.true100:                                 ; preds = %land.lhs.true91
  br i1 true, label %land.lhs.true109, label %land.lhs.true100.cond.end120_crit_edge, !dbg !7604

land.lhs.true100.cond.end120_crit_edge:           ; preds = %land.lhs.true100
  br label %cond.end120, !dbg !7604

land.lhs.true109:                                 ; preds = %land.lhs.true100
  br i1 true, label %cond.true118, label %land.lhs.true109.cond.end120_crit_edge, !dbg !7604

land.lhs.true109.cond.end120_crit_edge:           ; preds = %land.lhs.true109
  br label %cond.end120, !dbg !7604

cond.true118:                                     ; preds = %land.lhs.true109
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %stmt.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7604
  %16 = load i32, i32* %15, align 8, !dbg !7604
  %phitmp = icmp eq i32 %16, 0, !dbg !7604
  br label %cond.end120, !dbg !7604

cond.end120:                                      ; preds = %land.lhs.true109.cond.end120_crit_edge, %land.lhs.true100.cond.end120_crit_edge, %cond.true118
  %cond121 = phi i1 [ %phitmp, %cond.true118 ], [ undef, %land.lhs.true109.cond.end120_crit_edge ], [ undef, %land.lhs.true100.cond.end120_crit_edge ]
  br i1 %cond121, label %if.then124, label %if.end127, !dbg !7605

if.then124:                                       ; preds = %cond.end120
  %17 = getelementptr inbounds %union.tree_node, %union.tree_node* %stmt.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7606
  store i32 %0, i32* %17, align 8, !dbg !7606
  br label %if.end127, !dbg !7606

if.end127:                                        ; preds = %sw.epilog84, %if.then124, %cond.end120, %land.lhs.true91, %land.lhs.true
  %bf.load130 = load i8, i8* %in_if_block1, align 2, !dbg !7607
  %bf.clear131 = and i8 %bf.load130, -5, !dbg !7607
  %bf.set = or i8 %bf.clear131, %bf.clear, !dbg !7607
  store i8 %bf.set, i8* %in_if_block1, align 2, !dbg !7607
  ret void, !dbg !7608
}

declare dso_local %union.tree_node* @do_case(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @define_label(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @decl_attributes(%union.tree_node**, %union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_compound_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7609 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7611, metadata !DIExpression()), !dbg !7614
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7615
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !7616
  %0 = load i32, i32* %location, align 8, !dbg !7616
  call void @llvm.dbg.value(metadata i32 %0, metadata !7613, metadata !DIExpression()), !dbg !7614
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 41, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)) #7, !dbg !7617
  %tobool = icmp eq i8 %call1, 0, !dbg !7617
  %call4 = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext 1) #6, !dbg !7614
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7612, metadata !DIExpression()), !dbg !7614
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7612, metadata !DIExpression()), !dbg !7614
  br i1 %tobool, label %if.then, label %if.end, !dbg !7619

if.then:                                          ; preds = %entry
  %call3 = tail call %union.tree_node* @c_end_compound_stmt(i32 %0, %union.tree_node* %call4, i8 zeroext 1) #6, !dbg !7620
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7622
  br label %cleanup, !dbg !7623

if.end:                                           ; preds = %entry
  tail call fastcc void @c_parser_compound_statement_nostart(%struct.c_parser* %parser) #7, !dbg !7624
  %call5 = tail call %union.tree_node* @c_end_compound_stmt(i32 %0, %union.tree_node* %call4, i8 zeroext 1) #6, !dbg !7625
  br label %cleanup, !dbg !7626

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node* [ %call5, %if.end ], [ %1, %if.then ], !dbg !7614
  ret %union.tree_node* %retval.0, !dbg !7627
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_if_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7628 {
entry:
  %first_if = alloca i8, align 1
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7630, metadata !DIExpression()), !dbg !7638
  call void @llvm.dbg.value(metadata i8* %first_if, metadata !7634, metadata !DIExpression(DW_OP_deref)), !dbg !7638
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %first_if) #8, !dbg !7639
  call void @llvm.dbg.value(metadata i8 0, metadata !7634, metadata !DIExpression()), !dbg !7638
  store i8 0, i8* %first_if, align 1, !dbg !7640
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 36) #7, !dbg !7641
  %tobool = icmp eq i8 %call, 0, !dbg !7641
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7641

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4039, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7641
  br label %cond.end, !dbg !7641

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7642
  %0 = load i32, i32* @flag_isoc99, align 4, !dbg !7643
  %conv = trunc i32 %0 to i8, !dbg !7643
  %call2 = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext %conv) #6, !dbg !7644
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7631, metadata !DIExpression()), !dbg !7638
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7645
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 2, !dbg !7646
  %1 = load i32, i32* %location, align 8, !dbg !7646
  call void @llvm.dbg.value(metadata i32 %1, metadata !7632, metadata !DIExpression()), !dbg !7638
  %call4 = tail call fastcc %union.tree_node* @c_parser_paren_condition(%struct.c_parser* %parser) #7, !dbg !7647
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7633, metadata !DIExpression()), !dbg !7638
  %in_if_block5 = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !7648
  %bf.load = load i8, i8* %in_if_block5, align 2, !dbg !7648
  %bf.clear = and i8 %bf.load, 4, !dbg !7648
  call void @llvm.dbg.value(metadata i8 %bf.clear, metadata !7637, metadata !DIExpression()), !dbg !7638
  %bf.set = or i8 %bf.load, 4, !dbg !7649
  store i8 %bf.set, i8* %in_if_block5, align 2, !dbg !7649
  call void @llvm.dbg.value(metadata i8* %first_if, metadata !7634, metadata !DIExpression(DW_OP_deref)), !dbg !7638
  %call10 = call fastcc %union.tree_node* @c_parser_if_body(%struct.c_parser* %parser, i8* nonnull %first_if) #7, !dbg !7650
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !7635, metadata !DIExpression()), !dbg !7638
  %bf.load13 = load i8, i8* %in_if_block5, align 2, !dbg !7651
  %bf.clear14 = and i8 %bf.load13, -5, !dbg !7651
  %bf.set15 = or i8 %bf.clear14, %bf.clear, !dbg !7651
  store i8 %bf.set15, i8* %in_if_block5, align 2, !dbg !7651
  %call16 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 37) #7, !dbg !7652
  %tobool17 = icmp eq i8 %call16, 0, !dbg !7652
  br i1 %tobool17, label %if.end, label %if.then, !dbg !7654

if.then:                                          ; preds = %cond.end
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7655
  %call18 = call fastcc %union.tree_node* @c_parser_else_body(%struct.c_parser* %parser) #7, !dbg !7657
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !7636, metadata !DIExpression()), !dbg !7638
  br label %if.end, !dbg !7658

if.end:                                           ; preds = %cond.end, %if.then
  %second_body.0 = phi %union.tree_node* [ %call18, %if.then ], [ null, %cond.end ], !dbg !7659
  call void @llvm.dbg.value(metadata %union.tree_node* %second_body.0, metadata !7636, metadata !DIExpression()), !dbg !7638
  %2 = load i8, i8* %first_if, align 1, !dbg !7660
  call void @llvm.dbg.value(metadata i8 %2, metadata !7634, metadata !DIExpression()), !dbg !7638
  call void @c_finish_if_stmt(i32 %1, %union.tree_node* %call4, %union.tree_node* %call10, %union.tree_node* %second_body.0, i8 zeroext %2) #6, !dbg !7661
  %3 = load i32, i32* @flag_isoc99, align 4, !dbg !7662
  %conv19 = trunc i32 %3 to i8, !dbg !7662
  %call20 = call %union.tree_node* @c_end_compound_stmt(i32 %1, %union.tree_node* %call2, i8 zeroext %conv19) #6, !dbg !7663
  %call21 = call %union.tree_node* @add_stmt(%union.tree_node* %call20) #6, !dbg !7664
  call void @llvm.dbg.value(metadata i8* %first_if, metadata !7634, metadata !DIExpression(DW_OP_deref)), !dbg !7638
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %first_if) #8, !dbg !7665
  ret void, !dbg !7665
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_switch_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7666 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7668, metadata !DIExpression()), !dbg !7679
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7680
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !7681
  %0 = load i32, i32* %location, align 8, !dbg !7681
  call void @llvm.dbg.value(metadata i32 %0, metadata !7673, metadata !DIExpression()), !dbg !7679
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 41) #7, !dbg !7682
  %tobool = icmp eq i8 %call1, 0, !dbg !7682
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7682

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4071, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7682
  br label %cond.end, !dbg !7682

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7683
  %1 = load i32, i32* @flag_isoc99, align 4, !dbg !7684
  %conv = trunc i32 %1 to i8, !dbg !7684
  %call2 = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext %conv) #6, !dbg !7685
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7669, metadata !DIExpression()), !dbg !7679
  %call3 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !7686
  %tobool4 = icmp eq i8 %call3, 0, !dbg !7686
  br i1 %tobool4, label %if.else, label %if.then, !dbg !7688

if.then:                                          ; preds = %cond.end
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7689
  %location6 = getelementptr inbounds %struct.c_token, %struct.c_token* %call5, i64 0, i32 2, !dbg !7691
  %2 = load i32, i32* %location6, align 8, !dbg !7691
  call void @llvm.dbg.value(metadata i32 %2, metadata !7674, metadata !DIExpression()), !dbg !7679
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !7692
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !7693
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !7693
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7670, metadata !DIExpression()), !dbg !7679
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !7694
  br label %if.end, !dbg !7695

if.else:                                          ; preds = %cond.end
  call void @llvm.dbg.value(metadata i32 0, metadata !7674, metadata !DIExpression()), !dbg !7679
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7696
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !7670, metadata !DIExpression()), !dbg !7679
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %expr.0 = phi %union.tree_node* [ %3, %if.then ], [ %4, %if.else ], !dbg !7698
  %switch_cond_loc.0 = phi i32 [ %2, %if.then ], [ 0, %if.else ], !dbg !7698
  call void @llvm.dbg.value(metadata i32 %switch_cond_loc.0, metadata !7674, metadata !DIExpression()), !dbg !7679
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !7670, metadata !DIExpression()), !dbg !7679
  %call7 = call %union.tree_node* @c_start_case(i32 %0, i32 %switch_cond_loc.0, %union.tree_node* %expr.0) #6, !dbg !7699
  %5 = load i64, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !7700
  store %union.tree_node* null, %union.tree_node** @c_break_label, align 8, !dbg !7701
  %call8 = call fastcc %union.tree_node* @c_parser_c99_block_statement(%struct.c_parser* %parser) #7, !dbg !7702
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !7671, metadata !DIExpression()), !dbg !7679
  call void @c_finish_case(%union.tree_node* %call8) #6, !dbg !7703
  %6 = load %union.tree_node*, %union.tree_node** @c_break_label, align 8, !dbg !7704
  %tobool9 = icmp eq %union.tree_node* %6, null, !dbg !7704
  br i1 %tobool9, label %if.end15, label %if.then10, !dbg !7705

if.then10:                                        ; preds = %if.end
  %call11 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7706
  %location12 = getelementptr inbounds %struct.c_token, %struct.c_token* %call11, i64 0, i32 2, !dbg !7707
  %7 = load i32, i32* %location12, align 8, !dbg !7707
  call void @llvm.dbg.value(metadata i32 %7, metadata !7675, metadata !DIExpression()), !dbg !7708
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7709
  %9 = load %union.tree_node*, %union.tree_node** @c_break_label, align 8, !dbg !7709
  %call13 = call %union.tree_node* @build1_stat(i32 133, %union.tree_node* %8, %union.tree_node* %9) #6, !dbg !7709
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !7678, metadata !DIExpression()), !dbg !7708
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7710
  store i32 %7, i32* %10, align 8, !dbg !7710
  %call14 = call %union.tree_node* @add_stmt(%union.tree_node* %call13) #6, !dbg !7711
  br label %if.end15, !dbg !7712

if.end15:                                         ; preds = %if.end, %if.then10
  store i64 %5, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !7713
  %11 = load i32, i32* @flag_isoc99, align 4, !dbg !7714
  %conv16 = trunc i32 %11 to i8, !dbg !7714
  %call17 = call %union.tree_node* @c_end_compound_stmt(i32 %0, %union.tree_node* %call2, i8 zeroext %conv16) #6, !dbg !7715
  %call18 = call %union.tree_node* @add_stmt(%union.tree_node* %call17) #6, !dbg !7716
  ret void, !dbg !7717
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_while_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7718 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7720, metadata !DIExpression()), !dbg !7727
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 38) #7, !dbg !7728
  %tobool = icmp eq i8 %call, 0, !dbg !7728
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7728

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4112, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7728
  br label %cond.end, !dbg !7728

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7729
  %0 = load i32, i32* @flag_isoc99, align 4, !dbg !7730
  %conv = trunc i32 %0 to i8, !dbg !7730
  %call2 = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext %conv) #6, !dbg !7731
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7721, metadata !DIExpression()), !dbg !7727
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7732
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 2, !dbg !7733
  %1 = load i32, i32* %location, align 8, !dbg !7733
  call void @llvm.dbg.value(metadata i32 %1, metadata !7726, metadata !DIExpression()), !dbg !7727
  %call4 = tail call fastcc %union.tree_node* @c_parser_paren_condition(%struct.c_parser* %parser) #7, !dbg !7734
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7722, metadata !DIExpression()), !dbg !7727
  %2 = load i64, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !7735
  store %union.tree_node* null, %union.tree_node** @c_break_label, align 8, !dbg !7736
  %3 = load i64, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !7737
  store %union.tree_node* null, %union.tree_node** @c_cont_label, align 8, !dbg !7738
  %call5 = tail call fastcc %union.tree_node* @c_parser_c99_block_statement(%struct.c_parser* %parser) #7, !dbg !7739
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7723, metadata !DIExpression()), !dbg !7727
  %4 = load %union.tree_node*, %union.tree_node** @c_break_label, align 8, !dbg !7740
  %5 = load %union.tree_node*, %union.tree_node** @c_cont_label, align 8, !dbg !7741
  tail call void @c_finish_loop(i32 %1, %union.tree_node* %call4, %union.tree_node* null, %union.tree_node* %call5, %union.tree_node* %4, %union.tree_node* %5, i8 zeroext 1) #6, !dbg !7742
  %6 = load i32, i32* @flag_isoc99, align 4, !dbg !7743
  %conv6 = trunc i32 %6 to i8, !dbg !7743
  %call7 = tail call %union.tree_node* @c_end_compound_stmt(i32 %1, %union.tree_node* %call2, i8 zeroext %conv6) #6, !dbg !7744
  %call8 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call7) #6, !dbg !7745
  store i64 %2, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !7746
  store i64 %3, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !7747
  ret void, !dbg !7748
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_do_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7749 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7751, metadata !DIExpression()), !dbg !7760
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 39) #7, !dbg !7761
  %tobool = icmp eq i8 %call, 0, !dbg !7761
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7761

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7761
  br label %cond.end, !dbg !7761

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7762
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !7763
  %tobool3 = icmp eq i8 %call2, 0, !dbg !7763
  br i1 %tobool3, label %if.end, label %if.then, !dbg !7765

if.then:                                          ; preds = %cond.end
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7766
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 2, !dbg !7767
  %0 = load i32, i32* %location, align 8, !dbg !7767
  %call5 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %0, i32 74, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.53, i64 0, i64 0)) #6, !dbg !7768
  br label %if.end, !dbg !7768

if.end:                                           ; preds = %cond.end, %if.then
  %1 = load i32, i32* @flag_isoc99, align 4, !dbg !7769
  %conv = trunc i32 %1 to i8, !dbg !7769
  %call6 = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext %conv) #6, !dbg !7770
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !7752, metadata !DIExpression()), !dbg !7760
  %call7 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7771
  %location8 = getelementptr inbounds %struct.c_token, %struct.c_token* %call7, i64 0, i32 2, !dbg !7772
  %2 = load i32, i32* %location8, align 8, !dbg !7772
  call void @llvm.dbg.value(metadata i32 %2, metadata !7759, metadata !DIExpression()), !dbg !7760
  %3 = load i64, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !7773
  store %union.tree_node* null, %union.tree_node** @c_break_label, align 8, !dbg !7774
  %4 = load i64, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !7775
  store %union.tree_node* null, %union.tree_node** @c_cont_label, align 8, !dbg !7776
  %call9 = tail call fastcc %union.tree_node* @c_parser_c99_block_statement(%struct.c_parser* %parser) #7, !dbg !7777
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !7754, metadata !DIExpression()), !dbg !7760
  %call10 = tail call fastcc zeroext i8 @c_parser_require_keyword(%struct.c_parser* %parser, i32 38, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.54, i64 0, i64 0)) #7, !dbg !7778
  %5 = load %union.tree_node*, %union.tree_node** @c_break_label, align 8, !dbg !7779
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !7757, metadata !DIExpression()), !dbg !7760
  store i64 %3, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !7780
  %6 = load %union.tree_node*, %union.tree_node** @c_cont_label, align 8, !dbg !7781
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7758, metadata !DIExpression()), !dbg !7760
  store i64 %4, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !7782
  %call11 = tail call fastcc %union.tree_node* @c_parser_paren_condition(%struct.c_parser* %parser) #7, !dbg !7783
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !7753, metadata !DIExpression()), !dbg !7760
  %call12 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !7784
  %tobool13 = icmp eq i8 %call12, 0, !dbg !7784
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7786

if.then14:                                        ; preds = %if.end
  tail call fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) #7, !dbg !7787
  br label %if.end15, !dbg !7787

if.end15:                                         ; preds = %if.end, %if.then14
  tail call void @c_finish_loop(i32 %2, %union.tree_node* %call11, %union.tree_node* null, %union.tree_node* %call9, %union.tree_node* %5, %union.tree_node* %6, i8 zeroext 0) #6, !dbg !7788
  %7 = load i32, i32* @flag_isoc99, align 4, !dbg !7789
  %conv16 = trunc i32 %7 to i8, !dbg !7789
  %call17 = tail call %union.tree_node* @c_end_compound_stmt(i32 %2, %union.tree_node* %call6, i8 zeroext %conv16) #6, !dbg !7790
  %call18 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call17) #6, !dbg !7791
  ret void, !dbg !7792
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_for_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7793 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  %tmp50 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7795, metadata !DIExpression()), !dbg !7815
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7816
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !7817
  %0 = load i32, i32* %location, align 8, !dbg !7817
  call void @llvm.dbg.value(metadata i32 %0, metadata !7802, metadata !DIExpression()), !dbg !7815
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7818
  %location2 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !7819
  %1 = load i32, i32* %location2, align 8, !dbg !7819
  call void @llvm.dbg.value(metadata i32 %1, metadata !7803, metadata !DIExpression()), !dbg !7815
  %call3 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 40) #7, !dbg !7820
  %tobool = icmp eq i8 %call3, 0, !dbg !7820
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7820

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4186, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7820
  br label %cond.end, !dbg !7820

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7821
  %2 = load i32, i32* @flag_isoc99, align 4, !dbg !7822
  %conv = trunc i32 %2 to i8, !dbg !7822
  %call5 = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext %conv) #6, !dbg !7823
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7796, metadata !DIExpression()), !dbg !7815
  %call6 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !7824
  %tobool7 = icmp eq i8 %call6, 0, !dbg !7824
  br i1 %tobool7, label %if.else54, label %if.then, !dbg !7825

if.then:                                          ; preds = %cond.end
  %call8 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !7826
  %tobool9 = icmp eq i8 %call8, 0, !dbg !7826
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !7827

if.then10:                                        ; preds = %if.then
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7828
  %call11 = tail call %union.tree_node* @c_finish_expr_stmt(i32 %0, %union.tree_node* null) #6, !dbg !7830
  br label %if.end38, !dbg !7831

if.else:                                          ; preds = %if.then
  %call12 = tail call fastcc zeroext i8 @c_parser_next_token_starts_declspecs(%struct.c_parser* %parser) #7, !dbg !7832
  %tobool13 = icmp eq i8 %call12, 0, !dbg !7832
  br i1 %tobool13, label %if.else16, label %if.then14, !dbg !7833

if.then14:                                        ; preds = %if.else
  tail call fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1) #7, !dbg !7834
  %call15 = tail call %union.tree_node* @check_for_loop_decls(i32 %1) #6, !dbg !7836
  br label %if.end38, !dbg !7837

if.else16:                                        ; preds = %if.else
  %call17 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 54) #7, !dbg !7838
  %tobool18 = icmp eq i8 %call17, 0, !dbg !7838
  br i1 %tobool18, label %init_expr, label %while.cond.preheader, !dbg !7839

while.cond.preheader:                             ; preds = %if.else16
  br label %while.cond, !dbg !7840

while.cond:                                       ; preds = %while.cond.preheader, %while.body
  %call20 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !7841
  %3 = getelementptr inbounds %struct.c_token, %struct.c_token* %call20, i64 0, i32 0, !dbg !7842
  %bf.load = load i32, i32* %3, align 8, !dbg !7842
  %bf.clear = and i32 %bf.load, 255, !dbg !7842
  %cmp = icmp eq i32 %bf.clear, 74, !dbg !7843
  br i1 %cmp, label %land.rhs, label %while.end, !dbg !7844

land.rhs:                                         ; preds = %while.cond
  %call22 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !7845
  %4 = getelementptr inbounds %struct.c_token, %struct.c_token* %call22, i64 0, i32 0, !dbg !7846
  %bf.load23 = load i32, i32* %4, align 8, !dbg !7846
  %bf.clear24 = and i32 %bf.load23, 16711680, !dbg !7846
  %cmp25 = icmp eq i32 %bf.clear24, 3538944, !dbg !7847
  br i1 %cmp25, label %while.body, label %while.end, !dbg !7840

while.body:                                       ; preds = %land.rhs
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7848
  br label %while.cond, !dbg !7840, !llvm.loop !7849

while.end:                                        ; preds = %while.cond, %land.rhs
  %call27 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !7851
  %call28 = tail call fastcc zeroext i8 @c_token_starts_declspecs(%struct.c_token* %call27) #7, !dbg !7852
  %tobool29 = icmp eq i8 %call28, 0, !dbg !7852
  br i1 %tobool29, label %init_expr, label %if.then30, !dbg !7853

if.then30:                                        ; preds = %while.end
  %call31 = tail call fastcc i32 @disable_extension_diagnostics() #7, !dbg !7854
  call void @llvm.dbg.value(metadata i32 %call31, metadata !7804, metadata !DIExpression()), !dbg !7855
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7856
  tail call fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1) #7, !dbg !7857
  tail call fastcc void @restore_extension_diagnostics(i32 %call31) #7, !dbg !7858
  %call32 = tail call %union.tree_node* @check_for_loop_decls(i32 %1) #6, !dbg !7859
  br label %if.end38, !dbg !7860

init_expr:                                        ; preds = %while.end, %if.else16
  call void @llvm.dbg.label(metadata !7813), !dbg !7861
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !7862
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !7863
  %5 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !7863
  %call35 = call %union.tree_node* @c_finish_expr_stmt(i32 %0, %union.tree_node* %5) #6, !dbg !7864
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !7865
  br label %if.end38

if.end38:                                         ; preds = %if.then14, %init_expr, %if.then30, %if.then10
  %call39 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !7866
  %tobool40 = icmp eq i8 %call39, 0, !dbg !7866
  br i1 %tobool40, label %if.else42, label %if.then41, !dbg !7868

if.then41:                                        ; preds = %if.end38
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7869
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7797, metadata !DIExpression()), !dbg !7815
  br label %if.end44, !dbg !7871

if.else42:                                        ; preds = %if.end38
  %call43 = call fastcc %union.tree_node* @c_parser_condition(%struct.c_parser* %parser) #7, !dbg !7872
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !7797, metadata !DIExpression()), !dbg !7815
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !7874
  br label %if.end44

if.end44:                                         ; preds = %if.else42, %if.then41
  %cond.0 = phi %union.tree_node* [ null, %if.then41 ], [ %call43, %if.else42 ], !dbg !7875
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.0, metadata !7797, metadata !DIExpression()), !dbg !7815
  %call45 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !7876
  %tobool46 = icmp eq i8 %call45, 0, !dbg !7876
  br i1 %tobool46, label %if.else49, label %if.then47, !dbg !7878

if.then47:                                        ; preds = %if.end44
  %call48 = call %union.tree_node* @c_process_expr_stmt(i32 %0, %union.tree_node* null) #6, !dbg !7879
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !7798, metadata !DIExpression()), !dbg !7815
  br label %if.end53, !dbg !7880

if.else49:                                        ; preds = %if.end44
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp50, %struct.c_parser* %parser) #7, !dbg !7881
  %value51 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp50, i64 0, i32 0, !dbg !7882
  %6 = load %union.tree_node*, %union.tree_node** %value51, align 8, !dbg !7882
  %call52 = call %union.tree_node* @c_process_expr_stmt(i32 %0, %union.tree_node* %6) #6, !dbg !7883
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !7798, metadata !DIExpression()), !dbg !7815
  br label %if.end53

if.end53:                                         ; preds = %if.else49, %if.then47
  %incr.0 = phi %union.tree_node* [ %call48, %if.then47 ], [ %call52, %if.else49 ], !dbg !7884
  call void @llvm.dbg.value(metadata %union.tree_node* %incr.0, metadata !7798, metadata !DIExpression()), !dbg !7815
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !7885
  br label %if.end55, !dbg !7886

if.else54:                                        ; preds = %cond.end
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !7887
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7797, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !7798, metadata !DIExpression()), !dbg !7815
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.end53
  %cond.1 = phi %union.tree_node* [ %cond.0, %if.end53 ], [ %7, %if.else54 ], !dbg !7889
  %incr.1 = phi %union.tree_node* [ %incr.0, %if.end53 ], [ %7, %if.else54 ], !dbg !7889
  call void @llvm.dbg.value(metadata %union.tree_node* %incr.1, metadata !7798, metadata !DIExpression()), !dbg !7815
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.1, metadata !7797, metadata !DIExpression()), !dbg !7815
  %8 = load i64, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !7890
  store %union.tree_node* null, %union.tree_node** @c_break_label, align 8, !dbg !7891
  %9 = load i64, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !7892
  store %union.tree_node* null, %union.tree_node** @c_cont_label, align 8, !dbg !7893
  %call56 = call fastcc %union.tree_node* @c_parser_c99_block_statement(%struct.c_parser* %parser) #7, !dbg !7894
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !7801, metadata !DIExpression()), !dbg !7815
  %10 = load %union.tree_node*, %union.tree_node** @c_break_label, align 8, !dbg !7895
  %11 = load %union.tree_node*, %union.tree_node** @c_cont_label, align 8, !dbg !7896
  call void @c_finish_loop(i32 %0, %union.tree_node* %cond.1, %union.tree_node* %incr.1, %union.tree_node* %call56, %union.tree_node* %10, %union.tree_node* %11, i8 zeroext 1) #6, !dbg !7897
  %12 = load i32, i32* @flag_isoc99, align 4, !dbg !7898
  %conv57 = trunc i32 %12 to i8, !dbg !7898
  %call58 = call %union.tree_node* @c_end_compound_stmt(i32 %0, %union.tree_node* %call5, i8 zeroext %conv57) #6, !dbg !7899
  %call59 = call %union.tree_node* @add_stmt(%union.tree_node* %call58) #6, !dbg !7900
  store i64 %8, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !7901
  store i64 %9, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !7902
  ret void, !dbg !7903
}

declare dso_local %union.tree_node* @c_finish_goto_label(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_finish_goto_ptr(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_finish_bc_stmt(i32, %union.tree_node**, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_finish_return(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_asm_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !7904 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !7906, metadata !DIExpression()), !dbg !7922
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7923
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !7924
  %0 = load i32, i32* %location, align 8, !dbg !7924
  call void @llvm.dbg.value(metadata i32 %0, metadata !7916, metadata !DIExpression()), !dbg !7922
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 49) #7, !dbg !7925
  %tobool = icmp eq i8 %call1, 0, !dbg !7925
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !7925

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4293, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !7925
  br label %cond.end, !dbg !7925

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7926
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 9) #7, !dbg !7927
  %tobool3 = icmp eq i8 %call2, 0, !dbg !7927
  br i1 %tobool3, label %if.else, label %if.then, !dbg !7929

if.then:                                          ; preds = %cond.end
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7930
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 1, !dbg !7932
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !7932
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7907, metadata !DIExpression()), !dbg !7922
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7933
  br label %if.end17, !dbg !7934

if.else:                                          ; preds = %cond.end
  %call5 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 3) #7, !dbg !7935
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7935
  br i1 %tobool6, label %lor.lhs.false, label %if.then10, !dbg !7937

lor.lhs.false:                                    ; preds = %if.else
  %call7 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 12) #7, !dbg !7938
  %tobool9 = icmp eq i8 %call7, 0, !dbg !7938
  br i1 %tobool9, label %if.end17, label %if.then10, !dbg !7939

if.then10:                                        ; preds = %lor.lhs.false, %if.else
  %call11 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7940
  %location12 = getelementptr inbounds %struct.c_token, %struct.c_token* %call11, i64 0, i32 2, !dbg !7942
  %2 = load i32, i32* %location12, align 8, !dbg !7942
  %call13 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !7943
  %value14 = getelementptr inbounds %struct.c_token, %struct.c_token* %call13, i64 0, i32 1, !dbg !7944
  %3 = load %union.tree_node*, %union.tree_node** %value14, align 8, !dbg !7944
  %call15 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %2, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.55, i64 0, i64 0), %union.tree_node* %3) #6, !dbg !7945
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7907, metadata !DIExpression()), !dbg !7922
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7946
  br label %if.end17, !dbg !7947

if.end17:                                         ; preds = %lor.lhs.false, %if.then10, %if.then
  %quals.1 = phi %union.tree_node* [ %1, %if.then ], [ null, %lor.lhs.false ], [ null, %if.then10 ], !dbg !7948
  call void @llvm.dbg.value(metadata %union.tree_node* %quals.1, metadata !7907, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8 0, metadata !7915, metadata !DIExpression()), !dbg !7922
  %call18 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 47) #7, !dbg !7949
  %tobool19 = icmp eq i8 %call18, 0, !dbg !7949
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !7951

if.then20:                                        ; preds = %if.end17
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !7952
  call void @llvm.dbg.value(metadata i8 1, metadata !7915, metadata !DIExpression()), !dbg !7922
  br label %if.end21, !dbg !7954

if.end21:                                         ; preds = %if.end17, %if.then20
  %is_goto.0 = phi i8 [ 1, %if.then20 ], [ 0, %if.end17 ], !dbg !7922
  call void @llvm.dbg.value(metadata i8 %is_goto.0, metadata !7915, metadata !DIExpression()), !dbg !7922
  %lex_untranslated_string = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !7955
  %bf.load = load i8, i8* %lex_untranslated_string, align 2, !dbg !7956
  %bf.set = or i8 %bf.load, 8, !dbg !7956
  store i8 %bf.set, i8* %lex_untranslated_string, align 2, !dbg !7956
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7913, metadata !DIExpression()), !dbg !7922
  %call22 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !7957
  %tobool23 = icmp eq i8 %call22, 0, !dbg !7957
  br i1 %tobool23, label %error, label %if.end25, !dbg !7959

if.end25:                                         ; preds = %if.end21
  %call26 = tail call fastcc %union.tree_node* @c_parser_asm_string_literal(%struct.c_parser* %parser) #7, !dbg !7960
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !7908, metadata !DIExpression()), !dbg !7922
  %cmp = icmp eq %union.tree_node* %call26, null, !dbg !7961
  br i1 %cmp, label %error_close_paren, label %if.end29, !dbg !7963

if.end29:                                         ; preds = %if.end25
  call void @llvm.dbg.value(metadata i8 1, metadata !7914, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7909, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7910, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7911, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7912, metadata !DIExpression()), !dbg !7922
  %call30 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !7964
  %tobool32 = icmp eq i8 %call30, 0, !dbg !7964
  %tobool33 = icmp ne i8 %is_goto.0, 0, !dbg !7966
  %or.cond = or i1 %tobool32, %tobool33, !dbg !7967
  br i1 %or.cond, label %if.end35, label %done_asm, !dbg !7967

if.end35:                                         ; preds = %if.end29
  %narrow = add nuw nsw i8 %is_goto.0, 3, !dbg !7968
  %add = zext i8 %narrow to i32, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %add, metadata !7918, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i32 0, metadata !7917, metadata !DIExpression()), !dbg !7922
  %tobool40 = icmp eq i8 %is_goto.0, 0, !dbg !7969
  %cond41 = select i1 %tobool40, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0), !dbg !7969
  br i1 %tobool40, label %if.end35.split.us, label %if.end35.if.end35.split_crit_edge, !dbg !7974

if.end35.if.end35.split_crit_edge:                ; preds = %if.end35
  br label %for.cond, !dbg !7974

if.end35.split.us:                                ; preds = %if.end35
  br label %for.cond.us, !dbg !7974

for.cond.us:                                      ; preds = %for.inc.us, %if.end35.split.us
  %simple.0.us = phi i8 [ 1, %if.end35.split.us ], [ 0, %for.inc.us ], !dbg !7922
  %labels.0.us = phi %union.tree_node* [ null, %if.end35.split.us ], [ %labels.2.us, %for.inc.us ], !dbg !7975
  %clobbers.0.us = phi %union.tree_node* [ null, %if.end35.split.us ], [ %clobbers.2.us, %for.inc.us ], !dbg !7976
  %inputs.0.us = phi %union.tree_node* [ null, %if.end35.split.us ], [ %inputs.2.us, %for.inc.us ], !dbg !7977
  %outputs.0.us = phi %union.tree_node* [ null, %if.end35.split.us ], [ %outputs.3.us, %for.inc.us ], !dbg !7978
  %section.0.us = phi i32 [ 0, %if.end35.split.us ], [ %inc.us, %for.inc.us ], !dbg !7979
  call void @llvm.dbg.value(metadata i32 %section.0.us, metadata !7917, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs.0.us, metadata !7909, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs.0.us, metadata !7910, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers.0.us, metadata !7911, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %labels.0.us, metadata !7912, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8 %simple.0.us, metadata !7914, metadata !DIExpression()), !dbg !7922
  %exitcond = icmp eq i32 %section.0.us, %add, !dbg !7980
  br i1 %exitcond, label %done_asm.loopexit.us-lcssa.us, label %for.body.us, !dbg !7981

for.body.us:                                      ; preds = %for.cond.us
  %call42.us = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 18, i8* %cond41) #7, !dbg !7982
  %tobool43.us = icmp eq i8 %call42.us, 0, !dbg !7982
  br i1 %tobool43.us, label %error_close_paren.loopexit.us-lcssa.us, label %if.end45.us, !dbg !7983

if.end45.us:                                      ; preds = %for.body.us
  call void @llvm.dbg.value(metadata i8 0, metadata !7914, metadata !DIExpression()), !dbg !7922
  %call46.us = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !7984
  %tobool47.us = icmp eq i8 %call46.us, 0, !dbg !7984
  br i1 %tobool47.us, label %land.lhs.true48.us, label %lor.lhs.false51.us, !dbg !7986

lor.lhs.false51.us:                               ; preds = %if.end45.us
  %cond.us = icmp eq i32 %section.0.us, 3, !dbg !7987
  br i1 %cond.us, label %sw.bb63.us, label %if.end65.us, !dbg !7987

land.lhs.true48.us:                               ; preds = %if.end45.us
  %call49.us = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !7988
  %tobool50.us = icmp eq i8 %call49.us, 0, !dbg !7988
  %cmp52.us = icmp eq i32 %section.0.us, 3, !dbg !7989
  %or.cond1.us = or i1 %tobool50.us, %cmp52.us, !dbg !7990
  br i1 %or.cond1.us, label %if.then54.us, label %if.end65.us, !dbg !7990

if.then54.us:                                     ; preds = %land.lhs.true48.us
  switch i32 %section.0.us, label %sw.default.us [
    i32 0, label %sw.bb.us
    i32 1, label %sw.bb59.us
    i32 2, label %sw.bb61.us
    i32 3, label %sw.bb63.us
  ], !dbg !7991

sw.bb63.us:                                       ; preds = %if.then54.us, %lor.lhs.false51.us
  %call64.us = tail call fastcc %union.tree_node* @c_parser_asm_goto_operands(%struct.c_parser* %parser) #7, !dbg !7992
  call void @llvm.dbg.value(metadata %union.tree_node* %call64.us, metadata !7912, metadata !DIExpression()), !dbg !7922
  br label %if.end65.us, !dbg !7994

sw.bb61.us:                                       ; preds = %if.then54.us
  %call62.us = tail call fastcc %union.tree_node* @c_parser_asm_clobbers(%struct.c_parser* %parser) #7, !dbg !7995
  call void @llvm.dbg.value(metadata %union.tree_node* %call62.us, metadata !7911, metadata !DIExpression()), !dbg !7922
  br label %if.end65.us, !dbg !7996

sw.bb59.us:                                       ; preds = %if.then54.us
  %call60.us = tail call fastcc %union.tree_node* @c_parser_asm_operands(%struct.c_parser* %parser, i8 zeroext 1) #7, !dbg !7997
  call void @llvm.dbg.value(metadata %union.tree_node* %call60.us, metadata !7910, metadata !DIExpression()), !dbg !7922
  br label %if.end65.us, !dbg !7998

sw.bb.us:                                         ; preds = %if.then54.us
  %call57.us = tail call fastcc %union.tree_node* @c_parser_asm_operands(%struct.c_parser* %parser, i8 zeroext 0) #7, !dbg !7999
  call void @llvm.dbg.value(metadata %union.tree_node* %call57.us, metadata !7909, metadata !DIExpression()), !dbg !7922
  br label %if.end65.us, !dbg !8001

sw.default.us:                                    ; preds = %if.then54.us
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4375, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8002
  br label %if.end65.us, !dbg !8003

if.end65.us:                                      ; preds = %sw.default.us, %sw.bb.us, %sw.bb59.us, %sw.bb61.us, %sw.bb63.us, %land.lhs.true48.us, %lor.lhs.false51.us
  %labels.2.us = phi %union.tree_node* [ %labels.0.us, %lor.lhs.false51.us ], [ %labels.0.us, %land.lhs.true48.us ], [ %labels.0.us, %sw.default.us ], [ %call64.us, %sw.bb63.us ], [ %labels.0.us, %sw.bb61.us ], [ %labels.0.us, %sw.bb59.us ], [ %labels.0.us, %sw.bb.us ], !dbg !7975
  %clobbers.2.us = phi %union.tree_node* [ %clobbers.0.us, %lor.lhs.false51.us ], [ %clobbers.0.us, %land.lhs.true48.us ], [ %clobbers.0.us, %sw.default.us ], [ %clobbers.0.us, %sw.bb63.us ], [ %call62.us, %sw.bb61.us ], [ %clobbers.0.us, %sw.bb59.us ], [ %clobbers.0.us, %sw.bb.us ], !dbg !7976
  %inputs.2.us = phi %union.tree_node* [ %inputs.0.us, %lor.lhs.false51.us ], [ %inputs.0.us, %land.lhs.true48.us ], [ %inputs.0.us, %sw.default.us ], [ %inputs.0.us, %sw.bb63.us ], [ %inputs.0.us, %sw.bb61.us ], [ %call60.us, %sw.bb59.us ], [ %inputs.0.us, %sw.bb.us ], !dbg !7977
  %outputs.3.us = phi %union.tree_node* [ %outputs.0.us, %lor.lhs.false51.us ], [ %outputs.0.us, %land.lhs.true48.us ], [ %outputs.0.us, %sw.default.us ], [ %outputs.0.us, %sw.bb63.us ], [ %outputs.0.us, %sw.bb61.us ], [ %outputs.0.us, %sw.bb59.us ], [ %call57.us, %sw.bb.us ], !dbg !7978
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs.3.us, metadata !7909, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs.2.us, metadata !7910, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers.2.us, metadata !7911, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %labels.2.us, metadata !7912, metadata !DIExpression()), !dbg !7922
  %call66.us = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !8004
  %tobool68.us = icmp eq i8 %call66.us, 0, !dbg !8004
  br i1 %tobool68.us, label %for.inc.us, label %done_asm.loopexit.us-lcssa.us, !dbg !8006

for.inc.us:                                       ; preds = %if.end65.us
  %inc.us = add nuw nsw i32 %section.0.us, 1, !dbg !8007
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !7917, metadata !DIExpression()), !dbg !7922
  br label %for.cond.us, !dbg !8008, !llvm.loop !8009

done_asm.loopexit.us-lcssa.us:                    ; preds = %for.cond.us, %if.end65.us
  %simple.1.ph.ph.us = phi i8 [ 0, %if.end65.us ], [ %simple.0.us, %for.cond.us ]
  %labels.3.ph.ph.us = phi %union.tree_node* [ %labels.2.us, %if.end65.us ], [ %labels.0.us, %for.cond.us ]
  %clobbers.3.ph.ph.us = phi %union.tree_node* [ %clobbers.2.us, %if.end65.us ], [ %clobbers.0.us, %for.cond.us ]
  %inputs.3.ph.ph.us = phi %union.tree_node* [ %inputs.2.us, %if.end65.us ], [ %inputs.0.us, %for.cond.us ]
  %outputs.4.ph.ph.us = phi %union.tree_node* [ %outputs.3.us, %if.end65.us ], [ %outputs.0.us, %for.cond.us ]
  br label %done_asm.loopexit, !dbg !8011

error_close_paren.loopexit.us-lcssa.us:           ; preds = %for.body.us
  br label %error_close_paren.loopexit, !dbg !8013

for.cond:                                         ; preds = %for.inc, %if.end35.if.end35.split_crit_edge
  %simple.0 = phi i8 [ 1, %if.end35.if.end35.split_crit_edge ], [ 0, %for.inc ], !dbg !7922
  %labels.0 = phi %union.tree_node* [ null, %if.end35.if.end35.split_crit_edge ], [ %labels.2, %for.inc ], !dbg !7975
  %clobbers.0 = phi %union.tree_node* [ null, %if.end35.if.end35.split_crit_edge ], [ %clobbers.2, %for.inc ], !dbg !7976
  %inputs.0 = phi %union.tree_node* [ null, %if.end35.if.end35.split_crit_edge ], [ %inputs.2, %for.inc ], !dbg !7977
  %section.0 = phi i32 [ 0, %if.end35.if.end35.split_crit_edge ], [ %inc, %for.inc ], !dbg !7979
  call void @llvm.dbg.value(metadata i32 %section.0, metadata !7917, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7909, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs.0, metadata !7910, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers.0, metadata !7911, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %labels.0, metadata !7912, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8 %simple.0, metadata !7914, metadata !DIExpression()), !dbg !7922
  %exitcond15 = icmp eq i32 %section.0, %add, !dbg !7980
  br i1 %exitcond15, label %done_asm.loopexit.us-lcssa.loopexit, label %for.body, !dbg !7981

for.body:                                         ; preds = %for.cond
  %call42 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 18, i8* %cond41) #7, !dbg !7982
  %tobool43 = icmp eq i8 %call42, 0, !dbg !7982
  br i1 %tobool43, label %error_close_paren.loopexit.us-lcssa, label %if.end45, !dbg !7983

if.end45:                                         ; preds = %for.body
  call void @llvm.dbg.value(metadata i8 0, metadata !7914, metadata !DIExpression()), !dbg !7922
  %call46 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !7984
  %tobool47 = icmp eq i8 %call46, 0, !dbg !7984
  br i1 %tobool47, label %land.lhs.true48, label %lor.lhs.false51, !dbg !7986

land.lhs.true48:                                  ; preds = %if.end45
  %call49 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !7988
  %tobool50 = icmp eq i8 %call49, 0, !dbg !7988
  %cmp52 = icmp eq i32 %section.0, 3, !dbg !7989
  %or.cond1 = or i1 %tobool50, %cmp52, !dbg !7990
  br i1 %or.cond1, label %if.then54, label %if.end65, !dbg !7990

lor.lhs.false51:                                  ; preds = %if.end45
  %cond = icmp eq i32 %section.0, 3, !dbg !7987
  br i1 %cond, label %sw.bb63, label %if.end65, !dbg !7987

if.then54:                                        ; preds = %land.lhs.true48
  switch i32 %section.0, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb59
    i32 2, label %sw.bb61
    i32 3, label %sw.bb63
  ], !dbg !7991

sw.bb:                                            ; preds = %if.then54
  br label %if.end65, !dbg !8014

sw.bb59:                                          ; preds = %if.then54
  %call60 = tail call fastcc %union.tree_node* @c_parser_asm_operands(%struct.c_parser* %parser, i8 zeroext 1) #7, !dbg !7997
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !7910, metadata !DIExpression()), !dbg !7922
  br label %if.end65, !dbg !7998

sw.bb61:                                          ; preds = %if.then54
  %call62 = tail call fastcc %union.tree_node* @c_parser_asm_clobbers(%struct.c_parser* %parser) #7, !dbg !7995
  call void @llvm.dbg.value(metadata %union.tree_node* %call62, metadata !7911, metadata !DIExpression()), !dbg !7922
  br label %if.end65, !dbg !7996

sw.bb63:                                          ; preds = %lor.lhs.false51, %if.then54
  %call64 = tail call fastcc %union.tree_node* @c_parser_asm_goto_operands(%struct.c_parser* %parser) #7, !dbg !7992
  call void @llvm.dbg.value(metadata %union.tree_node* %call64, metadata !7912, metadata !DIExpression()), !dbg !7922
  br label %if.end65, !dbg !7994

sw.default:                                       ; preds = %if.then54
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 4375, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8002
  br label %if.end65, !dbg !8003

if.end65:                                         ; preds = %sw.bb, %lor.lhs.false51, %sw.bb59, %sw.bb61, %sw.bb63, %sw.default, %land.lhs.true48
  %labels.2 = phi %union.tree_node* [ %labels.0, %lor.lhs.false51 ], [ %labels.0, %land.lhs.true48 ], [ %labels.0, %sw.default ], [ %call64, %sw.bb63 ], [ %labels.0, %sw.bb61 ], [ %labels.0, %sw.bb59 ], [ %labels.0, %sw.bb ], !dbg !7975
  %clobbers.2 = phi %union.tree_node* [ %clobbers.0, %lor.lhs.false51 ], [ %clobbers.0, %land.lhs.true48 ], [ %clobbers.0, %sw.default ], [ %clobbers.0, %sw.bb63 ], [ %call62, %sw.bb61 ], [ %clobbers.0, %sw.bb59 ], [ %clobbers.0, %sw.bb ], !dbg !7976
  %inputs.2 = phi %union.tree_node* [ %inputs.0, %lor.lhs.false51 ], [ %inputs.0, %land.lhs.true48 ], [ %inputs.0, %sw.default ], [ %inputs.0, %sw.bb63 ], [ %inputs.0, %sw.bb61 ], [ %call60, %sw.bb59 ], [ %inputs.0, %sw.bb ], !dbg !7977
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7909, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs.2, metadata !7910, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers.2, metadata !7911, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %labels.2, metadata !7912, metadata !DIExpression()), !dbg !7922
  %call66 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !8004
  br i1 true, label %for.inc, label %if.end65.done_asm.loopexit.us-lcssa_crit_edge, !dbg !8006

if.end65.done_asm.loopexit.us-lcssa_crit_edge:    ; preds = %if.end65
  %simple.0.lcssa26 = phi i8 [ 1, %if.end65 ], !dbg !7922
  %labels.0.lcssa23 = phi %union.tree_node* [ null, %if.end65 ], !dbg !7975
  %clobbers.0.lcssa20 = phi %union.tree_node* [ null, %if.end65 ], !dbg !7976
  %inputs.0.lcssa17 = phi %union.tree_node* [ null, %if.end65 ], !dbg !7977
  call void @llvm.dbg.value(metadata i8 %simple.0.lcssa26, metadata !7914, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %labels.0.lcssa23, metadata !7912, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers.0.lcssa20, metadata !7911, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs.0.lcssa17, metadata !7910, metadata !DIExpression()), !dbg !7922
  br label %done_asm.loopexit.us-lcssa, !dbg !8006

for.inc:                                          ; preds = %if.end65
  %inc = add nuw nsw i32 %section.0, 1, !dbg !8007
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7917, metadata !DIExpression()), !dbg !7922
  br label %for.cond, !dbg !8008, !llvm.loop !8009

done_asm.loopexit.us-lcssa.loopexit:              ; preds = %for.cond
  %simple.0.lcssa = phi i8 [ %simple.0, %for.cond ], !dbg !7922
  %labels.0.lcssa = phi %union.tree_node* [ %labels.0, %for.cond ], !dbg !7975
  %clobbers.0.lcssa = phi %union.tree_node* [ %clobbers.0, %for.cond ], !dbg !7976
  %inputs.0.lcssa = phi %union.tree_node* [ %inputs.0, %for.cond ], !dbg !7977
  call void @llvm.dbg.value(metadata i8 %simple.0.lcssa, metadata !7914, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %labels.0.lcssa, metadata !7912, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers.0.lcssa, metadata !7911, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs.0.lcssa, metadata !7910, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8 %simple.0.lcssa, metadata !7914, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %labels.0.lcssa, metadata !7912, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers.0.lcssa, metadata !7911, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs.0.lcssa, metadata !7910, metadata !DIExpression()), !dbg !7922
  br label %done_asm.loopexit.us-lcssa, !dbg !8011

done_asm.loopexit.us-lcssa:                       ; preds = %done_asm.loopexit.us-lcssa.loopexit, %if.end65.done_asm.loopexit.us-lcssa_crit_edge
  %simple.027 = phi i8 [ %simple.0.lcssa, %done_asm.loopexit.us-lcssa.loopexit ], [ %simple.0.lcssa26, %if.end65.done_asm.loopexit.us-lcssa_crit_edge ]
  %labels.024 = phi %union.tree_node* [ %labels.0.lcssa, %done_asm.loopexit.us-lcssa.loopexit ], [ %labels.0.lcssa23, %if.end65.done_asm.loopexit.us-lcssa_crit_edge ]
  %clobbers.021 = phi %union.tree_node* [ %clobbers.0.lcssa, %done_asm.loopexit.us-lcssa.loopexit ], [ %clobbers.0.lcssa20, %if.end65.done_asm.loopexit.us-lcssa_crit_edge ]
  %inputs.018 = phi %union.tree_node* [ %inputs.0.lcssa, %done_asm.loopexit.us-lcssa.loopexit ], [ %inputs.0.lcssa17, %if.end65.done_asm.loopexit.us-lcssa_crit_edge ]
  br label %done_asm.loopexit, !dbg !8011

done_asm.loopexit:                                ; preds = %done_asm.loopexit.us-lcssa.us, %done_asm.loopexit.us-lcssa
  %simple.1.ph = phi i8 [ %simple.027, %done_asm.loopexit.us-lcssa ], [ %simple.1.ph.ph.us, %done_asm.loopexit.us-lcssa.us ]
  %labels.3.ph = phi %union.tree_node* [ %labels.024, %done_asm.loopexit.us-lcssa ], [ %labels.3.ph.ph.us, %done_asm.loopexit.us-lcssa.us ]
  %clobbers.3.ph = phi %union.tree_node* [ %clobbers.021, %done_asm.loopexit.us-lcssa ], [ %clobbers.3.ph.ph.us, %done_asm.loopexit.us-lcssa.us ]
  %inputs.3.ph = phi %union.tree_node* [ %inputs.018, %done_asm.loopexit.us-lcssa ], [ %inputs.3.ph.ph.us, %done_asm.loopexit.us-lcssa.us ]
  %outputs.4.ph = phi %union.tree_node* [ null, %done_asm.loopexit.us-lcssa ], [ %outputs.4.ph.ph.us, %done_asm.loopexit.us-lcssa.us ]
  br label %done_asm, !dbg !8011

done_asm:                                         ; preds = %done_asm.loopexit, %if.end29
  %simple.1 = phi i8 [ 1, %if.end29 ], [ %simple.1.ph, %done_asm.loopexit ], !dbg !7922
  %labels.3 = phi %union.tree_node* [ null, %if.end29 ], [ %labels.3.ph, %done_asm.loopexit ], !dbg !7975
  %clobbers.3 = phi %union.tree_node* [ null, %if.end29 ], [ %clobbers.3.ph, %done_asm.loopexit ], !dbg !7976
  %inputs.3 = phi %union.tree_node* [ null, %if.end29 ], [ %inputs.3.ph, %done_asm.loopexit ], !dbg !7977
  %outputs.4 = phi %union.tree_node* [ null, %if.end29 ], [ %outputs.4.ph, %done_asm.loopexit ], !dbg !7978
  call void @llvm.dbg.value(metadata %union.tree_node* %outputs.4, metadata !7909, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %inputs.3, metadata !7910, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %clobbers.3, metadata !7911, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %labels.3, metadata !7912, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.value(metadata i8 %simple.1, metadata !7914, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.label(metadata !7919), !dbg !8015
  %call73 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !8011
  %tobool74 = icmp eq i8 %call73, 0, !dbg !8011
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !8016

if.then75:                                        ; preds = %done_asm
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !8017
  br label %error, !dbg !8019

if.end76:                                         ; preds = %done_asm
  %call77 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !8020
  %tobool78 = icmp eq i8 %call77, 0, !dbg !8020
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !8022

if.then79:                                        ; preds = %if.end76
  tail call fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) #7, !dbg !8023
  br label %if.end80, !dbg !8023

if.end80:                                         ; preds = %if.end76, %if.then79
  %call81 = tail call %union.tree_node* @build_asm_expr(i32 %0, %union.tree_node* nonnull %call26, %union.tree_node* %outputs.4, %union.tree_node* %inputs.3, %union.tree_node* %clobbers.3, %union.tree_node* %labels.3, i8 zeroext %simple.1) #6, !dbg !8024
  %call82 = tail call %union.tree_node* @build_asm_stmt(%union.tree_node* %quals.1, %union.tree_node* %call81) #6, !dbg !8025
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !7913, metadata !DIExpression()), !dbg !7922
  br label %error, !dbg !8026

error:                                            ; preds = %if.end21, %error_close_paren, %if.end80, %if.then75
  %ret.0 = phi %union.tree_node* [ null, %error_close_paren ], [ %call82, %if.end80 ], [ null, %if.then75 ], [ null, %if.end21 ], !dbg !7922
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !7913, metadata !DIExpression()), !dbg !7922
  call void @llvm.dbg.label(metadata !7920), !dbg !8027
  %bf.load84 = load i8, i8* %lex_untranslated_string, align 2, !dbg !8028
  %bf.clear85 = and i8 %bf.load84, -9, !dbg !8028
  store i8 %bf.clear85, i8* %lex_untranslated_string, align 2, !dbg !8028
  ret %union.tree_node* %ret.0, !dbg !8029

error_close_paren.loopexit.us-lcssa:              ; preds = %for.body
  br label %error_close_paren.loopexit, !dbg !8013

error_close_paren.loopexit:                       ; preds = %error_close_paren.loopexit.us-lcssa.us, %error_close_paren.loopexit.us-lcssa
  br label %error_close_paren, !dbg !8013

error_close_paren:                                ; preds = %error_close_paren.loopexit, %if.end25
  call void @llvm.dbg.label(metadata !7921), !dbg !8030
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !8013
  br label %error, !dbg !8031
}

declare dso_local %union.tree_node* @objc_build_throw_stmt(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_try_catch_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8032 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8034, metadata !DIExpression()), !dbg !8043
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 87) #7, !dbg !8044
  %tobool = icmp eq i8 %call, 0, !dbg !8044
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8044

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6715, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8044
  br label %cond.end, !dbg !8044

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8045
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8046
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !8047
  %0 = load i32, i32* %location, align 8, !dbg !8047
  call void @llvm.dbg.value(metadata i32 %0, metadata !8035, metadata !DIExpression()), !dbg !8043
  %call2 = tail call fastcc %union.tree_node* @c_parser_compound_statement(%struct.c_parser* %parser) #7, !dbg !8048
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !8036, metadata !DIExpression()), !dbg !8043
  tail call void @objc_begin_try_stmt(i32 %0, %union.tree_node* %call2) #6, !dbg !8049
  br label %while.cond, !dbg !8050

while.cond:                                       ; preds = %cleanup, %cond.end
  %call3 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 77) #7, !dbg !8051
  %tobool4 = icmp eq i8 %call3, 0, !dbg !8050
  br i1 %tobool4, label %while.end, label %while.body, !dbg !8050

while.body:                                       ; preds = %while.cond
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8052
  %call5 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !8053
  %tobool6 = icmp eq i8 %call5, 0, !dbg !8053
  br i1 %tobool6, label %cleanup, label %if.end, !dbg !8055

if.end:                                           ; preds = %while.body
  %call7 = tail call fastcc %struct.c_parm* @c_parser_parameter_declaration(%struct.c_parser* %parser, %union.tree_node* null) #7, !dbg !8056
  call void @llvm.dbg.value(metadata %struct.c_parm* %call7, metadata !8037, metadata !DIExpression()), !dbg !8057
  %cmp = icmp eq %struct.c_parm* %call7, null, !dbg !8058
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !8060

if.then8:                                         ; preds = %if.end
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !8061
  br label %cleanup, !dbg !8063

if.end9:                                          ; preds = %if.end
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !8064
  %call10 = tail call %union.tree_node* @grokparm(%struct.c_parm* nonnull %call7) #6, !dbg !8065
  tail call void @objc_begin_catch_clause(%union.tree_node* %call10) #6, !dbg !8066
  %call11 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 41, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)) #7, !dbg !8067
  %tobool12 = icmp eq i8 %call11, 0, !dbg !8067
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !8069

if.then13:                                        ; preds = %if.end9
  tail call fastcc void @c_parser_compound_statement_nostart(%struct.c_parser* %parser) #7, !dbg !8070
  br label %if.end14, !dbg !8070

if.end14:                                         ; preds = %if.end9, %if.then13
  tail call void @objc_finish_catch_clause() #6, !dbg !8071
  br label %cleanup, !dbg !8072

cleanup:                                          ; preds = %while.body, %if.end14, %if.then8
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then8 ], [ true, %if.end14 ], [ false, %while.body ]
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !8073

while.end:                                        ; preds = %while.cond, %cleanup
  %call15 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 132) #7, !dbg !8074
  %tobool16 = icmp eq i8 %call15, 0, !dbg !8074
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !8075

if.then17:                                        ; preds = %while.end
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8076
  %call18 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8077
  %location19 = getelementptr inbounds %struct.c_token, %struct.c_token* %call18, i64 0, i32 2, !dbg !8078
  %1 = load i32, i32* %location19, align 8, !dbg !8078
  call void @llvm.dbg.value(metadata i32 %1, metadata !8039, metadata !DIExpression()), !dbg !8079
  %call20 = tail call fastcc %union.tree_node* @c_parser_compound_statement(%struct.c_parser* %parser) #7, !dbg !8080
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !8042, metadata !DIExpression()), !dbg !8079
  tail call void @objc_build_finally_clause(i32 %1, %union.tree_node* %call20) #6, !dbg !8081
  br label %if.end21, !dbg !8082

if.end21:                                         ; preds = %while.end, %if.then17
  %call22 = tail call %union.tree_node* @objc_finish_try_stmt() #6, !dbg !8083
  ret void, !dbg !8084
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_objc_synchronized_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8085 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8087, metadata !DIExpression()), !dbg !8091
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 133) #7, !dbg !8092
  %tobool = icmp eq i8 %call, 0, !dbg !8092
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8092

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 6761, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !8092
  br label %cond.end, !dbg !8092

cond.end:                                         ; preds = %entry, %cond.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8093
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8094
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !8095
  %0 = load i32, i32* %location, align 8, !dbg !8095
  call void @llvm.dbg.value(metadata i32 %0, metadata !8088, metadata !DIExpression()), !dbg !8091
  %call2 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !8096
  %tobool3 = icmp eq i8 %call2, 0, !dbg !8096
  br i1 %tobool3, label %if.else, label %if.then, !dbg !8098

if.then:                                          ; preds = %cond.end
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !8099
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !8101
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8101
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8089, metadata !DIExpression()), !dbg !8091
  %call4 = call %union.tree_node* @c_fully_fold(%union.tree_node* %1, i8 zeroext 0, i8* null) #6, !dbg !8102
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !8089, metadata !DIExpression()), !dbg !8091
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !8103
  br label %if.end, !dbg !8104

if.else:                                          ; preds = %cond.end
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8105
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !8089, metadata !DIExpression()), !dbg !8091
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %expr.0 = phi %union.tree_node* [ %call4, %if.then ], [ %2, %if.else ], !dbg !8106
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.0, metadata !8089, metadata !DIExpression()), !dbg !8091
  %call5 = call fastcc %union.tree_node* @c_parser_compound_statement(%struct.c_parser* %parser) #7, !dbg !8107
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !8090, metadata !DIExpression()), !dbg !8091
  %call6 = call %union.tree_node* @objc_build_synchronized(i32 %0, %union.tree_node* %expr.0, %union.tree_node* %call5) #6, !dbg !8108
  ret void, !dbg !8109
}

declare dso_local %union.tree_node* @c_finish_expr_stmt(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_begin_compound_stmt(i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_end_compound_stmt(i32, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_paren_condition(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8110 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8112, metadata !DIExpression()), !dbg !8114
  %call = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !8115
  %tobool = icmp eq i8 %call, 0, !dbg !8115
  br i1 %tobool, label %if.then, label %if.end, !dbg !8117

if.then:                                          ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !8118
  br label %cleanup, !dbg !8119

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @c_parser_condition(%struct.c_parser* %parser) #7, !dbg !8120
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8113, metadata !DIExpression()), !dbg !8114
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !8121
  br label %cleanup, !dbg !8122

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node* [ %call1, %if.end ], [ %0, %if.then ], !dbg !8114
  ret %union.tree_node* %retval.0, !dbg !8123
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_if_body(%struct.c_parser* %parser, i8* %if_p) unnamed_addr #5 !dbg !8124 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8128, metadata !DIExpression()), !dbg !8135
  call void @llvm.dbg.value(metadata i8* %if_p, metadata !8129, metadata !DIExpression()), !dbg !8135
  %0 = load i32, i32* @flag_isoc99, align 4, !dbg !8136
  %conv = trunc i32 %0 to i8, !dbg !8136
  %call = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext %conv) #6, !dbg !8137
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8130, metadata !DIExpression()), !dbg !8135
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8138
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !8139
  %1 = load i32, i32* %location, align 8, !dbg !8139
  call void @llvm.dbg.value(metadata i32 %1, metadata !8131, metadata !DIExpression()), !dbg !8135
  br label %while.cond, !dbg !8140

while.cond:                                       ; preds = %while.body, %entry
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 42) #7, !dbg !8141
  %tobool = icmp eq i8 %call2, 0, !dbg !8141
  br i1 %tobool, label %lor.lhs.false, label %while.body, !dbg !8142

lor.lhs.false:                                    ; preds = %while.cond
  %call4 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 43) #7, !dbg !8143
  %tobool6 = icmp eq i8 %call4, 0, !dbg !8143
  br i1 %tobool6, label %lor.rhs, label %while.body, !dbg !8144

lor.rhs:                                          ; preds = %lor.lhs.false
  %call7 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !8145
  %tobool9 = icmp eq i8 %call7, 0, !dbg !8145
  br i1 %tobool9, label %while.end, label %land.rhs, !dbg !8146

land.rhs:                                         ; preds = %lor.rhs
  %call10 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !8147
  %2 = getelementptr inbounds %struct.c_token, %struct.c_token* %call10, i64 0, i32 0, !dbg !8148
  %bf.load = load i32, i32* %2, align 8, !dbg !8148
  %bf.clear = and i32 %bf.load, 255, !dbg !8148
  %cmp = icmp eq i32 %bf.clear, 18, !dbg !8149
  br i1 %cmp, label %while.body, label %while.end, !dbg !8140

while.body:                                       ; preds = %lor.lhs.false, %while.cond, %land.rhs
  tail call fastcc void @c_parser_label(%struct.c_parser* %parser) #7, !dbg !8150
  br label %while.cond, !dbg !8140, !llvm.loop !8151

while.end:                                        ; preds = %lor.rhs, %land.rhs
  %call12 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 36) #7, !dbg !8153
  store i8 %call12, i8* %if_p, align 1, !dbg !8154
  %call13 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !8155
  %tobool14 = icmp eq i8 %call13, 0, !dbg !8155
  br i1 %tobool14, label %if.else, label %if.then, !dbg !8156

if.then:                                          ; preds = %while.end
  %call15 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8157
  %location16 = getelementptr inbounds %struct.c_token, %struct.c_token* %call15, i64 0, i32 2, !dbg !8158
  %3 = load i32, i32* %location16, align 8, !dbg !8158
  call void @llvm.dbg.value(metadata i32 %3, metadata !8132, metadata !DIExpression()), !dbg !8159
  %call17 = tail call %union.tree_node* @build_empty_stmt(i32 %3) #6, !dbg !8160
  %call18 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call17) #6, !dbg !8161
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8162
  %call19 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 37) #7, !dbg !8163
  %tobool20 = icmp eq i8 %call19, 0, !dbg !8163
  br i1 %tobool20, label %if.then21, label %if.end30, !dbg !8165

if.then21:                                        ; preds = %if.then
  %call22 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %3, i32 74, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !8166
  br label %if.end30, !dbg !8166

if.else:                                          ; preds = %while.end
  %call23 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !8167
  %tobool24 = icmp eq i8 %call23, 0, !dbg !8167
  br i1 %tobool24, label %if.else28, label %if.then25, !dbg !8169

if.then25:                                        ; preds = %if.else
  %call26 = tail call fastcc %union.tree_node* @c_parser_compound_statement(%struct.c_parser* %parser) #7, !dbg !8170
  %call27 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call26) #6, !dbg !8171
  br label %if.end30, !dbg !8171

if.else28:                                        ; preds = %if.else
  tail call fastcc void @c_parser_statement_after_labels(%struct.c_parser* %parser) #7, !dbg !8172
  br label %if.end30

if.end30:                                         ; preds = %if.then, %if.then25, %if.else28, %if.then21
  %4 = load i32, i32* @flag_isoc99, align 4, !dbg !8173
  %conv31 = trunc i32 %4 to i8, !dbg !8173
  %call32 = tail call %union.tree_node* @c_end_compound_stmt(i32 %1, %union.tree_node* %call, i8 zeroext %conv31) #6, !dbg !8174
  ret %union.tree_node* %call32, !dbg !8175
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_else_body(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8176 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8178, metadata !DIExpression()), !dbg !8184
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8185
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !8186
  %0 = load i32, i32* %location, align 8, !dbg !8186
  call void @llvm.dbg.value(metadata i32 %0, metadata !8179, metadata !DIExpression()), !dbg !8184
  %1 = load i32, i32* @flag_isoc99, align 4, !dbg !8187
  %conv = trunc i32 %1 to i8, !dbg !8187
  %call1 = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext %conv) #6, !dbg !8188
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8180, metadata !DIExpression()), !dbg !8184
  br label %while.cond, !dbg !8189

while.cond:                                       ; preds = %while.body, %entry
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 42) #7, !dbg !8190
  %tobool = icmp eq i8 %call2, 0, !dbg !8190
  br i1 %tobool, label %lor.lhs.false, label %while.body, !dbg !8191

lor.lhs.false:                                    ; preds = %while.cond
  %call4 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 43) #7, !dbg !8192
  %tobool6 = icmp eq i8 %call4, 0, !dbg !8192
  br i1 %tobool6, label %lor.rhs, label %while.body, !dbg !8193

lor.rhs:                                          ; preds = %lor.lhs.false
  %call7 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !8194
  %tobool9 = icmp eq i8 %call7, 0, !dbg !8194
  br i1 %tobool9, label %while.end, label %land.rhs, !dbg !8195

land.rhs:                                         ; preds = %lor.rhs
  %call10 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !8196
  %2 = getelementptr inbounds %struct.c_token, %struct.c_token* %call10, i64 0, i32 0, !dbg !8197
  %bf.load = load i32, i32* %2, align 8, !dbg !8197
  %bf.clear = and i32 %bf.load, 255, !dbg !8197
  %cmp = icmp eq i32 %bf.clear, 18, !dbg !8198
  br i1 %cmp, label %while.body, label %while.end, !dbg !8189

while.body:                                       ; preds = %lor.lhs.false, %while.cond, %land.rhs
  tail call fastcc void @c_parser_label(%struct.c_parser* %parser) #7, !dbg !8199
  br label %while.cond, !dbg !8189, !llvm.loop !8200

while.end:                                        ; preds = %lor.rhs, %land.rhs
  %call12 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !8202
  %tobool13 = icmp eq i8 %call12, 0, !dbg !8202
  br i1 %tobool13, label %if.else, label %if.then, !dbg !8203

if.then:                                          ; preds = %while.end
  %call14 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8204
  %location15 = getelementptr inbounds %struct.c_token, %struct.c_token* %call14, i64 0, i32 2, !dbg !8205
  %3 = load i32, i32* %location15, align 8, !dbg !8205
  call void @llvm.dbg.value(metadata i32 %3, metadata !8181, metadata !DIExpression()), !dbg !8206
  %call16 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %3, i32 74, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !8207
  %call17 = tail call %union.tree_node* @build_empty_stmt(i32 %3) #6, !dbg !8208
  %call18 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call17) #6, !dbg !8209
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8210
  br label %if.end, !dbg !8211

if.else:                                          ; preds = %while.end
  tail call fastcc void @c_parser_statement_after_labels(%struct.c_parser* %parser) #7, !dbg !8212
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %4 = load i32, i32* @flag_isoc99, align 4, !dbg !8213
  %conv19 = trunc i32 %4 to i8, !dbg !8213
  %call20 = tail call %union.tree_node* @c_end_compound_stmt(i32 %0, %union.tree_node* %call1, i8 zeroext %conv19) #6, !dbg !8214
  ret %union.tree_node* %call20, !dbg !8215
}

declare dso_local void @c_finish_if_stmt(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_condition(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8216 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8218, metadata !DIExpression()), !dbg !8221
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8222
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !8223
  %0 = load i32, i32* %location, align 8, !dbg !8223
  call void @llvm.dbg.value(metadata i32 %0, metadata !8219, metadata !DIExpression()), !dbg !8221
  call fastcc void @c_parser_expression_conv(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !8224
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !8225
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8225
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8220, metadata !DIExpression()), !dbg !8221
  %call1 = call %union.tree_node* @c_objc_common_truthvalue_conversion(i32 %0, %union.tree_node* %1) #6, !dbg !8226
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8220, metadata !DIExpression()), !dbg !8221
  %call2 = call %union.tree_node* @c_fully_fold(%union.tree_node* %call1, i8 zeroext 0, i8* null) #6, !dbg !8227
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !8220, metadata !DIExpression()), !dbg !8221
  %2 = load i32, i32* @warn_sequence_point, align 4, !dbg !8228
  %tobool = icmp eq i32 %2, 0, !dbg !8228
  br i1 %tobool, label %if.end, label %if.then, !dbg !8230

if.then:                                          ; preds = %entry
  call void @verify_sequence_points(%union.tree_node* %call2) #6, !dbg !8231
  br label %if.end, !dbg !8231

if.end:                                           ; preds = %entry, %if.then
  ret %union.tree_node* %call2, !dbg !8232
}

declare dso_local void @verify_sequence_points(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_empty_stmt(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_start_case(i32, i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_c99_block_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8233 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8235, metadata !DIExpression()), !dbg !8238
  %0 = load i32, i32* @flag_isoc99, align 4, !dbg !8239
  %conv = trunc i32 %0 to i8, !dbg !8239
  %call = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext %conv) #6, !dbg !8240
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8236, metadata !DIExpression()), !dbg !8238
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8241
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !8242
  %1 = load i32, i32* %location, align 8, !dbg !8242
  call void @llvm.dbg.value(metadata i32 %1, metadata !8237, metadata !DIExpression()), !dbg !8238
  tail call fastcc void @c_parser_statement(%struct.c_parser* %parser) #7, !dbg !8243
  %2 = load i32, i32* @flag_isoc99, align 4, !dbg !8244
  %conv2 = trunc i32 %2 to i8, !dbg !8244
  %call3 = tail call %union.tree_node* @c_end_compound_stmt(i32 %1, %union.tree_node* %call, i8 zeroext %conv2) #6, !dbg !8245
  ret %union.tree_node* %call3, !dbg !8246
}

declare dso_local void @c_finish_case(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8247 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8249, metadata !DIExpression()), !dbg !8250
  br label %while.cond, !dbg !8251

while.cond:                                       ; preds = %while.body, %entry
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 42) #7, !dbg !8252
  %tobool = icmp eq i8 %call, 0, !dbg !8252
  br i1 %tobool, label %lor.lhs.false, label %while.body, !dbg !8253

lor.lhs.false:                                    ; preds = %while.cond
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 43) #7, !dbg !8254
  %tobool3 = icmp eq i8 %call1, 0, !dbg !8254
  br i1 %tobool3, label %lor.rhs, label %while.body, !dbg !8255

lor.rhs:                                          ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !8256
  %tobool6 = icmp eq i8 %call4, 0, !dbg !8256
  br i1 %tobool6, label %while.end, label %land.rhs, !dbg !8257

land.rhs:                                         ; preds = %lor.rhs
  %call7 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !8258
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call7, i64 0, i32 0, !dbg !8259
  %bf.load = load i32, i32* %0, align 8, !dbg !8259
  %bf.clear = and i32 %bf.load, 255, !dbg !8259
  %cmp = icmp eq i32 %bf.clear, 18, !dbg !8260
  br i1 %cmp, label %while.body, label %while.end, !dbg !8251

while.body:                                       ; preds = %lor.lhs.false, %while.cond, %land.rhs
  tail call fastcc void @c_parser_label(%struct.c_parser* %parser) #7, !dbg !8261
  br label %while.cond, !dbg !8251, !llvm.loop !8262

while.end:                                        ; preds = %lor.rhs, %land.rhs
  tail call fastcc void @c_parser_statement_after_labels(%struct.c_parser* %parser) #7, !dbg !8264
  ret void, !dbg !8265
}

declare dso_local void @c_finish_loop(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8266 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8268, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.value(metadata i32 0, metadata !8269, metadata !DIExpression()), !dbg !8274
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !8275
  %bf.load = load i8, i8* %error, align 2, !dbg !8275
  %bf.clear = and i8 %bf.load, 1, !dbg !8275
  call void @llvm.dbg.value(metadata i8 %bf.clear, metadata !8270, metadata !DIExpression()), !dbg !8274
  br label %while.cond, !dbg !8276

while.cond:                                       ; preds = %while.cond.backedge, %entry
  %nesting_depth.0 = phi i32 [ 0, %entry ], [ %nesting_depth.3, %while.cond.backedge ], !dbg !8277
  call void @llvm.dbg.value(metadata i32 %nesting_depth.0, metadata !8269, metadata !DIExpression()), !dbg !8274
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8278
  call void @llvm.dbg.value(metadata %struct.c_token* %call, metadata !8271, metadata !DIExpression()), !dbg !8279
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !8280
  %bf.load1 = load i32, i32* %0, align 8, !dbg !8280
  %trunc = trunc i32 %bf.load1 to i8, !dbg !8281
  switch i8 %trunc, label %sw.epilog [
    i8 22, label %cleanup
    i8 71, label %sw.bb3
    i8 43, label %sw.bb7
    i8 42, label %sw.bb11
    i8 41, label %sw.bb17
    i8 70, label %sw.bb18
  ], !dbg !8281

sw.bb3:                                           ; preds = %while.cond
  %bf.load4 = load i8, i8* %error, align 2, !dbg !8282
  %bf.clear5 = and i8 %bf.load4, 2, !dbg !8282
  %tobool = icmp eq i8 %bf.clear5, 0, !dbg !8285
  br i1 %tobool, label %sw.epilog, label %cleanup, !dbg !8286

sw.bb7:                                           ; preds = %while.cond
  %tobool8 = icmp eq i32 %nesting_depth.0, 0, !dbg !8287
  br i1 %tobool8, label %if.then9, label %sw.epilog, !dbg !8289

if.then9:                                         ; preds = %sw.bb7
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8290
  br label %cleanup, !dbg !8292

sw.bb11:                                          ; preds = %while.cond
  %cmp = icmp eq i32 %nesting_depth.0, 0, !dbg !8293
  br i1 %cmp, label %if.then15, label %lor.lhs.false, !dbg !8295

lor.lhs.false:                                    ; preds = %sw.bb11
  %dec = add i32 %nesting_depth.0, -1, !dbg !8296
  call void @llvm.dbg.value(metadata i32 %dec, metadata !8269, metadata !DIExpression()), !dbg !8274
  %cmp13 = icmp eq i32 %dec, 0, !dbg !8297
  br i1 %cmp13, label %if.then15, label %sw.epilog, !dbg !8298

if.then15:                                        ; preds = %lor.lhs.false, %sw.bb11
  call void @llvm.dbg.value(metadata i32 0, metadata !8269, metadata !DIExpression()), !dbg !8274
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8299
  br label %cleanup, !dbg !8301

sw.bb17:                                          ; preds = %while.cond
  %inc = add i32 %nesting_depth.0, 1, !dbg !8302
  call void @llvm.dbg.value(metadata i32 %inc, metadata !8269, metadata !DIExpression()), !dbg !8274
  br label %sw.epilog, !dbg !8303

sw.bb18:                                          ; preds = %while.cond
  tail call fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) #7, !dbg !8304
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !8305
  %bf.load21 = load i8, i8* %error, align 2, !dbg !8306
  %bf.clear22 = and i8 %bf.load21, -2, !dbg !8306
  %bf.set = or i8 %bf.clear22, %bf.clear, !dbg !8306
  store i8 %bf.set, i8* %error, align 2, !dbg !8306
  br label %cleanup, !dbg !8307, !llvm.loop !8308

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb7, %while.cond, %lor.lhs.false, %sw.bb17
  %nesting_depth.2 = phi i32 [ %inc, %sw.bb17 ], [ %nesting_depth.0, %sw.bb3 ], [ %nesting_depth.0, %sw.bb7 ], [ %dec, %lor.lhs.false ], [ %nesting_depth.0, %while.cond ], !dbg !8274
  call void @llvm.dbg.value(metadata i32 %nesting_depth.2, metadata !8269, metadata !DIExpression()), !dbg !8274
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8310
  br label %cleanup, !dbg !8309

cleanup:                                          ; preds = %sw.bb3, %while.cond, %if.then15, %if.then9, %sw.epilog, %sw.bb18
  %nesting_depth.3 = phi i32 [ %nesting_depth.2, %sw.epilog ], [ %nesting_depth.0, %sw.bb18 ], [ 0, %if.then15 ], [ 0, %if.then9 ], [ %nesting_depth.0, %while.cond ], [ %nesting_depth.0, %sw.bb3 ], !dbg !8277
  %cleanup.dest.slot.0 = phi i32 [ 0, %sw.epilog ], [ 2, %sw.bb18 ], [ 5, %if.then15 ], [ 5, %if.then9 ], [ 1, %while.cond ], [ 1, %sw.bb3 ]
  call void @llvm.dbg.value(metadata i32 %nesting_depth.3, metadata !8269, metadata !DIExpression()), !dbg !8274
  switch i32 %cleanup.dest.slot.0, label %cleanup.cont29.loopexit [
    i32 0, label %while.cond.backedge
    i32 2, label %while.cond.backedge
    i32 5, label %finished
  ]

while.cond.backedge:                              ; preds = %cleanup, %cleanup
  br label %while.cond, !dbg !8274, !llvm.loop !8308

finished:                                         ; preds = %cleanup
  call void @llvm.dbg.label(metadata !8273), !dbg !8311
  %bf.load24 = load i8, i8* %error, align 2, !dbg !8312
  %bf.clear25 = and i8 %bf.load24, -2, !dbg !8312
  store i8 %bf.clear25, i8* %error, align 2, !dbg !8312
  br label %cleanup.cont29, !dbg !8313

cleanup.cont29.loopexit:                          ; preds = %cleanup
  br label %cleanup.cont29, !dbg !8313

cleanup.cont29:                                   ; preds = %cleanup.cont29.loopexit, %finished
  ret void, !dbg !8313
}

declare dso_local %union.tree_node* @check_for_loop_decls(i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_process_expr_stmt(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_asm_operands(%struct.c_parser* %parser, i8 zeroext %convert_p) unnamed_addr #5 !dbg !8314 {
entry:
  %expr = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp25 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8318, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.value(metadata i8 %convert_p, metadata !8319, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8320, metadata !DIExpression()), !dbg !8331
  %0 = bitcast %struct.c_expr* %expr to i8*, !dbg !8332
  %lex_untranslated_string = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !8332
  %1 = bitcast %struct.c_expr* %tmp to i8*, !dbg !8332
  %tobool23 = icmp eq i8 %convert_p, 0, !dbg !8333
  %2 = bitcast %struct.c_expr* %tmp25 to i8*, !dbg !8333
  %value27 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %expr, i64 0, i32 0, !dbg !8332
  br label %while.cond, !dbg !8335

while.cond:                                       ; preds = %cleanup, %entry
  %list.0 = phi %union.tree_node* [ null, %entry ], [ %list.1, %cleanup ], !dbg !8336
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !8320, metadata !DIExpression()), !dbg !8331
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8337
  %call = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 39) #7, !dbg !8338
  %tobool = icmp eq i8 %call, 0, !dbg !8338
  br i1 %tobool, label %if.end11, label %if.then, !dbg !8339

if.then:                                          ; preds = %while.cond
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8340
  %call1 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !8341
  %tobool2 = icmp eq i8 %call1, 0, !dbg !8341
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !8342

if.then3:                                         ; preds = %if.then
  %call4 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8343
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 1, !dbg !8344
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8344
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8326, metadata !DIExpression()), !dbg !8345
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8346
  %id5 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8347
  %4 = getelementptr inbounds i32, i32* %id5, i64 2, !dbg !8347
  %5 = load i32, i32* %4, align 8, !dbg !8347
  %str8 = bitcast i32* %id5 to i8**, !dbg !8348
  %6 = load i8*, i8** %str8, align 8, !dbg !8348
  %call9 = call %union.tree_node* @build_string(i32 %5, i8* %6) #6, !dbg !8349
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !8322, metadata !DIExpression()), !dbg !8332
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !8350
  br label %if.end11, !dbg !8351

if.else:                                          ; preds = %if.then
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !8352
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 40, i8* null) #7, !dbg !8354
  br label %cleanup, !dbg !8355

if.end11:                                         ; preds = %while.cond, %if.then3
  %name.0 = phi %union.tree_node* [ %call9, %if.then3 ], [ null, %while.cond ], !dbg !8356
  call void @llvm.dbg.value(metadata %union.tree_node* %name.0, metadata !8322, metadata !DIExpression()), !dbg !8332
  %call12 = call fastcc %union.tree_node* @c_parser_asm_string_literal(%struct.c_parser* %parser) #7, !dbg !8357
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !8324, metadata !DIExpression()), !dbg !8332
  %cmp = icmp eq %union.tree_node* %call12, null, !dbg !8358
  br i1 %cmp, label %cleanup, label %if.end14, !dbg !8360

if.end14:                                         ; preds = %if.end11
  %bf.load = load i8, i8* %lex_untranslated_string, align 2, !dbg !8361
  %bf.clear = and i8 %bf.load, -9, !dbg !8361
  store i8 %bf.clear, i8* %lex_untranslated_string, align 2, !dbg !8361
  %call15 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !8362
  %tobool16 = icmp eq i8 %call15, 0, !dbg !8362
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !8364

if.then17:                                        ; preds = %if.end14
  %bf.load19 = load i8, i8* %lex_untranslated_string, align 2, !dbg !8365
  %bf.set = or i8 %bf.load19, 8, !dbg !8365
  store i8 %bf.set, i8* %lex_untranslated_string, align 2, !dbg !8365
  br label %cleanup, !dbg !8367

if.end21:                                         ; preds = %if.end14
  %call22 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8368
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call22, i64 0, i32 2, !dbg !8369
  %7 = load i32, i32* %location, align 8, !dbg !8369
  call void @llvm.dbg.value(metadata i32 %7, metadata !8321, metadata !DIExpression()), !dbg !8331
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8370
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !8370
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !8370
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !8370
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !8371

if.then24:                                        ; preds = %if.end21
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8372
  call void @llvm.dbg.value(metadata %struct.c_expr* %expr, metadata !8325, metadata !DIExpression(DW_OP_deref)), !dbg !8332
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp25, i32 %7, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %expr) #6, !dbg !8372
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %2, i64 24, i1 false), !dbg !8372
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %2) #8, !dbg !8372
  br label %if.end26, !dbg !8373

if.end26:                                         ; preds = %if.end21, %if.then24
  %8 = load %union.tree_node*, %union.tree_node** %value27, align 8, !dbg !8374
  %call28 = call %union.tree_node* @c_fully_fold(%union.tree_node* %8, i8 zeroext 0, i8* null) #6, !dbg !8375
  store %union.tree_node* %call28, %union.tree_node** %value27, align 8, !dbg !8376
  %bf.load31 = load i8, i8* %lex_untranslated_string, align 2, !dbg !8377
  %bf.set33 = or i8 %bf.load31, 8, !dbg !8377
  store i8 %bf.set33, i8* %lex_untranslated_string, align 2, !dbg !8377
  %call34 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !8378
  %tobool35 = icmp eq i8 %call34, 0, !dbg !8378
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !8380

if.then36:                                        ; preds = %if.end26
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !8381
  br label %cleanup, !dbg !8383

if.end37:                                         ; preds = %if.end26
  %call38 = call %union.tree_node* @build_tree_list_stat(%union.tree_node* %name.0, %union.tree_node* nonnull %call12) #6, !dbg !8384
  %9 = load %union.tree_node*, %union.tree_node** %value27, align 8, !dbg !8384
  %call40 = call %union.tree_node* @build_tree_list_stat(%union.tree_node* %call38, %union.tree_node* %9) #6, !dbg !8384
  %call41 = call %union.tree_node* @chainon(%union.tree_node* %list.0, %union.tree_node* %call40) #6, !dbg !8385
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !8320, metadata !DIExpression()), !dbg !8331
  %call42 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !8386
  %tobool43 = icmp eq i8 %call42, 0, !dbg !8386
  br i1 %tobool43, label %cleanup, label %if.then44, !dbg !8388

if.then44:                                        ; preds = %if.end37
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8389
  br label %cleanup, !dbg !8390

cleanup:                                          ; preds = %if.end37, %if.end11, %if.then44, %if.then36, %if.then17, %if.else
  %list.1 = phi %union.tree_node* [ %call41, %if.then44 ], [ %list.0, %if.then36 ], [ %list.0, %if.then17 ], [ %list.0, %if.else ], [ %list.0, %if.end11 ], [ %call41, %if.end37 ], !dbg !8331
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.then44 ], [ 1, %if.then36 ], [ 1, %if.then17 ], [ 1, %if.else ], [ 1, %if.end11 ], [ 3, %if.end37 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1, metadata !8320, metadata !DIExpression()), !dbg !8331
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !8390
  switch i32 %cleanup.dest.slot.0, label %cleanup49.loopexit [
    i32 0, label %while.cond
    i32 3, label %while.end
  ], !llvm.loop !8391

while.end:                                        ; preds = %cleanup
  %list.1.lcssa4 = phi %union.tree_node* [ %list.1, %cleanup ], !dbg !8331
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa4, metadata !8320, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa4, metadata !8320, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa4, metadata !8320, metadata !DIExpression()), !dbg !8331
  br label %cleanup49, !dbg !8392

cleanup49.loopexit:                               ; preds = %cleanup
  br label %cleanup49, !dbg !8393

cleanup49:                                        ; preds = %cleanup49.loopexit, %while.end
  %retval.2 = phi %union.tree_node* [ %list.1.lcssa4, %while.end ], [ null, %cleanup49.loopexit ], !dbg !8331
  ret %union.tree_node* %retval.2, !dbg !8393
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_asm_clobbers(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8394 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8396, metadata !DIExpression()), !dbg !8400
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8397, metadata !DIExpression()), !dbg !8400
  br label %while.cond, !dbg !8401

while.cond:                                       ; preds = %cleanup, %entry
  %list.0 = phi %union.tree_node* [ null, %entry ], [ %list.1, %cleanup ], !dbg !8400
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !8397, metadata !DIExpression()), !dbg !8400
  %call = tail call fastcc %union.tree_node* @c_parser_asm_string_literal(%struct.c_parser* %parser) #7, !dbg !8402
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !8398, metadata !DIExpression()), !dbg !8403
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !8404
  br i1 %tobool, label %cleanup, label %if.then, !dbg !8406

if.then:                                          ; preds = %while.cond
  %call1 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* nonnull %call, %union.tree_node* %list.0) #6, !dbg !8407
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8397, metadata !DIExpression()), !dbg !8400
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !8408
  %tobool3 = icmp eq i8 %call2, 0, !dbg !8408
  br i1 %tobool3, label %cleanup, label %if.then4, !dbg !8410

if.then4:                                         ; preds = %if.then
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8411
  br label %cleanup, !dbg !8412

cleanup:                                          ; preds = %if.then, %while.cond, %if.then4
  %list.1 = phi %union.tree_node* [ %call1, %if.then4 ], [ %list.0, %while.cond ], [ %call1, %if.then ], !dbg !8400
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.then4 ], [ 1, %while.cond ], [ 3, %if.then ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1, metadata !8397, metadata !DIExpression()), !dbg !8400
  switch i32 %cleanup.dest.slot.0, label %cleanup7.loopexit [
    i32 0, label %while.cond
    i32 3, label %while.end
  ], !llvm.loop !8413

while.end:                                        ; preds = %cleanup
  %list.1.lcssa4 = phi %union.tree_node* [ %list.1, %cleanup ], !dbg !8400
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa4, metadata !8397, metadata !DIExpression()), !dbg !8400
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa4, metadata !8397, metadata !DIExpression()), !dbg !8400
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1.lcssa4, metadata !8397, metadata !DIExpression()), !dbg !8400
  br label %cleanup7, !dbg !8414

cleanup7.loopexit:                                ; preds = %cleanup
  br label %cleanup7, !dbg !8415

cleanup7:                                         ; preds = %cleanup7.loopexit, %while.end
  %retval.2 = phi %union.tree_node* [ %list.1.lcssa4, %while.end ], [ null, %cleanup7.loopexit ]
  ret %union.tree_node* %retval.2, !dbg !8415
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_asm_goto_operands(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8416 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8418, metadata !DIExpression()), !dbg !8426
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8419, metadata !DIExpression()), !dbg !8426
  br label %while.cond, !dbg !8427

while.cond:                                       ; preds = %cleanup, %entry
  %list.0 = phi %union.tree_node* [ null, %entry ], [ %list.1, %cleanup ], !dbg !8426
  %retval.0 = phi %union.tree_node* [ undef, %entry ], [ %retval.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.0, metadata !8419, metadata !DIExpression()), !dbg !8426
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !8428
  %tobool = icmp eq i8 %call, 0, !dbg !8428
  br i1 %tobool, label %if.else, label %if.then, !dbg !8429

if.then:                                          ; preds = %while.cond
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8430
  call void @llvm.dbg.value(metadata %struct.c_token* %call1, metadata !8423, metadata !DIExpression()), !dbg !8431
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 1, !dbg !8432
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8432
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !8420, metadata !DIExpression()), !dbg !8433
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !8434
  %1 = load i32, i32* %location, align 8, !dbg !8434
  %call2 = tail call %union.tree_node* @lookup_label_for_goto(i32 %1, %union.tree_node* %0) #6, !dbg !8435
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !8422, metadata !DIExpression()), !dbg !8433
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8436
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8437
  %bf.load = load i64, i64* %2, align 8, !dbg !8438
  %bf.set = or i64 %bf.load, 16777216, !dbg !8438
  store i64 %bf.set, i64* %2, align 8, !dbg !8438
  %id = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8439
  %3 = getelementptr inbounds i32, i32* %id, i64 2, !dbg !8439
  %4 = load i32, i32* %3, align 8, !dbg !8439
  %str = bitcast i32* %id to i8**, !dbg !8440
  %5 = load i8*, i8** %str, align 8, !dbg !8440
  %call5 = tail call %union.tree_node* @build_string(i32 %4, i8* %5) #6, !dbg !8441
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !8420, metadata !DIExpression()), !dbg !8433
  %call6 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* %call5, %union.tree_node* %call2, %union.tree_node* %list.0) #6, !dbg !8442
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !8419, metadata !DIExpression()), !dbg !8426
  %call7 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !8443
  %tobool8 = icmp eq i8 %call7, 0, !dbg !8443
  br i1 %tobool8, label %if.else10, label %if.then9, !dbg !8445

if.else:                                          ; preds = %while.cond
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !8446
  br label %cleanup, !dbg !8448

if.then9:                                         ; preds = %if.then
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8449
  br label %cleanup, !dbg !8450

if.else10:                                        ; preds = %if.then
  %call11 = tail call %union.tree_node* @nreverse(%union.tree_node* %call6) #6, !dbg !8451
  br label %cleanup, !dbg !8452

cleanup:                                          ; preds = %if.then9, %if.else10, %if.else
  %list.1 = phi %union.tree_node* [ %call6, %if.then9 ], [ %call6, %if.else10 ], [ %list.0, %if.else ], !dbg !8426
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then9 ], [ false, %if.else10 ], [ false, %if.else ]
  %retval.1 = phi %union.tree_node* [ %retval.0, %if.then9 ], [ %call11, %if.else10 ], [ null, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.1, metadata !8419, metadata !DIExpression()), !dbg !8426
  br i1 %cleanup.dest.slot.0, label %while.cond, label %cleanup14, !llvm.loop !8453

cleanup14:                                        ; preds = %cleanup
  %retval.1.lcssa = phi %union.tree_node* [ %retval.1, %cleanup ]
  ret %union.tree_node* %retval.1.lcssa, !dbg !8454
}

declare dso_local %union.tree_node* @build_asm_stmt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_asm_expr(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @lookup_label_for_goto(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_begin_try_stmt(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_begin_catch_clause(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_finish_catch_clause() local_unnamed_addr #2

declare dso_local void @objc_build_finally_clause(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_finish_try_stmt() local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_build_synchronized(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @start_struct(i32, i32, %union.tree_node*, %struct.c_struct_parse_info**) local_unnamed_addr #2

declare dso_local %union.tree_node* @objc_get_class_ivars(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_struct_declaration(%struct.c_parser* %parser) unnamed_addr #5 !dbg !8455 {
entry:
  %all_prefix_attrs = alloca %union.tree_node*, align 8
  %ret = alloca %union.tree_node*, align 8
  %attrs = alloca %union.tree_node*, align 8
  %dummy = alloca i8, align 1
  %d = alloca %union.tree_node*, align 8
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8457, metadata !DIExpression()), !dbg !8481
  %0 = bitcast %union.tree_node** %all_prefix_attrs to i8*, !dbg !8482
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8482
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 54) #7, !dbg !8483
  %tobool = icmp eq i8 %call, 0, !dbg !8483
  br i1 %tobool, label %if.end, label %if.then, !dbg !8484

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc i32 @disable_extension_diagnostics() #7, !dbg !8485
  call void @llvm.dbg.value(metadata i32 %call1, metadata !8463, metadata !DIExpression()), !dbg !8486
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8487
  %call2 = tail call fastcc %union.tree_node* @c_parser_struct_declaration(%struct.c_parser* %parser) #7, !dbg !8488
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !8466, metadata !DIExpression()), !dbg !8486
  tail call fastcc void @restore_extension_diagnostics(i32 %call1) #7, !dbg !8489
  br label %cleanup114

if.end:                                           ; preds = %entry
  %call3 = tail call %struct.c_declspecs* @build_null_declspecs() #6, !dbg !8490
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %call3, metadata !8458, metadata !DIExpression()), !dbg !8481
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8491
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 2, !dbg !8492
  %1 = load i32, i32* %location, align 8, !dbg !8492
  call void @llvm.dbg.value(metadata i32 %1, metadata !8462, metadata !DIExpression()), !dbg !8481
  tail call fastcc void @c_parser_declspecs(%struct.c_parser* %parser, %struct.c_declspecs* %call3, i8 zeroext 0, i8 zeroext 1, i8 zeroext 1) #7, !dbg !8493
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !8494
  %bf.load = load i8, i8* %error, align 2, !dbg !8494
  %bf.clear = and i8 %bf.load, 1, !dbg !8494
  %tobool5 = icmp eq i8 %bf.clear, 0, !dbg !8496
  br i1 %tobool5, label %if.end7, label %cleanup114, !dbg !8497

if.end7:                                          ; preds = %if.end
  %declspecs_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call3, i64 0, i32 6, !dbg !8498
  %bf.load8 = load i8, i8* %declspecs_seen_p, align 8, !dbg !8498
  %bf.clear9 = and i8 %bf.load8, 2, !dbg !8498
  %tobool11 = icmp eq i8 %bf.clear9, 0, !dbg !8500
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !8501

if.then12:                                        ; preds = %if.end7
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0)) #7, !dbg !8502
  br label %cleanup114, !dbg !8504

if.end13:                                         ; preds = %if.end7
  %call14 = tail call %struct.c_declspecs* @finish_declspecs(%struct.c_declspecs* %call3) #6, !dbg !8505
  %call15 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !8506
  %tobool16 = icmp eq i8 %call15, 0, !dbg !8506
  br i1 %tobool16, label %if.end34, label %if.then17, !dbg !8507

if.then17:                                        ; preds = %if.end13
  %2 = bitcast %union.tree_node** %ret to i8*, !dbg !8508
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8508
  %bf.load18 = load i8, i8* %declspecs_seen_p, align 8, !dbg !8509
  %bf.clear20 = and i8 %bf.load18, 4, !dbg !8509
  %tobool22 = icmp eq i8 %bf.clear20, 0, !dbg !8510
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !8511

if.then23:                                        ; preds = %if.then17
  %call24 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %1, i32 834, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.60, i64 0, i64 0)) #6, !dbg !8512
  %3 = load i32, i32* @pedantic, align 4, !dbg !8514
  tail call void @shadow_tag_warned(%struct.c_declspecs* %call3, i32 %3) #6, !dbg !8515
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8467, metadata !DIExpression()), !dbg !8516
  store %union.tree_node* null, %union.tree_node** %ret, align 8, !dbg !8517
  br label %if.end33, !dbg !8518

if.else:                                          ; preds = %if.then17
  %4 = bitcast %union.tree_node** %attrs to i8*, !dbg !8519
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #8, !dbg !8519
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8470, metadata !DIExpression()), !dbg !8520
  store %union.tree_node* null, %union.tree_node** %attrs, align 8, !dbg !8521
  %call25 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8522
  %location26 = getelementptr inbounds %struct.c_token, %struct.c_token* %call25, i64 0, i32 2, !dbg !8523
  %5 = load i32, i32* %location26, align 8, !dbg !8523
  %call27 = tail call %struct.c_declarator* @build_id_declarator(%union.tree_node* null) #6, !dbg !8524
  call void @llvm.dbg.value(metadata %union.tree_node** %attrs, metadata !8470, metadata !DIExpression(DW_OP_deref)), !dbg !8520
  %call28 = call %union.tree_node* @grokfield(i32 %5, %struct.c_declarator* %call27, %struct.c_declspecs* %call3, %union.tree_node* null, %union.tree_node** nonnull %attrs) #6, !dbg !8525
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !8467, metadata !DIExpression()), !dbg !8516
  store %union.tree_node* %call28, %union.tree_node** %ret, align 8, !dbg !8526
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !8467, metadata !DIExpression()), !dbg !8516
  %tobool29 = icmp eq %union.tree_node* %call28, null, !dbg !8527
  br i1 %tobool29, label %if.end32, label %if.then30, !dbg !8529

if.then30:                                        ; preds = %if.else
  %6 = load %union.tree_node*, %union.tree_node** %attrs, align 8, !dbg !8530
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !8470, metadata !DIExpression()), !dbg !8520
  call void @llvm.dbg.value(metadata %union.tree_node** %ret, metadata !8467, metadata !DIExpression(DW_OP_deref)), !dbg !8516
  %call31 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %ret, %union.tree_node* %6, i32 0) #6, !dbg !8531
  %.pre.pre = load %union.tree_node*, %union.tree_node** %ret, align 8, !dbg !8532
  br label %if.end32, !dbg !8531

if.end32:                                         ; preds = %if.else, %if.then30
  %.pre = phi %union.tree_node* [ null, %if.else ], [ %.pre.pre, %if.then30 ], !dbg !8532
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #8, !dbg !8533
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then23
  %7 = phi %union.tree_node* [ %.pre, %if.end32 ], [ null, %if.then23 ], !dbg !8532
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8467, metadata !DIExpression()), !dbg !8516
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #8, !dbg !8534
  br label %cleanup114

if.end34:                                         ; preds = %if.end13
  tail call void @pending_xref_error() #6, !dbg !8535
  %attrs35 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call3, i64 0, i32 3, !dbg !8536
  %8 = load %union.tree_node*, %union.tree_node** %attrs35, align 8, !dbg !8536
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !8459, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !8460, metadata !DIExpression()), !dbg !8481
  store %union.tree_node* %8, %union.tree_node** %all_prefix_attrs, align 8, !dbg !8537
  store %union.tree_node* null, %union.tree_node** %attrs35, align 8, !dbg !8538
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8461, metadata !DIExpression()), !dbg !8481
  %9 = bitcast %union.tree_node** %d to i8*, !dbg !8539
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !8540
  %10 = bitcast %union.tree_node** %d to %struct.tree_common**, !dbg !8539
  br label %while.cond, !dbg !8543

while.cond:                                       ; preds = %cleanup110, %if.end34
  %decls.0 = phi %union.tree_node* [ null, %if.end34 ], [ %decls.1, %cleanup110 ], !dbg !8544
  call void @llvm.dbg.value(metadata %union.tree_node* %decls.0, metadata !8461, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !8475, metadata !DIExpression(DW_OP_deref)), !dbg !8545
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %dummy) #8, !dbg !8546
  call void @llvm.dbg.value(metadata i8 0, metadata !8475, metadata !DIExpression()), !dbg !8545
  store i8 0, i8* %dummy, align 1, !dbg !8547
  %call37 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !8548
  %tobool38 = icmp eq i8 %call37, 0, !dbg !8548
  br i1 %tobool38, label %if.else41, label %if.then39, !dbg !8550

if.then39:                                        ; preds = %while.cond
  %call40 = call %struct.c_declarator* @build_id_declarator(%union.tree_node* null) #6, !dbg !8551
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call40, metadata !8473, metadata !DIExpression()), !dbg !8545
  br label %if.end48, !dbg !8552

if.else41:                                        ; preds = %while.cond
  %bf.load43 = load i8, i8* %declspecs_seen_p, align 8, !dbg !8553
  %bf.lshr44 = lshr i8 %bf.load43, 2, !dbg !8553
  %bf.clear45 = and i8 %bf.lshr44, 1, !dbg !8553
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !8475, metadata !DIExpression(DW_OP_deref)), !dbg !8545
  %call47 = call fastcc %struct.c_declarator* @c_parser_declarator(%struct.c_parser* %parser, i8 zeroext %bf.clear45, i32 0, i8* nonnull %dummy) #7, !dbg !8554
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call47, metadata !8473, metadata !DIExpression()), !dbg !8545
  br label %if.end48

if.end48:                                         ; preds = %if.else41, %if.then39
  %declarator.0 = phi %struct.c_declarator* [ %call40, %if.then39 ], [ %call47, %if.else41 ], !dbg !8555
  call void @llvm.dbg.value(metadata %struct.c_declarator* %declarator.0, metadata !8473, metadata !DIExpression()), !dbg !8545
  %cmp = icmp eq %struct.c_declarator* %declarator.0, null, !dbg !8556
  br i1 %cmp, label %if.then50, label %if.end51, !dbg !8558

if.then50:                                        ; preds = %if.end48
  call fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) #7, !dbg !8559
  br label %cleanup110, !dbg !8561

if.end51:                                         ; preds = %if.end48
  %call52 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !8562
  %tobool54 = icmp eq i8 %call52, 0, !dbg !8562
  br i1 %tobool54, label %lor.lhs.false, label %if.then70, !dbg !8563

lor.lhs.false:                                    ; preds = %if.end51
  %call55 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !8564
  %tobool57 = icmp eq i8 %call55, 0, !dbg !8564
  br i1 %tobool57, label %lor.lhs.false58, label %if.then70, !dbg !8565

lor.lhs.false58:                                  ; preds = %lor.lhs.false
  %call59 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !8566
  %tobool61 = icmp eq i8 %call59, 0, !dbg !8566
  br i1 %tobool61, label %lor.lhs.false62, label %if.then70, !dbg !8567

lor.lhs.false62:                                  ; preds = %lor.lhs.false58
  %call63 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !8568
  %tobool65 = icmp eq i8 %call63, 0, !dbg !8568
  br i1 %tobool65, label %lor.lhs.false66, label %if.then70, !dbg !8569

lor.lhs.false66:                                  ; preds = %lor.lhs.false62
  %call67 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 52) #7, !dbg !8570
  %tobool69 = icmp eq i8 %call67, 0, !dbg !8570
  br i1 %tobool69, label %if.else108, label %if.then70, !dbg !8571

if.then70:                                        ; preds = %lor.lhs.false66, %lor.lhs.false62, %lor.lhs.false58, %lor.lhs.false, %if.end51
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8476, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8479, metadata !DIExpression()), !dbg !8539
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8, !dbg !8572
  %call71 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 18) #7, !dbg !8573
  %tobool72 = icmp eq i8 %call71, 0, !dbg !8573
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !8574

if.then73:                                        ; preds = %if.then70
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8575
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !8576
  %11 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8577
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !8479, metadata !DIExpression()), !dbg !8539
  br label %if.end74, !dbg !8578

if.end74:                                         ; preds = %if.then70, %if.then73
  %width.0 = phi %union.tree_node* [ %11, %if.then73 ], [ null, %if.then70 ], !dbg !8539
  call void @llvm.dbg.value(metadata %union.tree_node* %width.0, metadata !8479, metadata !DIExpression()), !dbg !8539
  %call75 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 52) #7, !dbg !8579
  %tobool76 = icmp eq i8 %call75, 0, !dbg !8579
  br i1 %tobool76, label %if.end79, label %if.then77, !dbg !8581

if.then77:                                        ; preds = %if.end74
  %call78 = call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !8582
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !8476, metadata !DIExpression()), !dbg !8539
  br label %if.end79, !dbg !8583

if.end79:                                         ; preds = %if.end74, %if.then77
  %postfix_attrs.0 = phi %union.tree_node* [ %call78, %if.then77 ], [ null, %if.end74 ], !dbg !8539
  call void @llvm.dbg.value(metadata %union.tree_node* %postfix_attrs.0, metadata !8476, metadata !DIExpression()), !dbg !8539
  %call80 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8584
  %location81 = getelementptr inbounds %struct.c_token, %struct.c_token* %call80, i64 0, i32 2, !dbg !8585
  %12 = load i32, i32* %location81, align 8, !dbg !8585
  call void @llvm.dbg.value(metadata %union.tree_node** %all_prefix_attrs, metadata !8460, metadata !DIExpression(DW_OP_deref)), !dbg !8481
  %call82 = call %union.tree_node* @grokfield(i32 %12, %struct.c_declarator* nonnull %declarator.0, %struct.c_declspecs* %call3, %union.tree_node* %width.0, %union.tree_node** nonnull %all_prefix_attrs) #6, !dbg !8586
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !8480, metadata !DIExpression()), !dbg !8539
  store %union.tree_node* %call82, %union.tree_node** %d, align 8, !dbg !8587
  %13 = load %union.tree_node*, %union.tree_node** %all_prefix_attrs, align 8, !dbg !8588
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !8460, metadata !DIExpression()), !dbg !8481
  %call83 = call %union.tree_node* @chainon(%union.tree_node* %postfix_attrs.0, %union.tree_node* %13) #6, !dbg !8589
  call void @llvm.dbg.value(metadata %union.tree_node** %d, metadata !8480, metadata !DIExpression(DW_OP_deref)), !dbg !8539
  %call84 = call %union.tree_node* @decl_attributes(%union.tree_node** nonnull %d, %union.tree_node* %call83, i32 0) #6, !dbg !8590
  %14 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !8591
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i64 0, i32 1, !dbg !8591
  store %union.tree_node* %decls.0, %union.tree_node** %chain, align 8, !dbg !8592
  %.cast = bitcast %struct.tree_common* %14 to %union.tree_node*, !dbg !8593
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !8480, metadata !DIExpression()), !dbg !8539
  call void @llvm.dbg.value(metadata %union.tree_node* %.cast, metadata !8461, metadata !DIExpression()), !dbg !8481
  %call85 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 52) #7, !dbg !8594
  %tobool86 = icmp eq i8 %call85, 0, !dbg !8594
  br i1 %tobool86, label %if.else90, label %if.then87, !dbg !8596

if.then87:                                        ; preds = %if.end79
  %call88 = call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !8597
  %call89 = call %union.tree_node* @chainon(%union.tree_node* %call88, %union.tree_node* %8) #6, !dbg !8598
  call void @llvm.dbg.value(metadata %union.tree_node* %call89, metadata !8460, metadata !DIExpression()), !dbg !8481
  br label %if.end91, !dbg !8599

if.else90:                                        ; preds = %if.end79
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !8460, metadata !DIExpression()), !dbg !8481
  br label %if.end91

if.end91:                                         ; preds = %if.else90, %if.then87
  %storemerge = phi %union.tree_node* [ %8, %if.else90 ], [ %call89, %if.then87 ], !dbg !8600
  store %union.tree_node* %storemerge, %union.tree_node** %all_prefix_attrs, align 8, !dbg !8600
  %call92 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !8601
  %tobool93 = icmp eq i8 %call92, 0, !dbg !8601
  br i1 %tobool93, label %if.else95, label %if.then94, !dbg !8603

if.then94:                                        ; preds = %if.end91
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8604
  br label %cleanup, !dbg !8605

if.else95:                                        ; preds = %if.end91
  %call96 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !8606
  %tobool98 = icmp eq i8 %call96, 0, !dbg !8606
  br i1 %tobool98, label %lor.lhs.false99, label %cleanup, !dbg !8608

lor.lhs.false99:                                  ; preds = %if.else95
  %call100 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !8609
  %tobool102 = icmp eq i8 %call100, 0, !dbg !8609
  br i1 %tobool102, label %if.else104, label %cleanup, !dbg !8610

if.else104:                                       ; preds = %lor.lhs.false99
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.61, i64 0, i64 0)) #7, !dbg !8611
  br label %cleanup, !dbg !8613

cleanup:                                          ; preds = %lor.lhs.false99, %if.else95, %if.then94, %if.else104
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.then94 ], [ 3, %if.else104 ], [ 3, %lor.lhs.false99 ], [ 3, %if.else95 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8, !dbg !8605
  br label %cleanup110

if.else108:                                       ; preds = %lor.lhs.false66
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.62, i64 0, i64 0)) #7, !dbg !8614
  br label %cleanup110, !dbg !8616

cleanup110:                                       ; preds = %cleanup, %if.else108, %if.then50
  %cleanup.dest.slot.1 = phi i32 [ 3, %if.then50 ], [ 3, %if.else108 ], [ %cleanup.dest.slot.0, %cleanup ]
  %decls.1 = phi %union.tree_node* [ %decls.0, %if.then50 ], [ %decls.0, %if.else108 ], [ %.cast, %cleanup ], !dbg !8481
  call void @llvm.dbg.value(metadata %union.tree_node* %decls.1, metadata !8461, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.value(metadata i8* %dummy, metadata !8475, metadata !DIExpression(DW_OP_deref)), !dbg !8545
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %dummy) #8, !dbg !8617
  %switch = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %switch, label %while.cond, label %cleanup114.loopexit, !llvm.loop !8618

cleanup114.loopexit:                              ; preds = %cleanup110
  %decls.1.lcssa = phi %union.tree_node* [ %decls.1, %cleanup110 ], !dbg !8481
  call void @llvm.dbg.value(metadata %union.tree_node* %decls.1.lcssa, metadata !8461, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.value(metadata %union.tree_node* %decls.1.lcssa, metadata !8461, metadata !DIExpression()), !dbg !8481
  call void @llvm.dbg.value(metadata %union.tree_node* %decls.1.lcssa, metadata !8461, metadata !DIExpression()), !dbg !8481
  br label %cleanup114, !dbg !8619

cleanup114:                                       ; preds = %cleanup114.loopexit, %if.end, %if.end33, %if.then12, %if.then
  %retval.0 = phi %union.tree_node* [ %call2, %if.then ], [ %7, %if.end33 ], [ null, %if.then12 ], [ null, %if.end ], [ %decls.1.lcssa, %cleanup114.loopexit ], !dbg !8481
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !8619
  ret %union.tree_node* %retval.0, !dbg !8619
}

declare dso_local %union.tree_node* @finish_struct(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.c_struct_parse_info*) local_unnamed_addr #2

declare dso_local void @shadow_tag_warned(%struct.c_declspecs*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @grokfield(i32, %struct.c_declarator*, %struct.c_declspecs*, %union.tree_node*, %union.tree_node**) local_unnamed_addr #2

declare dso_local %struct.c_declarator* @build_id_declarator(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @pop_maybe_used(i8 zeroext) local_unnamed_addr #2

declare dso_local zeroext i8 @variably_modified_type_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %struct.c_declarator* @make_pointer_declarator(%struct.c_declspecs*, %struct.c_declarator*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.c_declarator* @c_parser_direct_declarator(%struct.c_parser* %parser, i8 zeroext %type_seen_p, i32 %kind, i8* %seen_id) unnamed_addr #5 !dbg !8620 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8622, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i8 %type_seen_p, metadata !8623, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i32 %kind, metadata !8624, metadata !DIExpression()), !dbg !8639
  call void @llvm.dbg.value(metadata i8* %seen_id, metadata !8625, metadata !DIExpression()), !dbg !8639
  %cond = icmp eq i32 %kind, 1, !dbg !8640
  br i1 %cond, label %land.lhs.true20, label %land.lhs.true, !dbg !8640

land.lhs.true:                                    ; preds = %entry
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !8641
  %tobool = icmp eq i8 %call, 0, !dbg !8641
  br i1 %tobool, label %if.end, label %land.lhs.true1, !dbg !8642

land.lhs.true1:                                   ; preds = %land.lhs.true
  %tobool3 = icmp eq i8 %type_seen_p, 0, !dbg !8643
  br i1 %tobool3, label %lor.lhs.false, label %land.lhs.true4, !dbg !8644

land.lhs.true4:                                   ; preds = %land.lhs.true1
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8645
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call5, i64 0, i32 0, !dbg !8646
  %bf.load = load i32, i32* %0, align 8, !dbg !8646
  %bf.clear = and i32 %bf.load, 65280, !dbg !8646
  %cmp6 = icmp eq i32 %bf.clear, 256, !dbg !8647
  br i1 %cmp6, label %if.then, label %lor.lhs.false, !dbg !8648

lor.lhs.false:                                    ; preds = %land.lhs.true1, %land.lhs.true4
  %call8 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8649
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call8, i64 0, i32 0, !dbg !8650
  %bf.load9 = load i32, i32* %1, align 8, !dbg !8650
  %bf.clear11 = and i32 %bf.load9, 65280, !dbg !8650
  %cmp12 = icmp eq i32 %bf.clear11, 0, !dbg !8651
  br i1 %cmp12, label %if.then, label %if.end, !dbg !8652

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true4
  %call14 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8653
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call14, i64 0, i32 1, !dbg !8654
  %2 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8654
  %call15 = tail call %struct.c_declarator* @build_id_declarator(%union.tree_node* %2) #6, !dbg !8655
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call15, metadata !8626, metadata !DIExpression()), !dbg !8656
  store i8 1, i8* %seen_id, align 1, !dbg !8657
  %call16 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8658
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call16, i64 0, i32 2, !dbg !8659
  %3 = load i32, i32* %location, align 8, !dbg !8659
  %id_loc = getelementptr inbounds %struct.c_declarator, %struct.c_declarator* %call15, i64 0, i32 2, !dbg !8660
  store i32 %3, i32* %id_loc, align 8, !dbg !8661
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8662
  %4 = load i8, i8* %seen_id, align 1, !dbg !8663
  %call17 = tail call fastcc %struct.c_declarator* @c_parser_direct_declarator_inner(%struct.c_parser* %parser, i8 zeroext %4, %struct.c_declarator* %call15) #7, !dbg !8664
  br label %return

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %cmp18 = icmp eq i32 %kind, 0, !dbg !8665
  br i1 %cmp18, label %if.end28, label %land.lhs.true20, !dbg !8666

land.lhs.true20:                                  ; preds = %if.end, %entry
  %call21 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 39) #7, !dbg !8667
  %tobool23 = icmp eq i8 %call21, 0, !dbg !8667
  br i1 %tobool23, label %if.end28, label %if.then24, !dbg !8668

if.then24:                                        ; preds = %land.lhs.true20
  %call26 = tail call %struct.c_declarator* @build_id_declarator(%union.tree_node* null) #6, !dbg !8669
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call26, metadata !8629, metadata !DIExpression()), !dbg !8670
  %5 = load i8, i8* %seen_id, align 1, !dbg !8671
  %call27 = tail call fastcc %struct.c_declarator* @c_parser_direct_declarator_inner(%struct.c_parser* %parser, i8 zeroext %5, %struct.c_declarator* %call26) #7, !dbg !8672
  br label %return

if.end28:                                         ; preds = %land.lhs.true20, %if.end
  %call29 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !8673
  %tobool30 = icmp eq i8 %call29, 0, !dbg !8673
  br i1 %tobool30, label %if.else76, label %if.then31, !dbg !8674

if.then31:                                        ; preds = %if.end28
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8675
  %call33 = tail call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !8676
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !8632, metadata !DIExpression()), !dbg !8677
  %cmp34 = icmp eq i32 %kind, 0, !dbg !8678
  br i1 %cmp34, label %if.end55, label %land.lhs.true36, !dbg !8679

land.lhs.true36:                                  ; preds = %if.then31
  %call37 = tail call fastcc zeroext i8 @c_parser_next_token_starts_declspecs(%struct.c_parser* %parser) #7, !dbg !8680
  %tobool39 = icmp eq i8 %call37, 0, !dbg !8680
  br i1 %tobool39, label %lor.lhs.false40, label %if.then44, !dbg !8681

lor.lhs.false40:                                  ; preds = %land.lhs.true36
  %call41 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !8682
  %tobool43 = icmp eq i8 %call41, 0, !dbg !8682
  br i1 %tobool43, label %if.end55, label %if.then44, !dbg !8683

if.then44:                                        ; preds = %lor.lhs.false40, %land.lhs.true36
  %call48 = tail call fastcc %struct.c_arg_info* @c_parser_parms_declarator(%struct.c_parser* %parser, i8 zeroext 0, %union.tree_node* %call33) #7, !dbg !8684
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %call48, metadata !8636, metadata !DIExpression()), !dbg !8685
  %cmp49 = icmp eq %struct.c_arg_info* %call48, null, !dbg !8686
  br i1 %cmp49, label %return, label %if.else, !dbg !8688

if.else:                                          ; preds = %if.then44
  %call52 = tail call %struct.c_declarator* @build_id_declarator(%union.tree_node* null) #6, !dbg !8689
  %call53 = tail call %struct.c_declarator* @build_function_declarator(%struct.c_arg_info* nonnull %call48, %struct.c_declarator* %call52) #6, !dbg !8691
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call53, metadata !8635, metadata !DIExpression()), !dbg !8677
  %6 = load i8, i8* %seen_id, align 1, !dbg !8692
  %call54 = tail call fastcc %struct.c_declarator* @c_parser_direct_declarator_inner(%struct.c_parser* %parser, i8 zeroext %6, %struct.c_declarator* %call53) #7, !dbg !8693
  br label %return, !dbg !8694

if.end55:                                         ; preds = %lor.lhs.false40, %if.then31
  %call56 = tail call fastcc %struct.c_declarator* @c_parser_declarator(%struct.c_parser* %parser, i8 zeroext %type_seen_p, i32 %kind, i8* %seen_id) #7, !dbg !8695
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call56, metadata !8635, metadata !DIExpression()), !dbg !8677
  %cmp57 = icmp ne %struct.c_declarator* %call56, null, !dbg !8696
  %cmp60 = icmp ne %union.tree_node* %call33, null, !dbg !8698
  %or.cond = and i1 %cmp57, %cmp60, !dbg !8699
  br i1 %or.cond, label %if.then62, label %if.end64, !dbg !8699

if.then62:                                        ; preds = %if.end55
  %call63 = tail call %struct.c_declarator* @build_attrs_declarator(%union.tree_node* nonnull %call33, %struct.c_declarator* nonnull %call56) #6, !dbg !8700
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call63, metadata !8635, metadata !DIExpression()), !dbg !8677
  br label %if.end64, !dbg !8701

if.end64:                                         ; preds = %if.then62, %if.end55
  %inner32.0 = phi %struct.c_declarator* [ %call63, %if.then62 ], [ %call56, %if.end55 ], !dbg !8677
  call void @llvm.dbg.value(metadata %struct.c_declarator* %inner32.0, metadata !8635, metadata !DIExpression()), !dbg !8677
  %call65 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !8702
  %tobool66 = icmp eq i8 %call65, 0, !dbg !8702
  br i1 %tobool66, label %if.else73, label %if.then67, !dbg !8704

if.then67:                                        ; preds = %if.end64
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8705
  %cmp68 = icmp eq %struct.c_declarator* %inner32.0, null, !dbg !8707
  br i1 %cmp68, label %return, label %if.else71, !dbg !8709

if.else71:                                        ; preds = %if.then67
  %7 = load i8, i8* %seen_id, align 1, !dbg !8710
  %call72 = tail call fastcc %struct.c_declarator* @c_parser_direct_declarator_inner(%struct.c_parser* %parser, i8 zeroext %7, %struct.c_declarator* nonnull %inner32.0) #7, !dbg !8711
  br label %return, !dbg !8712

if.else73:                                        ; preds = %if.end64
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !8713
  br label %return, !dbg !8715

if.else76:                                        ; preds = %if.end28
  %cmp77 = icmp eq i32 %kind, 0, !dbg !8716
  br i1 %cmp77, label %if.then79, label %if.else80, !dbg !8719

if.then79:                                        ; preds = %if.else76
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.64, i64 0, i64 0)) #7, !dbg !8720
  br label %return, !dbg !8722

if.else80:                                        ; preds = %if.else76
  %call81 = tail call %struct.c_declarator* @build_id_declarator(%union.tree_node* null) #6, !dbg !8723
  br label %return, !dbg !8724

return:                                           ; preds = %if.else71, %if.else73, %if.then44, %if.else, %if.then67, %if.else80, %if.then79, %if.then24, %if.then
  %retval.2 = phi %struct.c_declarator* [ %call17, %if.then ], [ %call27, %if.then24 ], [ null, %if.then79 ], [ %call81, %if.else80 ], [ %call72, %if.else71 ], [ null, %if.else73 ], [ %call54, %if.else ], [ null, %if.then44 ], [ null, %if.then67 ], !dbg !8639
  ret %struct.c_declarator* %retval.2, !dbg !8725
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.c_declarator* @c_parser_direct_declarator_inner(%struct.c_parser* %parser, i8 zeroext %id_present, %struct.c_declarator* %inner) unnamed_addr #5 !dbg !8726 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  %tmp33 = alloca %struct.c_expr, align 8
  %tmp37 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8730, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata i8 %id_present, metadata !8731, metadata !DIExpression()), !dbg !8745
  call void @llvm.dbg.value(metadata %struct.c_declarator* %inner, metadata !8732, metadata !DIExpression()), !dbg !8745
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 39) #7, !dbg !8746
  %tobool = icmp eq i8 %call, 0, !dbg !8746
  br i1 %tobool, label %if.else59, label %if.then, !dbg !8747

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8748
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !8749
  %0 = load i32, i32* %location, align 8, !dbg !8749
  call void @llvm.dbg.value(metadata i32 %0, metadata !8733, metadata !DIExpression()), !dbg !8750
  %call2 = tail call %struct.c_declspecs* @build_null_declspecs() #6, !dbg !8751
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %call2, metadata !8737, metadata !DIExpression()), !dbg !8750
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8752
  tail call fastcc void @c_parser_declspecs(%struct.c_parser* %parser, %struct.c_declspecs* %call2, i8 zeroext 0, i8 zeroext 0, i8 zeroext 1) #7, !dbg !8753
  %call3 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 0) #7, !dbg !8754
  call void @llvm.dbg.value(metadata i8 %call3, metadata !8738, metadata !DIExpression()), !dbg !8750
  %tobool4 = icmp eq i8 %call3, 0, !dbg !8755
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !8757

if.then5:                                         ; preds = %if.then
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8758
  br label %if.end, !dbg !8758

if.end:                                           ; preds = %if.then, %if.then5
  br i1 %tobool4, label %if.end9, label %land.lhs.true, !dbg !8759

land.lhs.true:                                    ; preds = %if.end
  %declspecs_seen_p = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call2, i64 0, i32 6, !dbg !8761
  %bf.load = load i8, i8* %declspecs_seen_p, align 8, !dbg !8761
  %bf.clear = and i8 %bf.load, 2, !dbg !8761
  %tobool7 = icmp eq i8 %bf.clear, 0, !dbg !8762
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !8763

if.then8:                                         ; preds = %land.lhs.true
  tail call fastcc void @c_parser_declspecs(%struct.c_parser* %parser, %struct.c_declspecs* %call2, i8 zeroext 0, i8 zeroext 0, i8 zeroext 1) #7, !dbg !8764
  br label %if.end9, !dbg !8764

if.end9:                                          ; preds = %land.lhs.true, %if.end, %if.then8
  %declspecs_seen_p10 = getelementptr inbounds %struct.c_declspecs, %struct.c_declspecs* %call2, i64 0, i32 6, !dbg !8765
  %bf.load11 = load i8, i8* %declspecs_seen_p10, align 8, !dbg !8765
  %bf.clear13 = and i8 %bf.load11, 2, !dbg !8765
  %tobool15 = icmp eq i8 %bf.clear13, 0, !dbg !8767
  %spec.select = select i1 %tobool15, %struct.c_declspecs* null, %struct.c_declspecs* %call2, !dbg !8768
  call void @llvm.dbg.value(metadata %struct.c_declspecs* %spec.select, metadata !8737, metadata !DIExpression()), !dbg !8750
  br i1 %tobool4, label %if.else, label %if.then19, !dbg !8769

if.then19:                                        ; preds = %if.end9
  call void @llvm.dbg.value(metadata i8 0, metadata !8739, metadata !DIExpression()), !dbg !8750
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !8770
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !8773
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8773
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !8740, metadata !DIExpression()), !dbg !8750
  br label %if.end41, !dbg !8774

if.else:                                          ; preds = %if.end9
  %call20 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 40) #7, !dbg !8775
  %tobool21 = icmp eq i8 %call20, 0, !dbg !8775
  br i1 %tobool21, label %if.else23, label %if.end41, !dbg !8778

if.else23:                                        ; preds = %if.else
  %call24 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 6) #7, !dbg !8779
  %tobool25 = icmp eq i8 %call24, 0, !dbg !8779
  br i1 %tobool25, label %if.else36, label %if.then26, !dbg !8781

if.then26:                                        ; preds = %if.else23
  %call27 = tail call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !8782
  %2 = getelementptr inbounds %struct.c_token, %struct.c_token* %call27, i64 0, i32 0, !dbg !8785
  %bf.load28 = load i32, i32* %2, align 8, !dbg !8785
  %bf.clear29 = and i32 %bf.load28, 255, !dbg !8785
  %cmp = icmp eq i32 %bf.clear29, 40, !dbg !8786
  br i1 %cmp, label %if.then31, label %if.else32, !dbg !8787

if.then31:                                        ; preds = %if.then26
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8740, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8 1, metadata !8739, metadata !DIExpression()), !dbg !8750
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8788
  br label %if.end41, !dbg !8790

if.else32:                                        ; preds = %if.then26
  call void @llvm.dbg.value(metadata i8 0, metadata !8739, metadata !DIExpression()), !dbg !8750
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp33, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !8791
  %value34 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp33, i64 0, i32 0, !dbg !8793
  %3 = load %union.tree_node*, %union.tree_node** %value34, align 8, !dbg !8793
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !8740, metadata !DIExpression()), !dbg !8750
  br label %if.end41

if.else36:                                        ; preds = %if.else23
  call void @llvm.dbg.value(metadata i8 0, metadata !8739, metadata !DIExpression()), !dbg !8750
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp37, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !8794
  %value38 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp37, i64 0, i32 0, !dbg !8796
  %4 = load %union.tree_node*, %union.tree_node** %value38, align 8, !dbg !8796
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8740, metadata !DIExpression()), !dbg !8750
  br label %if.end41

if.end41:                                         ; preds = %if.else, %if.then31, %if.else32, %if.else36, %if.then19
  %star_seen.3 = phi i8 [ 0, %if.then19 ], [ 0, %if.else ], [ 0, %if.else36 ], [ 1, %if.then31 ], [ 0, %if.else32 ], !dbg !8797
  %dimen.3 = phi %union.tree_node* [ %1, %if.then19 ], [ null, %if.else ], [ %4, %if.else36 ], [ null, %if.then31 ], [ %3, %if.else32 ], !dbg !8797
  call void @llvm.dbg.value(metadata %union.tree_node* %dimen.3, metadata !8740, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.value(metadata i8 %star_seen.3, metadata !8739, metadata !DIExpression()), !dbg !8750
  %call42 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 40) #7, !dbg !8798
  %tobool43 = icmp eq i8 %call42, 0, !dbg !8798
  br i1 %tobool43, label %if.else45, label %if.then44, !dbg !8800

if.then44:                                        ; preds = %if.end41
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8801
  %call47 = call %struct.c_declarator* @build_array_declarator(i32 %0, %union.tree_node* %dimen.3, %struct.c_declspecs* %spec.select, i8 zeroext %call3, i8 zeroext %star_seen.3) #6, !dbg !8802
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call47, metadata !8736, metadata !DIExpression()), !dbg !8750
  %cmp48 = icmp eq %struct.c_declarator* %call47, null, !dbg !8803
  br i1 %cmp48, label %return, label %if.end51, !dbg !8805

if.else45:                                        ; preds = %if.end41
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 40, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.22, i64 0, i64 0)) #7, !dbg !8806
  br label %return, !dbg !8808

if.end51:                                         ; preds = %if.then44
  %call52 = call %struct.c_declarator* @set_array_declarator_inner(%struct.c_declarator* nonnull %call47, %struct.c_declarator* %inner) #6, !dbg !8809
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call52, metadata !8732, metadata !DIExpression()), !dbg !8745
  %call53 = call fastcc %struct.c_declarator* @c_parser_direct_declarator_inner(%struct.c_parser* %parser, i8 zeroext %id_present, %struct.c_declarator* %call52) #7, !dbg !8810
  br label %return, !dbg !8811

if.else59:                                        ; preds = %entry
  %call60 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !8812
  %tobool61 = icmp eq i8 %call60, 0, !dbg !8812
  br i1 %tobool61, label %return, label %if.then62, !dbg !8813

if.then62:                                        ; preds = %if.else59
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8814
  %call63 = tail call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !8815
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !8741, metadata !DIExpression()), !dbg !8816
  %call64 = tail call fastcc %struct.c_arg_info* @c_parser_parms_declarator(%struct.c_parser* %parser, i8 zeroext %id_present, %union.tree_node* %call63) #7, !dbg !8817
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %call64, metadata !8744, metadata !DIExpression()), !dbg !8816
  %cmp65 = icmp eq %struct.c_arg_info* %call64, null, !dbg !8818
  br i1 %cmp65, label %return, label %if.else68, !dbg !8820

if.else68:                                        ; preds = %if.then62
  %call69 = tail call %struct.c_declarator* @build_function_declarator(%struct.c_arg_info* nonnull %call64, %struct.c_declarator* %inner) #6, !dbg !8821
  call void @llvm.dbg.value(metadata %struct.c_declarator* %call69, metadata !8732, metadata !DIExpression()), !dbg !8745
  %call70 = tail call fastcc %struct.c_declarator* @c_parser_direct_declarator_inner(%struct.c_parser* %parser, i8 zeroext %id_present, %struct.c_declarator* %call69) #7, !dbg !8823
  br label %return, !dbg !8824

return:                                           ; preds = %if.else59, %if.else68, %if.then62, %if.else45, %if.end51, %if.then44
  %retval.2 = phi %struct.c_declarator* [ %call53, %if.end51 ], [ null, %if.else45 ], [ null, %if.then44 ], [ %call70, %if.else68 ], [ null, %if.then62 ], [ %inner, %if.else59 ], !dbg !8745
  ret %struct.c_declarator* %retval.2, !dbg !8825
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.c_arg_info* @c_parser_parms_declarator(%struct.c_parser* %parser, i8 zeroext %id_list_ok, %union.tree_node* %attrs) unnamed_addr #5 !dbg !8826 {
entry:
  %list = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8830, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata i8 %id_list_ok, metadata !8831, metadata !DIExpression()), !dbg !8842
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !8832, metadata !DIExpression()), !dbg !8842
  tail call void @push_scope() #6, !dbg !8843
  tail call void @declare_parm_level() #6, !dbg !8844
  %tobool = icmp eq i8 %id_list_ok, 0, !dbg !8845
  %tobool1 = icmp ne %union.tree_node* %attrs, null, !dbg !8846
  %or.cond = or i1 %tobool, %tobool1, !dbg !8847
  br i1 %or.cond, label %if.else63, label %land.lhs.true2, !dbg !8847

land.lhs.true2:                                   ; preds = %entry
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !8848
  %tobool4 = icmp eq i8 %call, 0, !dbg !8848
  br i1 %tobool4, label %if.else63, label %land.lhs.true5, !dbg !8849

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %call6 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8850
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call6, i64 0, i32 0, !dbg !8851
  %bf.load = load i32, i32* %0, align 8, !dbg !8851
  %bf.clear = and i32 %bf.load, 65280, !dbg !8851
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !8852
  br i1 %cmp, label %if.then, label %if.else63, !dbg !8853

if.then:                                          ; preds = %land.lhs.true5
  %1 = bitcast %union.tree_node** %list to i8*, !dbg !8854
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8854
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8833, metadata !DIExpression()), !dbg !8855
  store %union.tree_node* null, %union.tree_node** %list, align 8, !dbg !8856
  call void @llvm.dbg.value(metadata %union.tree_node** %list, metadata !8836, metadata !DIExpression()), !dbg !8855
  br label %while.cond, !dbg !8857

while.cond:                                       ; preds = %if.end, %if.then
  %nextp.0 = phi %union.tree_node** [ %list, %if.then ], [ %chain, %if.end ], !dbg !8855
  call void @llvm.dbg.value(metadata %union.tree_node** %nextp.0, metadata !8836, metadata !DIExpression()), !dbg !8855
  %call8 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !8858
  %tobool10 = icmp eq i8 %call8, 0, !dbg !8858
  br i1 %tobool10, label %while.end.loopexit, label %land.rhs, !dbg !8859

land.rhs:                                         ; preds = %while.cond
  %call11 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8860
  %2 = getelementptr inbounds %struct.c_token, %struct.c_token* %call11, i64 0, i32 0, !dbg !8861
  %bf.load12 = load i32, i32* %2, align 8, !dbg !8861
  %bf.clear14 = and i32 %bf.load12, 65280, !dbg !8861
  %cmp15 = icmp eq i32 %bf.clear14, 0, !dbg !8862
  br i1 %cmp15, label %while.body, label %while.end.loopexit, !dbg !8857

while.body:                                       ; preds = %land.rhs
  %call17 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8863
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call17, i64 0, i32 1, !dbg !8863
  %3 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !8863
  %call18 = tail call %union.tree_node* @build_tree_list_stat(%union.tree_node* null, %union.tree_node* %3) #6, !dbg !8863
  store %union.tree_node* %call18, %union.tree_node** %nextp.0, align 8, !dbg !8865
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !8836, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !8855
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8866
  %call19 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 19) #7, !dbg !8867
  %tobool20 = icmp eq i8 %call19, 0, !dbg !8867
  br i1 %tobool20, label %if.end, label %while.end.loopexit, !dbg !8869

if.end:                                           ; preds = %while.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8870
  call void @llvm.dbg.value(metadata %union.tree_node** %chain, metadata !8836, metadata !DIExpression()), !dbg !8855
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8871
  %call22 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !8872
  %tobool23 = icmp eq i8 %call22, 0, !dbg !8872
  br i1 %tobool23, label %while.cond, label %if.then24, !dbg !8874, !llvm.loop !8875

if.then24:                                        ; preds = %if.end
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !8877
  br label %while.end, !dbg !8879

while.end.loopexit:                               ; preds = %land.rhs, %while.cond, %while.body
  br label %while.end, !dbg !8880

while.end:                                        ; preds = %while.end.loopexit, %if.then24
  %call26 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !8880
  %tobool27 = icmp eq i8 %call26, 0, !dbg !8880
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !8881

if.then28:                                        ; preds = %while.end
  store i64 48, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !8882
  %4 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !8882
  %5 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !8882
  %sub.ptr.sub = sub i64 %4, %5, !dbg !8882
  %cmp29 = icmp slt i64 %sub.ptr.sub, 48, !dbg !8882
  %6 = inttoptr i64 %5 to i8*, !dbg !8882
  br i1 %cmp29, label %cond.true, label %cond.end, !dbg !8882

cond.true:                                        ; preds = %if.then28
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 48) #6, !dbg !8882
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !8882
  %.pre1 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !8882
  br label %cond.end, !dbg !8882

cond.end:                                         ; preds = %if.then28, %cond.true
  %7 = phi i8* [ %6, %if.then28 ], [ %.pre1, %cond.true ], !dbg !8882
  %8 = phi i64 [ 48, %if.then28 ], [ %.pre, %cond.true ], !dbg !8882
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 %8, !dbg !8882
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !8882
  %9 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !8882
  %cmp32 = icmp eq i8* %add.ptr, %9, !dbg !8882
  %10 = ptrtoint i8* %9 to i64, !dbg !8882
  %11 = ptrtoint i8* %add.ptr to i64, !dbg !8882
  br i1 %cmp32, label %cond.true34, label %cond.end38, !dbg !8882

cond.true34:                                      ; preds = %cond.end
  %bf.load35 = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !8882
  %bf.set = or i8 %bf.load35, 2, !dbg !8882
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !8882
  br label %cond.end38, !dbg !8882

cond.end38:                                       ; preds = %cond.end, %cond.true34
  store i64 %10, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !8882
  %12 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !8882
  %conv44 = sext i32 %12 to i64, !dbg !8882
  %add = add nsw i64 %11, %conv44, !dbg !8882
  %neg = xor i32 %12, -1, !dbg !8882
  %conv45 = sext i32 %neg to i64, !dbg !8882
  %and = and i64 %add, %conv45, !dbg !8882
  %13 = inttoptr i64 %and to i8*, !dbg !8882
  store i8* %13, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !8882
  %14 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !8882
  %sub.ptr.sub48 = sub i64 %and, %14, !dbg !8882
  %15 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !8882
  %sub.ptr.sub51 = sub i64 %15, %14, !dbg !8882
  %cmp52 = icmp sgt i64 %sub.ptr.sub48, %sub.ptr.sub51, !dbg !8882
  %16 = bitcast i8* %9 to %struct.c_arg_info*, !dbg !8882
  br i1 %cmp52, label %cond.true54, label %cond.end56, !dbg !8882

cond.true54:                                      ; preds = %cond.end38
  store i64 %15, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !8882
  br label %cond.end56, !dbg !8882

cond.end56:                                       ; preds = %cond.end38, %cond.true54
  %17 = phi i64 [ %and, %cond.end38 ], [ %15, %cond.true54 ], !dbg !8882
  store i64 %17, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !8882
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %16, metadata !8837, metadata !DIExpression()), !dbg !8883
  %parms = bitcast i8* %9 to %union.tree_node**, !dbg !8884
  store %union.tree_node* null, %union.tree_node** %parms, align 8, !dbg !8885
  %tags = getelementptr inbounds i8, i8* %9, i64 8, !dbg !8886
  %18 = bitcast i8* %tags to %union.tree_node**, !dbg !8886
  store %union.tree_node* null, %union.tree_node** %18, align 8, !dbg !8887
  %19 = bitcast %union.tree_node** %list to i64*, !dbg !8888
  %20 = load i64, i64* %19, align 8, !dbg !8888
  %types = getelementptr inbounds i8, i8* %9, i64 16, !dbg !8889
  %21 = bitcast i8* %types to i64*, !dbg !8890
  store i64 %20, i64* %21, align 8, !dbg !8890
  %others = getelementptr inbounds i8, i8* %9, i64 24, !dbg !8891
  %22 = bitcast i8* %others to %union.tree_node**, !dbg !8891
  store %union.tree_node* null, %union.tree_node** %22, align 8, !dbg !8892
  %pending_sizes = getelementptr inbounds i8, i8* %9, i64 32, !dbg !8893
  %23 = bitcast i8* %pending_sizes to %union.tree_node**, !dbg !8893
  store %union.tree_node* null, %union.tree_node** %23, align 8, !dbg !8894
  %24 = getelementptr inbounds i8, i8* %9, i64 40, !dbg !8895
  %bf.load58 = load i8, i8* %24, align 8, !dbg !8896
  %bf.clear59 = and i8 %bf.load58, -2, !dbg !8896
  store i8 %bf.clear59, i8* %24, align 8, !dbg !8896
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8897
  %call60 = tail call %union.tree_node* @pop_scope() #6, !dbg !8898
  br label %cleanup

if.else:                                          ; preds = %while.end
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !8899
  %call61 = tail call %union.tree_node* @pop_scope() #6, !dbg !8901
  br label %cleanup, !dbg !8902

cleanup:                                          ; preds = %if.else, %cond.end56
  %retval.0 = phi %struct.c_arg_info* [ %16, %cond.end56 ], [ null, %if.else ], !dbg !8903
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !8904
  br label %return

if.else63:                                        ; preds = %land.lhs.true2, %entry, %land.lhs.true5
  %call65 = tail call fastcc %struct.c_arg_info* @c_parser_parms_list_declarator(%struct.c_parser* %parser, %union.tree_node* %attrs) #7, !dbg !8905
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %call65, metadata !8840, metadata !DIExpression()), !dbg !8906
  %call66 = tail call %union.tree_node* @pop_scope() #6, !dbg !8907
  br label %return

return:                                           ; preds = %if.else63, %cleanup
  %retval.1 = phi %struct.c_arg_info* [ %call65, %if.else63 ], [ %retval.0, %cleanup ], !dbg !8908
  ret %struct.c_arg_info* %retval.1, !dbg !8909
}

declare dso_local %struct.c_declarator* @build_function_declarator(%struct.c_arg_info*, %struct.c_declarator*) local_unnamed_addr #2

declare dso_local %struct.c_declarator* @build_attrs_declarator(%union.tree_node*, %struct.c_declarator*) local_unnamed_addr #2

declare dso_local %struct.c_declarator* @build_array_declarator(i32, %union.tree_node*, %struct.c_declspecs*, i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.c_declarator* @set_array_declarator_inner(%struct.c_declarator*, %struct.c_declarator*) local_unnamed_addr #2

declare dso_local void @push_scope() local_unnamed_addr #2

declare dso_local void @declare_parm_level() local_unnamed_addr #2

declare dso_local %union.tree_node* @pop_scope() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %struct.c_arg_info* @c_parser_parms_list_declarator(%struct.c_parser* %parser, %union.tree_node* %attrs) unnamed_addr #5 !dbg !8910 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !8914, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs, metadata !8915, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.value(metadata i8 0, metadata !8916, metadata !DIExpression()), !dbg !8940
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !8941
  %tobool = icmp eq i8 %call, 0, !dbg !8941
  br i1 %tobool, label %if.end, label %if.then, !dbg !8942

if.then:                                          ; preds = %entry
  store i64 48, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !8943
  %0 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !8943
  %1 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !8943
  %sub.ptr.sub = sub i64 %0, %1, !dbg !8943
  %cmp = icmp slt i64 %sub.ptr.sub, 48, !dbg !8943
  %2 = inttoptr i64 %1 to i8*, !dbg !8943
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !8943

cond.true:                                        ; preds = %if.then
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 48) #6, !dbg !8943
  %.pre = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !8943
  %.pre2 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !8943
  br label %cond.end, !dbg !8943

cond.end:                                         ; preds = %if.then, %cond.true
  %3 = phi i8* [ %2, %if.then ], [ %.pre2, %cond.true ], !dbg !8943
  %4 = phi i64 [ 48, %if.then ], [ %.pre, %cond.true ], !dbg !8943
  %add.ptr = getelementptr inbounds i8, i8* %3, i64 %4, !dbg !8943
  store i8* %add.ptr, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !8943
  %5 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !8943
  %cmp1 = icmp eq i8* %add.ptr, %5, !dbg !8943
  %6 = ptrtoint i8* %5 to i64, !dbg !8943
  %7 = ptrtoint i8* %add.ptr to i64, !dbg !8943
  br i1 %cmp1, label %cond.true3, label %cond.end5, !dbg !8943

cond.true3:                                       ; preds = %cond.end
  %bf.load = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !8943
  %bf.set = or i8 %bf.load, 2, !dbg !8943
  store i8 %bf.set, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !8943
  br label %cond.end5, !dbg !8943

cond.end5:                                        ; preds = %cond.end, %cond.true3
  store i64 %6, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !8943
  %8 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !8943
  %conv11 = sext i32 %8 to i64, !dbg !8943
  %add = add nsw i64 %7, %conv11, !dbg !8943
  %neg = xor i32 %8, -1, !dbg !8943
  %conv12 = sext i32 %neg to i64, !dbg !8943
  %and = and i64 %add, %conv12, !dbg !8943
  %9 = inttoptr i64 %and to i8*, !dbg !8943
  store i8* %9, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !8943
  %10 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !8943
  %sub.ptr.sub15 = sub i64 %and, %10, !dbg !8943
  %11 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !8943
  %sub.ptr.sub18 = sub i64 %11, %10, !dbg !8943
  %cmp19 = icmp sgt i64 %sub.ptr.sub15, %sub.ptr.sub18, !dbg !8943
  %12 = bitcast i8* %5 to %struct.c_arg_info*, !dbg !8943
  br i1 %cmp19, label %cond.true21, label %cond.end23, !dbg !8943

cond.true21:                                      ; preds = %cond.end5
  store i64 %11, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !8943
  br label %cond.end23, !dbg !8943

cond.end23:                                       ; preds = %cond.end5, %cond.true21
  %13 = phi i64 [ %and, %cond.end5 ], [ %11, %cond.true21 ], !dbg !8943
  store i64 %13, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !8943
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %12, metadata !8917, metadata !DIExpression()), !dbg !8944
  %parms = bitcast i8* %5 to %union.tree_node**, !dbg !8945
  store %union.tree_node* null, %union.tree_node** %parms, align 8, !dbg !8946
  %tags = getelementptr inbounds i8, i8* %5, i64 8, !dbg !8947
  %14 = bitcast i8* %tags to %union.tree_node**, !dbg !8947
  store %union.tree_node* null, %union.tree_node** %14, align 8, !dbg !8948
  %types = getelementptr inbounds i8, i8* %5, i64 16, !dbg !8949
  %15 = bitcast i8* %types to %union.tree_node**, !dbg !8949
  store %union.tree_node* null, %union.tree_node** %15, align 8, !dbg !8950
  %others = getelementptr inbounds i8, i8* %5, i64 24, !dbg !8951
  %16 = bitcast i8* %others to %union.tree_node**, !dbg !8951
  store %union.tree_node* null, %union.tree_node** %16, align 8, !dbg !8952
  %pending_sizes = getelementptr inbounds i8, i8* %5, i64 32, !dbg !8953
  %17 = bitcast i8* %pending_sizes to %union.tree_node**, !dbg !8953
  store %union.tree_node* null, %union.tree_node** %17, align 8, !dbg !8954
  %18 = getelementptr inbounds i8, i8* %5, i64 40, !dbg !8955
  %bf.load25 = load i8, i8* %18, align 8, !dbg !8956
  %bf.clear26 = and i8 %bf.load25, -2, !dbg !8956
  store i8 %bf.clear26, i8* %18, align 8, !dbg !8956
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8957
  br label %cleanup226

if.end:                                           ; preds = %entry
  %call27 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 44) #7, !dbg !8958
  %tobool28 = icmp eq i8 %call27, 0, !dbg !8958
  br i1 %tobool28, label %while.cond.preheader, label %if.then29, !dbg !8959

while.cond.preheader:                             ; preds = %if.end
  br label %while.cond, !dbg !8960

if.then29:                                        ; preds = %if.end
  store i64 48, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !8961
  %19 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !8961
  %20 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !8961
  %sub.ptr.sub33 = sub i64 %19, %20, !dbg !8961
  %cmp34 = icmp slt i64 %sub.ptr.sub33, 48, !dbg !8961
  %21 = inttoptr i64 %20 to i8*, !dbg !8961
  br i1 %cmp34, label %cond.true36, label %cond.end39, !dbg !8961

cond.true36:                                      ; preds = %if.then29
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 48) #6, !dbg !8961
  %.pre3 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !8961
  %.pre4 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !8961
  br label %cond.end39, !dbg !8961

cond.end39:                                       ; preds = %if.then29, %cond.true36
  %22 = phi i8* [ %21, %if.then29 ], [ %.pre4, %cond.true36 ], !dbg !8961
  %23 = phi i64 [ 48, %if.then29 ], [ %.pre3, %cond.true36 ], !dbg !8961
  %add.ptr41 = getelementptr inbounds i8, i8* %22, i64 %23, !dbg !8961
  store i8* %add.ptr41, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !8961
  %24 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !8961
  %cmp42 = icmp eq i8* %add.ptr41, %24, !dbg !8961
  %25 = ptrtoint i8* %24 to i64, !dbg !8961
  %26 = ptrtoint i8* %add.ptr41 to i64, !dbg !8961
  br i1 %cmp42, label %cond.true44, label %cond.end49, !dbg !8961

cond.true44:                                      ; preds = %cond.end39
  %bf.load45 = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !8961
  %bf.set47 = or i8 %bf.load45, 2, !dbg !8961
  store i8 %bf.set47, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !8961
  br label %cond.end49, !dbg !8961

cond.end49:                                       ; preds = %cond.end39, %cond.true44
  store i64 %25, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !8961
  %27 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !8961
  %conv55 = sext i32 %27 to i64, !dbg !8961
  %add56 = add nsw i64 %26, %conv55, !dbg !8961
  %neg57 = xor i32 %27, -1, !dbg !8961
  %conv58 = sext i32 %neg57 to i64, !dbg !8961
  %and59 = and i64 %add56, %conv58, !dbg !8961
  %28 = inttoptr i64 %and59 to i8*, !dbg !8961
  store i8* %28, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !8961
  %29 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !8961
  %sub.ptr.sub62 = sub i64 %and59, %29, !dbg !8961
  %30 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !8961
  %sub.ptr.sub65 = sub i64 %30, %29, !dbg !8961
  %cmp66 = icmp sgt i64 %sub.ptr.sub62, %sub.ptr.sub65, !dbg !8961
  %31 = bitcast i8* %24 to %struct.c_arg_info*, !dbg !8961
  br i1 %cmp66, label %cond.true68, label %cond.end70, !dbg !8961

cond.true68:                                      ; preds = %cond.end49
  store i64 %30, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !8961
  br label %cond.end70, !dbg !8961

cond.end70:                                       ; preds = %cond.end49, %cond.true68
  %32 = phi i64 [ %and59, %cond.end49 ], [ %30, %cond.true68 ], !dbg !8961
  store i64 %32, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !8961
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %31, metadata !8920, metadata !DIExpression()), !dbg !8962
  %parms72 = bitcast i8* %24 to %union.tree_node**, !dbg !8963
  store %union.tree_node* null, %union.tree_node** %parms72, align 8, !dbg !8964
  %tags73 = getelementptr inbounds i8, i8* %24, i64 8, !dbg !8965
  %33 = bitcast i8* %tags73 to %union.tree_node**, !dbg !8965
  store %union.tree_node* null, %union.tree_node** %33, align 8, !dbg !8966
  %others74 = getelementptr inbounds i8, i8* %24, i64 24, !dbg !8967
  %34 = bitcast i8* %others74 to %union.tree_node**, !dbg !8967
  store %union.tree_node* null, %union.tree_node** %34, align 8, !dbg !8968
  %pending_sizes75 = getelementptr inbounds i8, i8* %24, i64 32, !dbg !8969
  %35 = bitcast i8* %pending_sizes75 to %union.tree_node**, !dbg !8969
  store %union.tree_node* null, %union.tree_node** %35, align 8, !dbg !8970
  %36 = getelementptr inbounds i8, i8* %24, i64 40, !dbg !8971
  %bf.load77 = load i8, i8* %36, align 8, !dbg !8972
  %bf.clear78 = and i8 %bf.load77, -2, !dbg !8972
  store i8 %bf.clear78, i8* %36, align 8, !dbg !8972
  %37 = load i64, i64* bitcast ([131 x %union.tree_node*]* @global_trees to i64*), align 16, !dbg !8973
  %types79 = getelementptr inbounds i8, i8* %24, i64 16, !dbg !8974
  %38 = bitcast i8* %types79 to i64*, !dbg !8975
  store i64 %37, i64* %38, align 8, !dbg !8975
  %call80 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !8976
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call80, i64 0, i32 2, !dbg !8977
  %39 = load i32, i32* %location, align 8, !dbg !8977
  tail call void (i32, i8*, ...) @error_at(i32 %39, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.65, i64 0, i64 0)) #6, !dbg !8978
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8979
  %call81 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !8980
  %tobool82 = icmp eq i8 %call81, 0, !dbg !8980
  br i1 %tobool82, label %if.else, label %if.then83, !dbg !8982

if.then83:                                        ; preds = %cond.end70
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8983
  br label %cleanup226, !dbg !8985

if.else:                                          ; preds = %cond.end70
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !8986
  br label %cleanup226, !dbg !8988

while.cond:                                       ; preds = %while.cond.preheader, %cleanup225
  %good_parm.0 = phi i8 [ %good_parm.1, %cleanup225 ], [ 0, %while.cond.preheader ], !dbg !8940
  %attrs.addr.0 = phi %union.tree_node* [ null, %cleanup225 ], [ %attrs, %while.cond.preheader ]
  %retval.1 = phi %struct.c_arg_info* [ %retval.2, %cleanup225 ], [ undef, %while.cond.preheader ]
  call void @llvm.dbg.value(metadata %union.tree_node* %attrs.addr.0, metadata !8915, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.value(metadata i8 %good_parm.0, metadata !8916, metadata !DIExpression()), !dbg !8940
  %call85 = tail call fastcc %struct.c_parm* @c_parser_parameter_declaration(%struct.c_parser* %parser, %union.tree_node* %attrs.addr.0) #7, !dbg !8989
  call void @llvm.dbg.value(metadata %struct.c_parm* %call85, metadata !8923, metadata !DIExpression()), !dbg !8990
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8915, metadata !DIExpression()), !dbg !8940
  %cmp86 = icmp eq %struct.c_parm* %call85, null, !dbg !8991
  br i1 %cmp86, label %if.end89, label %if.then88, !dbg !8993

if.then88:                                        ; preds = %while.cond
  call void @llvm.dbg.value(metadata i8 1, metadata !8916, metadata !DIExpression()), !dbg !8940
  tail call void @push_parm_decl(%struct.c_parm* nonnull %call85) #6, !dbg !8994
  br label %if.end89, !dbg !8996

if.end89:                                         ; preds = %while.cond, %if.then88
  %good_parm.1 = phi i8 [ 1, %if.then88 ], [ %good_parm.0, %while.cond ], !dbg !8940
  call void @llvm.dbg.value(metadata i8 %good_parm.1, metadata !8916, metadata !DIExpression()), !dbg !8940
  %call90 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !8997
  %tobool91 = icmp eq i8 %call90, 0, !dbg !8997
  br i1 %tobool91, label %if.end96, label %if.then92, !dbg !8998

if.then92:                                        ; preds = %if.end89
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !8999
  tail call void @mark_forward_parm_decls() #6, !dbg !9000
  %call93 = tail call fastcc %union.tree_node* @c_parser_attributes(%struct.c_parser* %parser) #7, !dbg !9001
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !8925, metadata !DIExpression()), !dbg !9002
  %call94 = tail call fastcc %struct.c_arg_info* @c_parser_parms_list_declarator(%struct.c_parser* %parser, %union.tree_node* %call93) #7, !dbg !9003
  br label %cleanup225

if.end96:                                         ; preds = %if.end89
  %call97 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !9004
  %tobool98 = icmp eq i8 %call97, 0, !dbg !9004
  br i1 %tobool98, label %if.end155, label %if.then99, !dbg !9005

if.then99:                                        ; preds = %if.end96
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9006
  %tobool100 = icmp eq i8 %good_parm.1, 0, !dbg !9007
  br i1 %tobool100, label %if.else103, label %if.then101, !dbg !9008

if.then101:                                       ; preds = %if.then99
  %call102 = tail call %struct.c_arg_info* @get_parm_info(i8 zeroext 0) #6, !dbg !9009
  br label %cleanup225, !dbg !9010

if.else103:                                       ; preds = %if.then99
  store i64 48, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !9011
  %40 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !9011
  %41 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !9011
  %sub.ptr.sub107 = sub i64 %40, %41, !dbg !9011
  %cmp108 = icmp slt i64 %sub.ptr.sub107, 48, !dbg !9011
  %42 = inttoptr i64 %41 to i8*, !dbg !9011
  br i1 %cmp108, label %cond.true110, label %cond.end113, !dbg !9011

cond.true110:                                     ; preds = %if.else103
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 48) #6, !dbg !9011
  %.pre5 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !9011
  %.pre6 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !9011
  br label %cond.end113, !dbg !9011

cond.end113:                                      ; preds = %if.else103, %cond.true110
  %43 = phi i8* [ %42, %if.else103 ], [ %.pre6, %cond.true110 ], !dbg !9011
  %44 = phi i64 [ 48, %if.else103 ], [ %.pre5, %cond.true110 ], !dbg !9011
  %add.ptr115 = getelementptr inbounds i8, i8* %43, i64 %44, !dbg !9011
  store i8* %add.ptr115, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !9011
  %45 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !9011
  %cmp116 = icmp eq i8* %add.ptr115, %45, !dbg !9011
  %46 = ptrtoint i8* %45 to i64, !dbg !9011
  %47 = ptrtoint i8* %add.ptr115 to i64, !dbg !9011
  br i1 %cmp116, label %cond.true118, label %cond.end123, !dbg !9011

cond.true118:                                     ; preds = %cond.end113
  %bf.load119 = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !9011
  %bf.set121 = or i8 %bf.load119, 2, !dbg !9011
  store i8 %bf.set121, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !9011
  br label %cond.end123, !dbg !9011

cond.end123:                                      ; preds = %cond.end113, %cond.true118
  store i64 %46, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !9011
  %48 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !9011
  %conv129 = sext i32 %48 to i64, !dbg !9011
  %add130 = add nsw i64 %47, %conv129, !dbg !9011
  %neg131 = xor i32 %48, -1, !dbg !9011
  %conv132 = sext i32 %neg131 to i64, !dbg !9011
  %and133 = and i64 %add130, %conv132, !dbg !9011
  %49 = inttoptr i64 %and133 to i8*, !dbg !9011
  store i8* %49, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !9011
  %50 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !9011
  %sub.ptr.sub136 = sub i64 %and133, %50, !dbg !9011
  %51 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !9011
  %sub.ptr.sub139 = sub i64 %51, %50, !dbg !9011
  %cmp140 = icmp sgt i64 %sub.ptr.sub136, %sub.ptr.sub139, !dbg !9011
  %52 = bitcast i8* %45 to %struct.c_arg_info*, !dbg !9011
  br i1 %cmp140, label %cond.true142, label %cond.end144, !dbg !9011

cond.true142:                                     ; preds = %cond.end123
  store i64 %51, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !9011
  br label %cond.end144, !dbg !9011

cond.end144:                                      ; preds = %cond.end123, %cond.true142
  %53 = phi i64 [ %and133, %cond.end123 ], [ %51, %cond.true142 ], !dbg !9011
  store i64 %53, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !9011
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %52, metadata !8928, metadata !DIExpression()), !dbg !9012
  %parms146 = bitcast i8* %45 to %union.tree_node**, !dbg !9013
  store %union.tree_node* null, %union.tree_node** %parms146, align 8, !dbg !9014
  %tags147 = getelementptr inbounds i8, i8* %45, i64 8, !dbg !9015
  %54 = bitcast i8* %tags147 to %union.tree_node**, !dbg !9015
  store %union.tree_node* null, %union.tree_node** %54, align 8, !dbg !9016
  %types148 = getelementptr inbounds i8, i8* %45, i64 16, !dbg !9017
  %55 = bitcast i8* %types148 to %union.tree_node**, !dbg !9017
  store %union.tree_node* null, %union.tree_node** %55, align 8, !dbg !9018
  %others149 = getelementptr inbounds i8, i8* %45, i64 24, !dbg !9019
  %56 = bitcast i8* %others149 to %union.tree_node**, !dbg !9019
  store %union.tree_node* null, %union.tree_node** %56, align 8, !dbg !9020
  %pending_sizes150 = getelementptr inbounds i8, i8* %45, i64 32, !dbg !9021
  %57 = bitcast i8* %pending_sizes150 to %union.tree_node**, !dbg !9021
  store %union.tree_node* null, %union.tree_node** %57, align 8, !dbg !9022
  %58 = getelementptr inbounds i8, i8* %45, i64 40, !dbg !9023
  %bf.load152 = load i8, i8* %58, align 8, !dbg !9024
  %bf.clear153 = and i8 %bf.load152, -2, !dbg !9024
  store i8 %bf.clear153, i8* %58, align 8, !dbg !9024
  br label %cleanup225

if.end155:                                        ; preds = %if.end96
  %call156 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 19, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.66, i64 0, i64 0)) #7, !dbg !9025
  %tobool157 = icmp eq i8 %call156, 0, !dbg !9025
  br i1 %tobool157, label %if.then158, label %if.end160, !dbg !9027

if.then158:                                       ; preds = %if.end155
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !9028
  %call159 = tail call %union.tree_node* @get_pending_sizes() #6, !dbg !9030
  br label %cleanup225, !dbg !9031

if.end160:                                        ; preds = %if.end155
  %call161 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 44) #7, !dbg !9032
  %tobool162 = icmp eq i8 %call161, 0, !dbg !9032
  br i1 %tobool162, label %cleanup225, label %if.then163, !dbg !9033

if.then163:                                       ; preds = %if.end160
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9034
  %call164 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 21) #7, !dbg !9035
  %tobool165 = icmp eq i8 %call164, 0, !dbg !9035
  br i1 %tobool165, label %if.else222, label %if.then166, !dbg !9036

if.then166:                                       ; preds = %if.then163
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9037
  %tobool167 = icmp eq i8 %good_parm.1, 0, !dbg !9038
  br i1 %tobool167, label %if.else170, label %if.then168, !dbg !9039

if.then168:                                       ; preds = %if.then166
  %call169 = tail call %struct.c_arg_info* @get_parm_info(i8 zeroext 1) #6, !dbg !9040
  br label %cleanup225, !dbg !9041

if.else170:                                       ; preds = %if.then166
  store i64 48, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !9042
  %59 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !9042
  %60 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !9042
  %sub.ptr.sub174 = sub i64 %59, %60, !dbg !9042
  %cmp175 = icmp slt i64 %sub.ptr.sub174, 48, !dbg !9042
  %61 = inttoptr i64 %60 to i8*, !dbg !9042
  br i1 %cmp175, label %cond.true177, label %cond.end180, !dbg !9042

cond.true177:                                     ; preds = %if.else170
  tail call void @_obstack_newchunk(%struct.obstack* nonnull @parser_obstack, i32 48) #6, !dbg !9042
  %.pre7 = load i64, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !9042
  %.pre8 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !9042
  br label %cond.end180, !dbg !9042

cond.end180:                                      ; preds = %if.else170, %cond.true177
  %62 = phi i8* [ %61, %if.else170 ], [ %.pre8, %cond.true177 ], !dbg !9042
  %63 = phi i64 [ 48, %if.else170 ], [ %.pre7, %cond.true177 ], !dbg !9042
  %add.ptr182 = getelementptr inbounds i8, i8* %62, i64 %63, !dbg !9042
  store i8* %add.ptr182, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !9042
  %64 = load i8*, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2), align 8, !dbg !9042
  %cmp183 = icmp eq i8* %add.ptr182, %64, !dbg !9042
  %65 = ptrtoint i8* %64 to i64, !dbg !9042
  %66 = ptrtoint i8* %add.ptr182 to i64, !dbg !9042
  br i1 %cmp183, label %cond.true185, label %cond.end190, !dbg !9042

cond.true185:                                     ; preds = %cond.end180
  %bf.load186 = load i8, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !9042
  %bf.set188 = or i8 %bf.load186, 2, !dbg !9042
  store i8 %bf.set188, i8* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 10), align 8, !dbg !9042
  br label %cond.end190, !dbg !9042

cond.end190:                                      ; preds = %cond.end180, %cond.true185
  store i64 %65, i64* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 5), align 8, !dbg !9042
  %67 = load i32, i32* getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 6), align 8, !dbg !9042
  %conv196 = sext i32 %67 to i64, !dbg !9042
  %add197 = add nsw i64 %66, %conv196, !dbg !9042
  %neg198 = xor i32 %67, -1, !dbg !9042
  %conv199 = sext i32 %neg198 to i64, !dbg !9042
  %and200 = and i64 %add197, %conv199, !dbg !9042
  %68 = inttoptr i64 %and200 to i8*, !dbg !9042
  store i8* %68, i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3), align 8, !dbg !9042
  %69 = load i64, i64* bitcast (%struct._obstack_chunk** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 1) to i64*), align 8, !dbg !9042
  %sub.ptr.sub203 = sub i64 %and200, %69, !dbg !9042
  %70 = load i64, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 4) to i64*), align 8, !dbg !9042
  %sub.ptr.sub206 = sub i64 %70, %69, !dbg !9042
  %cmp207 = icmp sgt i64 %sub.ptr.sub203, %sub.ptr.sub206, !dbg !9042
  %71 = bitcast i8* %64 to %struct.c_arg_info*, !dbg !9042
  br i1 %cmp207, label %cond.true209, label %cond.end211, !dbg !9042

cond.true209:                                     ; preds = %cond.end190
  store i64 %70, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 3) to i64*), align 8, !dbg !9042
  br label %cond.end211, !dbg !9042

cond.end211:                                      ; preds = %cond.end190, %cond.true209
  %72 = phi i64 [ %and200, %cond.end190 ], [ %70, %cond.true209 ], !dbg !9042
  store i64 %72, i64* bitcast (i8** getelementptr inbounds (%struct.obstack, %struct.obstack* @parser_obstack, i64 0, i32 2) to i64*), align 8, !dbg !9042
  call void @llvm.dbg.value(metadata %struct.c_arg_info* %71, metadata !8933, metadata !DIExpression()), !dbg !9043
  %parms213 = bitcast i8* %64 to %union.tree_node**, !dbg !9044
  store %union.tree_node* null, %union.tree_node** %parms213, align 8, !dbg !9045
  %tags214 = getelementptr inbounds i8, i8* %64, i64 8, !dbg !9046
  %73 = bitcast i8* %tags214 to %union.tree_node**, !dbg !9046
  store %union.tree_node* null, %union.tree_node** %73, align 8, !dbg !9047
  %types215 = getelementptr inbounds i8, i8* %64, i64 16, !dbg !9048
  %74 = bitcast i8* %types215 to %union.tree_node**, !dbg !9048
  store %union.tree_node* null, %union.tree_node** %74, align 8, !dbg !9049
  %others216 = getelementptr inbounds i8, i8* %64, i64 24, !dbg !9050
  %75 = bitcast i8* %others216 to %union.tree_node**, !dbg !9050
  store %union.tree_node* null, %union.tree_node** %75, align 8, !dbg !9051
  %pending_sizes217 = getelementptr inbounds i8, i8* %64, i64 32, !dbg !9052
  %76 = bitcast i8* %pending_sizes217 to %union.tree_node**, !dbg !9052
  store %union.tree_node* null, %union.tree_node** %76, align 8, !dbg !9053
  %77 = getelementptr inbounds i8, i8* %64, i64 40, !dbg !9054
  %bf.load219 = load i8, i8* %77, align 8, !dbg !9055
  %bf.clear220 = and i8 %bf.load219, -2, !dbg !9055
  store i8 %bf.clear220, i8* %77, align 8, !dbg !9055
  br label %cleanup225

if.else222:                                       ; preds = %if.then163
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !9056
  %call223 = tail call %union.tree_node* @get_pending_sizes() #6, !dbg !9058
  br label %cleanup225, !dbg !9059

cleanup225:                                       ; preds = %if.end160, %if.else222, %cond.end211, %if.then168, %if.then158, %cond.end144, %if.then101, %if.then92
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then92 ], [ false, %if.then101 ], [ false, %cond.end144 ], [ false, %if.then168 ], [ false, %cond.end211 ], [ false, %if.else222 ], [ false, %if.then158 ], [ true, %if.end160 ]
  %retval.2 = phi %struct.c_arg_info* [ %call94, %if.then92 ], [ %call102, %if.then101 ], [ %52, %cond.end144 ], [ %call169, %if.then168 ], [ %71, %cond.end211 ], [ null, %if.else222 ], [ null, %if.then158 ], [ %retval.1, %if.end160 ]
  br i1 %cleanup.dest.slot.0, label %while.cond, label %cleanup226.loopexit, !llvm.loop !9060

cleanup226.loopexit:                              ; preds = %cleanup225
  %retval.2.lcssa = phi %struct.c_arg_info* [ %retval.2, %cleanup225 ]
  br label %cleanup226, !dbg !9062

cleanup226:                                       ; preds = %cleanup226.loopexit, %if.then83, %if.else, %cond.end23
  %retval.3 = phi %struct.c_arg_info* [ %12, %cond.end23 ], [ %31, %if.then83 ], [ null, %if.else ], [ %retval.2.lcssa, %cleanup226.loopexit ], !dbg !8940
  ret %struct.c_arg_info* %retval.3, !dbg !9062
}

declare dso_local void @push_parm_decl(%struct.c_parm*) local_unnamed_addr #2

declare dso_local void @mark_forward_parm_decls() local_unnamed_addr #2

declare dso_local %struct.c_arg_info* @get_parm_info(i8 zeroext) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_pending_sizes() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_skip_to_end_of_parameter(%struct.c_parser* %parser) unnamed_addr #5 !dbg !9063 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9065, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.value(metadata i32 0, metadata !9066, metadata !DIExpression()), !dbg !9069
  %in_pragma = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !9070
  br label %while.cond, !dbg !9072

while.cond:                                       ; preds = %cleanup, %entry
  %nesting_depth.0 = phi i32 [ 0, %entry ], [ %nesting_depth.3, %cleanup ], !dbg !9073
  call void @llvm.dbg.value(metadata i32 %nesting_depth.0, metadata !9066, metadata !DIExpression()), !dbg !9069
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9074
  call void @llvm.dbg.value(metadata %struct.c_token* %call, metadata !9067, metadata !DIExpression()), !dbg !9075
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 0, !dbg !9076
  %bf.load = load i32, i32* %0, align 8, !dbg !9076
  %bf.clear = and i32 %bf.load, 255, !dbg !9076
  %cmp = icmp eq i32 %bf.clear, 19, !dbg !9078
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !9079

lor.lhs.false:                                    ; preds = %while.cond
  %cmp3 = icmp ne i32 %bf.clear, 43, !dbg !9080
  %tobool = icmp ne i32 %nesting_depth.0, 0, !dbg !9081
  %or.cond = or i1 %cmp3, %tobool, !dbg !9082
  br i1 %or.cond, label %if.end, label %cleanup, !dbg !9082

land.lhs.true:                                    ; preds = %while.cond
  %tobool.old = icmp eq i32 %nesting_depth.0, 0, !dbg !9081
  br i1 %tobool.old, label %cleanup, label %if.end, !dbg !9083

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %cmp6 = icmp eq i32 %bf.clear, 22, !dbg !9084
  br i1 %cmp6, label %cleanup, label %if.end8, !dbg !9086

if.end8:                                          ; preds = %if.end
  %cmp11 = icmp eq i32 %bf.clear, 71, !dbg !9087
  br i1 %cmp11, label %land.lhs.true12, label %if.end17, !dbg !9088

land.lhs.true12:                                  ; preds = %if.end8
  %bf.load13 = load i8, i8* %in_pragma, align 2, !dbg !9089
  %bf.clear14 = and i8 %bf.load13, 2, !dbg !9089
  %tobool15 = icmp eq i8 %bf.clear14, 0, !dbg !9090
  br i1 %tobool15, label %if.end17, label %cleanup, !dbg !9091

if.end17:                                         ; preds = %land.lhs.true12, %if.end8
  %cmp20 = icmp eq i32 %bf.clear, 41, !dbg !9092
  br i1 %cmp20, label %if.then29, label %lor.lhs.false21, !dbg !9094

lor.lhs.false21:                                  ; preds = %if.end17
  %cmp24 = icmp eq i32 %bf.clear, 20, !dbg !9095
  br i1 %cmp24, label %if.then29, label %lor.lhs.false25, !dbg !9096

lor.lhs.false25:                                  ; preds = %lor.lhs.false21
  %cmp28 = icmp eq i32 %bf.clear, 39, !dbg !9097
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !9098

if.then29:                                        ; preds = %lor.lhs.false25, %lor.lhs.false21, %if.end17
  %inc = add i32 %nesting_depth.0, 1, !dbg !9099
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9066, metadata !DIExpression()), !dbg !9069
  br label %if.end46, !dbg !9099

if.else:                                          ; preds = %lor.lhs.false25
  %cmp32 = icmp eq i32 %bf.clear, 42, !dbg !9100
  br i1 %cmp32, label %if.then41, label %lor.lhs.false33, !dbg !9102

lor.lhs.false33:                                  ; preds = %if.else
  %cmp36 = icmp eq i32 %bf.clear, 21, !dbg !9103
  br i1 %cmp36, label %if.then41, label %lor.lhs.false37, !dbg !9104

lor.lhs.false37:                                  ; preds = %lor.lhs.false33
  %cmp40 = icmp eq i32 %bf.clear, 40, !dbg !9105
  br i1 %cmp40, label %if.then41, label %if.end46, !dbg !9106

if.then41:                                        ; preds = %lor.lhs.false37, %lor.lhs.false33, %if.else
  %dec = add i32 %nesting_depth.0, -1, !dbg !9107
  call void @llvm.dbg.value(metadata i32 %dec, metadata !9066, metadata !DIExpression()), !dbg !9069
  %cmp42 = icmp eq i32 %nesting_depth.0, 0, !dbg !9110
  br i1 %cmp42, label %cleanup, label %if.end46, !dbg !9111

if.end46:                                         ; preds = %lor.lhs.false37, %if.then41, %if.then29
  %nesting_depth.2 = phi i32 [ %inc, %if.then29 ], [ %nesting_depth.0, %lor.lhs.false37 ], [ %dec, %if.then41 ], !dbg !9112
  call void @llvm.dbg.value(metadata i32 %nesting_depth.2, metadata !9066, metadata !DIExpression()), !dbg !9069
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9113
  br label %cleanup, !dbg !9114

cleanup:                                          ; preds = %land.lhs.true, %land.lhs.true12, %if.then41, %if.end, %lor.lhs.false, %if.end46
  %nesting_depth.3 = phi i32 [ %nesting_depth.2, %if.end46 ], [ 0, %lor.lhs.false ], [ 0, %land.lhs.true ], [ %nesting_depth.0, %if.end ], [ %nesting_depth.0, %land.lhs.true12 ], [ %dec, %if.then41 ], !dbg !9069
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end46 ], [ 3, %lor.lhs.false ], [ 3, %land.lhs.true ], [ 1, %if.end ], [ 1, %land.lhs.true12 ], [ 3, %if.then41 ]
  call void @llvm.dbg.value(metadata i32 %nesting_depth.3, metadata !9066, metadata !DIExpression()), !dbg !9069
  switch i32 %cleanup.dest.slot.0, label %cleanup.cont51.loopexit [
    i32 0, label %while.cond
    i32 3, label %while.end
  ], !llvm.loop !9115

while.end:                                        ; preds = %cleanup
  %bf.load47 = load i8, i8* %in_pragma, align 2, !dbg !9116
  %bf.clear48 = and i8 %bf.load47, -2, !dbg !9116
  store i8 %bf.clear48, i8* %in_pragma, align 2, !dbg !9116
  br label %cleanup.cont51, !dbg !9117

cleanup.cont51.loopexit:                          ; preds = %cleanup
  br label %cleanup.cont51, !dbg !9117

cleanup.cont51:                                   ; preds = %cleanup.cont51.loopexit, %while.end
  ret void, !dbg !9117
}

declare dso_local %struct.c_parm* @build_c_parm(%struct.c_declspecs*, %union.tree_node*, %struct.c_declarator*) local_unnamed_addr #2

declare dso_local void @objc_set_visibility(i32) local_unnamed_addr #2

declare dso_local void @objc_add_instance_variable(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @copy_node_stat(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_declare_class(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_declare_alias(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_declare_protocols(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_start_protocol(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_omp_barrier(%struct.c_parser* %parser) unnamed_addr #5 !dbg !9118 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9120, metadata !DIExpression()), !dbg !9122
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9123
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !9124
  %0 = load i32, i32* %location, align 8, !dbg !9124
  call void @llvm.dbg.value(metadata i32 %0, metadata !9121, metadata !DIExpression()), !dbg !9122
  tail call fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) #7, !dbg !9125
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !9126
  tail call void @c_finish_omp_barrier(i32 %0) #6, !dbg !9127
  ret void, !dbg !9128
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_omp_flush(%struct.c_parser* %parser) unnamed_addr #5 !dbg !9129 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9131, metadata !DIExpression()), !dbg !9133
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9134
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !9135
  %0 = load i32, i32* %location, align 8, !dbg !9135
  call void @llvm.dbg.value(metadata i32 %0, metadata !9132, metadata !DIExpression()), !dbg !9133
  tail call fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) #7, !dbg !9136
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !9137
  %tobool = icmp eq i8 %call1, 0, !dbg !9137
  br i1 %tobool, label %if.else, label %if.then, !dbg !9139

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @c_parser_omp_var_list_parens(%struct.c_parser* %parser, i32 0, %union.tree_node* null) #7, !dbg !9140
  br label %if.end6, !dbg !9140

if.else:                                          ; preds = %entry
  %call3 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 71) #7, !dbg !9141
  %tobool4 = icmp eq i8 %call3, 0, !dbg !9141
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !9143

if.then5:                                         ; preds = %if.else
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.74, i64 0, i64 0)) #7, !dbg !9144
  br label %if.end6, !dbg !9144

if.end6:                                          ; preds = %if.else, %if.then5, %if.then
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !9145
  tail call void @c_finish_omp_flush(i32 %0) #6, !dbg !9146
  ret void, !dbg !9147
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_omp_taskwait(%struct.c_parser* %parser) unnamed_addr #5 !dbg !9148 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9150, metadata !DIExpression()), !dbg !9152
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9153
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !9154
  %0 = load i32, i32* %location, align 8, !dbg !9154
  call void @llvm.dbg.value(metadata i32 %0, metadata !9151, metadata !DIExpression()), !dbg !9152
  tail call fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) #7, !dbg !9155
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !9156
  tail call void @c_finish_omp_taskwait(i32 %0) #6, !dbg !9157
  ret void, !dbg !9158
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_omp_threadprivate(%struct.c_parser* %parser) unnamed_addr #5 !dbg !9159 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9161, metadata !DIExpression()), !dbg !9169
  tail call fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) #7, !dbg !9170
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9171
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !9172
  %0 = load i32, i32* %location, align 8, !dbg !9172
  call void @llvm.dbg.value(metadata i32 %0, metadata !9164, metadata !DIExpression()), !dbg !9169
  %call1 = tail call fastcc %union.tree_node* @c_parser_omp_var_list_parens(%struct.c_parser* %parser, i32 0, %union.tree_node* null) #7, !dbg !9173
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9162, metadata !DIExpression()), !dbg !9169
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9163, metadata !DIExpression()), !dbg !9169
  br label %for.cond, !dbg !9174

for.cond:                                         ; preds = %for.inc, %entry
  %t.0 = phi %union.tree_node* [ %call1, %entry ], [ %14, %for.inc ], !dbg !9175
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !9163, metadata !DIExpression()), !dbg !9169
  %tobool = icmp eq %union.tree_node* %t.0, null, !dbg !9176
  br i1 %tobool, label %for.end, label %for.body, !dbg !9176

for.body:                                         ; preds = %for.cond
  %purpose = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9177
  %1 = bitcast i32* %purpose to %union.tree_node**, !dbg !9177
  %2 = load %union.tree_node*, %union.tree_node** %1, align 8, !dbg !9177
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !9165, metadata !DIExpression()), !dbg !9178
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9179
  %bf.load = load i64, i64* %3, align 8, !dbg !9179
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9181
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !9181
  br i1 %cmp, label %if.else, label %if.then, !dbg !9182

if.then:                                          ; preds = %for.body
  tail call void (i32, i8*, ...) @error_at(i32 %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.75, i64 0, i64 0), %union.tree_node* %2) #6, !dbg !9183
  br label %for.inc, !dbg !9183

if.else:                                          ; preds = %for.body
  %bf.cast52 = and i64 %bf.load, 16777216, !dbg !9184
  %tobool6 = icmp eq i64 %bf.cast52, 0, !dbg !9184
  br i1 %tobool6, label %if.else13, label %land.lhs.true, !dbg !9186

land.lhs.true:                                    ; preds = %if.else
  %lang_flag_3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9187
  %4 = bitcast i40* %lang_flag_3 to i64*, !dbg !9187
  %bf.load7 = load i64, i64* %4, align 8, !dbg !9187
  %bf.cast105 = and i64 %bf.load7, 262144, !dbg !9187
  %tobool11 = icmp eq i64 %bf.cast105, 0, !dbg !9187
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !9188

if.then12:                                        ; preds = %land.lhs.true
  tail call void (i32, i8*, ...) @error_at(i32 %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.76, i64 0, i64 0), %union.tree_node* %2) #6, !dbg !9189
  br label %for.inc, !dbg !9189

if.else13:                                        ; preds = %land.lhs.true, %if.else
  %bf.cast183 = and i64 %bf.load, 67108864, !dbg !9190
  %tobool19 = icmp eq i64 %bf.cast183, 0, !dbg !9190
  br i1 %tobool19, label %land.lhs.true20, label %if.else28, !dbg !9192

land.lhs.true20:                                  ; preds = %if.else13
  %decl_flag_1 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9193
  %5 = bitcast i40* %decl_flag_1 to i64*, !dbg !9193
  %bf.load22 = load i64, i64* %5, align 8, !dbg !9193
  %bf.cast254 = and i64 %bf.load22, 33554432, !dbg !9193
  %tobool26 = icmp eq i64 %bf.cast254, 0, !dbg !9193
  br i1 %tobool26, label %if.then27, label %if.else28, !dbg !9194

if.then27:                                        ; preds = %land.lhs.true20
  tail call void (i32, i8*, ...) @error_at(i32 %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.77, i64 0, i64 0), %union.tree_node* %2) #6, !dbg !9195
  br label %for.inc, !dbg !9195

if.else28:                                        ; preds = %land.lhs.true20, %if.else13
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9196
  %6 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9196
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9198
  %cmp29 = icmp eq %union.tree_node* %6, %7, !dbg !9199
  br i1 %cmp29, label %for.inc, label %if.else31, !dbg !9200

if.else31:                                        ; preds = %if.else28
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9201
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !9201
  %cmp35 = icmp eq %union.tree_node* %9, null, !dbg !9201
  br i1 %cmp35, label %if.then36, label %if.else37, !dbg !9203

if.then36:                                        ; preds = %if.else31
  tail call void (i32, i8*, ...) @error_at(i32 %0, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.78, i64 0, i64 0), %union.tree_node* %2) #6, !dbg !9204
  br label %for.inc, !dbg !9204

if.else37:                                        ; preds = %if.else31
  %tls_model = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !9205
  %10 = bitcast i24* %tls_model to i32*, !dbg !9205
  %bf.load38 = load i32, i32* %10, align 8, !dbg !9205
  %bf.clear40 = and i32 %bf.load38, 49152, !dbg !9205
  %cmp41 = icmp eq i32 %bf.clear40, 0, !dbg !9205
  br i1 %cmp41, label %if.then42, label %if.end58, !dbg !9208

if.then42:                                        ; preds = %if.else37
  %call43 = tail call i32 @decl_default_tls_model(%union.tree_node* %2) #6, !dbg !9209
  %bf.load46 = load i32, i32* %10, align 8, !dbg !9211
  %bf.value = shl i32 %call43, 13, !dbg !9211
  %bf.shl = and i32 %bf.value, 57344, !dbg !9211
  %bf.clear47 = and i32 %bf.load46, -57345, !dbg !9211
  %bf.set = or i32 %bf.clear47, %bf.shl, !dbg !9211
  store i32 %bf.set, i32* %10, align 8, !dbg !9211
  %bf.load49 = load i64, i64* %3, align 8, !dbg !9212
  %bf.cast51 = and i64 %bf.load49, 65535, !dbg !9212
  %arrayidx52 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast51, i64 11, !dbg !9212
  %11 = load i8, i8* %arrayidx52, align 1, !dbg !9212
  %tobool53 = icmp eq i8 %11, 0, !dbg !9212
  br i1 %tobool53, label %if.end58, label %land.lhs.true54, !dbg !9212

land.lhs.true54:                                  ; preds = %if.then42
  %rtl = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9212
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !9212
  %cmp55 = icmp eq %struct.rtx_def* %12, null, !dbg !9212
  br i1 %cmp55, label %if.end58, label %if.then57, !dbg !9214

if.then57:                                        ; preds = %land.lhs.true54
  tail call void @make_decl_rtl(%union.tree_node* %2) #6, !dbg !9215
  br label %if.end58, !dbg !9215

if.end58:                                         ; preds = %land.lhs.true54, %if.then42, %if.else37, %if.then57
  %lang_flag_360 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9216
  %13 = bitcast i40* %lang_flag_360 to i64*, !dbg !9216
  %bf.load61 = load i64, i64* %13, align 8, !dbg !9217
  %bf.set63 = or i64 %bf.load61, 262144, !dbg !9217
  store i64 %bf.set63, i64* %13, align 8, !dbg !9217
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.then27, %if.then36, %if.end58, %if.else28, %if.then12
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %t.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9218
  %14 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !9218
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !9163, metadata !DIExpression()), !dbg !9169
  br label %for.cond, !dbg !9219, !llvm.loop !9220

for.end:                                          ; preds = %for.cond
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !9222
  ret void, !dbg !9223
}

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_omp_construct(%struct.c_parser* %parser) unnamed_addr #5 !dbg !9224 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9226, metadata !DIExpression()), !dbg !9230
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9231
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !9232
  %0 = load i32, i32* %location, align 8, !dbg !9232
  call void @llvm.dbg.value(metadata i32 %0, metadata !9228, metadata !DIExpression()), !dbg !9230
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9233
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !9234
  %bf.load = load i32, i32* %1, align 8, !dbg !9234
  %bf.lshr = lshr i32 %bf.load, 24, !dbg !9234
  call void @llvm.dbg.value(metadata i32 %bf.lshr, metadata !9227, metadata !DIExpression()), !dbg !9230
  tail call fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) #7, !dbg !9235
  %trunc = trunc i32 %bf.lshr to i8, !dbg !9236
  switch i8 %trunc, label %sw.default [
    i8 1, label %sw.bb
    i8 3, label %sw.bb2
    i8 5, label %sw.bb4
    i8 6, label %sw.bb6
    i8 7, label %sw.bb8
    i8 8, label %sw.bb10
    i8 12, label %sw.bb12
    i8 13, label %sw.bb14
    i8 14, label %sw.bb16
  ], !dbg !9236

sw.bb:                                            ; preds = %entry
  tail call fastcc void @c_parser_omp_atomic(i32 %0, %struct.c_parser* %parser) #7, !dbg !9237
  br label %cleanup.cont, !dbg !9239

sw.bb2:                                           ; preds = %entry
  %call3 = tail call fastcc %union.tree_node* @c_parser_omp_critical(i32 %0, %struct.c_parser* %parser) #7, !dbg !9240
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9229, metadata !DIExpression()), !dbg !9230
  br label %sw.epilog, !dbg !9241

sw.bb4:                                           ; preds = %entry
  %call5 = tail call fastcc %union.tree_node* @c_parser_omp_for(i32 %0, %struct.c_parser* %parser) #7, !dbg !9242
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !9229, metadata !DIExpression()), !dbg !9230
  br label %sw.epilog, !dbg !9243

sw.bb6:                                           ; preds = %entry
  %call7 = tail call fastcc %union.tree_node* @c_parser_omp_master(i32 %0, %struct.c_parser* %parser) #7, !dbg !9244
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !9229, metadata !DIExpression()), !dbg !9230
  br label %sw.epilog, !dbg !9245

sw.bb8:                                           ; preds = %entry
  %call9 = tail call fastcc %union.tree_node* @c_parser_omp_ordered(i32 %0, %struct.c_parser* %parser) #7, !dbg !9246
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !9229, metadata !DIExpression()), !dbg !9230
  br label %sw.epilog, !dbg !9247

sw.bb10:                                          ; preds = %entry
  %call11 = tail call fastcc %union.tree_node* @c_parser_omp_parallel(i32 %0, %struct.c_parser* %parser) #7, !dbg !9248
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !9229, metadata !DIExpression()), !dbg !9230
  br label %sw.epilog, !dbg !9249

sw.bb12:                                          ; preds = %entry
  %call13 = tail call fastcc %union.tree_node* @c_parser_omp_sections(i32 %0, %struct.c_parser* %parser) #7, !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !9229, metadata !DIExpression()), !dbg !9230
  br label %sw.epilog, !dbg !9251

sw.bb14:                                          ; preds = %entry
  %call15 = tail call fastcc %union.tree_node* @c_parser_omp_single(i32 %0, %struct.c_parser* %parser) #7, !dbg !9252
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !9229, metadata !DIExpression()), !dbg !9230
  br label %sw.epilog, !dbg !9253

sw.bb16:                                          ; preds = %entry
  %call17 = tail call fastcc %union.tree_node* @c_parser_omp_task(i32 %0, %struct.c_parser* %parser) #7, !dbg !9254
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !9229, metadata !DIExpression()), !dbg !9230
  br label %sw.epilog, !dbg !9255

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 8633, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9256
  br label %sw.epilog, !dbg !9257

sw.epilog:                                        ; preds = %sw.default, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb4, %sw.bb2
  %stmt.0 = phi %union.tree_node* [ undef, %sw.default ], [ %call17, %sw.bb16 ], [ %call15, %sw.bb14 ], [ %call13, %sw.bb12 ], [ %call11, %sw.bb10 ], [ %call9, %sw.bb8 ], [ %call7, %sw.bb6 ], [ %call5, %sw.bb4 ], [ %call3, %sw.bb2 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %stmt.0, metadata !9229, metadata !DIExpression()), !dbg !9230
  %tobool = icmp eq %union.tree_node* %stmt.0, null, !dbg !9258
  br i1 %tobool, label %cleanup.cont, label %if.then, !dbg !9260

if.then:                                          ; preds = %sw.epilog
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %stmt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9261
  %bf.load18 = load i64, i64* %2, align 8, !dbg !9261
  %bf.cast = and i64 %bf.load18, 65535, !dbg !9261
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !9261
  %3 = load i32, i32* %arrayidx, align 4, !dbg !9261
  %cmp = icmp ugt i32 %3, 3, !dbg !9261
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !9261

land.lhs.true:                                    ; preds = %if.then
  %cmp25 = icmp ult i32 %3, 11, !dbg !9261
  br i1 %cmp25, label %cond.true, label %cond.end, !dbg !9261

cond.true:                                        ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %stmt.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9261
  %5 = load i32, i32* %4, align 8, !dbg !9261
  %phitmp = icmp ne i32 %5, 0, !dbg !9261
  br label %cond.end, !dbg !9261

cond.end:                                         ; preds = %if.then, %land.lhs.true, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ false, %land.lhs.true ], [ false, %if.then ]
  br i1 %cond, label %cleanup.cont, label %cond.true27, !dbg !9261

cond.true27:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 8637, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9261
  br label %cleanup.cont, !dbg !9261

cleanup.cont:                                     ; preds = %sw.epilog, %sw.bb, %cond.true27, %cond.end
  ret void, !dbg !9262
}

declare dso_local void @c_invoke_pragma_handler(i32) local_unnamed_addr #2

declare dso_local void @c_finish_omp_barrier(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_var_list_parens(%struct.c_parser* %parser, i32 %kind, %union.tree_node* %list) unnamed_addr #5 !dbg !9263 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9267, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata i32 %kind, metadata !9268, metadata !DIExpression()), !dbg !9271
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !9269, metadata !DIExpression()), !dbg !9271
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9272
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !9273
  %0 = load i32, i32* %location, align 8, !dbg !9273
  call void @llvm.dbg.value(metadata i32 %0, metadata !9270, metadata !DIExpression()), !dbg !9271
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !9274
  %tobool = icmp eq i8 %call1, 0, !dbg !9274
  br i1 %tobool, label %if.end, label %if.then, !dbg !9276

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @c_parser_omp_variable_list(%struct.c_parser* %parser, i32 %0, i32 %kind, %union.tree_node* %list) #7, !dbg !9277
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9269, metadata !DIExpression()), !dbg !9271
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !9279
  br label %if.end, !dbg !9280

if.end:                                           ; preds = %entry, %if.then
  %list.addr.0 = phi %union.tree_node* [ %call2, %if.then ], [ %list, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0, metadata !9269, metadata !DIExpression()), !dbg !9271
  ret %union.tree_node* %list.addr.0, !dbg !9281
}

declare dso_local void @c_finish_omp_flush(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_variable_list(%struct.c_parser* %parser, i32 %clause_loc, i32 %kind, %union.tree_node* %list) unnamed_addr #5 !dbg !9282 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9286, metadata !DIExpression()), !dbg !9297
  call void @llvm.dbg.value(metadata i32 %clause_loc, metadata !9287, metadata !DIExpression()), !dbg !9297
  call void @llvm.dbg.value(metadata i32 %kind, metadata !9288, metadata !DIExpression()), !dbg !9297
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !9289, metadata !DIExpression()), !dbg !9297
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 53) #7, !dbg !9298
  %tobool = icmp eq i8 %call, 0, !dbg !9298
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9300

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9301
  %0 = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 0, !dbg !9302
  %bf.load = load i32, i32* %0, align 8, !dbg !9302
  %bf.clear = and i32 %bf.load, 65280, !dbg !9302
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !9303
  br i1 %cmp, label %if.end, label %if.then, !dbg !9304

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !9305
  br label %if.end, !dbg !9305

if.end:                                           ; preds = %lor.lhs.false, %if.then
  %cmp24 = icmp eq i32 %kind, 0, !dbg !9306
  br i1 %cmp24, label %if.end.split.us, label %if.end.if.end.split_crit_edge, !dbg !9307

if.end.if.end.split_crit_edge:                    ; preds = %if.end
  br label %while.cond, !dbg !9307

if.end.split.us:                                  ; preds = %if.end
  br label %while.cond.us, !dbg !9307

while.cond.us:                                    ; preds = %cleanup.us, %if.end.split.us
  %list.addr.0.us = phi %union.tree_node* [ %list, %if.end.split.us ], [ %list.addr.3.us, %cleanup.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0.us, metadata !9289, metadata !DIExpression()), !dbg !9297
  %call3.us = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !9308
  %tobool5.us = icmp eq i8 %call3.us, 0, !dbg !9308
  br i1 %tobool5.us, label %while.end.us-lcssa.us, label %land.rhs.us, !dbg !9309

land.rhs.us:                                      ; preds = %while.cond.us
  %call6.us = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9310
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call6.us, i64 0, i32 0, !dbg !9311
  %bf.load7.us = load i32, i32* %1, align 8, !dbg !9311
  %bf.clear9.us = and i32 %bf.load7.us, 65280, !dbg !9311
  %cmp10.us = icmp eq i32 %bf.clear9.us, 0, !dbg !9312
  br i1 %cmp10.us, label %while.body.us, label %while.end.us-lcssa.us, !dbg !9307

while.body.us:                                    ; preds = %land.rhs.us
  %call12.us = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9313
  %value.us = getelementptr inbounds %struct.c_token, %struct.c_token* %call12.us, i64 0, i32 1, !dbg !9314
  %2 = load %union.tree_node*, %union.tree_node** %value.us, align 8, !dbg !9314
  %call13.us = tail call %union.tree_node* @lookup_name(%union.tree_node* %2) #6, !dbg !9315
  call void @llvm.dbg.value(metadata %union.tree_node* %call13.us, metadata !9290, metadata !DIExpression()), !dbg !9316
  %cmp14.us = icmp eq %union.tree_node* %call13.us, null, !dbg !9317
  br i1 %cmp14.us, label %if.then16.us, label %if.else.us, !dbg !9318

if.else.us:                                       ; preds = %while.body.us
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9319
  %cmp20.us = icmp eq %union.tree_node* %call13.us, %3, !dbg !9320
  br i1 %cmp20.us, label %if.end32.us, label %if.else23.us, !dbg !9321

if.else23.us:                                     ; preds = %if.else.us
  %call29.us = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* nonnull %call13.us, %union.tree_node* null, %union.tree_node* %list.addr.0.us) #6, !dbg !9322
  call void @llvm.dbg.value(metadata %union.tree_node* %call29.us, metadata !9289, metadata !DIExpression()), !dbg !9297
  br label %if.end32.us

if.then16.us:                                     ; preds = %while.body.us
  %call17.us = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9323
  %location.us = getelementptr inbounds %struct.c_token, %struct.c_token* %call17.us, i64 0, i32 2, !dbg !9324
  %4 = load i32, i32* %location.us, align 8, !dbg !9324
  %call18.us = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9325
  %value19.us = getelementptr inbounds %struct.c_token, %struct.c_token* %call18.us, i64 0, i32 1, !dbg !9326
  %5 = load %union.tree_node*, %union.tree_node** %value19.us, align 8, !dbg !9326
  tail call void @undeclared_variable(i32 %4, %union.tree_node* %5) #6, !dbg !9327
  br label %if.end32.us, !dbg !9327

if.end32.us:                                      ; preds = %if.then16.us, %if.else23.us, %if.else.us
  %list.addr.3.us = phi %union.tree_node* [ %list.addr.0.us, %if.then16.us ], [ %list.addr.0.us, %if.else.us ], [ %call29.us, %if.else23.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.3.us, metadata !9289, metadata !DIExpression()), !dbg !9297
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9328
  %call33.us = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 19) #7, !dbg !9329
  %tobool34.us = icmp eq i8 %call33.us, 0, !dbg !9329
  br i1 %tobool34.us, label %if.end36.us, label %cleanup.us, !dbg !9331

if.end36.us:                                      ; preds = %if.end32.us
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9332
  br label %cleanup.us, !dbg !9333

cleanup.us:                                       ; preds = %if.end36.us, %if.end32.us
  %cleanup.dest.slot.0.us = phi i1 [ true, %if.end36.us ], [ false, %if.end32.us ]
  br i1 %cleanup.dest.slot.0.us, label %while.cond.us, label %while.end.us-lcssa.us, !llvm.loop !9334

while.end.us-lcssa.us:                            ; preds = %cleanup.us, %land.rhs.us, %while.cond.us
  %list.addr.4.ph.us = phi %union.tree_node* [ %list.addr.0.us, %while.cond.us ], [ %list.addr.0.us, %land.rhs.us ], [ %list.addr.3.us, %cleanup.us ]
  br label %while.end, !dbg !9335

while.cond:                                       ; preds = %cleanup, %if.end.if.end.split_crit_edge
  %list.addr.0 = phi %union.tree_node* [ %list, %if.end.if.end.split_crit_edge ], [ %list.addr.3, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0, metadata !9289, metadata !DIExpression()), !dbg !9297
  %call3 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !9308
  %tobool5 = icmp eq i8 %call3, 0, !dbg !9308
  br i1 %tobool5, label %while.end.us-lcssa, label %land.rhs, !dbg !9309

land.rhs:                                         ; preds = %while.cond
  %call6 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9310
  %6 = getelementptr inbounds %struct.c_token, %struct.c_token* %call6, i64 0, i32 0, !dbg !9311
  %bf.load7 = load i32, i32* %6, align 8, !dbg !9311
  %bf.clear9 = and i32 %bf.load7, 65280, !dbg !9311
  %cmp10 = icmp eq i32 %bf.clear9, 0, !dbg !9312
  br i1 %cmp10, label %while.body, label %while.end.us-lcssa, !dbg !9307

while.body:                                       ; preds = %land.rhs
  %call12 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9313
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call12, i64 0, i32 1, !dbg !9314
  %7 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !9314
  %call13 = tail call %union.tree_node* @lookup_name(%union.tree_node* %7) #6, !dbg !9315
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !9290, metadata !DIExpression()), !dbg !9316
  %cmp14 = icmp eq %union.tree_node* %call13, null, !dbg !9317
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !9318

if.then16:                                        ; preds = %while.body
  %call17 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9323
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call17, i64 0, i32 2, !dbg !9324
  %8 = load i32, i32* %location, align 8, !dbg !9324
  %call18 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9325
  %value19 = getelementptr inbounds %struct.c_token, %struct.c_token* %call18, i64 0, i32 1, !dbg !9326
  %9 = load %union.tree_node*, %union.tree_node** %value19, align 8, !dbg !9326
  tail call void @undeclared_variable(i32 %8, %union.tree_node* %9) #6, !dbg !9327
  br label %if.end32, !dbg !9327

if.else:                                          ; preds = %while.body
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9319
  %cmp20 = icmp eq %union.tree_node* %call13, %10, !dbg !9320
  br i1 %cmp20, label %if.end32, label %if.else23, !dbg !9321

if.else23:                                        ; preds = %if.else
  %call27 = tail call %union.tree_node* @build_omp_clause(i32 %clause_loc, i32 %kind) #6, !dbg !9336
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !9292, metadata !DIExpression()), !dbg !9337
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9338
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !9338
  store %union.tree_node* %call13, %union.tree_node** %arrayidx, align 8, !dbg !9339
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9340
  store %union.tree_node* %list.addr.0, %union.tree_node** %chain, align 8, !dbg !9341
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !9289, metadata !DIExpression()), !dbg !9297
  br label %if.end32, !dbg !9342

if.end32:                                         ; preds = %if.else, %if.else23, %if.then16
  %list.addr.3 = phi %union.tree_node* [ %list.addr.0, %if.then16 ], [ %list.addr.0, %if.else ], [ %call27, %if.else23 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.3, metadata !9289, metadata !DIExpression()), !dbg !9297
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9328
  %call33 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 19) #7, !dbg !9329
  %tobool34 = icmp eq i8 %call33, 0, !dbg !9329
  br i1 %tobool34, label %if.end36, label %cleanup, !dbg !9331

if.end36:                                         ; preds = %if.end32
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9332
  br label %cleanup, !dbg !9333

cleanup:                                          ; preds = %if.end32, %if.end36
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end36 ], [ false, %if.end32 ]
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end.us-lcssa, !llvm.loop !9334

while.end.us-lcssa:                               ; preds = %land.rhs, %cleanup, %while.cond
  %list.addr.4.ph = phi %union.tree_node* [ %list.addr.0, %while.cond ], [ %list.addr.0, %land.rhs ], [ %list.addr.3, %cleanup ]
  br label %while.end, !dbg !9335

while.end:                                        ; preds = %while.end.us-lcssa.us, %while.end.us-lcssa
  %list.addr.4 = phi %union.tree_node* [ %list.addr.4.ph, %while.end.us-lcssa ], [ %list.addr.4.ph.us, %while.end.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.4, metadata !9289, metadata !DIExpression()), !dbg !9297
  ret %union.tree_node* %list.addr.4, !dbg !9335
}

declare dso_local void @undeclared_variable(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_omp_clause(i32, i32) local_unnamed_addr #2

declare dso_local void @c_finish_omp_taskwait(i32) local_unnamed_addr #2

declare dso_local i32 @decl_default_tls_model(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @make_decl_rtl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_omp_atomic(i32 %loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !9343 {
entry:
  %rhs_expr = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp20 = alloca %struct.c_expr, align 8
  %tmp21 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9347, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9348, metadata !DIExpression()), !dbg !9358
  %0 = bitcast %struct.c_expr* %rhs_expr to i8*, !dbg !9359
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #8, !dbg !9359
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !9360
  call fastcc void @c_parser_unary_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !9361
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !9362
  %1 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !9362
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9349, metadata !DIExpression()), !dbg !9358
  %call = call %union.tree_node* @c_fully_fold(%union.tree_node* %1, i8 zeroext 0, i8* null) #6, !dbg !9363
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9349, metadata !DIExpression()), !dbg !9358
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9364
  %bf.load = load i64, i64* %2, align 8, !dbg !9364
  %3 = trunc i64 %bf.load to i16, !dbg !9364
  switch i16 %3, label %sw.default [
    i16 0, label %saw_error
    i16 126, label %sw.bb1
    i16 128, label %sw.bb1
    i16 125, label %sw.bb2
    i16 127, label %sw.bb2
  ], !dbg !9365

saw_error:                                        ; preds = %entry, %sw.default18
  call void @llvm.dbg.label(metadata !9357), !dbg !9366
  call fastcc void @c_parser_skip_to_end_of_block_or_statement(%struct.c_parser* %parser) #7, !dbg !9367
  br label %cleanup, !dbg !9368

sw.bb1:                                           ; preds = %entry, %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9369
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !9369
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !9349, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata i32 63, metadata !9352, metadata !DIExpression()), !dbg !9358
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !9370
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9350, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog24, !dbg !9371

sw.bb2:                                           ; preds = %entry, %entry
  %operands4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9372
  %6 = load %union.tree_node*, %union.tree_node** %operands4, align 8, !dbg !9372
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !9349, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata i32 64, metadata !9352, metadata !DIExpression()), !dbg !9358
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !9373
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !9350, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog24, !dbg !9374

sw.default:                                       ; preds = %entry
  %call6 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9375
  %8 = getelementptr inbounds %struct.c_token, %struct.c_token* %call6, i64 0, i32 0, !dbg !9376
  %bf.load7 = load i32, i32* %8, align 8, !dbg !9376
  %trunc = trunc i32 %bf.load7 to i8, !dbg !9377
  switch i8 %trunc, label %sw.default18 [
    i8 29, label %sw.epilog
    i8 30, label %sw.bb10
    i8 27, label %sw.bb11
    i8 28, label %sw.bb12
    i8 36, label %sw.bb13
    i8 35, label %sw.bb14
    i8 32, label %sw.bb15
    i8 33, label %sw.bb16
    i8 34, label %sw.bb17
  ], !dbg !9377

sw.bb10:                                          ; preds = %sw.default
  call void @llvm.dbg.value(metadata i32 67, metadata !9352, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog, !dbg !9378

sw.bb11:                                          ; preds = %sw.default
  call void @llvm.dbg.value(metadata i32 63, metadata !9352, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog, !dbg !9380

sw.bb12:                                          ; preds = %sw.default
  call void @llvm.dbg.value(metadata i32 64, metadata !9352, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog, !dbg !9381

sw.bb13:                                          ; preds = %sw.default
  call void @llvm.dbg.value(metadata i32 83, metadata !9352, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog, !dbg !9382

sw.bb14:                                          ; preds = %sw.default
  call void @llvm.dbg.value(metadata i32 84, metadata !9352, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog, !dbg !9383

sw.bb15:                                          ; preds = %sw.default
  call void @llvm.dbg.value(metadata i32 89, metadata !9352, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog, !dbg !9384

sw.bb16:                                          ; preds = %sw.default
  call void @llvm.dbg.value(metadata i32 87, metadata !9352, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog, !dbg !9385

sw.bb17:                                          ; preds = %sw.default
  call void @llvm.dbg.value(metadata i32 88, metadata !9352, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog, !dbg !9386

sw.default18:                                     ; preds = %sw.default
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.79, i64 0, i64 0)) #7, !dbg !9387
  br label %saw_error, !dbg !9388

sw.epilog:                                        ; preds = %sw.default, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10
  %code.0 = phi i32 [ 88, %sw.bb17 ], [ 87, %sw.bb16 ], [ 89, %sw.bb15 ], [ 84, %sw.bb14 ], [ 83, %sw.bb13 ], [ 64, %sw.bb12 ], [ 63, %sw.bb11 ], [ 67, %sw.bb10 ], [ 65, %sw.default ], !dbg !9389
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !9352, metadata !DIExpression()), !dbg !9358
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9390
  %call19 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9391
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call19, i64 0, i32 2, !dbg !9392
  %9 = load i32, i32* %location, align 8, !dbg !9392
  call void @llvm.dbg.value(metadata i32 %9, metadata !9354, metadata !DIExpression()), !dbg !9393
  %10 = bitcast %struct.c_expr* %tmp20 to i8*, !dbg !9394
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !9394
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp20, %struct.c_parser* %parser) #7, !dbg !9394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %10, i64 24, i1 false), !dbg !9394
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !9394
  %11 = bitcast %struct.c_expr* %tmp21 to i8*, !dbg !9395
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #8, !dbg !9395
  call void @llvm.dbg.value(metadata %struct.c_expr* %rhs_expr, metadata !9353, metadata !DIExpression(DW_OP_deref)), !dbg !9358
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp21, i32 %9, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %rhs_expr) #6, !dbg !9395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %0, i8* nonnull align 8 %11, i64 24, i1 false), !dbg !9395
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #8, !dbg !9395
  %value22 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %rhs_expr, i64 0, i32 0, !dbg !9396
  %12 = load %union.tree_node*, %union.tree_node** %value22, align 8, !dbg !9396
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !9350, metadata !DIExpression()), !dbg !9358
  %call23 = call %union.tree_node* @c_fully_fold(%union.tree_node* %12, i8 zeroext 0, i8* null) #6, !dbg !9397
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !9350, metadata !DIExpression()), !dbg !9358
  br label %sw.epilog24, !dbg !9398

sw.epilog24:                                      ; preds = %sw.epilog, %sw.bb2, %sw.bb1
  %rhs.0 = phi %union.tree_node* [ %call23, %sw.epilog ], [ %7, %sw.bb2 ], [ %5, %sw.bb1 ], !dbg !9399
  %lhs.0 = phi %union.tree_node* [ %call, %sw.epilog ], [ %6, %sw.bb2 ], [ %4, %sw.bb1 ], !dbg !9358
  %code.1 = phi i32 [ %code.0, %sw.epilog ], [ 64, %sw.bb2 ], [ 63, %sw.bb1 ], !dbg !9399
  call void @llvm.dbg.value(metadata i32 %code.1, metadata !9352, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %union.tree_node* %lhs.0, metadata !9349, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.value(metadata %union.tree_node* %rhs.0, metadata !9350, metadata !DIExpression()), !dbg !9358
  %call25 = call %union.tree_node* @c_finish_omp_atomic(i32 %loc, i32 %code.1, %union.tree_node* %lhs.0, %union.tree_node* %rhs.0) #6, !dbg !9400
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !9351, metadata !DIExpression()), !dbg !9358
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9401
  %cmp = icmp eq %union.tree_node* %call25, %13, !dbg !9403
  br i1 %cmp, label %if.end, label %if.then, !dbg !9404

if.then:                                          ; preds = %sw.epilog24
  %call26 = call %union.tree_node* @add_stmt(%union.tree_node* %call25) #6, !dbg !9405
  br label %if.end, !dbg !9405

if.end:                                           ; preds = %sw.epilog24, %if.then
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !9406
  br label %cleanup, !dbg !9407

cleanup:                                          ; preds = %if.end, %saw_error
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #8, !dbg !9407
  ret void, !dbg !9407
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_critical(i32 %loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !9408 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9412, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9413, metadata !DIExpression()), !dbg !9416
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9415, metadata !DIExpression()), !dbg !9416
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !9417
  %tobool = icmp eq i8 %call, 0, !dbg !9417
  br i1 %tobool, label %if.else6, label %if.then, !dbg !9419

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9420
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !9422
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9422
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !9424

if.then3:                                         ; preds = %if.then
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9425
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 1, !dbg !9427
  %0 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !9427
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !9415, metadata !DIExpression()), !dbg !9416
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9428
  %call5 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !9429
  br label %if.end11, !dbg !9430

if.else:                                          ; preds = %if.then
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0)) #7, !dbg !9431
  br label %if.end11

if.else6:                                         ; preds = %entry
  %call7 = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 71) #7, !dbg !9432
  %tobool8 = icmp eq i8 %call7, 0, !dbg !9432
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !9434

if.then9:                                         ; preds = %if.else6
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.74, i64 0, i64 0)) #7, !dbg !9435
  br label %if.end11, !dbg !9435

if.end11:                                         ; preds = %if.else6, %if.then9, %if.then3, %if.else
  %name.1 = phi %union.tree_node* [ %0, %if.then3 ], [ null, %if.else ], [ null, %if.then9 ], [ null, %if.else6 ], !dbg !9416
  call void @llvm.dbg.value(metadata %union.tree_node* %name.1, metadata !9415, metadata !DIExpression()), !dbg !9416
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !9436
  %call12 = tail call fastcc %union.tree_node* @c_parser_omp_structured_block(%struct.c_parser* %parser) #7, !dbg !9437
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !9414, metadata !DIExpression()), !dbg !9416
  %call13 = tail call %union.tree_node* @c_finish_omp_critical(i32 %loc, %union.tree_node* %call12, %union.tree_node* %name.1) #6, !dbg !9438
  ret %union.tree_node* %call13, !dbg !9439
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_for(i32 %loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !9440 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9442, metadata !DIExpression()), !dbg !9447
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9443, metadata !DIExpression()), !dbg !9447
  %call = tail call fastcc %union.tree_node* @c_parser_omp_all_clauses(%struct.c_parser* %parser, i32 15778, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.80, i64 0, i64 0)) #7, !dbg !9448
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9445, metadata !DIExpression()), !dbg !9447
  %call1 = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext 1) #6, !dbg !9449
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9444, metadata !DIExpression()), !dbg !9447
  %call2 = tail call fastcc %union.tree_node* @c_parser_omp_for_loop(i32 %loc, %struct.c_parser* %parser, %union.tree_node* %call, %union.tree_node** null) #7, !dbg !9450
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9446, metadata !DIExpression()), !dbg !9447
  %call3 = tail call %union.tree_node* @c_end_compound_stmt(i32 %loc, %union.tree_node* %call1, i8 zeroext 1) #6, !dbg !9451
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9444, metadata !DIExpression()), !dbg !9447
  %call4 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call3) #6, !dbg !9452
  ret %union.tree_node* %call2, !dbg !9453
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_master(i32 %loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !9454 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9456, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9457, metadata !DIExpression()), !dbg !9458
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !9459
  %call = tail call fastcc %union.tree_node* @c_parser_omp_structured_block(%struct.c_parser* %parser) #7, !dbg !9460
  %call1 = tail call %union.tree_node* @c_finish_omp_master(i32 %loc, %union.tree_node* %call) #6, !dbg !9461
  ret %union.tree_node* %call1, !dbg !9462
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_ordered(i32 %loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !9463 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9465, metadata !DIExpression()), !dbg !9467
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9466, metadata !DIExpression()), !dbg !9467
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !9468
  %call = tail call fastcc %union.tree_node* @c_parser_omp_structured_block(%struct.c_parser* %parser) #7, !dbg !9469
  %call1 = tail call %union.tree_node* @c_finish_omp_ordered(i32 %loc, %union.tree_node* %call) #6, !dbg !9470
  ret %union.tree_node* %call1, !dbg !9471
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_parallel(i32 %loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !9472 {
entry:
  %par_clause = alloca %union.tree_node*, align 8
  %ws_clause = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9474, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9475, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i32 8, metadata !9476, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.117, i64 0, i64 0), metadata !9477, metadata !DIExpression()), !dbg !9488
  %0 = bitcast %union.tree_node** %par_clause to i8*, !dbg !9489
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9489
  %1 = bitcast %union.tree_node** %ws_clause to i8*, !dbg !9489
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9489
  call void @llvm.dbg.value(metadata i32 23156, metadata !9483, metadata !DIExpression()), !dbg !9488
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 40) #7, !dbg !9490
  %tobool = icmp eq i8 %call, 0, !dbg !9490
  br i1 %tobool, label %if.else, label %if.then, !dbg !9491

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9492
  call void @llvm.dbg.value(metadata i32 9, metadata !9476, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.118, i64 0, i64 0), metadata !9477, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i32 32758, metadata !9483, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i32 32502, metadata !9483, metadata !DIExpression()), !dbg !9488
  br label %if.end10, !dbg !9494

if.else:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !9495
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9495
  br i1 %tobool2, label %if.end10, label %if.then3, !dbg !9496

if.then3:                                         ; preds = %if.else
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9497
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 1, !dbg !9497
  %2 = bitcast %union.tree_node** %value to %struct.tree_identifier**, !dbg !9497
  %3 = load %struct.tree_identifier*, %struct.tree_identifier** %2, align 8, !dbg !9497
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %3, i64 0, i32 1, i32 0, !dbg !9497
  %4 = load i8*, i8** %str, align 8, !dbg !9497
  call void @llvm.dbg.value(metadata i8* %4, metadata !9484, metadata !DIExpression()), !dbg !9498
  %call5 = tail call i32 @strcmp(i8* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.119, i64 0, i64 0)) #6, !dbg !9499
  %cmp = icmp eq i32 %call5, 0, !dbg !9501
  br i1 %cmp, label %if.then6, label %if.end10, !dbg !9502

if.then6:                                         ; preds = %if.then3
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9503
  call void @llvm.dbg.value(metadata i32 10, metadata !9476, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.120, i64 0, i64 0), metadata !9477, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i32 23540, metadata !9483, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i32 23284, metadata !9483, metadata !DIExpression()), !dbg !9488
  br label %if.end10, !dbg !9505

if.end10:                                         ; preds = %if.else, %if.then6, %if.then3, %if.then
  %p_name.2 = phi i8* [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.118, i64 0, i64 0), %if.then ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.117, i64 0, i64 0), %if.else ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.120, i64 0, i64 0), %if.then6 ], [ getelementptr inbounds ([21 x i8], [21 x i8]* @.str.117, i64 0, i64 0), %if.then3 ], !dbg !9506
  %p_kind.2 = phi i32 [ 9, %if.then ], [ 8, %if.else ], [ 10, %if.then6 ], [ 8, %if.then3 ], !dbg !9506
  %mask.2 = phi i32 [ 32502, %if.then ], [ 23156, %if.else ], [ 23284, %if.then6 ], [ 23156, %if.then3 ], !dbg !9506
  call void @llvm.dbg.value(metadata i32 %mask.2, metadata !9483, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i32 %p_kind.2, metadata !9476, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata i8* %p_name.2, metadata !9477, metadata !DIExpression()), !dbg !9488
  %call11 = tail call fastcc %union.tree_node* @c_parser_omp_all_clauses(%struct.c_parser* %parser, i32 %mask.2, i8* %p_name.2) #7, !dbg !9507
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !9479, metadata !DIExpression()), !dbg !9488
  switch i32 %p_kind.2, label %sw.default [
    i32 8, label %sw.bb
    i32 9, label %sw.bb14
    i32 10, label %sw.bb18
  ], !dbg !9508

sw.bb:                                            ; preds = %if.end10
  %call12 = tail call %union.tree_node* @c_begin_omp_parallel() #6, !dbg !9509
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !9482, metadata !DIExpression()), !dbg !9488
  tail call fastcc void @c_parser_statement(%struct.c_parser* %parser) #7, !dbg !9511
  %call13 = tail call %union.tree_node* @c_finish_omp_parallel(i32 %loc, %union.tree_node* %call11, %union.tree_node* %call12) #6, !dbg !9512
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !9478, metadata !DIExpression()), !dbg !9488
  br label %sw.epilog, !dbg !9513

sw.bb14:                                          ; preds = %if.end10
  %call15 = tail call %union.tree_node* @c_begin_omp_parallel() #6, !dbg !9514
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !9482, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata %union.tree_node** %par_clause, metadata !9480, metadata !DIExpression(DW_OP_deref)), !dbg !9488
  call void @llvm.dbg.value(metadata %union.tree_node** %ws_clause, metadata !9481, metadata !DIExpression(DW_OP_deref)), !dbg !9488
  call void @c_split_parallel_clauses(i32 %loc, %union.tree_node* %call11, %union.tree_node** nonnull %par_clause, %union.tree_node** nonnull %ws_clause) #6, !dbg !9515
  %5 = load %union.tree_node*, %union.tree_node** %ws_clause, align 8, !dbg !9516
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9481, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata %union.tree_node** %par_clause, metadata !9480, metadata !DIExpression(DW_OP_deref)), !dbg !9488
  %call16 = call fastcc %union.tree_node* @c_parser_omp_for_loop(i32 %loc, %struct.c_parser* %parser, %union.tree_node* %5, %union.tree_node** nonnull %par_clause) #7, !dbg !9517
  %6 = load %union.tree_node*, %union.tree_node** %par_clause, align 8, !dbg !9518
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !9480, metadata !DIExpression()), !dbg !9488
  %call17 = call %union.tree_node* @c_finish_omp_parallel(i32 %loc, %union.tree_node* %6, %union.tree_node* %call15) #6, !dbg !9519
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !9478, metadata !DIExpression()), !dbg !9488
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9520
  %bf.load = load i64, i64* %7, align 8, !dbg !9521
  %bf.set = or i64 %bf.load, 268435456, !dbg !9521
  store i64 %bf.set, i64* %7, align 8, !dbg !9521
  br label %sw.epilog, !dbg !9522

sw.bb18:                                          ; preds = %if.end10
  %call19 = tail call %union.tree_node* @c_begin_omp_parallel() #6, !dbg !9523
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !9482, metadata !DIExpression()), !dbg !9488
  call void @llvm.dbg.value(metadata %union.tree_node** %par_clause, metadata !9480, metadata !DIExpression(DW_OP_deref)), !dbg !9488
  call void @llvm.dbg.value(metadata %union.tree_node** %ws_clause, metadata !9481, metadata !DIExpression(DW_OP_deref)), !dbg !9488
  call void @c_split_parallel_clauses(i32 %loc, %union.tree_node* %call11, %union.tree_node** nonnull %par_clause, %union.tree_node** nonnull %ws_clause) #6, !dbg !9524
  %call20 = call fastcc %union.tree_node* @c_parser_omp_sections_scope(i32 %loc, %struct.c_parser* %parser) #7, !dbg !9525
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !9478, metadata !DIExpression()), !dbg !9488
  %tobool21 = icmp eq %union.tree_node* %call20, null, !dbg !9526
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !9528

if.then22:                                        ; preds = %sw.bb18
  %8 = bitcast %union.tree_node** %ws_clause to i64*, !dbg !9529
  %9 = load i64, i64* %8, align 8, !dbg !9529
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9530
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9530
  %10 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !9531
  store i64 %9, i64* %10, align 8, !dbg !9531
  br label %if.end23, !dbg !9530

if.end23:                                         ; preds = %sw.bb18, %if.then22
  %11 = load %union.tree_node*, %union.tree_node** %par_clause, align 8, !dbg !9532
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !9480, metadata !DIExpression()), !dbg !9488
  %call24 = call %union.tree_node* @c_finish_omp_parallel(i32 %loc, %union.tree_node* %11, %union.tree_node* %call19) #6, !dbg !9533
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !9478, metadata !DIExpression()), !dbg !9488
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9534
  %bf.load26 = load i64, i64* %12, align 8, !dbg !9535
  %bf.set28 = or i64 %bf.load26, 268435456, !dbg !9535
  store i64 %bf.set28, i64* %12, align 8, !dbg !9535
  br label %sw.epilog, !dbg !9536

sw.default:                                       ; preds = %if.end10
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 8515, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9537
  br label %sw.epilog, !dbg !9538

sw.epilog:                                        ; preds = %sw.default, %if.end23, %sw.bb14, %sw.bb
  %stmt.0 = phi %union.tree_node* [ undef, %sw.default ], [ %call24, %if.end23 ], [ %call17, %sw.bb14 ], [ %call13, %sw.bb ]
  call void @llvm.dbg.value(metadata %union.tree_node* %stmt.0, metadata !9478, metadata !DIExpression()), !dbg !9488
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #8, !dbg !9539
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !9539
  ret %union.tree_node* %stmt.0, !dbg !9540
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_sections(i32 %loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !9541 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9543, metadata !DIExpression()), !dbg !9548
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9544, metadata !DIExpression()), !dbg !9548
  %call = tail call fastcc %union.tree_node* @c_parser_omp_all_clauses(%struct.c_parser* %parser, i32 6560, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.122, i64 0, i64 0)) #7, !dbg !9549
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9546, metadata !DIExpression()), !dbg !9548
  %call1 = tail call %union.tree_node* @c_begin_compound_stmt(i8 zeroext 1) #6, !dbg !9550
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9545, metadata !DIExpression()), !dbg !9548
  %call2 = tail call fastcc %union.tree_node* @c_parser_omp_sections_scope(i32 %loc, %struct.c_parser* %parser) #7, !dbg !9551
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !9547, metadata !DIExpression()), !dbg !9548
  %tobool = icmp eq %union.tree_node* %call2, null, !dbg !9552
  br i1 %tobool, label %if.end, label %if.then, !dbg !9554

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9555
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9555
  store %union.tree_node* %call, %union.tree_node** %arrayidx, align 8, !dbg !9556
  br label %if.end, !dbg !9555

if.end:                                           ; preds = %entry, %if.then
  %call3 = tail call %union.tree_node* @c_end_compound_stmt(i32 %loc, %union.tree_node* %call1, i8 zeroext 1) #6, !dbg !9557
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9545, metadata !DIExpression()), !dbg !9548
  %call4 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call3) #6, !dbg !9558
  ret %union.tree_node* %call2, !dbg !9559
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_single(i32 %loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !9560 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9562, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9563, metadata !DIExpression()), !dbg !9565
  %call = tail call %union.tree_node* @make_node_stat(i32 157) #6, !dbg !9566
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9564, metadata !DIExpression()), !dbg !9565
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9567
  store i32 %loc, i32* %0, align 8, !dbg !9567
  %1 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !9568
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9569
  %2 = bitcast %union.tree_node** %type to i64*, !dbg !9570
  store i64 %1, i64* %2, align 8, !dbg !9570
  %call1 = tail call fastcc %union.tree_node* @c_parser_omp_all_clauses(%struct.c_parser* %parser, i32 2344, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.123, i64 0, i64 0)) #7, !dbg !9571
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9572
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !9572
  store %union.tree_node* %call1, %union.tree_node** %arrayidx, align 8, !dbg !9573
  %call3 = tail call fastcc %union.tree_node* @c_parser_omp_structured_block(%struct.c_parser* %parser) #7, !dbg !9574
  store %union.tree_node* %call3, %union.tree_node** %operands, align 8, !dbg !9575
  %call7 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call) #6, !dbg !9576
  ret %union.tree_node* %call7, !dbg !9577
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_task(i32 %loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !9578 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9580, metadata !DIExpression()), !dbg !9584
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9581, metadata !DIExpression()), !dbg !9584
  %call = tail call fastcc %union.tree_node* @c_parser_omp_all_clauses(%struct.c_parser* %parser, i32 51312, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124, i64 0, i64 0)) #7, !dbg !9585
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9582, metadata !DIExpression()), !dbg !9584
  %call1 = tail call %union.tree_node* @c_begin_omp_task() #6, !dbg !9586
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !9583, metadata !DIExpression()), !dbg !9584
  tail call fastcc void @c_parser_statement(%struct.c_parser* %parser) #7, !dbg !9587
  %call2 = tail call %union.tree_node* @c_finish_omp_task(i32 %loc, %union.tree_node* %call, %union.tree_node* %call1) #6, !dbg !9588
  ret %union.tree_node* %call2, !dbg !9589
}

declare dso_local %union.tree_node* @c_finish_omp_atomic(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_structured_block(%struct.c_parser* %parser) unnamed_addr #5 !dbg !9590 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9592, metadata !DIExpression()), !dbg !9594
  %call = tail call %union.tree_node* @push_stmt_list() #6, !dbg !9595
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !9593, metadata !DIExpression()), !dbg !9594
  tail call fastcc void @c_parser_statement(%struct.c_parser* %parser) #7, !dbg !9596
  %call1 = tail call %union.tree_node* @pop_stmt_list(%union.tree_node* %call) #6, !dbg !9597
  ret %union.tree_node* %call1, !dbg !9598
}

declare dso_local %union.tree_node* @c_finish_omp_critical(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @push_stmt_list() local_unnamed_addr #2

declare dso_local %union.tree_node* @pop_stmt_list(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_all_clauses(%struct.c_parser* %parser, i32 %mask, i8* %where) unnamed_addr #5 !dbg !9599 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9603, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i32 %mask, metadata !9604, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* %where, metadata !9605, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8 1, metadata !9607, metadata !DIExpression()), !dbg !9615
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !9616
  br label %while.cond, !dbg !9618

while.cond:                                       ; preds = %cleanup, %entry
  %clauses.0 = phi %union.tree_node* [ null, %entry ], [ %clauses.3, %cleanup ], !dbg !9619
  %first.0 = phi i8 [ 1, %entry ], [ 0, %cleanup ], !dbg !9615
  call void @llvm.dbg.value(metadata i8 %first.0, metadata !9607, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.0, metadata !9606, metadata !DIExpression()), !dbg !9615
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 71) #7, !dbg !9620
  %tobool = icmp eq i8 %call, 0, !dbg !9618
  br i1 %tobool, label %saw_error, label %while.body, !dbg !9618

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.0, metadata !9613, metadata !DIExpression()), !dbg !9621
  %tobool1 = icmp eq i8 %first.0, 0, !dbg !9622
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !9624

land.lhs.true:                                    ; preds = %while.body
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !9625
  %tobool3 = icmp eq i8 %call2, 0, !dbg !9625
  br i1 %tobool3, label %if.end, label %if.then, !dbg !9626

if.then:                                          ; preds = %land.lhs.true
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9627
  br label %if.end, !dbg !9627

if.end:                                           ; preds = %land.lhs.true, %while.body, %if.then
  call void @llvm.dbg.value(metadata i8 0, metadata !9607, metadata !DIExpression()), !dbg !9615
  %call4 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9628
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call4, i64 0, i32 2, !dbg !9629
  %0 = load i32, i32* %location, align 8, !dbg !9629
  call void @llvm.dbg.value(metadata i32 %0, metadata !9608, metadata !DIExpression()), !dbg !9621
  %call5 = tail call fastcc i32 @c_parser_omp_clause_name(%struct.c_parser* %parser) #7, !dbg !9630
  call void @llvm.dbg.value(metadata i32 %call5, metadata !9610, metadata !DIExpression()), !dbg !9621
  switch i32 %call5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb7
    i32 3, label %sw.bb9
    i32 4, label %sw.bb11
    i32 5, label %sw.bb13
    i32 6, label %sw.bb15
    i32 7, label %sw.bb17
    i32 8, label %sw.bb19
    i32 9, label %sw.bb21
    i32 10, label %sw.bb23
    i32 11, label %sw.bb25
    i32 12, label %sw.bb27
    i32 13, label %sw.bb29
    i32 14, label %sw.bb31
    i32 15, label %sw.bb33
  ], !dbg !9631

sw.bb:                                            ; preds = %if.end
  %call6 = tail call fastcc %union.tree_node* @c_parser_omp_clause_collapse(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9632
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9634

sw.bb7:                                           ; preds = %if.end
  %call8 = tail call fastcc %union.tree_node* @c_parser_omp_clause_copyin(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9635
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9636

sw.bb9:                                           ; preds = %if.end
  %call10 = tail call fastcc %union.tree_node* @c_parser_omp_clause_copyprivate(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9637
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9638

sw.bb11:                                          ; preds = %if.end
  %call12 = tail call fastcc %union.tree_node* @c_parser_omp_clause_default(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9639
  call void @llvm.dbg.value(metadata %union.tree_node* %call12, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9640

sw.bb13:                                          ; preds = %if.end
  %call14 = tail call fastcc %union.tree_node* @c_parser_omp_clause_firstprivate(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9641
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.85, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9642

sw.bb15:                                          ; preds = %if.end
  %call16 = tail call fastcc %union.tree_node* @c_parser_omp_clause_if(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9643
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9644

sw.bb17:                                          ; preds = %if.end
  %call18 = tail call fastcc %union.tree_node* @c_parser_omp_clause_lastprivate(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9645
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.87, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9646

sw.bb19:                                          ; preds = %if.end
  %call20 = tail call fastcc %union.tree_node* @c_parser_omp_clause_nowait(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9647
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9648

sw.bb21:                                          ; preds = %if.end
  %call22 = tail call fastcc %union.tree_node* @c_parser_omp_clause_num_threads(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9649
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9650

sw.bb23:                                          ; preds = %if.end
  %call24 = tail call fastcc %union.tree_node* @c_parser_omp_clause_ordered(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9651
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9652

sw.bb25:                                          ; preds = %if.end
  %call26 = tail call fastcc %union.tree_node* @c_parser_omp_clause_private(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9653
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9654

sw.bb27:                                          ; preds = %if.end
  %call28 = tail call fastcc %union.tree_node* @c_parser_omp_clause_reduction(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9655
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9656

sw.bb29:                                          ; preds = %if.end
  %call30 = tail call fastcc %union.tree_node* @c_parser_omp_clause_schedule(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9657
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9658

sw.bb31:                                          ; preds = %if.end
  %call32 = tail call fastcc %union.tree_node* @c_parser_omp_clause_shared(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9659
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.94, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9660

sw.bb33:                                          ; preds = %if.end
  %call34 = tail call fastcc %union.tree_node* @c_parser_omp_clause_untied(%struct.c_parser* %parser, %union.tree_node* %clauses.0) #7, !dbg !9661
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.value(metadata i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95, i64 0, i64 0), metadata !9612, metadata !DIExpression()), !dbg !9621
  br label %sw.epilog, !dbg !9662

sw.default:                                       ; preds = %if.end
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.96, i64 0, i64 0)) #7, !dbg !9663
  br label %cleanup, !dbg !9664

sw.epilog:                                        ; preds = %sw.bb33, %sw.bb31, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb
  %clauses.1 = phi %union.tree_node* [ %call34, %sw.bb33 ], [ %call32, %sw.bb31 ], [ %call30, %sw.bb29 ], [ %call28, %sw.bb27 ], [ %call26, %sw.bb25 ], [ %call24, %sw.bb23 ], [ %call22, %sw.bb21 ], [ %call20, %sw.bb19 ], [ %call18, %sw.bb17 ], [ %call16, %sw.bb15 ], [ %call14, %sw.bb13 ], [ %call12, %sw.bb11 ], [ %call10, %sw.bb9 ], [ %call8, %sw.bb7 ], [ %call6, %sw.bb ], !dbg !9665
  %c_name.0 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95, i64 0, i64 0), %sw.bb33 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.94, i64 0, i64 0), %sw.bb31 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i64 0, i64 0), %sw.bb29 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i64 0, i64 0), %sw.bb27 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i64 0, i64 0), %sw.bb25 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i64 0, i64 0), %sw.bb23 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), %sw.bb21 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0), %sw.bb19 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.87, i64 0, i64 0), %sw.bb17 ], [ getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i64 0, i64 0), %sw.bb15 ], [ getelementptr inbounds ([13 x i8], [13 x i8]* @.str.85, i64 0, i64 0), %sw.bb13 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i64 0, i64 0), %sw.bb11 ], [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83, i64 0, i64 0), %sw.bb9 ], [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i64 0, i64 0), %sw.bb7 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0), %sw.bb ], !dbg !9665
  call void @llvm.dbg.value(metadata i8* %c_name.0, metadata !9612, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.1, metadata !9606, metadata !DIExpression()), !dbg !9615
  %1 = shl i32 1, %call5, !dbg !9666
  %2 = and i32 %1, %mask, !dbg !9666
  %cmp = icmp eq i32 %2, 0, !dbg !9666
  br i1 %cmp, label %land.lhs.true36, label %cleanup, !dbg !9667

land.lhs.true36:                                  ; preds = %sw.epilog
  %bf.load = load i8, i8* %error, align 2, !dbg !9668
  %bf.clear = and i8 %bf.load, 1, !dbg !9668
  %tobool37 = icmp eq i8 %bf.clear, 0, !dbg !9669
  br i1 %tobool37, label %if.then38, label %cleanup, !dbg !9670

if.then38:                                        ; preds = %land.lhs.true36
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.0, metadata !9606, metadata !DIExpression()), !dbg !9615
  tail call void (i32, i8*, ...) @error_at(i32 %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.97, i64 0, i64 0), i8* %c_name.0, i8* %where) #6, !dbg !9671
  br label %cleanup, !dbg !9673

cleanup:                                          ; preds = %land.lhs.true36, %sw.epilog, %if.then38, %sw.default
  %clauses.3 = phi %union.tree_node* [ %clauses.0, %sw.default ], [ %clauses.1, %land.lhs.true36 ], [ %clauses.0, %if.then38 ], [ %clauses.1, %sw.epilog ], !dbg !9615
  %cleanup.dest.slot.0 = phi i32 [ 5, %sw.default ], [ 0, %land.lhs.true36 ], [ 0, %if.then38 ], [ 0, %sw.epilog ]
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.3, metadata !9606, metadata !DIExpression()), !dbg !9615
  switch i32 %cleanup.dest.slot.0, label %cleanup44.loopexit [
    i32 0, label %while.cond
    i32 5, label %saw_error
  ], !llvm.loop !9674

saw_error:                                        ; preds = %while.cond, %cleanup
  %clauses.4 = phi %union.tree_node* [ %clauses.3, %cleanup ], [ %clauses.0, %while.cond ], !dbg !9619
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.4, metadata !9606, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.label(metadata !9614), !dbg !9676
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !9677
  %call43 = tail call %union.tree_node* @c_finish_omp_clauses(%union.tree_node* %clauses.4) #6, !dbg !9678
  br label %cleanup44, !dbg !9679

cleanup44.loopexit:                               ; preds = %cleanup
  br label %cleanup44, !dbg !9680

cleanup44:                                        ; preds = %cleanup44.loopexit, %saw_error
  %retval.0 = phi %union.tree_node* [ %call43, %saw_error ], [ undef, %cleanup44.loopexit ]
  ret %union.tree_node* %retval.0, !dbg !9680
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_for_loop(i32 %loc, %struct.c_parser* %parser, %union.tree_node* %clauses, %union.tree_node** %par_clauses) unnamed_addr #5 !dbg !9681 {
entry:
  %decl_exp = alloca %struct.c_expr, align 8
  %init_exp = alloca %struct.c_expr, align 8
  %tmp = alloca %struct.c_expr, align 8
  %tmp50 = alloca %struct.c_expr, align 8
  %tmp51 = alloca %struct.c_expr, align 8
  %cond_expr = alloca %struct.c_expr, align 8
  %tmp74 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9685, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !9686, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses, metadata !9687, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node** %par_clauses, metadata !9688, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9702, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9703, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 0, metadata !9704, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 0, metadata !9705, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 1, metadata !9707, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 0, metadata !9708, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses, metadata !9697, metadata !DIExpression()), !dbg !9758
  br label %for.cond, !dbg !9759

for.cond:                                         ; preds = %for.inc, %entry
  %cl.0 = phi %union.tree_node* [ %clauses, %entry ], [ %3, %for.inc ], !dbg !9761
  %collapse.0 = phi i32 [ 1, %entry ], [ %collapse.1, %for.inc ], !dbg !9758
  call void @llvm.dbg.value(metadata i32 %collapse.0, metadata !9707, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %cl.0, metadata !9697, metadata !DIExpression()), !dbg !9758
  %tobool = icmp eq %union.tree_node* %cl.0, null, !dbg !9762
  br i1 %tobool, label %for.end, label %for.body, !dbg !9762

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %cl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9763
  %1 = load i32, i32* %0, align 4, !dbg !9763
  %cmp = icmp eq i32 %1, 14, !dbg !9766
  br i1 %cmp, label %if.then, label %for.inc, !dbg !9767

if.then:                                          ; preds = %for.body
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %cl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9768
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !9768
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !9768
  %call = tail call i64 @tree_low_cst(%union.tree_node* %2, i32 0) #6, !dbg !9769
  %conv = trunc i64 %call to i32, !dbg !9769
  call void @llvm.dbg.value(metadata i32 %conv, metadata !9707, metadata !DIExpression()), !dbg !9758
  br label %for.inc, !dbg !9770

for.inc:                                          ; preds = %for.body, %if.then
  %collapse.1 = phi i32 [ %conv, %if.then ], [ %collapse.0, %for.body ], !dbg !9758
  call void @llvm.dbg.value(metadata i32 %collapse.1, metadata !9707, metadata !DIExpression()), !dbg !9758
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %cl.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9771
  %3 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !9771
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !9697, metadata !DIExpression()), !dbg !9758
  br label %for.cond, !dbg !9772, !llvm.loop !9773

for.end:                                          ; preds = %for.cond
  %collapse.0.lcssa = phi i32 [ %collapse.0, %for.cond ], !dbg !9758
  call void @llvm.dbg.value(metadata i32 %collapse.0.lcssa, metadata !9707, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %collapse.0.lcssa, metadata !9707, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %collapse.0.lcssa, metadata !9707, metadata !DIExpression()), !dbg !9758
  %cmp2 = icmp sgt i32 %collapse.0.lcssa, 0, !dbg !9775
  br i1 %cmp2, label %cond.end, label %cond.true, !dbg !9775

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i32 7990, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !9775
  br label %cond.end, !dbg !9775

cond.end:                                         ; preds = %for.end, %cond.true
  %call5 = tail call %union.tree_node* @make_tree_vec_stat(i32 %collapse.0.lcssa) #6, !dbg !9776
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !9698, metadata !DIExpression()), !dbg !9758
  %call6 = tail call %union.tree_node* @make_tree_vec_stat(i32 %collapse.0.lcssa) #6, !dbg !9777
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !9701, metadata !DIExpression()), !dbg !9758
  %call7 = tail call %union.tree_node* @make_tree_vec_stat(i32 %collapse.0.lcssa) #6, !dbg !9778
  call void @llvm.dbg.value(metadata %union.tree_node* %call7, metadata !9699, metadata !DIExpression()), !dbg !9758
  %call8 = tail call %union.tree_node* @make_tree_vec_stat(i32 %collapse.0.lcssa) #6, !dbg !9779
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !9700, metadata !DIExpression()), !dbg !9758
  %call9 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 40) #7, !dbg !9780
  %tobool10 = icmp eq i8 %call9, 0, !dbg !9780
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !9782

if.then11:                                        ; preds = %cond.end
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.112, i64 0, i64 0)) #7, !dbg !9783
  br label %cleanup260, !dbg !9785

if.end12:                                         ; preds = %cond.end
  %call13 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9786
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call13, i64 0, i32 2, !dbg !9787
  %4 = load i32, i32* %location, align 8, !dbg !9787
  call void @llvm.dbg.value(metadata i32 %4, metadata !9709, metadata !DIExpression()), !dbg !9758
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9788
  call void @llvm.dbg.value(metadata i32 0, metadata !9706, metadata !DIExpression()), !dbg !9758
  %5 = bitcast %struct.c_expr* %decl_exp to i8*, !dbg !9789
  %6 = bitcast %struct.c_expr* %init_exp to i8*, !dbg !9789
  %7 = bitcast %struct.c_expr* %tmp to i8*, !dbg !9789
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %decl_exp, i64 0, i32 0, !dbg !9789
  %8 = bitcast %struct.c_expr* %tmp50 to i8*, !dbg !9789
  %9 = bitcast %struct.c_expr* %tmp51 to i8*, !dbg !9789
  %original_type = getelementptr inbounds %struct.c_expr, %struct.c_expr* %decl_exp, i64 0, i32 2, !dbg !9789
  %value52 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init_exp, i64 0, i32 0, !dbg !9789
  %original_type53 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %init_exp, i64 0, i32 2, !dbg !9789
  %10 = bitcast %struct.c_expr* %cond_expr to i8*, !dbg !9790
  %value64 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %cond_expr, i64 0, i32 0, !dbg !9790
  %original_code = getelementptr inbounds %struct.c_expr, %struct.c_expr* %cond_expr, i64 0, i32 1, !dbg !9790
  %value75 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp74, i64 0, i32 0, !dbg !9791
  %a = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9792
  %a89 = getelementptr inbounds %union.tree_node, %union.tree_node* %call6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9792
  %a93 = getelementptr inbounds %union.tree_node, %union.tree_node* %call7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9792
  %a97 = getelementptr inbounds %union.tree_node, %union.tree_node* %call8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !9792
  br label %for.cond14, !dbg !9795

for.cond14:                                       ; preds = %for.inc126, %if.end12
  %indvars.iv12 = phi i64 [ %indvars.iv.next13, %for.inc126 ], [ 0, %if.end12 ], !dbg !9758
  %for_block.0 = phi %union.tree_node* [ %for_block.5, %for.inc126 ], [ null, %if.end12 ], !dbg !9758
  %fail.0 = phi i8 [ %fail.4, %for.inc126 ], [ 0, %if.end12 ], !dbg !9758
  %open_brace_parsed.0 = phi i8 [ %open_brace_parsed.3, %for.inc126 ], [ 0, %if.end12 ], !dbg !9796
  %collapse.2 = phi i32 [ %collapse.4, %for.inc126 ], [ %collapse.0.lcssa, %if.end12 ], !dbg !9797
  %nbraces.0 = phi i32 [ %nbraces.1, %for.inc126 ], [ 0, %if.end12 ], !dbg !9798
  call void @llvm.dbg.value(metadata i32 %nbraces.0, metadata !9708, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %collapse.2, metadata !9707, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i64 %indvars.iv12, metadata !9706, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 %open_brace_parsed.0, metadata !9705, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 %fail.0, metadata !9704, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.0, metadata !9702, metadata !DIExpression()), !dbg !9758
  %11 = sext i32 %collapse.2 to i64, !dbg !9799
  %cmp15 = icmp slt i64 %indvars.iv12, %11, !dbg !9799
  br i1 %cmp15, label %for.body17, label %for.end128, !dbg !9800

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.value(metadata i32 0, metadata !9710, metadata !DIExpression()), !dbg !9801
  %call18 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !9802
  %tobool19 = icmp eq i8 %call18, 0, !dbg !9802
  br i1 %tobool19, label %cleanup, label %if.end21, !dbg !9804

if.end21:                                         ; preds = %for.body17
  %call22 = call fastcc zeroext i8 @c_parser_next_token_starts_declspecs(%struct.c_parser* %parser) #7, !dbg !9805
  %tobool23 = icmp eq i8 %call22, 0, !dbg !9805
  br i1 %tobool23, label %if.else, label %if.then24, !dbg !9806

if.then24:                                        ; preds = %if.end21
  %cmp25 = icmp eq i64 %indvars.iv12, 0, !dbg !9807
  br i1 %cmp25, label %if.end30, label %if.then27, !dbg !9810

if.then27:                                        ; preds = %if.then24
  %call28 = call %union.tree_node* @c_begin_compound_stmt(i8 zeroext 1) #6, !dbg !9811
  %call29 = call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call28, %union.tree_node* %for_block.0) #6, !dbg !9811
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !9702, metadata !DIExpression()), !dbg !9758
  br label %if.end30, !dbg !9812

if.end30:                                         ; preds = %if.then24, %if.then27
  %for_block.1 = phi %union.tree_node* [ %call29, %if.then27 ], [ %for_block.0, %if.then24 ], !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.1, metadata !9702, metadata !DIExpression()), !dbg !9758
  call fastcc void @c_parser_declaration_or_fndef(%struct.c_parser* %parser, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1, i8 zeroext 1) #7, !dbg !9813
  %call31 = call %union.tree_node* @check_for_loop_decls(i32 %4) #6, !dbg !9814
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !9689, metadata !DIExpression()), !dbg !9758
  %cmp32 = icmp eq %union.tree_node* %call31, null, !dbg !9815
  br i1 %cmp32, label %error_init, label %if.end35, !dbg !9817

if.end35:                                         ; preds = %if.end30
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %call31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !9818
  %12 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !9818
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9820
  %cmp36 = icmp eq %union.tree_node* %12, %13, !dbg !9821
  %spec.select = select i1 %cmp36, %union.tree_node* %13, %union.tree_node* %call31, !dbg !9822
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !9689, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !9695, metadata !DIExpression()), !dbg !9758
  br label %if.end58, !dbg !9823

if.else:                                          ; preds = %if.end21
  %call40 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !9824
  %tobool42 = icmp eq i8 %call40, 0, !dbg !9824
  br i1 %tobool42, label %error_init, label %land.lhs.true, !dbg !9825

land.lhs.true:                                    ; preds = %if.else
  %call43 = call fastcc %struct.c_token* @c_parser_peek_2nd_token(%struct.c_parser* %parser) #7, !dbg !9826
  %14 = getelementptr inbounds %struct.c_token, %struct.c_token* %call43, i64 0, i32 0, !dbg !9827
  %bf.load = load i32, i32* %14, align 8, !dbg !9827
  %bf.clear = and i32 %bf.load, 255, !dbg !9827
  %cmp44 = icmp eq i32 %bf.clear, 0, !dbg !9828
  br i1 %cmp44, label %if.then46, label %error_init, !dbg !9829

if.then46:                                        ; preds = %land.lhs.true
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !9830
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #8, !dbg !9831
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #8, !dbg !9832
  call fastcc void @c_parser_postfix_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !9832
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %5, i8* nonnull align 8 %7, i64 24, i1 false), !dbg !9832
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #8, !dbg !9832
  %15 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !9833
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !9689, metadata !DIExpression()), !dbg !9758
  %call47 = call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0)) #7, !dbg !9834
  %call48 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9835
  %location49 = getelementptr inbounds %struct.c_token, %struct.c_token* %call48, i64 0, i32 2, !dbg !9836
  %16 = load i32, i32* %location49, align 8, !dbg !9836
  call void @llvm.dbg.value(metadata i32 %16, metadata !9719, metadata !DIExpression()), !dbg !9789
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #8, !dbg !9837
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp50, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !9837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %8, i64 24, i1 false), !dbg !9837
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #8, !dbg !9837
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #8, !dbg !9838
  call void @llvm.dbg.value(metadata %struct.c_expr* %init_exp, metadata !9718, metadata !DIExpression(DW_OP_deref)), !dbg !9789
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp51, i32 %16, %struct.c_expr* nonnull byval(%struct.c_expr) align 8 %init_exp) #6, !dbg !9838
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* nonnull align 8 %9, i64 24, i1 false), !dbg !9838
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #8, !dbg !9838
  %17 = load %union.tree_node*, %union.tree_node** %original_type, align 8, !dbg !9839
  %18 = load %union.tree_node*, %union.tree_node** %value52, align 8, !dbg !9840
  %19 = load %union.tree_node*, %union.tree_node** %original_type53, align 8, !dbg !9841
  %call54 = call %union.tree_node* @build_modify_expr(i32 %16, %union.tree_node* %15, %union.tree_node* %17, i32 116, i32 %16, %union.tree_node* %18, %union.tree_node* %19) #6, !dbg !9842
  call void @llvm.dbg.value(metadata %union.tree_node* %call54, metadata !9695, metadata !DIExpression()), !dbg !9758
  %call55 = call %union.tree_node* @c_process_expr_stmt(i32 %16, %union.tree_node* %call54) #6, !dbg !9843
  call void @llvm.dbg.value(metadata %union.tree_node* %call55, metadata !9695, metadata !DIExpression()), !dbg !9758
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !9844
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #8, !dbg !9845
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !9845
  br label %if.end58

error_init:                                       ; preds = %if.else, %land.lhs.true, %if.end30
  %for_block.2 = phi %union.tree_node* [ %for_block.1, %if.end30 ], [ %for_block.0, %land.lhs.true ], [ %for_block.0, %if.else ], !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.2, metadata !9702, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.label(metadata !9754), !dbg !9846
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.113, i64 0, i64 0)) #7, !dbg !9847
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !9848
  call void @llvm.dbg.value(metadata i8 1, metadata !9704, metadata !DIExpression()), !dbg !9758
  br label %parse_next, !dbg !9849

if.end58:                                         ; preds = %if.then46, %if.end35
  %for_block.3 = phi %union.tree_node* [ %for_block.1, %if.end35 ], [ %for_block.0, %if.then46 ], !dbg !9758
  %init.0 = phi %union.tree_node* [ %spec.select, %if.end35 ], [ %call55, %if.then46 ], !dbg !9850
  %decl.1 = phi %union.tree_node* [ %spec.select, %if.end35 ], [ %15, %if.then46 ], !dbg !9850
  call void @llvm.dbg.value(metadata %union.tree_node* %decl.1, metadata !9689, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %init.0, metadata !9695, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.3, metadata !9702, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9690, metadata !DIExpression()), !dbg !9758
  %call59 = call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 43) #7, !dbg !9851
  %tobool60 = icmp eq i8 %call59, 0, !dbg !9851
  br i1 %tobool60, label %if.end68, label %if.then61, !dbg !9852

if.then61:                                        ; preds = %if.end58
  %call62 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9853
  %location63 = getelementptr inbounds %struct.c_token, %struct.c_token* %call62, i64 0, i32 2, !dbg !9854
  %20 = load i32, i32* %location63, align 8, !dbg !9854
  call void @llvm.dbg.value(metadata i32 %20, metadata !9720, metadata !DIExpression()), !dbg !9790
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #8, !dbg !9855
  call void @llvm.dbg.value(metadata %struct.c_expr* %cond_expr, metadata !9723, metadata !DIExpression(DW_OP_deref)), !dbg !9790
  call fastcc void @c_parser_binary_expression(%struct.c_expr* nonnull sret %cond_expr, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !9856
  %21 = load %union.tree_node*, %union.tree_node** %value64, align 8, !dbg !9857
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !9690, metadata !DIExpression()), !dbg !9758
  %call65 = call %union.tree_node* @c_objc_common_truthvalue_conversion(i32 %20, %union.tree_node* %21) #6, !dbg !9858
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !9690, metadata !DIExpression()), !dbg !9758
  %call66 = call %union.tree_node* @c_fully_fold(%union.tree_node* %call65, i8 zeroext 0, i8* null) #6, !dbg !9859
  call void @llvm.dbg.value(metadata %union.tree_node* %call66, metadata !9690, metadata !DIExpression()), !dbg !9758
  %22 = load i32, i32* %original_code, align 8, !dbg !9860
  %.off = add i32 %22, -97, !dbg !9861
  %switch = icmp ult i32 %.off, 4, !dbg !9861
  br i1 %switch, label %sw.epilog, label %sw.default, !dbg !9861

sw.default:                                       ; preds = %if.then61
  %23 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !9862
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9862
  %call67 = call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %23, %union.tree_node* %24) #6, !dbg !9862
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !9690, metadata !DIExpression()), !dbg !9758
  br label %sw.epilog, !dbg !9864

sw.epilog:                                        ; preds = %if.then61, %sw.default
  %cond.0 = phi %union.tree_node* [ %call67, %sw.default ], [ %call66, %if.then61 ], !dbg !9790
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.0, metadata !9690, metadata !DIExpression()), !dbg !9758
  call void @protected_set_expr_location(%union.tree_node* %cond.0, i32 %20) #6, !dbg !9865
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #8, !dbg !9866
  br label %if.end68, !dbg !9867

if.end68:                                         ; preds = %if.end58, %sw.epilog
  %cond.1 = phi %union.tree_node* [ %cond.0, %sw.epilog ], [ null, %if.end58 ], !dbg !9801
  call void @llvm.dbg.value(metadata %union.tree_node* %cond.1, metadata !9690, metadata !DIExpression()), !dbg !9758
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #7, !dbg !9868
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9691, metadata !DIExpression()), !dbg !9758
  %call69 = call fastcc zeroext i8 @c_parser_next_token_is_not(%struct.c_parser* %parser, i32 21) #7, !dbg !9869
  %tobool70 = icmp eq i8 %call69, 0, !dbg !9869
  br i1 %tobool70, label %if.end77, label %if.then71, !dbg !9870

if.then71:                                        ; preds = %if.end68
  %call72 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9871
  %location73 = getelementptr inbounds %struct.c_token, %struct.c_token* %call72, i64 0, i32 2, !dbg !9872
  %25 = load i32, i32* %location73, align 8, !dbg !9872
  call void @llvm.dbg.value(metadata i32 %25, metadata !9724, metadata !DIExpression()), !dbg !9791
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp74, %struct.c_parser* %parser) #7, !dbg !9873
  %26 = load %union.tree_node*, %union.tree_node** %value75, align 8, !dbg !9874
  %call76 = call %union.tree_node* @c_process_expr_stmt(i32 %25, %union.tree_node* %26) #6, !dbg !9875
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !9691, metadata !DIExpression()), !dbg !9758
  br label %if.end77, !dbg !9876

if.end77:                                         ; preds = %if.end68, %if.then71
  %incr.0 = phi %union.tree_node* [ %call76, %if.then71 ], [ null, %if.end68 ], !dbg !9801
  call void @llvm.dbg.value(metadata %union.tree_node* %incr.0, metadata !9691, metadata !DIExpression()), !dbg !9758
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !9877
  %cmp78 = icmp eq %union.tree_node* %decl.1, null, !dbg !9878
  %27 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !9879
  %cmp80 = icmp eq %union.tree_node* %decl.1, %27, !dbg !9880
  %or.cond = or i1 %cmp78, %cmp80, !dbg !9881
  %cmp83 = icmp eq %union.tree_node* %init.0, %27, !dbg !9882
  %or.cond1 = or i1 %or.cond, %cmp83, !dbg !9881
  br i1 %or.cond1, label %parse_next, label %if.else86, !dbg !9881

if.else86:                                        ; preds = %if.end77
  %arrayidx87 = getelementptr inbounds %union.tree_node*, %union.tree_node** %a, i64 %indvars.iv12, !dbg !9883
  store %union.tree_node* %decl.1, %union.tree_node** %arrayidx87, align 8, !dbg !9884
  %arrayidx91 = getelementptr inbounds %union.tree_node*, %union.tree_node** %a89, i64 %indvars.iv12, !dbg !9885
  store %union.tree_node* %init.0, %union.tree_node** %arrayidx91, align 8, !dbg !9886
  %arrayidx95 = getelementptr inbounds %union.tree_node*, %union.tree_node** %a93, i64 %indvars.iv12, !dbg !9887
  store %union.tree_node* %cond.1, %union.tree_node** %arrayidx95, align 8, !dbg !9888
  %arrayidx99 = getelementptr inbounds %union.tree_node*, %union.tree_node** %a97, i64 %indvars.iv12, !dbg !9889
  store %union.tree_node* %incr.0, %union.tree_node** %arrayidx99, align 8, !dbg !9890
  br label %parse_next

parse_next:                                       ; preds = %if.else86, %if.end77, %error_init
  %for_block.4 = phi %union.tree_node* [ %for_block.2, %error_init ], [ %for_block.3, %if.end77 ], [ %for_block.3, %if.else86 ], !dbg !9891
  %fail.2 = phi i8 [ 1, %error_init ], [ 1, %if.end77 ], [ %fail.0, %if.else86 ], !dbg !9801
  call void @llvm.dbg.value(metadata i8 %fail.2, metadata !9704, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.4, metadata !9702, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.label(metadata !9756), !dbg !9892
  %sub = add nsw i32 %collapse.2, -1, !dbg !9893
  %28 = zext i32 %sub to i64, !dbg !9895
  %cmp101 = icmp eq i64 %indvars.iv12, %28, !dbg !9895
  br i1 %cmp101, label %cleanup, label %do.body.preheader, !dbg !9896

do.body.preheader:                                ; preds = %parse_next
  br label %do.body, !dbg !9897

do.body:                                          ; preds = %do.body.preheader, %do.cond
  %bracecount.0 = phi i32 [ %bracecount.2, %do.cond ], [ 0, %do.body.preheader ], !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0, metadata !9710, metadata !DIExpression()), !dbg !9801
  %call105 = call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 40) #7, !dbg !9899
  %tobool106 = icmp eq i8 %call105, 0, !dbg !9899
  br i1 %tobool106, label %if.else108, label %if.then107, !dbg !9897

if.then107:                                       ; preds = %do.body
  %bracecount.0.lcssa = phi i32 [ %bracecount.0, %do.body ], !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0.lcssa, metadata !9710, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0.lcssa, metadata !9710, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0.lcssa, metadata !9710, metadata !DIExpression()), !dbg !9801
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9901
  br label %do.end, !dbg !9903

if.else108:                                       ; preds = %do.body
  %call109 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !9904
  %tobool110 = icmp eq i8 %call109, 0, !dbg !9904
  br i1 %tobool110, label %if.else112, label %if.then111, !dbg !9906

if.then111:                                       ; preds = %if.else108
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9907
  %inc = add nsw i32 %bracecount.0, 1, !dbg !9909
  call void @llvm.dbg.value(metadata i32 %inc, metadata !9710, metadata !DIExpression()), !dbg !9801
  br label %do.cond, !dbg !9910

if.else112:                                       ; preds = %if.else108
  %tobool113 = icmp eq i32 %bracecount.0, 0, !dbg !9911
  br i1 %tobool113, label %if.else119, label %land.lhs.true114, !dbg !9913

land.lhs.true114:                                 ; preds = %if.else112
  %call115 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !9914
  %tobool117 = icmp eq i8 %call115, 0, !dbg !9914
  br i1 %tobool117, label %if.else119, label %if.then118, !dbg !9915

if.then118:                                       ; preds = %land.lhs.true114
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9916
  br label %do.cond

if.else119:                                       ; preds = %land.lhs.true114, %if.else112
  %bracecount.0.lcssa15 = phi i32 [ %bracecount.0, %land.lhs.true114 ], [ %bracecount.0, %if.else112 ], !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0.lcssa15, metadata !9710, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0.lcssa15, metadata !9710, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0.lcssa15, metadata !9710, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0.lcssa15, metadata !9710, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0.lcssa15, metadata !9710, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.0.lcssa15, metadata !9710, metadata !DIExpression()), !dbg !9801
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.114, i64 0, i64 0)) #7, !dbg !9917
  %tobool120 = icmp ne i32 %bracecount.0.lcssa15, 0, !dbg !9919
  %dec = add nsw i32 %bracecount.0.lcssa15, -1, !dbg !9921
  %spec.select2 = select i1 %tobool120, i8 1, i8 %open_brace_parsed.0, !dbg !9923
  %spec.select3 = select i1 %tobool120, i32 %dec, i32 0, !dbg !9923
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !9710, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i8 %spec.select2, metadata !9705, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 1, metadata !9704, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 0, metadata !9707, metadata !DIExpression()), !dbg !9758
  br label %do.end, !dbg !9924

do.cond:                                          ; preds = %if.then118, %if.then111
  %bracecount.2 = phi i32 [ %inc, %if.then111 ], [ %bracecount.0, %if.then118 ], !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.2, metadata !9710, metadata !DIExpression()), !dbg !9801
  br label %do.body, !dbg !9925

do.end:                                           ; preds = %if.else119, %if.then107
  %fail.3 = phi i8 [ %fail.2, %if.then107 ], [ 1, %if.else119 ], !dbg !9801
  %open_brace_parsed.2 = phi i8 [ %open_brace_parsed.0, %if.then107 ], [ %spec.select2, %if.else119 ], !dbg !9758
  %collapse.3 = phi i32 [ %collapse.2, %if.then107 ], [ 0, %if.else119 ], !dbg !9758
  %bracecount.3 = phi i32 [ %bracecount.0.lcssa, %if.then107 ], [ %spec.select3, %if.else119 ], !dbg !9801
  call void @llvm.dbg.value(metadata i32 %bracecount.3, metadata !9710, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata i32 %collapse.3, metadata !9707, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 %open_brace_parsed.2, metadata !9705, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 %fail.3, metadata !9704, metadata !DIExpression()), !dbg !9758
  %add = add nsw i32 %nbraces.0, %bracecount.3, !dbg !9926
  call void @llvm.dbg.value(metadata i32 %add, metadata !9708, metadata !DIExpression()), !dbg !9758
  br label %cleanup, !dbg !9927

cleanup:                                          ; preds = %for.body17, %parse_next, %do.end
  %for_block.5 = phi %union.tree_node* [ %for_block.4, %do.end ], [ %for_block.0, %for.body17 ], [ %for_block.4, %parse_next ], !dbg !9758
  %fail.4 = phi i8 [ %fail.3, %do.end ], [ %fail.0, %for.body17 ], [ %fail.2, %parse_next ], !dbg !9758
  %open_brace_parsed.3 = phi i8 [ %open_brace_parsed.2, %do.end ], [ %open_brace_parsed.0, %for.body17 ], [ %open_brace_parsed.0, %parse_next ], !dbg !9796
  %collapse.4 = phi i32 [ %collapse.3, %do.end ], [ %collapse.2, %for.body17 ], [ %collapse.2, %parse_next ], !dbg !9797
  %nbraces.1 = phi i32 [ %add, %do.end ], [ %nbraces.0, %for.body17 ], [ %nbraces.0, %parse_next ], !dbg !9758
  %cleanup.dest.slot.0 = phi i32 [ 0, %do.end ], [ 8, %for.body17 ], [ 5, %parse_next ]
  call void @llvm.dbg.value(metadata i32 %nbraces.1, metadata !9708, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %collapse.4, metadata !9707, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 %open_brace_parsed.3, metadata !9705, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 %fail.4, metadata !9704, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.5, metadata !9702, metadata !DIExpression()), !dbg !9758
  switch i32 %cleanup.dest.slot.0, label %cleanup260.loopexit4 [
    i32 0, label %for.inc126
    i32 5, label %for.end128
    i32 8, label %pop_scopes.loopexit5
  ]

for.inc126:                                       ; preds = %cleanup
  %indvars.iv.next13 = add nuw nsw i64 %indvars.iv12, 1, !dbg !9928
  call void @llvm.dbg.value(metadata i32 undef, metadata !9706, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9758
  br label %for.cond14, !dbg !9929, !llvm.loop !9930

for.end128:                                       ; preds = %cleanup, %for.cond14
  %for_block.6 = phi %union.tree_node* [ %for_block.5, %cleanup ], [ %for_block.0, %for.cond14 ], !dbg !9758
  %fail.5 = phi i8 [ %fail.4, %cleanup ], [ %fail.0, %for.cond14 ], !dbg !9758
  %open_brace_parsed.4 = phi i8 [ %open_brace_parsed.3, %cleanup ], [ %open_brace_parsed.0, %for.cond14 ], !dbg !9796
  %collapse.5 = phi i32 [ %collapse.4, %cleanup ], [ %collapse.2, %for.cond14 ], !dbg !9797
  %nbraces.2 = phi i32 [ %nbraces.1, %cleanup ], [ %nbraces.0, %for.cond14 ], !dbg !9798
  call void @llvm.dbg.value(metadata i32 %nbraces.2, metadata !9708, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %collapse.5, metadata !9707, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 %open_brace_parsed.4, metadata !9705, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i8 %fail.5, metadata !9704, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.6, metadata !9702, metadata !DIExpression()), !dbg !9758
  %29 = load i64, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !9932
  %30 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18) to i64*), align 16, !dbg !9933
  store i64 %30, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !9934
  %31 = load i64, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !9935
  store %union.tree_node* null, %union.tree_node** @c_cont_label, align 8, !dbg !9936
  %call129 = call %union.tree_node* @push_stmt_list() #6, !dbg !9937
  call void @llvm.dbg.value(metadata %union.tree_node* %call129, metadata !9694, metadata !DIExpression()), !dbg !9758
  %tobool130 = icmp eq i8 %open_brace_parsed.4, 0, !dbg !9938
  br i1 %tobool130, label %if.else137, label %if.then131, !dbg !9939

if.then131:                                       ; preds = %for.end128
  %call132 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9940
  %location133 = getelementptr inbounds %struct.c_token, %struct.c_token* %call132, i64 0, i32 2, !dbg !9941
  %32 = load i32, i32* %location133, align 8, !dbg !9941
  call void @llvm.dbg.value(metadata i32 %32, metadata !9727, metadata !DIExpression()), !dbg !9942
  %call134 = call %union.tree_node* @c_begin_compound_stmt(i8 zeroext 1) #6, !dbg !9943
  call void @llvm.dbg.value(metadata %union.tree_node* %call134, metadata !9696, metadata !DIExpression()), !dbg !9758
  call fastcc void @c_parser_compound_statement_nostart(%struct.c_parser* %parser) #7, !dbg !9944
  %call135 = call %union.tree_node* @c_end_compound_stmt(i32 %32, %union.tree_node* %call134, i8 zeroext 1) #6, !dbg !9945
  %call136 = call %union.tree_node* @add_stmt(%union.tree_node* %call135) #6, !dbg !9946
  br label %if.end140, !dbg !9947

if.else137:                                       ; preds = %for.end128
  %call138 = call fastcc %union.tree_node* @c_parser_c99_block_statement(%struct.c_parser* %parser) #7, !dbg !9948
  %call139 = call %union.tree_node* @add_stmt(%union.tree_node* %call138) #6, !dbg !9949
  br label %if.end140

if.end140:                                        ; preds = %if.else137, %if.then131
  %33 = load %union.tree_node*, %union.tree_node** @c_cont_label, align 8, !dbg !9950
  %tobool141 = icmp eq %union.tree_node* %33, null, !dbg !9950
  br i1 %tobool141, label %if.end145, label %if.then142, !dbg !9951

if.then142:                                       ; preds = %if.end140
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9952
  %call143 = call %union.tree_node* @build1_stat(i32 133, %union.tree_node* %34, %union.tree_node* nonnull %33) #6, !dbg !9952
  call void @llvm.dbg.value(metadata %union.tree_node* %call143, metadata !9730, metadata !DIExpression()), !dbg !9953
  %35 = getelementptr inbounds %union.tree_node, %union.tree_node* %call143, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9954
  store i32 %loc, i32* %35, align 8, !dbg !9954
  %call144 = call %union.tree_node* @add_stmt(%union.tree_node* %call143) #6, !dbg !9955
  br label %if.end145, !dbg !9956

if.end145:                                        ; preds = %if.end140, %if.then142
  %call146 = call %union.tree_node* @pop_stmt_list(%union.tree_node* %call129) #6, !dbg !9957
  call void @llvm.dbg.value(metadata %union.tree_node* %call146, metadata !9694, metadata !DIExpression()), !dbg !9758
  store i64 %29, i64* bitcast (%union.tree_node** @c_break_label to i64*), align 8, !dbg !9958
  store i64 %31, i64* bitcast (%union.tree_node** @c_cont_label to i64*), align 8, !dbg !9959
  br label %while.cond, !dbg !9960

while.cond:                                       ; preds = %if.end168, %if.end145
  %nbraces.3 = phi i32 [ %nbraces.2, %if.end145 ], [ %nbraces.5, %if.end168 ], !dbg !9758
  call void @llvm.dbg.value(metadata i32 %nbraces.3, metadata !9708, metadata !DIExpression()), !dbg !9758
  %tobool147 = icmp eq i32 %nbraces.3, 0, !dbg !9960
  br i1 %tobool147, label %while.end169, label %while.body, !dbg !9960

while.body:                                       ; preds = %while.cond
  %call148 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !9961
  %tobool149 = icmp eq i8 %call148, 0, !dbg !9961
  br i1 %tobool149, label %if.else152, label %if.then150, !dbg !9962

if.then150:                                       ; preds = %while.body
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9963
  %dec151 = add nsw i32 %nbraces.3, -1, !dbg !9965
  call void @llvm.dbg.value(metadata i32 %dec151, metadata !9708, metadata !DIExpression()), !dbg !9758
  br label %if.end168, !dbg !9966

if.else152:                                       ; preds = %while.body
  %call153 = call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 43) #7, !dbg !9967
  %tobool154 = icmp eq i8 %call153, 0, !dbg !9967
  br i1 %tobool154, label %if.else156, label %if.then155, !dbg !9968

if.then155:                                       ; preds = %if.else152
  call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !9969
  br label %if.end168

if.else156:                                       ; preds = %if.else152
  %nbraces.3.lcssa14 = phi i32 [ %nbraces.3, %if.else152 ], !dbg !9758
  call void @llvm.dbg.value(metadata i32 %nbraces.3.lcssa14, metadata !9708, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %nbraces.3.lcssa14, metadata !9708, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %nbraces.3.lcssa14, metadata !9708, metadata !DIExpression()), !dbg !9758
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.115, i64 0, i64 0)) #7, !dbg !9970
  br label %while.cond157, !dbg !9971

while.cond157:                                    ; preds = %while.body159, %if.else156
  %body.0 = phi %union.tree_node* [ %call146, %if.else156 ], [ %call165, %while.body159 ], !dbg !9758
  %nbraces.4 = phi i32 [ %nbraces.3.lcssa14, %if.else156 ], [ %dec166, %while.body159 ], !dbg !9758
  call void @llvm.dbg.value(metadata i32 %nbraces.4, metadata !9708, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %body.0, metadata !9694, metadata !DIExpression()), !dbg !9758
  %tobool158 = icmp eq i32 %nbraces.4, 0, !dbg !9971
  br i1 %tobool158, label %pop_scopes.loopexit, label %while.body159, !dbg !9971

while.body159:                                    ; preds = %while.cond157
  %call161 = call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !9972
  %location162 = getelementptr inbounds %struct.c_token, %struct.c_token* %call161, i64 0, i32 2, !dbg !9973
  %36 = load i32, i32* %location162, align 8, !dbg !9973
  call void @llvm.dbg.value(metadata i32 %36, metadata !9733, metadata !DIExpression()), !dbg !9974
  %call163 = call %union.tree_node* @c_begin_compound_stmt(i8 zeroext 1) #6, !dbg !9975
  call void @llvm.dbg.value(metadata %union.tree_node* %call163, metadata !9696, metadata !DIExpression()), !dbg !9758
  %call164 = call %union.tree_node* @add_stmt(%union.tree_node* %body.0) #6, !dbg !9976
  call fastcc void @c_parser_compound_statement_nostart(%struct.c_parser* %parser) #7, !dbg !9977
  %call165 = call %union.tree_node* @c_end_compound_stmt(i32 %36, %union.tree_node* %call163, i8 zeroext 1) #6, !dbg !9978
  call void @llvm.dbg.value(metadata %union.tree_node* %call165, metadata !9694, metadata !DIExpression()), !dbg !9758
  %dec166 = add nsw i32 %nbraces.4, -1, !dbg !9979
  call void @llvm.dbg.value(metadata i32 %dec166, metadata !9708, metadata !DIExpression()), !dbg !9758
  br label %while.cond157, !dbg !9971, !llvm.loop !9980

if.end168:                                        ; preds = %if.then155, %if.then150
  %nbraces.5 = phi i32 [ %dec151, %if.then150 ], [ %nbraces.3, %if.then155 ], !dbg !9758
  call void @llvm.dbg.value(metadata i32 %nbraces.5, metadata !9708, metadata !DIExpression()), !dbg !9758
  br label %while.cond, !dbg !9960, !llvm.loop !9982

while.end169:                                     ; preds = %while.cond
  %tobool170 = icmp eq i8 %fail.5, 0, !dbg !9984
  br i1 %tobool170, label %if.then171, label %pop_scopes, !dbg !9985

if.then171:                                       ; preds = %while.end169
  %call172 = call %union.tree_node* @c_finish_omp_for(i32 %loc, %union.tree_node* %call5, %union.tree_node* %call6, %union.tree_node* %call7, %union.tree_node* %call8, %union.tree_node* %call146, %union.tree_node* null) #6, !dbg !9986
  call void @llvm.dbg.value(metadata %union.tree_node* %call172, metadata !9696, metadata !DIExpression()), !dbg !9758
  %tobool173 = icmp eq %union.tree_node* %call172, null, !dbg !9987
  br i1 %tobool173, label %pop_scopes, label %if.then174, !dbg !9988

if.then174:                                       ; preds = %if.then171
  %cmp175 = icmp eq %union.tree_node** %par_clauses, null, !dbg !9989
  br i1 %cmp175, label %if.end246, label %for.cond178.preheader, !dbg !9990

for.cond178.preheader:                            ; preds = %if.then174
  %37 = sext i32 %collapse.5 to i64, !dbg !9991
  br label %for.cond178, !dbg !9991

for.cond178:                                      ; preds = %for.cond178.preheader, %if.end244
  %clauses.addr.0 = phi %union.tree_node* [ %clauses.addr.3, %if.end244 ], [ %clauses, %for.cond178.preheader ]
  %c.0 = phi %union.tree_node** [ %c.2, %if.end244 ], [ %par_clauses, %for.cond178.preheader ], !dbg !9992
  call void @llvm.dbg.value(metadata %union.tree_node** %c.0, metadata !9739, metadata !DIExpression()), !dbg !9993
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.addr.0, metadata !9687, metadata !DIExpression()), !dbg !9758
  %38 = load %union.tree_node*, %union.tree_node** %c.0, align 8, !dbg !9994
  %tobool179 = icmp eq %union.tree_node* %38, null, !dbg !9991
  br i1 %tobool179, label %if.end246.loopexit, label %for.body180, !dbg !9991

for.body180:                                      ; preds = %for.cond178
  %39 = bitcast %union.tree_node** %c.0 to %struct.tree_omp_clause**, !dbg !9995
  %40 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9995
  %41 = load i32, i32* %40, align 4, !dbg !9995
  %cmp183 = icmp eq i32 %41, 3, !dbg !9996
  br i1 %cmp183, label %if.else193, label %land.lhs.true185, !dbg !9997

land.lhs.true185:                                 ; preds = %for.body180
  %cmp188 = icmp eq i32 %41, 4, !dbg !9998
  br i1 %cmp188, label %if.else193, label %if.then190, !dbg !9999

if.then190:                                       ; preds = %land.lhs.true185
  %chain192 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10000
  call void @llvm.dbg.value(metadata %union.tree_node** %chain192, metadata !9739, metadata !DIExpression()), !dbg !9993
  br label %if.end244, !dbg !10001

if.else193:                                       ; preds = %land.lhs.true185, %for.body180
  call void @llvm.dbg.value(metadata i32 0, metadata !9706, metadata !DIExpression()), !dbg !9758
  br label %for.cond194, !dbg !10002

for.cond194:                                      ; preds = %for.inc209, %if.else193
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc209 ], [ 0, %if.else193 ], !dbg !10004
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !9706, metadata !DIExpression()), !dbg !9758
  %cmp195 = icmp slt i64 %indvars.iv, %37, !dbg !10005
  %42 = trunc i64 %indvars.iv to i32, !dbg !10007
  br i1 %cmp195, label %for.body197, label %for.end211, !dbg !10007

for.body197:                                      ; preds = %for.cond194
  %arrayidx201 = getelementptr inbounds %union.tree_node*, %union.tree_node** %a, i64 %indvars.iv, !dbg !10008
  %43 = load %union.tree_node*, %union.tree_node** %arrayidx201, align 8, !dbg !10008
  %arrayidx204 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10010
  %44 = bitcast i40* %arrayidx204 to %union.tree_node**, !dbg !10010
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8, !dbg !10010
  %cmp205 = icmp eq %union.tree_node* %43, %45, !dbg !10011
  br i1 %cmp205, label %for.end211, label %for.inc209, !dbg !10012

for.inc209:                                       ; preds = %for.body197
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !10013
  call void @llvm.dbg.value(metadata i32 undef, metadata !9706, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !9758
  br label %for.cond194, !dbg !10014, !llvm.loop !10015

for.end211:                                       ; preds = %for.body197, %for.cond194
  %.lcssa = phi i32 [ %42, %for.body197 ], [ %42, %for.cond194 ], !dbg !10007
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9706, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9706, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9706, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata i32 %.lcssa, metadata !9706, metadata !DIExpression()), !dbg !9758
  %cmp212 = icmp eq i32 %collapse.5, %.lcssa, !dbg !10017
  br i1 %cmp212, label %if.then214, label %if.else217, !dbg !10018

if.then214:                                       ; preds = %for.end211
  %chain216 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10019
  call void @llvm.dbg.value(metadata %union.tree_node** %chain216, metadata !9739, metadata !DIExpression()), !dbg !9993
  br label %if.end244, !dbg !10020

if.else217:                                       ; preds = %for.end211
  br i1 %cmp183, label %if.then222, label %if.else228, !dbg !10021

if.then222:                                       ; preds = %if.else217
  %arrayidx225 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10022
  %46 = bitcast i40* %arrayidx225 to %union.tree_node**, !dbg !10022
  %47 = load %union.tree_node*, %union.tree_node** %46, align 8, !dbg !10022
  call void (i32, i8*, ...) @error_at(i32 %loc, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.116, i64 0, i64 0), %union.tree_node* %47) #6, !dbg !10024
  %48 = bitcast %union.tree_node** %c.0 to %struct.tree_common**, !dbg !10025
  %49 = load %struct.tree_common*, %struct.tree_common** %48, align 8, !dbg !10025
  %chain227 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %49, i64 0, i32 1, !dbg !10025
  %50 = bitcast %union.tree_node** %chain227 to i64*, !dbg !10025
  %51 = load i64, i64* %50, align 8, !dbg !10025
  %52 = bitcast %union.tree_node** %c.0 to i64*, !dbg !10026
  store i64 %51, i64* %52, align 8, !dbg !10026
  br label %if.end244, !dbg !10027

if.else228:                                       ; preds = %if.else217
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10028
  %54 = load i32, i32* %53, align 8, !dbg !10028
  %call231 = call %union.tree_node* @build_omp_clause(i32 %54, i32 4) #6, !dbg !10029
  call void @llvm.dbg.value(metadata %union.tree_node* %call231, metadata !9746, metadata !DIExpression()), !dbg !10030
  %55 = load %struct.tree_omp_clause*, %struct.tree_omp_clause** %39, align 8, !dbg !10031
  %arrayidx234 = getelementptr inbounds %struct.tree_omp_clause, %struct.tree_omp_clause* %55, i64 0, i32 6, i64 0, !dbg !10031
  %56 = bitcast %union.tree_node** %arrayidx234 to i64*, !dbg !10031
  %57 = load i64, i64* %56, align 8, !dbg !10031
  %ops236 = getelementptr inbounds %union.tree_node, %union.tree_node* %call231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10032
  %58 = bitcast i40* %ops236 to i64*, !dbg !10033
  store i64 %57, i64* %58, align 8, !dbg !10033
  %chain239 = getelementptr inbounds %union.tree_node, %union.tree_node* %call231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10034
  store %union.tree_node* %clauses.addr.0, %union.tree_node** %chain239, align 8, !dbg !10035
  call void @llvm.dbg.value(metadata %union.tree_node* %call231, metadata !9687, metadata !DIExpression()), !dbg !9758
  %59 = load %struct.tree_omp_clause*, %struct.tree_omp_clause** %39, align 8, !dbg !10036
  %code241 = getelementptr inbounds %struct.tree_omp_clause, %struct.tree_omp_clause* %59, i64 0, i32 2, !dbg !10036
  store i32 2, i32* %code241, align 4, !dbg !10036
  br label %if.end244

if.end244:                                        ; preds = %if.then214, %if.else228, %if.then222, %if.then190
  %clauses.addr.3 = phi %union.tree_node* [ %clauses.addr.0, %if.then190 ], [ %clauses.addr.0, %if.then214 ], [ %clauses.addr.0, %if.then222 ], [ %call231, %if.else228 ]
  %c.2 = phi %union.tree_node** [ %chain192, %if.then190 ], [ %chain216, %if.then214 ], [ %c.0, %if.then222 ], [ %c.0, %if.else228 ], !dbg !10037
  call void @llvm.dbg.value(metadata %union.tree_node** %c.2, metadata !9739, metadata !DIExpression()), !dbg !9993
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.addr.3, metadata !9687, metadata !DIExpression()), !dbg !9758
  br label %for.cond178, !dbg !10038, !llvm.loop !10039

if.end246.loopexit:                               ; preds = %for.cond178
  %clauses.addr.0.lcssa = phi %union.tree_node* [ %clauses.addr.0, %for.cond178 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.addr.0.lcssa, metadata !9687, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.addr.0.lcssa, metadata !9687, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.addr.0.lcssa, metadata !9687, metadata !DIExpression()), !dbg !9758
  br label %if.end246, !dbg !10041

if.end246:                                        ; preds = %if.end246.loopexit, %if.then174
  %clauses.addr.4 = phi %union.tree_node* [ %clauses, %if.then174 ], [ %clauses.addr.0.lcssa, %if.end246.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses.addr.4, metadata !9687, metadata !DIExpression()), !dbg !9758
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10041
  %arrayidx248 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10041
  store %union.tree_node* %clauses.addr.4, %union.tree_node** %arrayidx248, align 8, !dbg !10042
  br label %pop_scopes, !dbg !10043

pop_scopes.loopexit:                              ; preds = %while.cond157
  br label %pop_scopes, !dbg !10044

pop_scopes.loopexit5:                             ; preds = %cleanup
  %for_block.5.lcssa16 = phi %union.tree_node* [ %for_block.5, %cleanup ], !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.5.lcssa16, metadata !9702, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.5.lcssa16, metadata !9702, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.5.lcssa16, metadata !9702, metadata !DIExpression()), !dbg !9758
  br label %pop_scopes, !dbg !10044

pop_scopes:                                       ; preds = %pop_scopes.loopexit5, %pop_scopes.loopexit, %if.then171, %while.end169, %if.end246
  %for_block.7 = phi %union.tree_node* [ %for_block.6, %if.then171 ], [ %for_block.6, %if.end246 ], [ %for_block.6, %while.end169 ], [ %for_block.6, %pop_scopes.loopexit ], [ %for_block.5.lcssa16, %pop_scopes.loopexit5 ], !dbg !9891
  %ret.1 = phi %union.tree_node* [ null, %if.then171 ], [ %call172, %if.end246 ], [ null, %while.end169 ], [ null, %pop_scopes.loopexit ], [ null, %pop_scopes.loopexit5 ], !dbg !10045
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !9703, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.7, metadata !9702, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.label(metadata !9757), !dbg !10046
  br label %while.cond251, !dbg !10044

while.cond251:                                    ; preds = %while.body253, %pop_scopes
  %for_block.8 = phi %union.tree_node* [ %for_block.7, %pop_scopes ], [ %62, %while.body253 ], !dbg !9758
  call void @llvm.dbg.value(metadata %union.tree_node* %for_block.8, metadata !9702, metadata !DIExpression()), !dbg !9758
  %tobool252 = icmp eq %union.tree_node* %for_block.8, null, !dbg !10044
  br i1 %tobool252, label %cleanup260.loopexit, label %while.body253, !dbg !10044

while.body253:                                    ; preds = %while.cond251
  %60 = getelementptr inbounds %union.tree_node, %union.tree_node* %for_block.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10047
  %61 = load %union.tree_node*, %union.tree_node** %60, align 8, !dbg !10047
  %call255 = call %union.tree_node* @c_end_compound_stmt(i32 %loc, %union.tree_node* %61, i8 zeroext 1) #6, !dbg !10049
  call void @llvm.dbg.value(metadata %union.tree_node* %call255, metadata !9696, metadata !DIExpression()), !dbg !9758
  %call256 = call %union.tree_node* @add_stmt(%union.tree_node* %call255) #6, !dbg !10050
  %chain258 = getelementptr inbounds %union.tree_node, %union.tree_node* %for_block.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10051
  %62 = load %union.tree_node*, %union.tree_node** %chain258, align 8, !dbg !10051
  call void @llvm.dbg.value(metadata %union.tree_node* %62, metadata !9702, metadata !DIExpression()), !dbg !9758
  br label %while.cond251, !dbg !10044, !llvm.loop !10052

cleanup260.loopexit:                              ; preds = %while.cond251
  br label %cleanup260, !dbg !10054

cleanup260.loopexit4:                             ; preds = %cleanup
  br label %cleanup260, !dbg !10054

cleanup260:                                       ; preds = %cleanup260.loopexit4, %cleanup260.loopexit, %if.then11
  %retval.0 = phi %union.tree_node* [ null, %if.then11 ], [ %ret.1, %cleanup260.loopexit ], [ undef, %cleanup260.loopexit4 ]
  ret %union.tree_node* %retval.0, !dbg !10054
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @c_parser_omp_clause_name(%struct.c_parser* %parser) unnamed_addr #5 !dbg !10055 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10059, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.value(metadata i32 0, metadata !10060, metadata !DIExpression()), !dbg !10066
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 36) #7, !dbg !10067
  %tobool = icmp eq i8 %call, 0, !dbg !10067
  br i1 %tobool, label %if.else, label %if.end74, !dbg !10068

if.else:                                          ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 43) #7, !dbg !10069
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10069
  br i1 %tobool2, label %if.else4, label %if.end74, !dbg !10070

if.else4:                                         ; preds = %if.else
  %call5 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !10071
  %tobool6 = icmp eq i8 %call5, 0, !dbg !10071
  br i1 %tobool6, label %if.end74, label %if.then7, !dbg !10072

if.then7:                                         ; preds = %if.else4
  %call8 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10073
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call8, i64 0, i32 1, !dbg !10073
  %0 = bitcast %union.tree_node** %value to %struct.tree_identifier**, !dbg !10073
  %1 = load %struct.tree_identifier*, %struct.tree_identifier** %0, align 8, !dbg !10073
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %1, i64 0, i32 1, i32 0, !dbg !10073
  %2 = load i8*, i8** %str, align 8, !dbg !10073
  call void @llvm.dbg.value(metadata i8* %2, metadata !10061, metadata !DIExpression()), !dbg !10074
  %3 = load i8, i8* %2, align 1, !dbg !10075
  %conv = sext i8 %3 to i32, !dbg !10075
  switch i32 %conv, label %if.end74 [
    i32 99, label %sw.bb
    i32 102, label %sw.bb22
    i32 108, label %sw.bb27
    i32 110, label %sw.bb32
    i32 111, label %sw.bb42
    i32 112, label %sw.bb47
    i32 114, label %sw.bb52
    i32 115, label %sw.bb57
    i32 117, label %sw.bb67
  ], !dbg !10076

sw.bb:                                            ; preds = %if.then7
  %call9 = tail call i32 @strcmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0), i8* %2) #6, !dbg !10077
  %tobool10 = icmp eq i32 %call9, 0, !dbg !10077
  br i1 %tobool10, label %if.end74, label %if.else12, !dbg !10080

if.else12:                                        ; preds = %sw.bb
  %call13 = tail call i32 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.82, i64 0, i64 0), i8* %2) #6, !dbg !10081
  %tobool14 = icmp eq i32 %call13, 0, !dbg !10081
  br i1 %tobool14, label %if.end74, label %if.else16, !dbg !10083

if.else16:                                        ; preds = %if.else12
  %call17 = tail call i32 @strcmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.83, i64 0, i64 0), i8* %2) #6, !dbg !10084
  %tobool18 = icmp eq i32 %call17, 0, !dbg !10084
  %spec.select = select i1 %tobool18, i32 3, i32 0, !dbg !10086
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !10060, metadata !DIExpression()), !dbg !10066
  br label %if.end74

sw.bb22:                                          ; preds = %if.then7
  %call23 = tail call i32 @strcmp(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.85, i64 0, i64 0), i8* %2) #6, !dbg !10087
  %tobool24 = icmp eq i32 %call23, 0, !dbg !10087
  %spec.select1 = select i1 %tobool24, i32 5, i32 0, !dbg !10089
  call void @llvm.dbg.value(metadata i32 %spec.select1, metadata !10060, metadata !DIExpression()), !dbg !10066
  br label %if.end74, !dbg !10090

sw.bb27:                                          ; preds = %if.then7
  %call28 = tail call i32 @strcmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.87, i64 0, i64 0), i8* %2) #6, !dbg !10091
  %tobool29 = icmp eq i32 %call28, 0, !dbg !10091
  %spec.select2 = select i1 %tobool29, i32 7, i32 0, !dbg !10093
  call void @llvm.dbg.value(metadata i32 %spec.select2, metadata !10060, metadata !DIExpression()), !dbg !10066
  br label %if.end74, !dbg !10094

sw.bb32:                                          ; preds = %if.then7
  %call33 = tail call i32 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0), i8* %2) #6, !dbg !10095
  %tobool34 = icmp eq i32 %call33, 0, !dbg !10095
  br i1 %tobool34, label %if.end74, label %if.else36, !dbg !10097

if.else36:                                        ; preds = %sw.bb32
  %call37 = tail call i32 @strcmp(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0), i8* %2) #6, !dbg !10098
  %tobool38 = icmp eq i32 %call37, 0, !dbg !10098
  %spec.select3 = select i1 %tobool38, i32 9, i32 0, !dbg !10100
  call void @llvm.dbg.value(metadata i32 %spec.select3, metadata !10060, metadata !DIExpression()), !dbg !10066
  br label %if.end74

sw.bb42:                                          ; preds = %if.then7
  %call43 = tail call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i64 0, i64 0), i8* %2) #6, !dbg !10101
  %tobool44 = icmp eq i32 %call43, 0, !dbg !10101
  %spec.select4 = select i1 %tobool44, i32 10, i32 0, !dbg !10103
  call void @llvm.dbg.value(metadata i32 %spec.select4, metadata !10060, metadata !DIExpression()), !dbg !10066
  br label %if.end74, !dbg !10104

sw.bb47:                                          ; preds = %if.then7
  %call48 = tail call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.91, i64 0, i64 0), i8* %2) #6, !dbg !10105
  %tobool49 = icmp eq i32 %call48, 0, !dbg !10105
  %spec.select5 = select i1 %tobool49, i32 11, i32 0, !dbg !10107
  call void @llvm.dbg.value(metadata i32 %spec.select5, metadata !10060, metadata !DIExpression()), !dbg !10066
  br label %if.end74, !dbg !10108

sw.bb52:                                          ; preds = %if.then7
  %call53 = tail call i32 @strcmp(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.92, i64 0, i64 0), i8* %2) #6, !dbg !10109
  %tobool54 = icmp eq i32 %call53, 0, !dbg !10109
  %spec.select6 = select i1 %tobool54, i32 12, i32 0, !dbg !10111
  call void @llvm.dbg.value(metadata i32 %spec.select6, metadata !10060, metadata !DIExpression()), !dbg !10066
  br label %if.end74, !dbg !10112

sw.bb57:                                          ; preds = %if.then7
  %call58 = tail call i32 @strcmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i64 0, i64 0), i8* %2) #6, !dbg !10113
  %tobool59 = icmp eq i32 %call58, 0, !dbg !10113
  br i1 %tobool59, label %if.end74, label %if.else61, !dbg !10115

if.else61:                                        ; preds = %sw.bb57
  %call62 = tail call i32 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.94, i64 0, i64 0), i8* %2) #6, !dbg !10116
  %tobool63 = icmp eq i32 %call62, 0, !dbg !10116
  %spec.select7 = select i1 %tobool63, i32 14, i32 0, !dbg !10118
  call void @llvm.dbg.value(metadata i32 %spec.select7, metadata !10060, metadata !DIExpression()), !dbg !10066
  br label %if.end74

sw.bb67:                                          ; preds = %if.then7
  %call68 = tail call i32 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95, i64 0, i64 0), i8* %2) #6, !dbg !10119
  %tobool69 = icmp eq i32 %call68, 0, !dbg !10119
  %spec.select8 = select i1 %tobool69, i32 15, i32 0, !dbg !10121
  call void @llvm.dbg.value(metadata i32 %spec.select8, metadata !10060, metadata !DIExpression()), !dbg !10066
  br label %if.end74, !dbg !10122

if.end74:                                         ; preds = %if.else12, %sw.bb, %sw.bb32, %sw.bb57, %if.else4, %if.else, %entry, %sw.bb22, %sw.bb27, %sw.bb42, %sw.bb47, %sw.bb52, %sw.bb67, %if.then7, %if.else16, %if.else36, %if.else61
  %result.16 = phi i32 [ 6, %entry ], [ 4, %if.else ], [ 0, %if.else4 ], [ 0, %if.then7 ], [ %spec.select8, %sw.bb67 ], [ %spec.select6, %sw.bb52 ], [ %spec.select5, %sw.bb47 ], [ %spec.select4, %sw.bb42 ], [ %spec.select2, %sw.bb27 ], [ %spec.select1, %sw.bb22 ], [ 1, %sw.bb ], [ %spec.select, %if.else16 ], [ 2, %if.else12 ], [ %spec.select3, %if.else36 ], [ 8, %sw.bb32 ], [ %spec.select7, %if.else61 ], [ 13, %sw.bb57 ], !dbg !10123
  call void @llvm.dbg.value(metadata i32 %result.16, metadata !10060, metadata !DIExpression()), !dbg !10066
  %cmp = icmp eq i32 %result.16, 0, !dbg !10124
  br i1 %cmp, label %if.end77, label %if.then76, !dbg !10126

if.then76:                                        ; preds = %if.end74
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !10127
  br label %if.end77, !dbg !10127

if.end77:                                         ; preds = %if.end74, %if.then76
  ret i32 %result.16, !dbg !10128
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_collapse(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10129 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10133, metadata !DIExpression()), !dbg !10139
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10134, metadata !DIExpression()), !dbg !10139
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10140
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10136, metadata !DIExpression()), !dbg !10139
  tail call fastcc void @check_no_duplicate_clause(%union.tree_node* %list, i32 14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i64 0, i64 0)) #7, !dbg !10141
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10142
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10143
  %1 = load i32, i32* %location, align 8, !dbg !10143
  call void @llvm.dbg.value(metadata i32 %1, metadata !10138, metadata !DIExpression()), !dbg !10139
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !10144
  %tobool = icmp eq i8 %call1, 0, !dbg !10144
  br i1 %tobool, label %if.end, label %if.then, !dbg !10146

if.then:                                          ; preds = %entry
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !10147
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !10149
  %2 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !10149
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10136, metadata !DIExpression()), !dbg !10139
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !10150
  br label %if.end, !dbg !10151

if.end:                                           ; preds = %entry, %if.then
  %num.0 = phi %union.tree_node* [ %2, %if.then ], [ %0, %entry ], !dbg !10139
  call void @llvm.dbg.value(metadata %union.tree_node* %num.0, metadata !10136, metadata !DIExpression()), !dbg !10139
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !10152
  %cmp = icmp eq %union.tree_node* %num.0, %3, !dbg !10154
  br i1 %cmp, label %cleanup, label %if.end3, !dbg !10155

if.end3:                                          ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %num.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10156
  %4 = bitcast %union.tree_node** %type to i64**, !dbg !10156
  %5 = load i64*, i64** %4, align 8, !dbg !10156
  %bf.load = load i64, i64* %5, align 8, !dbg !10156
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10156
  %cmp4 = icmp eq i64 %bf.cast1, 6, !dbg !10156
  br i1 %cmp4, label %lor.lhs.false20, label %lor.lhs.false, !dbg !10156

lor.lhs.false:                                    ; preds = %if.end3
  %cmp11 = icmp eq i64 %bf.cast1, 7, !dbg !10156
  br i1 %cmp11, label %lor.lhs.false20, label %lor.lhs.false12, !dbg !10156

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %cmp19 = icmp eq i64 %bf.cast1, 8, !dbg !10156
  br i1 %cmp19, label %lor.lhs.false20, label %if.then30, !dbg !10158

lor.lhs.false20:                                  ; preds = %lor.lhs.false12, %lor.lhs.false, %if.end3
  %call21 = call i32 @host_integerp(%union.tree_node* %num.0, i32 0) #6, !dbg !10159
  %tobool22 = icmp eq i32 %call21, 0, !dbg !10159
  br i1 %tobool22, label %if.then30, label %lor.lhs.false23, !dbg !10160

lor.lhs.false23:                                  ; preds = %lor.lhs.false20
  %call24 = call i64 @tree_low_cst(%union.tree_node* %num.0, i32 0) #6, !dbg !10161
  call void @llvm.dbg.value(metadata i64 %call24, metadata !10137, metadata !DIExpression()), !dbg !10139
  %cmp25 = icmp slt i64 %call24, 1, !dbg !10162
  br i1 %cmp25, label %if.then30, label %lor.lhs.false26, !dbg !10163

lor.lhs.false26:                                  ; preds = %lor.lhs.false23
  %6 = add i64 %call24, 2147483648, !dbg !10164
  %7 = icmp ugt i64 %6, 4294967295, !dbg !10164
  br i1 %7, label %if.then30, label %if.end31, !dbg !10165

if.then30:                                        ; preds = %lor.lhs.false20, %lor.lhs.false26, %lor.lhs.false23, %lor.lhs.false12
  call void (i32, i8*, ...) @error_at(i32 %1, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.98, i64 0, i64 0)) #6, !dbg !10166
  br label %cleanup, !dbg !10168

if.end31:                                         ; preds = %lor.lhs.false26
  %call32 = call %union.tree_node* @build_omp_clause(i32 %1, i32 14) #6, !dbg !10169
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !10135, metadata !DIExpression()), !dbg !10139
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10170
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !10170
  store %union.tree_node* %num.0, %union.tree_node** %arrayidx, align 8, !dbg !10171
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10172
  store %union.tree_node* %list, %union.tree_node** %chain, align 8, !dbg !10173
  br label %cleanup, !dbg !10174

cleanup:                                          ; preds = %if.end, %if.end31, %if.then30
  %retval.0 = phi %union.tree_node* [ %list, %if.then30 ], [ %call32, %if.end31 ], [ %list, %if.end ], !dbg !10139
  ret %union.tree_node* %retval.0, !dbg !10175
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_copyin(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10176 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10178, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10179, metadata !DIExpression()), !dbg !10180
  %call = tail call fastcc %union.tree_node* @c_parser_omp_var_list_parens(%struct.c_parser* %parser, i32 6, %union.tree_node* %list) #7, !dbg !10181
  ret %union.tree_node* %call, !dbg !10182
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_copyprivate(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10183 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10185, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10186, metadata !DIExpression()), !dbg !10187
  %call = tail call fastcc %union.tree_node* @c_parser_omp_var_list_parens(%struct.c_parser* %parser, i32 7, %union.tree_node* %list) #7, !dbg !10188
  ret %union.tree_node* %call, !dbg !10189
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_default(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10190 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10192, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10193, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.value(metadata i32 0, metadata !10194, metadata !DIExpression()), !dbg !10202
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10203
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10204
  %0 = load i32, i32* %location, align 8, !dbg !10204
  call void @llvm.dbg.value(metadata i32 %0, metadata !10195, metadata !DIExpression()), !dbg !10202
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !10205
  %tobool = icmp eq i8 %call1, 0, !dbg !10205
  br i1 %tobool, label %cleanup22, label %if.end, !dbg !10207

if.end:                                           ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !10208
  %tobool3 = icmp eq i8 %call2, 0, !dbg !10208
  br i1 %tobool3, label %invalid_kind, label %if.then4, !dbg !10209

if.then4:                                         ; preds = %if.end
  %call5 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10210
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call5, i64 0, i32 1, !dbg !10210
  %1 = bitcast %union.tree_node** %value to %struct.tree_identifier**, !dbg !10210
  %2 = load %struct.tree_identifier*, %struct.tree_identifier** %1, align 8, !dbg !10210
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %2, i64 0, i32 1, i32 0, !dbg !10210
  %3 = load i8*, i8** %str, align 8, !dbg !10210
  call void @llvm.dbg.value(metadata i8* %3, metadata !10197, metadata !DIExpression()), !dbg !10211
  %4 = load i8, i8* %3, align 1, !dbg !10212
  %conv = sext i8 %4 to i32, !dbg !10212
  switch i32 %conv, label %cleanup [
    i32 110, label %sw.bb
    i32 115, label %sw.bb10
  ], !dbg !10213

sw.bb:                                            ; preds = %if.then4
  %call6 = tail call i32 @strcmp(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.100, i64 0, i64 0), i8* %3) #6, !dbg !10214
  %cmp = icmp eq i32 %call6, 0, !dbg !10217
  br i1 %cmp, label %sw.epilog, label %cleanup, !dbg !10218

sw.bb10:                                          ; preds = %if.then4
  %call11 = tail call i32 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.94, i64 0, i64 0), i8* %3) #6, !dbg !10219
  %cmp12 = icmp eq i32 %call11, 0, !dbg !10221
  br i1 %cmp12, label %sw.epilog, label %cleanup, !dbg !10222

sw.epilog:                                        ; preds = %sw.bb, %sw.bb10
  %kind.0 = phi i32 [ 2, %sw.bb ], [ 1, %sw.bb10 ], !dbg !10223
  call void @llvm.dbg.value(metadata i32 %kind.0, metadata !10194, metadata !DIExpression()), !dbg !10202
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !10224
  br label %cleanup, !dbg !10225

cleanup:                                          ; preds = %sw.bb, %sw.bb10, %if.then4, %sw.epilog
  %kind.1 = phi i32 [ %kind.0, %sw.epilog ], [ 0, %sw.bb ], [ 0, %sw.bb10 ], [ 0, %if.then4 ], !dbg !10202
  %cleanup.dest.slot.0 = phi i32 [ 0, %sw.epilog ], [ 3, %sw.bb ], [ 3, %sw.bb10 ], [ 3, %if.then4 ]
  call void @llvm.dbg.value(metadata i32 %kind.1, metadata !10194, metadata !DIExpression()), !dbg !10202
  switch i32 %cleanup.dest.slot.0, label %cleanup22 [
    i32 0, label %if.end16
    i32 3, label %invalid_kind
  ]

invalid_kind:                                     ; preds = %if.end, %cleanup
  %kind.2 = phi i32 [ %kind.1, %cleanup ], [ 0, %if.end ], !dbg !10226
  call void @llvm.dbg.value(metadata i32 %kind.2, metadata !10194, metadata !DIExpression()), !dbg !10202
  call void @llvm.dbg.label(metadata !10200), !dbg !10227
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.101, i64 0, i64 0)) #7, !dbg !10228
  br label %if.end16

if.end16:                                         ; preds = %cleanup, %invalid_kind
  %kind.3 = phi i32 [ %kind.2, %invalid_kind ], [ %kind.1, %cleanup ], !dbg !10226
  call void @llvm.dbg.value(metadata i32 %kind.3, metadata !10194, metadata !DIExpression()), !dbg !10202
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !10229
  %cmp17 = icmp eq i32 %kind.3, 0, !dbg !10230
  br i1 %cmp17, label %cleanup22, label %if.end20, !dbg !10232

if.end20:                                         ; preds = %if.end16
  tail call fastcc void @check_no_duplicate_clause(%union.tree_node* %list, i32 13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.84, i64 0, i64 0)) #7, !dbg !10233
  %call21 = tail call %union.tree_node* @build_omp_clause(i32 %0, i32 13) #6, !dbg !10234
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !10196, metadata !DIExpression()), !dbg !10202
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10235
  store %union.tree_node* %list, %union.tree_node** %chain, align 8, !dbg !10236
  %subcode = getelementptr inbounds %union.tree_node, %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10237
  %default_kind = bitcast %union.tree_node** %subcode to i32*, !dbg !10237
  store i32 %kind.3, i32* %default_kind, align 8, !dbg !10238
  br label %cleanup22, !dbg !10239

cleanup22:                                        ; preds = %entry, %if.end16, %if.end20, %cleanup
  %retval.0 = phi %union.tree_node* [ undef, %cleanup ], [ %call21, %if.end20 ], [ %list, %entry ], [ %list, %if.end16 ]
  ret %union.tree_node* %retval.0, !dbg !10240
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_firstprivate(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10241 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10243, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10244, metadata !DIExpression()), !dbg !10245
  %call = tail call fastcc %union.tree_node* @c_parser_omp_var_list_parens(%struct.c_parser* %parser, i32 3, %union.tree_node* %list) #7, !dbg !10246
  ret %union.tree_node* %call, !dbg !10247
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_if(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10248 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10250, metadata !DIExpression()), !dbg !10257
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10251, metadata !DIExpression()), !dbg !10257
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10258
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10259
  %0 = load i32, i32* %location, align 8, !dbg !10259
  call void @llvm.dbg.value(metadata i32 %0, metadata !10252, metadata !DIExpression()), !dbg !10257
  %call1 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 20) #7, !dbg !10260
  %tobool = icmp eq i8 %call1, 0, !dbg !10260
  br i1 %tobool, label %if.else, label %if.then, !dbg !10261

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %union.tree_node* @c_parser_paren_condition(%struct.c_parser* %parser) #7, !dbg !10262
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !10253, metadata !DIExpression()), !dbg !10263
  tail call fastcc void @check_no_duplicate_clause(%union.tree_node* %list, i32 8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.86, i64 0, i64 0)) #7, !dbg !10264
  %call3 = tail call %union.tree_node* @build_omp_clause(i32 %0, i32 8) #6, !dbg !10265
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !10256, metadata !DIExpression()), !dbg !10263
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10266
  %arrayidx = bitcast i40* %ops to %union.tree_node**, !dbg !10266
  store %union.tree_node* %call2, %union.tree_node** %arrayidx, align 8, !dbg !10267
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10268
  store %union.tree_node* %list, %union.tree_node** %chain, align 8, !dbg !10269
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !10251, metadata !DIExpression()), !dbg !10257
  br label %if.end, !dbg !10270

if.else:                                          ; preds = %entry
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !10271
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %list.addr.0 = phi %union.tree_node* [ %call3, %if.then ], [ %list, %if.else ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0, metadata !10251, metadata !DIExpression()), !dbg !10257
  ret %union.tree_node* %list.addr.0, !dbg !10272
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_lastprivate(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10273 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10275, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10276, metadata !DIExpression()), !dbg !10277
  %call = tail call fastcc %union.tree_node* @c_parser_omp_var_list_parens(%struct.c_parser* %parser, i32 4, %union.tree_node* %list) #7, !dbg !10278
  ret %union.tree_node* %call, !dbg !10279
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_nowait(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10280 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10282, metadata !DIExpression()), !dbg !10286
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10283, metadata !DIExpression()), !dbg !10286
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10287
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10288
  %0 = load i32, i32* %location, align 8, !dbg !10288
  call void @llvm.dbg.value(metadata i32 %0, metadata !10285, metadata !DIExpression()), !dbg !10286
  tail call fastcc void @check_no_duplicate_clause(%union.tree_node* %list, i32 11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.88, i64 0, i64 0)) #7, !dbg !10289
  %call1 = tail call %union.tree_node* @build_omp_clause(i32 %0, i32 11) #6, !dbg !10290
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10284, metadata !DIExpression()), !dbg !10286
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10291
  store %union.tree_node* %list, %union.tree_node** %chain, align 8, !dbg !10292
  ret %union.tree_node* %call1, !dbg !10293
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_num_threads(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10294 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10296, metadata !DIExpression()), !dbg !10304
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10297, metadata !DIExpression()), !dbg !10304
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10305
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10306
  %0 = load i32, i32* %location, align 8, !dbg !10306
  call void @llvm.dbg.value(metadata i32 %0, metadata !10298, metadata !DIExpression()), !dbg !10304
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !10307
  %tobool = icmp eq i8 %call1, 0, !dbg !10307
  br i1 %tobool, label %if.end50, label %if.then, !dbg !10308

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10309
  %location3 = getelementptr inbounds %struct.c_token, %struct.c_token* %call2, i64 0, i32 2, !dbg !10310
  %1 = load i32, i32* %location3, align 8, !dbg !10310
  call void @llvm.dbg.value(metadata i32 %1, metadata !10299, metadata !DIExpression()), !dbg !10311
  call fastcc void @c_parser_expression(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser) #7, !dbg !10312
  %value = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !10313
  %2 = load %union.tree_node*, %union.tree_node** %value, align 8, !dbg !10313
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10303, metadata !DIExpression()), !dbg !10311
  %call4 = call %union.tree_node* @c_fully_fold(%union.tree_node* %2, i8 zeroext 0, i8* null) #6, !dbg !10314
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !10303, metadata !DIExpression()), !dbg !10311
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !10315
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10316
  %3 = bitcast %union.tree_node** %type to i64**, !dbg !10316
  %4 = load i64*, i64** %3, align 8, !dbg !10316
  %bf.load = load i64, i64* %4, align 8, !dbg !10316
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10316
  %cmp = icmp eq i64 %bf.cast1, 6, !dbg !10316
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !10316
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !10316

lor.lhs.false:                                    ; preds = %if.then
  %cmp11 = icmp eq i64 %bf.cast1, 7, !dbg !10316
  br i1 %cmp11, label %if.end, label %lor.lhs.false12, !dbg !10316

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %cmp19 = icmp eq i64 %bf.cast1, 8, !dbg !10316
  br i1 %cmp19, label %if.end, label %if.then20, !dbg !10318

if.then20:                                        ; preds = %lor.lhs.false12
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.102, i64 0, i64 0)) #7, !dbg !10319
  br label %cleanup, !dbg !10321

if.end:                                           ; preds = %lor.lhs.false12, %lor.lhs.false, %if.then
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 47), align 8, !dbg !10322
  %call23 = call %union.tree_node* @build_int_cst(%union.tree_node* %5, i64 0) #6, !dbg !10322
  %call24 = call %union.tree_node* @fold_build2_stat_loc(i32 %1, i32 98, %union.tree_node* %6, %union.tree_node* %call4, %union.tree_node* %call23) #6, !dbg !10322
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !10302, metadata !DIExpression()), !dbg !10311
  %tobool25 = icmp eq %union.tree_node* %call24, null, !dbg !10323
  br i1 %tobool25, label %if.end40, label %land.lhs.true, !dbg !10323

land.lhs.true:                                    ; preds = %if.end
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10323
  %bf.load27 = load i64, i64* %7, align 8, !dbg !10323
  %bf.cast29 = and i64 %bf.load27, 65535, !dbg !10323
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast29, !dbg !10323
  %8 = load i32, i32* %arrayidx, align 4, !dbg !10323
  %cmp30 = icmp ugt i32 %8, 3, !dbg !10323
  br i1 %cmp30, label %land.lhs.true31, label %if.end40, !dbg !10323

land.lhs.true31:                                  ; preds = %land.lhs.true
  %cmp38 = icmp ult i32 %8, 11, !dbg !10323
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !10325

if.then39:                                        ; preds = %land.lhs.true31
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10326
  store i32 %1, i32* %9, align 8, !dbg !10326
  br label %if.end40, !dbg !10326

if.end40:                                         ; preds = %if.end, %if.then39, %land.lhs.true31, %land.lhs.true
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 26), align 16, !dbg !10327
  %cmp41 = icmp eq %union.tree_node* %call24, %10, !dbg !10329
  br i1 %cmp41, label %if.then42, label %if.end44, !dbg !10330

if.then42:                                        ; preds = %if.end40
  %call43 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %1, i32 0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.103, i64 0, i64 0)) #6, !dbg !10331
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !10333
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !10303, metadata !DIExpression()), !dbg !10311
  br label %if.end44, !dbg !10334

if.end44:                                         ; preds = %if.then42, %if.end40
  %t.0 = phi %union.tree_node* [ %11, %if.then42 ], [ %call4, %if.end40 ], !dbg !10311
  call void @llvm.dbg.value(metadata %union.tree_node* %t.0, metadata !10303, metadata !DIExpression()), !dbg !10311
  call fastcc void @check_no_duplicate_clause(%union.tree_node* %list, i32 9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.89, i64 0, i64 0)) #7, !dbg !10335
  %call45 = call %union.tree_node* @build_omp_clause(i32 %0, i32 9) #6, !dbg !10336
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !10302, metadata !DIExpression()), !dbg !10311
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10337
  %arrayidx46 = bitcast i40* %ops to %union.tree_node**, !dbg !10337
  store %union.tree_node* %t.0, %union.tree_node** %arrayidx46, align 8, !dbg !10338
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10339
  store %union.tree_node* %list, %union.tree_node** %chain, align 8, !dbg !10340
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !10297, metadata !DIExpression()), !dbg !10304
  br label %cleanup, !dbg !10341

cleanup:                                          ; preds = %if.end44, %if.then20
  %list.addr.0 = phi %union.tree_node* [ %call45, %if.end44 ], [ %list, %if.then20 ]
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end44 ], [ false, %if.then20 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0, metadata !10297, metadata !DIExpression()), !dbg !10304
  br i1 %cleanup.dest.slot.0, label %if.end50, label %cleanup51

if.end50:                                         ; preds = %entry, %cleanup
  %list.addr.1 = phi %union.tree_node* [ %list, %entry ], [ %list.addr.0, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.1, metadata !10297, metadata !DIExpression()), !dbg !10304
  br label %cleanup51, !dbg !10342

cleanup51:                                        ; preds = %cleanup, %if.end50
  %retval.1 = phi %union.tree_node* [ %list, %cleanup ], [ %list.addr.1, %if.end50 ]
  ret %union.tree_node* %retval.1, !dbg !10343
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_ordered(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10344 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10346, metadata !DIExpression()), !dbg !10349
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10347, metadata !DIExpression()), !dbg !10349
  tail call fastcc void @check_no_duplicate_clause(%union.tree_node* %list, i32 12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.90, i64 0, i64 0)) #7, !dbg !10350
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10351
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10352
  %0 = load i32, i32* %location, align 8, !dbg !10352
  %call1 = tail call %union.tree_node* @build_omp_clause(i32 %0, i32 12) #6, !dbg !10353
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10348, metadata !DIExpression()), !dbg !10349
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10354
  store %union.tree_node* %list, %union.tree_node** %chain, align 8, !dbg !10355
  ret %union.tree_node* %call1, !dbg !10356
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_private(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10357 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10359, metadata !DIExpression()), !dbg !10361
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10360, metadata !DIExpression()), !dbg !10361
  %call = tail call fastcc %union.tree_node* @c_parser_omp_var_list_parens(%struct.c_parser* %parser, i32 1, %union.tree_node* %list) #7, !dbg !10362
  ret %union.tree_node* %call, !dbg !10363
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_reduction(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10364 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10366, metadata !DIExpression()), !dbg !10376
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10367, metadata !DIExpression()), !dbg !10376
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10377
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10378
  %0 = load i32, i32* %location, align 8, !dbg !10378
  call void @llvm.dbg.value(metadata i32 %0, metadata !10368, metadata !DIExpression()), !dbg !10376
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !10379
  %tobool = icmp eq i8 %call1, 0, !dbg !10379
  br i1 %tobool, label %if.end14, label %if.then, !dbg !10380

if.then:                                          ; preds = %entry
  %call2 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10381
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call2, i64 0, i32 0, !dbg !10382
  %bf.load = load i32, i32* %1, align 8, !dbg !10382
  %trunc = trunc i32 %bf.load to i8, !dbg !10383
  switch i8 %trunc, label %sw.default [
    i8 4, label %sw.epilog
    i8 6, label %sw.bb3
    i8 5, label %sw.bb4
    i8 9, label %sw.bb5
    i8 11, label %sw.bb6
    i8 10, label %sw.bb7
    i8 15, label %sw.bb8
    i8 16, label %sw.bb9
  ], !dbg !10383

sw.bb3:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 65, metadata !10369, metadata !DIExpression()), !dbg !10384
  br label %sw.epilog, !dbg !10385

sw.bb4:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 64, metadata !10369, metadata !DIExpression()), !dbg !10384
  br label %sw.epilog, !dbg !10387

sw.bb5:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 89, metadata !10369, metadata !DIExpression()), !dbg !10384
  br label %sw.epilog, !dbg !10388

sw.bb6:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 88, metadata !10369, metadata !DIExpression()), !dbg !10384
  br label %sw.epilog, !dbg !10389

sw.bb7:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 87, metadata !10369, metadata !DIExpression()), !dbg !10384
  br label %sw.epilog, !dbg !10390

sw.bb8:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 91, metadata !10369, metadata !DIExpression()), !dbg !10384
  br label %sw.epilog, !dbg !10391

sw.bb9:                                           ; preds = %if.then
  call void @llvm.dbg.value(metadata i32 92, metadata !10369, metadata !DIExpression()), !dbg !10384
  br label %sw.epilog, !dbg !10392

sw.default:                                       ; preds = %if.then
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.104, i64 0, i64 0)) #7, !dbg !10393
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !10394
  br label %cleanup, !dbg !10395

sw.epilog:                                        ; preds = %if.then, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3
  %code.0 = phi i32 [ 92, %sw.bb9 ], [ 91, %sw.bb8 ], [ 87, %sw.bb7 ], [ 88, %sw.bb6 ], [ 89, %sw.bb5 ], [ 64, %sw.bb4 ], [ 65, %sw.bb3 ], [ 63, %if.then ], !dbg !10396
  call void @llvm.dbg.value(metadata i32 %code.0, metadata !10369, metadata !DIExpression()), !dbg !10384
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !10397
  %call10 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i64 0, i64 0)) #7, !dbg !10398
  %tobool11 = icmp eq i8 %call10, 0, !dbg !10398
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !10399

if.then12:                                        ; preds = %sw.epilog
  %call13 = tail call fastcc %union.tree_node* @c_parser_omp_variable_list(%struct.c_parser* %parser, i32 %0, i32 5, %union.tree_node* %list) #7, !dbg !10400
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !10372, metadata !DIExpression()), !dbg !10401
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !10375, metadata !DIExpression()), !dbg !10401
  br label %for.cond, !dbg !10402

for.cond:                                         ; preds = %for.body, %if.then12
  %c.0 = phi %union.tree_node* [ %call13, %if.then12 ], [ %2, %for.body ], !dbg !10404
  call void @llvm.dbg.value(metadata %union.tree_node* %c.0, metadata !10375, metadata !DIExpression()), !dbg !10401
  %cmp = icmp eq %union.tree_node* %c.0, %list, !dbg !10405
  br i1 %cmp, label %if.end.loopexit, label %for.body, !dbg !10407

for.body:                                         ; preds = %for.cond
  %subcode = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10408
  %reduction_code = bitcast %union.tree_node** %subcode to i32*, !dbg !10408
  store i32 %code.0, i32* %reduction_code, align 8, !dbg !10409
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10410
  %2 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !10410
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10375, metadata !DIExpression()), !dbg !10401
  br label %for.cond, !dbg !10411, !llvm.loop !10412

if.end.loopexit:                                  ; preds = %for.cond
  br label %if.end, !dbg !10414

if.end:                                           ; preds = %if.end.loopexit, %sw.epilog
  %list.addr.0 = phi %union.tree_node* [ %list, %sw.epilog ], [ %call13, %if.end.loopexit ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.0, metadata !10367, metadata !DIExpression()), !dbg !10376
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !10414
  br label %cleanup, !dbg !10415

cleanup:                                          ; preds = %if.end, %sw.default
  %cleanup.dest.slot.0 = phi i1 [ false, %sw.default ], [ true, %if.end ]
  %list.addr.1 = phi %union.tree_node* [ %list, %sw.default ], [ %list.addr.0, %if.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.1, metadata !10367, metadata !DIExpression()), !dbg !10376
  br i1 %cleanup.dest.slot.0, label %if.end14, label %cleanup15

if.end14:                                         ; preds = %entry, %cleanup
  %list.addr.2 = phi %union.tree_node* [ %list, %entry ], [ %list.addr.1, %cleanup ]
  call void @llvm.dbg.value(metadata %union.tree_node* %list.addr.2, metadata !10367, metadata !DIExpression()), !dbg !10376
  br label %cleanup15, !dbg !10416

cleanup15:                                        ; preds = %cleanup, %if.end14
  %retval.1 = phi %union.tree_node* [ %list, %cleanup ], [ %list.addr.2, %if.end14 ], !dbg !10376
  ret %union.tree_node* %retval.1, !dbg !10417
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_schedule(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10418 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10420, metadata !DIExpression()), !dbg !10433
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10421, metadata !DIExpression()), !dbg !10433
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10434
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10435
  %0 = load i32, i32* %location, align 8, !dbg !10435
  call void @llvm.dbg.value(metadata i32 %0, metadata !10424, metadata !DIExpression()), !dbg !10433
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 20, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #7, !dbg !10436
  %tobool = icmp eq i8 %call1, 0, !dbg !10436
  br i1 %tobool, label %cleanup80, label %if.end, !dbg !10438

if.end:                                           ; preds = %entry
  %call2 = tail call %union.tree_node* @build_omp_clause(i32 %0, i32 10) #6, !dbg !10439
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !10422, metadata !DIExpression()), !dbg !10433
  %call3 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 53) #7, !dbg !10440
  %tobool4 = icmp eq i8 %call3, 0, !dbg !10440
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !10441

if.then5:                                         ; preds = %if.end
  %call6 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10442
  %value = getelementptr inbounds %struct.c_token, %struct.c_token* %call6, i64 0, i32 1, !dbg !10443
  %1 = bitcast %union.tree_node** %value to %struct.tree_identifier**, !dbg !10443
  %2 = load %struct.tree_identifier*, %struct.tree_identifier** %1, align 8, !dbg !10443
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %2, i64 0, i32 1, i32 0, !dbg !10444
  %3 = load i8*, i8** %str, align 8, !dbg !10444
  call void @llvm.dbg.value(metadata i8* %3, metadata !10428, metadata !DIExpression()), !dbg !10445
  %4 = load i8, i8* %3, align 1, !dbg !10446
  %conv = sext i8 %4 to i32, !dbg !10446
  switch i32 %conv, label %cleanup [
    i32 100, label %sw.bb
    i32 103, label %sw.bb11
    i32 114, label %sw.bb20
  ], !dbg !10447

sw.bb:                                            ; preds = %if.then5
  %call7 = tail call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.105, i64 0, i64 0), i8* %3) #6, !dbg !10448
  %cmp = icmp eq i32 %call7, 0, !dbg !10451
  br i1 %cmp, label %if.end10, label %cleanup, !dbg !10452

if.end10:                                         ; preds = %sw.bb
  %subcode = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10453
  %schedule_kind = bitcast %union.tree_node** %subcode to i32*, !dbg !10453
  store i32 1, i32* %schedule_kind, align 8, !dbg !10454
  br label %cleanup, !dbg !10455

sw.bb11:                                          ; preds = %if.then5
  %call12 = tail call i32 @strcmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.106, i64 0, i64 0), i8* %3) #6, !dbg !10456
  %cmp13 = icmp eq i32 %call12, 0, !dbg !10458
  br i1 %cmp13, label %if.end16, label %cleanup, !dbg !10459

if.end16:                                         ; preds = %sw.bb11
  %subcode18 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10460
  %schedule_kind19 = bitcast %union.tree_node** %subcode18 to i32*, !dbg !10460
  store i32 2, i32* %schedule_kind19, align 8, !dbg !10461
  br label %cleanup, !dbg !10462

sw.bb20:                                          ; preds = %if.then5
  %call21 = tail call i32 @strcmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.107, i64 0, i64 0), i8* %3) #6, !dbg !10463
  %cmp22 = icmp eq i32 %call21, 0, !dbg !10465
  br i1 %cmp22, label %if.end25, label %cleanup, !dbg !10466

if.end25:                                         ; preds = %sw.bb20
  %subcode27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10467
  %schedule_kind28 = bitcast %union.tree_node** %subcode27 to i32*, !dbg !10467
  store i32 4, i32* %schedule_kind28, align 8, !dbg !10468
  br label %cleanup, !dbg !10469

cleanup:                                          ; preds = %sw.bb, %sw.bb11, %sw.bb20, %if.end10, %if.end16, %if.end25, %if.then5
  %cleanup.dest.slot.0 = phi i32 [ 3, %sw.bb ], [ 3, %sw.bb11 ], [ 3, %sw.bb20 ], [ 3, %if.then5 ], [ 0, %if.end25 ], [ 0, %if.end16 ], [ 0, %if.end10 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup80 [
    i32 0, label %if.end46
    i32 3, label %invalid_kind
  ]

if.else:                                          ; preds = %if.end
  %call30 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 0) #7, !dbg !10470
  %tobool31 = icmp eq i8 %call30, 0, !dbg !10470
  br i1 %tobool31, label %if.else36, label %if.then32, !dbg !10472

if.then32:                                        ; preds = %if.else
  %subcode34 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10473
  %schedule_kind35 = bitcast %union.tree_node** %subcode34 to i32*, !dbg !10473
  store i32 0, i32* %schedule_kind35, align 8, !dbg !10474
  br label %if.end46, !dbg !10473

if.else36:                                        ; preds = %if.else
  %call37 = tail call fastcc zeroext i8 @c_parser_next_token_is_keyword(%struct.c_parser* %parser, i32 11) #7, !dbg !10475
  %tobool38 = icmp eq i8 %call37, 0, !dbg !10475
  br i1 %tobool38, label %invalid_kind, label %if.then39, !dbg !10477

if.then39:                                        ; preds = %if.else36
  %subcode41 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10478
  %schedule_kind42 = bitcast %union.tree_node** %subcode41 to i32*, !dbg !10478
  store i32 3, i32* %schedule_kind42, align 8, !dbg !10479
  br label %if.end46

if.end46:                                         ; preds = %if.then32, %if.then39, %cleanup
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !10480
  %call47 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 19) #7, !dbg !10481
  %tobool48 = icmp eq i8 %call47, 0, !dbg !10481
  br i1 %tobool48, label %if.else77, label %if.then49, !dbg !10482

if.then49:                                        ; preds = %if.end46
  tail call fastcc void @c_parser_consume_token(%struct.c_parser* %parser) #7, !dbg !10483
  %call50 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10484
  %location51 = getelementptr inbounds %struct.c_token, %struct.c_token* %call50, i64 0, i32 2, !dbg !10485
  %5 = load i32, i32* %location51, align 8, !dbg !10485
  call void @llvm.dbg.value(metadata i32 %5, metadata !10429, metadata !DIExpression()), !dbg !10486
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !10487
  %value52 = getelementptr inbounds %struct.c_expr, %struct.c_expr* %tmp, i64 0, i32 0, !dbg !10488
  %6 = load %union.tree_node*, %union.tree_node** %value52, align 8, !dbg !10488
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !10423, metadata !DIExpression()), !dbg !10433
  %call53 = call %union.tree_node* @c_fully_fold(%union.tree_node* %6, i8 zeroext 0, i8* null) #6, !dbg !10489
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !10423, metadata !DIExpression()), !dbg !10433
  %subcode55 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10490
  %schedule_kind56 = bitcast %union.tree_node** %subcode55 to i32*, !dbg !10490
  %7 = load i32, i32* %schedule_kind56, align 8, !dbg !10490
  %cmp57 = icmp eq i32 %7, 4, !dbg !10492
  br i1 %cmp57, label %if.then59, label %if.else60, !dbg !10493

if.then59:                                        ; preds = %if.then49
  call void (i32, i8*, ...) @error_at(i32 %5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.108, i64 0, i64 0)) #6, !dbg !10494
  br label %if.end76, !dbg !10494

if.else60:                                        ; preds = %if.then49
  %cmp64 = icmp eq i32 %7, 3, !dbg !10495
  br i1 %cmp64, label %if.then66, label %if.else67, !dbg !10497

if.then66:                                        ; preds = %if.else60
  call void (i32, i8*, ...) @error_at(i32 %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.109, i64 0, i64 0)) #6, !dbg !10498
  br label %if.end76, !dbg !10498

if.else67:                                        ; preds = %if.else60
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10499
  %8 = bitcast %union.tree_node** %type to i64**, !dbg !10499
  %9 = load i64*, i64** %8, align 8, !dbg !10499
  %bf.load = load i64, i64* %9, align 8, !dbg !10499
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10501
  %cmp68 = icmp eq i64 %bf.cast1, 8, !dbg !10501
  br i1 %cmp68, label %if.then70, label %if.else73, !dbg !10502

if.then70:                                        ; preds = %if.else67
  %ops = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10503
  %arrayidx72 = bitcast i40* %ops to %union.tree_node**, !dbg !10503
  store %union.tree_node* %call53, %union.tree_node** %arrayidx72, align 8, !dbg !10504
  br label %if.end76, !dbg !10503

if.else73:                                        ; preds = %if.else67
  call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.102, i64 0, i64 0)) #7, !dbg !10505
  br label %if.end76

if.end76:                                         ; preds = %if.then66, %if.else73, %if.then70, %if.then59
  call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !10506
  br label %if.end78, !dbg !10507

if.else77:                                        ; preds = %if.end46
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.110, i64 0, i64 0)) #7, !dbg !10508
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.end76
  call fastcc void @check_no_duplicate_clause(%union.tree_node* %list, i32 10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.93, i64 0, i64 0)) #7, !dbg !10509
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10510
  store %union.tree_node* %list, %union.tree_node** %chain, align 8, !dbg !10511
  br label %cleanup80, !dbg !10512

invalid_kind:                                     ; preds = %if.else36, %cleanup
  call void @llvm.dbg.label(metadata !10432), !dbg !10513
  tail call fastcc void @c_parser_error(%struct.c_parser* %parser, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.111, i64 0, i64 0)) #7, !dbg !10514
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 21, i8* null) #7, !dbg !10515
  br label %cleanup80, !dbg !10516

cleanup80:                                        ; preds = %entry, %invalid_kind, %if.end78, %cleanup
  %retval.0 = phi %union.tree_node* [ undef, %cleanup ], [ %list, %invalid_kind ], [ %call2, %if.end78 ], [ %list, %entry ]
  ret %union.tree_node* %retval.0, !dbg !10517
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_shared(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10518 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10520, metadata !DIExpression()), !dbg !10522
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10521, metadata !DIExpression()), !dbg !10522
  %call = tail call fastcc %union.tree_node* @c_parser_omp_var_list_parens(%struct.c_parser* %parser, i32 2, %union.tree_node* %list) #7, !dbg !10523
  ret %union.tree_node* %call, !dbg !10524
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_clause_untied(%struct.c_parser* %parser, %union.tree_node* %list) unnamed_addr #5 !dbg !10525 {
entry:
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10527, metadata !DIExpression()), !dbg !10530
  call void @llvm.dbg.value(metadata %union.tree_node* %list, metadata !10528, metadata !DIExpression()), !dbg !10530
  tail call fastcc void @check_no_duplicate_clause(%union.tree_node* %list, i32 15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.95, i64 0, i64 0)) #7, !dbg !10531
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10532
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10533
  %0 = load i32, i32* %location, align 8, !dbg !10533
  %call1 = tail call %union.tree_node* @build_omp_clause(i32 %0, i32 15) #6, !dbg !10534
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !10529, metadata !DIExpression()), !dbg !10530
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10535
  store %union.tree_node* %list, %union.tree_node** %chain, align 8, !dbg !10536
  ret %union.tree_node* %call1, !dbg !10537
}

declare dso_local %union.tree_node* @c_finish_omp_clauses(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @check_no_duplicate_clause(%union.tree_node* %clauses, i32 %code, i8* %name) unnamed_addr #5 !dbg !10538 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses, metadata !10542, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i32 %code, metadata !10543, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata i8* %name, metadata !10544, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata %union.tree_node* %clauses, metadata !10545, metadata !DIExpression()), !dbg !10551
  br label %for.cond, !dbg !10552

for.cond:                                         ; preds = %for.inc, %entry
  %c.0 = phi %union.tree_node* [ %clauses, %entry ], [ %4, %for.inc ], !dbg !10553
  call void @llvm.dbg.value(metadata %union.tree_node* %c.0, metadata !10545, metadata !DIExpression()), !dbg !10551
  %tobool = icmp eq %union.tree_node* %c.0, null, !dbg !10554
  br i1 %tobool, label %for.end.loopexit, label %for.body, !dbg !10554

for.body:                                         ; preds = %for.cond
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10555
  %1 = load i32, i32* %0, align 4, !dbg !10555
  %cmp = icmp eq i32 %1, %code, !dbg !10556
  br i1 %cmp, label %if.then, label %for.inc, !dbg !10557

if.then:                                          ; preds = %for.body
  %c.0.lcssa3 = phi %union.tree_node* [ %c.0, %for.body ], !dbg !10553
  call void @llvm.dbg.value(metadata %union.tree_node* %c.0.lcssa3, metadata !10545, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata %union.tree_node* %c.0.lcssa3, metadata !10545, metadata !DIExpression()), !dbg !10551
  call void @llvm.dbg.value(metadata %union.tree_node* %c.0.lcssa3, metadata !10545, metadata !DIExpression()), !dbg !10551
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0.lcssa3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10558
  %3 = load i32, i32* %2, align 8, !dbg !10558
  call void @llvm.dbg.value(metadata i32 %3, metadata !10546, metadata !DIExpression()), !dbg !10559
  tail call void (i32, i8*, ...) @error_at(i32 %3, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.99, i64 0, i64 0), i8* %name) #6, !dbg !10560
  br label %for.end

for.inc:                                          ; preds = %for.body
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %c.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10561
  %4 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !10561
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10545, metadata !DIExpression()), !dbg !10551
  br label %for.cond, !dbg !10562, !llvm.loop !10563

for.end.loopexit:                                 ; preds = %for.cond
  br label %for.end, !dbg !10565

for.end:                                          ; preds = %for.end.loopexit, %if.then
  ret void, !dbg !10565
}

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @make_tree_vec_stat(i32) local_unnamed_addr #2

declare dso_local void @protected_set_expr_location(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_finish_omp_for(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_finish_omp_master(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_finish_omp_ordered(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @c_begin_omp_parallel() local_unnamed_addr #2

declare dso_local %union.tree_node* @c_finish_omp_parallel(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @c_split_parallel_clauses(i32, %union.tree_node*, %union.tree_node**, %union.tree_node**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @c_parser_omp_sections_scope(i32 %sections_loc, %struct.c_parser* %parser) unnamed_addr #5 !dbg !10566 {
entry:
  call void @llvm.dbg.value(metadata i32 %sections_loc, metadata !10568, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10569, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.value(metadata i8 0, metadata !10572, metadata !DIExpression()), !dbg !10574
  %call = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10575
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call, i64 0, i32 2, !dbg !10576
  %0 = load i32, i32* %location, align 8, !dbg !10576
  call void @llvm.dbg.value(metadata i32 %0, metadata !10573, metadata !DIExpression()), !dbg !10574
  %call1 = tail call fastcc zeroext i8 @c_parser_require(%struct.c_parser* %parser, i32 41, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)) #7, !dbg !10577
  %tobool = icmp eq i8 %call1, 0, !dbg !10577
  br i1 %tobool, label %if.then, label %if.end, !dbg !10579

if.then:                                          ; preds = %entry
  %error = getelementptr inbounds %struct.c_parser, %struct.c_parser* %parser, i64 0, i32 2, !dbg !10580
  %bf.load = load i8, i8* %error, align 2, !dbg !10582
  %bf.clear = and i8 %bf.load, -2, !dbg !10582
  store i8 %bf.clear, i8* %error, align 2, !dbg !10582
  br label %cleanup, !dbg !10583

if.end:                                           ; preds = %entry
  %call2 = tail call %union.tree_node* @push_stmt_list() #6, !dbg !10584
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !10570, metadata !DIExpression()), !dbg !10574
  %call3 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10585
  %1 = getelementptr inbounds %struct.c_token, %struct.c_token* %call3, i64 0, i32 0, !dbg !10587
  %bf.load4 = load i32, i32* %1, align 8, !dbg !10587
  %bf.lshr.mask = and i32 %bf.load4, -16777216, !dbg !10588
  %cmp = icmp eq i32 %bf.lshr.mask, 184549376, !dbg !10588
  br i1 %cmp, label %if.end24, label %if.then5, !dbg !10589

if.then5:                                         ; preds = %if.end
  %call6 = tail call %union.tree_node* @push_stmt_list() #6, !dbg !10590
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !10571, metadata !DIExpression()), !dbg !10574
  br label %while.cond, !dbg !10592

while.cond:                                       ; preds = %if.end16, %if.then5
  tail call fastcc void @c_parser_statement(%struct.c_parser* %parser) #7, !dbg !10593
  %call7 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10595
  %2 = getelementptr inbounds %struct.c_token, %struct.c_token* %call7, i64 0, i32 0, !dbg !10597
  %bf.load8 = load i32, i32* %2, align 8, !dbg !10597
  %bf.lshr9.mask = and i32 %bf.load8, -16777216, !dbg !10598
  %cmp10 = icmp eq i32 %bf.lshr9.mask, 184549376, !dbg !10598
  br i1 %cmp10, label %while.end, label %if.end12, !dbg !10599

if.end12:                                         ; preds = %while.cond
  %call13 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !10600
  %tobool14 = icmp eq i8 %call13, 0, !dbg !10600
  br i1 %tobool14, label %if.end16, label %while.end, !dbg !10602

if.end16:                                         ; preds = %if.end12
  %call17 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 22) #7, !dbg !10603
  %tobool18 = icmp eq i8 %call17, 0, !dbg !10603
  br i1 %tobool18, label %while.cond, label %while.end, !dbg !10605, !llvm.loop !10606

while.end:                                        ; preds = %if.end16, %if.end12, %while.cond
  %call21 = tail call %union.tree_node* @pop_stmt_list(%union.tree_node* %call6) #6, !dbg !10608
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !10571, metadata !DIExpression()), !dbg !10574
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !10609
  %call22 = tail call %union.tree_node* @build1_stat(i32 158, %union.tree_node* %3, %union.tree_node* %call21) #6, !dbg !10609
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !10571, metadata !DIExpression()), !dbg !10574
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10610
  store i32 %0, i32* %4, align 8, !dbg !10610
  %call23 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call22) #6, !dbg !10611
  br label %if.end24, !dbg !10612

if.end24:                                         ; preds = %if.end, %while.end
  br label %while.cond25, !dbg !10613

while.cond25:                                     ; preds = %if.end45, %if.end24
  %error_suppress.0 = phi i8 [ 0, %if.end24 ], [ %error_suppress.2, %if.end45 ], !dbg !10574
  call void @llvm.dbg.value(metadata i8 %error_suppress.0, metadata !10572, metadata !DIExpression()), !dbg !10574
  %call27 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 42) #7, !dbg !10614
  %tobool28 = icmp eq i8 %call27, 0, !dbg !10614
  br i1 %tobool28, label %if.end30, label %while.end51, !dbg !10617

if.end30:                                         ; preds = %while.cond25
  %call31 = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 22) #7, !dbg !10618
  %tobool32 = icmp eq i8 %call31, 0, !dbg !10618
  br i1 %tobool32, label %if.end34, label %while.end51, !dbg !10620

if.end34:                                         ; preds = %if.end30
  %call35 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10621
  %location36 = getelementptr inbounds %struct.c_token, %struct.c_token* %call35, i64 0, i32 2, !dbg !10622
  %5 = load i32, i32* %location36, align 8, !dbg !10622
  call void @llvm.dbg.value(metadata i32 %5, metadata !10573, metadata !DIExpression()), !dbg !10574
  %call37 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10623
  %6 = getelementptr inbounds %struct.c_token, %struct.c_token* %call37, i64 0, i32 0, !dbg !10625
  %bf.load38 = load i32, i32* %6, align 8, !dbg !10625
  %bf.lshr39.mask = and i32 %bf.load38, -16777216, !dbg !10626
  %cmp40 = icmp eq i32 %bf.lshr39.mask, 184549376, !dbg !10626
  br i1 %cmp40, label %if.then41, label %if.else, !dbg !10627

if.then41:                                        ; preds = %if.end34
  tail call fastcc void @c_parser_consume_pragma(%struct.c_parser* %parser) #7, !dbg !10628
  tail call fastcc void @c_parser_skip_to_pragma_eol(%struct.c_parser* %parser) #7, !dbg !10630
  call void @llvm.dbg.value(metadata i8 0, metadata !10572, metadata !DIExpression()), !dbg !10574
  br label %if.end45, !dbg !10631

if.else:                                          ; preds = %if.end34
  %tobool42 = icmp eq i8 %error_suppress.0, 0, !dbg !10632
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !10634

if.then43:                                        ; preds = %if.else
  tail call void (i32, i8*, ...) @error_at(i32 %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.121, i64 0, i64 0)) #6, !dbg !10635
  call void @llvm.dbg.value(metadata i8 1, metadata !10572, metadata !DIExpression()), !dbg !10574
  br label %if.end45, !dbg !10637

if.end45:                                         ; preds = %if.else, %if.then43, %if.then41
  %error_suppress.2 = phi i8 [ 0, %if.then41 ], [ %error_suppress.0, %if.else ], [ 1, %if.then43 ], !dbg !10574
  call void @llvm.dbg.value(metadata i8 %error_suppress.2, metadata !10572, metadata !DIExpression()), !dbg !10574
  %call46 = tail call fastcc %union.tree_node* @c_parser_omp_structured_block(%struct.c_parser* %parser) #7, !dbg !10638
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !10571, metadata !DIExpression()), !dbg !10574
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !10639
  %call47 = tail call %union.tree_node* @build1_stat(i32 158, %union.tree_node* %7, %union.tree_node* %call46) #6, !dbg !10639
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !10571, metadata !DIExpression()), !dbg !10574
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10640
  store i32 %5, i32* %8, align 8, !dbg !10640
  %call50 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call47) #6, !dbg !10641
  br label %while.cond25, !dbg !10613, !llvm.loop !10642

while.end51:                                      ; preds = %if.end30, %while.cond25
  tail call fastcc void @c_parser_skip_until_found(%struct.c_parser* %parser, i32 42, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.121, i64 0, i64 0)) #7, !dbg !10644
  %call52 = tail call %union.tree_node* @pop_stmt_list(%union.tree_node* %call2) #6, !dbg !10645
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !10571, metadata !DIExpression()), !dbg !10574
  %call53 = tail call %union.tree_node* @make_node_stat(i32 156) #6, !dbg !10646
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !10570, metadata !DIExpression()), !dbg !10574
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %call53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10647
  store i32 %sections_loc, i32* %9, align 8, !dbg !10647
  %10 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38) to i64*), align 16, !dbg !10648
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10649
  %11 = bitcast %union.tree_node** %type to i64*, !dbg !10650
  store i64 %10, i64* %11, align 8, !dbg !10650
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call53, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10651
  store %union.tree_node* %call52, %union.tree_node** %operands, align 8, !dbg !10652
  %call57 = tail call %union.tree_node* @add_stmt(%union.tree_node* %call53) #6, !dbg !10653
  br label %cleanup, !dbg !10654

cleanup:                                          ; preds = %while.end51, %if.then
  %retval.0 = phi %union.tree_node* [ %call57, %while.end51 ], [ null, %if.then ], !dbg !10574
  ret %union.tree_node* %retval.0, !dbg !10655
}

declare dso_local %union.tree_node* @c_begin_omp_task() local_unnamed_addr #2

declare dso_local %union.tree_node* @c_finish_omp_task(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_start_method_definition(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @objc_finish_method_definition(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @shadow_tag(%struct.c_declspecs*) local_unnamed_addr #2

declare dso_local %union.tree_node* @start_decl(%struct.c_declarator*, %struct.c_declspecs*, i8 zeroext, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @c_parser_initializer(%struct.c_expr* noalias sret %agg.result, %struct.c_parser* %parser) unnamed_addr #5 !dbg !10656 {
entry:
  %tmp = alloca %struct.c_expr, align 8
  %tmp9 = alloca %struct.c_expr, align 8
  call void @llvm.dbg.value(metadata %struct.c_parser* %parser, metadata !10658, metadata !DIExpression()), !dbg !10663
  %call = tail call fastcc zeroext i8 @c_parser_next_token_is(%struct.c_parser* %parser, i32 41) #7, !dbg !10664
  %tobool = icmp eq i8 %call, 0, !dbg !10664
  br i1 %tobool, label %if.else, label %if.then, !dbg !10665

if.then:                                          ; preds = %entry
  tail call fastcc void @c_parser_braced_init(%struct.c_expr* sret %agg.result, %struct.c_parser* %parser, %union.tree_node* null, i8 zeroext 0) #7, !dbg !10666
  br label %return, !dbg !10667

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.c_expr* %agg.result, metadata !10659, metadata !DIExpression()), !dbg !10668
  %call1 = tail call fastcc %struct.c_token* @c_parser_peek_token(%struct.c_parser* %parser) #7, !dbg !10669
  %location = getelementptr inbounds %struct.c_token, %struct.c_token* %call1, i64 0, i32 2, !dbg !10670
  %0 = load i32, i32* %location, align 8, !dbg !10670
  call void @llvm.dbg.value(metadata i32 %0, metadata !10662, metadata !DIExpression()), !dbg !10671
  %1 = bitcast %struct.c_expr* %tmp to i8*, !dbg !10672
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #8, !dbg !10672
  call fastcc void @c_parser_expr_no_commas(%struct.c_expr* nonnull sret %tmp, %struct.c_parser* %parser, %struct.c_expr* null) #7, !dbg !10672
  %2 = bitcast %struct.c_expr* %agg.result to i8*, !dbg !10672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* nonnull align 8 %1, i64 24, i1 false), !dbg !10672
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #8, !dbg !10672
  %3 = bitcast %struct.c_expr* %agg.result to i64**, !dbg !10673
  %4 = load i64*, i64** %3, align 8, !dbg !10673
  %bf.load = load i64, i64* %4, align 8, !dbg !10673
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10675
  %cmp = icmp eq i64 %bf.cast1, 28, !dbg !10675
  br i1 %cmp, label %return, label %land.lhs.true, !dbg !10676

land.lhs.true:                                    ; preds = %if.else
  %cmp7 = icmp eq i64 %bf.cast1, 119, !dbg !10677
  br i1 %cmp7, label %return, label %if.then8, !dbg !10678

if.then8:                                         ; preds = %land.lhs.true
  %5 = bitcast %struct.c_expr* %tmp9 to i8*, !dbg !10679
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #8, !dbg !10679
  call void @default_function_array_conversion(%struct.c_expr* nonnull sret %tmp9, i32 %0, %struct.c_expr* byval(%struct.c_expr) align 8 %agg.result) #6, !dbg !10679
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* nonnull align 8 %5, i64 24, i1 false), !dbg !10679
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #8, !dbg !10679
  br label %return, !dbg !10680

return:                                           ; preds = %land.lhs.true, %if.else, %if.then8, %if.then
  ret void, !dbg !10681
}

declare dso_local void @finish_decl(%union.tree_node*, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @c_push_function_context() local_unnamed_addr #2

declare dso_local i32 @start_function(%struct.c_declspecs*, %struct.c_declarator*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @c_pop_function_context() local_unnamed_addr #2

declare dso_local void @store_parm_decls() local_unnamed_addr #2

declare dso_local void @finish_function() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2093, !2094, !2095}
!llvm.ident = !{!2096}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "the_parser", scope: !2, file: !3, line: 197, type: !1896, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1980, globals: !2078, nameTableKind: None)
!3 = !DIFile(filename: "c-parser.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !147, !152, !157, !176, !183, !190, !384, !397, !477, !643, !665, !680, !688, !695, !704, !711, !1952, !1957, !1962}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !153, line: 474, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !158, line: 280, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!160 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !158, line: 1817, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !158, line: 1805, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !158, line: 39, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cpp_builtin_type", file: !385, line: 593, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./cpplib.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!387 = !DIEnumerator(name: "BT_SPECLINE", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "BT_DATE", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "BT_FILE", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "BT_BASE_FILE", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "BT_INCLUDE_LEVEL", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "BT_TIME", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "BT_STDC", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "BT_PRAGMA", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "BT_TIMESTAMP", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "BT_COUNTER", value: 9, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cpp_ttype", file: !385, line: 143, baseType: !7, size: 32, elements: !398)
!398 = !{!399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476}
!399 = !DIEnumerator(name: "CPP_EQ", value: 0, isUnsigned: true)
!400 = !DIEnumerator(name: "CPP_NOT", value: 1, isUnsigned: true)
!401 = !DIEnumerator(name: "CPP_GREATER", value: 2, isUnsigned: true)
!402 = !DIEnumerator(name: "CPP_LESS", value: 3, isUnsigned: true)
!403 = !DIEnumerator(name: "CPP_PLUS", value: 4, isUnsigned: true)
!404 = !DIEnumerator(name: "CPP_MINUS", value: 5, isUnsigned: true)
!405 = !DIEnumerator(name: "CPP_MULT", value: 6, isUnsigned: true)
!406 = !DIEnumerator(name: "CPP_DIV", value: 7, isUnsigned: true)
!407 = !DIEnumerator(name: "CPP_MOD", value: 8, isUnsigned: true)
!408 = !DIEnumerator(name: "CPP_AND", value: 9, isUnsigned: true)
!409 = !DIEnumerator(name: "CPP_OR", value: 10, isUnsigned: true)
!410 = !DIEnumerator(name: "CPP_XOR", value: 11, isUnsigned: true)
!411 = !DIEnumerator(name: "CPP_RSHIFT", value: 12, isUnsigned: true)
!412 = !DIEnumerator(name: "CPP_LSHIFT", value: 13, isUnsigned: true)
!413 = !DIEnumerator(name: "CPP_COMPL", value: 14, isUnsigned: true)
!414 = !DIEnumerator(name: "CPP_AND_AND", value: 15, isUnsigned: true)
!415 = !DIEnumerator(name: "CPP_OR_OR", value: 16, isUnsigned: true)
!416 = !DIEnumerator(name: "CPP_QUERY", value: 17, isUnsigned: true)
!417 = !DIEnumerator(name: "CPP_COLON", value: 18, isUnsigned: true)
!418 = !DIEnumerator(name: "CPP_COMMA", value: 19, isUnsigned: true)
!419 = !DIEnumerator(name: "CPP_OPEN_PAREN", value: 20, isUnsigned: true)
!420 = !DIEnumerator(name: "CPP_CLOSE_PAREN", value: 21, isUnsigned: true)
!421 = !DIEnumerator(name: "CPP_EOF", value: 22, isUnsigned: true)
!422 = !DIEnumerator(name: "CPP_EQ_EQ", value: 23, isUnsigned: true)
!423 = !DIEnumerator(name: "CPP_NOT_EQ", value: 24, isUnsigned: true)
!424 = !DIEnumerator(name: "CPP_GREATER_EQ", value: 25, isUnsigned: true)
!425 = !DIEnumerator(name: "CPP_LESS_EQ", value: 26, isUnsigned: true)
!426 = !DIEnumerator(name: "CPP_PLUS_EQ", value: 27, isUnsigned: true)
!427 = !DIEnumerator(name: "CPP_MINUS_EQ", value: 28, isUnsigned: true)
!428 = !DIEnumerator(name: "CPP_MULT_EQ", value: 29, isUnsigned: true)
!429 = !DIEnumerator(name: "CPP_DIV_EQ", value: 30, isUnsigned: true)
!430 = !DIEnumerator(name: "CPP_MOD_EQ", value: 31, isUnsigned: true)
!431 = !DIEnumerator(name: "CPP_AND_EQ", value: 32, isUnsigned: true)
!432 = !DIEnumerator(name: "CPP_OR_EQ", value: 33, isUnsigned: true)
!433 = !DIEnumerator(name: "CPP_XOR_EQ", value: 34, isUnsigned: true)
!434 = !DIEnumerator(name: "CPP_RSHIFT_EQ", value: 35, isUnsigned: true)
!435 = !DIEnumerator(name: "CPP_LSHIFT_EQ", value: 36, isUnsigned: true)
!436 = !DIEnumerator(name: "CPP_HASH", value: 37, isUnsigned: true)
!437 = !DIEnumerator(name: "CPP_PASTE", value: 38, isUnsigned: true)
!438 = !DIEnumerator(name: "CPP_OPEN_SQUARE", value: 39, isUnsigned: true)
!439 = !DIEnumerator(name: "CPP_CLOSE_SQUARE", value: 40, isUnsigned: true)
!440 = !DIEnumerator(name: "CPP_OPEN_BRACE", value: 41, isUnsigned: true)
!441 = !DIEnumerator(name: "CPP_CLOSE_BRACE", value: 42, isUnsigned: true)
!442 = !DIEnumerator(name: "CPP_SEMICOLON", value: 43, isUnsigned: true)
!443 = !DIEnumerator(name: "CPP_ELLIPSIS", value: 44, isUnsigned: true)
!444 = !DIEnumerator(name: "CPP_PLUS_PLUS", value: 45, isUnsigned: true)
!445 = !DIEnumerator(name: "CPP_MINUS_MINUS", value: 46, isUnsigned: true)
!446 = !DIEnumerator(name: "CPP_DEREF", value: 47, isUnsigned: true)
!447 = !DIEnumerator(name: "CPP_DOT", value: 48, isUnsigned: true)
!448 = !DIEnumerator(name: "CPP_SCOPE", value: 49, isUnsigned: true)
!449 = !DIEnumerator(name: "CPP_DEREF_STAR", value: 50, isUnsigned: true)
!450 = !DIEnumerator(name: "CPP_DOT_STAR", value: 51, isUnsigned: true)
!451 = !DIEnumerator(name: "CPP_ATSIGN", value: 52, isUnsigned: true)
!452 = !DIEnumerator(name: "CPP_NAME", value: 53, isUnsigned: true)
!453 = !DIEnumerator(name: "CPP_AT_NAME", value: 54, isUnsigned: true)
!454 = !DIEnumerator(name: "CPP_NUMBER", value: 55, isUnsigned: true)
!455 = !DIEnumerator(name: "CPP_CHAR", value: 56, isUnsigned: true)
!456 = !DIEnumerator(name: "CPP_WCHAR", value: 57, isUnsigned: true)
!457 = !DIEnumerator(name: "CPP_CHAR16", value: 58, isUnsigned: true)
!458 = !DIEnumerator(name: "CPP_CHAR32", value: 59, isUnsigned: true)
!459 = !DIEnumerator(name: "CPP_OTHER", value: 60, isUnsigned: true)
!460 = !DIEnumerator(name: "CPP_STRING", value: 61, isUnsigned: true)
!461 = !DIEnumerator(name: "CPP_WSTRING", value: 62, isUnsigned: true)
!462 = !DIEnumerator(name: "CPP_STRING16", value: 63, isUnsigned: true)
!463 = !DIEnumerator(name: "CPP_STRING32", value: 64, isUnsigned: true)
!464 = !DIEnumerator(name: "CPP_UTF8STRING", value: 65, isUnsigned: true)
!465 = !DIEnumerator(name: "CPP_OBJC_STRING", value: 66, isUnsigned: true)
!466 = !DIEnumerator(name: "CPP_HEADER_NAME", value: 67, isUnsigned: true)
!467 = !DIEnumerator(name: "CPP_COMMENT", value: 68, isUnsigned: true)
!468 = !DIEnumerator(name: "CPP_MACRO_ARG", value: 69, isUnsigned: true)
!469 = !DIEnumerator(name: "CPP_PRAGMA", value: 70, isUnsigned: true)
!470 = !DIEnumerator(name: "CPP_PRAGMA_EOL", value: 71, isUnsigned: true)
!471 = !DIEnumerator(name: "CPP_PADDING", value: 72, isUnsigned: true)
!472 = !DIEnumerator(name: "N_TTYPES", value: 73, isUnsigned: true)
!473 = !DIEnumerator(name: "CPP_LAST_EQ", value: 13, isUnsigned: true)
!474 = !DIEnumerator(name: "CPP_FIRST_DIGRAPH", value: 37, isUnsigned: true)
!475 = !DIEnumerator(name: "CPP_LAST_PUNCTUATOR", value: 52, isUnsigned: true)
!476 = !DIEnumerator(name: "CPP_LAST_CPP_OP", value: 26, isUnsigned: true)
!477 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rid", file: !478, line: 48, baseType: !7, size: 32, elements: !479)
!478 = !DIFile(filename: "./c-common.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!479 = !{!480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642}
!480 = !DIEnumerator(name: "RID_STATIC", value: 0, isUnsigned: true)
!481 = !DIEnumerator(name: "RID_UNSIGNED", value: 1, isUnsigned: true)
!482 = !DIEnumerator(name: "RID_LONG", value: 2, isUnsigned: true)
!483 = !DIEnumerator(name: "RID_CONST", value: 3, isUnsigned: true)
!484 = !DIEnumerator(name: "RID_EXTERN", value: 4, isUnsigned: true)
!485 = !DIEnumerator(name: "RID_REGISTER", value: 5, isUnsigned: true)
!486 = !DIEnumerator(name: "RID_TYPEDEF", value: 6, isUnsigned: true)
!487 = !DIEnumerator(name: "RID_SHORT", value: 7, isUnsigned: true)
!488 = !DIEnumerator(name: "RID_INLINE", value: 8, isUnsigned: true)
!489 = !DIEnumerator(name: "RID_VOLATILE", value: 9, isUnsigned: true)
!490 = !DIEnumerator(name: "RID_SIGNED", value: 10, isUnsigned: true)
!491 = !DIEnumerator(name: "RID_AUTO", value: 11, isUnsigned: true)
!492 = !DIEnumerator(name: "RID_RESTRICT", value: 12, isUnsigned: true)
!493 = !DIEnumerator(name: "RID_COMPLEX", value: 13, isUnsigned: true)
!494 = !DIEnumerator(name: "RID_THREAD", value: 14, isUnsigned: true)
!495 = !DIEnumerator(name: "RID_SAT", value: 15, isUnsigned: true)
!496 = !DIEnumerator(name: "RID_FRIEND", value: 16, isUnsigned: true)
!497 = !DIEnumerator(name: "RID_VIRTUAL", value: 17, isUnsigned: true)
!498 = !DIEnumerator(name: "RID_EXPLICIT", value: 18, isUnsigned: true)
!499 = !DIEnumerator(name: "RID_EXPORT", value: 19, isUnsigned: true)
!500 = !DIEnumerator(name: "RID_MUTABLE", value: 20, isUnsigned: true)
!501 = !DIEnumerator(name: "RID_IN", value: 21, isUnsigned: true)
!502 = !DIEnumerator(name: "RID_OUT", value: 22, isUnsigned: true)
!503 = !DIEnumerator(name: "RID_INOUT", value: 23, isUnsigned: true)
!504 = !DIEnumerator(name: "RID_BYCOPY", value: 24, isUnsigned: true)
!505 = !DIEnumerator(name: "RID_BYREF", value: 25, isUnsigned: true)
!506 = !DIEnumerator(name: "RID_ONEWAY", value: 26, isUnsigned: true)
!507 = !DIEnumerator(name: "RID_IMAGINARY", value: 27, isUnsigned: true)
!508 = !DIEnumerator(name: "RID_INT", value: 28, isUnsigned: true)
!509 = !DIEnumerator(name: "RID_CHAR", value: 29, isUnsigned: true)
!510 = !DIEnumerator(name: "RID_FLOAT", value: 30, isUnsigned: true)
!511 = !DIEnumerator(name: "RID_DOUBLE", value: 31, isUnsigned: true)
!512 = !DIEnumerator(name: "RID_VOID", value: 32, isUnsigned: true)
!513 = !DIEnumerator(name: "RID_ENUM", value: 33, isUnsigned: true)
!514 = !DIEnumerator(name: "RID_STRUCT", value: 34, isUnsigned: true)
!515 = !DIEnumerator(name: "RID_UNION", value: 35, isUnsigned: true)
!516 = !DIEnumerator(name: "RID_IF", value: 36, isUnsigned: true)
!517 = !DIEnumerator(name: "RID_ELSE", value: 37, isUnsigned: true)
!518 = !DIEnumerator(name: "RID_WHILE", value: 38, isUnsigned: true)
!519 = !DIEnumerator(name: "RID_DO", value: 39, isUnsigned: true)
!520 = !DIEnumerator(name: "RID_FOR", value: 40, isUnsigned: true)
!521 = !DIEnumerator(name: "RID_SWITCH", value: 41, isUnsigned: true)
!522 = !DIEnumerator(name: "RID_CASE", value: 42, isUnsigned: true)
!523 = !DIEnumerator(name: "RID_DEFAULT", value: 43, isUnsigned: true)
!524 = !DIEnumerator(name: "RID_BREAK", value: 44, isUnsigned: true)
!525 = !DIEnumerator(name: "RID_CONTINUE", value: 45, isUnsigned: true)
!526 = !DIEnumerator(name: "RID_RETURN", value: 46, isUnsigned: true)
!527 = !DIEnumerator(name: "RID_GOTO", value: 47, isUnsigned: true)
!528 = !DIEnumerator(name: "RID_SIZEOF", value: 48, isUnsigned: true)
!529 = !DIEnumerator(name: "RID_ASM", value: 49, isUnsigned: true)
!530 = !DIEnumerator(name: "RID_TYPEOF", value: 50, isUnsigned: true)
!531 = !DIEnumerator(name: "RID_ALIGNOF", value: 51, isUnsigned: true)
!532 = !DIEnumerator(name: "RID_ATTRIBUTE", value: 52, isUnsigned: true)
!533 = !DIEnumerator(name: "RID_VA_ARG", value: 53, isUnsigned: true)
!534 = !DIEnumerator(name: "RID_EXTENSION", value: 54, isUnsigned: true)
!535 = !DIEnumerator(name: "RID_IMAGPART", value: 55, isUnsigned: true)
!536 = !DIEnumerator(name: "RID_REALPART", value: 56, isUnsigned: true)
!537 = !DIEnumerator(name: "RID_LABEL", value: 57, isUnsigned: true)
!538 = !DIEnumerator(name: "RID_CHOOSE_EXPR", value: 58, isUnsigned: true)
!539 = !DIEnumerator(name: "RID_TYPES_COMPATIBLE_P", value: 59, isUnsigned: true)
!540 = !DIEnumerator(name: "RID_DFLOAT32", value: 60, isUnsigned: true)
!541 = !DIEnumerator(name: "RID_DFLOAT64", value: 61, isUnsigned: true)
!542 = !DIEnumerator(name: "RID_DFLOAT128", value: 62, isUnsigned: true)
!543 = !DIEnumerator(name: "RID_FRACT", value: 63, isUnsigned: true)
!544 = !DIEnumerator(name: "RID_ACCUM", value: 64, isUnsigned: true)
!545 = !DIEnumerator(name: "RID_CXX_COMPAT_WARN", value: 65, isUnsigned: true)
!546 = !DIEnumerator(name: "RID_FUNCTION_NAME", value: 66, isUnsigned: true)
!547 = !DIEnumerator(name: "RID_PRETTY_FUNCTION_NAME", value: 67, isUnsigned: true)
!548 = !DIEnumerator(name: "RID_C99_FUNCTION_NAME", value: 68, isUnsigned: true)
!549 = !DIEnumerator(name: "RID_BOOL", value: 69, isUnsigned: true)
!550 = !DIEnumerator(name: "RID_WCHAR", value: 70, isUnsigned: true)
!551 = !DIEnumerator(name: "RID_CLASS", value: 71, isUnsigned: true)
!552 = !DIEnumerator(name: "RID_PUBLIC", value: 72, isUnsigned: true)
!553 = !DIEnumerator(name: "RID_PRIVATE", value: 73, isUnsigned: true)
!554 = !DIEnumerator(name: "RID_PROTECTED", value: 74, isUnsigned: true)
!555 = !DIEnumerator(name: "RID_TEMPLATE", value: 75, isUnsigned: true)
!556 = !DIEnumerator(name: "RID_NULL", value: 76, isUnsigned: true)
!557 = !DIEnumerator(name: "RID_CATCH", value: 77, isUnsigned: true)
!558 = !DIEnumerator(name: "RID_DELETE", value: 78, isUnsigned: true)
!559 = !DIEnumerator(name: "RID_FALSE", value: 79, isUnsigned: true)
!560 = !DIEnumerator(name: "RID_NAMESPACE", value: 80, isUnsigned: true)
!561 = !DIEnumerator(name: "RID_NEW", value: 81, isUnsigned: true)
!562 = !DIEnumerator(name: "RID_OFFSETOF", value: 82, isUnsigned: true)
!563 = !DIEnumerator(name: "RID_OPERATOR", value: 83, isUnsigned: true)
!564 = !DIEnumerator(name: "RID_THIS", value: 84, isUnsigned: true)
!565 = !DIEnumerator(name: "RID_THROW", value: 85, isUnsigned: true)
!566 = !DIEnumerator(name: "RID_TRUE", value: 86, isUnsigned: true)
!567 = !DIEnumerator(name: "RID_TRY", value: 87, isUnsigned: true)
!568 = !DIEnumerator(name: "RID_TYPENAME", value: 88, isUnsigned: true)
!569 = !DIEnumerator(name: "RID_TYPEID", value: 89, isUnsigned: true)
!570 = !DIEnumerator(name: "RID_USING", value: 90, isUnsigned: true)
!571 = !DIEnumerator(name: "RID_CHAR16", value: 91, isUnsigned: true)
!572 = !DIEnumerator(name: "RID_CHAR32", value: 92, isUnsigned: true)
!573 = !DIEnumerator(name: "RID_CONSTCAST", value: 93, isUnsigned: true)
!574 = !DIEnumerator(name: "RID_DYNCAST", value: 94, isUnsigned: true)
!575 = !DIEnumerator(name: "RID_REINTCAST", value: 95, isUnsigned: true)
!576 = !DIEnumerator(name: "RID_STATCAST", value: 96, isUnsigned: true)
!577 = !DIEnumerator(name: "RID_HAS_NOTHROW_ASSIGN", value: 97, isUnsigned: true)
!578 = !DIEnumerator(name: "RID_HAS_NOTHROW_CONSTRUCTOR", value: 98, isUnsigned: true)
!579 = !DIEnumerator(name: "RID_HAS_NOTHROW_COPY", value: 99, isUnsigned: true)
!580 = !DIEnumerator(name: "RID_HAS_TRIVIAL_ASSIGN", value: 100, isUnsigned: true)
!581 = !DIEnumerator(name: "RID_HAS_TRIVIAL_CONSTRUCTOR", value: 101, isUnsigned: true)
!582 = !DIEnumerator(name: "RID_HAS_TRIVIAL_COPY", value: 102, isUnsigned: true)
!583 = !DIEnumerator(name: "RID_HAS_TRIVIAL_DESTRUCTOR", value: 103, isUnsigned: true)
!584 = !DIEnumerator(name: "RID_HAS_VIRTUAL_DESTRUCTOR", value: 104, isUnsigned: true)
!585 = !DIEnumerator(name: "RID_IS_ABSTRACT", value: 105, isUnsigned: true)
!586 = !DIEnumerator(name: "RID_IS_BASE_OF", value: 106, isUnsigned: true)
!587 = !DIEnumerator(name: "RID_IS_CONVERTIBLE_TO", value: 107, isUnsigned: true)
!588 = !DIEnumerator(name: "RID_IS_CLASS", value: 108, isUnsigned: true)
!589 = !DIEnumerator(name: "RID_IS_EMPTY", value: 109, isUnsigned: true)
!590 = !DIEnumerator(name: "RID_IS_ENUM", value: 110, isUnsigned: true)
!591 = !DIEnumerator(name: "RID_IS_POD", value: 111, isUnsigned: true)
!592 = !DIEnumerator(name: "RID_IS_POLYMORPHIC", value: 112, isUnsigned: true)
!593 = !DIEnumerator(name: "RID_IS_STD_LAYOUT", value: 113, isUnsigned: true)
!594 = !DIEnumerator(name: "RID_IS_TRIVIAL", value: 114, isUnsigned: true)
!595 = !DIEnumerator(name: "RID_IS_UNION", value: 115, isUnsigned: true)
!596 = !DIEnumerator(name: "RID_STATIC_ASSERT", value: 116, isUnsigned: true)
!597 = !DIEnumerator(name: "RID_CONSTEXPR", value: 117, isUnsigned: true)
!598 = !DIEnumerator(name: "RID_DECLTYPE", value: 118, isUnsigned: true)
!599 = !DIEnumerator(name: "RID_AT_ENCODE", value: 119, isUnsigned: true)
!600 = !DIEnumerator(name: "RID_AT_END", value: 120, isUnsigned: true)
!601 = !DIEnumerator(name: "RID_AT_CLASS", value: 121, isUnsigned: true)
!602 = !DIEnumerator(name: "RID_AT_ALIAS", value: 122, isUnsigned: true)
!603 = !DIEnumerator(name: "RID_AT_DEFS", value: 123, isUnsigned: true)
!604 = !DIEnumerator(name: "RID_AT_PRIVATE", value: 124, isUnsigned: true)
!605 = !DIEnumerator(name: "RID_AT_PROTECTED", value: 125, isUnsigned: true)
!606 = !DIEnumerator(name: "RID_AT_PUBLIC", value: 126, isUnsigned: true)
!607 = !DIEnumerator(name: "RID_AT_PROTOCOL", value: 127, isUnsigned: true)
!608 = !DIEnumerator(name: "RID_AT_SELECTOR", value: 128, isUnsigned: true)
!609 = !DIEnumerator(name: "RID_AT_THROW", value: 129, isUnsigned: true)
!610 = !DIEnumerator(name: "RID_AT_TRY", value: 130, isUnsigned: true)
!611 = !DIEnumerator(name: "RID_AT_CATCH", value: 131, isUnsigned: true)
!612 = !DIEnumerator(name: "RID_AT_FINALLY", value: 132, isUnsigned: true)
!613 = !DIEnumerator(name: "RID_AT_SYNCHRONIZED", value: 133, isUnsigned: true)
!614 = !DIEnumerator(name: "RID_AT_INTERFACE", value: 134, isUnsigned: true)
!615 = !DIEnumerator(name: "RID_AT_IMPLEMENTATION", value: 135, isUnsigned: true)
!616 = !DIEnumerator(name: "RID_ADDR_SPACE_0", value: 136, isUnsigned: true)
!617 = !DIEnumerator(name: "RID_ADDR_SPACE_1", value: 137, isUnsigned: true)
!618 = !DIEnumerator(name: "RID_ADDR_SPACE_2", value: 138, isUnsigned: true)
!619 = !DIEnumerator(name: "RID_ADDR_SPACE_3", value: 139, isUnsigned: true)
!620 = !DIEnumerator(name: "RID_ADDR_SPACE_4", value: 140, isUnsigned: true)
!621 = !DIEnumerator(name: "RID_ADDR_SPACE_5", value: 141, isUnsigned: true)
!622 = !DIEnumerator(name: "RID_ADDR_SPACE_6", value: 142, isUnsigned: true)
!623 = !DIEnumerator(name: "RID_ADDR_SPACE_7", value: 143, isUnsigned: true)
!624 = !DIEnumerator(name: "RID_ADDR_SPACE_8", value: 144, isUnsigned: true)
!625 = !DIEnumerator(name: "RID_ADDR_SPACE_9", value: 145, isUnsigned: true)
!626 = !DIEnumerator(name: "RID_ADDR_SPACE_10", value: 146, isUnsigned: true)
!627 = !DIEnumerator(name: "RID_ADDR_SPACE_11", value: 147, isUnsigned: true)
!628 = !DIEnumerator(name: "RID_ADDR_SPACE_12", value: 148, isUnsigned: true)
!629 = !DIEnumerator(name: "RID_ADDR_SPACE_13", value: 149, isUnsigned: true)
!630 = !DIEnumerator(name: "RID_ADDR_SPACE_14", value: 150, isUnsigned: true)
!631 = !DIEnumerator(name: "RID_ADDR_SPACE_15", value: 151, isUnsigned: true)
!632 = !DIEnumerator(name: "RID_FIRST_ADDR_SPACE", value: 136, isUnsigned: true)
!633 = !DIEnumerator(name: "RID_LAST_ADDR_SPACE", value: 151, isUnsigned: true)
!634 = !DIEnumerator(name: "RID_MAX", value: 152, isUnsigned: true)
!635 = !DIEnumerator(name: "RID_FIRST_MODIFIER", value: 0, isUnsigned: true)
!636 = !DIEnumerator(name: "RID_LAST_MODIFIER", value: 26, isUnsigned: true)
!637 = !DIEnumerator(name: "RID_FIRST_CXX0X", value: 116, isUnsigned: true)
!638 = !DIEnumerator(name: "RID_LAST_CXX0X", value: 118, isUnsigned: true)
!639 = !DIEnumerator(name: "RID_FIRST_AT", value: 119, isUnsigned: true)
!640 = !DIEnumerator(name: "RID_LAST_AT", value: 135, isUnsigned: true)
!641 = !DIEnumerator(name: "RID_FIRST_PQ", value: 21, isUnsigned: true)
!642 = !DIEnumerator(name: "RID_LAST_PQ", value: 26, isUnsigned: true)
!643 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pragma_kind", file: !644, line: 28, baseType: !7, size: 32, elements: !645)
!644 = !DIFile(filename: "./c-pragma.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!645 = !{!646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664}
!646 = !DIEnumerator(name: "PRAGMA_NONE", value: 0, isUnsigned: true)
!647 = !DIEnumerator(name: "PRAGMA_OMP_ATOMIC", value: 1, isUnsigned: true)
!648 = !DIEnumerator(name: "PRAGMA_OMP_BARRIER", value: 2, isUnsigned: true)
!649 = !DIEnumerator(name: "PRAGMA_OMP_CRITICAL", value: 3, isUnsigned: true)
!650 = !DIEnumerator(name: "PRAGMA_OMP_FLUSH", value: 4, isUnsigned: true)
!651 = !DIEnumerator(name: "PRAGMA_OMP_FOR", value: 5, isUnsigned: true)
!652 = !DIEnumerator(name: "PRAGMA_OMP_MASTER", value: 6, isUnsigned: true)
!653 = !DIEnumerator(name: "PRAGMA_OMP_ORDERED", value: 7, isUnsigned: true)
!654 = !DIEnumerator(name: "PRAGMA_OMP_PARALLEL", value: 8, isUnsigned: true)
!655 = !DIEnumerator(name: "PRAGMA_OMP_PARALLEL_FOR", value: 9, isUnsigned: true)
!656 = !DIEnumerator(name: "PRAGMA_OMP_PARALLEL_SECTIONS", value: 10, isUnsigned: true)
!657 = !DIEnumerator(name: "PRAGMA_OMP_SECTION", value: 11, isUnsigned: true)
!658 = !DIEnumerator(name: "PRAGMA_OMP_SECTIONS", value: 12, isUnsigned: true)
!659 = !DIEnumerator(name: "PRAGMA_OMP_SINGLE", value: 13, isUnsigned: true)
!660 = !DIEnumerator(name: "PRAGMA_OMP_TASK", value: 14, isUnsigned: true)
!661 = !DIEnumerator(name: "PRAGMA_OMP_TASKWAIT", value: 15, isUnsigned: true)
!662 = !DIEnumerator(name: "PRAGMA_OMP_THREADPRIVATE", value: 16, isUnsigned: true)
!663 = !DIEnumerator(name: "PRAGMA_GCC_PCH_PREPROCESS", value: 17, isUnsigned: true)
!664 = !DIEnumerator(name: "PRAGMA_FIRST_EXTERNAL", value: 18, isUnsigned: true)
!665 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_typespec_keyword", file: !666, line: 192, baseType: !7, size: 32, elements: !667)
!666 = !DIFile(filename: "./c-tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!667 = !{!668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679}
!668 = !DIEnumerator(name: "cts_none", value: 0, isUnsigned: true)
!669 = !DIEnumerator(name: "cts_void", value: 1, isUnsigned: true)
!670 = !DIEnumerator(name: "cts_bool", value: 2, isUnsigned: true)
!671 = !DIEnumerator(name: "cts_char", value: 3, isUnsigned: true)
!672 = !DIEnumerator(name: "cts_int", value: 4, isUnsigned: true)
!673 = !DIEnumerator(name: "cts_float", value: 5, isUnsigned: true)
!674 = !DIEnumerator(name: "cts_double", value: 6, isUnsigned: true)
!675 = !DIEnumerator(name: "cts_dfloat32", value: 7, isUnsigned: true)
!676 = !DIEnumerator(name: "cts_dfloat64", value: 8, isUnsigned: true)
!677 = !DIEnumerator(name: "cts_dfloat128", value: 9, isUnsigned: true)
!678 = !DIEnumerator(name: "cts_fract", value: 10, isUnsigned: true)
!679 = !DIEnumerator(name: "cts_accum", value: 11, isUnsigned: true)
!680 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_storage_class", file: !666, line: 180, baseType: !7, size: 32, elements: !681)
!681 = !{!682, !683, !684, !685, !686, !687}
!682 = !DIEnumerator(name: "csc_none", value: 0, isUnsigned: true)
!683 = !DIEnumerator(name: "csc_auto", value: 1, isUnsigned: true)
!684 = !DIEnumerator(name: "csc_extern", value: 2, isUnsigned: true)
!685 = !DIEnumerator(name: "csc_register", value: 3, isUnsigned: true)
!686 = !DIEnumerator(name: "csc_static", value: 4, isUnsigned: true)
!687 = !DIEnumerator(name: "csc_typedef", value: 5, isUnsigned: true)
!688 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_declarator_kind", file: !666, line: 285, baseType: !7, size: 32, elements: !689)
!689 = !{!690, !691, !692, !693, !694}
!690 = !DIEnumerator(name: "cdk_id", value: 0, isUnsigned: true)
!691 = !DIEnumerator(name: "cdk_function", value: 1, isUnsigned: true)
!692 = !DIEnumerator(name: "cdk_array", value: 2, isUnsigned: true)
!693 = !DIEnumerator(name: "cdk_pointer", value: 3, isUnsigned: true)
!694 = !DIEnumerator(name: "cdk_attrs", value: 4, isUnsigned: true)
!695 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_typespec_kind", file: !666, line: 137, baseType: !7, size: 32, elements: !696)
!696 = !{!697, !698, !699, !700, !701, !702, !703}
!697 = !DIEnumerator(name: "ctsk_resword", value: 0, isUnsigned: true)
!698 = !DIEnumerator(name: "ctsk_tagref", value: 1, isUnsigned: true)
!699 = !DIEnumerator(name: "ctsk_tagfirstref", value: 2, isUnsigned: true)
!700 = !DIEnumerator(name: "ctsk_tagdef", value: 3, isUnsigned: true)
!701 = !DIEnumerator(name: "ctsk_typedef", value: 4, isUnsigned: true)
!702 = !DIEnumerator(name: "ctsk_objc", value: 5, isUnsigned: true)
!703 = !DIEnumerator(name: "ctsk_typeof", value: 6, isUnsigned: true)
!704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_id_kind", file: !3, line: 132, baseType: !7, size: 32, elements: !705)
!705 = !{!706, !707, !708, !709, !710}
!706 = !DIEnumerator(name: "C_ID_ID", value: 0, isUnsigned: true)
!707 = !DIEnumerator(name: "C_ID_TYPENAME", value: 1, isUnsigned: true)
!708 = !DIEnumerator(name: "C_ID_CLASSNAME", value: 2, isUnsigned: true)
!709 = !DIEnumerator(name: "C_ID_ADDRSPACE", value: 3, isUnsigned: true)
!710 = !DIEnumerator(name: "C_ID_NONE", value: 4, isUnsigned: true)
!711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "prec", scope: !712, file: !3, line: 4803, baseType: !7, size: 32, elements: !1939)
!712 = distinct !DISubprogram(name: "c_parser_binary_expression", scope: !3, file: !3, line: 4778, type: !713, scopeLine: 4779, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !1920)
!713 = !DISubroutineType(types: !714)
!714 = !{!715, !1896, !1919}
!715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_expr", file: !666, line: 116, size: 192, elements: !716)
!716 = !{!717, !1894, !1895}
!717 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !715, file: !666, line: 119, baseType: !718, size: 64)
!718 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !719, line: 56, baseType: !720)
!719 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !158, line: 3371, size: 1792, elements: !722)
!722 = !{!723, !756, !762, !775, !794, !805, !810, !821, !827, !841, !853, !891, !1176, !1204, !1212, !1213, !1218, !1227, !1233, !1238, !1242, !1246, !1532, !1579, !1585, !1591, !1598, !1624, !1638, !1655, !1667, !1689, !1704, !1876}
!723 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !721, file: !158, line: 3372, baseType: !724, size: 64)
!724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !158, line: 360, size: 64, elements: !725)
!725 = !{!726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755}
!726 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !724, file: !158, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !724, file: !158, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !724, file: !158, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !724, file: !158, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !724, file: !158, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !724, file: !158, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !724, file: !158, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !724, file: !158, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !724, file: !158, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !724, file: !158, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !724, file: !158, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !724, file: !158, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !724, file: !158, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !724, file: !158, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !724, file: !158, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !724, file: !158, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !724, file: !158, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !724, file: !158, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !724, file: !158, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !724, file: !158, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !724, file: !158, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !724, file: !158, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !724, file: !158, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !724, file: !158, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !724, file: !158, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !724, file: !158, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !724, file: !158, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !724, file: !158, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !724, file: !158, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !724, file: !158, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !721, file: !158, line: 3373, baseType: !757, size: 192)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !158, line: 402, size: 192, elements: !758)
!758 = !{!759, !760, !761}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !757, file: !158, line: 403, baseType: !724, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !757, file: !158, line: 404, baseType: !718, size: 64, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !757, file: !158, line: 405, baseType: !718, size: 64, offset: 128)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !721, file: !158, line: 3374, baseType: !763, size: 320)
!763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !158, line: 1384, size: 320, elements: !764)
!764 = !{!765, !766}
!765 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !763, file: !158, line: 1385, baseType: !757, size: 192)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !763, file: !158, line: 1386, baseType: !767, size: 128, offset: 192)
!767 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !768, line: 58, baseType: !769)
!768 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !768, line: 54, size: 128, elements: !770)
!770 = !{!771, !773}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !769, file: !768, line: 56, baseType: !772, size: 64)
!772 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !769, file: !768, line: 57, baseType: !774, size: 64, offset: 64)
!774 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !721, file: !158, line: 3375, baseType: !776, size: 256)
!776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !158, line: 1397, size: 256, elements: !777)
!777 = !{!778, !779}
!778 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !776, file: !158, line: 1398, baseType: !757, size: 192)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !776, file: !158, line: 1399, baseType: !780, size: 64, offset: 192)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !782, line: 52, size: 256, elements: !783)
!782 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!783 = !{!784, !785, !786, !787, !788, !789, !790}
!784 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !781, file: !782, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !781, file: !782, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !781, file: !782, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !781, file: !782, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !781, file: !782, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !781, file: !782, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !781, file: !782, line: 62, baseType: !791, size: 192, offset: 64)
!791 = !DICompositeType(tag: DW_TAG_array_type, baseType: !772, size: 192, elements: !792)
!792 = !{!793}
!793 = !DISubrange(count: 3)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !721, file: !158, line: 3376, baseType: !795, size: 256)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !158, line: 1408, size: 256, elements: !796)
!796 = !{!797, !798}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !795, file: !158, line: 1409, baseType: !757, size: 192)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !795, file: !158, line: 1410, baseType: !799, size: 64, offset: 192)
!799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !800, size: 64)
!800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !801, line: 27, size: 192, elements: !802)
!801 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!802 = !{!803, !804}
!803 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !800, file: !801, line: 29, baseType: !767, size: 128)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !800, file: !801, line: 30, baseType: !5, size: 32, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !721, file: !158, line: 3377, baseType: !806, size: 256)
!806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !158, line: 1437, size: 256, elements: !807)
!807 = !{!808, !809}
!808 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !806, file: !158, line: 1438, baseType: !757, size: 192)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !806, file: !158, line: 1439, baseType: !718, size: 64, offset: 192)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !721, file: !158, line: 3378, baseType: !811, size: 256)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !158, line: 1418, size: 256, elements: !812)
!812 = !{!813, !814, !816}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !811, file: !158, line: 1419, baseType: !757, size: 192)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !811, file: !158, line: 1420, baseType: !815, size: 32, offset: 192)
!815 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !811, file: !158, line: 1421, baseType: !817, size: 8, offset: 224)
!817 = !DICompositeType(tag: DW_TAG_array_type, baseType: !818, size: 8, elements: !819)
!818 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!819 = !{!820}
!820 = !DISubrange(count: 1)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !721, file: !158, line: 3379, baseType: !822, size: 320)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !158, line: 1428, size: 320, elements: !823)
!823 = !{!824, !825, !826}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !822, file: !158, line: 1429, baseType: !757, size: 192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !822, file: !158, line: 1430, baseType: !718, size: 64, offset: 192)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !822, file: !158, line: 1431, baseType: !718, size: 64, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !721, file: !158, line: 3380, baseType: !828, size: 320)
!828 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !158, line: 1460, size: 320, elements: !829)
!829 = !{!830, !831}
!830 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !828, file: !158, line: 1461, baseType: !757, size: 192)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !828, file: !158, line: 1462, baseType: !832, size: 128, offset: 192)
!832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !833, line: 31, size: 128, elements: !834)
!833 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!834 = !{!835, !839, !840}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !832, file: !833, line: 32, baseType: !836, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !838)
!838 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !832, file: !833, line: 33, baseType: !7, size: 32, offset: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !832, file: !833, line: 34, baseType: !7, size: 32, offset: 96)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !721, file: !158, line: 3381, baseType: !842, size: 384)
!842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !158, line: 2507, size: 384, elements: !843)
!843 = !{!844, !845, !850, !851, !852}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !842, file: !158, line: 2508, baseType: !757, size: 192)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !842, file: !158, line: 2509, baseType: !846, size: 32, offset: 192)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !847, line: 58, baseType: !848)
!847 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!848 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !849, line: 44, baseType: !7)
!849 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!850 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !842, file: !158, line: 2510, baseType: !7, size: 32, offset: 224)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !842, file: !158, line: 2511, baseType: !718, size: 64, offset: 256)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !842, file: !158, line: 2512, baseType: !718, size: 64, offset: 320)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !721, file: !158, line: 3382, baseType: !854, size: 896)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !158, line: 2652, size: 896, elements: !855)
!855 = !{!856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !854, file: !158, line: 2653, baseType: !842, size: 384)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !854, file: !158, line: 2654, baseType: !718, size: 64, offset: 384)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !854, file: !158, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !854, file: !158, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !854, file: !158, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !854, file: !158, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !854, file: !158, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !854, file: !158, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !854, file: !158, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !854, file: !158, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !854, file: !158, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !854, file: !158, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !854, file: !158, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !854, file: !158, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !854, file: !158, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !854, file: !158, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !854, file: !158, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !854, file: !158, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !854, file: !158, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !854, file: !158, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !854, file: !158, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !854, file: !158, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !854, file: !158, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !854, file: !158, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !854, file: !158, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !854, file: !158, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !854, file: !158, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !854, file: !158, line: 2703, baseType: !7, size: 32, offset: 512)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !854, file: !158, line: 2705, baseType: !718, size: 64, offset: 576)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !854, file: !158, line: 2706, baseType: !718, size: 64, offset: 640)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !854, file: !158, line: 2707, baseType: !718, size: 64, offset: 704)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !854, file: !158, line: 2708, baseType: !718, size: 64, offset: 768)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !854, file: !158, line: 2711, baseType: !889, size: 64, offset: 832)
!889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!890 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !158, line: 2711, flags: DIFlagFwdDecl)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !721, file: !158, line: 3383, baseType: !892, size: 960)
!892 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !158, line: 2756, size: 960, elements: !893)
!893 = !{!894, !895}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !892, file: !158, line: 2757, baseType: !854, size: 896)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !892, file: !158, line: 2758, baseType: !896, size: 64, offset: 896)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !719, line: 50, baseType: !897)
!897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !898, size: 64)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !899, line: 240, size: 384, elements: !900)
!899 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!900 = !{!901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !898, file: !899, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !898, file: !899, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !898, file: !899, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !898, file: !899, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !898, file: !899, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !898, file: !899, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !898, file: !899, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !898, file: !899, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !898, file: !899, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !898, file: !899, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !898, file: !899, line: 321, baseType: !912, size: 320, offset: 64)
!912 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !899, line: 315, size: 320, elements: !913)
!913 = !{!914, !1109, !1111, !1174, !1175}
!914 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !912, file: !899, line: 316, baseType: !915, size: 64)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 64, elements: !819)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !899, line: 183, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !899, line: 166, size: 64, elements: !918)
!918 = !{!919, !920, !921, !924, !925, !933, !934, !946, !949, !1011, !1012, !1086, !1099, !1106}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !917, file: !899, line: 168, baseType: !815, size: 32)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !917, file: !899, line: 169, baseType: !7, size: 32)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !917, file: !899, line: 170, baseType: !922, size: 64)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !818)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !917, file: !899, line: 171, baseType: !896, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !917, file: !899, line: 172, baseType: !926, size: 64)
!926 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !719, line: 53, baseType: !927)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !899, line: 359, size: 128, elements: !929)
!929 = !{!930, !931}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !928, file: !899, line: 360, baseType: !815, size: 32)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !928, file: !899, line: 361, baseType: !932, size: 64, offset: 64)
!932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !896, size: 64, elements: !819)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !917, file: !899, line: 173, baseType: !5, size: 32)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !917, file: !899, line: 174, baseType: !935, size: 32)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !899, line: 133, baseType: !936)
!936 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !899, line: 115, size: 32, elements: !937)
!937 = !{!938, !939, !940, !941, !942, !943, !944, !945}
!938 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !936, file: !899, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !936, file: !899, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !936, file: !899, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !936, file: !899, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !936, file: !899, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !936, file: !899, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !936, file: !899, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !936, file: !899, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !917, file: !899, line: 175, baseType: !947, size: 64)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !899, line: 175, flags: DIFlagFwdDecl)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !917, file: !899, line: 176, baseType: !950, size: 64)
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !952, line: 75, size: 256, elements: !953)
!952 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!953 = !{!954, !968, !969, !970}
!954 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !951, file: !952, line: 76, baseType: !955, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !952, line: 68, baseType: !957)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !952, line: 63, size: 320, elements: !958)
!958 = !{!959, !961, !962, !963}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !957, file: !952, line: 64, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !957, file: !952, line: 65, baseType: !960, size: 64, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !957, file: !952, line: 66, baseType: !7, size: 32, offset: 128)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !957, file: !952, line: 67, baseType: !964, size: 128, offset: 192)
!964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !965, size: 128, elements: !966)
!965 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !952, line: 29, baseType: !772)
!966 = !{!967}
!967 = !DISubrange(count: 2)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !951, file: !952, line: 77, baseType: !955, size: 64, offset: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !951, file: !952, line: 78, baseType: !7, size: 32, offset: 128)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !951, file: !952, line: 79, baseType: !971, size: 64, offset: 192)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !952, line: 49, baseType: !973)
!973 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !952, line: 45, size: 832, elements: !974)
!974 = !{!975, !976, !977}
!975 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !973, file: !952, line: 46, baseType: !960, size: 64)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !973, file: !952, line: 47, baseType: !950, size: 64, offset: 64)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !973, file: !952, line: 48, baseType: !978, size: 704, offset: 128)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !979, line: 164, size: 704, elements: !980)
!979 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!980 = !{!981, !982, !993, !994, !995, !996, !997, !998, !1003, !1007, !1008, !1009, !1010}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !978, file: !979, line: 166, baseType: !774, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !978, file: !979, line: 167, baseType: !983, size: 64, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !979, line: 157, size: 192, elements: !985)
!985 = !{!986, !988, !989}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !984, file: !979, line: 159, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !984, file: !979, line: 160, baseType: !983, size: 64, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !984, file: !979, line: 161, baseType: !990, size: 32, offset: 128)
!990 = !DICompositeType(tag: DW_TAG_array_type, baseType: !818, size: 32, elements: !991)
!991 = !{!992}
!992 = !DISubrange(count: 4)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !978, file: !979, line: 168, baseType: !987, size: 64, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !978, file: !979, line: 169, baseType: !987, size: 64, offset: 192)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !978, file: !979, line: 170, baseType: !987, size: 64, offset: 256)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !978, file: !979, line: 171, baseType: !774, size: 64, offset: 320)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !978, file: !979, line: 172, baseType: !815, size: 32, offset: 384)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !978, file: !979, line: 176, baseType: !999, size: 64, offset: 448)
!999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1000, size: 64)
!1000 = !DISubroutineType(types: !1001)
!1001 = !{!983, !1002, !774}
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !978, file: !979, line: 177, baseType: !1004, size: 64, offset: 512)
!1004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1005, size: 64)
!1005 = !DISubroutineType(types: !1006)
!1006 = !{null, !1002, !983}
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !978, file: !979, line: 178, baseType: !1002, size: 64, offset: 576)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !978, file: !979, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !978, file: !979, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !978, file: !979, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !917, file: !899, line: 177, baseType: !718, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !917, file: !899, line: 178, baseType: !1013, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !1015)
!1015 = !{!1016, !1051, !1052, !1053, !1056, !1060, !1061, !1062, !1080, !1081, !1082, !1083, !1084, !1085}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1014, file: !142, line: 219, baseType: !1017, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !1019)
!1019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !1020)
!1020 = !{!1021}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1019, file: !142, line: 151, baseType: !1022, size: 128)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !1023)
!1023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !1024)
!1024 = !{!1025, !1026, !1027}
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1023, file: !142, line: 150, baseType: !7, size: 32)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1023, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1023, file: !142, line: 150, baseType: !1028, size: 64, offset: 64)
!1028 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1029, size: 64, elements: !819)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !719, line: 108, baseType: !1030)
!1030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1031, size: 64)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !1032)
!1032 = !{!1033, !1034, !1035, !1043, !1044, !1045, !1046, !1047, !1048, !1049}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1031, file: !142, line: 124, baseType: !1013, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1031, file: !142, line: 125, baseType: !1013, size: 64, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1031, file: !142, line: 131, baseType: !1036, size: 64, offset: 128)
!1036 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !1037)
!1037 = !{!1038, !1042}
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1036, file: !142, line: 129, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !719, line: 66, baseType: !1040)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !719, line: 65, flags: DIFlagFwdDecl)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1036, file: !142, line: 130, baseType: !896, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1031, file: !142, line: 134, baseType: !1002, size: 64, offset: 192)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1031, file: !142, line: 137, baseType: !718, size: 64, offset: 256)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1031, file: !142, line: 138, baseType: !846, size: 32, offset: 320)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1031, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1031, file: !142, line: 144, baseType: !815, size: 32, offset: 384)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1031, file: !142, line: 145, baseType: !815, size: 32, offset: 416)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1031, file: !142, line: 146, baseType: !1050, size: 64, offset: 448)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !774)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1014, file: !142, line: 220, baseType: !1017, size: 64, offset: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1014, file: !142, line: 223, baseType: !1002, size: 64, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1014, file: !142, line: 226, baseType: !1054, size: 64, offset: 192)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 185, flags: DIFlagFwdDecl)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1014, file: !142, line: 229, baseType: !1057, size: 128, offset: 256)
!1057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1058, size: 128, elements: !966)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1014, file: !142, line: 232, baseType: !1013, size: 64, offset: 384)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1014, file: !142, line: 233, baseType: !1013, size: 64, offset: 448)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1014, file: !142, line: 238, baseType: !1063, size: 64, offset: 512)
!1063 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !1064)
!1064 = !{!1065, !1071}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1063, file: !142, line: 236, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !1068)
!1068 = !{!1069, !1070}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1067, file: !142, line: 275, baseType: !1039, size: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1067, file: !142, line: 278, baseType: !1039, size: 64, offset: 64)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1063, file: !142, line: 237, baseType: !1072, size: 64)
!1072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1073, size: 64)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1079}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1073, file: !142, line: 261, baseType: !896, size: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1073, file: !142, line: 262, baseType: !896, size: 64, offset: 64)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1073, file: !142, line: 266, baseType: !896, size: 64, offset: 128)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1073, file: !142, line: 267, baseType: !896, size: 64, offset: 192)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1073, file: !142, line: 270, baseType: !815, size: 32, offset: 256)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1014, file: !142, line: 241, baseType: !1050, size: 64, offset: 576)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1014, file: !142, line: 244, baseType: !815, size: 32, offset: 640)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1014, file: !142, line: 247, baseType: !815, size: 32, offset: 672)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1014, file: !142, line: 250, baseType: !815, size: 32, offset: 704)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1014, file: !142, line: 253, baseType: !815, size: 32, offset: 736)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1014, file: !142, line: 256, baseType: !815, size: 32, offset: 768)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !917, file: !899, line: 179, baseType: !1087, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !899, line: 150, baseType: !1089)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !899, line: 142, size: 320, elements: !1090)
!1090 = !{!1091, !1092, !1093, !1094, !1097, !1098}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1089, file: !899, line: 144, baseType: !718, size: 64)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1089, file: !899, line: 145, baseType: !896, size: 64, offset: 64)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1089, file: !899, line: 146, baseType: !896, size: 64, offset: 128)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1089, file: !899, line: 147, baseType: !1095, size: 32, offset: 192)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1096, line: 31, baseType: !815)
!1096 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1089, file: !899, line: 148, baseType: !7, size: 32, offset: 224)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1089, file: !899, line: 149, baseType: !838, size: 8, offset: 256)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !917, file: !899, line: 180, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !899, line: 162, baseType: !1102)
!1102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !899, line: 159, size: 128, elements: !1103)
!1103 = !{!1104, !1105}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1102, file: !899, line: 160, baseType: !718, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1102, file: !899, line: 161, baseType: !774, size: 64, offset: 64)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !917, file: !899, line: 181, baseType: !1107, size: 64)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !899, line: 181, flags: DIFlagFwdDecl)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !912, file: !899, line: 317, baseType: !1110, size: 64)
!1110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !774, size: 64, elements: !819)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !912, file: !899, line: 318, baseType: !1112, size: 320)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !899, line: 188, size: 320, elements: !1113)
!1113 = !{!1114, !1116, !1173}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1112, file: !899, line: 190, baseType: !1115, size: 192)
!1115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !916, size: 192, elements: !792)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1112, file: !899, line: 193, baseType: !1117, size: 64, offset: 192)
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1118, size: 64)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !899, line: 206, size: 320, elements: !1119)
!1119 = !{!1120, !1158, !1159, !1160, !1172}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1118, file: !899, line: 208, baseType: !1121, size: 64)
!1121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !719, line: 62, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1124, line: 538, size: 256, elements: !1125)
!1124 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1125 = !{!1126, !1130, !1136, !1149}
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1123, file: !1124, line: 539, baseType: !1127, size: 32)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1124, line: 482, size: 32, elements: !1128)
!1128 = !{!1129}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1127, file: !1124, line: 484, baseType: !7, size: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1123, file: !1124, line: 540, baseType: !1131, size: 192)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1124, line: 488, size: 192, elements: !1132)
!1132 = !{!1133, !1134, !1135}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1131, file: !1124, line: 489, baseType: !1127, size: 32)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1131, file: !1124, line: 492, baseType: !922, size: 64, offset: 64)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1131, file: !1124, line: 496, baseType: !718, size: 64, offset: 128)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1123, file: !1124, line: 541, baseType: !1137, size: 256)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1124, line: 504, size: 256, elements: !1138)
!1138 = !{!1139, !1140, !1147, !1148}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1137, file: !1124, line: 505, baseType: !1127, size: 32)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1137, file: !1124, line: 509, baseType: !1141, size: 64, offset: 64)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1124, line: 501, baseType: !1142)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{null, !1145}
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1137, file: !1124, line: 510, baseType: !1145, size: 64, offset: 128)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1137, file: !1124, line: 513, baseType: !1121, size: 64, offset: 192)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1123, file: !1124, line: 542, baseType: !1150, size: 128)
!1150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1124, line: 530, size: 128, elements: !1151)
!1151 = !{!1152, !1153}
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1150, file: !1124, line: 531, baseType: !1127, size: 32)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1150, file: !1124, line: 534, baseType: !1154, size: 64, offset: 64)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1124, line: 525, baseType: !1155)
!1155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1156, size: 64)
!1156 = !DISubroutineType(types: !1157)
!1157 = !{!838, !718, !922, !772, !772}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1118, file: !899, line: 211, baseType: !7, size: 32, offset: 64)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1118, file: !899, line: 214, baseType: !774, size: 64, offset: 128)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1118, file: !899, line: 224, baseType: !1161, size: 64, offset: 192)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !899, line: 202, baseType: !1163)
!1163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !899, line: 202, size: 128, elements: !1164)
!1164 = !{!1165}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1163, file: !899, line: 202, baseType: !1166, size: 128)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !899, line: 200, baseType: !1167)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !899, line: 200, size: 128, elements: !1168)
!1168 = !{!1169, !1170, !1171}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1167, file: !899, line: 200, baseType: !7, size: 32)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1167, file: !899, line: 200, baseType: !7, size: 32, offset: 32)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1167, file: !899, line: 200, baseType: !932, size: 64, offset: 64)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1118, file: !899, line: 234, baseType: !1161, size: 64, offset: 256)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1112, file: !899, line: 197, baseType: !774, size: 64, offset: 256)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !912, file: !899, line: 319, baseType: !781, size: 256)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !912, file: !899, line: 320, baseType: !800, size: 192)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !721, file: !158, line: 3384, baseType: !1177, size: 1472)
!1177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !158, line: 3114, size: 1472, elements: !1178)
!1178 = !{!1179, !1200, !1201, !1202, !1203}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1177, file: !158, line: 3115, baseType: !1180, size: 1216)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !158, line: 2984, size: 1216, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1180, file: !158, line: 2985, baseType: !892, size: 960)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1180, file: !158, line: 2986, baseType: !718, size: 64, offset: 960)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1180, file: !158, line: 2987, baseType: !718, size: 64, offset: 1024)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1180, file: !158, line: 2988, baseType: !718, size: 64, offset: 1088)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1180, file: !158, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1180, file: !158, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1180, file: !158, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1180, file: !158, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1180, file: !158, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1180, file: !158, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1180, file: !158, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1180, file: !158, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1180, file: !158, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1180, file: !158, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1180, file: !158, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1180, file: !158, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1180, file: !158, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1180, file: !158, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1177, file: !158, line: 3117, baseType: !718, size: 64, offset: 1216)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1177, file: !158, line: 3119, baseType: !718, size: 64, offset: 1280)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1177, file: !158, line: 3121, baseType: !718, size: 64, offset: 1344)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1177, file: !158, line: 3123, baseType: !718, size: 64, offset: 1408)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !721, file: !158, line: 3385, baseType: !1205, size: 1088)
!1205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !158, line: 2874, size: 1088, elements: !1206)
!1206 = !{!1207, !1208, !1209}
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1205, file: !158, line: 2875, baseType: !892, size: 960)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1205, file: !158, line: 2876, baseType: !896, size: 64, offset: 960)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1205, file: !158, line: 2877, baseType: !1210, size: 64, offset: 1024)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1211, size: 64)
!1211 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !158, line: 2856, flags: DIFlagFwdDecl)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !721, file: !158, line: 3386, baseType: !1180, size: 1216)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !721, file: !158, line: 3387, baseType: !1214, size: 1280)
!1214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !158, line: 3093, size: 1280, elements: !1215)
!1215 = !{!1216, !1217}
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1214, file: !158, line: 3094, baseType: !1180, size: 1216)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1214, file: !158, line: 3095, baseType: !1210, size: 64, offset: 1216)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !721, file: !158, line: 3388, baseType: !1219, size: 1216)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !158, line: 2824, size: 1216, elements: !1220)
!1220 = !{!1221, !1222, !1223, !1224, !1225, !1226}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1219, file: !158, line: 2825, baseType: !854, size: 896)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1219, file: !158, line: 2827, baseType: !718, size: 64, offset: 896)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1219, file: !158, line: 2828, baseType: !718, size: 64, offset: 960)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1219, file: !158, line: 2829, baseType: !718, size: 64, offset: 1024)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1219, file: !158, line: 2830, baseType: !718, size: 64, offset: 1088)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1219, file: !158, line: 2831, baseType: !718, size: 64, offset: 1152)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !721, file: !158, line: 3389, baseType: !1228, size: 1024)
!1228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !158, line: 2850, size: 1024, elements: !1229)
!1229 = !{!1230, !1231, !1232}
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1228, file: !158, line: 2851, baseType: !892, size: 960)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1228, file: !158, line: 2852, baseType: !815, size: 32, offset: 960)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1228, file: !158, line: 2853, baseType: !815, size: 32, offset: 992)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !721, file: !158, line: 3390, baseType: !1234, size: 1024)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !158, line: 2857, size: 1024, elements: !1235)
!1235 = !{!1236, !1237}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1234, file: !158, line: 2858, baseType: !892, size: 960)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1234, file: !158, line: 2859, baseType: !1210, size: 64, offset: 960)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !721, file: !158, line: 3391, baseType: !1239, size: 960)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !158, line: 2862, size: 960, elements: !1240)
!1240 = !{!1241}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1239, file: !158, line: 2863, baseType: !892, size: 960)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !721, file: !158, line: 3392, baseType: !1243, size: 1472)
!1243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !158, line: 3304, size: 1472, elements: !1244)
!1244 = !{!1245}
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1243, file: !158, line: 3305, baseType: !1177, size: 1472)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !721, file: !158, line: 3393, baseType: !1247, size: 1792)
!1247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !158, line: 3248, size: 1792, elements: !1248)
!1248 = !{!1249, !1250, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531}
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1247, file: !158, line: 3249, baseType: !1177, size: 1472)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1247, file: !158, line: 3251, baseType: !1251, size: 64, offset: 1472)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1253, line: 463, size: 1152, elements: !1254)
!1253 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1254 = !{!1255, !1417, !1448, !1449, !1452, !1455, !1456, !1457, !1458, !1459, !1460, !1484, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1252, file: !1253, line: 464, baseType: !1256, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1257, size: 64)
!1257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1258)
!1258 = !{!1259, !1308, !1321, !1335, !1385, !1398}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1257, file: !135, line: 197, baseType: !1260, size: 64)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1261)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1263)
!1263 = !{!1264, !1265, !1266, !1267, !1268, !1269, !1296, !1305, !1306, !1307}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1262, file: !135, line: 119, baseType: !1261, size: 64)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1262, file: !135, line: 122, baseType: !1261, size: 64, offset: 64)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1262, file: !135, line: 123, baseType: !1261, size: 64, offset: 128)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1262, file: !135, line: 126, baseType: !815, size: 32, offset: 192)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1262, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1262, file: !135, line: 165, baseType: !1270, size: 192, offset: 256)
!1270 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1271)
!1271 = !{!1272, !1285, !1291}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1270, file: !135, line: 137, baseType: !1273, size: 128)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1274)
!1274 = !{!1275, !1284}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1273, file: !135, line: 135, baseType: !1276, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1278)
!1278 = !{!1279, !1280, !1281, !1282, !1283}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1277, file: !135, line: 96, baseType: !1276, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1277, file: !135, line: 97, baseType: !1276, size: 64, offset: 64)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1277, file: !135, line: 101, baseType: !718, size: 64, offset: 128)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1277, file: !135, line: 106, baseType: !718, size: 64, offset: 192)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1277, file: !135, line: 111, baseType: !718, size: 64, offset: 256)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1273, file: !135, line: 136, baseType: !1276, size: 64, offset: 64)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1270, file: !135, line: 151, baseType: !1286, size: 192)
!1286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1287)
!1287 = !{!1288, !1289, !1290}
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1286, file: !135, line: 141, baseType: !718, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1286, file: !135, line: 145, baseType: !718, size: 64, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1286, file: !135, line: 150, baseType: !815, size: 32, offset: 128)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1270, file: !135, line: 164, baseType: !1292, size: 128)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1293)
!1293 = !{!1294, !1295}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1292, file: !135, line: 161, baseType: !718, size: 64)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1292, file: !135, line: 163, baseType: !846, size: 32, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1262, file: !135, line: 168, baseType: !1297, size: 64, offset: 448)
!1297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1298, size: 64)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1299)
!1299 = !{!1300, !1301, !1302, !1303, !1304}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1298, file: !135, line: 70, baseType: !1297, size: 64)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1298, file: !135, line: 73, baseType: !1261, size: 64, offset: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1298, file: !135, line: 78, baseType: !718, size: 64, offset: 128)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1298, file: !135, line: 85, baseType: !896, size: 64, offset: 192)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1298, file: !135, line: 88, baseType: !815, size: 32, offset: 256)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1262, file: !135, line: 173, baseType: !896, size: 64, offset: 512)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1262, file: !135, line: 173, baseType: !896, size: 64, offset: 576)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1262, file: !135, line: 177, baseType: !838, size: 8, offset: 640)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1257, file: !135, line: 200, baseType: !1309, size: 64, offset: 64)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1312)
!1312 = !{!1313}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1311, file: !135, line: 185, baseType: !1314, size: 128)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1316)
!1316 = !{!1317, !1318, !1319}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1315, file: !135, line: 184, baseType: !7, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1315, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1315, file: !135, line: 184, baseType: !1320, size: 64, offset: 64)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1260, size: 64, elements: !819)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1257, file: !135, line: 203, baseType: !1322, size: 64, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1324)
!1324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1325)
!1325 = !{!1326}
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1324, file: !135, line: 189, baseType: !1327, size: 128)
!1327 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1328)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1329)
!1329 = !{!1330, !1331, !1332}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1328, file: !135, line: 188, baseType: !7, size: 32)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1328, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1328, file: !135, line: 188, baseType: !1333, size: 64, offset: 64)
!1333 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1334, size: 64, elements: !819)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1297)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1257, file: !135, line: 207, baseType: !1336, size: 64, offset: 192)
!1336 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1337, line: 144, baseType: !1338)
!1337 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1337, line: 100, size: 896, elements: !1340)
!1340 = !{!1341, !1347, !1352, !1357, !1359, !1362, !1363, !1364, !1365, !1366, !1371, !1373, !1374, !1379, !1384}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1339, file: !1337, line: 102, baseType: !1342, size: 64)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1337, line: 52, baseType: !1343)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{!1346, !1145}
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1337, line: 47, baseType: !7)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1339, file: !1337, line: 105, baseType: !1348, size: 64, offset: 64)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1337, line: 59, baseType: !1349)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DISubroutineType(types: !1351)
!1351 = !{!815, !1145, !1145}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1339, file: !1337, line: 108, baseType: !1353, size: 64, offset: 128)
!1353 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1337, line: 63, baseType: !1354)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DISubroutineType(types: !1356)
!1356 = !{null, !1002}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1339, file: !1337, line: 111, baseType: !1358, size: 64, offset: 192)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1339, file: !1337, line: 114, baseType: !1360, size: 64, offset: 256)
!1360 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1361, line: 46, baseType: !772)
!1361 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1339, file: !1337, line: 117, baseType: !1360, size: 64, offset: 320)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1339, file: !1337, line: 120, baseType: !1360, size: 64, offset: 384)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1339, file: !1337, line: 124, baseType: !7, size: 32, offset: 448)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1339, file: !1337, line: 128, baseType: !7, size: 32, offset: 480)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1339, file: !1337, line: 131, baseType: !1367, size: 64, offset: 512)
!1367 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1337, line: 75, baseType: !1368)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = !DISubroutineType(types: !1370)
!1370 = !{!1002, !1360, !1360}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1339, file: !1337, line: 132, baseType: !1372, size: 64, offset: 576)
!1372 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1337, line: 78, baseType: !1354)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1339, file: !1337, line: 135, baseType: !1002, size: 64, offset: 640)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1339, file: !1337, line: 136, baseType: !1375, size: 64, offset: 704)
!1375 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1337, line: 82, baseType: !1376)
!1376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1377, size: 64)
!1377 = !DISubroutineType(types: !1378)
!1378 = !{!1002, !1002, !1360, !1360}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1339, file: !1337, line: 137, baseType: !1380, size: 64, offset: 768)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1337, line: 83, baseType: !1381)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DISubroutineType(types: !1383)
!1383 = !{null, !1002, !1002}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1339, file: !1337, line: 141, baseType: !7, size: 32, offset: 832)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1257, file: !135, line: 211, baseType: !1386, size: 64, offset: 256)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !158, line: 183, baseType: !1388)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !158, line: 183, size: 128, elements: !1389)
!1389 = !{!1390}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1388, file: !158, line: 183, baseType: !1391, size: 128)
!1391 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !158, line: 182, baseType: !1392)
!1392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !158, line: 182, size: 128, elements: !1393)
!1393 = !{!1394, !1395, !1396}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1392, file: !158, line: 182, baseType: !7, size: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1392, file: !158, line: 182, baseType: !7, size: 32, offset: 32)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1392, file: !158, line: 182, baseType: !1397, size: 64, offset: 64)
!1397 = !DICompositeType(tag: DW_TAG_array_type, baseType: !718, size: 64, elements: !819)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1257, file: !135, line: 220, baseType: !1399, size: 64, offset: 320)
!1399 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1400)
!1400 = !{!1401, !1402}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1399, file: !135, line: 218, baseType: !1386, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1399, file: !135, line: 219, baseType: !1403, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1405, line: 29, baseType: !1406)
!1405 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1405, line: 29, size: 96, elements: !1407)
!1407 = !{!1408}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1406, file: !1405, line: 29, baseType: !1409, size: 96)
!1409 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1405, line: 27, baseType: !1410)
!1410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1405, line: 27, size: 96, elements: !1411)
!1411 = !{!1412, !1413, !1414}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1410, file: !1405, line: 27, baseType: !7, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1410, file: !1405, line: 27, baseType: !7, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1410, file: !1405, line: 27, baseType: !1415, size: 8, offset: 64)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1416, size: 8, elements: !819)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1405, line: 26, baseType: !838)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1252, file: !1253, line: 467, baseType: !1418, size: 64, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1419, size: 64)
!1419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !1420)
!1420 = !{!1421, !1423, !1424, !1437, !1438, !1439, !1440, !1441, !1442, !1444, !1446, !1447}
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1419, file: !142, line: 377, baseType: !1422, size: 64)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !719, line: 111, baseType: !1013)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1419, file: !142, line: 378, baseType: !1422, size: 64, offset: 64)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1419, file: !142, line: 381, baseType: !1425, size: 64, offset: 128)
!1425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1426, size: 64)
!1426 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !1427)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !1428)
!1428 = !{!1429}
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1427, file: !142, line: 282, baseType: !1430, size: 128)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !1431)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !1432)
!1432 = !{!1433, !1434, !1435}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1431, file: !142, line: 281, baseType: !7, size: 32)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1431, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1431, file: !142, line: 281, baseType: !1436, size: 64, offset: 64)
!1436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1422, size: 64, elements: !819)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1419, file: !142, line: 384, baseType: !815, size: 32, offset: 192)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1419, file: !142, line: 387, baseType: !815, size: 32, offset: 224)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1419, file: !142, line: 390, baseType: !815, size: 32, offset: 256)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1419, file: !142, line: 394, baseType: !1425, size: 64, offset: 320)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1419, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1419, file: !142, line: 399, baseType: !1443, size: 64, offset: 416)
!1443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !966)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1419, file: !142, line: 402, baseType: !1445, size: 64, offset: 480)
!1445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !966)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1419, file: !142, line: 406, baseType: !815, size: 32, offset: 544)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1419, file: !142, line: 409, baseType: !815, size: 32, offset: 576)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1252, file: !1253, line: 470, baseType: !1040, size: 64, offset: 128)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1252, file: !1253, line: 473, baseType: !1450, size: 64, offset: 192)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1253, line: 166, flags: DIFlagFwdDecl)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1252, file: !1253, line: 476, baseType: !1453, size: 64, offset: 256)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1253, line: 476, flags: DIFlagFwdDecl)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1252, file: !1253, line: 479, baseType: !1336, size: 64, offset: 320)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1252, file: !1253, line: 484, baseType: !718, size: 64, offset: 384)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1252, file: !1253, line: 488, baseType: !718, size: 64, offset: 448)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1252, file: !1253, line: 493, baseType: !718, size: 64, offset: 512)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1252, file: !1253, line: 496, baseType: !718, size: 64, offset: 576)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1252, file: !1253, line: 501, baseType: !1461, size: 64, offset: 640)
!1461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1462, size: 64)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !153, line: 2355, size: 576, elements: !1463)
!1463 = !{!1464, !1467, !1468, !1469, !1470, !1472, !1473, !1478, !1479, !1480, !1481, !1482, !1483}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1462, file: !153, line: 2356, baseType: !1465, size: 64)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !153, line: 2356, flags: DIFlagFwdDecl)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1462, file: !153, line: 2357, baseType: !922, size: 64, offset: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1462, file: !153, line: 2358, baseType: !815, size: 32, offset: 128)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1462, file: !153, line: 2359, baseType: !815, size: 32, offset: 160)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1462, file: !153, line: 2360, baseType: !1471, size: 128, offset: 192)
!1471 = !DICompositeType(tag: DW_TAG_array_type, baseType: !815, size: 128, elements: !991)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1462, file: !153, line: 2364, baseType: !815, size: 32, offset: 320)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1462, file: !153, line: 2367, baseType: !1474, size: 128, offset: 384)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !153, line: 2349, size: 128, elements: !1475)
!1475 = !{!1476, !1477}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1474, file: !153, line: 2351, baseType: !896, size: 64)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1474, file: !153, line: 2352, baseType: !774, size: 64, offset: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1462, file: !153, line: 2371, baseType: !152, size: 32, offset: 512)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1462, file: !153, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1462, file: !153, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1462, file: !153, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1462, file: !153, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1462, file: !153, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1252, file: !1253, line: 504, baseType: !1485, size: 64, offset: 704)
!1485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1486 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1253, line: 504, flags: DIFlagFwdDecl)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1252, file: !1253, line: 507, baseType: !1336, size: 64, offset: 768)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1252, file: !1253, line: 510, baseType: !815, size: 32, offset: 832)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1252, file: !1253, line: 513, baseType: !815, size: 32, offset: 864)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1252, file: !1253, line: 516, baseType: !846, size: 32, offset: 896)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1252, file: !1253, line: 519, baseType: !846, size: 32, offset: 928)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1252, file: !1253, line: 522, baseType: !7, size: 32, offset: 960)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1252, file: !1253, line: 523, baseType: !7, size: 32, offset: 992)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1252, file: !1253, line: 528, baseType: !922, size: 64, offset: 1024)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1252, file: !1253, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1252, file: !1253, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1252, file: !1253, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1252, file: !1253, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1252, file: !1253, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1252, file: !1253, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1252, file: !1253, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1252, file: !1253, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1252, file: !1253, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1252, file: !1253, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1252, file: !1253, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1252, file: !1253, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1252, file: !1253, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1252, file: !1253, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1252, file: !1253, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1252, file: !1253, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1247, file: !158, line: 3254, baseType: !718, size: 64, offset: 1536)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1247, file: !158, line: 3257, baseType: !718, size: 64, offset: 1600)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1247, file: !158, line: 3258, baseType: !718, size: 64, offset: 1664)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1247, file: !158, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1247, file: !158, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1247, file: !158, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1247, file: !158, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1247, file: !158, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1247, file: !158, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1247, file: !158, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1247, file: !158, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1247, file: !158, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1247, file: !158, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1247, file: !158, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1247, file: !158, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1247, file: !158, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1247, file: !158, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1247, file: !158, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1247, file: !158, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1247, file: !158, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1247, file: !158, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !721, file: !158, line: 3394, baseType: !1533, size: 1344)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !158, line: 2279, size: 1344, elements: !1534)
!1534 = !{!1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1533, file: !158, line: 2280, baseType: !757, size: 192)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1533, file: !158, line: 2281, baseType: !718, size: 64, offset: 192)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1533, file: !158, line: 2282, baseType: !718, size: 64, offset: 256)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1533, file: !158, line: 2283, baseType: !718, size: 64, offset: 320)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1533, file: !158, line: 2284, baseType: !718, size: 64, offset: 384)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1533, file: !158, line: 2285, baseType: !7, size: 32, offset: 448)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1533, file: !158, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1533, file: !158, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1533, file: !158, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1533, file: !158, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1533, file: !158, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1533, file: !158, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1533, file: !158, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1533, file: !158, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1533, file: !158, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1533, file: !158, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1533, file: !158, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1533, file: !158, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1533, file: !158, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1533, file: !158, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1533, file: !158, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1533, file: !158, line: 2305, baseType: !7, size: 32, offset: 512)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1533, file: !158, line: 2306, baseType: !1095, size: 32, offset: 544)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1533, file: !158, line: 2307, baseType: !718, size: 64, offset: 576)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1533, file: !158, line: 2308, baseType: !718, size: 64, offset: 640)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1533, file: !158, line: 2314, baseType: !1561, size: 64, offset: 704)
!1561 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !158, line: 2309, size: 64, elements: !1562)
!1562 = !{!1563, !1564, !1565}
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1561, file: !158, line: 2310, baseType: !815, size: 32)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1561, file: !158, line: 2311, baseType: !922, size: 64)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1561, file: !158, line: 2312, baseType: !1566, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !158, line: 2277, flags: DIFlagFwdDecl)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1533, file: !158, line: 2315, baseType: !718, size: 64, offset: 768)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1533, file: !158, line: 2316, baseType: !718, size: 64, offset: 832)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1533, file: !158, line: 2317, baseType: !718, size: 64, offset: 896)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1533, file: !158, line: 2318, baseType: !718, size: 64, offset: 960)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1533, file: !158, line: 2319, baseType: !718, size: 64, offset: 1024)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1533, file: !158, line: 2320, baseType: !718, size: 64, offset: 1088)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1533, file: !158, line: 2321, baseType: !718, size: 64, offset: 1152)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1533, file: !158, line: 2322, baseType: !718, size: 64, offset: 1216)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1533, file: !158, line: 2324, baseType: !1577, size: 64, offset: 1280)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !158, line: 2324, flags: DIFlagFwdDecl)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !721, file: !158, line: 3395, baseType: !1580, size: 320)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !158, line: 1469, size: 320, elements: !1581)
!1581 = !{!1582, !1583, !1584}
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1580, file: !158, line: 1470, baseType: !757, size: 192)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1580, file: !158, line: 1471, baseType: !718, size: 64, offset: 192)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1580, file: !158, line: 1472, baseType: !718, size: 64, offset: 256)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !721, file: !158, line: 3396, baseType: !1586, size: 320)
!1586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !158, line: 1482, size: 320, elements: !1587)
!1587 = !{!1588, !1589, !1590}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1586, file: !158, line: 1483, baseType: !757, size: 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1586, file: !158, line: 1484, baseType: !815, size: 32, offset: 192)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1586, file: !158, line: 1485, baseType: !1397, size: 64, offset: 256)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !721, file: !158, line: 3397, baseType: !1592, size: 384)
!1592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !158, line: 1829, size: 384, elements: !1593)
!1593 = !{!1594, !1595, !1596, !1597}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1592, file: !158, line: 1830, baseType: !757, size: 192)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1592, file: !158, line: 1831, baseType: !846, size: 32, offset: 192)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1592, file: !158, line: 1832, baseType: !718, size: 64, offset: 256)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1592, file: !158, line: 1835, baseType: !1397, size: 64, offset: 320)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !721, file: !158, line: 3398, baseType: !1599, size: 704)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !158, line: 1898, size: 704, elements: !1600)
!1600 = !{!1601, !1602, !1603, !1607, !1608, !1611}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1599, file: !158, line: 1899, baseType: !757, size: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1599, file: !158, line: 1902, baseType: !718, size: 64, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1599, file: !158, line: 1905, baseType: !1604, size: 64, offset: 256)
!1604 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !719, line: 58, baseType: !1605)
!1605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!1606 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !719, line: 57, flags: DIFlagFwdDecl)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1599, file: !158, line: 1908, baseType: !7, size: 32, offset: 320)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1599, file: !158, line: 1911, baseType: !1609, size: 64, offset: 384)
!1609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1610, size: 64)
!1610 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !158, line: 1876, flags: DIFlagFwdDecl)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1599, file: !158, line: 1914, baseType: !1612, size: 256, offset: 448)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !158, line: 1883, size: 256, elements: !1613)
!1613 = !{!1614, !1616, !1617, !1622}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1612, file: !158, line: 1884, baseType: !1615, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1612, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1612, file: !158, line: 1885, baseType: !1615, size: 64, offset: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1612, file: !158, line: 1891, baseType: !1618, size: 64, offset: 128)
!1618 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1612, file: !158, line: 1891, size: 64, elements: !1619)
!1619 = !{!1620, !1621}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1618, file: !158, line: 1891, baseType: !1604, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1618, file: !158, line: 1891, baseType: !718, size: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1612, file: !158, line: 1892, baseType: !1623, size: 64, offset: 192)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !721, file: !158, line: 3399, baseType: !1625, size: 704)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !158, line: 2008, size: 704, elements: !1626)
!1626 = !{!1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1625, file: !158, line: 2009, baseType: !757, size: 192)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1625, file: !158, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1625, file: !158, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1625, file: !158, line: 2014, baseType: !846, size: 32, offset: 224)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1625, file: !158, line: 2016, baseType: !718, size: 64, offset: 256)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1625, file: !158, line: 2017, baseType: !1386, size: 64, offset: 320)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1625, file: !158, line: 2019, baseType: !718, size: 64, offset: 384)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1625, file: !158, line: 2020, baseType: !718, size: 64, offset: 448)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1625, file: !158, line: 2021, baseType: !718, size: 64, offset: 512)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1625, file: !158, line: 2022, baseType: !718, size: 64, offset: 576)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1625, file: !158, line: 2023, baseType: !718, size: 64, offset: 640)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !721, file: !158, line: 3400, baseType: !1639, size: 832)
!1639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !158, line: 2430, size: 832, elements: !1640)
!1640 = !{!1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1639, file: !158, line: 2431, baseType: !757, size: 192)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1639, file: !158, line: 2433, baseType: !718, size: 64, offset: 192)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1639, file: !158, line: 2434, baseType: !718, size: 64, offset: 256)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1639, file: !158, line: 2435, baseType: !718, size: 64, offset: 320)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1639, file: !158, line: 2436, baseType: !718, size: 64, offset: 384)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1639, file: !158, line: 2437, baseType: !1386, size: 64, offset: 448)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1639, file: !158, line: 2438, baseType: !718, size: 64, offset: 512)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1639, file: !158, line: 2440, baseType: !718, size: 64, offset: 576)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1639, file: !158, line: 2441, baseType: !718, size: 64, offset: 640)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1639, file: !158, line: 2443, baseType: !1651, size: 128, offset: 704)
!1651 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !158, line: 182, baseType: !1652)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !158, line: 182, size: 128, elements: !1653)
!1653 = !{!1654}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1652, file: !158, line: 182, baseType: !1391, size: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !721, file: !158, line: 3401, baseType: !1656, size: 320)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !158, line: 3327, size: 320, elements: !1657)
!1657 = !{!1658, !1659, !1666}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1656, file: !158, line: 3329, baseType: !757, size: 192)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1656, file: !158, line: 3330, baseType: !1660, size: 64, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !158, line: 3320, size: 192, elements: !1662)
!1662 = !{!1663, !1664, !1665}
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1661, file: !158, line: 3322, baseType: !1660, size: 64)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1661, file: !158, line: 3323, baseType: !1660, size: 64, offset: 64)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1661, file: !158, line: 3324, baseType: !718, size: 64, offset: 128)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1656, file: !158, line: 3331, baseType: !1660, size: 64, offset: 256)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !721, file: !158, line: 3402, baseType: !1668, size: 256)
!1668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !158, line: 1540, size: 256, elements: !1669)
!1669 = !{!1670, !1671}
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1668, file: !158, line: 1541, baseType: !757, size: 192)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1668, file: !158, line: 1542, baseType: !1672, size: 64, offset: 192)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !158, line: 1538, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !158, line: 1538, size: 192, elements: !1675)
!1675 = !{!1676}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1674, file: !158, line: 1538, baseType: !1677, size: 192)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !158, line: 1537, baseType: !1678)
!1678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !158, line: 1537, size: 192, elements: !1679)
!1679 = !{!1680, !1681, !1682}
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1678, file: !158, line: 1537, baseType: !7, size: 32)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1678, file: !158, line: 1537, baseType: !7, size: 32, offset: 32)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1678, file: !158, line: 1537, baseType: !1683, size: 128, offset: 64)
!1683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1684, size: 128, elements: !819)
!1684 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !158, line: 1535, baseType: !1685)
!1685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !158, line: 1532, size: 128, elements: !1686)
!1686 = !{!1687, !1688}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1685, file: !158, line: 1533, baseType: !718, size: 64)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1685, file: !158, line: 1534, baseType: !718, size: 64, offset: 64)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !721, file: !158, line: 3403, baseType: !1690, size: 512)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !158, line: 1938, size: 512, elements: !1691)
!1691 = !{!1692, !1693, !1694, !1695, !1701, !1702, !1703}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1690, file: !158, line: 1939, baseType: !757, size: 192)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1690, file: !158, line: 1940, baseType: !846, size: 32, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1690, file: !158, line: 1941, baseType: !157, size: 32, offset: 224)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1690, file: !158, line: 1946, baseType: !1696, size: 32, offset: 256)
!1696 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !158, line: 1942, size: 32, elements: !1697)
!1697 = !{!1698, !1699, !1700}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1696, file: !158, line: 1943, baseType: !176, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1696, file: !158, line: 1944, baseType: !183, size: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1696, file: !158, line: 1945, baseType: !190, size: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1690, file: !158, line: 1950, baseType: !1039, size: 64, offset: 320)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1690, file: !158, line: 1951, baseType: !1039, size: 64, offset: 384)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1690, file: !158, line: 1953, baseType: !1397, size: 64, offset: 448)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !721, file: !158, line: 3404, baseType: !1705, size: 1664)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !158, line: 3337, size: 1664, elements: !1706)
!1706 = !{!1707, !1708}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1705, file: !158, line: 3338, baseType: !757, size: 192)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1705, file: !158, line: 3341, baseType: !1709, size: 1472, offset: 192)
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1710, line: 410, size: 1472, elements: !1711)
!1710 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1711 = !{!1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1709, file: !1710, line: 412, baseType: !815, size: 32)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1709, file: !1710, line: 413, baseType: !815, size: 32, offset: 32)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1709, file: !1710, line: 414, baseType: !815, size: 32, offset: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1709, file: !1710, line: 415, baseType: !815, size: 32, offset: 96)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1709, file: !1710, line: 416, baseType: !815, size: 32, offset: 128)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1709, file: !1710, line: 417, baseType: !815, size: 32, offset: 160)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1709, file: !1710, line: 418, baseType: !838, size: 8, offset: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1709, file: !1710, line: 419, baseType: !838, size: 8, offset: 200)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1709, file: !1710, line: 420, baseType: !1721, size: 8, offset: 208)
!1721 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1709, file: !1710, line: 421, baseType: !1721, size: 8, offset: 216)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1709, file: !1710, line: 422, baseType: !1721, size: 8, offset: 224)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1709, file: !1710, line: 423, baseType: !1721, size: 8, offset: 232)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1709, file: !1710, line: 424, baseType: !1721, size: 8, offset: 240)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1709, file: !1710, line: 425, baseType: !1721, size: 8, offset: 248)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1709, file: !1710, line: 426, baseType: !1721, size: 8, offset: 256)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1709, file: !1710, line: 427, baseType: !1721, size: 8, offset: 264)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1709, file: !1710, line: 428, baseType: !1721, size: 8, offset: 272)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1709, file: !1710, line: 429, baseType: !1721, size: 8, offset: 280)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1709, file: !1710, line: 430, baseType: !1721, size: 8, offset: 288)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1709, file: !1710, line: 431, baseType: !1721, size: 8, offset: 296)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1709, file: !1710, line: 432, baseType: !1721, size: 8, offset: 304)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1709, file: !1710, line: 433, baseType: !1721, size: 8, offset: 312)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1709, file: !1710, line: 434, baseType: !1721, size: 8, offset: 320)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1709, file: !1710, line: 435, baseType: !1721, size: 8, offset: 328)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1709, file: !1710, line: 436, baseType: !1721, size: 8, offset: 336)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1709, file: !1710, line: 437, baseType: !1721, size: 8, offset: 344)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1709, file: !1710, line: 438, baseType: !1721, size: 8, offset: 352)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1709, file: !1710, line: 439, baseType: !1721, size: 8, offset: 360)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1709, file: !1710, line: 440, baseType: !1721, size: 8, offset: 368)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1709, file: !1710, line: 441, baseType: !1721, size: 8, offset: 376)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1709, file: !1710, line: 442, baseType: !1721, size: 8, offset: 384)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1709, file: !1710, line: 443, baseType: !1721, size: 8, offset: 392)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1709, file: !1710, line: 444, baseType: !1721, size: 8, offset: 400)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1709, file: !1710, line: 445, baseType: !1721, size: 8, offset: 408)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1709, file: !1710, line: 446, baseType: !1721, size: 8, offset: 416)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1709, file: !1710, line: 447, baseType: !1721, size: 8, offset: 424)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1709, file: !1710, line: 448, baseType: !1721, size: 8, offset: 432)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1709, file: !1710, line: 449, baseType: !1721, size: 8, offset: 440)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1709, file: !1710, line: 450, baseType: !1721, size: 8, offset: 448)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1709, file: !1710, line: 451, baseType: !1721, size: 8, offset: 456)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1709, file: !1710, line: 452, baseType: !1721, size: 8, offset: 464)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1709, file: !1710, line: 453, baseType: !1721, size: 8, offset: 472)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1709, file: !1710, line: 454, baseType: !1721, size: 8, offset: 480)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1709, file: !1710, line: 455, baseType: !1721, size: 8, offset: 488)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1709, file: !1710, line: 456, baseType: !1721, size: 8, offset: 496)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1709, file: !1710, line: 457, baseType: !1721, size: 8, offset: 504)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1709, file: !1710, line: 458, baseType: !1721, size: 8, offset: 512)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1709, file: !1710, line: 459, baseType: !1721, size: 8, offset: 520)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1709, file: !1710, line: 460, baseType: !1721, size: 8, offset: 528)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1709, file: !1710, line: 461, baseType: !1721, size: 8, offset: 536)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1709, file: !1710, line: 462, baseType: !1721, size: 8, offset: 544)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1709, file: !1710, line: 463, baseType: !1721, size: 8, offset: 552)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1709, file: !1710, line: 464, baseType: !1721, size: 8, offset: 560)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1709, file: !1710, line: 465, baseType: !1721, size: 8, offset: 568)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1709, file: !1710, line: 466, baseType: !1721, size: 8, offset: 576)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1709, file: !1710, line: 467, baseType: !1721, size: 8, offset: 584)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1709, file: !1710, line: 468, baseType: !1721, size: 8, offset: 592)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1709, file: !1710, line: 469, baseType: !1721, size: 8, offset: 600)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1709, file: !1710, line: 470, baseType: !1721, size: 8, offset: 608)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1709, file: !1710, line: 471, baseType: !1721, size: 8, offset: 616)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1709, file: !1710, line: 472, baseType: !1721, size: 8, offset: 624)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1709, file: !1710, line: 473, baseType: !1721, size: 8, offset: 632)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1709, file: !1710, line: 474, baseType: !1721, size: 8, offset: 640)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1709, file: !1710, line: 475, baseType: !1721, size: 8, offset: 648)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1709, file: !1710, line: 476, baseType: !1721, size: 8, offset: 656)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1709, file: !1710, line: 477, baseType: !1721, size: 8, offset: 664)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1709, file: !1710, line: 478, baseType: !1721, size: 8, offset: 672)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1709, file: !1710, line: 479, baseType: !1721, size: 8, offset: 680)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1709, file: !1710, line: 480, baseType: !1721, size: 8, offset: 688)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1709, file: !1710, line: 481, baseType: !1721, size: 8, offset: 696)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1709, file: !1710, line: 482, baseType: !1721, size: 8, offset: 704)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1709, file: !1710, line: 483, baseType: !1721, size: 8, offset: 712)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1709, file: !1710, line: 484, baseType: !1721, size: 8, offset: 720)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1709, file: !1710, line: 485, baseType: !1721, size: 8, offset: 728)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1709, file: !1710, line: 486, baseType: !1721, size: 8, offset: 736)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1709, file: !1710, line: 487, baseType: !1721, size: 8, offset: 744)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1709, file: !1710, line: 488, baseType: !1721, size: 8, offset: 752)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1709, file: !1710, line: 489, baseType: !1721, size: 8, offset: 760)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1709, file: !1710, line: 490, baseType: !1721, size: 8, offset: 768)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1709, file: !1710, line: 491, baseType: !1721, size: 8, offset: 776)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1709, file: !1710, line: 492, baseType: !1721, size: 8, offset: 784)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1709, file: !1710, line: 493, baseType: !1721, size: 8, offset: 792)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1709, file: !1710, line: 494, baseType: !1721, size: 8, offset: 800)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1709, file: !1710, line: 495, baseType: !1721, size: 8, offset: 808)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1709, file: !1710, line: 496, baseType: !1721, size: 8, offset: 816)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1709, file: !1710, line: 497, baseType: !1721, size: 8, offset: 824)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1709, file: !1710, line: 498, baseType: !1721, size: 8, offset: 832)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1709, file: !1710, line: 499, baseType: !1721, size: 8, offset: 840)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1709, file: !1710, line: 500, baseType: !1721, size: 8, offset: 848)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1709, file: !1710, line: 501, baseType: !1721, size: 8, offset: 856)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1709, file: !1710, line: 502, baseType: !1721, size: 8, offset: 864)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1709, file: !1710, line: 503, baseType: !1721, size: 8, offset: 872)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1709, file: !1710, line: 504, baseType: !1721, size: 8, offset: 880)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1709, file: !1710, line: 505, baseType: !1721, size: 8, offset: 888)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1709, file: !1710, line: 506, baseType: !1721, size: 8, offset: 896)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1709, file: !1710, line: 507, baseType: !1721, size: 8, offset: 904)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1709, file: !1710, line: 508, baseType: !1721, size: 8, offset: 912)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1709, file: !1710, line: 509, baseType: !1721, size: 8, offset: 920)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1709, file: !1710, line: 510, baseType: !1721, size: 8, offset: 928)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1709, file: !1710, line: 511, baseType: !1721, size: 8, offset: 936)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1709, file: !1710, line: 512, baseType: !1721, size: 8, offset: 944)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1709, file: !1710, line: 513, baseType: !1721, size: 8, offset: 952)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1709, file: !1710, line: 514, baseType: !1721, size: 8, offset: 960)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1709, file: !1710, line: 515, baseType: !1721, size: 8, offset: 968)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1709, file: !1710, line: 516, baseType: !1721, size: 8, offset: 976)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1709, file: !1710, line: 517, baseType: !1721, size: 8, offset: 984)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1709, file: !1710, line: 518, baseType: !1721, size: 8, offset: 992)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1709, file: !1710, line: 519, baseType: !1721, size: 8, offset: 1000)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1709, file: !1710, line: 520, baseType: !1721, size: 8, offset: 1008)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1709, file: !1710, line: 521, baseType: !1721, size: 8, offset: 1016)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1709, file: !1710, line: 522, baseType: !1721, size: 8, offset: 1024)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1709, file: !1710, line: 523, baseType: !1721, size: 8, offset: 1032)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1709, file: !1710, line: 524, baseType: !1721, size: 8, offset: 1040)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1709, file: !1710, line: 525, baseType: !1721, size: 8, offset: 1048)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1709, file: !1710, line: 526, baseType: !1721, size: 8, offset: 1056)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1709, file: !1710, line: 527, baseType: !1721, size: 8, offset: 1064)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1709, file: !1710, line: 528, baseType: !1721, size: 8, offset: 1072)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1709, file: !1710, line: 529, baseType: !1721, size: 8, offset: 1080)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1709, file: !1710, line: 530, baseType: !1721, size: 8, offset: 1088)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1709, file: !1710, line: 531, baseType: !1721, size: 8, offset: 1096)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1709, file: !1710, line: 532, baseType: !1721, size: 8, offset: 1104)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1709, file: !1710, line: 533, baseType: !1721, size: 8, offset: 1112)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1709, file: !1710, line: 534, baseType: !1721, size: 8, offset: 1120)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1709, file: !1710, line: 535, baseType: !1721, size: 8, offset: 1128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1709, file: !1710, line: 536, baseType: !1721, size: 8, offset: 1136)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1709, file: !1710, line: 537, baseType: !1721, size: 8, offset: 1144)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1709, file: !1710, line: 538, baseType: !1721, size: 8, offset: 1152)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1709, file: !1710, line: 539, baseType: !1721, size: 8, offset: 1160)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1709, file: !1710, line: 540, baseType: !1721, size: 8, offset: 1168)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1709, file: !1710, line: 541, baseType: !1721, size: 8, offset: 1176)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1709, file: !1710, line: 542, baseType: !1721, size: 8, offset: 1184)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1709, file: !1710, line: 543, baseType: !1721, size: 8, offset: 1192)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1709, file: !1710, line: 544, baseType: !1721, size: 8, offset: 1200)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1709, file: !1710, line: 545, baseType: !1721, size: 8, offset: 1208)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1709, file: !1710, line: 546, baseType: !1721, size: 8, offset: 1216)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1709, file: !1710, line: 547, baseType: !1721, size: 8, offset: 1224)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1709, file: !1710, line: 548, baseType: !1721, size: 8, offset: 1232)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1709, file: !1710, line: 549, baseType: !1721, size: 8, offset: 1240)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1709, file: !1710, line: 550, baseType: !1721, size: 8, offset: 1248)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1709, file: !1710, line: 551, baseType: !1721, size: 8, offset: 1256)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1709, file: !1710, line: 552, baseType: !1721, size: 8, offset: 1264)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1709, file: !1710, line: 553, baseType: !1721, size: 8, offset: 1272)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1709, file: !1710, line: 554, baseType: !1721, size: 8, offset: 1280)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1709, file: !1710, line: 555, baseType: !1721, size: 8, offset: 1288)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1709, file: !1710, line: 556, baseType: !1721, size: 8, offset: 1296)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1709, file: !1710, line: 557, baseType: !1721, size: 8, offset: 1304)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1709, file: !1710, line: 558, baseType: !1721, size: 8, offset: 1312)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1709, file: !1710, line: 559, baseType: !1721, size: 8, offset: 1320)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1709, file: !1710, line: 560, baseType: !1721, size: 8, offset: 1328)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1709, file: !1710, line: 561, baseType: !1721, size: 8, offset: 1336)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1709, file: !1710, line: 562, baseType: !1721, size: 8, offset: 1344)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1709, file: !1710, line: 563, baseType: !1721, size: 8, offset: 1352)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1709, file: !1710, line: 564, baseType: !1721, size: 8, offset: 1360)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1709, file: !1710, line: 565, baseType: !1721, size: 8, offset: 1368)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1709, file: !1710, line: 566, baseType: !1721, size: 8, offset: 1376)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1709, file: !1710, line: 567, baseType: !1721, size: 8, offset: 1384)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1709, file: !1710, line: 568, baseType: !1721, size: 8, offset: 1392)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1709, file: !1710, line: 569, baseType: !1721, size: 8, offset: 1400)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1709, file: !1710, line: 570, baseType: !1721, size: 8, offset: 1408)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1709, file: !1710, line: 571, baseType: !1721, size: 8, offset: 1416)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1709, file: !1710, line: 572, baseType: !1721, size: 8, offset: 1424)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1709, file: !1710, line: 573, baseType: !1721, size: 8, offset: 1432)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1709, file: !1710, line: 574, baseType: !1721, size: 8, offset: 1440)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !721, file: !158, line: 3405, baseType: !1877, size: 384)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !158, line: 3352, size: 384, elements: !1878)
!1878 = !{!1879, !1880}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1877, file: !158, line: 3353, baseType: !757, size: 192)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1877, file: !158, line: 3356, baseType: !1881, size: 192, offset: 192)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1710, line: 578, size: 192, elements: !1882)
!1882 = !{!1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1881, file: !1710, line: 580, baseType: !815, size: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1881, file: !1710, line: 581, baseType: !815, size: 32, offset: 32)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1881, file: !1710, line: 582, baseType: !815, size: 32, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1881, file: !1710, line: 583, baseType: !815, size: 32, offset: 96)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1881, file: !1710, line: 584, baseType: !838, size: 8, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1881, file: !1710, line: 585, baseType: !838, size: 8, offset: 136)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1881, file: !1710, line: 586, baseType: !838, size: 8, offset: 144)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1881, file: !1710, line: 587, baseType: !838, size: 8, offset: 152)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1881, file: !1710, line: 588, baseType: !838, size: 8, offset: 160)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1881, file: !1710, line: 589, baseType: !838, size: 8, offset: 168)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1881, file: !1710, line: 590, baseType: !838, size: 8, offset: 176)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "original_code", scope: !715, file: !666, line: 126, baseType: !190, size: 32, offset: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "original_type", scope: !715, file: !666, line: 131, baseType: !718, size: 64, offset: 128)
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "c_parser", file: !3, line: 191, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_parser", file: !3, line: 168, size: 448, elements: !1899)
!1899 = !{!1900, !1911, !1913, !1914, !1915, !1916, !1917, !1918}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "tokens", scope: !1898, file: !3, line: 170, baseType: !1901, size: 384)
!1901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1902, size: 384, elements: !966)
!1902 = !DIDerivedType(tag: DW_TAG_typedef, name: "c_token", file: !3, line: 163, baseType: !1903)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_token", file: !3, line: 147, size: 192, elements: !1904)
!1904 = !{!1905, !1906, !1907, !1908, !1909, !1910}
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1903, file: !3, line: 149, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "id_kind", scope: !1903, file: !3, line: 152, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "keyword", scope: !1903, file: !3, line: 155, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "pragma_kind", scope: !1903, file: !3, line: 158, baseType: !7, size: 8, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1903, file: !3, line: 160, baseType: !718, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1903, file: !3, line: 162, baseType: !846, size: 32, offset: 128)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "tokens_avail", scope: !1898, file: !3, line: 172, baseType: !1912, size: 16, offset: 384)
!1912 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1898, file: !3, line: 176, baseType: !7, size: 1, offset: 400, flags: DIFlagBitField, extraData: i64 400)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "in_pragma", scope: !1898, file: !3, line: 179, baseType: !7, size: 1, offset: 401, flags: DIFlagBitField, extraData: i64 400)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "in_if_block", scope: !1898, file: !3, line: 181, baseType: !7, size: 1, offset: 402, flags: DIFlagBitField, extraData: i64 400)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "lex_untranslated_string", scope: !1898, file: !3, line: 183, baseType: !7, size: 1, offset: 403, flags: DIFlagBitField, extraData: i64 400)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "objc_pq_context", scope: !1898, file: !3, line: 185, baseType: !7, size: 1, offset: 404, flags: DIFlagBitField, extraData: i64 400)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "objc_need_raw_identifier", scope: !1898, file: !3, line: 190, baseType: !7, size: 1, offset: 405, flags: DIFlagBitField, extraData: i64 400)
!1919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!1920 = !{!1921, !1922, !1923, !1933, !1934, !1935, !1937, !1938}
!1921 = !DILocalVariable(name: "parser", arg: 1, scope: !712, file: !3, line: 4778, type: !1896)
!1922 = !DILocalVariable(name: "after", arg: 2, scope: !712, file: !3, line: 4778, type: !1919)
!1923 = !DILocalVariable(name: "stack", scope: !712, file: !3, line: 4827, type: !1924)
!1924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1925, size: 3520, elements: !1931)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !712, file: !3, line: 4817, size: 320, elements: !1926)
!1926 = !{!1927, !1928, !1929, !1930}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1925, file: !3, line: 4819, baseType: !715, size: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "prec", scope: !1925, file: !3, line: 4822, baseType: !711, size: 32, offset: 192)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1925, file: !3, line: 4824, baseType: !190, size: 32, offset: 224)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1925, file: !3, line: 4826, baseType: !846, size: 32, offset: 256)
!1931 = !{!1932}
!1932 = !DISubrange(count: 11)
!1933 = !DILocalVariable(name: "sp", scope: !712, file: !3, line: 4828, type: !815)
!1934 = !DILocalVariable(name: "binary_loc", scope: !712, file: !3, line: 4830, type: !846)
!1935 = !DILocalVariable(name: "oprec", scope: !1936, file: !3, line: 4864, type: !711)
!1936 = distinct !DILexicalBlock(scope: !712, file: !3, line: 4863, column: 5)
!1937 = !DILocalVariable(name: "ocode", scope: !1936, file: !3, line: 4865, type: !190)
!1938 = !DILabel(scope: !712, name: "out", file: !3, line: 4981)
!1939 = !{!1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951}
!1940 = !DIEnumerator(name: "PREC_NONE", value: 0, isUnsigned: true)
!1941 = !DIEnumerator(name: "PREC_LOGOR", value: 1, isUnsigned: true)
!1942 = !DIEnumerator(name: "PREC_LOGAND", value: 2, isUnsigned: true)
!1943 = !DIEnumerator(name: "PREC_BITOR", value: 3, isUnsigned: true)
!1944 = !DIEnumerator(name: "PREC_BITXOR", value: 4, isUnsigned: true)
!1945 = !DIEnumerator(name: "PREC_BITAND", value: 5, isUnsigned: true)
!1946 = !DIEnumerator(name: "PREC_EQ", value: 6, isUnsigned: true)
!1947 = !DIEnumerator(name: "PREC_REL", value: 7, isUnsigned: true)
!1948 = !DIEnumerator(name: "PREC_SHIFT", value: 8, isUnsigned: true)
!1949 = !DIEnumerator(name: "PREC_ADD", value: 9, isUnsigned: true)
!1950 = !DIEnumerator(name: "PREC_MULT", value: 10, isUnsigned: true)
!1951 = !DIEnumerator(name: "NUM_PRECS", value: 11, isUnsigned: true)
!1952 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "c_dtr_syn", file: !3, line: 867, baseType: !7, size: 32, elements: !1953)
!1953 = !{!1954, !1955, !1956}
!1954 = !DIEnumerator(name: "C_DTR_NORMAL", value: 0, isUnsigned: true)
!1955 = !DIEnumerator(name: "C_DTR_ABSTRACT", value: 1, isUnsigned: true)
!1956 = !DIEnumerator(name: "C_DTR_PARM", value: 2, isUnsigned: true)
!1957 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pragma_context", file: !3, line: 950, baseType: !7, size: 32, elements: !1958)
!1958 = !{!1959, !1960, !1961}
!1959 = !DIEnumerator(name: "pragma_external", value: 0, isUnsigned: true)
!1960 = !DIEnumerator(name: "pragma_stmt", value: 1, isUnsigned: true)
!1961 = !DIEnumerator(name: "pragma_compound", value: 2, isUnsigned: true)
!1962 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pragma_omp_clause", file: !644, line: 56, baseType: !7, size: 32, elements: !1963)
!1963 = !{!1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979}
!1964 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_NONE", value: 0, isUnsigned: true)
!1965 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_COLLAPSE", value: 1, isUnsigned: true)
!1966 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_COPYIN", value: 2, isUnsigned: true)
!1967 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_COPYPRIVATE", value: 3, isUnsigned: true)
!1968 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_DEFAULT", value: 4, isUnsigned: true)
!1969 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_FIRSTPRIVATE", value: 5, isUnsigned: true)
!1970 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_IF", value: 6, isUnsigned: true)
!1971 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_LASTPRIVATE", value: 7, isUnsigned: true)
!1972 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_NOWAIT", value: 8, isUnsigned: true)
!1973 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!1974 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_ORDERED", value: 10, isUnsigned: true)
!1975 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_PRIVATE", value: 11, isUnsigned: true)
!1976 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_REDUCTION", value: 12, isUnsigned: true)
!1977 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_SCHEDULE", value: 13, isUnsigned: true)
!1978 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_SHARED", value: 14, isUnsigned: true)
!1979 = !DIEnumerator(name: "PRAGMA_OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!1980 = !{!1981, !838, !815, !1982, !1002, !922, !1623, !1983, !397, !1896, !2009, !1360, !477, !7, !190, !643, !987, !2010, !718, !2011, !848, !1386, !2059}
!1981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !987, size: 64)
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_common_identifier", file: !478, line: 261, size: 448, elements: !1985)
!1985 = !{!1986, !1987}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1984, file: !478, line: 262, baseType: !757, size: 192)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1984, file: !478, line: 263, baseType: !1988, size: 256, offset: 192)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpp_hashnode", file: !385, line: 644, size: 256, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1994, !1995, !1996}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !1988, file: !385, line: 645, baseType: !832, size: 128)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "is_directive", scope: !1988, file: !385, line: 646, baseType: !7, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "directive_index", scope: !1988, file: !385, line: 647, baseType: !7, size: 7, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "rid_code", scope: !1988, file: !385, line: 650, baseType: !838, size: 8, offset: 136)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1988, file: !385, line: 651, baseType: !7, size: 6, offset: 144, flags: DIFlagBitField, extraData: i64 144)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1988, file: !385, line: 652, baseType: !7, size: 10, offset: 150, flags: DIFlagBitField, extraData: i64 144)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1988, file: !385, line: 654, baseType: !1997, size: 64, offset: 192)
!1997 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "_cpp_hashnode_value", file: !385, line: 633, size: 64, elements: !1998)
!1998 = !{!1999, !2003, !2006, !2007}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !1997, file: !385, line: 635, baseType: !2000, size: 64)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpp_macro", file: !385, line: 37, baseType: !2002)
!2002 = !DICompositeType(tag: DW_TAG_structure_type, name: "cpp_macro", file: !385, line: 37, flags: DIFlagFwdDecl)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "answers", scope: !1997, file: !385, line: 637, baseType: !2004, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DICompositeType(tag: DW_TAG_structure_type, name: "answer", file: !385, line: 41, flags: DIFlagFwdDecl)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "builtin", scope: !1997, file: !385, line: 639, baseType: !384, size: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "arg_index", scope: !1997, file: !385, line: 641, baseType: !2008, size: 16)
!2008 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!2010 = !DIDerivedType(tag: DW_TAG_typedef, name: "ptrdiff_t", file: !1361, line: 35, baseType: !774)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_type_name", file: !666, line: 352, size: 128, elements: !2013)
!2013 = !{!2014, !2047}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "specs", scope: !2012, file: !666, line: 354, baseType: !2015, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_declspecs", file: !666, line: 208, size: 448, elements: !2017)
!2017 = !{!2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2016, file: !666, line: 213, baseType: !718, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2016, file: !666, line: 216, baseType: !718, size: 64, offset: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "decl_attr", scope: !2016, file: !666, line: 218, baseType: !718, size: 64, offset: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2016, file: !666, line: 222, baseType: !718, size: 64, offset: 192)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "typespec_word", scope: !2016, file: !666, line: 225, baseType: !665, size: 32, offset: 256)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !2016, file: !666, line: 227, baseType: !680, size: 32, offset: 288)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "expr_const_operands", scope: !2016, file: !666, line: 230, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "declspecs_seen_p", scope: !2016, file: !666, line: 232, baseType: !7, size: 1, offset: 321, flags: DIFlagBitField, extraData: i64 320)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "type_seen_p", scope: !2016, file: !666, line: 234, baseType: !7, size: 1, offset: 322, flags: DIFlagBitField, extraData: i64 320)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "non_sc_seen_p", scope: !2016, file: !666, line: 241, baseType: !7, size: 1, offset: 323, flags: DIFlagBitField, extraData: i64 320)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "typedef_p", scope: !2016, file: !666, line: 243, baseType: !7, size: 1, offset: 324, flags: DIFlagBitField, extraData: i64 320)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "tag_defined_p", scope: !2016, file: !666, line: 247, baseType: !7, size: 1, offset: 325, flags: DIFlagBitField, extraData: i64 320)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_signed_p", scope: !2016, file: !666, line: 250, baseType: !7, size: 1, offset: 326, flags: DIFlagBitField, extraData: i64 320)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_p", scope: !2016, file: !666, line: 252, baseType: !7, size: 1, offset: 327, flags: DIFlagBitField, extraData: i64 320)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "default_int_p", scope: !2016, file: !666, line: 255, baseType: !7, size: 32, offset: 352)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "long_p", scope: !2016, file: !666, line: 257, baseType: !7, size: 1, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "long_long_p", scope: !2016, file: !666, line: 259, baseType: !7, size: 1, offset: 385, flags: DIFlagBitField, extraData: i64 384)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "short_p", scope: !2016, file: !666, line: 261, baseType: !7, size: 1, offset: 386, flags: DIFlagBitField, extraData: i64 384)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "signed_p", scope: !2016, file: !666, line: 263, baseType: !7, size: 1, offset: 387, flags: DIFlagBitField, extraData: i64 384)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_p", scope: !2016, file: !666, line: 265, baseType: !7, size: 1, offset: 388, flags: DIFlagBitField, extraData: i64 384)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "complex_p", scope: !2016, file: !666, line: 267, baseType: !7, size: 1, offset: 389, flags: DIFlagBitField, extraData: i64 384)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "inline_p", scope: !2016, file: !666, line: 269, baseType: !7, size: 1, offset: 390, flags: DIFlagBitField, extraData: i64 384)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "thread_p", scope: !2016, file: !666, line: 271, baseType: !7, size: 1, offset: 391, flags: DIFlagBitField, extraData: i64 384)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "const_p", scope: !2016, file: !666, line: 273, baseType: !7, size: 1, offset: 392, flags: DIFlagBitField, extraData: i64 384)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_p", scope: !2016, file: !666, line: 275, baseType: !7, size: 1, offset: 393, flags: DIFlagBitField, extraData: i64 384)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_p", scope: !2016, file: !666, line: 277, baseType: !7, size: 1, offset: 394, flags: DIFlagBitField, extraData: i64 384)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_p", scope: !2016, file: !666, line: 279, baseType: !7, size: 1, offset: 395, flags: DIFlagBitField, extraData: i64 384)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !2016, file: !666, line: 281, baseType: !2046, size: 8, offset: 400)
!2046 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !719, line: 73, baseType: !838)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "declarator", scope: !2012, file: !666, line: 356, baseType: !2048, size: 64, offset: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_declarator", file: !666, line: 319, size: 448, elements: !2050)
!2050 = !{!2051, !2052, !2053, !2054}
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !2049, file: !666, line: 321, baseType: !688, size: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "declarator", scope: !2049, file: !666, line: 323, baseType: !2048, size: 64, offset: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "id_loc", scope: !2049, file: !666, line: 324, baseType: !846, size: 32, offset: 128)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2049, file: !666, line: 348, baseType: !2055, size: 256, offset: 192)
!2055 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2049, file: !666, line: 325, size: 256, elements: !2056)
!2056 = !{!2057, !2058, !2068, !2076, !2077}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2055, file: !666, line: 328, baseType: !718, size: 64)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "arg_info", scope: !2055, file: !666, line: 330, baseType: !2059, size: 64)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_arg_info", file: !666, line: 299, size: 384, elements: !2061)
!2061 = !{!2062, !2063, !2064, !2065, !2066, !2067}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2060, file: !666, line: 301, baseType: !718, size: 64)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "tags", scope: !2060, file: !666, line: 303, baseType: !718, size: 64, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !2060, file: !666, line: 305, baseType: !718, size: 64, offset: 128)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "others", scope: !2060, file: !666, line: 308, baseType: !718, size: 64, offset: 192)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "pending_sizes", scope: !2060, file: !666, line: 313, baseType: !718, size: 64, offset: 256)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "had_vla_unspec", scope: !2060, file: !666, line: 315, baseType: !7, size: 1, offset: 320, flags: DIFlagBitField, extraData: i64 320)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !2055, file: !666, line: 343, baseType: !2069, size: 256)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2055, file: !666, line: 332, size: 256, elements: !2070)
!2070 = !{!2071, !2072, !2073, !2074, !2075}
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "dimen", scope: !2069, file: !666, line: 334, baseType: !718, size: 64)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "quals", scope: !2069, file: !666, line: 336, baseType: !815, size: 32, offset: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2069, file: !666, line: 338, baseType: !718, size: 64, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "static_p", scope: !2069, file: !666, line: 340, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "vla_unspec_p", scope: !2069, file: !666, line: 342, baseType: !7, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_quals", scope: !2055, file: !666, line: 345, baseType: !815, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !2055, file: !666, line: 347, baseType: !718, size: 64)
!2078 = !{!2079, !0}
!2079 = !DIGlobalVariableExpression(var: !2080, expr: !DIExpression())
!2080 = distinct !DIGlobalVariable(name: "gt_ggc_r_gt_c_parser_h", scope: !2, file: !2081, line: 73, type: !2082, isLocal: false, isDefinition: true)
!2081 = !DIFile(filename: "./gt-c-parser.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2083, size: 640, elements: !966)
!2083 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2084)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ggc_root_tab", file: !2085, line: 69, size: 320, elements: !2086)
!2085 = !DIFile(filename: "./ggc.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2086 = !{!2087, !2088, !2089, !2090, !2092}
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2084, file: !2085, line: 70, baseType: !1002, size: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "nelt", scope: !2084, file: !2085, line: 71, baseType: !1360, size: 64, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "stride", scope: !2084, file: !2085, line: 72, baseType: !1360, size: 64, offset: 128)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2084, file: !2085, line: 73, baseType: !2091, size: 64, offset: 192)
!2091 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_walker", file: !2085, line: 65, baseType: !1354)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "pchw", scope: !2084, file: !2085, line: 74, baseType: !2091, size: 64, offset: 256)
!2093 = !{i32 2, !"Dwarf Version", i32 4}
!2094 = !{i32 2, !"Debug Info Version", i32 3}
!2095 = !{i32 1, !"wchar_size", i32 4}
!2096 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2097 = distinct !DISubprogram(name: "vprintf", scope: !2098, file: !2098, line: 39, type: !2099, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2109)
!2098 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2099 = !DISubroutineType(types: !2100)
!2100 = !{!815, !2101, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !922)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2104)
!2104 = !{!2105, !2106, !2107, !2108}
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2103, file: !3, baseType: !7, size: 32)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2103, file: !3, baseType: !7, size: 32, offset: 32)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2103, file: !3, baseType: !1002, size: 64, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2103, file: !3, baseType: !1002, size: 64, offset: 128)
!2109 = !{!2110, !2111}
!2110 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2097, file: !2098, line: 39, type: !2101)
!2111 = !DILocalVariable(name: "__arg", arg: 2, scope: !2097, file: !2098, line: 39, type: !2102)
!2112 = !DILocation(line: 0, scope: !2097)
!2113 = !DILocation(line: 41, column: 20, scope: !2097)
!2114 = !DILocation(line: 41, column: 10, scope: !2097)
!2115 = !DILocation(line: 41, column: 3, scope: !2097)
!2116 = distinct !DISubprogram(name: "getchar", scope: !2098, file: !2098, line: 47, type: !2117, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2119)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!815}
!2119 = !{}
!2120 = !DILocation(line: 49, column: 16, scope: !2116)
!2121 = !DILocation(line: 49, column: 10, scope: !2116)
!2122 = !DILocation(line: 49, column: 3, scope: !2116)
!2123 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2098, file: !2098, line: 56, type: !2124, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2176)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!815, !2126}
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2128, line: 7, baseType: !2129)
!2128 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2130, line: 49, size: 1728, elements: !2131)
!2130 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2131 = !{!2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2147, !2149, !2150, !2151, !2154, !2155, !2156, !2157, !2160, !2162, !2165, !2168, !2169, !2170, !2171, !2172}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2129, file: !2130, line: 51, baseType: !815, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2129, file: !2130, line: 54, baseType: !987, size: 64, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2129, file: !2130, line: 55, baseType: !987, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2129, file: !2130, line: 56, baseType: !987, size: 64, offset: 192)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2129, file: !2130, line: 57, baseType: !987, size: 64, offset: 256)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2129, file: !2130, line: 58, baseType: !987, size: 64, offset: 320)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2129, file: !2130, line: 59, baseType: !987, size: 64, offset: 384)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2129, file: !2130, line: 60, baseType: !987, size: 64, offset: 448)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2129, file: !2130, line: 61, baseType: !987, size: 64, offset: 512)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2129, file: !2130, line: 64, baseType: !987, size: 64, offset: 576)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2129, file: !2130, line: 65, baseType: !987, size: 64, offset: 640)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2129, file: !2130, line: 66, baseType: !987, size: 64, offset: 704)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2129, file: !2130, line: 68, baseType: !2145, size: 64, offset: 768)
!2145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2146, size: 64)
!2146 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2130, line: 36, flags: DIFlagFwdDecl)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2129, file: !2130, line: 70, baseType: !2148, size: 64, offset: 832)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2129, file: !2130, line: 72, baseType: !815, size: 32, offset: 896)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2129, file: !2130, line: 73, baseType: !815, size: 32, offset: 928)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2129, file: !2130, line: 74, baseType: !2152, size: 64, offset: 960)
!2152 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2153, line: 152, baseType: !774)
!2153 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2129, file: !2130, line: 77, baseType: !2008, size: 16, offset: 1024)
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2129, file: !2130, line: 78, baseType: !1721, size: 8, offset: 1040)
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2129, file: !2130, line: 79, baseType: !817, size: 8, offset: 1048)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2129, file: !2130, line: 81, baseType: !2158, size: 64, offset: 1088)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2130, line: 43, baseType: null)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2129, file: !2130, line: 89, baseType: !2161, size: 64, offset: 1152)
!2161 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2153, line: 153, baseType: !774)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2129, file: !2130, line: 91, baseType: !2163, size: 64, offset: 1216)
!2163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2164, size: 64)
!2164 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2130, line: 37, flags: DIFlagFwdDecl)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2129, file: !2130, line: 92, baseType: !2166, size: 64, offset: 1280)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2130, line: 38, flags: DIFlagFwdDecl)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2129, file: !2130, line: 93, baseType: !2148, size: 64, offset: 1344)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2129, file: !2130, line: 94, baseType: !1002, size: 64, offset: 1408)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2129, file: !2130, line: 95, baseType: !1360, size: 64, offset: 1472)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2129, file: !2130, line: 96, baseType: !815, size: 32, offset: 1536)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2129, file: !2130, line: 98, baseType: !2173, size: 160, offset: 1568)
!2173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !818, size: 160, elements: !2174)
!2174 = !{!2175}
!2175 = !DISubrange(count: 20)
!2176 = !{!2177}
!2177 = !DILocalVariable(name: "__fp", arg: 1, scope: !2123, file: !2098, line: 56, type: !2126)
!2178 = !DILocation(line: 0, scope: !2123)
!2179 = !DILocation(line: 58, column: 10, scope: !2123)
!2180 = !DILocation(line: 58, column: 3, scope: !2123)
!2181 = distinct !DISubprogram(name: "getc_unlocked", scope: !2098, file: !2098, line: 66, type: !2124, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2182)
!2182 = !{!2183}
!2183 = !DILocalVariable(name: "__fp", arg: 1, scope: !2181, file: !2098, line: 66, type: !2126)
!2184 = !DILocation(line: 0, scope: !2181)
!2185 = !DILocation(line: 68, column: 10, scope: !2181)
!2186 = !DILocation(line: 68, column: 3, scope: !2181)
!2187 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2098, file: !2098, line: 73, type: !2117, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2119)
!2188 = !DILocation(line: 75, column: 10, scope: !2187)
!2189 = !DILocation(line: 75, column: 3, scope: !2187)
!2190 = distinct !DISubprogram(name: "putchar", scope: !2098, file: !2098, line: 82, type: !2191, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2193)
!2191 = !DISubroutineType(types: !2192)
!2192 = !{!815, !815}
!2193 = !{!2194}
!2194 = !DILocalVariable(name: "__c", arg: 1, scope: !2190, file: !2098, line: 82, type: !815)
!2195 = !DILocation(line: 0, scope: !2190)
!2196 = !DILocation(line: 84, column: 21, scope: !2190)
!2197 = !DILocation(line: 84, column: 10, scope: !2190)
!2198 = !DILocation(line: 84, column: 3, scope: !2190)
!2199 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2098, file: !2098, line: 91, type: !2200, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2202)
!2200 = !DISubroutineType(types: !2201)
!2201 = !{!815, !815, !2126}
!2202 = !{!2203, !2204}
!2203 = !DILocalVariable(name: "__c", arg: 1, scope: !2199, file: !2098, line: 91, type: !815)
!2204 = !DILocalVariable(name: "__stream", arg: 2, scope: !2199, file: !2098, line: 91, type: !2126)
!2205 = !DILocation(line: 0, scope: !2199)
!2206 = !DILocation(line: 93, column: 10, scope: !2199)
!2207 = !DILocation(line: 93, column: 3, scope: !2199)
!2208 = distinct !DISubprogram(name: "putc_unlocked", scope: !2098, file: !2098, line: 101, type: !2200, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2209)
!2209 = !{!2210, !2211}
!2210 = !DILocalVariable(name: "__c", arg: 1, scope: !2208, file: !2098, line: 101, type: !815)
!2211 = !DILocalVariable(name: "__stream", arg: 2, scope: !2208, file: !2098, line: 101, type: !2126)
!2212 = !DILocation(line: 0, scope: !2208)
!2213 = !DILocation(line: 103, column: 10, scope: !2208)
!2214 = !DILocation(line: 103, column: 3, scope: !2208)
!2215 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2098, file: !2098, line: 108, type: !2191, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2216)
!2216 = !{!2217}
!2217 = !DILocalVariable(name: "__c", arg: 1, scope: !2215, file: !2098, line: 108, type: !815)
!2218 = !DILocation(line: 0, scope: !2215)
!2219 = !DILocation(line: 110, column: 10, scope: !2215)
!2220 = !DILocation(line: 110, column: 3, scope: !2215)
!2221 = distinct !DISubprogram(name: "getline", scope: !2098, file: !2098, line: 118, type: !2222, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2226)
!2222 = !DISubroutineType(types: !2223)
!2223 = !{!2224, !1982, !2225, !2126}
!2224 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2153, line: 193, baseType: !774)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!2226 = !{!2227, !2228, !2229}
!2227 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2221, file: !2098, line: 118, type: !1982)
!2228 = !DILocalVariable(name: "__n", arg: 2, scope: !2221, file: !2098, line: 118, type: !2225)
!2229 = !DILocalVariable(name: "__stream", arg: 3, scope: !2221, file: !2098, line: 118, type: !2126)
!2230 = !DILocation(line: 0, scope: !2221)
!2231 = !DILocation(line: 120, column: 10, scope: !2221)
!2232 = !DILocation(line: 120, column: 3, scope: !2221)
!2233 = distinct !DISubprogram(name: "feof_unlocked", scope: !2098, file: !2098, line: 128, type: !2124, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2234)
!2234 = !{!2235}
!2235 = !DILocalVariable(name: "__stream", arg: 1, scope: !2233, file: !2098, line: 128, type: !2126)
!2236 = !DILocation(line: 0, scope: !2233)
!2237 = !DILocation(line: 130, column: 10, scope: !2233)
!2238 = !DILocation(line: 130, column: 3, scope: !2233)
!2239 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2098, file: !2098, line: 135, type: !2124, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2240)
!2240 = !{!2241}
!2241 = !DILocalVariable(name: "__stream", arg: 1, scope: !2239, file: !2098, line: 135, type: !2126)
!2242 = !DILocation(line: 0, scope: !2239)
!2243 = !DILocation(line: 137, column: 10, scope: !2239)
!2244 = !DILocation(line: 137, column: 3, scope: !2239)
!2245 = distinct !DISubprogram(name: "tolower", scope: !2246, file: !2246, line: 207, type: !2191, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2247)
!2246 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2247 = !{!2248}
!2248 = !DILocalVariable(name: "__c", arg: 1, scope: !2245, file: !2246, line: 207, type: !815)
!2249 = !DILocation(line: 0, scope: !2245)
!2250 = !DILocation(line: 209, column: 22, scope: !2245)
!2251 = !DILocation(line: 209, column: 39, scope: !2245)
!2252 = !DILocation(line: 209, column: 38, scope: !2245)
!2253 = !DILocation(line: 209, column: 37, scope: !2245)
!2254 = !DILocation(line: 209, column: 10, scope: !2245)
!2255 = !DILocation(line: 209, column: 3, scope: !2245)
!2256 = distinct !DISubprogram(name: "toupper", scope: !2246, file: !2246, line: 213, type: !2191, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2257)
!2257 = !{!2258}
!2258 = !DILocalVariable(name: "__c", arg: 1, scope: !2256, file: !2246, line: 213, type: !815)
!2259 = !DILocation(line: 0, scope: !2256)
!2260 = !DILocation(line: 215, column: 22, scope: !2256)
!2261 = !DILocation(line: 215, column: 39, scope: !2256)
!2262 = !DILocation(line: 215, column: 38, scope: !2256)
!2263 = !DILocation(line: 215, column: 37, scope: !2256)
!2264 = !DILocation(line: 215, column: 10, scope: !2256)
!2265 = !DILocation(line: 215, column: 3, scope: !2256)
!2266 = distinct !DISubprogram(name: "atoi", scope: !2267, file: !2267, line: 361, type: !2268, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2270)
!2267 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2268 = !DISubroutineType(types: !2269)
!2269 = !{!815, !922}
!2270 = !{!2271}
!2271 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2266, file: !2267, line: 361, type: !922)
!2272 = !DILocation(line: 0, scope: !2266)
!2273 = !DILocation(line: 363, column: 16, scope: !2266)
!2274 = !DILocation(line: 363, column: 10, scope: !2266)
!2275 = !DILocation(line: 363, column: 3, scope: !2266)
!2276 = distinct !DISubprogram(name: "atol", scope: !2267, file: !2267, line: 366, type: !2277, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2279)
!2277 = !DISubroutineType(types: !2278)
!2278 = !{!774, !922}
!2279 = !{!2280}
!2280 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2276, file: !2267, line: 366, type: !922)
!2281 = !DILocation(line: 0, scope: !2276)
!2282 = !DILocation(line: 368, column: 10, scope: !2276)
!2283 = !DILocation(line: 368, column: 3, scope: !2276)
!2284 = distinct !DISubprogram(name: "atoll", scope: !2267, file: !2267, line: 373, type: !2285, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2288)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!2287, !922}
!2287 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2288 = !{!2289}
!2289 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2284, file: !2267, line: 373, type: !922)
!2290 = !DILocation(line: 0, scope: !2284)
!2291 = !DILocation(line: 375, column: 10, scope: !2284)
!2292 = !DILocation(line: 375, column: 3, scope: !2284)
!2293 = distinct !DISubprogram(name: "bsearch", scope: !2294, file: !2294, line: 20, type: !2295, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2298)
!2294 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2295 = !DISubroutineType(types: !2296)
!2296 = !{!1002, !1145, !1145, !1360, !1360, !2297}
!2297 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2267, line: 808, baseType: !1349)
!2298 = !{!2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308}
!2299 = !DILocalVariable(name: "__key", arg: 1, scope: !2293, file: !2294, line: 20, type: !1145)
!2300 = !DILocalVariable(name: "__base", arg: 2, scope: !2293, file: !2294, line: 20, type: !1145)
!2301 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2293, file: !2294, line: 20, type: !1360)
!2302 = !DILocalVariable(name: "__size", arg: 4, scope: !2293, file: !2294, line: 20, type: !1360)
!2303 = !DILocalVariable(name: "__compar", arg: 5, scope: !2293, file: !2294, line: 21, type: !2297)
!2304 = !DILocalVariable(name: "__l", scope: !2293, file: !2294, line: 23, type: !1360)
!2305 = !DILocalVariable(name: "__u", scope: !2293, file: !2294, line: 23, type: !1360)
!2306 = !DILocalVariable(name: "__idx", scope: !2293, file: !2294, line: 23, type: !1360)
!2307 = !DILocalVariable(name: "__p", scope: !2293, file: !2294, line: 24, type: !1145)
!2308 = !DILocalVariable(name: "__comparison", scope: !2293, file: !2294, line: 25, type: !815)
!2309 = !DILocation(line: 0, scope: !2293)
!2310 = !DILocation(line: 29, column: 3, scope: !2293)
!2311 = !DILocation(line: 27, column: 7, scope: !2293)
!2312 = !DILocation(line: 29, column: 14, scope: !2293)
!2313 = !DILocation(line: 31, column: 20, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2293, file: !2294, line: 30, column: 5)
!2315 = !DILocation(line: 31, column: 27, scope: !2314)
!2316 = !DILocation(line: 32, column: 56, scope: !2314)
!2317 = !DILocation(line: 32, column: 47, scope: !2314)
!2318 = !DILocation(line: 33, column: 22, scope: !2314)
!2319 = !DILocation(line: 34, column: 24, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2314, file: !2294, line: 34, column: 11)
!2321 = !DILocation(line: 34, column: 11, scope: !2314)
!2322 = !DILocation(line: 36, column: 29, scope: !2323)
!2323 = distinct !DILexicalBlock(scope: !2320, file: !2294, line: 36, column: 16)
!2324 = !DILocation(line: 36, column: 16, scope: !2320)
!2325 = !DILocation(line: 37, column: 14, scope: !2323)
!2326 = distinct !{!2326, !2310, !2327}
!2327 = !DILocation(line: 40, column: 5, scope: !2293)
!2328 = !DILocation(line: 43, column: 1, scope: !2293)
!2329 = distinct !DISubprogram(name: "atof", scope: !2330, file: !2330, line: 25, type: !2331, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2334)
!2330 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2331 = !DISubroutineType(types: !2332)
!2332 = !{!2333, !922}
!2333 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2334 = !{!2335}
!2335 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2329, file: !2330, line: 25, type: !922)
!2336 = !DILocation(line: 0, scope: !2329)
!2337 = !DILocation(line: 27, column: 10, scope: !2329)
!2338 = !DILocation(line: 27, column: 3, scope: !2329)
!2339 = distinct !DISubprogram(name: "strtoimax", scope: !2340, file: !2340, line: 324, type: !2341, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2347)
!2340 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2341 = !DISubroutineType(types: !2342)
!2342 = !{!2343, !2101, !2346, !815}
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2344, line: 101, baseType: !2345)
!2344 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2345 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2153, line: 72, baseType: !774)
!2346 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1982)
!2347 = !{!2348, !2349, !2350}
!2348 = !DILocalVariable(name: "nptr", arg: 1, scope: !2339, file: !2340, line: 324, type: !2101)
!2349 = !DILocalVariable(name: "endptr", arg: 2, scope: !2339, file: !2340, line: 324, type: !2346)
!2350 = !DILocalVariable(name: "base", arg: 3, scope: !2339, file: !2340, line: 324, type: !815)
!2351 = !DILocation(line: 0, scope: !2339)
!2352 = !DILocation(line: 327, column: 10, scope: !2339)
!2353 = !DILocation(line: 327, column: 3, scope: !2339)
!2354 = distinct !DISubprogram(name: "strtoumax", scope: !2340, file: !2340, line: 336, type: !2355, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2359)
!2355 = !DISubroutineType(types: !2356)
!2356 = !{!2357, !2101, !2346, !815}
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2344, line: 102, baseType: !2358)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2153, line: 73, baseType: !772)
!2359 = !{!2360, !2361, !2362}
!2360 = !DILocalVariable(name: "nptr", arg: 1, scope: !2354, file: !2340, line: 336, type: !2101)
!2361 = !DILocalVariable(name: "endptr", arg: 2, scope: !2354, file: !2340, line: 336, type: !2346)
!2362 = !DILocalVariable(name: "base", arg: 3, scope: !2354, file: !2340, line: 336, type: !815)
!2363 = !DILocation(line: 0, scope: !2354)
!2364 = !DILocation(line: 339, column: 10, scope: !2354)
!2365 = !DILocation(line: 339, column: 3, scope: !2354)
!2366 = distinct !DISubprogram(name: "wcstoimax", scope: !2340, file: !2340, line: 348, type: !2367, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2376)
!2367 = !DISubroutineType(types: !2368)
!2368 = !{!2343, !2369, !2373, !815}
!2369 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2370)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2372)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2340, line: 34, baseType: !815)
!2373 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2374)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2376 = !{!2377, !2378, !2379}
!2377 = !DILocalVariable(name: "nptr", arg: 1, scope: !2366, file: !2340, line: 348, type: !2369)
!2378 = !DILocalVariable(name: "endptr", arg: 2, scope: !2366, file: !2340, line: 348, type: !2373)
!2379 = !DILocalVariable(name: "base", arg: 3, scope: !2366, file: !2340, line: 348, type: !815)
!2380 = !DILocation(line: 0, scope: !2366)
!2381 = !DILocation(line: 351, column: 10, scope: !2366)
!2382 = !DILocation(line: 351, column: 3, scope: !2366)
!2383 = distinct !DISubprogram(name: "wcstoumax", scope: !2340, file: !2340, line: 362, type: !2384, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2386)
!2384 = !DISubroutineType(types: !2385)
!2385 = !{!2357, !2369, !2373, !815}
!2386 = !{!2387, !2388, !2389}
!2387 = !DILocalVariable(name: "nptr", arg: 1, scope: !2383, file: !2340, line: 362, type: !2369)
!2388 = !DILocalVariable(name: "endptr", arg: 2, scope: !2383, file: !2340, line: 362, type: !2373)
!2389 = !DILocalVariable(name: "base", arg: 3, scope: !2383, file: !2340, line: 362, type: !815)
!2390 = !DILocation(line: 0, scope: !2383)
!2391 = !DILocation(line: 365, column: 10, scope: !2383)
!2392 = !DILocation(line: 365, column: 3, scope: !2383)
!2393 = distinct !DISubprogram(name: "stat", scope: !2394, file: !2394, line: 453, type: !2395, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2432)
!2394 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2395 = !DISubroutineType(types: !2396)
!2396 = !{!815, !922, !2397}
!2397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2398, size: 64)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2399, line: 46, size: 1152, elements: !2400)
!2399 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2400 = !{!2401, !2403, !2405, !2407, !2409, !2411, !2413, !2414, !2415, !2416, !2418, !2420, !2428, !2429, !2430}
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2398, file: !2399, line: 48, baseType: !2402, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2153, line: 145, baseType: !772)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2398, file: !2399, line: 53, baseType: !2404, size: 64, offset: 64)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2153, line: 148, baseType: !772)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2398, file: !2399, line: 61, baseType: !2406, size: 64, offset: 128)
!2406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2153, line: 151, baseType: !772)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2398, file: !2399, line: 62, baseType: !2408, size: 32, offset: 192)
!2408 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2153, line: 150, baseType: !7)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2398, file: !2399, line: 64, baseType: !2410, size: 32, offset: 224)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2153, line: 146, baseType: !7)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2398, file: !2399, line: 65, baseType: !2412, size: 32, offset: 256)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2153, line: 147, baseType: !7)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2398, file: !2399, line: 67, baseType: !815, size: 32, offset: 288)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2398, file: !2399, line: 69, baseType: !2402, size: 64, offset: 320)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2398, file: !2399, line: 74, baseType: !2152, size: 64, offset: 384)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2398, file: !2399, line: 78, baseType: !2417, size: 64, offset: 448)
!2417 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2153, line: 174, baseType: !774)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2398, file: !2399, line: 80, baseType: !2419, size: 64, offset: 512)
!2419 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2153, line: 179, baseType: !774)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2398, file: !2399, line: 91, baseType: !2421, size: 128, offset: 576)
!2421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2422, line: 10, size: 128, elements: !2423)
!2422 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2423 = !{!2424, !2426}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2421, file: !2422, line: 12, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2153, line: 160, baseType: !774)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2421, file: !2422, line: 16, baseType: !2427, size: 64, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2153, line: 196, baseType: !774)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2398, file: !2399, line: 92, baseType: !2421, size: 128, offset: 704)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2398, file: !2399, line: 93, baseType: !2421, size: 128, offset: 832)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2398, file: !2399, line: 106, baseType: !2431, size: 192, offset: 960)
!2431 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2427, size: 192, elements: !792)
!2432 = !{!2433, !2434}
!2433 = !DILocalVariable(name: "__path", arg: 1, scope: !2393, file: !2394, line: 453, type: !922)
!2434 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2393, file: !2394, line: 453, type: !2397)
!2435 = !DILocation(line: 0, scope: !2393)
!2436 = !DILocation(line: 455, column: 10, scope: !2393)
!2437 = !DILocation(line: 455, column: 3, scope: !2393)
!2438 = distinct !DISubprogram(name: "lstat", scope: !2394, file: !2394, line: 460, type: !2395, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2439)
!2439 = !{!2440, !2441}
!2440 = !DILocalVariable(name: "__path", arg: 1, scope: !2438, file: !2394, line: 460, type: !922)
!2441 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2438, file: !2394, line: 460, type: !2397)
!2442 = !DILocation(line: 0, scope: !2438)
!2443 = !DILocation(line: 462, column: 10, scope: !2438)
!2444 = !DILocation(line: 462, column: 3, scope: !2438)
!2445 = distinct !DISubprogram(name: "fstat", scope: !2394, file: !2394, line: 467, type: !2446, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2448)
!2446 = !DISubroutineType(types: !2447)
!2447 = !{!815, !815, !2397}
!2448 = !{!2449, !2450}
!2449 = !DILocalVariable(name: "__fd", arg: 1, scope: !2445, file: !2394, line: 467, type: !815)
!2450 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2445, file: !2394, line: 467, type: !2397)
!2451 = !DILocation(line: 0, scope: !2445)
!2452 = !DILocation(line: 469, column: 10, scope: !2445)
!2453 = !DILocation(line: 469, column: 3, scope: !2445)
!2454 = distinct !DISubprogram(name: "fstatat", scope: !2394, file: !2394, line: 474, type: !2455, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2457)
!2455 = !DISubroutineType(types: !2456)
!2456 = !{!815, !815, !922, !2397, !815}
!2457 = !{!2458, !2459, !2460, !2461}
!2458 = !DILocalVariable(name: "__fd", arg: 1, scope: !2454, file: !2394, line: 474, type: !815)
!2459 = !DILocalVariable(name: "__filename", arg: 2, scope: !2454, file: !2394, line: 474, type: !922)
!2460 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2454, file: !2394, line: 474, type: !2397)
!2461 = !DILocalVariable(name: "__flag", arg: 4, scope: !2454, file: !2394, line: 474, type: !815)
!2462 = !DILocation(line: 0, scope: !2454)
!2463 = !DILocation(line: 477, column: 10, scope: !2454)
!2464 = !DILocation(line: 477, column: 3, scope: !2454)
!2465 = distinct !DISubprogram(name: "mknod", scope: !2394, file: !2394, line: 483, type: !2466, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2468)
!2466 = !DISubroutineType(types: !2467)
!2467 = !{!815, !922, !2408, !2402}
!2468 = !{!2469, !2470, !2471}
!2469 = !DILocalVariable(name: "__path", arg: 1, scope: !2465, file: !2394, line: 483, type: !922)
!2470 = !DILocalVariable(name: "__mode", arg: 2, scope: !2465, file: !2394, line: 483, type: !2408)
!2471 = !DILocalVariable(name: "__dev", arg: 3, scope: !2465, file: !2394, line: 483, type: !2402)
!2472 = !DILocation(line: 0, scope: !2465)
!2473 = !DILocation(line: 485, column: 10, scope: !2465)
!2474 = !DILocation(line: 485, column: 3, scope: !2465)
!2475 = distinct !DISubprogram(name: "mknodat", scope: !2394, file: !2394, line: 491, type: !2476, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2478)
!2476 = !DISubroutineType(types: !2477)
!2477 = !{!815, !815, !922, !2408, !2402}
!2478 = !{!2479, !2480, !2481, !2482}
!2479 = !DILocalVariable(name: "__fd", arg: 1, scope: !2475, file: !2394, line: 491, type: !815)
!2480 = !DILocalVariable(name: "__path", arg: 2, scope: !2475, file: !2394, line: 491, type: !922)
!2481 = !DILocalVariable(name: "__mode", arg: 3, scope: !2475, file: !2394, line: 491, type: !2408)
!2482 = !DILocalVariable(name: "__dev", arg: 4, scope: !2475, file: !2394, line: 491, type: !2402)
!2483 = !DILocation(line: 0, scope: !2475)
!2484 = !DILocation(line: 494, column: 10, scope: !2475)
!2485 = !DILocation(line: 494, column: 3, scope: !2475)
!2486 = distinct !DISubprogram(name: "stat64", scope: !2394, file: !2394, line: 502, type: !2487, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2509)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!815, !922, !2489}
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2399, line: 119, size: 1152, elements: !2491)
!2491 = !{!2492, !2493, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2505, !2506, !2507, !2508}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2490, file: !2399, line: 121, baseType: !2402, size: 64)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2490, file: !2399, line: 123, baseType: !2494, size: 64, offset: 64)
!2494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2153, line: 149, baseType: !772)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2490, file: !2399, line: 124, baseType: !2406, size: 64, offset: 128)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2490, file: !2399, line: 125, baseType: !2408, size: 32, offset: 192)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2490, file: !2399, line: 132, baseType: !2410, size: 32, offset: 224)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2490, file: !2399, line: 133, baseType: !2412, size: 32, offset: 256)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2490, file: !2399, line: 135, baseType: !815, size: 32, offset: 288)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2490, file: !2399, line: 136, baseType: !2402, size: 64, offset: 320)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2490, file: !2399, line: 137, baseType: !2152, size: 64, offset: 384)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2490, file: !2399, line: 143, baseType: !2417, size: 64, offset: 448)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2490, file: !2399, line: 144, baseType: !2504, size: 64, offset: 512)
!2504 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2153, line: 180, baseType: !774)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2490, file: !2399, line: 152, baseType: !2421, size: 128, offset: 576)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2490, file: !2399, line: 153, baseType: !2421, size: 128, offset: 704)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2490, file: !2399, line: 154, baseType: !2421, size: 128, offset: 832)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2490, file: !2399, line: 164, baseType: !2431, size: 192, offset: 960)
!2509 = !{!2510, !2511}
!2510 = !DILocalVariable(name: "__path", arg: 1, scope: !2486, file: !2394, line: 502, type: !922)
!2511 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2486, file: !2394, line: 502, type: !2489)
!2512 = !DILocation(line: 0, scope: !2486)
!2513 = !DILocation(line: 504, column: 10, scope: !2486)
!2514 = !DILocation(line: 504, column: 3, scope: !2486)
!2515 = distinct !DISubprogram(name: "lstat64", scope: !2394, file: !2394, line: 509, type: !2487, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2516)
!2516 = !{!2517, !2518}
!2517 = !DILocalVariable(name: "__path", arg: 1, scope: !2515, file: !2394, line: 509, type: !922)
!2518 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2515, file: !2394, line: 509, type: !2489)
!2519 = !DILocation(line: 0, scope: !2515)
!2520 = !DILocation(line: 511, column: 10, scope: !2515)
!2521 = !DILocation(line: 511, column: 3, scope: !2515)
!2522 = distinct !DISubprogram(name: "fstat64", scope: !2394, file: !2394, line: 516, type: !2523, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2525)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{!815, !815, !2489}
!2525 = !{!2526, !2527}
!2526 = !DILocalVariable(name: "__fd", arg: 1, scope: !2522, file: !2394, line: 516, type: !815)
!2527 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2522, file: !2394, line: 516, type: !2489)
!2528 = !DILocation(line: 0, scope: !2522)
!2529 = !DILocation(line: 518, column: 10, scope: !2522)
!2530 = !DILocation(line: 518, column: 3, scope: !2522)
!2531 = distinct !DISubprogram(name: "fstatat64", scope: !2394, file: !2394, line: 523, type: !2532, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2534)
!2532 = !DISubroutineType(types: !2533)
!2533 = !{!815, !815, !922, !2489, !815}
!2534 = !{!2535, !2536, !2537, !2538}
!2535 = !DILocalVariable(name: "__fd", arg: 1, scope: !2531, file: !2394, line: 523, type: !815)
!2536 = !DILocalVariable(name: "__filename", arg: 2, scope: !2531, file: !2394, line: 523, type: !922)
!2537 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2531, file: !2394, line: 523, type: !2489)
!2538 = !DILocalVariable(name: "__flag", arg: 4, scope: !2531, file: !2394, line: 523, type: !815)
!2539 = !DILocation(line: 0, scope: !2531)
!2540 = !DILocation(line: 526, column: 10, scope: !2531)
!2541 = !DILocation(line: 526, column: 3, scope: !2531)
!2542 = distinct !DISubprogram(name: "c_parse_init", scope: !3, file: !3, line: 67, type: !2543, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2545)
!2543 = !DISubroutineType(types: !2544)
!2544 = !{null}
!2545 = !{!2546, !2547, !2548}
!2546 = !DILocalVariable(name: "i", scope: !2542, file: !3, line: 71, type: !7)
!2547 = !DILocalVariable(name: "id", scope: !2542, file: !3, line: 72, type: !718)
!2548 = !DILocalVariable(name: "mask", scope: !2542, file: !3, line: 73, type: !815)
!2549 = !DILocation(line: 0, scope: !2542)
!2550 = !DILocation(line: 80, column: 8, scope: !2551)
!2551 = distinct !DILexicalBlock(scope: !2542, file: !3, line: 80, column: 7)
!2552 = !DILocation(line: 80, column: 7, scope: !2542)
!2553 = !DILocation(line: 82, column: 7, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2542, file: !3, line: 82, column: 7)
!2555 = !DILocation(line: 82, column: 7, scope: !2542)
!2556 = !DILocation(line: 85, column: 11, scope: !2557)
!2557 = distinct !DILexicalBlock(scope: !2554, file: !3, line: 83, column: 5)
!2558 = !DILocation(line: 87, column: 5, scope: !2557)
!2559 = !DILocation(line: 88, column: 8, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2542, file: !3, line: 88, column: 7)
!2561 = !DILocation(line: 89, column: 10, scope: !2560)
!2562 = !DILocation(line: 88, column: 7, scope: !2542)
!2563 = !DILocation(line: 91, column: 17, scope: !2542)
!2564 = !DILocation(line: 91, column: 15, scope: !2542)
!2565 = !DILocation(line: 0, scope: !2566)
!2566 = distinct !DILexicalBlock(scope: !2567, file: !3, line: 92, column: 3)
!2567 = distinct !DILexicalBlock(scope: !2542, file: !3, line: 92, column: 3)
!2568 = !DILocation(line: 92, column: 17, scope: !2566)
!2569 = !DILocation(line: 92, column: 8, scope: !2567)
!2570 = !DILocation(line: 0, scope: !2567)
!2571 = !DILocation(line: 92, column: 3, scope: !2567)
!2572 = !DILocation(line: 96, column: 32, scope: !2573)
!2573 = distinct !DILexicalBlock(scope: !2574, file: !3, line: 96, column: 11)
!2574 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 93, column: 5)
!2575 = !DILocation(line: 96, column: 40, scope: !2573)
!2576 = !DILocation(line: 96, column: 11, scope: !2574)
!2577 = !DILocation(line: 98, column: 8, scope: !2578)
!2578 = distinct !DILexicalBlock(scope: !2579, file: !3, line: 98, column: 8)
!2579 = distinct !DILexicalBlock(scope: !2573, file: !3, line: 97, column: 2)
!2580 = !DILocation(line: 99, column: 8, scope: !2578)
!2581 = !DILocation(line: 99, column: 41, scope: !2578)
!2582 = !DILocation(line: 98, column: 8, scope: !2579)
!2583 = !DILocation(line: 101, column: 50, scope: !2584)
!2584 = distinct !DILexicalBlock(scope: !2578, file: !3, line: 100, column: 6)
!2585 = !DILocation(line: 101, column: 13, scope: !2584)
!2586 = !DILocation(line: 102, column: 8, scope: !2584)
!2587 = !DILocation(line: 103, column: 8, scope: !2584)
!2588 = !DILocation(line: 103, column: 32, scope: !2584)
!2589 = !DILocation(line: 104, column: 6, scope: !2584)
!2590 = !DILocation(line: 108, column: 49, scope: !2574)
!2591 = !DILocation(line: 108, column: 12, scope: !2574)
!2592 = !DILocation(line: 109, column: 7, scope: !2574)
!2593 = !DILocation(line: 110, column: 7, scope: !2574)
!2594 = !DILocation(line: 110, column: 31, scope: !2574)
!2595 = !DILocation(line: 111, column: 7, scope: !2574)
!2596 = !DILocation(line: 111, column: 47, scope: !2574)
!2597 = !DILocation(line: 111, column: 52, scope: !2574)
!2598 = !DILocation(line: 112, column: 5, scope: !2574)
!2599 = !DILocation(line: 92, column: 43, scope: !2566)
!2600 = !DILocation(line: 92, column: 3, scope: !2566)
!2601 = distinct !{!2601, !2571, !2602}
!2602 = !DILocation(line: 112, column: 5, scope: !2567)
!2603 = !DILocation(line: 113, column: 1, scope: !2542)
!2604 = distinct !DISubprogram(name: "pragma_lex", scope: !3, file: !3, line: 7064, type: !2605, scopeLine: 7065, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2607)
!2605 = !DISubroutineType(types: !2606)
!2606 = !{!397, !1623}
!2607 = !{!2608, !2609, !2611}
!2608 = !DILocalVariable(name: "value", arg: 1, scope: !2604, file: !3, line: 7064, type: !1623)
!2609 = !DILocalVariable(name: "tok", scope: !2604, file: !3, line: 7066, type: !2610)
!2610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!2611 = !DILocalVariable(name: "ret", scope: !2604, file: !3, line: 7067, type: !397)
!2612 = !DILocation(line: 0, scope: !2604)
!2613 = !DILocation(line: 7066, column: 39, scope: !2604)
!2614 = !DILocation(line: 7066, column: 18, scope: !2604)
!2615 = !DILocation(line: 7067, column: 29, scope: !2604)
!2616 = !DILocation(line: 7069, column: 17, scope: !2604)
!2617 = !DILocation(line: 7069, column: 10, scope: !2604)
!2618 = !DILocation(line: 7070, column: 29, scope: !2619)
!2619 = distinct !DILexicalBlock(scope: !2604, file: !3, line: 7070, column: 7)
!2620 = !DILocation(line: 7075, column: 2, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2622, file: !3, line: 7074, column: 11)
!2622 = distinct !DILexicalBlock(scope: !2619, file: !3, line: 7073, column: 5)
!2623 = !DILocation(line: 7076, column: 31, scope: !2622)
!2624 = !DILocation(line: 7076, column: 7, scope: !2622)
!2625 = !DILocation(line: 0, scope: !2619)
!2626 = !DILocation(line: 7079, column: 3, scope: !2604)
!2627 = distinct !DISubprogram(name: "c_parser_peek_token", scope: !3, file: !3, line: 319, type: !2628, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2630)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!2610, !1896}
!2630 = !{!2631}
!2631 = !DILocalVariable(name: "parser", arg: 1, scope: !2627, file: !3, line: 319, type: !1896)
!2632 = !DILocation(line: 0, scope: !2627)
!2633 = !DILocation(line: 321, column: 15, scope: !2634)
!2634 = distinct !DILexicalBlock(scope: !2627, file: !3, line: 321, column: 7)
!2635 = !DILocation(line: 321, column: 28, scope: !2634)
!2636 = !DILocation(line: 321, column: 7, scope: !2627)
!2637 = !DILocation(line: 323, column: 33, scope: !2638)
!2638 = distinct !DILexicalBlock(scope: !2634, file: !3, line: 322, column: 5)
!2639 = !DILocation(line: 323, column: 7, scope: !2638)
!2640 = !DILocation(line: 324, column: 28, scope: !2638)
!2641 = !DILocation(line: 325, column: 5, scope: !2638)
!2642 = !DILocation(line: 326, column: 11, scope: !2627)
!2643 = !DILocation(line: 326, column: 3, scope: !2627)
!2644 = distinct !DISubprogram(name: "c_parser_consume_token", scope: !3, file: !3, line: 526, type: !2645, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2647)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{null, !1896}
!2647 = !{!2648}
!2648 = !DILocalVariable(name: "parser", arg: 1, scope: !2644, file: !3, line: 526, type: !1896)
!2649 = !DILocation(line: 0, scope: !2644)
!2650 = !DILocation(line: 528, column: 3, scope: !2644)
!2651 = !DILocation(line: 529, column: 3, scope: !2644)
!2652 = !DILocation(line: 530, column: 3, scope: !2644)
!2653 = !DILocation(line: 531, column: 3, scope: !2644)
!2654 = !DILocation(line: 532, column: 15, scope: !2655)
!2655 = distinct !DILexicalBlock(scope: !2644, file: !3, line: 532, column: 7)
!2656 = !DILocation(line: 532, column: 28, scope: !2655)
!2657 = !DILocation(line: 532, column: 7, scope: !2644)
!2658 = !DILocation(line: 533, column: 25, scope: !2655)
!2659 = !DILocation(line: 533, column: 5, scope: !2655)
!2660 = !DILocation(line: 534, column: 23, scope: !2644)
!2661 = !DILocation(line: 535, column: 1, scope: !2644)
!2662 = distinct !DISubprogram(name: "c_parse_file", scope: !3, file: !3, line: 8699, type: !2543, scopeLine: 8700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2663)
!2663 = !{!2664}
!2664 = !DILocalVariable(name: "tparser", scope: !2662, file: !3, line: 8704, type: !1897)
!2665 = !DILocation(line: 8704, column: 3, scope: !2662)
!2666 = !DILocation(line: 8706, column: 3, scope: !2662)
!2667 = !DILocation(line: 8707, column: 14, scope: !2662)
!2668 = !DILocation(line: 0, scope: !2662)
!2669 = !DILocation(line: 8709, column: 7, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 8709, column: 7)
!2671 = !DILocation(line: 8709, column: 39, scope: !2670)
!2672 = !DILocation(line: 8709, column: 51, scope: !2670)
!2673 = !DILocation(line: 8709, column: 7, scope: !2662)
!2674 = !DILocation(line: 8710, column: 5, scope: !2670)
!2675 = !DILocation(line: 8712, column: 16, scope: !2662)
!2676 = !DILocation(line: 8712, column: 14, scope: !2662)
!2677 = !DILocation(line: 8713, column: 17, scope: !2662)
!2678 = !DILocation(line: 8716, column: 7, scope: !2679)
!2679 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 8716, column: 7)
!2680 = !DILocation(line: 8716, column: 7, scope: !2662)
!2681 = !DILocation(line: 8717, column: 5, scope: !2679)
!2682 = !DILocation(line: 8719, column: 30, scope: !2662)
!2683 = !DILocation(line: 8719, column: 3, scope: !2662)
!2684 = !DILocation(line: 8720, column: 14, scope: !2662)
!2685 = !DILocation(line: 8721, column: 1, scope: !2662)
!2686 = distinct !DISubprogram(name: "c_parser_pragma_pch_preprocess", scope: !3, file: !3, line: 7083, type: !2645, scopeLine: 7084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2687)
!2687 = !{!2688, !2689}
!2688 = !DILocalVariable(name: "parser", arg: 1, scope: !2686, file: !3, line: 7083, type: !1896)
!2689 = !DILocalVariable(name: "name", scope: !2686, file: !3, line: 7085, type: !718)
!2690 = !DILocation(line: 0, scope: !2686)
!2691 = !DILocation(line: 7087, column: 3, scope: !2686)
!2692 = !DILocation(line: 7088, column: 7, scope: !2693)
!2693 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 7088, column: 7)
!2694 = !DILocation(line: 7088, column: 7, scope: !2686)
!2695 = !DILocation(line: 7090, column: 14, scope: !2696)
!2696 = distinct !DILexicalBlock(scope: !2693, file: !3, line: 7089, column: 5)
!2697 = !DILocation(line: 7090, column: 44, scope: !2696)
!2698 = !DILocation(line: 7091, column: 7, scope: !2696)
!2699 = !DILocation(line: 7092, column: 5, scope: !2696)
!2700 = !DILocation(line: 7094, column: 5, scope: !2693)
!2701 = !DILocation(line: 7095, column: 3, scope: !2686)
!2702 = !DILocation(line: 7097, column: 7, scope: !2686)
!2703 = !DILocation(line: 7098, column: 26, scope: !2704)
!2704 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 7097, column: 7)
!2705 = !DILocation(line: 7098, column: 36, scope: !2704)
!2706 = !DILocation(line: 7098, column: 5, scope: !2704)
!2707 = !DILocation(line: 7099, column: 1, scope: !2686)
!2708 = distinct !DISubprogram(name: "c_parser_translation_unit", scope: !3, file: !3, line: 991, type: !2645, scopeLine: 992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2709)
!2709 = !{!2710, !2711}
!2710 = !DILocalVariable(name: "parser", arg: 1, scope: !2708, file: !3, line: 991, type: !1896)
!2711 = !DILocalVariable(name: "obstack_position", scope: !2712, file: !3, line: 1000, type: !1002)
!2712 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 999, column: 5)
!2713 = distinct !DILexicalBlock(scope: !2708, file: !3, line: 993, column: 7)
!2714 = !DILocation(line: 0, scope: !2708)
!2715 = !DILocation(line: 993, column: 7, scope: !2713)
!2716 = !DILocation(line: 993, column: 7, scope: !2708)
!2717 = !DILocation(line: 995, column: 16, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 994, column: 5)
!2719 = !DILocation(line: 995, column: 46, scope: !2718)
!2720 = !DILocation(line: 995, column: 7, scope: !2718)
!2721 = !DILocation(line: 997, column: 5, scope: !2718)
!2722 = !DILocation(line: 1000, column: 32, scope: !2712)
!2723 = !DILocation(line: 1001, column: 7, scope: !2712)
!2724 = !DILocation(line: 1002, column: 7, scope: !2712)
!2725 = !DILocation(line: 1004, column: 4, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2712, file: !3, line: 1003, column: 2)
!2727 = !DILocation(line: 1005, column: 4, scope: !2726)
!2728 = !DILocation(line: 1006, column: 4, scope: !2726)
!2729 = !DILocation(line: 1008, column: 14, scope: !2712)
!2730 = !DILocation(line: 1007, column: 2, scope: !2726)
!2731 = distinct !{!2731, !2724, !2732}
!2732 = !DILocation(line: 1008, column: 58, scope: !2712)
!2733 = !DILocation(line: 1010, column: 1, scope: !2708)
!2734 = distinct !DISubprogram(name: "gt_ggc_mx_c_parser", scope: !2081, file: !2081, line: 23, type: !1355, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2735)
!2735 = !{!2736, !2737, !2739, !2743}
!2736 = !DILocalVariable(name: "x_p", arg: 1, scope: !2734, file: !2081, line: 23, type: !1002)
!2737 = !DILocalVariable(name: "x", scope: !2734, file: !2081, line: 25, type: !2738)
!2738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2009)
!2739 = !DILocalVariable(name: "i0", scope: !2740, file: !2081, line: 29, type: !1360)
!2740 = distinct !DILexicalBlock(scope: !2741, file: !2081, line: 28, column: 7)
!2741 = distinct !DILexicalBlock(scope: !2742, file: !2081, line: 27, column: 5)
!2742 = distinct !DILexicalBlock(scope: !2734, file: !2081, line: 26, column: 7)
!2743 = !DILocalVariable(name: "l0", scope: !2740, file: !2081, line: 30, type: !1360)
!2744 = !DILocation(line: 0, scope: !2734)
!2745 = !DILocation(line: 26, column: 7, scope: !2742)
!2746 = !DILocation(line: 26, column: 7, scope: !2734)
!2747 = !DILocation(line: 0, scope: !2748)
!2748 = distinct !DILexicalBlock(scope: !2749, file: !2081, line: 32, column: 11)
!2749 = distinct !DILexicalBlock(scope: !2750, file: !2081, line: 32, column: 11)
!2750 = distinct !DILexicalBlock(scope: !2751, file: !2081, line: 31, column: 38)
!2751 = distinct !DILexicalBlock(scope: !2752, file: !2081, line: 31, column: 9)
!2752 = distinct !DILexicalBlock(scope: !2740, file: !2081, line: 31, column: 9)
!2753 = !DILocation(line: 31, column: 9, scope: !2752)
!2754 = !DILocation(line: 0, scope: !2752)
!2755 = !DILocation(line: 0, scope: !2740)
!2756 = !DILocation(line: 31, column: 25, scope: !2751)
!2757 = !DILocation(line: 32, column: 11, scope: !2748)
!2758 = !DILocation(line: 32, column: 11, scope: !2749)
!2759 = !DILocation(line: 31, column: 34, scope: !2751)
!2760 = !DILocation(line: 31, column: 9, scope: !2751)
!2761 = distinct !{!2761, !2753, !2762}
!2762 = !DILocation(line: 33, column: 9, scope: !2752)
!2763 = !DILocation(line: 36, column: 1, scope: !2734)
!2764 = distinct !DISubprogram(name: "gt_pch_nx_c_parser", scope: !2081, file: !2081, line: 39, type: !1355, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2765)
!2765 = !{!2766, !2767, !2768, !2772}
!2766 = !DILocalVariable(name: "x_p", arg: 1, scope: !2764, file: !2081, line: 39, type: !1002)
!2767 = !DILocalVariable(name: "x", scope: !2764, file: !2081, line: 41, type: !2738)
!2768 = !DILocalVariable(name: "i0", scope: !2769, file: !2081, line: 45, type: !1360)
!2769 = distinct !DILexicalBlock(scope: !2770, file: !2081, line: 44, column: 7)
!2770 = distinct !DILexicalBlock(scope: !2771, file: !2081, line: 43, column: 5)
!2771 = distinct !DILexicalBlock(scope: !2764, file: !2081, line: 42, column: 7)
!2772 = !DILocalVariable(name: "l0", scope: !2769, file: !2081, line: 46, type: !1360)
!2773 = !DILocation(line: 0, scope: !2764)
!2774 = !DILocation(line: 42, column: 7, scope: !2771)
!2775 = !DILocation(line: 42, column: 7, scope: !2764)
!2776 = !DILocation(line: 0, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2778, file: !2081, line: 48, column: 11)
!2778 = distinct !DILexicalBlock(scope: !2779, file: !2081, line: 48, column: 11)
!2779 = distinct !DILexicalBlock(scope: !2780, file: !2081, line: 47, column: 38)
!2780 = distinct !DILexicalBlock(scope: !2781, file: !2081, line: 47, column: 9)
!2781 = distinct !DILexicalBlock(scope: !2769, file: !2081, line: 47, column: 9)
!2782 = !DILocation(line: 47, column: 9, scope: !2781)
!2783 = !DILocation(line: 0, scope: !2781)
!2784 = !DILocation(line: 0, scope: !2769)
!2785 = !DILocation(line: 47, column: 25, scope: !2780)
!2786 = !DILocation(line: 48, column: 11, scope: !2777)
!2787 = !DILocation(line: 48, column: 11, scope: !2778)
!2788 = !DILocation(line: 47, column: 34, scope: !2780)
!2789 = !DILocation(line: 47, column: 9, scope: !2780)
!2790 = distinct !{!2790, !2782, !2791}
!2791 = !DILocation(line: 49, column: 9, scope: !2781)
!2792 = !DILocation(line: 52, column: 1, scope: !2764)
!2793 = distinct !DISubprogram(name: "gt_pch_p_8c_parser", scope: !2081, file: !2081, line: 55, type: !2794, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2797)
!2794 = !DISubroutineType(types: !2795)
!2795 = !{null, !1002, !1002, !2796, !1002}
!2796 = !DIDerivedType(tag: DW_TAG_typedef, name: "gt_pointer_operator", file: !2085, line: 38, baseType: !1381)
!2797 = !{!2798, !2799, !2800, !2801, !2802, !2803, !2805}
!2798 = !DILocalVariable(name: "this_obj", arg: 1, scope: !2793, file: !2081, line: 55, type: !1002)
!2799 = !DILocalVariable(name: "x_p", arg: 2, scope: !2793, file: !2081, line: 56, type: !1002)
!2800 = !DILocalVariable(name: "op", arg: 3, scope: !2793, file: !2081, line: 57, type: !2796)
!2801 = !DILocalVariable(name: "cookie", arg: 4, scope: !2793, file: !2081, line: 58, type: !1002)
!2802 = !DILocalVariable(name: "x", scope: !2793, file: !2081, line: 60, type: !2738)
!2803 = !DILocalVariable(name: "i0", scope: !2804, file: !2081, line: 62, type: !1360)
!2804 = distinct !DILexicalBlock(scope: !2793, file: !2081, line: 61, column: 3)
!2805 = !DILocalVariable(name: "l0", scope: !2804, file: !2081, line: 63, type: !1360)
!2806 = !DILocation(line: 0, scope: !2793)
!2807 = !DILocation(line: 0, scope: !2804)
!2808 = !DILocation(line: 0, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2810, file: !2081, line: 65, column: 11)
!2810 = distinct !DILexicalBlock(scope: !2811, file: !2081, line: 64, column: 34)
!2811 = distinct !DILexicalBlock(scope: !2812, file: !2081, line: 64, column: 5)
!2812 = distinct !DILexicalBlock(scope: !2804, file: !2081, line: 64, column: 5)
!2813 = !DILocation(line: 64, column: 10, scope: !2812)
!2814 = !DILocation(line: 0, scope: !2812)
!2815 = !DILocation(line: 64, column: 21, scope: !2811)
!2816 = !DILocation(line: 64, column: 5, scope: !2812)
!2817 = !DILocation(line: 66, column: 31, scope: !2809)
!2818 = !DILocation(line: 66, column: 13, scope: !2809)
!2819 = !DILocation(line: 66, column: 9, scope: !2809)
!2820 = !DILocation(line: 64, column: 30, scope: !2811)
!2821 = !DILocation(line: 64, column: 5, scope: !2811)
!2822 = distinct !{!2822, !2816, !2823}
!2823 = !DILocation(line: 67, column: 5, scope: !2812)
!2824 = !DILocation(line: 69, column: 1, scope: !2793)
!2825 = distinct !DISubprogram(name: "c_lex_one_token", scope: !3, file: !3, line: 203, type: !2826, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2828)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{null, !1896, !2610}
!2828 = !{!2829, !2830, !2831, !2834, !2835, !2838}
!2829 = !DILocalVariable(name: "parser", arg: 1, scope: !2825, file: !3, line: 203, type: !1896)
!2830 = !DILocalVariable(name: "token", arg: 2, scope: !2825, file: !3, line: 203, type: !2610)
!2831 = !DILocalVariable(name: "decl", scope: !2832, file: !3, line: 218, type: !718)
!2832 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 217, column: 7)
!2833 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 215, column: 5)
!2834 = !DILocalVariable(name: "objc_force_identifier", scope: !2832, file: !3, line: 220, type: !838)
!2835 = !DILocalVariable(name: "rid_code", scope: !2836, file: !3, line: 226, type: !477)
!2836 = distinct !DILexicalBlock(scope: !2837, file: !3, line: 225, column: 4)
!2837 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 224, column: 6)
!2838 = !DILocalVariable(name: "objc_interface_decl", scope: !2839, file: !3, line: 274, type: !718)
!2839 = distinct !DILexicalBlock(scope: !2840, file: !3, line: 273, column: 4)
!2840 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 272, column: 11)
!2841 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 264, column: 6)
!2842 = !DILocation(line: 0, scope: !2825)
!2843 = !DILocation(line: 205, column: 3, scope: !2844)
!2844 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 205, column: 3)
!2845 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 205, column: 3)
!2846 = !DILocation(line: 205, column: 3, scope: !2845)
!2847 = !DILocation(line: 207, column: 43, scope: !2825)
!2848 = !DILocation(line: 207, column: 58, scope: !2825)
!2849 = !DILocation(line: 208, column: 16, scope: !2825)
!2850 = !DILocation(line: 208, column: 8, scope: !2825)
!2851 = !DILocation(line: 207, column: 17, scope: !2825)
!2852 = !DILocation(line: 207, column: 15, scope: !2825)
!2853 = !DILocation(line: 212, column: 10, scope: !2825)
!2854 = !DILocation(line: 212, column: 22, scope: !2825)
!2855 = !DILocation(line: 214, column: 3, scope: !2825)
!2856 = !DILocation(line: 220, column: 39, scope: !2832)
!2857 = !DILocation(line: 0, scope: !2832)
!2858 = !DILocation(line: 221, column: 6, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2832, file: !3, line: 221, column: 6)
!2860 = !DILocation(line: 221, column: 6, scope: !2832)
!2861 = !DILocation(line: 222, column: 37, scope: !2859)
!2862 = !DILocation(line: 222, column: 4, scope: !2859)
!2863 = !DILocation(line: 224, column: 6, scope: !2837)
!2864 = !DILocation(line: 224, column: 6, scope: !2832)
!2865 = !DILocation(line: 226, column: 26, scope: !2836)
!2866 = !DILocation(line: 0, scope: !2836)
!2867 = !DILocation(line: 228, column: 19, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2836, file: !3, line: 228, column: 10)
!2869 = !DILocation(line: 228, column: 10, scope: !2836)
!2870 = !DILocation(line: 230, column: 22, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 229, column: 8)
!2872 = !DILocation(line: 230, column: 3, scope: !2871)
!2873 = !DILocation(line: 234, column: 8, scope: !2871)
!2874 = !DILocation(line: 236, column: 8, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 235, column: 15)
!2876 = !DILocation(line: 238, column: 18, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 237, column: 8)
!2878 = !DILocation(line: 239, column: 18, scope: !2877)
!2879 = !DILocation(line: 240, column: 3, scope: !2877)
!2880 = !DILocation(line: 242, column: 15, scope: !2875)
!2881 = !DILocation(line: 244, column: 8, scope: !2882)
!2882 = distinct !DILexicalBlock(scope: !2883, file: !3, line: 244, column: 7)
!2883 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 243, column: 8)
!2884 = distinct !DILexicalBlock(scope: !2875, file: !3, line: 242, column: 15)
!2885 = !DILocation(line: 245, column: 7, scope: !2882)
!2886 = !DILocation(line: 245, column: 12, scope: !2882)
!2887 = !DILocation(line: 246, column: 15, scope: !2882)
!2888 = !DILocation(line: 246, column: 7, scope: !2882)
!2889 = !DILocation(line: 244, column: 7, scope: !2883)
!2890 = !DILocation(line: 249, column: 22, scope: !2891)
!2891 = distinct !DILexicalBlock(scope: !2882, file: !3, line: 247, column: 5)
!2892 = !DILocation(line: 249, column: 20, scope: !2891)
!2893 = !DILocation(line: 250, column: 19, scope: !2891)
!2894 = !DILocation(line: 251, column: 22, scope: !2891)
!2895 = !DILocation(line: 252, column: 7, scope: !2891)
!2896 = !DILocation(line: 257, column: 15, scope: !2897)
!2897 = distinct !DILexicalBlock(scope: !2884, file: !3, line: 256, column: 8)
!2898 = !DILocation(line: 258, column: 18, scope: !2897)
!2899 = !DILocation(line: 259, column: 3, scope: !2897)
!2900 = !DILocation(line: 263, column: 29, scope: !2832)
!2901 = !DILocation(line: 263, column: 9, scope: !2832)
!2902 = !DILocation(line: 264, column: 6, scope: !2841)
!2903 = !DILocation(line: 264, column: 6, scope: !2832)
!2904 = !DILocation(line: 266, column: 10, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2906, file: !3, line: 266, column: 10)
!2906 = distinct !DILexicalBlock(scope: !2841, file: !3, line: 265, column: 4)
!2907 = !DILocation(line: 266, column: 27, scope: !2905)
!2908 = !DILocation(line: 266, column: 10, scope: !2906)
!2909 = !DILocation(line: 268, column: 18, scope: !2910)
!2910 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 267, column: 8)
!2911 = !DILocation(line: 269, column: 3, scope: !2910)
!2912 = !DILocation(line: 272, column: 11, scope: !2840)
!2913 = !DILocation(line: 272, column: 11, scope: !2841)
!2914 = !DILocation(line: 274, column: 60, scope: !2839)
!2915 = !DILocation(line: 274, column: 33, scope: !2839)
!2916 = !DILocation(line: 0, scope: !2839)
!2917 = !DILocation(line: 278, column: 10, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2839, file: !3, line: 278, column: 10)
!2919 = !DILocation(line: 279, column: 3, scope: !2918)
!2920 = !DILocation(line: 279, column: 7, scope: !2918)
!2921 = !DILocation(line: 280, column: 7, scope: !2918)
!2922 = !DILocation(line: 280, column: 12, scope: !2918)
!2923 = !DILocation(line: 280, column: 34, scope: !2918)
!2924 = !DILocation(line: 282, column: 16, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 281, column: 8)
!2926 = !DILocation(line: 283, column: 18, scope: !2925)
!2927 = !DILocation(line: 284, column: 3, scope: !2925)
!2928 = !DILocation(line: 287, column: 24, scope: !2832)
!2929 = !DILocation(line: 288, column: 7, scope: !2833)
!2930 = !DILocation(line: 292, column: 19, scope: !2833)
!2931 = !DILocation(line: 293, column: 24, scope: !2833)
!2932 = !DILocation(line: 293, column: 22, scope: !2833)
!2933 = !DILocation(line: 294, column: 7, scope: !2833)
!2934 = !DILocation(line: 301, column: 11, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2833, file: !3, line: 301, column: 11)
!2936 = !DILocation(line: 301, column: 11, scope: !2833)
!2937 = !DILocation(line: 302, column: 35, scope: !2935)
!2938 = !DILocation(line: 302, column: 2, scope: !2935)
!2939 = !DILocation(line: 306, column: 47, scope: !2833)
!2940 = !DILocation(line: 306, column: 28, scope: !2833)
!2941 = !DILocation(line: 306, column: 26, scope: !2833)
!2942 = !DILocation(line: 307, column: 20, scope: !2833)
!2943 = !DILocation(line: 308, column: 7, scope: !2833)
!2944 = !DILocation(line: 312, column: 3, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 312, column: 3)
!2946 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 312, column: 3)
!2947 = !DILocation(line: 312, column: 3, scope: !2946)
!2948 = !DILocation(line: 313, column: 1, scope: !2825)
!2949 = distinct !DISubprogram(name: "c_parser_consume_pragma", scope: !3, file: !3, line: 541, type: !2645, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2950)
!2950 = !{!2951}
!2951 = !DILocalVariable(name: "parser", arg: 1, scope: !2949, file: !3, line: 541, type: !1896)
!2952 = !DILocation(line: 0, scope: !2949)
!2953 = !DILocation(line: 543, column: 3, scope: !2949)
!2954 = !DILocation(line: 544, column: 3, scope: !2949)
!2955 = !DILocation(line: 545, column: 3, scope: !2949)
!2956 = !DILocation(line: 546, column: 15, scope: !2957)
!2957 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 546, column: 7)
!2958 = !DILocation(line: 546, column: 28, scope: !2957)
!2959 = !DILocation(line: 546, column: 7, scope: !2949)
!2960 = !DILocation(line: 547, column: 25, scope: !2957)
!2961 = !DILocation(line: 547, column: 5, scope: !2957)
!2962 = !DILocation(line: 548, column: 23, scope: !2949)
!2963 = !DILocation(line: 549, column: 21, scope: !2949)
!2964 = !DILocation(line: 550, column: 1, scope: !2949)
!2965 = distinct !DISubprogram(name: "c_parser_next_token_is", scope: !3, file: !3, line: 333, type: !2966, scopeLine: 334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2968)
!2966 = !DISubroutineType(types: !2967)
!2967 = !{!838, !1896, !397}
!2968 = !{!2969, !2970}
!2969 = !DILocalVariable(name: "parser", arg: 1, scope: !2965, file: !3, line: 333, type: !1896)
!2970 = !DILocalVariable(name: "type", arg: 2, scope: !2965, file: !3, line: 333, type: !397)
!2971 = !DILocation(line: 0, scope: !2965)
!2972 = !DILocation(line: 335, column: 10, scope: !2965)
!2973 = !DILocation(line: 335, column: 40, scope: !2965)
!2974 = !DILocation(line: 335, column: 45, scope: !2965)
!2975 = !DILocation(line: 335, column: 3, scope: !2965)
!2976 = distinct !DISubprogram(name: "c_parser_error", scope: !3, file: !3, line: 576, type: !2977, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2979)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{null, !1896, !922}
!2979 = !{!2980, !2981, !2982}
!2980 = !DILocalVariable(name: "parser", arg: 1, scope: !2976, file: !3, line: 576, type: !1896)
!2981 = !DILocalVariable(name: "gmsgid", arg: 2, scope: !2976, file: !3, line: 576, type: !922)
!2982 = !DILocalVariable(name: "token", scope: !2976, file: !3, line: 578, type: !2610)
!2983 = !DILocation(line: 0, scope: !2976)
!2984 = !DILocation(line: 578, column: 20, scope: !2976)
!2985 = !DILocation(line: 579, column: 15, scope: !2986)
!2986 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 579, column: 7)
!2987 = !DILocation(line: 579, column: 7, scope: !2986)
!2988 = !DILocation(line: 579, column: 7, scope: !2976)
!2989 = !DILocation(line: 581, column: 17, scope: !2976)
!2990 = !DILocation(line: 582, column: 8, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 582, column: 7)
!2992 = !DILocation(line: 582, column: 7, scope: !2976)
!2993 = !DILocation(line: 586, column: 3, scope: !2976)
!2994 = !DILocation(line: 591, column: 12, scope: !2976)
!2995 = !DILocation(line: 591, column: 17, scope: !2976)
!2996 = !DILocation(line: 591, column: 5, scope: !2976)
!2997 = !DILocation(line: 596, column: 11, scope: !2976)
!2998 = !DILocation(line: 587, column: 3, scope: !2976)
!2999 = !DILocation(line: 597, column: 1, scope: !2976)
!3000 = distinct !DISubprogram(name: "c_parser_skip_to_pragma_eol", scope: !3, file: !3, line: 731, type: !2645, scopeLine: 732, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3001)
!3001 = !{!3002, !3003}
!3002 = !DILocalVariable(name: "parser", arg: 1, scope: !3000, file: !3, line: 731, type: !1896)
!3003 = !DILocalVariable(name: "token", scope: !3004, file: !3, line: 739, type: !2610)
!3004 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 738, column: 7)
!3005 = distinct !DILexicalBlock(scope: !3000, file: !3, line: 736, column: 7)
!3006 = !DILocation(line: 0, scope: !3000)
!3007 = !DILocation(line: 733, column: 3, scope: !3000)
!3008 = !DILocation(line: 734, column: 21, scope: !3000)
!3009 = !DILocation(line: 736, column: 8, scope: !3005)
!3010 = !DILocation(line: 736, column: 7, scope: !3000)
!3011 = !DILocation(line: 737, column: 5, scope: !3005)
!3012 = !DILocation(line: 739, column: 19, scope: !3004)
!3013 = !DILocation(line: 0, scope: !3004)
!3014 = !DILocation(line: 740, column: 13, scope: !3015)
!3015 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 740, column: 6)
!3016 = !DILocation(line: 740, column: 18, scope: !3015)
!3017 = !DILocation(line: 740, column: 6, scope: !3004)
!3018 = !DILocation(line: 742, column: 18, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !3004, file: !3, line: 742, column: 6)
!3020 = !DILocation(line: 0, scope: !3005)
!3021 = distinct !{!3021, !3011, !3022}
!3022 = !DILocation(line: 748, column: 7, scope: !3005)
!3023 = !DILocation(line: 750, column: 11, scope: !3000)
!3024 = !DILocation(line: 750, column: 17, scope: !3000)
!3025 = !DILocation(line: 751, column: 1, scope: !3000)
!3026 = distinct !DISubprogram(name: "c_parser_set_source_position_from_token", scope: !3, file: !3, line: 555, type: !3027, scopeLine: 556, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3029)
!3027 = !DISubroutineType(types: !3028)
!3028 = !{null, !2610}
!3029 = !{!3030}
!3030 = !DILocalVariable(name: "token", arg: 1, scope: !3026, file: !3, line: 555, type: !2610)
!3031 = !DILocation(line: 0, scope: !3026)
!3032 = !DILocation(line: 557, column: 14, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 557, column: 7)
!3034 = !DILocation(line: 557, column: 19, scope: !3033)
!3035 = !DILocation(line: 557, column: 7, scope: !3026)
!3036 = !DILocation(line: 559, column: 31, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 558, column: 5)
!3038 = !DILocation(line: 559, column: 22, scope: !3037)
!3039 = !DILocation(line: 560, column: 5, scope: !3037)
!3040 = !DILocation(line: 561, column: 1, scope: !3026)
!3041 = distinct !DISubprogram(name: "c_parser_require", scope: !3, file: !3, line: 605, type: !3042, scopeLine: 608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3044)
!3042 = !DISubroutineType(types: !3043)
!3043 = !{!838, !1896, !397, !922}
!3044 = !{!3045, !3046, !3047}
!3045 = !DILocalVariable(name: "parser", arg: 1, scope: !3041, file: !3, line: 605, type: !1896)
!3046 = !DILocalVariable(name: "type", arg: 2, scope: !3041, file: !3, line: 606, type: !397)
!3047 = !DILocalVariable(name: "msgid", arg: 3, scope: !3041, file: !3, line: 607, type: !922)
!3048 = !DILocation(line: 0, scope: !3041)
!3049 = !DILocation(line: 609, column: 7, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 609, column: 7)
!3051 = !DILocation(line: 609, column: 7, scope: !3041)
!3052 = !DILocation(line: 611, column: 7, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 610, column: 5)
!3054 = !DILocation(line: 612, column: 7, scope: !3053)
!3055 = !DILocation(line: 616, column: 7, scope: !3056)
!3056 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 615, column: 5)
!3057 = !DILocation(line: 617, column: 7, scope: !3056)
!3058 = !DILocation(line: 0, scope: !3050)
!3059 = !DILocation(line: 619, column: 1, scope: !3041)
!3060 = distinct !DISubprogram(name: "c_parser_external_declaration", scope: !3, file: !3, line: 1037, type: !2645, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3061)
!3061 = !{!3062, !3063, !3064}
!3062 = !DILocalVariable(name: "parser", arg: 1, scope: !3060, file: !3, line: 1037, type: !1896)
!3063 = !DILocalVariable(name: "ext", scope: !3060, file: !3, line: 1039, type: !815)
!3064 = !DILabel(scope: !3065, name: "decl_or_fndef", file: !3, line: 1100)
!3065 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 1041, column: 5)
!3066 = !DILocation(line: 0, scope: !3060)
!3067 = !DILocation(line: 1040, column: 11, scope: !3060)
!3068 = !DILocation(line: 1040, column: 41, scope: !3060)
!3069 = !DILocation(line: 1040, column: 3, scope: !3060)
!3070 = !DILocation(line: 1043, column: 15, scope: !3065)
!3071 = !DILocation(line: 1043, column: 45, scope: !3065)
!3072 = !DILocation(line: 1043, column: 7, scope: !3065)
!3073 = !DILocation(line: 1046, column: 10, scope: !3074)
!3074 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 1044, column: 2)
!3075 = !DILocation(line: 1047, column: 4, scope: !3074)
!3076 = !DILocation(line: 1048, column: 4, scope: !3074)
!3077 = !DILocation(line: 1049, column: 4, scope: !3074)
!3078 = !DILocation(line: 1107, column: 1, scope: !3060)
!3079 = !DILocation(line: 1052, column: 4, scope: !3074)
!3080 = !DILocation(line: 1053, column: 4, scope: !3074)
!3081 = !DILocation(line: 1056, column: 4, scope: !3074)
!3082 = !DILocation(line: 1057, column: 4, scope: !3074)
!3083 = !DILocation(line: 1058, column: 4, scope: !3074)
!3084 = !DILocation(line: 1060, column: 4, scope: !3074)
!3085 = !DILocation(line: 1061, column: 4, scope: !3074)
!3086 = !DILocation(line: 1062, column: 4, scope: !3074)
!3087 = !DILocation(line: 1064, column: 4, scope: !3074)
!3088 = !DILocation(line: 1065, column: 4, scope: !3074)
!3089 = !DILocation(line: 1066, column: 4, scope: !3074)
!3090 = !DILocation(line: 1068, column: 4, scope: !3074)
!3091 = !DILocation(line: 1069, column: 4, scope: !3074)
!3092 = !DILocation(line: 1070, column: 4, scope: !3074)
!3093 = !DILocation(line: 1072, column: 4, scope: !3074)
!3094 = !DILocation(line: 1073, column: 4, scope: !3074)
!3095 = !DILocation(line: 1074, column: 4, scope: !3074)
!3096 = !DILocation(line: 1075, column: 4, scope: !3074)
!3097 = !DILocation(line: 1081, column: 16, scope: !3065)
!3098 = !DILocation(line: 1081, column: 46, scope: !3065)
!3099 = !DILocation(line: 1081, column: 7, scope: !3065)
!3100 = !DILocation(line: 1083, column: 7, scope: !3065)
!3101 = !DILocation(line: 1084, column: 7, scope: !3065)
!3102 = !DILocation(line: 1086, column: 7, scope: !3065)
!3103 = !DILocation(line: 1087, column: 7, scope: !3065)
!3104 = !DILocation(line: 1088, column: 7, scope: !3065)
!3105 = !DILocation(line: 1089, column: 7, scope: !3065)
!3106 = !DILocation(line: 1092, column: 11, scope: !3107)
!3107 = distinct !DILexicalBlock(scope: !3065, file: !3, line: 1092, column: 11)
!3108 = !DILocation(line: 1092, column: 11, scope: !3065)
!3109 = !DILocation(line: 1094, column: 4, scope: !3110)
!3110 = distinct !DILexicalBlock(scope: !3107, file: !3, line: 1093, column: 2)
!3111 = !DILocation(line: 1095, column: 4, scope: !3110)
!3112 = !DILocation(line: 1100, column: 5, scope: !3065)
!3113 = !DILocation(line: 1104, column: 7, scope: !3065)
!3114 = !DILocation(line: 1105, column: 7, scope: !3065)
!3115 = distinct !DISubprogram(name: "c_parser_next_token_is_not", scope: !3, file: !3, line: 342, type: !2966, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3116)
!3116 = !{!3117, !3118}
!3117 = !DILocalVariable(name: "parser", arg: 1, scope: !3115, file: !3, line: 342, type: !1896)
!3118 = !DILocalVariable(name: "type", arg: 2, scope: !3115, file: !3, line: 342, type: !397)
!3119 = !DILocation(line: 0, scope: !3115)
!3120 = !DILocation(line: 344, column: 11, scope: !3115)
!3121 = !DILocation(line: 344, column: 10, scope: !3115)
!3122 = !DILocation(line: 344, column: 3, scope: !3115)
!3123 = distinct !DISubprogram(name: "disable_extension_diagnostics", scope: !3, file: !3, line: 835, type: !2117, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3124)
!3124 = !{!3125}
!3125 = !DILocalVariable(name: "ret", scope: !3123, file: !3, line: 837, type: !815)
!3126 = !DILocation(line: 837, column: 14, scope: !3123)
!3127 = !DILocation(line: 838, column: 10, scope: !3123)
!3128 = !DILocation(line: 838, column: 29, scope: !3123)
!3129 = !DILocation(line: 838, column: 7, scope: !3123)
!3130 = !DILocation(line: 839, column: 10, scope: !3123)
!3131 = !DILocation(line: 839, column: 27, scope: !3123)
!3132 = !DILocation(line: 839, column: 7, scope: !3123)
!3133 = !DILocation(line: 840, column: 10, scope: !3123)
!3134 = !DILocation(line: 840, column: 19, scope: !3123)
!3135 = !DILocation(line: 840, column: 7, scope: !3123)
!3136 = !DILocation(line: 841, column: 10, scope: !3123)
!3137 = !DILocation(line: 841, column: 25, scope: !3123)
!3138 = !DILocation(line: 841, column: 7, scope: !3123)
!3139 = !DILocation(line: 842, column: 10, scope: !3123)
!3140 = !DILocation(line: 842, column: 26, scope: !3123)
!3141 = !DILocation(line: 842, column: 7, scope: !3123)
!3142 = !DILocation(line: 0, scope: !3123)
!3143 = !DILocation(line: 843, column: 33, scope: !3123)
!3144 = !DILocation(line: 843, column: 3, scope: !3123)
!3145 = !DILocation(line: 843, column: 13, scope: !3123)
!3146 = !DILocation(line: 843, column: 22, scope: !3123)
!3147 = !DILocation(line: 844, column: 22, scope: !3123)
!3148 = !DILocation(line: 845, column: 49, scope: !3123)
!3149 = !DILocation(line: 845, column: 13, scope: !3123)
!3150 = !DILocation(line: 845, column: 30, scope: !3123)
!3151 = !DILocation(line: 846, column: 12, scope: !3123)
!3152 = !DILocation(line: 847, column: 45, scope: !3123)
!3153 = !DILocation(line: 847, column: 13, scope: !3123)
!3154 = !DILocation(line: 847, column: 28, scope: !3123)
!3155 = !DILocation(line: 848, column: 19, scope: !3123)
!3156 = !DILocation(line: 849, column: 3, scope: !3123)
!3157 = distinct !DISubprogram(name: "restore_extension_diagnostics", scope: !3, file: !3, line: 856, type: !3158, scopeLine: 857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3160)
!3158 = !DISubroutineType(types: !3159)
!3159 = !{null, !815}
!3160 = !{!3161}
!3161 = !DILocalVariable(name: "flags", arg: 1, scope: !3157, file: !3, line: 856, type: !815)
!3162 = !DILocation(line: 0, scope: !3157)
!3163 = !DILocation(line: 858, column: 41, scope: !3157)
!3164 = !DILocation(line: 858, column: 33, scope: !3157)
!3165 = !DILocation(line: 858, column: 24, scope: !3157)
!3166 = !DILocation(line: 858, column: 3, scope: !3157)
!3167 = !DILocation(line: 858, column: 13, scope: !3157)
!3168 = !DILocation(line: 858, column: 22, scope: !3157)
!3169 = !DILocation(line: 859, column: 31, scope: !3157)
!3170 = !DILocation(line: 859, column: 37, scope: !3157)
!3171 = !DILocation(line: 859, column: 22, scope: !3157)
!3172 = !DILocation(line: 860, column: 58, scope: !3157)
!3173 = !DILocation(line: 860, column: 64, scope: !3157)
!3174 = !DILocation(line: 860, column: 49, scope: !3157)
!3175 = !DILocation(line: 860, column: 32, scope: !3157)
!3176 = !DILocation(line: 860, column: 13, scope: !3157)
!3177 = !DILocation(line: 860, column: 30, scope: !3157)
!3178 = !DILocation(line: 861, column: 21, scope: !3157)
!3179 = !DILocation(line: 861, column: 27, scope: !3157)
!3180 = !DILocation(line: 861, column: 12, scope: !3157)
!3181 = !DILocation(line: 862, column: 54, scope: !3157)
!3182 = !DILocation(line: 862, column: 60, scope: !3157)
!3183 = !DILocation(line: 862, column: 45, scope: !3157)
!3184 = !DILocation(line: 862, column: 30, scope: !3157)
!3185 = !DILocation(line: 862, column: 13, scope: !3157)
!3186 = !DILocation(line: 862, column: 28, scope: !3157)
!3187 = !DILocation(line: 863, column: 28, scope: !3157)
!3188 = !DILocation(line: 863, column: 34, scope: !3157)
!3189 = !DILocation(line: 863, column: 19, scope: !3157)
!3190 = !DILocation(line: 864, column: 1, scope: !3157)
!3191 = distinct !DISubprogram(name: "c_parser_asm_definition", scope: !3, file: !3, line: 1370, type: !2645, scopeLine: 1371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3192)
!3192 = !{!3193, !3194}
!3193 = !DILocalVariable(name: "parser", arg: 1, scope: !3191, file: !3, line: 1370, type: !1896)
!3194 = !DILocalVariable(name: "asm_str", scope: !3191, file: !3, line: 1372, type: !718)
!3195 = !DILocation(line: 0, scope: !3191)
!3196 = !DILocation(line: 1372, column: 18, scope: !3191)
!3197 = !DILocation(line: 1373, column: 7, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3191, file: !3, line: 1373, column: 7)
!3199 = !DILocation(line: 1373, column: 7, scope: !3191)
!3200 = !DILocation(line: 1374, column: 5, scope: !3198)
!3201 = !DILocation(line: 1375, column: 3, scope: !3191)
!3202 = !DILocation(line: 1376, column: 1, scope: !3191)
!3203 = distinct !DISubprogram(name: "c_parser_objc_class_definition", scope: !3, file: !3, line: 6102, type: !2645, scopeLine: 6103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3204)
!3204 = !{!3205, !3206, !3207, !3208, !3209, !3212, !3213}
!3205 = !DILocalVariable(name: "parser", arg: 1, scope: !3203, file: !3, line: 6102, type: !1896)
!3206 = !DILocalVariable(name: "iface_p", scope: !3203, file: !3, line: 6104, type: !838)
!3207 = !DILocalVariable(name: "id1", scope: !3203, file: !3, line: 6105, type: !718)
!3208 = !DILocalVariable(name: "superclass", scope: !3203, file: !3, line: 6106, type: !718)
!3209 = !DILocalVariable(name: "id2", scope: !3210, file: !3, line: 6123, type: !718)
!3210 = distinct !DILexicalBlock(scope: !3211, file: !3, line: 6122, column: 5)
!3211 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 6121, column: 7)
!3212 = !DILocalVariable(name: "proto", scope: !3210, file: !3, line: 6124, type: !718)
!3213 = !DILocalVariable(name: "proto", scope: !3214, file: !3, line: 6163, type: !718)
!3214 = distinct !DILexicalBlock(scope: !3215, file: !3, line: 6162, column: 5)
!3215 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 6161, column: 7)
!3216 = !DILocation(line: 0, scope: !3203)
!3217 = !DILocation(line: 6107, column: 7, scope: !3218)
!3218 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 6107, column: 7)
!3219 = !DILocation(line: 6107, column: 7, scope: !3203)
!3220 = !DILocation(line: 6109, column: 12, scope: !3221)
!3221 = distinct !DILexicalBlock(scope: !3218, file: !3, line: 6109, column: 12)
!3222 = !DILocation(line: 6109, column: 12, scope: !3218)
!3223 = !DILocation(line: 6112, column: 5, scope: !3221)
!3224 = !DILocation(line: 0, scope: !3218)
!3225 = !DILocation(line: 6113, column: 3, scope: !3203)
!3226 = !DILocation(line: 6114, column: 7, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 6114, column: 7)
!3228 = !DILocation(line: 6114, column: 7, scope: !3203)
!3229 = !DILocation(line: 6116, column: 7, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 6115, column: 5)
!3231 = !DILocation(line: 6117, column: 7, scope: !3230)
!3232 = !DILocation(line: 6119, column: 9, scope: !3203)
!3233 = !DILocation(line: 6119, column: 39, scope: !3203)
!3234 = !DILocation(line: 6120, column: 3, scope: !3203)
!3235 = !DILocation(line: 6121, column: 7, scope: !3211)
!3236 = !DILocation(line: 6121, column: 7, scope: !3203)
!3237 = !DILocation(line: 0, scope: !3210)
!3238 = !DILocation(line: 6125, column: 7, scope: !3210)
!3239 = !DILocation(line: 6126, column: 11, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 6126, column: 11)
!3241 = !DILocation(line: 6126, column: 11, scope: !3210)
!3242 = !DILocation(line: 6128, column: 4, scope: !3243)
!3243 = distinct !DILexicalBlock(scope: !3240, file: !3, line: 6127, column: 2)
!3244 = !DILocation(line: 6129, column: 4, scope: !3243)
!3245 = !DILocation(line: 6130, column: 4, scope: !3243)
!3246 = !DILocation(line: 6132, column: 13, scope: !3210)
!3247 = !DILocation(line: 6132, column: 43, scope: !3210)
!3248 = !DILocation(line: 6133, column: 7, scope: !3210)
!3249 = !DILocation(line: 6134, column: 7, scope: !3210)
!3250 = !DILocation(line: 6135, column: 12, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 6135, column: 11)
!3252 = !DILocation(line: 6135, column: 11, scope: !3210)
!3253 = !DILocation(line: 6137, column: 4, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3251, file: !3, line: 6136, column: 2)
!3255 = !DILocation(line: 6138, column: 4, scope: !3254)
!3256 = !DILocation(line: 6140, column: 11, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 6140, column: 11)
!3258 = !DILocation(line: 6140, column: 11, scope: !3210)
!3259 = !DILocation(line: 6141, column: 10, scope: !3257)
!3260 = !DILocation(line: 6141, column: 2, scope: !3257)
!3261 = !DILocation(line: 6142, column: 7, scope: !3210)
!3262 = !DILocation(line: 6143, column: 7, scope: !3210)
!3263 = !DILocation(line: 6144, column: 7, scope: !3210)
!3264 = !DILocation(line: 6145, column: 7, scope: !3210)
!3265 = !DILocation(line: 6146, column: 7, scope: !3210)
!3266 = !DILocation(line: 6148, column: 7, scope: !3267)
!3267 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 6148, column: 7)
!3268 = !DILocation(line: 6148, column: 7, scope: !3203)
!3269 = !DILocation(line: 6150, column: 7, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 6149, column: 5)
!3271 = !DILocation(line: 6151, column: 11, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 6151, column: 11)
!3273 = !DILocation(line: 6151, column: 11, scope: !3270)
!3274 = !DILocation(line: 6153, column: 4, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 6152, column: 2)
!3276 = !DILocation(line: 6154, column: 4, scope: !3275)
!3277 = !DILocation(line: 6156, column: 20, scope: !3270)
!3278 = !DILocation(line: 6156, column: 50, scope: !3270)
!3279 = !DILocation(line: 6157, column: 7, scope: !3270)
!3280 = !DILocation(line: 6158, column: 5, scope: !3270)
!3281 = !DILocation(line: 0, scope: !3267)
!3282 = !DILocation(line: 6161, column: 7, scope: !3215)
!3283 = !DILocation(line: 6161, column: 7, scope: !3203)
!3284 = !DILocation(line: 0, scope: !3214)
!3285 = !DILocation(line: 6164, column: 11, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3214, file: !3, line: 6164, column: 11)
!3287 = !DILocation(line: 6164, column: 11, scope: !3214)
!3288 = !DILocation(line: 6165, column: 10, scope: !3286)
!3289 = !DILocation(line: 6165, column: 2, scope: !3286)
!3290 = !DILocation(line: 6166, column: 7, scope: !3214)
!3291 = !DILocation(line: 6167, column: 5, scope: !3214)
!3292 = !DILocation(line: 6169, column: 5, scope: !3215)
!3293 = !DILocation(line: 6170, column: 7, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 6170, column: 7)
!3295 = !DILocation(line: 6170, column: 7, scope: !3203)
!3296 = !DILocation(line: 6171, column: 5, scope: !3294)
!3297 = !DILocation(line: 6172, column: 7, scope: !3203)
!3298 = !DILocation(line: 6174, column: 7, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 6173, column: 5)
!3300 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 6172, column: 7)
!3301 = !DILocation(line: 6175, column: 7, scope: !3299)
!3302 = !DILocation(line: 6176, column: 7, scope: !3299)
!3303 = !DILocation(line: 6177, column: 7, scope: !3299)
!3304 = !DILocation(line: 6184, column: 1, scope: !3203)
!3305 = !DILocation(line: 6181, column: 7, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3300, file: !3, line: 6180, column: 5)
!3307 = !DILocation(line: 6182, column: 7, scope: !3306)
!3308 = distinct !DISubprogram(name: "c_parser_objc_class_declaration", scope: !3, file: !3, line: 6275, type: !2645, scopeLine: 6276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3309)
!3309 = !{!3310, !3311, !3312}
!3310 = !DILocalVariable(name: "parser", arg: 1, scope: !3308, file: !3, line: 6275, type: !1896)
!3311 = !DILocalVariable(name: "list", scope: !3308, file: !3, line: 6277, type: !718)
!3312 = !DILocalVariable(name: "id", scope: !3313, file: !3, line: 6284, type: !718)
!3313 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 6283, column: 5)
!3314 = !DILocation(line: 0, scope: !3308)
!3315 = !DILocation(line: 6278, column: 3, scope: !3308)
!3316 = !DILocation(line: 6279, column: 3, scope: !3308)
!3317 = !DILocation(line: 6282, column: 3, scope: !3308)
!3318 = !DILocation(line: 6277, column: 8, scope: !3308)
!3319 = !DILocation(line: 6285, column: 11, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 6285, column: 11)
!3321 = !DILocation(line: 6285, column: 11, scope: !3313)
!3322 = !DILocation(line: 6287, column: 4, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 6286, column: 2)
!3324 = !DILocation(line: 6288, column: 4, scope: !3323)
!3325 = !DILocation(line: 6290, column: 12, scope: !3313)
!3326 = !DILocation(line: 6290, column: 42, scope: !3313)
!3327 = !DILocation(line: 0, scope: !3313)
!3328 = !DILocation(line: 6291, column: 29, scope: !3313)
!3329 = !DILocation(line: 6291, column: 14, scope: !3313)
!3330 = !DILocation(line: 6292, column: 7, scope: !3313)
!3331 = !DILocation(line: 6293, column: 11, scope: !3332)
!3332 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 6293, column: 11)
!3333 = !DILocation(line: 6293, column: 11, scope: !3313)
!3334 = !DILocation(line: 6294, column: 2, scope: !3332)
!3335 = !DILocation(line: 6297, column: 5, scope: !3308)
!3336 = distinct !{!3336, !3317, !3335}
!3337 = !DILocation(line: 6298, column: 3, scope: !3308)
!3338 = !DILocation(line: 6299, column: 3, scope: !3308)
!3339 = !DILocation(line: 6300, column: 1, scope: !3308)
!3340 = distinct !DISubprogram(name: "c_parser_objc_alias_declaration", scope: !3, file: !3, line: 6309, type: !2645, scopeLine: 6310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3341)
!3341 = !{!3342, !3343, !3344}
!3342 = !DILocalVariable(name: "parser", arg: 1, scope: !3340, file: !3, line: 6309, type: !1896)
!3343 = !DILocalVariable(name: "id1", scope: !3340, file: !3, line: 6311, type: !718)
!3344 = !DILocalVariable(name: "id2", scope: !3340, file: !3, line: 6311, type: !718)
!3345 = !DILocation(line: 0, scope: !3340)
!3346 = !DILocation(line: 6312, column: 3, scope: !3340)
!3347 = !DILocation(line: 6313, column: 3, scope: !3340)
!3348 = !DILocation(line: 6314, column: 7, scope: !3349)
!3349 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 6314, column: 7)
!3350 = !DILocation(line: 6314, column: 7, scope: !3340)
!3351 = !DILocation(line: 6316, column: 7, scope: !3352)
!3352 = distinct !DILexicalBlock(scope: !3349, file: !3, line: 6315, column: 5)
!3353 = !DILocation(line: 6317, column: 7, scope: !3352)
!3354 = !DILocation(line: 6318, column: 7, scope: !3352)
!3355 = !DILocation(line: 6320, column: 9, scope: !3340)
!3356 = !DILocation(line: 6320, column: 39, scope: !3340)
!3357 = !DILocation(line: 6321, column: 3, scope: !3340)
!3358 = !DILocation(line: 6322, column: 7, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3340, file: !3, line: 6322, column: 7)
!3360 = !DILocation(line: 6322, column: 7, scope: !3340)
!3361 = !DILocation(line: 6324, column: 7, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 6323, column: 5)
!3363 = !DILocation(line: 6325, column: 7, scope: !3362)
!3364 = !DILocation(line: 6326, column: 7, scope: !3362)
!3365 = !DILocation(line: 6328, column: 9, scope: !3340)
!3366 = !DILocation(line: 6328, column: 39, scope: !3340)
!3367 = !DILocation(line: 6329, column: 3, scope: !3340)
!3368 = !DILocation(line: 6330, column: 3, scope: !3340)
!3369 = !DILocation(line: 6331, column: 3, scope: !3340)
!3370 = !DILocation(line: 6332, column: 1, scope: !3340)
!3371 = distinct !DISubprogram(name: "c_parser_objc_protocol_definition", scope: !3, file: !3, line: 6346, type: !2645, scopeLine: 6347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3372)
!3372 = !{!3373, !3374, !3377, !3379, !3381}
!3373 = !DILocalVariable(name: "parser", arg: 1, scope: !3371, file: !3, line: 6346, type: !1896)
!3374 = !DILocalVariable(name: "list", scope: !3375, file: !3, line: 6358, type: !718)
!3375 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 6357, column: 5)
!3376 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 6355, column: 7)
!3377 = !DILocalVariable(name: "id", scope: !3378, file: !3, line: 6363, type: !718)
!3378 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 6362, column: 2)
!3379 = !DILocalVariable(name: "id", scope: !3380, file: !3, line: 6382, type: !718)
!3380 = distinct !DILexicalBlock(scope: !3376, file: !3, line: 6381, column: 5)
!3381 = !DILocalVariable(name: "proto", scope: !3380, file: !3, line: 6383, type: !718)
!3382 = !DILocation(line: 0, scope: !3371)
!3383 = !DILocation(line: 6348, column: 3, scope: !3371)
!3384 = !DILocation(line: 6349, column: 3, scope: !3371)
!3385 = !DILocation(line: 6350, column: 7, scope: !3386)
!3386 = distinct !DILexicalBlock(scope: !3371, file: !3, line: 6350, column: 7)
!3387 = !DILocation(line: 6350, column: 7, scope: !3371)
!3388 = !DILocation(line: 6352, column: 7, scope: !3389)
!3389 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 6351, column: 5)
!3390 = !DILocation(line: 6353, column: 7, scope: !3389)
!3391 = !DILocation(line: 6355, column: 7, scope: !3376)
!3392 = !DILocation(line: 6355, column: 41, scope: !3376)
!3393 = !DILocation(line: 6355, column: 46, scope: !3376)
!3394 = !DILocation(line: 6356, column: 7, scope: !3376)
!3395 = !DILocation(line: 6356, column: 10, scope: !3376)
!3396 = !DILocation(line: 6356, column: 44, scope: !3376)
!3397 = !DILocation(line: 6356, column: 49, scope: !3376)
!3398 = !DILocation(line: 6355, column: 7, scope: !3371)
!3399 = !DILocation(line: 0, scope: !3375)
!3400 = !DILocation(line: 6361, column: 7, scope: !3375)
!3401 = !DILocation(line: 6358, column: 12, scope: !3375)
!3402 = !DILocation(line: 6364, column: 8, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 6364, column: 8)
!3404 = !DILocation(line: 6364, column: 8, scope: !3378)
!3405 = !DILocation(line: 6366, column: 8, scope: !3406)
!3406 = distinct !DILexicalBlock(scope: !3403, file: !3, line: 6365, column: 6)
!3407 = !DILocation(line: 6367, column: 8, scope: !3406)
!3408 = !DILocation(line: 6369, column: 9, scope: !3378)
!3409 = !DILocation(line: 6369, column: 39, scope: !3378)
!3410 = !DILocation(line: 0, scope: !3378)
!3411 = !DILocation(line: 6370, column: 26, scope: !3378)
!3412 = !DILocation(line: 6370, column: 11, scope: !3378)
!3413 = !DILocation(line: 6371, column: 4, scope: !3378)
!3414 = !DILocation(line: 6372, column: 8, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 6372, column: 8)
!3416 = !DILocation(line: 6372, column: 8, scope: !3378)
!3417 = !DILocation(line: 6373, column: 6, scope: !3415)
!3418 = !DILocation(line: 6376, column: 2, scope: !3375)
!3419 = distinct !{!3419, !3400, !3418}
!3420 = !DILocation(line: 6377, column: 7, scope: !3375)
!3421 = !DILocation(line: 6378, column: 7, scope: !3375)
!3422 = !DILocation(line: 6379, column: 5, scope: !3375)
!3423 = !DILocation(line: 6382, column: 17, scope: !3380)
!3424 = !DILocation(line: 6382, column: 47, scope: !3380)
!3425 = !DILocation(line: 0, scope: !3380)
!3426 = !DILocation(line: 6384, column: 7, scope: !3380)
!3427 = !DILocation(line: 6385, column: 11, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 6385, column: 11)
!3429 = !DILocation(line: 6385, column: 11, scope: !3380)
!3430 = !DILocation(line: 6386, column: 10, scope: !3428)
!3431 = !DILocation(line: 6386, column: 2, scope: !3428)
!3432 = !DILocation(line: 6387, column: 15, scope: !3380)
!3433 = !DILocation(line: 6387, column: 31, scope: !3380)
!3434 = !DILocation(line: 6388, column: 7, scope: !3380)
!3435 = !DILocation(line: 6389, column: 7, scope: !3380)
!3436 = !DILocation(line: 6390, column: 7, scope: !3380)
!3437 = !DILocation(line: 6391, column: 31, scope: !3380)
!3438 = !DILocation(line: 6392, column: 7, scope: !3380)
!3439 = !DILocation(line: 6394, column: 1, scope: !3371)
!3440 = distinct !DISubprogram(name: "c_parser_pragma", scope: !3, file: !3, line: 6975, type: !3441, scopeLine: 6976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3443)
!3441 = !DISubroutineType(types: !3442)
!3442 = !{!838, !1896, !1957}
!3443 = !{!3444, !3445, !3446, !3447}
!3444 = !DILocalVariable(name: "parser", arg: 1, scope: !3440, file: !3, line: 6975, type: !1896)
!3445 = !DILocalVariable(name: "context", arg: 2, scope: !3440, file: !3, line: 6975, type: !1957)
!3446 = !DILocalVariable(name: "id", scope: !3440, file: !3, line: 6977, type: !7)
!3447 = !DILabel(scope: !3448, name: "bad_stmt", file: !3, line: 7038)
!3448 = distinct !DILexicalBlock(scope: !3449, file: !3, line: 7037, column: 6)
!3449 = distinct !DILexicalBlock(scope: !3450, file: !3, line: 7036, column: 8)
!3450 = distinct !DILexicalBlock(scope: !3451, file: !3, line: 7035, column: 2)
!3451 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 7034, column: 11)
!3452 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 6983, column: 5)
!3453 = !DILocation(line: 0, scope: !3440)
!3454 = !DILocation(line: 6979, column: 8, scope: !3440)
!3455 = !DILocation(line: 6979, column: 38, scope: !3440)
!3456 = !DILocation(line: 6980, column: 3, scope: !3440)
!3457 = !DILocation(line: 6982, column: 3, scope: !3440)
!3458 = !DILocation(line: 6985, column: 11, scope: !3452)
!3459 = !DILocation(line: 6988, column: 6, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3461, file: !3, line: 6987, column: 8)
!3461 = distinct !DILexicalBlock(scope: !3462, file: !3, line: 6986, column: 2)
!3462 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 6985, column: 11)
!3463 = !DILocation(line: 6992, column: 7, scope: !3452)
!3464 = !DILocation(line: 6993, column: 7, scope: !3452)
!3465 = !DILocation(line: 6996, column: 11, scope: !3452)
!3466 = !DILocation(line: 6999, column: 6, scope: !3467)
!3467 = distinct !DILexicalBlock(scope: !3468, file: !3, line: 6998, column: 8)
!3468 = distinct !DILexicalBlock(scope: !3469, file: !3, line: 6997, column: 2)
!3469 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 6996, column: 11)
!3470 = !DILocation(line: 7003, column: 7, scope: !3452)
!3471 = !DILocation(line: 7004, column: 7, scope: !3452)
!3472 = !DILocation(line: 7007, column: 11, scope: !3452)
!3473 = !DILocation(line: 7010, column: 6, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 7009, column: 8)
!3475 = distinct !DILexicalBlock(scope: !3476, file: !3, line: 7008, column: 2)
!3476 = distinct !DILexicalBlock(scope: !3452, file: !3, line: 7007, column: 11)
!3477 = !DILocation(line: 7014, column: 7, scope: !3452)
!3478 = !DILocation(line: 7015, column: 7, scope: !3452)
!3479 = !DILocation(line: 7018, column: 7, scope: !3452)
!3480 = !DILocation(line: 7019, column: 7, scope: !3452)
!3481 = !DILocation(line: 7022, column: 17, scope: !3452)
!3482 = !DILocation(line: 7022, column: 47, scope: !3452)
!3483 = !DILocation(line: 7022, column: 7, scope: !3452)
!3484 = !DILocation(line: 7025, column: 7, scope: !3452)
!3485 = !DILocation(line: 7026, column: 7, scope: !3452)
!3486 = !DILocation(line: 7029, column: 7, scope: !3452)
!3487 = !DILocation(line: 7030, column: 7, scope: !3452)
!3488 = !DILocation(line: 7031, column: 7, scope: !3452)
!3489 = !DILocation(line: 7034, column: 14, scope: !3451)
!3490 = !DILocation(line: 7034, column: 11, scope: !3452)
!3491 = !DILocation(line: 7036, column: 16, scope: !3449)
!3492 = !DILocation(line: 7036, column: 8, scope: !3450)
!3493 = !DILocation(line: 7038, column: 6, scope: !3448)
!3494 = !DILocation(line: 7039, column: 8, scope: !3448)
!3495 = !DILocation(line: 7040, column: 8, scope: !3448)
!3496 = !DILocation(line: 7041, column: 8, scope: !3448)
!3497 = !DILocation(line: 7043, column: 4, scope: !3450)
!3498 = !DILocation(line: 7044, column: 4, scope: !3450)
!3499 = !DILocation(line: 7049, column: 3, scope: !3440)
!3500 = !DILocation(line: 7050, column: 3, scope: !3440)
!3501 = !DILocation(line: 7055, column: 11, scope: !3440)
!3502 = !DILocation(line: 7055, column: 17, scope: !3440)
!3503 = !DILocation(line: 7056, column: 3, scope: !3440)
!3504 = !DILocation(line: 7058, column: 3, scope: !3440)
!3505 = !DILocation(line: 7059, column: 1, scope: !3440)
!3506 = distinct !DISubprogram(name: "c_parser_objc_method_definition", scope: !3, file: !3, line: 6429, type: !2645, scopeLine: 6430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3507)
!3507 = !{!3508, !3509, !3510}
!3508 = !DILocalVariable(name: "parser", arg: 1, scope: !3506, file: !3, line: 6429, type: !1896)
!3509 = !DILocalVariable(name: "type", scope: !3506, file: !3, line: 6431, type: !190)
!3510 = !DILocalVariable(name: "decl", scope: !3506, file: !3, line: 6432, type: !718)
!3511 = !DILocation(line: 0, scope: !3506)
!3512 = !DILocation(line: 6431, column: 25, scope: !3506)
!3513 = !DILocation(line: 6433, column: 3, scope: !3506)
!3514 = !DILocation(line: 6434, column: 11, scope: !3506)
!3515 = !DILocation(line: 6434, column: 27, scope: !3506)
!3516 = !DILocation(line: 6435, column: 10, scope: !3506)
!3517 = !DILocation(line: 6436, column: 7, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 6436, column: 7)
!3519 = !DILocation(line: 6436, column: 7, scope: !3506)
!3520 = !DILocation(line: 6438, column: 7, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3518, file: !3, line: 6437, column: 5)
!3522 = !DILocation(line: 6439, column: 16, scope: !3521)
!3523 = !DILocation(line: 6439, column: 46, scope: !3521)
!3524 = !DILocation(line: 6439, column: 7, scope: !3521)
!3525 = !DILocation(line: 6441, column: 5, scope: !3521)
!3526 = !DILocation(line: 6442, column: 8, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3506, file: !3, line: 6442, column: 7)
!3528 = !DILocation(line: 6442, column: 7, scope: !3506)
!3529 = !DILocation(line: 6444, column: 7, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 6443, column: 5)
!3531 = !DILocation(line: 6445, column: 7, scope: !3530)
!3532 = !DILocation(line: 6447, column: 27, scope: !3506)
!3533 = !DILocation(line: 6448, column: 3, scope: !3506)
!3534 = !DILocation(line: 6449, column: 13, scope: !3506)
!3535 = !DILocation(line: 6449, column: 3, scope: !3506)
!3536 = !DILocation(line: 6450, column: 34, scope: !3506)
!3537 = !DILocation(line: 6450, column: 3, scope: !3506)
!3538 = !DILocation(line: 6451, column: 1, scope: !3506)
!3539 = distinct !DISubprogram(name: "c_parser_declaration_or_fndef", scope: !3, file: !3, line: 1168, type: !3540, scopeLine: 1170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3542)
!3540 = !DISubroutineType(types: !3541)
!3541 = !{null, !1896, !838, !838, !838, !838}
!3542 = !{!3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3555, !3556, !3557, !3560, !3561, !3564, !3565, !3566, !3568}
!3543 = !DILocalVariable(name: "parser", arg: 1, scope: !3539, file: !3, line: 1168, type: !1896)
!3544 = !DILocalVariable(name: "fndef_ok", arg: 2, scope: !3539, file: !3, line: 1168, type: !838)
!3545 = !DILocalVariable(name: "empty_ok", arg: 3, scope: !3539, file: !3, line: 1168, type: !838)
!3546 = !DILocalVariable(name: "nested", arg: 4, scope: !3539, file: !3, line: 1169, type: !838)
!3547 = !DILocalVariable(name: "start_attr_ok", arg: 5, scope: !3539, file: !3, line: 1169, type: !838)
!3548 = !DILocalVariable(name: "specs", scope: !3539, file: !3, line: 1171, type: !2015)
!3549 = !DILocalVariable(name: "prefix_attrs", scope: !3539, file: !3, line: 1172, type: !718)
!3550 = !DILocalVariable(name: "all_prefix_attrs", scope: !3539, file: !3, line: 1173, type: !718)
!3551 = !DILocalVariable(name: "diagnosed_no_specs", scope: !3539, file: !3, line: 1174, type: !838)
!3552 = !DILocalVariable(name: "here", scope: !3539, file: !3, line: 1175, type: !846)
!3553 = !DILocalVariable(name: "declarator", scope: !3554, file: !3, line: 1209, type: !2048)
!3554 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 1208, column: 5)
!3555 = !DILocalVariable(name: "dummy", scope: !3554, file: !3, line: 1210, type: !838)
!3556 = !DILocalVariable(name: "fnbody", scope: !3554, file: !3, line: 1211, type: !718)
!3557 = !DILocalVariable(name: "asm_name", scope: !3558, file: !3, line: 1229, type: !718)
!3558 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1228, column: 2)
!3559 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1223, column: 11)
!3560 = !DILocalVariable(name: "postfix_attrs", scope: !3558, file: !3, line: 1230, type: !718)
!3561 = !DILocalVariable(name: "d", scope: !3562, file: !3, line: 1245, type: !718)
!3562 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 1244, column: 6)
!3563 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 1243, column: 8)
!3564 = !DILocalVariable(name: "init", scope: !3562, file: !3, line: 1246, type: !715)
!3565 = !DILocalVariable(name: "init_loc", scope: !3562, file: !3, line: 1247, type: !846)
!3566 = !DILocalVariable(name: "d", scope: !3567, file: !3, line: 1268, type: !718)
!3567 = distinct !DILexicalBlock(scope: !3563, file: !3, line: 1267, column: 6)
!3568 = !DILocalVariable(name: "decl", scope: !3569, file: !3, line: 1342, type: !718)
!3569 = distinct !DILexicalBlock(scope: !3570, file: !3, line: 1341, column: 2)
!3570 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1340, column: 11)
!3571 = !DILocation(line: 0, scope: !3539)
!3572 = !DILocation(line: 1175, column: 21, scope: !3539)
!3573 = !DILocation(line: 1175, column: 51, scope: !3539)
!3574 = !DILocation(line: 1177, column: 11, scope: !3539)
!3575 = !DILocation(line: 1178, column: 3, scope: !3539)
!3576 = !DILocation(line: 1179, column: 15, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 1179, column: 7)
!3578 = !DILocation(line: 1179, column: 7, scope: !3577)
!3579 = !DILocation(line: 1179, column: 7, scope: !3539)
!3580 = !DILocation(line: 1181, column: 7, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3577, file: !3, line: 1180, column: 5)
!3582 = !DILocation(line: 1182, column: 7, scope: !3581)
!3583 = !DILocation(line: 1184, column: 7, scope: !3584)
!3584 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 1184, column: 7)
!3585 = !DILocation(line: 1184, column: 14, scope: !3584)
!3586 = !DILocation(line: 1184, column: 25, scope: !3584)
!3587 = !DILocation(line: 1184, column: 18, scope: !3584)
!3588 = !DILocation(line: 1184, column: 7, scope: !3539)
!3589 = !DILocation(line: 1186, column: 7, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3584, file: !3, line: 1185, column: 5)
!3591 = !DILocation(line: 1187, column: 7, scope: !3590)
!3592 = !DILocation(line: 1188, column: 7, scope: !3590)
!3593 = !DILocation(line: 1190, column: 3, scope: !3539)
!3594 = !DILocation(line: 1191, column: 7, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 1191, column: 7)
!3596 = !DILocation(line: 1191, column: 7, scope: !3539)
!3597 = !DILocation(line: 1193, column: 11, scope: !3598)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 1193, column: 11)
!3599 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 1192, column: 5)
!3600 = !DILocation(line: 1193, column: 11, scope: !3599)
!3601 = !DILocation(line: 1194, column: 2, scope: !3598)
!3602 = !DILocation(line: 1197, column: 4, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 1196, column: 2)
!3604 = !DILocation(line: 1198, column: 4, scope: !3603)
!3605 = !DILocation(line: 1200, column: 7, scope: !3599)
!3606 = !DILocation(line: 1201, column: 7, scope: !3599)
!3607 = !DILocation(line: 1203, column: 3, scope: !3539)
!3608 = !DILocation(line: 1204, column: 25, scope: !3539)
!3609 = !DILocation(line: 1206, column: 16, scope: !3539)
!3610 = !DILocation(line: 0, scope: !3554)
!3611 = !DILocation(line: 0, scope: !3562)
!3612 = !DILocation(line: 0, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 1260, column: 3)
!3614 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1259, column: 12)
!3615 = !DILocation(line: 1207, column: 3, scope: !3539)
!3616 = !DILocation(line: 1205, column: 20, scope: !3539)
!3617 = !DILocation(line: 1174, column: 8, scope: !3539)
!3618 = !DILocation(line: 1210, column: 7, scope: !3554)
!3619 = !DILocation(line: 1210, column: 12, scope: !3554)
!3620 = !DILocation(line: 1216, column: 56, scope: !3554)
!3621 = !DILocation(line: 1216, column: 20, scope: !3554)
!3622 = !DILocation(line: 1218, column: 22, scope: !3623)
!3623 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1218, column: 11)
!3624 = !DILocation(line: 1218, column: 11, scope: !3554)
!3625 = !DILocation(line: 1220, column: 4, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3623, file: !3, line: 1219, column: 2)
!3627 = !DILocation(line: 1221, column: 4, scope: !3626)
!3628 = !DILocation(line: 1223, column: 11, scope: !3559)
!3629 = !DILocation(line: 1224, column: 4, scope: !3559)
!3630 = !DILocation(line: 1224, column: 7, scope: !3559)
!3631 = !DILocation(line: 1225, column: 4, scope: !3559)
!3632 = !DILocation(line: 1225, column: 7, scope: !3559)
!3633 = !DILocation(line: 1226, column: 4, scope: !3559)
!3634 = !DILocation(line: 1226, column: 7, scope: !3559)
!3635 = !DILocation(line: 1227, column: 4, scope: !3559)
!3636 = !DILocation(line: 1227, column: 7, scope: !3559)
!3637 = !DILocation(line: 1223, column: 11, scope: !3554)
!3638 = !DILocation(line: 0, scope: !3558)
!3639 = !DILocation(line: 1231, column: 9, scope: !3640)
!3640 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 1231, column: 8)
!3641 = !DILocation(line: 1231, column: 28, scope: !3640)
!3642 = !DILocation(line: 1231, column: 39, scope: !3640)
!3643 = !DILocation(line: 1231, column: 32, scope: !3640)
!3644 = !DILocation(line: 1231, column: 8, scope: !3558)
!3645 = !DILocation(line: 1234, column: 8, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3640, file: !3, line: 1232, column: 6)
!3647 = !DILocation(line: 1235, column: 6, scope: !3646)
!3648 = !DILocation(line: 1239, column: 8, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 1239, column: 8)
!3650 = !DILocation(line: 1239, column: 8, scope: !3558)
!3651 = !DILocation(line: 1240, column: 17, scope: !3649)
!3652 = !DILocation(line: 1240, column: 6, scope: !3649)
!3653 = !DILocation(line: 1241, column: 8, scope: !3654)
!3654 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 1241, column: 8)
!3655 = !DILocation(line: 1241, column: 8, scope: !3558)
!3656 = !DILocation(line: 1242, column: 22, scope: !3654)
!3657 = !DILocation(line: 1242, column: 6, scope: !3654)
!3658 = !DILocation(line: 1243, column: 8, scope: !3563)
!3659 = !DILocation(line: 1243, column: 8, scope: !3558)
!3660 = !DILocation(line: 1246, column: 8, scope: !3562)
!3661 = !DILocation(line: 1248, column: 8, scope: !3562)
!3662 = !DILocation(line: 1252, column: 10, scope: !3562)
!3663 = !DILocation(line: 1251, column: 12, scope: !3562)
!3664 = !DILocation(line: 1253, column: 13, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3562, file: !3, line: 1253, column: 12)
!3666 = !DILocation(line: 1254, column: 7, scope: !3665)
!3667 = !DILocation(line: 1253, column: 12, scope: !3562)
!3668 = !DILocation(line: 1255, column: 33, scope: !3562)
!3669 = !DILocation(line: 1255, column: 8, scope: !3562)
!3670 = !DILocation(line: 1256, column: 19, scope: !3562)
!3671 = !DILocation(line: 1256, column: 49, scope: !3562)
!3672 = !DILocation(line: 1257, column: 15, scope: !3562)
!3673 = !DILocation(line: 1258, column: 8, scope: !3562)
!3674 = !DILocation(line: 1259, column: 17, scope: !3614)
!3675 = !DILocation(line: 1259, column: 14, scope: !3614)
!3676 = !DILocation(line: 1259, column: 12, scope: !3562)
!3677 = !DILocation(line: 1261, column: 29, scope: !3613)
!3678 = !DILocation(line: 1261, column: 5, scope: !3613)
!3679 = !DILocation(line: 1262, column: 36, scope: !3613)
!3680 = !DILocation(line: 1263, column: 22, scope: !3613)
!3681 = !DILocation(line: 1262, column: 5, scope: !3613)
!3682 = !DILocation(line: 1264, column: 3, scope: !3613)
!3683 = !DILocation(line: 1265, column: 6, scope: !3563)
!3684 = !DILocation(line: 1265, column: 6, scope: !3562)
!3685 = !DILocation(line: 1269, column: 8, scope: !3567)
!3686 = !DILocation(line: 1268, column: 17, scope: !3567)
!3687 = !DILocation(line: 0, scope: !3567)
!3688 = !DILocation(line: 1271, column: 12, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3567, file: !3, line: 1271, column: 12)
!3690 = !DILocation(line: 1271, column: 12, scope: !3567)
!3691 = !DILocation(line: 1272, column: 3, scope: !3689)
!3692 = !DILocation(line: 1275, column: 8, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3558, file: !3, line: 1275, column: 8)
!3694 = !DILocation(line: 1275, column: 8, scope: !3558)
!3695 = !DILocation(line: 1277, column: 8, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 1276, column: 6)
!3697 = !DILocation(line: 1278, column: 12, scope: !3698)
!3698 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 1278, column: 12)
!3699 = !DILocation(line: 1278, column: 12, scope: !3696)
!3700 = distinct !{!3700, !3615, !3701}
!3701 = !DILocation(line: 1359, column: 5, scope: !3539)
!3702 = !DILocation(line: 1279, column: 31, scope: !3698)
!3703 = !DILocation(line: 1279, column: 22, scope: !3698)
!3704 = !DILocation(line: 1279, column: 3, scope: !3698)
!3705 = !DILocation(line: 1285, column: 13, scope: !3706)
!3706 = distinct !DILexicalBlock(scope: !3693, file: !3, line: 1285, column: 13)
!3707 = !DILocation(line: 1285, column: 13, scope: !3693)
!3708 = !DILocation(line: 1287, column: 8, scope: !3709)
!3709 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 1286, column: 6)
!3710 = !DILocation(line: 1288, column: 8, scope: !3709)
!3711 = !DILocation(line: 1292, column: 8, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3706, file: !3, line: 1291, column: 6)
!3713 = !DILocation(line: 1293, column: 8, scope: !3712)
!3714 = !DILocation(line: 1294, column: 8, scope: !3712)
!3715 = !DILocation(line: 1297, column: 17, scope: !3716)
!3716 = distinct !DILexicalBlock(scope: !3559, file: !3, line: 1297, column: 16)
!3717 = !DILocation(line: 1297, column: 16, scope: !3559)
!3718 = !DILocation(line: 1299, column: 4, scope: !3719)
!3719 = distinct !DILexicalBlock(scope: !3716, file: !3, line: 1298, column: 2)
!3720 = !DILocation(line: 1301, column: 4, scope: !3719)
!3721 = !DILocation(line: 1302, column: 4, scope: !3719)
!3722 = !DILocation(line: 1305, column: 11, scope: !3554)
!3723 = !DILocation(line: 1307, column: 4, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1306, column: 2)
!3725 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1305, column: 11)
!3726 = !DILocation(line: 1308, column: 4, scope: !3724)
!3727 = !DILocation(line: 1309, column: 2, scope: !3724)
!3728 = !DILocation(line: 1310, column: 12, scope: !3729)
!3729 = distinct !DILexicalBlock(scope: !3554, file: !3, line: 1310, column: 11)
!3730 = !DILocation(line: 1310, column: 11, scope: !3554)
!3731 = !DILocation(line: 1333, column: 7, scope: !3554)
!3732 = !DILocation(line: 1315, column: 4, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 1311, column: 2)
!3734 = !DILocation(line: 1317, column: 8, scope: !3733)
!3735 = !DILocation(line: 1318, column: 6, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3733, file: !3, line: 1317, column: 8)
!3737 = !DILocation(line: 1333, column: 14, scope: !3554)
!3738 = !DILocation(line: 1334, column: 7, scope: !3554)
!3739 = !DILocation(line: 1334, column: 10, scope: !3554)
!3740 = !DILocation(line: 1335, column: 2, scope: !3554)
!3741 = distinct !{!3741, !3731, !3742}
!3742 = !DILocation(line: 1335, column: 66, scope: !3554)
!3743 = !DILocation(line: 1336, column: 7, scope: !3554)
!3744 = !DILocation(line: 1338, column: 4, scope: !3554)
!3745 = !DILocation(line: 1338, column: 34, scope: !3554)
!3746 = !DILocation(line: 1337, column: 7, scope: !3554)
!3747 = !DILocation(line: 1337, column: 53, scope: !3554)
!3748 = !DILocation(line: 1338, column: 2, scope: !3554)
!3749 = !DILocation(line: 1339, column: 16, scope: !3554)
!3750 = !DILocation(line: 1340, column: 11, scope: !3554)
!3751 = !DILocation(line: 1342, column: 16, scope: !3569)
!3752 = !DILocation(line: 0, scope: !3569)
!3753 = !DILocation(line: 1347, column: 4, scope: !3569)
!3754 = !DILocation(line: 1347, column: 29, scope: !3569)
!3755 = !DILocation(line: 1348, column: 4, scope: !3569)
!3756 = !DILocation(line: 1349, column: 4, scope: !3569)
!3757 = !DILocation(line: 1350, column: 4, scope: !3569)
!3758 = !DILocation(line: 1351, column: 26, scope: !3569)
!3759 = !DILocation(line: 1351, column: 14, scope: !3569)
!3760 = !DILocation(line: 1351, column: 4, scope: !3569)
!3761 = !DILocation(line: 1352, column: 2, scope: !3569)
!3762 = !DILocation(line: 1355, column: 4, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3570, file: !3, line: 1354, column: 2)
!3764 = !DILocation(line: 1356, column: 4, scope: !3763)
!3765 = !DILocation(line: 1360, column: 1, scope: !3539)
!3766 = distinct !DISubprogram(name: "c_parser_simple_asm_expr", scope: !3, file: !3, line: 2780, type: !3767, scopeLine: 2781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3769)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!718, !1896}
!3769 = !{!3770, !3771}
!3770 = !DILocalVariable(name: "parser", arg: 1, scope: !3766, file: !3, line: 2780, type: !1896)
!3771 = !DILocalVariable(name: "str", scope: !3766, file: !3, line: 2782, type: !718)
!3772 = !DILocation(line: 0, scope: !3766)
!3773 = !DILocation(line: 2783, column: 3, scope: !3766)
!3774 = !DILocation(line: 2786, column: 11, scope: !3766)
!3775 = !DILocation(line: 2786, column: 35, scope: !3766)
!3776 = !DILocation(line: 2787, column: 3, scope: !3766)
!3777 = !DILocation(line: 2788, column: 8, scope: !3778)
!3778 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 2788, column: 7)
!3779 = !DILocation(line: 2788, column: 7, scope: !3766)
!3780 = !DILocation(line: 2790, column: 39, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3778, file: !3, line: 2789, column: 5)
!3782 = !DILocation(line: 2791, column: 7, scope: !3781)
!3783 = !DILocation(line: 2793, column: 9, scope: !3766)
!3784 = !DILocation(line: 2794, column: 35, scope: !3766)
!3785 = !DILocation(line: 2795, column: 8, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 2795, column: 7)
!3787 = !DILocation(line: 2795, column: 7, scope: !3766)
!3788 = !DILocation(line: 2797, column: 7, scope: !3789)
!3789 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 2796, column: 5)
!3790 = !DILocation(line: 2798, column: 7, scope: !3789)
!3791 = !DILocation(line: 2801, column: 1, scope: !3766)
!3792 = distinct !DISubprogram(name: "c_parser_skip_until_found", scope: !3, file: !3, line: 648, type: !3793, scopeLine: 651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3795)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{null, !1896, !397, !922}
!3795 = !{!3796, !3797, !3798, !3799, !3800}
!3796 = !DILocalVariable(name: "parser", arg: 1, scope: !3792, file: !3, line: 648, type: !1896)
!3797 = !DILocalVariable(name: "type", arg: 2, scope: !3792, file: !3, line: 649, type: !397)
!3798 = !DILocalVariable(name: "msgid", arg: 3, scope: !3792, file: !3, line: 650, type: !922)
!3799 = !DILocalVariable(name: "nesting_depth", scope: !3792, file: !3, line: 652, type: !7)
!3800 = !DILocalVariable(name: "token", scope: !3801, file: !3, line: 661, type: !2610)
!3801 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 659, column: 5)
!3802 = !DILocation(line: 0, scope: !3792)
!3803 = !DILocation(line: 654, column: 7, scope: !3804)
!3804 = distinct !DILexicalBlock(scope: !3792, file: !3, line: 654, column: 7)
!3805 = !DILocation(line: 654, column: 7, scope: !3792)
!3806 = !DILocation(line: 0, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 672, column: 11)
!3808 = !DILocation(line: 658, column: 3, scope: !3792)
!3809 = !DILocation(line: 652, column: 12, scope: !3792)
!3810 = !DILocation(line: 661, column: 24, scope: !3801)
!3811 = !DILocation(line: 0, scope: !3801)
!3812 = !DILocation(line: 663, column: 18, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 663, column: 11)
!3814 = !DILocation(line: 663, column: 23, scope: !3813)
!3815 = !DILocation(line: 663, column: 35, scope: !3813)
!3816 = !DILocation(line: 663, column: 31, scope: !3813)
!3817 = !DILocation(line: 665, column: 4, scope: !3818)
!3818 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 664, column: 2)
!3819 = !DILocation(line: 666, column: 4, scope: !3818)
!3820 = !DILocation(line: 670, column: 23, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 670, column: 11)
!3822 = !DILocation(line: 670, column: 11, scope: !3801)
!3823 = !DILocation(line: 672, column: 23, scope: !3807)
!3824 = !DILocation(line: 672, column: 41, scope: !3807)
!3825 = !DILocation(line: 672, column: 52, scope: !3807)
!3826 = !DILocation(line: 672, column: 44, scope: !3807)
!3827 = !DILocation(line: 672, column: 11, scope: !3801)
!3828 = !DILocation(line: 674, column: 23, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3801, file: !3, line: 674, column: 11)
!3830 = !DILocation(line: 675, column: 4, scope: !3829)
!3831 = !DILocation(line: 675, column: 19, scope: !3829)
!3832 = !DILocation(line: 676, column: 4, scope: !3829)
!3833 = !DILocation(line: 676, column: 19, scope: !3829)
!3834 = !DILocation(line: 674, column: 11, scope: !3801)
!3835 = !DILocation(line: 677, column: 2, scope: !3829)
!3836 = !DILocation(line: 678, column: 28, scope: !3837)
!3837 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 678, column: 16)
!3838 = !DILocation(line: 679, column: 9, scope: !3837)
!3839 = !DILocation(line: 679, column: 24, scope: !3837)
!3840 = !DILocation(line: 680, column: 9, scope: !3837)
!3841 = !DILocation(line: 680, column: 24, scope: !3837)
!3842 = !DILocation(line: 678, column: 16, scope: !3829)
!3843 = !DILocation(line: 682, column: 21, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 682, column: 8)
!3845 = distinct !DILexicalBlock(scope: !3837, file: !3, line: 681, column: 2)
!3846 = !DILocation(line: 682, column: 24, scope: !3844)
!3847 = !DILocation(line: 682, column: 8, scope: !3845)
!3848 = !DILocation(line: 0, scope: !3829)
!3849 = !DILocation(line: 686, column: 7, scope: !3801)
!3850 = !DILocation(line: 687, column: 5, scope: !3792)
!3851 = distinct !{!3851, !3808, !3850}
!3852 = !DILocation(line: 688, column: 17, scope: !3792)
!3853 = !DILocation(line: 689, column: 1, scope: !3792)
!3854 = distinct !DISubprogram(name: "c_parser_next_token_is_keyword", scope: !3, file: !3, line: 351, type: !3855, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3857)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{!838, !1896, !477}
!3857 = !{!3858, !3859}
!3858 = !DILocalVariable(name: "parser", arg: 1, scope: !3854, file: !3, line: 351, type: !1896)
!3859 = !DILocalVariable(name: "keyword", arg: 2, scope: !3854, file: !3, line: 351, type: !477)
!3860 = !DILocation(line: 0, scope: !3854)
!3861 = !DILocation(line: 353, column: 10, scope: !3854)
!3862 = !DILocation(line: 353, column: 40, scope: !3854)
!3863 = !DILocation(line: 353, column: 48, scope: !3854)
!3864 = !DILocation(line: 353, column: 3, scope: !3854)
!3865 = distinct !DISubprogram(name: "c_parser_asm_string_literal", scope: !3, file: !3, line: 2748, type: !3767, scopeLine: 2749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3866)
!3866 = !{!3867, !3868}
!3867 = !DILocalVariable(name: "parser", arg: 1, scope: !3865, file: !3, line: 2748, type: !1896)
!3868 = !DILocalVariable(name: "str", scope: !3865, file: !3, line: 2750, type: !718)
!3869 = !DILocation(line: 0, scope: !3865)
!3870 = !DILocation(line: 2751, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3865, file: !3, line: 2751, column: 7)
!3872 = !DILocation(line: 2751, column: 7, scope: !3865)
!3873 = !DILocation(line: 2753, column: 13, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 2752, column: 5)
!3875 = !DILocation(line: 2753, column: 43, scope: !3874)
!3876 = !DILocation(line: 2754, column: 7, scope: !3874)
!3877 = !DILocation(line: 2755, column: 5, scope: !3874)
!3878 = !DILocation(line: 2756, column: 12, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3871, file: !3, line: 2756, column: 12)
!3880 = !DILocation(line: 2756, column: 12, scope: !3871)
!3881 = !DILocation(line: 2758, column: 17, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3879, file: !3, line: 2757, column: 5)
!3883 = !DILocation(line: 2758, column: 47, scope: !3882)
!3884 = !DILocation(line: 2758, column: 7, scope: !3882)
!3885 = !DILocation(line: 2760, column: 13, scope: !3882)
!3886 = !DILocation(line: 2761, column: 7, scope: !3882)
!3887 = !DILocation(line: 2762, column: 5, scope: !3882)
!3888 = !DILocation(line: 2765, column: 7, scope: !3889)
!3889 = distinct !DILexicalBlock(scope: !3879, file: !3, line: 2764, column: 5)
!3890 = !DILocation(line: 0, scope: !3871)
!3891 = !DILocation(line: 2768, column: 3, scope: !3865)
!3892 = distinct !DISubprogram(name: "c_parser_objc_protocol_refs", scope: !3, file: !3, line: 6672, type: !3767, scopeLine: 6673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3893)
!3893 = !{!3894, !3895, !3896}
!3894 = !DILocalVariable(name: "parser", arg: 1, scope: !3892, file: !3, line: 6672, type: !1896)
!3895 = !DILocalVariable(name: "list", scope: !3892, file: !3, line: 6674, type: !718)
!3896 = !DILocalVariable(name: "id", scope: !3897, file: !3, line: 6681, type: !718)
!3897 = distinct !DILexicalBlock(scope: !3892, file: !3, line: 6680, column: 5)
!3898 = !DILocation(line: 0, scope: !3892)
!3899 = !DILocation(line: 6675, column: 3, scope: !3892)
!3900 = !DILocation(line: 6676, column: 3, scope: !3892)
!3901 = !DILocation(line: 6679, column: 3, scope: !3892)
!3902 = !DILocation(line: 6674, column: 8, scope: !3892)
!3903 = !DILocation(line: 6682, column: 11, scope: !3904)
!3904 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 6682, column: 11)
!3905 = !DILocation(line: 6682, column: 11, scope: !3897)
!3906 = !DILocation(line: 6684, column: 4, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3904, file: !3, line: 6683, column: 2)
!3908 = !DILocation(line: 6685, column: 4, scope: !3907)
!3909 = !DILocation(line: 6687, column: 12, scope: !3897)
!3910 = !DILocation(line: 6687, column: 42, scope: !3897)
!3911 = !DILocation(line: 0, scope: !3897)
!3912 = !DILocation(line: 6688, column: 29, scope: !3897)
!3913 = !DILocation(line: 6688, column: 14, scope: !3897)
!3914 = !DILocation(line: 6689, column: 7, scope: !3897)
!3915 = !DILocation(line: 6690, column: 11, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3897, file: !3, line: 6690, column: 11)
!3917 = !DILocation(line: 6690, column: 11, scope: !3897)
!3918 = !DILocation(line: 6691, column: 2, scope: !3916)
!3919 = !DILocation(line: 6694, column: 5, scope: !3892)
!3920 = distinct !{!3920, !3901, !3919}
!3921 = !DILocation(line: 6695, column: 3, scope: !3892)
!3922 = !DILocation(line: 6696, column: 3, scope: !3892)
!3923 = distinct !DISubprogram(name: "c_parser_objc_methodprotolist", scope: !3, file: !3, line: 6468, type: !2645, scopeLine: 6469, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3924)
!3924 = !{!3925}
!3925 = !DILocalVariable(name: "parser", arg: 1, scope: !3923, file: !3, line: 6468, type: !1896)
!3926 = !DILocation(line: 0, scope: !3923)
!3927 = !DILocation(line: 6470, column: 3, scope: !3923)
!3928 = !DILocation(line: 6473, column: 15, scope: !3929)
!3929 = distinct !DILexicalBlock(scope: !3923, file: !3, line: 6471, column: 5)
!3930 = !DILocation(line: 6473, column: 45, scope: !3929)
!3931 = !DILocation(line: 6473, column: 7, scope: !3929)
!3932 = !DILocation(line: 6476, column: 13, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3929, file: !3, line: 6474, column: 2)
!3934 = !DILocation(line: 6476, column: 43, scope: !3933)
!3935 = !DILocation(line: 6476, column: 4, scope: !3933)
!3936 = !DILocation(line: 6478, column: 4, scope: !3933)
!3937 = !DILocation(line: 6479, column: 4, scope: !3933)
!3938 = !DILocation(line: 6482, column: 4, scope: !3933)
!3939 = !DILocation(line: 6483, column: 4, scope: !3933)
!3940 = !DILocation(line: 6485, column: 4, scope: !3933)
!3941 = !DILocation(line: 6486, column: 4, scope: !3933)
!3942 = !DILocation(line: 6490, column: 8, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3933, file: !3, line: 6490, column: 8)
!3944 = !DILocation(line: 6490, column: 8, scope: !3933)
!3945 = !DILocation(line: 6492, column: 4, scope: !3933)
!3946 = !DILocation(line: 6493, column: 4, scope: !3933)
!3947 = distinct !{!3947, !3927, !3948}
!3948 = !DILocation(line: 6495, column: 5, scope: !3923)
!3949 = !DILocation(line: 6496, column: 1, scope: !3923)
!3950 = distinct !DISubprogram(name: "c_parser_require_keyword", scope: !3, file: !3, line: 625, type: !3951, scopeLine: 628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3953)
!3951 = !DISubroutineType(types: !3952)
!3952 = !{!838, !1896, !477, !922}
!3953 = !{!3954, !3955, !3956}
!3954 = !DILocalVariable(name: "parser", arg: 1, scope: !3950, file: !3, line: 625, type: !1896)
!3955 = !DILocalVariable(name: "keyword", arg: 2, scope: !3950, file: !3, line: 626, type: !477)
!3956 = !DILocalVariable(name: "msgid", arg: 3, scope: !3950, file: !3, line: 627, type: !922)
!3957 = !DILocation(line: 0, scope: !3950)
!3958 = !DILocation(line: 629, column: 7, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 629, column: 7)
!3960 = !DILocation(line: 629, column: 7, scope: !3950)
!3961 = !DILocation(line: 631, column: 7, scope: !3962)
!3962 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 630, column: 5)
!3963 = !DILocation(line: 632, column: 7, scope: !3962)
!3964 = !DILocation(line: 636, column: 7, scope: !3965)
!3965 = distinct !DILexicalBlock(scope: !3959, file: !3, line: 635, column: 5)
!3966 = !DILocation(line: 637, column: 7, scope: !3965)
!3967 = !DILocation(line: 0, scope: !3959)
!3968 = !DILocation(line: 639, column: 1, scope: !3950)
!3969 = distinct !DISubprogram(name: "c_parser_objc_class_instance_variables", scope: !3, file: !3, line: 6209, type: !2645, scopeLine: 6210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3970)
!3970 = !{!3971, !3972, !3974}
!3971 = !DILocalVariable(name: "parser", arg: 1, scope: !3969, file: !3, line: 6209, type: !1896)
!3972 = !DILocalVariable(name: "decls", scope: !3973, file: !3, line: 6215, type: !718)
!3973 = distinct !DILexicalBlock(scope: !3969, file: !3, line: 6214, column: 5)
!3974 = !DILocalVariable(name: "ivar", scope: !3975, file: !3, line: 6260, type: !718)
!3975 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 6257, column: 7)
!3976 = !DILocation(line: 0, scope: !3969)
!3977 = !DILocation(line: 6211, column: 3, scope: !3969)
!3978 = !DILocation(line: 6212, column: 3, scope: !3969)
!3979 = !DILocation(line: 6213, column: 3, scope: !3969)
!3980 = !DILocation(line: 6213, column: 10, scope: !3969)
!3981 = !DILocation(line: 6217, column: 11, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 6217, column: 11)
!3983 = !DILocation(line: 6217, column: 11, scope: !3973)
!3984 = !DILocation(line: 6219, column: 13, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 6218, column: 2)
!3986 = !DILocation(line: 6219, column: 43, scope: !3985)
!3987 = !DILocation(line: 6219, column: 4, scope: !3985)
!3988 = !DILocation(line: 6221, column: 4, scope: !3985)
!3989 = !DILocation(line: 6222, column: 4, scope: !3985)
!3990 = distinct !{!3990, !3979, !3991}
!3991 = !DILocation(line: 6265, column: 5, scope: !3969)
!3992 = !DILocation(line: 6225, column: 11, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 6225, column: 11)
!3994 = !DILocation(line: 6225, column: 11, scope: !3973)
!3995 = !DILocation(line: 6227, column: 4, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3993, file: !3, line: 6226, column: 2)
!3997 = !DILocation(line: 6228, column: 4, scope: !3996)
!3998 = !DILocation(line: 6231, column: 11, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3973, file: !3, line: 6231, column: 11)
!4000 = !DILocation(line: 6231, column: 11, scope: !3973)
!4001 = !DILocation(line: 6233, column: 4, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 6232, column: 2)
!4003 = !DILocation(line: 6234, column: 4, scope: !4002)
!4004 = !DILocation(line: 6235, column: 4, scope: !4002)
!4005 = !DILocation(line: 6237, column: 16, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3999, file: !3, line: 6237, column: 16)
!4007 = !DILocation(line: 6237, column: 16, scope: !3999)
!4008 = !DILocation(line: 6239, column: 4, scope: !4009)
!4009 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 6238, column: 2)
!4010 = !DILocation(line: 6240, column: 4, scope: !4009)
!4011 = !DILocation(line: 6241, column: 4, scope: !4009)
!4012 = !DILocation(line: 6243, column: 16, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 6243, column: 16)
!4014 = !DILocation(line: 6243, column: 16, scope: !4006)
!4015 = !DILocation(line: 6245, column: 4, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 6244, column: 2)
!4017 = !DILocation(line: 6246, column: 4, scope: !4016)
!4018 = !DILocation(line: 6247, column: 4, scope: !4016)
!4019 = !DILocation(line: 6249, column: 16, scope: !4020)
!4020 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 6249, column: 16)
!4021 = !DILocation(line: 6249, column: 16, scope: !4013)
!4022 = !DILocation(line: 6251, column: 4, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4020, file: !3, line: 6250, column: 2)
!4024 = !DILocation(line: 6252, column: 4, scope: !4023)
!4025 = !DILocation(line: 6256, column: 15, scope: !3973)
!4026 = !DILocation(line: 0, scope: !3973)
!4027 = !DILocation(line: 6260, column: 14, scope: !3975)
!4028 = !DILocation(line: 0, scope: !3975)
!4029 = !DILocation(line: 6261, column: 2, scope: !3975)
!4030 = !DILocation(line: 6261, column: 2, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !3975, file: !3, line: 6261, column: 2)
!4032 = !DILocation(line: 6262, column: 32, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4031, file: !3, line: 6261, column: 2)
!4034 = !DILocation(line: 6262, column: 4, scope: !4033)
!4035 = !DILocation(line: 6261, column: 22, scope: !4033)
!4036 = !DILocation(line: 6261, column: 2, scope: !4033)
!4037 = distinct !{!4037, !4030, !4038}
!4038 = !DILocation(line: 6262, column: 48, scope: !4031)
!4039 = !DILocation(line: 6264, column: 7, scope: !3973)
!4040 = !DILocation(line: 6266, column: 1, scope: !3969)
!4041 = distinct !DISubprogram(name: "c_parser_objc_methodproto", scope: !3, file: !3, line: 6505, type: !2645, scopeLine: 6506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4042)
!4042 = !{!4043, !4044, !4045}
!4043 = !DILocalVariable(name: "parser", arg: 1, scope: !4041, file: !3, line: 6505, type: !1896)
!4044 = !DILocalVariable(name: "type", scope: !4041, file: !3, line: 6507, type: !190)
!4045 = !DILocalVariable(name: "decl", scope: !4041, file: !3, line: 6508, type: !718)
!4046 = !DILocation(line: 0, scope: !4041)
!4047 = !DILocation(line: 6507, column: 25, scope: !4041)
!4048 = !DILocation(line: 6509, column: 3, scope: !4041)
!4049 = !DILocation(line: 6511, column: 11, scope: !4041)
!4050 = !DILocation(line: 6511, column: 27, scope: !4041)
!4051 = !DILocation(line: 6512, column: 10, scope: !4041)
!4052 = !DILocation(line: 6514, column: 27, scope: !4041)
!4053 = !DILocation(line: 6515, column: 3, scope: !4041)
!4054 = !DILocation(line: 6516, column: 3, scope: !4041)
!4055 = !DILocation(line: 6517, column: 1, scope: !4041)
!4056 = distinct !DISubprogram(name: "c_parser_objc_method_type", scope: !3, file: !3, line: 6404, type: !4057, scopeLine: 6405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4059)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!190, !1896}
!4059 = !{!4060}
!4060 = !DILocalVariable(name: "parser", arg: 1, scope: !4056, file: !3, line: 6404, type: !1896)
!4061 = !DILocation(line: 0, scope: !4056)
!4062 = !DILocation(line: 6406, column: 11, scope: !4056)
!4063 = !DILocation(line: 6406, column: 41, scope: !4056)
!4064 = !DILocation(line: 6406, column: 3, scope: !4056)
!4065 = !DILocation(line: 6409, column: 7, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 6407, column: 5)
!4067 = !DILocation(line: 6410, column: 7, scope: !4066)
!4068 = !DILocation(line: 6412, column: 7, scope: !4066)
!4069 = !DILocation(line: 6413, column: 7, scope: !4066)
!4070 = !DILocation(line: 6415, column: 7, scope: !4066)
!4071 = !DILocation(line: 6418, column: 5, scope: !4056)
!4072 = !DILocation(line: 6420, column: 1, scope: !4056)
!4073 = distinct !DISubprogram(name: "c_parser_objc_method_decl", scope: !3, file: !3, line: 6550, type: !3767, scopeLine: 6551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4074)
!4074 = !{!4075, !4076, !4077, !4078, !4079, !4080, !4083, !4084, !4086, !4087, !4088}
!4075 = !DILocalVariable(name: "parser", arg: 1, scope: !4073, file: !3, line: 6550, type: !1896)
!4076 = !DILocalVariable(name: "type", scope: !4073, file: !3, line: 6552, type: !718)
!4077 = !DILocalVariable(name: "sel", scope: !4073, file: !3, line: 6553, type: !718)
!4078 = !DILocalVariable(name: "parms", scope: !4073, file: !3, line: 6554, type: !718)
!4079 = !DILocalVariable(name: "ellipsis", scope: !4073, file: !3, line: 6555, type: !838)
!4080 = !DILocalVariable(name: "tsel", scope: !4081, file: !3, line: 6569, type: !718)
!4081 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 6568, column: 5)
!4082 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 6567, column: 7)
!4083 = !DILocalVariable(name: "list", scope: !4081, file: !3, line: 6570, type: !718)
!4084 = !DILocalVariable(name: "atype", scope: !4085, file: !3, line: 6573, type: !718)
!4085 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 6572, column: 2)
!4086 = !DILocalVariable(name: "id", scope: !4085, file: !3, line: 6573, type: !718)
!4087 = !DILocalVariable(name: "keyworddecl", scope: !4085, file: !3, line: 6573, type: !718)
!4088 = !DILocalVariable(name: "parm", scope: !4089, file: !3, line: 6602, type: !4090)
!4089 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 6601, column: 2)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_parm", file: !666, line: 360, size: 192, elements: !4092)
!4092 = !{!4093, !4094, !4095}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "specs", scope: !4091, file: !666, line: 362, baseType: !2015, size: 64)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4091, file: !666, line: 364, baseType: !718, size: 64, offset: 64)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "declarator", scope: !4091, file: !666, line: 366, baseType: !2048, size: 64, offset: 128)
!4096 = !DILocation(line: 0, scope: !4073)
!4097 = !DILocation(line: 6557, column: 7, scope: !4098)
!4098 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 6557, column: 7)
!4099 = !DILocation(line: 6557, column: 7, scope: !4073)
!4100 = !DILocation(line: 6559, column: 7, scope: !4101)
!4101 = distinct !DILexicalBlock(scope: !4098, file: !3, line: 6558, column: 5)
!4102 = !DILocation(line: 6560, column: 14, scope: !4101)
!4103 = !DILocation(line: 6561, column: 7, scope: !4101)
!4104 = !DILocation(line: 6562, column: 5, scope: !4101)
!4105 = !DILocation(line: 6563, column: 9, scope: !4073)
!4106 = !DILocation(line: 6567, column: 8, scope: !4082)
!4107 = !DILocation(line: 6567, column: 12, scope: !4082)
!4108 = !DILocation(line: 6567, column: 15, scope: !4082)
!4109 = !DILocation(line: 6567, column: 7, scope: !4073)
!4110 = !DILocation(line: 0, scope: !4081)
!4111 = !DILocation(line: 6571, column: 7, scope: !4081)
!4112 = !DILocation(line: 6570, column: 12, scope: !4081)
!4113 = !DILocation(line: 6569, column: 12, scope: !4081)
!4114 = !DILocation(line: 0, scope: !4085)
!4115 = !DILocation(line: 6574, column: 9, scope: !4116)
!4116 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 6574, column: 8)
!4117 = !DILocation(line: 6574, column: 8, scope: !4085)
!4118 = !DILocation(line: 6576, column: 8, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 6576, column: 8)
!4120 = !DILocation(line: 6576, column: 8, scope: !4085)
!4121 = !DILocation(line: 6578, column: 8, scope: !4122)
!4122 = distinct !DILexicalBlock(scope: !4119, file: !3, line: 6577, column: 6)
!4123 = !DILocation(line: 6579, column: 16, scope: !4122)
!4124 = !DILocation(line: 6580, column: 8, scope: !4122)
!4125 = !DILocation(line: 6582, column: 6, scope: !4122)
!4126 = !DILocation(line: 6583, column: 8, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 6583, column: 8)
!4128 = !DILocation(line: 6583, column: 8, scope: !4085)
!4129 = !DILocation(line: 6585, column: 8, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4127, file: !3, line: 6584, column: 6)
!4131 = !DILocation(line: 6586, column: 15, scope: !4130)
!4132 = !DILocation(line: 6586, column: 8, scope: !4130)
!4133 = !DILocation(line: 6588, column: 9, scope: !4085)
!4134 = !DILocation(line: 6588, column: 39, scope: !4085)
!4135 = !DILocation(line: 6589, column: 4, scope: !4085)
!4136 = !DILocation(line: 6590, column: 18, scope: !4085)
!4137 = !DILocation(line: 6591, column: 11, scope: !4085)
!4138 = !DILocation(line: 6592, column: 11, scope: !4085)
!4139 = !DILocation(line: 6593, column: 9, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4085, file: !3, line: 6593, column: 8)
!4141 = !DILocation(line: 6593, column: 14, scope: !4140)
!4142 = !DILocation(line: 6593, column: 17, scope: !4140)
!4143 = !DILocation(line: 6593, column: 8, scope: !4085)
!4144 = !DILocation(line: 6595, column: 2, scope: !4081)
!4145 = distinct !{!4145, !4111, !4144}
!4146 = !DILocation(line: 6599, column: 15, scope: !4081)
!4147 = !DILocation(line: 6600, column: 7, scope: !4081)
!4148 = !DILocation(line: 6599, column: 13, scope: !4081)
!4149 = !DILocation(line: 6600, column: 14, scope: !4081)
!4150 = !DILocation(line: 6603, column: 4, scope: !4089)
!4151 = !DILocation(line: 6604, column: 8, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 6604, column: 8)
!4153 = !DILocation(line: 6604, column: 8, scope: !4089)
!4154 = !DILocation(line: 6607, column: 8, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 6605, column: 6)
!4156 = !DILocation(line: 6608, column: 8, scope: !4155)
!4157 = !DILocation(line: 6610, column: 11, scope: !4089)
!4158 = !DILocation(line: 0, scope: !4089)
!4159 = !DILocation(line: 6611, column: 13, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 6611, column: 8)
!4161 = !DILocation(line: 6611, column: 8, scope: !4089)
!4162 = !DILocation(line: 6614, column: 7, scope: !4089)
!4163 = !DILocation(line: 6613, column: 12, scope: !4089)
!4164 = !DILocation(line: 6615, column: 2, scope: !4081)
!4165 = distinct !{!4165, !4147, !4164}
!4166 = !DILocation(line: 6555, column: 8, scope: !4073)
!4167 = !DILocation(line: 6554, column: 8, scope: !4073)
!4168 = !DILocation(line: 6563, column: 7, scope: !4073)
!4169 = !DILocation(line: 6618, column: 10, scope: !4073)
!4170 = !DILocation(line: 6618, column: 3, scope: !4073)
!4171 = !DILocation(line: 6619, column: 1, scope: !4073)
!4172 = distinct !DISubprogram(name: "c_parser_objc_type_name", scope: !3, file: !3, line: 6636, type: !3767, scopeLine: 6637, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4173)
!4173 = !{!4174, !4175, !4176, !4177, !4178}
!4174 = !DILocalVariable(name: "parser", arg: 1, scope: !4172, file: !3, line: 6636, type: !1896)
!4175 = !DILocalVariable(name: "quals", scope: !4172, file: !3, line: 6638, type: !718)
!4176 = !DILocalVariable(name: "type_name", scope: !4172, file: !3, line: 6639, type: !2011)
!4177 = !DILocalVariable(name: "type", scope: !4172, file: !3, line: 6640, type: !718)
!4178 = !DILocalVariable(name: "token", scope: !4179, file: !3, line: 6643, type: !2610)
!4179 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 6642, column: 5)
!4180 = !DILocation(line: 0, scope: !4172)
!4181 = !DILocation(line: 6641, column: 3, scope: !4172)
!4182 = !DILocation(line: 6643, column: 24, scope: !4179)
!4183 = !DILocation(line: 0, scope: !4179)
!4184 = !DILocation(line: 6644, column: 18, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 6644, column: 11)
!4186 = !DILocation(line: 6644, column: 23, scope: !4185)
!4187 = !DILocation(line: 6645, column: 4, scope: !4185)
!4188 = !DILocation(line: 6645, column: 15, scope: !4185)
!4189 = !DILocation(line: 6645, column: 23, scope: !4185)
!4190 = !DILocation(line: 6646, column: 8, scope: !4185)
!4191 = !DILocation(line: 6646, column: 26, scope: !4185)
!4192 = !DILocation(line: 6647, column: 8, scope: !4185)
!4193 = !DILocation(line: 6647, column: 26, scope: !4185)
!4194 = !DILocation(line: 6648, column: 8, scope: !4185)
!4195 = !DILocation(line: 6648, column: 26, scope: !4185)
!4196 = !DILocation(line: 6649, column: 8, scope: !4185)
!4197 = !DILocation(line: 6649, column: 26, scope: !4185)
!4198 = !DILocation(line: 6650, column: 8, scope: !4185)
!4199 = !DILocation(line: 6650, column: 26, scope: !4185)
!4200 = !DILocation(line: 6644, column: 11, scope: !4179)
!4201 = !DILocation(line: 6652, column: 28, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4185, file: !3, line: 6651, column: 2)
!4203 = !DILocation(line: 6652, column: 12, scope: !4202)
!4204 = !DILocation(line: 6653, column: 4, scope: !4202)
!4205 = !DILocation(line: 6657, column: 5, scope: !4172)
!4206 = distinct !{!4206, !4181, !4205}
!4207 = !DILocation(line: 6658, column: 7, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 6658, column: 7)
!4209 = !DILocation(line: 6658, column: 7, scope: !4172)
!4210 = !DILocation(line: 6659, column: 17, scope: !4208)
!4211 = !DILocation(line: 6659, column: 5, scope: !4208)
!4212 = !DILocation(line: 6660, column: 7, scope: !4213)
!4213 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 6660, column: 7)
!4214 = !DILocation(line: 6660, column: 7, scope: !4172)
!4215 = !DILocation(line: 6661, column: 12, scope: !4213)
!4216 = !DILocation(line: 6661, column: 5, scope: !4213)
!4217 = !DILocation(line: 6662, column: 10, scope: !4172)
!4218 = !DILocation(line: 6662, column: 3, scope: !4172)
!4219 = distinct !DISubprogram(name: "c_parser_objc_selector", scope: !3, file: !3, line: 6791, type: !3767, scopeLine: 6792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4220)
!4220 = !{!4221, !4222, !4223}
!4221 = !DILocalVariable(name: "parser", arg: 1, scope: !4219, file: !3, line: 6791, type: !1896)
!4222 = !DILocalVariable(name: "token", scope: !4219, file: !3, line: 6793, type: !2610)
!4223 = !DILocalVariable(name: "value", scope: !4219, file: !3, line: 6794, type: !718)
!4224 = !DILocation(line: 0, scope: !4219)
!4225 = !DILocation(line: 6793, column: 20, scope: !4219)
!4226 = !DILocation(line: 6794, column: 23, scope: !4219)
!4227 = !DILocation(line: 6795, column: 14, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 6795, column: 7)
!4229 = !DILocation(line: 6795, column: 19, scope: !4228)
!4230 = !DILocation(line: 6795, column: 7, scope: !4219)
!4231 = !DILocation(line: 6797, column: 7, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 6796, column: 5)
!4233 = !DILocation(line: 6798, column: 7, scope: !4232)
!4234 = !DILocation(line: 6800, column: 19, scope: !4235)
!4235 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 6800, column: 7)
!4236 = !DILocation(line: 6800, column: 7, scope: !4219)
!4237 = !DILocation(line: 6802, column: 18, scope: !4219)
!4238 = !DILocation(line: 6802, column: 3, scope: !4219)
!4239 = !DILocation(line: 6843, column: 7, scope: !4240)
!4240 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 6803, column: 5)
!4241 = !DILocation(line: 6844, column: 7, scope: !4240)
!4242 = !DILocation(line: 6848, column: 1, scope: !4219)
!4243 = distinct !DISubprogram(name: "c_parser_parameter_declaration", scope: !3, file: !3, line: 2696, type: !4244, scopeLine: 2697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4246)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{!4090, !1896, !718}
!4246 = !{!4247, !4248, !4249, !4250, !4251, !4252, !4253}
!4247 = !DILocalVariable(name: "parser", arg: 1, scope: !4243, file: !3, line: 2696, type: !1896)
!4248 = !DILocalVariable(name: "attrs", arg: 2, scope: !4243, file: !3, line: 2696, type: !718)
!4249 = !DILocalVariable(name: "specs", scope: !4243, file: !3, line: 2698, type: !2015)
!4250 = !DILocalVariable(name: "declarator", scope: !4243, file: !3, line: 2699, type: !2048)
!4251 = !DILocalVariable(name: "prefix_attrs", scope: !4243, file: !3, line: 2700, type: !718)
!4252 = !DILocalVariable(name: "postfix_attrs", scope: !4243, file: !3, line: 2701, type: !718)
!4253 = !DILocalVariable(name: "dummy", scope: !4243, file: !3, line: 2702, type: !838)
!4254 = !DILocation(line: 0, scope: !4243)
!4255 = !DILocation(line: 2702, column: 3, scope: !4243)
!4256 = !DILocation(line: 2702, column: 8, scope: !4243)
!4257 = !DILocation(line: 2703, column: 8, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 2703, column: 7)
!4259 = !DILocation(line: 2703, column: 7, scope: !4243)
!4260 = !DILocation(line: 2707, column: 7, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4258, file: !3, line: 2704, column: 5)
!4262 = !DILocation(line: 2709, column: 7, scope: !4261)
!4263 = !DILocation(line: 2710, column: 7, scope: !4261)
!4264 = !DILocation(line: 2712, column: 11, scope: !4243)
!4265 = !DILocation(line: 2713, column: 7, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 2713, column: 7)
!4267 = !DILocation(line: 2713, column: 7, scope: !4243)
!4268 = !DILocation(line: 2715, column: 7, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4266, file: !3, line: 2714, column: 5)
!4270 = !DILocation(line: 2717, column: 5, scope: !4269)
!4271 = !DILocation(line: 2718, column: 3, scope: !4243)
!4272 = !DILocation(line: 2719, column: 3, scope: !4243)
!4273 = !DILocation(line: 2720, column: 3, scope: !4243)
!4274 = !DILocation(line: 2721, column: 25, scope: !4243)
!4275 = !DILocation(line: 2722, column: 16, scope: !4243)
!4276 = !DILocation(line: 2723, column: 52, scope: !4243)
!4277 = !DILocation(line: 2723, column: 16, scope: !4243)
!4278 = !DILocation(line: 2725, column: 18, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 2725, column: 7)
!4280 = !DILocation(line: 2725, column: 7, scope: !4243)
!4281 = !DILocation(line: 2727, column: 7, scope: !4282)
!4282 = distinct !DILexicalBlock(scope: !4279, file: !3, line: 2726, column: 5)
!4283 = !DILocation(line: 2728, column: 7, scope: !4282)
!4284 = !DILocation(line: 2730, column: 7, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4243, file: !3, line: 2730, column: 7)
!4286 = !DILocation(line: 2730, column: 7, scope: !4243)
!4287 = !DILocation(line: 2731, column: 21, scope: !4285)
!4288 = !DILocation(line: 2731, column: 5, scope: !4285)
!4289 = !DILocation(line: 2732, column: 31, scope: !4243)
!4290 = !DILocation(line: 2732, column: 10, scope: !4243)
!4291 = !DILocation(line: 2732, column: 3, scope: !4243)
!4292 = !DILocation(line: 2734, column: 1, scope: !4243)
!4293 = distinct !DISubprogram(name: "c_parser_next_token_starts_typename", scope: !3, file: !3, line: 422, type: !4294, scopeLine: 423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4296)
!4294 = !DISubroutineType(types: !4295)
!4295 = !{!838, !1896}
!4296 = !{!4297, !4298}
!4297 = !DILocalVariable(name: "parser", arg: 1, scope: !4293, file: !3, line: 422, type: !1896)
!4298 = !DILocalVariable(name: "token", scope: !4293, file: !3, line: 424, type: !2610)
!4299 = !DILocation(line: 0, scope: !4293)
!4300 = !DILocation(line: 424, column: 20, scope: !4293)
!4301 = !DILocation(line: 425, column: 10, scope: !4293)
!4302 = !DILocation(line: 425, column: 3, scope: !4293)
!4303 = distinct !DISubprogram(name: "c_parser_type_name", scope: !3, file: !3, line: 2997, type: !4304, scopeLine: 2998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4306)
!4304 = !DISubroutineType(types: !4305)
!4305 = !{!2011, !1896}
!4306 = !{!4307, !4308, !4309, !4310, !4311}
!4307 = !DILocalVariable(name: "parser", arg: 1, scope: !4303, file: !3, line: 2997, type: !1896)
!4308 = !DILocalVariable(name: "specs", scope: !4303, file: !3, line: 2999, type: !2015)
!4309 = !DILocalVariable(name: "declarator", scope: !4303, file: !3, line: 3000, type: !2048)
!4310 = !DILocalVariable(name: "ret", scope: !4303, file: !3, line: 3001, type: !2011)
!4311 = !DILocalVariable(name: "dummy", scope: !4303, file: !3, line: 3002, type: !838)
!4312 = !DILocation(line: 0, scope: !4303)
!4313 = !DILocation(line: 2999, column: 31, scope: !4303)
!4314 = !DILocation(line: 3002, column: 3, scope: !4303)
!4315 = !DILocation(line: 3002, column: 8, scope: !4303)
!4316 = !DILocation(line: 3003, column: 3, scope: !4303)
!4317 = !DILocation(line: 3004, column: 15, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 3004, column: 7)
!4319 = !DILocation(line: 3004, column: 8, scope: !4318)
!4320 = !DILocation(line: 3004, column: 7, scope: !4303)
!4321 = !DILocation(line: 3006, column: 7, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 3005, column: 5)
!4323 = !DILocation(line: 3007, column: 7, scope: !4322)
!4324 = !DILocation(line: 3009, column: 3, scope: !4303)
!4325 = !DILocation(line: 3010, column: 3, scope: !4303)
!4326 = !DILocation(line: 3011, column: 52, scope: !4303)
!4327 = !DILocation(line: 3011, column: 16, scope: !4303)
!4328 = !DILocation(line: 3013, column: 18, scope: !4329)
!4329 = distinct !DILexicalBlock(scope: !4303, file: !3, line: 3013, column: 7)
!4330 = !DILocation(line: 3013, column: 7, scope: !4303)
!4331 = !DILocation(line: 3015, column: 9, scope: !4303)
!4332 = !DILocation(line: 3016, column: 8, scope: !4303)
!4333 = !DILocation(line: 3016, column: 14, scope: !4303)
!4334 = !DILocation(line: 3017, column: 8, scope: !4303)
!4335 = !DILocation(line: 3017, column: 19, scope: !4303)
!4336 = !DILocation(line: 3018, column: 3, scope: !4303)
!4337 = !DILocation(line: 3019, column: 1, scope: !4303)
!4338 = distinct !DISubprogram(name: "c_token_starts_typename", scope: !3, file: !3, line: 359, type: !4339, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4341)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{!838, !2610}
!4341 = !{!4342}
!4342 = !DILocalVariable(name: "token", arg: 1, scope: !4338, file: !3, line: 359, type: !2610)
!4343 = !DILocation(line: 0, scope: !4338)
!4344 = !DILocation(line: 361, column: 18, scope: !4338)
!4345 = !DILocation(line: 361, column: 3, scope: !4338)
!4346 = !DILocation(line: 364, column: 22, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4338, file: !3, line: 362, column: 5)
!4348 = !DILocation(line: 364, column: 7, scope: !4347)
!4349 = !DILocation(line: 369, column: 4, scope: !4350)
!4350 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 365, column: 2)
!4351 = !DILocation(line: 371, column: 4, scope: !4350)
!4352 = !DILocation(line: 373, column: 4, scope: !4350)
!4353 = !DILocation(line: 376, column: 4, scope: !4350)
!4354 = !DILocation(line: 379, column: 22, scope: !4347)
!4355 = !DILocation(line: 377, column: 2, scope: !4350)
!4356 = !DILocation(line: 379, column: 7, scope: !4347)
!4357 = !DILocation(line: 408, column: 4, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 380, column: 2)
!4359 = !DILocation(line: 411, column: 11, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 411, column: 11)
!4361 = !DILocation(line: 0, scope: !4347)
!4362 = !DILocation(line: 417, column: 1, scope: !4338)
!4363 = distinct !DISubprogram(name: "c_parser_declspecs", scope: !3, file: !3, line: 1470, type: !4364, scopeLine: 1472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4366)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{null, !1896, !2015, !838, !838, !838}
!4366 = !{!4367, !4368, !4369, !4370, !4371, !4372, !4373, !4374, !4382, !4383, !4384, !4387, !4389, !4392, !4395, !4398}
!4367 = !DILocalVariable(name: "parser", arg: 1, scope: !4363, file: !3, line: 1470, type: !1896)
!4368 = !DILocalVariable(name: "specs", arg: 2, scope: !4363, file: !3, line: 1470, type: !2015)
!4369 = !DILocalVariable(name: "scspec_ok", arg: 3, scope: !4363, file: !3, line: 1471, type: !838)
!4370 = !DILocalVariable(name: "typespec_ok", arg: 4, scope: !4363, file: !3, line: 1471, type: !838)
!4371 = !DILocalVariable(name: "start_attr_ok", arg: 5, scope: !4363, file: !3, line: 1471, type: !838)
!4372 = !DILocalVariable(name: "attrs_ok", scope: !4363, file: !3, line: 1473, type: !838)
!4373 = !DILocalVariable(name: "seen_type", scope: !4363, file: !3, line: 1474, type: !838)
!4374 = !DILocalVariable(name: "t", scope: !4375, file: !3, line: 1479, type: !4376)
!4375 = distinct !DILexicalBlock(scope: !4363, file: !3, line: 1478, column: 5)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_typespec", file: !666, line: 160, size: 256, elements: !4377)
!4377 = !{!4378, !4379, !4380, !4381}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !4376, file: !666, line: 162, baseType: !695, size: 32)
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !4376, file: !666, line: 164, baseType: !718, size: 64, offset: 64)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !4376, file: !666, line: 173, baseType: !718, size: 64, offset: 128)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "expr_const_operands", scope: !4376, file: !666, line: 176, baseType: !838, size: 8, offset: 192)
!4382 = !DILocalVariable(name: "attrs", scope: !4375, file: !3, line: 1480, type: !718)
!4383 = !DILocalVariable(name: "loc", scope: !4375, file: !3, line: 1481, type: !846)
!4384 = !DILocalVariable(name: "value", scope: !4385, file: !3, line: 1484, type: !718)
!4385 = distinct !DILexicalBlock(scope: !4386, file: !3, line: 1483, column: 2)
!4386 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1482, column: 11)
!4387 = !DILocalVariable(name: "kind", scope: !4385, file: !3, line: 1485, type: !4388)
!4388 = !DIDerivedType(tag: DW_TAG_typedef, name: "c_id_kind", file: !3, line: 143, baseType: !704)
!4389 = !DILocalVariable(name: "as", scope: !4390, file: !3, line: 1489, type: !2046)
!4390 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 1488, column: 6)
!4391 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 1487, column: 8)
!4392 = !DILocalVariable(name: "proto", scope: !4393, file: !3, line: 1519, type: !718)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 1518, column: 6)
!4394 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 1506, column: 8)
!4395 = !DILocalVariable(name: "proto", scope: !4396, file: !3, line: 1535, type: !718)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 1532, column: 2)
!4397 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1531, column: 11)
!4398 = !DILabel(scope: !4363, name: "out", file: !3, line: 1642)
!4399 = !DILocation(line: 0, scope: !4363)
!4400 = !DILocation(line: 1474, column: 27, scope: !4363)
!4401 = !DILocation(line: 0, scope: !4375)
!4402 = !DILocation(line: 0, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4385, file: !3, line: 1500, column: 8)
!4404 = !DILocation(line: 0, scope: !4393)
!4405 = !DILocation(line: 0, scope: !4406)
!4406 = distinct !DILexicalBlock(scope: !4396, file: !3, line: 1537, column: 8)
!4407 = !DILocation(line: 0, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1549, column: 2)
!4409 = !DILocation(line: 0, scope: !4410)
!4410 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 1587, column: 8)
!4411 = !DILocation(line: 0, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 1557, column: 8)
!4413 = !DILocation(line: 1475, column: 3, scope: !4363)
!4414 = !DILocation(line: 1474, column: 8, scope: !4363)
!4415 = !DILocation(line: 1475, column: 10, scope: !4363)
!4416 = !DILocation(line: 1476, column: 3, scope: !4363)
!4417 = !DILocation(line: 1476, column: 6, scope: !4363)
!4418 = !DILocation(line: 1477, column: 3, scope: !4363)
!4419 = !DILocation(line: 1477, column: 7, scope: !4363)
!4420 = !DILocation(line: 1477, column: 25, scope: !4363)
!4421 = !DILocation(line: 1477, column: 28, scope: !4363)
!4422 = !DILocation(line: 1479, column: 7, scope: !4375)
!4423 = !DILocation(line: 1481, column: 24, scope: !4375)
!4424 = !DILocation(line: 1481, column: 54, scope: !4375)
!4425 = !DILocation(line: 1482, column: 11, scope: !4386)
!4426 = !DILocation(line: 1482, column: 11, scope: !4375)
!4427 = !DILocation(line: 1484, column: 17, scope: !4385)
!4428 = !DILocation(line: 1484, column: 47, scope: !4385)
!4429 = !DILocation(line: 0, scope: !4385)
!4430 = !DILocation(line: 1485, column: 21, scope: !4385)
!4431 = !DILocation(line: 1485, column: 51, scope: !4385)
!4432 = !DILocation(line: 1487, column: 13, scope: !4391)
!4433 = !DILocation(line: 1487, column: 8, scope: !4385)
!4434 = !DILocation(line: 1490, column: 5, scope: !4390)
!4435 = !DILocation(line: 1490, column: 35, scope: !4390)
!4436 = !DILocation(line: 0, scope: !4390)
!4437 = !DILocation(line: 1491, column: 8, scope: !4390)
!4438 = !DILocation(line: 1492, column: 8, scope: !4390)
!4439 = !DILocation(line: 1500, column: 24, scope: !4403)
!4440 = !DILocation(line: 1500, column: 21, scope: !4403)
!4441 = !DILocation(line: 1501, column: 34, scope: !4403)
!4442 = !DILocation(line: 1503, column: 4, scope: !4385)
!4443 = !DILocation(line: 1506, column: 13, scope: !4394)
!4444 = !DILocation(line: 1507, column: 8, scope: !4394)
!4445 = !DILocation(line: 1507, column: 13, scope: !4394)
!4446 = !DILocation(line: 1508, column: 5, scope: !4394)
!4447 = !DILocation(line: 1508, column: 8, scope: !4394)
!4448 = !DILocation(line: 1506, column: 8, scope: !4385)
!4449 = !DILocation(line: 1510, column: 15, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 1509, column: 6)
!4451 = !DILocation(line: 1513, column: 17, scope: !4450)
!4452 = !DILocation(line: 1516, column: 6, scope: !4450)
!4453 = !DILocation(line: 1520, column: 8, scope: !4393)
!4454 = !DILocation(line: 1521, column: 15, scope: !4393)
!4455 = !DILocation(line: 1522, column: 12, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 1522, column: 12)
!4457 = !DILocation(line: 1522, column: 12, scope: !4393)
!4458 = !DILocation(line: 1523, column: 11, scope: !4456)
!4459 = !DILocation(line: 1523, column: 3, scope: !4456)
!4460 = !DILocation(line: 1524, column: 17, scope: !4393)
!4461 = !DILocation(line: 0, scope: !4394)
!4462 = !DILocation(line: 1528, column: 4, scope: !4385)
!4463 = !DILocation(line: 1529, column: 4, scope: !4385)
!4464 = distinct !{!4464, !4413, !4465}
!4465 = !DILocation(line: 1641, column: 5, scope: !4363)
!4466 = !DILocation(line: 1531, column: 11, scope: !4397)
!4467 = !DILocation(line: 1531, column: 11, scope: !4375)
!4468 = !DILocation(line: 1536, column: 4, scope: !4396)
!4469 = !DILocation(line: 1537, column: 24, scope: !4406)
!4470 = !DILocation(line: 1537, column: 21, scope: !4406)
!4471 = !DILocation(line: 1539, column: 12, scope: !4396)
!4472 = !DILocation(line: 0, scope: !4396)
!4473 = !DILocation(line: 1540, column: 11, scope: !4396)
!4474 = !DILocation(line: 1541, column: 13, scope: !4396)
!4475 = !DILocation(line: 1541, column: 11, scope: !4396)
!4476 = !DILocation(line: 1542, column: 11, scope: !4396)
!4477 = !DILocation(line: 1543, column: 26, scope: !4396)
!4478 = !DILocation(line: 1544, column: 4, scope: !4396)
!4479 = !DILocation(line: 1545, column: 4, scope: !4396)
!4480 = !DILocation(line: 1547, column: 7, scope: !4375)
!4481 = !DILocation(line: 1548, column: 15, scope: !4375)
!4482 = !DILocation(line: 1548, column: 45, scope: !4375)
!4483 = !DILocation(line: 1548, column: 7, scope: !4375)
!4484 = !DILocation(line: 1557, column: 8, scope: !4408)
!4485 = !DILocation(line: 1563, column: 33, scope: !4408)
!4486 = !DILocation(line: 1563, column: 63, scope: !4408)
!4487 = !DILocation(line: 1563, column: 4, scope: !4408)
!4488 = !DILocation(line: 1564, column: 4, scope: !4408)
!4489 = !DILocation(line: 1565, column: 4, scope: !4408)
!4490 = !DILocation(line: 1583, column: 8, scope: !4408)
!4491 = !DILocation(line: 1587, column: 8, scope: !4410)
!4492 = !DILocation(line: 1587, column: 8, scope: !4408)
!4493 = !DILocation(line: 1588, column: 39, scope: !4410)
!4494 = !DILocation(line: 1588, column: 6, scope: !4410)
!4495 = !DILocation(line: 1589, column: 11, scope: !4408)
!4496 = !DILocation(line: 1590, column: 13, scope: !4408)
!4497 = !DILocation(line: 1590, column: 43, scope: !4408)
!4498 = !DILocation(line: 1590, column: 11, scope: !4408)
!4499 = !DILocation(line: 1591, column: 11, scope: !4408)
!4500 = !DILocation(line: 1592, column: 26, scope: !4408)
!4501 = !DILocation(line: 1593, column: 4, scope: !4408)
!4502 = !DILocation(line: 1594, column: 4, scope: !4408)
!4503 = !DILocation(line: 1595, column: 4, scope: !4408)
!4504 = !DILocation(line: 1597, column: 8, scope: !4408)
!4505 = !DILocation(line: 1601, column: 8, scope: !4408)
!4506 = !DILocation(line: 1602, column: 4, scope: !4408)
!4507 = !DILocation(line: 1603, column: 4, scope: !4408)
!4508 = !DILocation(line: 1606, column: 8, scope: !4408)
!4509 = !DILocation(line: 1610, column: 8, scope: !4408)
!4510 = !DILocation(line: 1611, column: 58, scope: !4408)
!4511 = !DILocation(line: 1611, column: 11, scope: !4408)
!4512 = !DILocation(line: 1612, column: 4, scope: !4408)
!4513 = !DILocation(line: 1613, column: 4, scope: !4408)
!4514 = !DILocation(line: 1618, column: 24, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 1618, column: 8)
!4516 = !DILocation(line: 1618, column: 21, scope: !4515)
!4517 = !DILocation(line: 1622, column: 8, scope: !4408)
!4518 = !DILocation(line: 1623, column: 4, scope: !4408)
!4519 = !DILocation(line: 1624, column: 4, scope: !4408)
!4520 = !DILocation(line: 1629, column: 31, scope: !4408)
!4521 = !DILocation(line: 1629, column: 61, scope: !4408)
!4522 = !DILocation(line: 1629, column: 4, scope: !4408)
!4523 = !DILocation(line: 1630, column: 4, scope: !4408)
!4524 = !DILocation(line: 1631, column: 4, scope: !4408)
!4525 = !DILocation(line: 1633, column: 9, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4408, file: !3, line: 1633, column: 8)
!4527 = !DILocation(line: 1633, column: 8, scope: !4408)
!4528 = !DILocation(line: 1635, column: 12, scope: !4408)
!4529 = !DILocation(line: 1636, column: 4, scope: !4408)
!4530 = !DILocation(line: 1637, column: 4, scope: !4408)
!4531 = !DILocation(line: 1642, column: 2, scope: !4363)
!4532 = !DILocation(line: 1643, column: 1, scope: !4363)
!4533 = distinct !DISubprogram(name: "c_parser_declarator", scope: !3, file: !3, line: 2264, type: !4534, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4537)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!2048, !1896, !838, !4536, !1981}
!4536 = !DIDerivedType(tag: DW_TAG_typedef, name: "c_dtr_syn", file: !3, line: 883, baseType: !1952)
!4537 = !{!4538, !4539, !4540, !4541, !4542, !4545}
!4538 = !DILocalVariable(name: "parser", arg: 1, scope: !4533, file: !3, line: 2264, type: !1896)
!4539 = !DILocalVariable(name: "type_seen_p", arg: 2, scope: !4533, file: !3, line: 2264, type: !838)
!4540 = !DILocalVariable(name: "kind", arg: 3, scope: !4533, file: !3, line: 2264, type: !4536)
!4541 = !DILocalVariable(name: "seen_id", arg: 4, scope: !4533, file: !3, line: 2265, type: !1981)
!4542 = !DILocalVariable(name: "quals_attrs", scope: !4543, file: !3, line: 2270, type: !2015)
!4543 = distinct !DILexicalBlock(scope: !4544, file: !3, line: 2269, column: 5)
!4544 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 2268, column: 7)
!4545 = !DILocalVariable(name: "inner", scope: !4543, file: !3, line: 2271, type: !2048)
!4546 = !DILocation(line: 0, scope: !4533)
!4547 = !DILocation(line: 2268, column: 7, scope: !4544)
!4548 = !DILocation(line: 2268, column: 7, scope: !4533)
!4549 = !DILocation(line: 2270, column: 41, scope: !4543)
!4550 = !DILocation(line: 0, scope: !4543)
!4551 = !DILocation(line: 2272, column: 7, scope: !4543)
!4552 = !DILocation(line: 2273, column: 7, scope: !4543)
!4553 = !DILocation(line: 2274, column: 15, scope: !4543)
!4554 = !DILocation(line: 2275, column: 17, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4543, file: !3, line: 2275, column: 11)
!4556 = !DILocation(line: 2275, column: 11, scope: !4543)
!4557 = !DILocation(line: 2278, column: 9, scope: !4555)
!4558 = !DILocation(line: 2278, column: 2, scope: !4555)
!4559 = !DILocation(line: 2282, column: 10, scope: !4533)
!4560 = !DILocation(line: 2282, column: 3, scope: !4533)
!4561 = !DILocation(line: 2283, column: 1, scope: !4533)
!4562 = distinct !DISubprogram(name: "c_parser_enum_specifier", scope: !3, file: !3, line: 1668, type: !4563, scopeLine: 1669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4565)
!4563 = !DISubroutineType(types: !4564)
!4564 = !{!4376, !1896}
!4565 = !{!4566, !4567, !4568, !4569, !4570, !4571, !4572, !4579, !4580, !4581, !4582, !4584, !4585, !4586, !4587, !4588, !4589}
!4566 = !DILocalVariable(name: "parser", arg: 1, scope: !4562, file: !3, line: 1668, type: !1896)
!4567 = !DILocalVariable(name: "ret", scope: !4562, file: !3, line: 1670, type: !4376)
!4568 = !DILocalVariable(name: "attrs", scope: !4562, file: !3, line: 1671, type: !718)
!4569 = !DILocalVariable(name: "ident", scope: !4562, file: !3, line: 1672, type: !718)
!4570 = !DILocalVariable(name: "enum_loc", scope: !4562, file: !3, line: 1673, type: !846)
!4571 = !DILocalVariable(name: "ident_loc", scope: !4562, file: !3, line: 1674, type: !846)
!4572 = !DILocalVariable(name: "the_enum", scope: !4573, file: !3, line: 1692, type: !4575)
!4573 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 1690, column: 5)
!4574 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 1689, column: 7)
!4575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "c_enum_contents", file: !666, line: 370, size: 128, elements: !4576)
!4576 = !{!4577, !4578}
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "enum_next_value", scope: !4575, file: !666, line: 374, baseType: !718, size: 64)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "enum_overflow", scope: !4575, file: !666, line: 377, baseType: !815, size: 32, offset: 64)
!4579 = !DILocalVariable(name: "type", scope: !4573, file: !3, line: 1693, type: !718)
!4580 = !DILocalVariable(name: "postfix_attrs", scope: !4573, file: !3, line: 1694, type: !718)
!4581 = !DILocalVariable(name: "values", scope: !4573, file: !3, line: 1697, type: !718)
!4582 = !DILocalVariable(name: "enum_id", scope: !4583, file: !3, line: 1701, type: !718)
!4583 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 1700, column: 2)
!4584 = !DILocalVariable(name: "enum_value", scope: !4583, file: !3, line: 1702, type: !718)
!4585 = !DILocalVariable(name: "enum_decl", scope: !4583, file: !3, line: 1703, type: !718)
!4586 = !DILocalVariable(name: "seen_comma", scope: !4583, file: !3, line: 1704, type: !838)
!4587 = !DILocalVariable(name: "token", scope: !4583, file: !3, line: 1705, type: !2610)
!4588 = !DILocalVariable(name: "comma_loc", scope: !4583, file: !3, line: 1706, type: !846)
!4589 = !DILocalVariable(name: "value_loc", scope: !4583, file: !3, line: 1707, type: !846)
!4590 = !DILocation(line: 0, scope: !4562)
!4591 = !DILocation(line: 1670, column: 21, scope: !4562)
!4592 = !DILocation(line: 1675, column: 3, scope: !4562)
!4593 = !DILocation(line: 1676, column: 14, scope: !4562)
!4594 = !DILocation(line: 1677, column: 3, scope: !4562)
!4595 = !DILocation(line: 1678, column: 11, scope: !4562)
!4596 = !DILocation(line: 1679, column: 14, scope: !4562)
!4597 = !DILocation(line: 1679, column: 44, scope: !4562)
!4598 = !DILocation(line: 1681, column: 44, scope: !4562)
!4599 = !DILocation(line: 1681, column: 3, scope: !4562)
!4600 = !DILocation(line: 1682, column: 7, scope: !4601)
!4601 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 1682, column: 7)
!4602 = !DILocation(line: 1682, column: 7, scope: !4562)
!4603 = !DILocation(line: 1684, column: 15, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4601, file: !3, line: 1683, column: 5)
!4605 = !DILocation(line: 1684, column: 45, scope: !4604)
!4606 = !DILocation(line: 1685, column: 19, scope: !4604)
!4607 = !DILocation(line: 1685, column: 49, scope: !4604)
!4608 = !DILocation(line: 1687, column: 7, scope: !4604)
!4609 = !DILocation(line: 1688, column: 5, scope: !4604)
!4610 = !DILocation(line: 1689, column: 7, scope: !4574)
!4611 = !DILocation(line: 1689, column: 7, scope: !4562)
!4612 = !DILocation(line: 1692, column: 7, scope: !4573)
!4613 = !DILocation(line: 0, scope: !4573)
!4614 = !DILocation(line: 1693, column: 19, scope: !4573)
!4615 = !DILocation(line: 1698, column: 7, scope: !4573)
!4616 = !DILocation(line: 0, scope: !4617)
!4617 = distinct !DILexicalBlock(scope: !4618, file: !3, line: 1722, column: 6)
!4618 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1721, column: 8)
!4619 = !DILocation(line: 1699, column: 7, scope: !4573)
!4620 = !DILocation(line: 0, scope: !4583)
!4621 = !DILocation(line: 1708, column: 8, scope: !4622)
!4622 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1708, column: 8)
!4623 = !DILocation(line: 1708, column: 8, scope: !4583)
!4624 = !DILocation(line: 1710, column: 8, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4622, file: !3, line: 1709, column: 6)
!4626 = !DILocation(line: 1711, column: 8, scope: !4625)
!4627 = !DILocation(line: 1712, column: 17, scope: !4625)
!4628 = !DILocation(line: 1713, column: 8, scope: !4625)
!4629 = !DILocation(line: 1715, column: 12, scope: !4583)
!4630 = !DILocation(line: 1716, column: 21, scope: !4583)
!4631 = !DILocation(line: 1718, column: 4, scope: !4583)
!4632 = !DILocation(line: 1719, column: 23, scope: !4583)
!4633 = !DILocation(line: 1720, column: 4, scope: !4583)
!4634 = !DILocation(line: 1721, column: 8, scope: !4618)
!4635 = !DILocation(line: 1721, column: 8, scope: !4583)
!4636 = !DILocation(line: 1723, column: 8, scope: !4617)
!4637 = !DILocation(line: 1724, column: 20, scope: !4617)
!4638 = !DILocation(line: 1724, column: 50, scope: !4617)
!4639 = !DILocation(line: 1725, column: 21, scope: !4617)
!4640 = !DILocation(line: 1725, column: 60, scope: !4617)
!4641 = !DILocation(line: 1726, column: 6, scope: !4617)
!4642 = !DILocation(line: 0, scope: !4618)
!4643 = !DILocation(line: 1729, column: 16, scope: !4583)
!4644 = !DILocation(line: 1731, column: 4, scope: !4583)
!4645 = !DILocation(line: 1731, column: 27, scope: !4583)
!4646 = !DILocation(line: 1734, column: 8, scope: !4647)
!4647 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1734, column: 8)
!4648 = !DILocation(line: 1734, column: 8, scope: !4583)
!4649 = !DILocation(line: 1736, column: 20, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4647, file: !3, line: 1735, column: 6)
!4651 = !DILocation(line: 1736, column: 50, scope: !4650)
!4652 = !DILocation(line: 1738, column: 8, scope: !4650)
!4653 = !DILocation(line: 1739, column: 6, scope: !4650)
!4654 = !DILocation(line: 1740, column: 8, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1740, column: 8)
!4656 = !DILocation(line: 1740, column: 8, scope: !4583)
!4657 = !DILocation(line: 1742, column: 12, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !3, line: 1742, column: 12)
!4659 = distinct !DILexicalBlock(scope: !4655, file: !3, line: 1741, column: 6)
!4660 = !DILocation(line: 1742, column: 27, scope: !4658)
!4661 = !DILocation(line: 1742, column: 23, scope: !4658)
!4662 = !DILocation(line: 1743, column: 3, scope: !4658)
!4663 = !DILocation(line: 1744, column: 8, scope: !4659)
!4664 = !DILocation(line: 1745, column: 8, scope: !4659)
!4665 = !DILocation(line: 1747, column: 9, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4583, file: !3, line: 1747, column: 8)
!4667 = !DILocation(line: 1747, column: 8, scope: !4583)
!4668 = !DILocation(line: 1749, column: 8, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4666, file: !3, line: 1748, column: 6)
!4670 = !DILocation(line: 1750, column: 8, scope: !4669)
!4671 = !DILocation(line: 1751, column: 17, scope: !4669)
!4672 = !DILocation(line: 1752, column: 8, scope: !4669)
!4673 = distinct !{!4673, !4619, !4674}
!4674 = !DILocation(line: 1754, column: 2, scope: !4573)
!4675 = !DILocation(line: 1755, column: 23, scope: !4573)
!4676 = !DILocation(line: 1756, column: 37, scope: !4573)
!4677 = !DILocation(line: 1757, column: 10, scope: !4573)
!4678 = !DILocation(line: 1756, column: 18, scope: !4573)
!4679 = !DILocation(line: 1756, column: 11, scope: !4573)
!4680 = !DILocation(line: 1756, column: 16, scope: !4573)
!4681 = !DILocation(line: 1758, column: 11, scope: !4573)
!4682 = !DILocation(line: 1758, column: 16, scope: !4573)
!4683 = !DILocation(line: 1759, column: 11, scope: !4573)
!4684 = !DILocation(line: 1759, column: 16, scope: !4573)
!4685 = !DILocation(line: 1760, column: 11, scope: !4573)
!4686 = !DILocation(line: 1760, column: 31, scope: !4573)
!4687 = !DILocation(line: 1762, column: 5, scope: !4574)
!4688 = !DILocation(line: 1763, column: 13, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4574, file: !3, line: 1763, column: 12)
!4690 = !DILocation(line: 1763, column: 12, scope: !4574)
!4691 = !DILocation(line: 1765, column: 7, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4689, file: !3, line: 1764, column: 5)
!4693 = !DILocation(line: 1766, column: 18, scope: !4692)
!4694 = !DILocation(line: 1766, column: 11, scope: !4692)
!4695 = !DILocation(line: 1766, column: 16, scope: !4692)
!4696 = !DILocation(line: 1767, column: 11, scope: !4692)
!4697 = !DILocation(line: 1767, column: 16, scope: !4692)
!4698 = !DILocation(line: 1768, column: 11, scope: !4692)
!4699 = !DILocation(line: 1768, column: 16, scope: !4692)
!4700 = !DILocation(line: 1769, column: 11, scope: !4692)
!4701 = !DILocation(line: 1769, column: 31, scope: !4692)
!4702 = !DILocation(line: 1770, column: 7, scope: !4692)
!4703 = !DILocation(line: 1772, column: 9, scope: !4562)
!4704 = !DILocation(line: 1775, column: 7, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4562, file: !3, line: 1775, column: 7)
!4706 = !DILocation(line: 1775, column: 16, scope: !4705)
!4707 = !DILocation(line: 1775, column: 20, scope: !4705)
!4708 = !DILocation(line: 1775, column: 7, scope: !4562)
!4709 = !DILocation(line: 1778, column: 7, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 1776, column: 5)
!4711 = !DILocation(line: 1780, column: 5, scope: !4710)
!4712 = !DILocation(line: 1782, column: 1, scope: !4562)
!4713 = distinct !DISubprogram(name: "c_parser_struct_or_union_specifier", scope: !3, file: !3, line: 1824, type: !4563, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4714)
!4714 = !{!4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4727, !4728, !4729, !4730, !4733, !4735}
!4715 = !DILocalVariable(name: "parser", arg: 1, scope: !4713, file: !3, line: 1824, type: !1896)
!4716 = !DILocalVariable(name: "ret", scope: !4713, file: !3, line: 1826, type: !4376)
!4717 = !DILocalVariable(name: "attrs", scope: !4713, file: !3, line: 1827, type: !718)
!4718 = !DILocalVariable(name: "ident", scope: !4713, file: !3, line: 1828, type: !718)
!4719 = !DILocalVariable(name: "struct_loc", scope: !4713, file: !3, line: 1829, type: !846)
!4720 = !DILocalVariable(name: "ident_loc", scope: !4713, file: !3, line: 1830, type: !846)
!4721 = !DILocalVariable(name: "code", scope: !4713, file: !3, line: 1831, type: !190)
!4722 = !DILocalVariable(name: "struct_info", scope: !4723, file: !3, line: 1861, type: !4725)
!4723 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 1858, column: 5)
!4724 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 1857, column: 7)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = !DICompositeType(tag: DW_TAG_structure_type, name: "c_struct_parse_info", file: !666, line: 401, flags: DIFlagFwdDecl)
!4727 = !DILocalVariable(name: "type", scope: !4723, file: !3, line: 1862, type: !718)
!4728 = !DILocalVariable(name: "postfix_attrs", scope: !4723, file: !3, line: 1863, type: !718)
!4729 = !DILocalVariable(name: "contents", scope: !4723, file: !3, line: 1874, type: !718)
!4730 = !DILocalVariable(name: "name", scope: !4731, file: !3, line: 1880, type: !718)
!4731 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 1879, column: 2)
!4732 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 1878, column: 11)
!4733 = !DILocalVariable(name: "decls", scope: !4734, file: !3, line: 1907, type: !718)
!4734 = distinct !DILexicalBlock(scope: !4723, file: !3, line: 1906, column: 2)
!4735 = !DILabel(scope: !4723, name: "end_at_defs", file: !3, line: 1901)
!4736 = !DILocation(line: 0, scope: !4713)
!4737 = !DILocation(line: 1826, column: 21, scope: !4713)
!4738 = !DILocation(line: 1832, column: 11, scope: !4713)
!4739 = !DILocation(line: 1832, column: 41, scope: !4713)
!4740 = !DILocation(line: 1832, column: 3, scope: !4713)
!4741 = !DILocation(line: 1839, column: 7, scope: !4742)
!4742 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 1833, column: 5)
!4743 = !DILocation(line: 1841, column: 7, scope: !4742)
!4744 = !DILocation(line: 1842, column: 5, scope: !4742)
!4745 = !DILocation(line: 1843, column: 16, scope: !4713)
!4746 = !DILocation(line: 1843, column: 46, scope: !4713)
!4747 = !DILocation(line: 1844, column: 3, scope: !4713)
!4748 = !DILocation(line: 1845, column: 11, scope: !4713)
!4749 = !DILocation(line: 1848, column: 44, scope: !4713)
!4750 = !DILocation(line: 1848, column: 3, scope: !4713)
!4751 = !DILocation(line: 1850, column: 7, scope: !4752)
!4752 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 1850, column: 7)
!4753 = !DILocation(line: 1850, column: 7, scope: !4713)
!4754 = !DILocation(line: 1852, column: 15, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 1851, column: 5)
!4756 = !DILocation(line: 1852, column: 45, scope: !4755)
!4757 = !DILocation(line: 1853, column: 19, scope: !4755)
!4758 = !DILocation(line: 1853, column: 49, scope: !4755)
!4759 = !DILocation(line: 1855, column: 7, scope: !4755)
!4760 = !DILocation(line: 1856, column: 5, scope: !4755)
!4761 = !DILocation(line: 1857, column: 7, scope: !4724)
!4762 = !DILocation(line: 1857, column: 7, scope: !4713)
!4763 = !DILocation(line: 1861, column: 7, scope: !4723)
!4764 = !DILocation(line: 0, scope: !4723)
!4765 = !DILocation(line: 1862, column: 19, scope: !4723)
!4766 = !DILocation(line: 1875, column: 7, scope: !4723)
!4767 = !DILocation(line: 1878, column: 11, scope: !4732)
!4768 = !DILocation(line: 1878, column: 11, scope: !4723)
!4769 = !DILocation(line: 1881, column: 4, scope: !4731)
!4770 = !DILocation(line: 1882, column: 4, scope: !4731)
!4771 = !DILocation(line: 1883, column: 9, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1883, column: 8)
!4773 = !DILocation(line: 1883, column: 8, scope: !4731)
!4774 = !DILocation(line: 1885, column: 8, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4731, file: !3, line: 1885, column: 8)
!4776 = !DILocation(line: 1886, column: 8, scope: !4775)
!4777 = !DILocation(line: 1886, column: 11, scope: !4775)
!4778 = !DILocation(line: 1886, column: 41, scope: !4775)
!4779 = !DILocation(line: 1886, column: 49, scope: !4775)
!4780 = !DILocation(line: 1885, column: 8, scope: !4731)
!4781 = !DILocation(line: 1888, column: 15, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 1887, column: 6)
!4783 = !DILocation(line: 1888, column: 45, scope: !4782)
!4784 = !DILocation(line: 0, scope: !4731)
!4785 = !DILocation(line: 1889, column: 8, scope: !4782)
!4786 = !DILocation(line: 1897, column: 4, scope: !4731)
!4787 = !DILocation(line: 1899, column: 25, scope: !4731)
!4788 = !DILocation(line: 1899, column: 15, scope: !4731)
!4789 = !DILocation(line: 1900, column: 2, scope: !4732)
!4790 = !DILocation(line: 1893, column: 8, scope: !4791)
!4791 = distinct !DILexicalBlock(scope: !4775, file: !3, line: 1892, column: 6)
!4792 = !DILocation(line: 1894, column: 8, scope: !4791)
!4793 = !DILocation(line: 1895, column: 8, scope: !4791)
!4794 = !DILocation(line: 1899, column: 13, scope: !4731)
!4795 = !DILocation(line: 1901, column: 5, scope: !4723)
!4796 = !DILocation(line: 1905, column: 7, scope: !4723)
!4797 = !DILocation(line: 1909, column: 8, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 1909, column: 8)
!4799 = !DILocation(line: 1909, column: 8, scope: !4734)
!4800 = !DILocation(line: 1911, column: 17, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4798, file: !3, line: 1910, column: 6)
!4802 = !DILocation(line: 1911, column: 47, scope: !4801)
!4803 = !DILocation(line: 1911, column: 8, scope: !4801)
!4804 = !DILocation(line: 1913, column: 8, scope: !4801)
!4805 = !DILocation(line: 1914, column: 8, scope: !4801)
!4806 = distinct !{!4806, !4796, !4807}
!4807 = !DILocation(line: 1949, column: 2, scope: !4723)
!4808 = !DILocation(line: 1917, column: 8, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 1917, column: 8)
!4810 = !DILocation(line: 1917, column: 8, scope: !4734)
!4811 = !DILocation(line: 1919, column: 8, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4809, file: !3, line: 1918, column: 6)
!4813 = !DILocation(line: 1920, column: 8, scope: !4812)
!4814 = !DILocation(line: 1923, column: 8, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 1923, column: 8)
!4816 = !DILocation(line: 1923, column: 8, scope: !4734)
!4817 = !DILocation(line: 1925, column: 8, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4815, file: !3, line: 1924, column: 6)
!4819 = !DILocation(line: 1926, column: 8, scope: !4818)
!4820 = !DILocation(line: 1930, column: 12, scope: !4734)
!4821 = !DILocation(line: 0, scope: !4734)
!4822 = !DILocation(line: 1931, column: 15, scope: !4734)
!4823 = !DILocation(line: 1935, column: 8, scope: !4824)
!4824 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 1935, column: 8)
!4825 = !DILocation(line: 1935, column: 8, scope: !4734)
!4826 = !DILocation(line: 1936, column: 6, scope: !4824)
!4827 = !DILocation(line: 1939, column: 12, scope: !4828)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 1939, column: 12)
!4829 = distinct !DILexicalBlock(scope: !4824, file: !3, line: 1938, column: 6)
!4830 = !DILocation(line: 1939, column: 12, scope: !4829)
!4831 = !DILocation(line: 1940, column: 12, scope: !4828)
!4832 = !DILocation(line: 1940, column: 42, scope: !4828)
!4833 = !DILocation(line: 1940, column: 3, scope: !4828)
!4834 = !DILocation(line: 1944, column: 5, scope: !4835)
!4835 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 1943, column: 3)
!4836 = !DILocation(line: 1945, column: 5, scope: !4835)
!4837 = !DILocation(line: 1946, column: 5, scope: !4835)
!4838 = !DILocation(line: 1950, column: 23, scope: !4723)
!4839 = !DILocation(line: 1951, column: 51, scope: !4723)
!4840 = !DILocation(line: 1952, column: 5, scope: !4723)
!4841 = !DILocation(line: 1952, column: 37, scope: !4723)
!4842 = !DILocation(line: 1951, column: 18, scope: !4723)
!4843 = !DILocation(line: 1951, column: 11, scope: !4723)
!4844 = !DILocation(line: 1951, column: 16, scope: !4723)
!4845 = !DILocation(line: 1953, column: 11, scope: !4723)
!4846 = !DILocation(line: 1953, column: 16, scope: !4723)
!4847 = !DILocation(line: 1954, column: 11, scope: !4723)
!4848 = !DILocation(line: 1954, column: 16, scope: !4723)
!4849 = !DILocation(line: 1955, column: 11, scope: !4723)
!4850 = !DILocation(line: 1955, column: 31, scope: !4723)
!4851 = !DILocation(line: 1956, column: 7, scope: !4723)
!4852 = !DILocation(line: 1957, column: 5, scope: !4724)
!4853 = !DILocation(line: 1958, column: 13, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4724, file: !3, line: 1958, column: 12)
!4855 = !DILocation(line: 1958, column: 12, scope: !4724)
!4856 = !DILocation(line: 1960, column: 7, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1959, column: 5)
!4858 = !DILocation(line: 1961, column: 18, scope: !4857)
!4859 = !DILocation(line: 1961, column: 11, scope: !4857)
!4860 = !DILocation(line: 1961, column: 16, scope: !4857)
!4861 = !DILocation(line: 1962, column: 11, scope: !4857)
!4862 = !DILocation(line: 1962, column: 16, scope: !4857)
!4863 = !DILocation(line: 1963, column: 11, scope: !4857)
!4864 = !DILocation(line: 1963, column: 16, scope: !4857)
!4865 = !DILocation(line: 1964, column: 11, scope: !4857)
!4866 = !DILocation(line: 1964, column: 31, scope: !4857)
!4867 = !DILocation(line: 1965, column: 7, scope: !4857)
!4868 = !DILocation(line: 1967, column: 9, scope: !4713)
!4869 = !DILocation(line: 1968, column: 3, scope: !4713)
!4870 = !DILocation(line: 1969, column: 1, scope: !4713)
!4871 = distinct !DISubprogram(name: "c_parser_typeof_specifier", scope: !3, file: !3, line: 2136, type: !4563, scopeLine: 2137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4872)
!4872 = !{!4873, !4874, !4875, !4878, !4880, !4881}
!4873 = !DILocalVariable(name: "parser", arg: 1, scope: !4871, file: !3, line: 2136, type: !1896)
!4874 = !DILocalVariable(name: "ret", scope: !4871, file: !3, line: 2138, type: !4376)
!4875 = !DILocalVariable(name: "type", scope: !4876, file: !3, line: 2155, type: !2011)
!4876 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 2154, column: 5)
!4877 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 2153, column: 7)
!4878 = !DILocalVariable(name: "was_vm", scope: !4879, file: !3, line: 2166, type: !838)
!4879 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 2165, column: 5)
!4880 = !DILocalVariable(name: "here", scope: !4879, file: !3, line: 2167, type: !846)
!4881 = !DILocalVariable(name: "expr", scope: !4879, file: !3, line: 2168, type: !715)
!4882 = !DILocation(line: 0, scope: !4871)
!4883 = !DILocation(line: 2138, column: 21, scope: !4871)
!4884 = !DILocation(line: 2139, column: 7, scope: !4871)
!4885 = !DILocation(line: 2139, column: 12, scope: !4871)
!4886 = !DILocation(line: 2140, column: 14, scope: !4871)
!4887 = !DILocation(line: 2140, column: 7, scope: !4871)
!4888 = !DILocation(line: 2140, column: 12, scope: !4871)
!4889 = !DILocation(line: 2141, column: 7, scope: !4871)
!4890 = !DILocation(line: 2141, column: 12, scope: !4871)
!4891 = !DILocation(line: 2142, column: 7, scope: !4871)
!4892 = !DILocation(line: 2142, column: 27, scope: !4871)
!4893 = !DILocation(line: 2143, column: 3, scope: !4871)
!4894 = !DILocation(line: 2144, column: 3, scope: !4871)
!4895 = !DILocation(line: 2145, column: 32, scope: !4871)
!4896 = !DILocation(line: 2146, column: 12, scope: !4871)
!4897 = !DILocation(line: 2147, column: 8, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 2147, column: 7)
!4899 = !DILocation(line: 2147, column: 7, scope: !4871)
!4900 = !DILocation(line: 2149, column: 36, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 2148, column: 5)
!4902 = !DILocation(line: 2150, column: 16, scope: !4901)
!4903 = !DILocation(line: 2151, column: 7, scope: !4901)
!4904 = !DILocation(line: 2153, column: 7, scope: !4877)
!4905 = !DILocation(line: 2153, column: 7, scope: !4871)
!4906 = !DILocation(line: 2155, column: 34, scope: !4876)
!4907 = !DILocation(line: 0, scope: !4876)
!4908 = !DILocation(line: 2156, column: 36, scope: !4876)
!4909 = !DILocation(line: 2157, column: 16, scope: !4876)
!4910 = !DILocation(line: 2158, column: 16, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 2158, column: 11)
!4912 = !DILocation(line: 2158, column: 11, scope: !4876)
!4913 = !DILocation(line: 2160, column: 15, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4911, file: !3, line: 2159, column: 2)
!4915 = !DILocation(line: 2160, column: 13, scope: !4914)
!4916 = !DILocation(line: 2161, column: 20, scope: !4914)
!4917 = !DILocation(line: 2161, column: 4, scope: !4914)
!4918 = !DILocation(line: 2162, column: 2, scope: !4914)
!4919 = !DILocation(line: 2167, column: 25, scope: !4879)
!4920 = !DILocation(line: 2167, column: 55, scope: !4879)
!4921 = !DILocation(line: 0, scope: !4879)
!4922 = !DILocation(line: 2168, column: 7, scope: !4879)
!4923 = !DILocation(line: 2168, column: 28, scope: !4879)
!4924 = !DILocation(line: 2169, column: 36, scope: !4879)
!4925 = !DILocation(line: 2170, column: 16, scope: !4879)
!4926 = !DILocation(line: 2171, column: 11, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2171, column: 11)
!4928 = !DILocation(line: 2171, column: 34, scope: !4927)
!4929 = !DILocation(line: 2172, column: 4, scope: !4927)
!4930 = !DILocation(line: 2172, column: 7, scope: !4927)
!4931 = !DILocation(line: 2171, column: 11, scope: !4879)
!4932 = !DILocation(line: 2173, column: 2, scope: !4927)
!4933 = !DILocation(line: 2174, column: 18, scope: !4879)
!4934 = !DILocation(line: 2174, column: 16, scope: !4879)
!4935 = !DILocation(line: 2175, column: 46, scope: !4879)
!4936 = !DILocation(line: 2175, column: 16, scope: !4879)
!4937 = !DILocation(line: 2178, column: 11, scope: !4938)
!4938 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 2178, column: 11)
!4939 = !DILocation(line: 2178, column: 11, scope: !4879)
!4940 = !DILocation(line: 2179, column: 32, scope: !4938)
!4941 = !DILocation(line: 2179, column: 13, scope: !4938)
!4942 = !DILocation(line: 2179, column: 11, scope: !4938)
!4943 = !DILocation(line: 2179, column: 2, scope: !4938)
!4944 = !DILocation(line: 2180, column: 7, scope: !4879)
!4945 = !DILocation(line: 2181, column: 5, scope: !4877)
!4946 = !DILocation(line: 2182, column: 3, scope: !4871)
!4947 = !DILocation(line: 2183, column: 3, scope: !4871)
!4948 = !DILocation(line: 2184, column: 1, scope: !4871)
!4949 = distinct !DISubprogram(name: "c_parser_attributes", scope: !3, file: !3, line: 2831, type: !3767, scopeLine: 2832, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4950)
!4950 = !{!4951, !4952, !4953, !4956, !4957, !4958, !4959, !4962, !4965}
!4951 = !DILocalVariable(name: "parser", arg: 1, scope: !4949, file: !3, line: 2831, type: !1896)
!4952 = !DILocalVariable(name: "attrs", scope: !4949, file: !3, line: 2833, type: !718)
!4953 = !DILocalVariable(name: "attr", scope: !4954, file: !3, line: 2856, type: !718)
!4954 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2855, column: 2)
!4955 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 2835, column: 5)
!4956 = !DILocalVariable(name: "attr_name", scope: !4954, file: !3, line: 2856, type: !718)
!4957 = !DILocalVariable(name: "attr_args", scope: !4954, file: !3, line: 2856, type: !718)
!4958 = !DILocalVariable(name: "expr_list", scope: !4954, file: !3, line: 2857, type: !1386)
!4959 = !DILocalVariable(name: "ok", scope: !4960, file: !3, line: 2867, type: !838)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 2864, column: 6)
!4961 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2863, column: 8)
!4962 = !DILocalVariable(name: "arg1", scope: !4963, file: !3, line: 2930, type: !718)
!4963 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 2929, column: 6)
!4964 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2924, column: 8)
!4965 = !DILocalVariable(name: "tree_list", scope: !4966, file: !3, line: 2936, type: !718)
!4966 = distinct !DILexicalBlock(scope: !4967, file: !3, line: 2935, column: 3)
!4967 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 2932, column: 12)
!4968 = !DILocation(line: 0, scope: !4949)
!4969 = !DILocation(line: 0, scope: !4955)
!4970 = !DILocation(line: 2834, column: 3, scope: !4949)
!4971 = !DILocation(line: 2833, column: 8, scope: !4949)
!4972 = !DILocation(line: 0, scope: !4954)
!4973 = !DILocation(line: 2834, column: 10, scope: !4949)
!4974 = !DILocation(line: 2838, column: 39, scope: !4955)
!4975 = !DILocation(line: 2839, column: 7, scope: !4955)
!4976 = !DILocation(line: 2840, column: 12, scope: !4977)
!4977 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2840, column: 11)
!4978 = !DILocation(line: 2840, column: 11, scope: !4955)
!4979 = !DILocation(line: 2842, column: 36, scope: !4980)
!4980 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2841, column: 2)
!4981 = !DILocation(line: 2843, column: 4, scope: !4980)
!4982 = !DILocation(line: 2845, column: 12, scope: !4983)
!4983 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2845, column: 11)
!4984 = !DILocation(line: 2845, column: 11, scope: !4955)
!4985 = !DILocation(line: 2852, column: 7, scope: !4955)
!4986 = !DILocation(line: 2847, column: 36, scope: !4987)
!4987 = distinct !DILexicalBlock(scope: !4983, file: !3, line: 2846, column: 2)
!4988 = !DILocation(line: 2848, column: 4, scope: !4987)
!4989 = !DILocation(line: 2849, column: 4, scope: !4987)
!4990 = !DILocation(line: 2852, column: 14, scope: !4955)
!4991 = !DILocation(line: 2853, column: 7, scope: !4955)
!4992 = !DILocation(line: 2853, column: 10, scope: !4955)
!4993 = !DILocation(line: 2854, column: 7, scope: !4955)
!4994 = !DILocation(line: 2854, column: 10, scope: !4955)
!4995 = !DILocation(line: 2858, column: 8, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2858, column: 8)
!4997 = !DILocation(line: 2858, column: 8, scope: !4954)
!4998 = !DILocation(line: 2860, column: 8, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 2859, column: 6)
!5000 = !DILocation(line: 2861, column: 8, scope: !4999)
!5001 = distinct !{!5001, !4985, !5002}
!5002 = !DILocation(line: 2966, column: 2, scope: !4955)
!5003 = !DILocation(line: 2863, column: 8, scope: !4961)
!5004 = !DILocation(line: 0, scope: !4961)
!5005 = !DILocation(line: 2863, column: 8, scope: !4954)
!5006 = !DILocation(line: 2868, column: 46, scope: !4960)
!5007 = !DILocation(line: 2868, column: 8, scope: !4960)
!5008 = !DILocation(line: 0, scope: !4960)
!5009 = !DILocation(line: 2901, column: 5, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 2869, column: 3)
!5011 = !DILocation(line: 2903, column: 12, scope: !4960)
!5012 = !DILocation(line: 2908, column: 5, scope: !4960)
!5013 = !DILocation(line: 2908, column: 23, scope: !4960)
!5014 = !DILocation(line: 2908, column: 53, scope: !4960)
!5015 = !DILocation(line: 2909, column: 6, scope: !4961)
!5016 = !DILocation(line: 2911, column: 48, scope: !4961)
!5017 = !DILocation(line: 2912, column: 4, scope: !4954)
!5018 = !DILocation(line: 2913, column: 8, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2913, column: 8)
!5020 = !DILocation(line: 2913, column: 8, scope: !4954)
!5021 = !DILocation(line: 2915, column: 15, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 2914, column: 6)
!5023 = !DILocation(line: 2916, column: 16, scope: !5022)
!5024 = !DILocation(line: 2917, column: 8, scope: !5022)
!5025 = !DILocation(line: 2919, column: 4, scope: !4954)
!5026 = !DILocation(line: 2924, column: 8, scope: !4964)
!5027 = !DILocation(line: 2925, column: 8, scope: !4964)
!5028 = !DILocation(line: 2925, column: 11, scope: !4964)
!5029 = !DILocation(line: 2925, column: 41, scope: !4964)
!5030 = !DILocation(line: 2925, column: 49, scope: !4964)
!5031 = !DILocation(line: 2926, column: 8, scope: !4964)
!5032 = !DILocation(line: 2926, column: 13, scope: !4964)
!5033 = !DILocation(line: 2926, column: 47, scope: !4964)
!5034 = !DILocation(line: 2926, column: 52, scope: !4964)
!5035 = !DILocation(line: 2927, column: 5, scope: !4964)
!5036 = !DILocation(line: 2927, column: 9, scope: !4964)
!5037 = !DILocation(line: 2927, column: 43, scope: !4964)
!5038 = !DILocation(line: 2928, column: 9, scope: !4964)
!5039 = !DILocation(line: 2924, column: 8, scope: !4954)
!5040 = !DILocation(line: 2930, column: 20, scope: !4963)
!5041 = !DILocation(line: 2930, column: 50, scope: !4963)
!5042 = !DILocation(line: 0, scope: !4963)
!5043 = !DILocation(line: 2931, column: 8, scope: !4963)
!5044 = !DILocation(line: 2932, column: 12, scope: !4967)
!5045 = !DILocation(line: 2932, column: 12, scope: !4963)
!5046 = !DILocation(line: 2933, column: 15, scope: !4967)
!5047 = !DILocation(line: 2933, column: 3, scope: !4967)
!5048 = !DILocation(line: 2937, column: 5, scope: !4966)
!5049 = !DILocation(line: 2938, column: 17, scope: !4966)
!5050 = !DILocation(line: 2939, column: 17, scope: !4966)
!5051 = !DILocation(line: 0, scope: !4966)
!5052 = !DILocation(line: 2940, column: 17, scope: !4966)
!5053 = !DILocation(line: 2941, column: 5, scope: !4966)
!5054 = !DILocation(line: 2946, column: 12, scope: !5055)
!5055 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 2946, column: 12)
!5056 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 2945, column: 6)
!5057 = !DILocation(line: 2946, column: 12, scope: !5056)
!5058 = !DILocation(line: 2950, column: 17, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5055, file: !3, line: 2949, column: 3)
!5060 = !DILocation(line: 2951, column: 17, scope: !5059)
!5061 = !DILocation(line: 2952, column: 5, scope: !5059)
!5062 = !DILocation(line: 0, scope: !4964)
!5063 = !DILocation(line: 2955, column: 11, scope: !4954)
!5064 = !DILocation(line: 2956, column: 8, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2956, column: 8)
!5066 = !DILocation(line: 2956, column: 8, scope: !4954)
!5067 = !DILocation(line: 2957, column: 6, scope: !5065)
!5068 = !DILocation(line: 2965, column: 12, scope: !4954)
!5069 = !DILocation(line: 2960, column: 40, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5065, file: !3, line: 2959, column: 6)
!5071 = !DILocation(line: 2961, column: 8, scope: !5070)
!5072 = !DILocation(line: 2963, column: 8, scope: !5070)
!5073 = !DILocation(line: 2967, column: 11, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2967, column: 11)
!5075 = !DILocation(line: 2967, column: 11, scope: !4955)
!5076 = !DILocation(line: 2968, column: 2, scope: !5074)
!5077 = !DILocation(line: 2976, column: 11, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2976, column: 11)
!5079 = !DILocation(line: 2976, column: 11, scope: !4955)
!5080 = !DILocation(line: 2971, column: 36, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 2970, column: 2)
!5082 = !DILocation(line: 2972, column: 4, scope: !5081)
!5083 = !DILocation(line: 2974, column: 4, scope: !5081)
!5084 = !DILocation(line: 2977, column: 2, scope: !5078)
!5085 = !DILocation(line: 2985, column: 39, scope: !4955)
!5086 = distinct !{!5086, !4970, !5087}
!5087 = !DILocation(line: 2986, column: 5, scope: !4949)
!5088 = !DILocation(line: 2980, column: 36, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 2979, column: 2)
!5090 = !DILocation(line: 2981, column: 4, scope: !5089)
!5091 = !DILocation(line: 2983, column: 4, scope: !5089)
!5092 = !DILocation(line: 2988, column: 1, scope: !4949)
!5093 = distinct !DISubprogram(name: "c_parser_expr_no_commas", scope: !3, file: !3, line: 4559, type: !713, scopeLine: 4560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5094)
!5094 = !{!5095, !5096, !5097, !5098, !5099, !5100, !5101, !5102}
!5095 = !DILocalVariable(name: "parser", arg: 1, scope: !5093, file: !3, line: 4559, type: !1896)
!5096 = !DILocalVariable(name: "after", arg: 2, scope: !5093, file: !3, line: 4559, type: !1919)
!5097 = !DILocalVariable(name: "lhs", scope: !5093, file: !3, line: 4561, type: !715)
!5098 = !DILocalVariable(name: "rhs", scope: !5093, file: !3, line: 4561, type: !715)
!5099 = !DILocalVariable(name: "ret", scope: !5093, file: !3, line: 4561, type: !715)
!5100 = !DILocalVariable(name: "code", scope: !5093, file: !3, line: 4562, type: !190)
!5101 = !DILocalVariable(name: "op_location", scope: !5093, file: !3, line: 4563, type: !846)
!5102 = !DILocalVariable(name: "exp_location", scope: !5093, file: !3, line: 4563, type: !846)
!5103 = !DILocation(line: 0, scope: !5093)
!5104 = !DILocation(line: 4561, column: 3, scope: !5093)
!5105 = !DILocation(line: 4564, column: 3, scope: !5093)
!5106 = !DILocation(line: 4565, column: 9, scope: !5093)
!5107 = !DILocation(line: 4566, column: 17, scope: !5093)
!5108 = !DILocation(line: 4566, column: 47, scope: !5093)
!5109 = !DILocation(line: 4567, column: 11, scope: !5093)
!5110 = !DILocation(line: 4567, column: 41, scope: !5093)
!5111 = !DILocation(line: 4567, column: 3, scope: !5093)
!5112 = !DILocation(line: 4574, column: 7, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 4568, column: 5)
!5114 = !DILocation(line: 4577, column: 7, scope: !5113)
!5115 = !DILocation(line: 4580, column: 7, scope: !5113)
!5116 = !DILocation(line: 4583, column: 7, scope: !5113)
!5117 = !DILocation(line: 4586, column: 7, scope: !5113)
!5118 = !DILocation(line: 4589, column: 7, scope: !5113)
!5119 = !DILocation(line: 4592, column: 7, scope: !5113)
!5120 = !DILocation(line: 4595, column: 7, scope: !5113)
!5121 = !DILocation(line: 4598, column: 7, scope: !5113)
!5122 = !DILocation(line: 4601, column: 7, scope: !5113)
!5123 = !DILocation(line: 4603, column: 14, scope: !5113)
!5124 = !DILocation(line: 4603, column: 7, scope: !5113)
!5125 = !DILocation(line: 0, scope: !5113)
!5126 = !DILocation(line: 4605, column: 3, scope: !5093)
!5127 = !DILocation(line: 4606, column: 18, scope: !5093)
!5128 = !DILocation(line: 4606, column: 48, scope: !5093)
!5129 = !DILocation(line: 4607, column: 9, scope: !5093)
!5130 = !DILocation(line: 4608, column: 9, scope: !5093)
!5131 = !DILocation(line: 4609, column: 51, scope: !5093)
!5132 = !DILocation(line: 4609, column: 62, scope: !5093)
!5133 = !DILocation(line: 4610, column: 30, scope: !5093)
!5134 = !DILocation(line: 4611, column: 10, scope: !5093)
!5135 = !DILocation(line: 4609, column: 15, scope: !5093)
!5136 = !DILocation(line: 4609, column: 7, scope: !5093)
!5137 = !DILocation(line: 4609, column: 13, scope: !5093)
!5138 = !DILocation(line: 4612, column: 12, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 4612, column: 7)
!5140 = !DILocation(line: 4612, column: 7, scope: !5093)
!5141 = !DILocation(line: 4613, column: 9, scope: !5139)
!5142 = !DILocation(line: 4613, column: 23, scope: !5139)
!5143 = !DILocation(line: 4613, column: 5, scope: !5139)
!5144 = !DILocation(line: 4616, column: 35, scope: !5145)
!5145 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 4615, column: 5)
!5146 = !DILocation(line: 4617, column: 11, scope: !5145)
!5147 = !DILocation(line: 4617, column: 25, scope: !5145)
!5148 = !DILocation(line: 4619, column: 7, scope: !5093)
!5149 = !DILocation(line: 4619, column: 21, scope: !5093)
!5150 = !DILocation(line: 4620, column: 10, scope: !5093)
!5151 = !DILocation(line: 4620, column: 3, scope: !5093)
!5152 = !DILocation(line: 4621, column: 1, scope: !5093)
!5153 = distinct !DISubprogram(name: "c_parser_conditional_expression", scope: !3, file: !3, line: 4638, type: !713, scopeLine: 4639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5154)
!5154 = !{!5155, !5156, !5157, !5158, !5159, !5160, !5161, !5162, !5163, !5166, !5168, !5171}
!5155 = !DILocalVariable(name: "parser", arg: 1, scope: !5153, file: !3, line: 4638, type: !1896)
!5156 = !DILocalVariable(name: "after", arg: 2, scope: !5153, file: !3, line: 4638, type: !1919)
!5157 = !DILocalVariable(name: "cond", scope: !5153, file: !3, line: 4640, type: !715)
!5158 = !DILocalVariable(name: "exp1", scope: !5153, file: !3, line: 4640, type: !715)
!5159 = !DILocalVariable(name: "exp2", scope: !5153, file: !3, line: 4640, type: !715)
!5160 = !DILocalVariable(name: "ret", scope: !5153, file: !3, line: 4640, type: !715)
!5161 = !DILocalVariable(name: "cond_loc", scope: !5153, file: !3, line: 4641, type: !846)
!5162 = !DILocalVariable(name: "colon_loc", scope: !5153, file: !3, line: 4641, type: !846)
!5163 = !DILocalVariable(name: "eptype", scope: !5164, file: !3, line: 4654, type: !718)
!5164 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 4653, column: 5)
!5165 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 4652, column: 7)
!5166 = !DILocalVariable(name: "exp2_loc", scope: !5167, file: !3, line: 4692, type: !846)
!5167 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 4691, column: 3)
!5168 = !DILocalVariable(name: "t1", scope: !5169, file: !3, line: 4706, type: !718)
!5169 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 4705, column: 5)
!5170 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 4702, column: 7)
!5171 = !DILocalVariable(name: "t2", scope: !5169, file: !3, line: 4706, type: !718)
!5172 = !DILocation(line: 0, scope: !5153)
!5173 = !DILocation(line: 4640, column: 3, scope: !5153)
!5174 = !DILocation(line: 4643, column: 3, scope: !5153)
!5175 = !DILocation(line: 4645, column: 10, scope: !5153)
!5176 = !DILocation(line: 4647, column: 7, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 4647, column: 7)
!5178 = !DILocation(line: 4647, column: 7, scope: !5153)
!5179 = !DILocation(line: 4648, column: 12, scope: !5177)
!5180 = !DILocation(line: 4648, column: 5, scope: !5177)
!5181 = !DILocation(line: 4649, column: 14, scope: !5153)
!5182 = !DILocation(line: 4649, column: 44, scope: !5153)
!5183 = !DILocation(line: 4650, column: 10, scope: !5153)
!5184 = !DILocation(line: 4651, column: 3, scope: !5153)
!5185 = !DILocation(line: 4652, column: 7, scope: !5165)
!5186 = !DILocation(line: 4652, column: 7, scope: !5153)
!5187 = !DILocation(line: 0, scope: !5164)
!5188 = !DILocation(line: 4655, column: 16, scope: !5164)
!5189 = !DILocation(line: 4655, column: 46, scope: !5164)
!5190 = !DILocation(line: 4655, column: 7, scope: !5164)
!5191 = !DILocation(line: 4657, column: 11, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 4657, column: 11)
!5193 = !DILocation(line: 4657, column: 34, scope: !5192)
!5194 = !DILocation(line: 4657, column: 11, scope: !5164)
!5195 = !DILocation(line: 4659, column: 13, scope: !5196)
!5196 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 4658, column: 2)
!5197 = !DILocation(line: 4660, column: 17, scope: !5196)
!5198 = !DILocation(line: 4660, column: 15, scope: !5196)
!5199 = !DILocation(line: 4661, column: 2, scope: !5196)
!5200 = !DILocation(line: 4663, column: 58, scope: !5164)
!5201 = !DILocation(line: 4663, column: 33, scope: !5164)
!5202 = !DILocation(line: 4663, column: 20, scope: !5164)
!5203 = !DILocation(line: 4663, column: 12, scope: !5164)
!5204 = !DILocation(line: 4663, column: 18, scope: !5164)
!5205 = !DILocation(line: 4664, column: 11, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 4664, column: 11)
!5207 = !DILocation(line: 4664, column: 11, scope: !5164)
!5208 = !DILocation(line: 4665, column: 15, scope: !5206)
!5209 = !DILocation(line: 4665, column: 13, scope: !5206)
!5210 = !DILocation(line: 4665, column: 2, scope: !5206)
!5211 = !DILocation(line: 4667, column: 72, scope: !5164)
!5212 = !DILocation(line: 4666, column: 12, scope: !5164)
!5213 = !DILocation(line: 4666, column: 26, scope: !5164)
!5214 = !DILocation(line: 4667, column: 20, scope: !5164)
!5215 = !DILocation(line: 4667, column: 18, scope: !5164)
!5216 = !DILocation(line: 4668, column: 54, scope: !5164)
!5217 = !DILocation(line: 4668, column: 51, scope: !5164)
!5218 = !DILocation(line: 4668, column: 37, scope: !5164)
!5219 = !DILocation(line: 4669, column: 5, scope: !5164)
!5220 = !DILocation(line: 4674, column: 38, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 4671, column: 5)
!5222 = !DILocation(line: 4674, column: 13, scope: !5221)
!5223 = !DILocation(line: 4673, column: 4, scope: !5221)
!5224 = !DILocation(line: 4673, column: 2, scope: !5221)
!5225 = !DILocation(line: 4675, column: 54, scope: !5221)
!5226 = !DILocation(line: 4675, column: 51, scope: !5221)
!5227 = !DILocation(line: 4675, column: 37, scope: !5221)
!5228 = !DILocation(line: 4676, column: 14, scope: !5221)
!5229 = !DILocation(line: 4678, column: 9, scope: !5221)
!5230 = !DILocation(line: 4678, column: 18, scope: !5221)
!5231 = !DILocation(line: 4678, column: 15, scope: !5221)
!5232 = !DILocation(line: 4679, column: 20, scope: !5221)
!5233 = !DILocation(line: 4679, column: 17, scope: !5221)
!5234 = !DILocation(line: 4679, column: 3, scope: !5221)
!5235 = !DILocation(line: 4677, column: 37, scope: !5221)
!5236 = !DILocation(line: 0, scope: !5165)
!5237 = !DILocation(line: 4682, column: 15, scope: !5153)
!5238 = !DILocation(line: 4682, column: 45, scope: !5153)
!5239 = !DILocation(line: 4683, column: 8, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5153, file: !3, line: 4683, column: 7)
!5241 = !DILocation(line: 4683, column: 7, scope: !5153)
!5242 = !DILocation(line: 4685, column: 45, scope: !5243)
!5243 = distinct !DILexicalBlock(scope: !5240, file: !3, line: 4684, column: 5)
!5244 = !DILocation(line: 4685, column: 54, scope: !5243)
!5245 = !DILocation(line: 4685, column: 51, scope: !5243)
!5246 = !DILocation(line: 4685, column: 37, scope: !5243)
!5247 = !DILocation(line: 4686, column: 19, scope: !5243)
!5248 = !DILocation(line: 4686, column: 17, scope: !5243)
!5249 = !DILocation(line: 4687, column: 11, scope: !5243)
!5250 = !DILocation(line: 4687, column: 25, scope: !5243)
!5251 = !DILocation(line: 4688, column: 11, scope: !5243)
!5252 = !DILocation(line: 4688, column: 25, scope: !5243)
!5253 = !DILocation(line: 4689, column: 14, scope: !5243)
!5254 = !DILocation(line: 4689, column: 7, scope: !5243)
!5255 = !DILocation(line: 4692, column: 27, scope: !5167)
!5256 = !DILocation(line: 4692, column: 57, scope: !5167)
!5257 = !DILocation(line: 0, scope: !5167)
!5258 = !DILocation(line: 4693, column: 12, scope: !5167)
!5259 = !DILocation(line: 4694, column: 12, scope: !5167)
!5260 = !DILocation(line: 4696, column: 41, scope: !5153)
!5261 = !DILocation(line: 4696, column: 50, scope: !5153)
!5262 = !DILocation(line: 4696, column: 47, scope: !5153)
!5263 = !DILocation(line: 4696, column: 33, scope: !5153)
!5264 = !DILocation(line: 4698, column: 16, scope: !5153)
!5265 = !DILocation(line: 4698, column: 30, scope: !5153)
!5266 = !DILocation(line: 4698, column: 11, scope: !5153)
!5267 = !DILocation(line: 4699, column: 16, scope: !5153)
!5268 = !DILocation(line: 4699, column: 28, scope: !5153)
!5269 = !DILocation(line: 4700, column: 16, scope: !5153)
!5270 = !DILocation(line: 4700, column: 28, scope: !5153)
!5271 = !DILocation(line: 4697, column: 15, scope: !5153)
!5272 = !DILocation(line: 4697, column: 7, scope: !5153)
!5273 = !DILocation(line: 4697, column: 13, scope: !5153)
!5274 = !DILocation(line: 4701, column: 7, scope: !5153)
!5275 = !DILocation(line: 4701, column: 21, scope: !5153)
!5276 = !DILocation(line: 4702, column: 21, scope: !5170)
!5277 = !DILocation(line: 4702, column: 18, scope: !5170)
!5278 = !DILocation(line: 4702, column: 37, scope: !5170)
!5279 = !DILocation(line: 4702, column: 45, scope: !5170)
!5280 = !DILocation(line: 4702, column: 51, scope: !5170)
!5281 = !DILocation(line: 4702, column: 7, scope: !5153)
!5282 = !DILocation(line: 4703, column: 9, scope: !5170)
!5283 = !DILocation(line: 4703, column: 23, scope: !5170)
!5284 = !DILocation(line: 4703, column: 5, scope: !5170)
!5285 = !DILocation(line: 4711, column: 12, scope: !5169)
!5286 = !DILocation(line: 4711, column: 54, scope: !5169)
!5287 = !DILocation(line: 0, scope: !5169)
!5288 = !DILocation(line: 4712, column: 17, scope: !5169)
!5289 = !DILocation(line: 4712, column: 12, scope: !5169)
!5290 = !DILocation(line: 4712, column: 54, scope: !5169)
!5291 = !DILocation(line: 4713, column: 32, scope: !5169)
!5292 = !DILocation(line: 4714, column: 14, scope: !5169)
!5293 = !DILocation(line: 4714, column: 8, scope: !5169)
!5294 = !DILocation(line: 4715, column: 12, scope: !5169)
!5295 = !DILocation(line: 4716, column: 8, scope: !5169)
!5296 = !DILocation(line: 4716, column: 5, scope: !5169)
!5297 = !DILocation(line: 4713, column: 28, scope: !5169)
!5298 = !DILocation(line: 4713, column: 11, scope: !5169)
!5299 = !DILocation(line: 4713, column: 25, scope: !5169)
!5300 = !DILocation(line: 4720, column: 10, scope: !5153)
!5301 = !DILocation(line: 4720, column: 3, scope: !5153)
!5302 = !DILocation(line: 4721, column: 1, scope: !5153)
!5303 = !DILocation(line: 0, scope: !712)
!5304 = !DILocation(line: 4817, column: 3, scope: !712)
!5305 = !DILocation(line: 4827, column: 5, scope: !712)
!5306 = !DILocation(line: 4857, column: 3, scope: !712)
!5307 = !DILocation(line: 4858, column: 18, scope: !712)
!5308 = !DILocation(line: 4858, column: 48, scope: !712)
!5309 = !DILocation(line: 4858, column: 12, scope: !712)
!5310 = !DILocation(line: 4858, column: 16, scope: !712)
!5311 = !DILocation(line: 4859, column: 19, scope: !712)
!5312 = !DILocation(line: 4860, column: 12, scope: !712)
!5313 = !DILocation(line: 4860, column: 17, scope: !712)
!5314 = !DILocation(line: 0, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !1936, file: !3, line: 4866, column: 11)
!5316 = !DILocation(line: 0, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !1936, file: !3, line: 4950, column: 2)
!5318 = !DILocation(line: 0, scope: !5319)
!5319 = distinct !DILexicalBlock(scope: !1936, file: !3, line: 4952, column: 2)
!5320 = !DILocation(line: 0, scope: !1936)
!5321 = !DILocation(line: 4862, column: 3, scope: !712)
!5322 = !DILocation(line: 4861, column: 6, scope: !712)
!5323 = !DILocation(line: 4866, column: 19, scope: !5315)
!5324 = !DILocation(line: 4866, column: 11, scope: !5315)
!5325 = !DILocation(line: 4866, column: 11, scope: !1936)
!5326 = !DILocation(line: 4868, column: 15, scope: !1936)
!5327 = !DILocation(line: 4868, column: 45, scope: !1936)
!5328 = !DILocation(line: 4868, column: 7, scope: !1936)
!5329 = !DILocation(line: 4877, column: 4, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !1936, file: !3, line: 4869, column: 2)
!5331 = !DILocation(line: 4881, column: 4, scope: !5330)
!5332 = !DILocation(line: 4885, column: 4, scope: !5330)
!5333 = !DILocation(line: 4889, column: 4, scope: !5330)
!5334 = !DILocation(line: 4893, column: 4, scope: !5330)
!5335 = !DILocation(line: 4897, column: 4, scope: !5330)
!5336 = !DILocation(line: 4901, column: 4, scope: !5330)
!5337 = !DILocation(line: 4905, column: 4, scope: !5330)
!5338 = !DILocation(line: 4909, column: 4, scope: !5330)
!5339 = !DILocation(line: 4913, column: 4, scope: !5330)
!5340 = !DILocation(line: 4917, column: 4, scope: !5330)
!5341 = !DILocation(line: 4921, column: 4, scope: !5330)
!5342 = !DILocation(line: 4925, column: 4, scope: !5330)
!5343 = !DILocation(line: 4929, column: 4, scope: !5330)
!5344 = !DILocation(line: 4933, column: 4, scope: !5330)
!5345 = !DILocation(line: 4937, column: 4, scope: !5330)
!5346 = !DILocation(line: 4941, column: 4, scope: !5330)
!5347 = !DILocation(line: 0, scope: !5330)
!5348 = !DILocation(line: 4947, column: 20, scope: !1936)
!5349 = !DILocation(line: 4947, column: 50, scope: !1936)
!5350 = !DILocation(line: 4948, column: 7, scope: !1936)
!5351 = !DILocation(line: 4949, column: 7, scope: !1936)
!5352 = !DILocation(line: 4949, column: 23, scope: !1936)
!5353 = !DILocation(line: 4949, column: 33, scope: !1936)
!5354 = !DILocation(line: 4949, column: 20, scope: !1936)
!5355 = !DILocation(line: 4950, column: 2, scope: !5317)
!5356 = !DILocation(line: 4950, column: 2, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 4950, column: 2)
!5358 = distinct !{!5358, !5351, !5359}
!5359 = !DILocation(line: 4950, column: 2, scope: !1936)
!5360 = !DILocation(line: 4951, column: 7, scope: !1936)
!5361 = !DILocation(line: 4954, column: 14, scope: !5319)
!5362 = !DILocation(line: 4955, column: 8, scope: !5319)
!5363 = !DILocation(line: 4955, column: 53, scope: !5319)
!5364 = !DILocation(line: 4958, column: 17, scope: !5319)
!5365 = !DILocation(line: 4958, column: 57, scope: !5319)
!5366 = !DILocation(line: 4958, column: 22, scope: !5319)
!5367 = !DILocation(line: 4957, column: 27, scope: !5319)
!5368 = !DILocation(line: 4957, column: 25, scope: !5319)
!5369 = !DILocation(line: 4960, column: 13, scope: !5319)
!5370 = !DILocation(line: 4960, column: 10, scope: !5319)
!5371 = !DILocation(line: 4959, column: 34, scope: !5319)
!5372 = !DILocation(line: 4961, column: 4, scope: !5319)
!5373 = !DILocation(line: 4963, column: 14, scope: !5319)
!5374 = !DILocation(line: 4964, column: 8, scope: !5319)
!5375 = !DILocation(line: 4964, column: 53, scope: !5319)
!5376 = !DILocation(line: 4967, column: 17, scope: !5319)
!5377 = !DILocation(line: 4967, column: 57, scope: !5319)
!5378 = !DILocation(line: 4967, column: 22, scope: !5319)
!5379 = !DILocation(line: 4966, column: 27, scope: !5319)
!5380 = !DILocation(line: 4966, column: 25, scope: !5319)
!5381 = !DILocation(line: 4969, column: 13, scope: !5319)
!5382 = !DILocation(line: 4969, column: 10, scope: !5319)
!5383 = !DILocation(line: 4968, column: 34, scope: !5319)
!5384 = !DILocation(line: 4970, column: 4, scope: !5319)
!5385 = !DILocation(line: 4974, column: 9, scope: !1936)
!5386 = !DILocation(line: 4975, column: 7, scope: !1936)
!5387 = !DILocation(line: 4975, column: 17, scope: !1936)
!5388 = !DILocation(line: 4975, column: 21, scope: !1936)
!5389 = !DILocation(line: 4976, column: 17, scope: !1936)
!5390 = !DILocation(line: 4976, column: 24, scope: !1936)
!5391 = !DILocation(line: 4977, column: 17, scope: !1936)
!5392 = !DILocation(line: 4977, column: 22, scope: !1936)
!5393 = !DILocation(line: 4978, column: 17, scope: !1936)
!5394 = !DILocation(line: 4978, column: 20, scope: !1936)
!5395 = !DILocation(line: 4979, column: 21, scope: !1936)
!5396 = !DILocation(line: 4980, column: 5, scope: !712)
!5397 = distinct !{!5397, !5321, !5396}
!5398 = !DILocation(line: 0, scope: !5399)
!5399 = distinct !DILexicalBlock(scope: !712, file: !3, line: 4983, column: 5)
!5400 = !DILocation(line: 4982, column: 3, scope: !712)
!5401 = !DILocation(line: 4982, column: 13, scope: !712)
!5402 = !DILocation(line: 4983, column: 5, scope: !5399)
!5403 = !DILocation(line: 4983, column: 5, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5399, file: !3, line: 4983, column: 5)
!5405 = distinct !{!5405, !5400, !5406}
!5406 = !DILocation(line: 4983, column: 5, scope: !712)
!5407 = !DILocation(line: 4984, column: 19, scope: !712)
!5408 = !DILocation(line: 4986, column: 1, scope: !712)
!5409 = distinct !DISubprogram(name: "c_parser_expression_conv", scope: !3, file: !3, line: 6021, type: !5410, scopeLine: 6022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5412)
!5410 = !DISubroutineType(types: !5411)
!5411 = !{!715, !1896}
!5412 = !{!5413, !5414, !5415}
!5413 = !DILocalVariable(name: "parser", arg: 1, scope: !5409, file: !3, line: 6021, type: !1896)
!5414 = !DILocalVariable(name: "expr", scope: !5409, file: !3, line: 6023, type: !715)
!5415 = !DILocalVariable(name: "loc", scope: !5409, file: !3, line: 6024, type: !846)
!5416 = !DILocation(line: 0, scope: !5409)
!5417 = !DILocation(line: 6023, column: 17, scope: !5409)
!5418 = !DILocation(line: 6024, column: 20, scope: !5409)
!5419 = !DILocation(line: 6024, column: 50, scope: !5409)
!5420 = !DILocation(line: 6025, column: 10, scope: !5409)
!5421 = !DILocation(line: 6026, column: 10, scope: !5409)
!5422 = !DILocation(line: 6028, column: 1, scope: !5409)
!5423 = distinct !DISubprogram(name: "c_parser_cast_expression", scope: !3, file: !3, line: 4998, type: !713, scopeLine: 4999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5424)
!5424 = !{!5425, !5426, !5427, !5428, !5431, !5432, !5433}
!5425 = !DILocalVariable(name: "parser", arg: 1, scope: !5423, file: !3, line: 4998, type: !1896)
!5426 = !DILocalVariable(name: "after", arg: 2, scope: !5423, file: !3, line: 4998, type: !1919)
!5427 = !DILocalVariable(name: "cast_loc", scope: !5423, file: !3, line: 5000, type: !846)
!5428 = !DILocalVariable(name: "type_name", scope: !5429, file: !3, line: 5012, type: !2011)
!5429 = distinct !DILexicalBlock(scope: !5430, file: !3, line: 5011, column: 5)
!5430 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 5009, column: 7)
!5431 = !DILocalVariable(name: "ret", scope: !5429, file: !3, line: 5013, type: !715)
!5432 = !DILocalVariable(name: "expr", scope: !5429, file: !3, line: 5014, type: !715)
!5433 = !DILocalVariable(name: "expr_loc", scope: !5434, file: !3, line: 5033, type: !846)
!5434 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 5032, column: 7)
!5435 = !DILocation(line: 0, scope: !5423)
!5436 = !DILocation(line: 5000, column: 25, scope: !5423)
!5437 = !DILocation(line: 5000, column: 55, scope: !5423)
!5438 = !DILocation(line: 5001, column: 3, scope: !5423)
!5439 = !DILocation(line: 5002, column: 7, scope: !5423)
!5440 = !DILocation(line: 5003, column: 12, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5423, file: !3, line: 5002, column: 7)
!5442 = !DILocation(line: 5003, column: 5, scope: !5441)
!5443 = !DILocation(line: 5009, column: 7, scope: !5430)
!5444 = !DILocation(line: 5010, column: 7, scope: !5430)
!5445 = !DILocation(line: 5010, column: 35, scope: !5430)
!5446 = !DILocation(line: 5010, column: 10, scope: !5430)
!5447 = !DILocation(line: 5009, column: 7, scope: !5423)
!5448 = !DILocation(line: 5013, column: 7, scope: !5429)
!5449 = !DILocation(line: 5014, column: 7, scope: !5429)
!5450 = !DILocation(line: 5015, column: 7, scope: !5429)
!5451 = !DILocation(line: 5016, column: 19, scope: !5429)
!5452 = !DILocation(line: 0, scope: !5429)
!5453 = !DILocation(line: 5017, column: 7, scope: !5429)
!5454 = !DILocation(line: 5018, column: 21, scope: !5455)
!5455 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 5018, column: 11)
!5456 = !DILocation(line: 5018, column: 11, scope: !5429)
!5457 = !DILocation(line: 5020, column: 16, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5455, file: !3, line: 5019, column: 2)
!5459 = !DILocation(line: 5020, column: 14, scope: !5458)
!5460 = !DILocation(line: 5021, column: 8, scope: !5458)
!5461 = !DILocation(line: 5021, column: 22, scope: !5458)
!5462 = !DILocation(line: 5022, column: 8, scope: !5458)
!5463 = !DILocation(line: 5022, column: 22, scope: !5458)
!5464 = !DILocation(line: 5023, column: 11, scope: !5458)
!5465 = !DILocation(line: 5023, column: 4, scope: !5458)
!5466 = !DILocation(line: 5027, column: 37, scope: !5429)
!5467 = !DILocation(line: 5027, column: 44, scope: !5429)
!5468 = !DILocation(line: 5027, column: 7, scope: !5429)
!5469 = !DILocation(line: 5029, column: 11, scope: !5470)
!5470 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 5029, column: 11)
!5471 = !DILocation(line: 5029, column: 11, scope: !5429)
!5472 = !DILocation(line: 5030, column: 9, scope: !5470)
!5473 = !DILocation(line: 5030, column: 2, scope: !5470)
!5474 = !DILocation(line: 5033, column: 24, scope: !5434)
!5475 = !DILocation(line: 5033, column: 54, scope: !5434)
!5476 = !DILocation(line: 0, scope: !5434)
!5477 = !DILocation(line: 5034, column: 9, scope: !5434)
!5478 = !DILocation(line: 5035, column: 9, scope: !5434)
!5479 = !DILocation(line: 5037, column: 58, scope: !5429)
!5480 = !DILocation(line: 5037, column: 19, scope: !5429)
!5481 = !DILocation(line: 5037, column: 11, scope: !5429)
!5482 = !DILocation(line: 5037, column: 17, scope: !5429)
!5483 = !DILocation(line: 5038, column: 11, scope: !5429)
!5484 = !DILocation(line: 5038, column: 25, scope: !5429)
!5485 = !DILocation(line: 5039, column: 11, scope: !5429)
!5486 = !DILocation(line: 5039, column: 25, scope: !5429)
!5487 = !DILocation(line: 5040, column: 14, scope: !5429)
!5488 = !DILocation(line: 5040, column: 7, scope: !5429)
!5489 = !DILocation(line: 5041, column: 5, scope: !5430)
!5490 = !DILocation(line: 5043, column: 12, scope: !5430)
!5491 = !DILocation(line: 5043, column: 5, scope: !5430)
!5492 = !DILocation(line: 5044, column: 1, scope: !5423)
!5493 = distinct !DISubprogram(name: "c_parser_postfix_expression_after_primary", scope: !3, file: !3, line: 5853, type: !5494, scopeLine: 5856, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5496)
!5494 = !DISubroutineType(types: !5495)
!5495 = !{!715, !1896, !846, !715}
!5496 = !{!5497, !5498, !5499, !5500, !5501, !5502, !5503, !5504, !5505, !5507, !5511}
!5497 = !DILocalVariable(name: "parser", arg: 1, scope: !5493, file: !3, line: 5853, type: !1896)
!5498 = !DILocalVariable(name: "expr_loc", arg: 2, scope: !5493, file: !3, line: 5854, type: !846)
!5499 = !DILocalVariable(name: "expr", arg: 3, scope: !5493, file: !3, line: 5855, type: !715)
!5500 = !DILocalVariable(name: "orig_expr", scope: !5493, file: !3, line: 5857, type: !715)
!5501 = !DILocalVariable(name: "ident", scope: !5493, file: !3, line: 5858, type: !718)
!5502 = !DILocalVariable(name: "idx", scope: !5493, file: !3, line: 5858, type: !718)
!5503 = !DILocalVariable(name: "exprlist", scope: !5493, file: !3, line: 5859, type: !1386)
!5504 = !DILocalVariable(name: "origtypes", scope: !5493, file: !3, line: 5860, type: !1386)
!5505 = !DILocalVariable(name: "op_loc", scope: !5506, file: !3, line: 5863, type: !846)
!5506 = distinct !DILexicalBlock(scope: !5493, file: !3, line: 5862, column: 5)
!5507 = !DILocalVariable(name: "field", scope: !5508, file: !3, line: 5925, type: !718)
!5508 = distinct !DILexicalBlock(scope: !5509, file: !3, line: 5923, column: 6)
!5509 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 5920, column: 8)
!5510 = distinct !DILexicalBlock(scope: !5506, file: !3, line: 5865, column: 2)
!5511 = !DILocalVariable(name: "field", scope: !5512, file: !3, line: 5958, type: !718)
!5512 = distinct !DILexicalBlock(scope: !5513, file: !3, line: 5956, column: 6)
!5513 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 5953, column: 8)
!5514 = !DILocation(line: 0, scope: !5493)
!5515 = !DILocation(line: 5855, column: 23, scope: !5493)
!5516 = !DILocation(line: 5857, column: 3, scope: !5493)
!5517 = !DILocation(line: 5860, column: 3, scope: !5493)
!5518 = !DILocation(line: 0, scope: !5510)
!5519 = !DILocation(line: 0, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5512, file: !3, line: 5959, column: 12)
!5521 = !DILocation(line: 0, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5523, file: !3, line: 5939, column: 6)
!5523 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 5936, column: 8)
!5524 = !DILocation(line: 0, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 5891, column: 8)
!5526 = !DILocation(line: 5861, column: 3, scope: !5493)
!5527 = !DILocation(line: 5863, column: 27, scope: !5506)
!5528 = !DILocation(line: 5863, column: 57, scope: !5506)
!5529 = !DILocation(line: 0, scope: !5506)
!5530 = !DILocation(line: 5864, column: 15, scope: !5506)
!5531 = !DILocation(line: 5864, column: 45, scope: !5506)
!5532 = !DILocation(line: 5864, column: 7, scope: !5506)
!5533 = !DILocation(line: 5868, column: 4, scope: !5510)
!5534 = !DILocation(line: 5869, column: 10, scope: !5510)
!5535 = !DILocation(line: 5869, column: 39, scope: !5510)
!5536 = !DILocation(line: 5870, column: 4, scope: !5510)
!5537 = !DILocation(line: 5872, column: 47, scope: !5510)
!5538 = !DILocation(line: 5872, column: 17, scope: !5510)
!5539 = !DILocation(line: 5872, column: 15, scope: !5510)
!5540 = !DILocation(line: 5873, column: 23, scope: !5510)
!5541 = !DILocation(line: 5874, column: 23, scope: !5510)
!5542 = !DILocation(line: 5875, column: 4, scope: !5510)
!5543 = !DILocation(line: 5878, column: 4, scope: !5510)
!5544 = !DILocation(line: 5879, column: 8, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 5879, column: 8)
!5546 = !DILocation(line: 5879, column: 8, scope: !5510)
!5547 = !DILocation(line: 5882, column: 17, scope: !5545)
!5548 = !DILocation(line: 0, scope: !5545)
!5549 = !DILocation(line: 5883, column: 4, scope: !5510)
!5550 = !DILocation(line: 5885, column: 16, scope: !5510)
!5551 = !DILocation(line: 5888, column: 55, scope: !5510)
!5552 = !DILocation(line: 5889, column: 7, scope: !5510)
!5553 = !DILocation(line: 5888, column: 17, scope: !5510)
!5554 = !DILocation(line: 5888, column: 15, scope: !5510)
!5555 = !DILocation(line: 5890, column: 23, scope: !5510)
!5556 = !DILocation(line: 5891, column: 8, scope: !5525)
!5557 = !DILocation(line: 5891, column: 31, scope: !5525)
!5558 = !DILocation(line: 5892, column: 8, scope: !5525)
!5559 = !DILocation(line: 5892, column: 11, scope: !5525)
!5560 = !DILocation(line: 5892, column: 39, scope: !5525)
!5561 = !DILocation(line: 5893, column: 8, scope: !5525)
!5562 = !DILocation(line: 5893, column: 11, scope: !5525)
!5563 = !DILocation(line: 5893, column: 49, scope: !5525)
!5564 = !DILocation(line: 5894, column: 8, scope: !5525)
!5565 = !DILocation(line: 5894, column: 11, scope: !5525)
!5566 = !DILocation(line: 5894, column: 48, scope: !5525)
!5567 = !DILocation(line: 5891, column: 8, scope: !5510)
!5568 = !DILocation(line: 5895, column: 25, scope: !5525)
!5569 = !DILocation(line: 5895, column: 6, scope: !5525)
!5570 = !DILocation(line: 5896, column: 23, scope: !5510)
!5571 = !DILocation(line: 5897, column: 17, scope: !5572)
!5572 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 5897, column: 8)
!5573 = !DILocation(line: 5897, column: 8, scope: !5510)
!5574 = !DILocation(line: 5899, column: 8, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5572, file: !3, line: 5898, column: 6)
!5576 = !DILocation(line: 5900, column: 29, scope: !5575)
!5577 = !DILocation(line: 5900, column: 8, scope: !5575)
!5578 = !DILocation(line: 5901, column: 6, scope: !5575)
!5579 = !DILocation(line: 5905, column: 4, scope: !5510)
!5580 = !DILocation(line: 5906, column: 11, scope: !5510)
!5581 = !DILocation(line: 5907, column: 8, scope: !5582)
!5582 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 5907, column: 8)
!5583 = !DILocation(line: 5907, column: 8, scope: !5510)
!5584 = !DILocation(line: 5908, column: 14, scope: !5582)
!5585 = !DILocation(line: 5908, column: 44, scope: !5582)
!5586 = !DILocation(line: 5917, column: 4, scope: !5510)
!5587 = !DILocation(line: 5918, column: 51, scope: !5510)
!5588 = !DILocation(line: 5918, column: 17, scope: !5510)
!5589 = !DILocation(line: 5918, column: 15, scope: !5510)
!5590 = !DILocation(line: 5919, column: 23, scope: !5510)
!5591 = !DILocation(line: 5920, column: 8, scope: !5509)
!5592 = !DILocation(line: 5920, column: 31, scope: !5509)
!5593 = !DILocation(line: 5920, column: 8, scope: !5510)
!5594 = !DILocation(line: 5911, column: 8, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5582, file: !3, line: 5910, column: 6)
!5596 = !DILocation(line: 5912, column: 21, scope: !5595)
!5597 = !DILocation(line: 5912, column: 19, scope: !5595)
!5598 = !DILocation(line: 5913, column: 27, scope: !5595)
!5599 = !DILocation(line: 5914, column: 34, scope: !5595)
!5600 = !DILocation(line: 5915, column: 15, scope: !5595)
!5601 = !DILocation(line: 5915, column: 8, scope: !5595)
!5602 = !DILocation(line: 5921, column: 25, scope: !5509)
!5603 = !DILocation(line: 5921, column: 6, scope: !5509)
!5604 = !DILocation(line: 5925, column: 21, scope: !5508)
!5605 = !DILocation(line: 0, scope: !5508)
!5606 = !DILocation(line: 5926, column: 12, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5508, file: !3, line: 5926, column: 12)
!5608 = !DILocation(line: 5926, column: 30, scope: !5607)
!5609 = !DILocation(line: 5926, column: 12, scope: !5508)
!5610 = !DILocation(line: 5927, column: 22, scope: !5607)
!5611 = !DILocation(line: 5927, column: 3, scope: !5607)
!5612 = !DILocation(line: 5929, column: 24, scope: !5607)
!5613 = !DILocation(line: 5929, column: 22, scope: !5607)
!5614 = !DILocation(line: 5934, column: 4, scope: !5510)
!5615 = !DILocation(line: 5935, column: 11, scope: !5510)
!5616 = !DILocation(line: 5936, column: 8, scope: !5523)
!5617 = !DILocation(line: 5936, column: 8, scope: !5510)
!5618 = !DILocation(line: 5937, column: 14, scope: !5523)
!5619 = !DILocation(line: 5937, column: 44, scope: !5523)
!5620 = !DILocation(line: 5946, column: 4, scope: !5510)
!5621 = !DILocation(line: 5949, column: 14, scope: !5510)
!5622 = !DILocation(line: 5948, column: 10, scope: !5510)
!5623 = !DILocation(line: 5947, column: 17, scope: !5510)
!5624 = !DILocation(line: 5947, column: 15, scope: !5510)
!5625 = !DILocation(line: 5952, column: 23, scope: !5510)
!5626 = !DILocation(line: 5953, column: 8, scope: !5513)
!5627 = !DILocation(line: 5953, column: 31, scope: !5513)
!5628 = !DILocation(line: 5953, column: 8, scope: !5510)
!5629 = !DILocation(line: 5940, column: 8, scope: !5522)
!5630 = !DILocation(line: 5941, column: 21, scope: !5522)
!5631 = !DILocation(line: 5941, column: 19, scope: !5522)
!5632 = !DILocation(line: 5942, column: 27, scope: !5522)
!5633 = !DILocation(line: 5943, column: 27, scope: !5522)
!5634 = !DILocation(line: 5944, column: 15, scope: !5522)
!5635 = !DILocation(line: 5944, column: 8, scope: !5522)
!5636 = !DILocation(line: 5954, column: 25, scope: !5513)
!5637 = !DILocation(line: 5954, column: 6, scope: !5513)
!5638 = !DILocation(line: 5958, column: 21, scope: !5512)
!5639 = !DILocation(line: 0, scope: !5512)
!5640 = !DILocation(line: 5959, column: 12, scope: !5520)
!5641 = !DILocation(line: 5959, column: 30, scope: !5520)
!5642 = !DILocation(line: 5959, column: 12, scope: !5512)
!5643 = !DILocation(line: 5960, column: 22, scope: !5520)
!5644 = !DILocation(line: 5960, column: 3, scope: !5520)
!5645 = !DILocation(line: 5962, column: 24, scope: !5520)
!5646 = !DILocation(line: 5962, column: 22, scope: !5520)
!5647 = !DILocation(line: 5967, column: 4, scope: !5510)
!5648 = !DILocation(line: 5968, column: 11, scope: !5510)
!5649 = !DILocation(line: 5970, column: 37, scope: !5510)
!5650 = !DILocation(line: 5969, column: 17, scope: !5510)
!5651 = !DILocation(line: 5969, column: 15, scope: !5510)
!5652 = !DILocation(line: 5971, column: 23, scope: !5510)
!5653 = !DILocation(line: 5972, column: 23, scope: !5510)
!5654 = !DILocation(line: 5973, column: 4, scope: !5510)
!5655 = !DILocation(line: 5976, column: 4, scope: !5510)
!5656 = !DILocation(line: 5977, column: 11, scope: !5510)
!5657 = !DILocation(line: 5979, column: 37, scope: !5510)
!5658 = !DILocation(line: 5978, column: 17, scope: !5510)
!5659 = !DILocation(line: 5978, column: 15, scope: !5510)
!5660 = !DILocation(line: 5980, column: 23, scope: !5510)
!5661 = !DILocation(line: 5981, column: 23, scope: !5510)
!5662 = !DILocation(line: 5982, column: 4, scope: !5510)
!5663 = !DILocation(line: 5984, column: 11, scope: !5510)
!5664 = !DILocation(line: 5984, column: 4, scope: !5510)
!5665 = distinct !{!5665, !5526, !5666}
!5666 = !DILocation(line: 5986, column: 5, scope: !5493)
!5667 = !DILocation(line: 5987, column: 1, scope: !5493)
!5668 = distinct !DISubprogram(name: "c_parser_peek_2nd_token", scope: !3, file: !3, line: 511, type: !2628, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5669)
!5669 = !{!5670}
!5670 = !DILocalVariable(name: "parser", arg: 1, scope: !5668, file: !3, line: 511, type: !1896)
!5671 = !DILocation(line: 0, scope: !5668)
!5672 = !DILocation(line: 513, column: 15, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 513, column: 7)
!5674 = !DILocation(line: 513, column: 28, scope: !5673)
!5675 = !DILocation(line: 513, column: 7, scope: !5668)
!5676 = !DILocation(line: 514, column: 5, scope: !5673)
!5677 = !DILocation(line: 515, column: 3, scope: !5668)
!5678 = !DILocation(line: 516, column: 3, scope: !5668)
!5679 = !DILocation(line: 517, column: 3, scope: !5668)
!5680 = !DILocation(line: 518, column: 29, scope: !5668)
!5681 = !DILocation(line: 518, column: 3, scope: !5668)
!5682 = !DILocation(line: 519, column: 24, scope: !5668)
!5683 = !DILocation(line: 520, column: 3, scope: !5668)
!5684 = !DILocation(line: 521, column: 1, scope: !5668)
!5685 = distinct !DISubprogram(name: "c_parser_postfix_expression_after_paren_type", scope: !3, file: !3, line: 5789, type: !5686, scopeLine: 5792, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5688)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!715, !1896, !2011, !846}
!5688 = !{!5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697, !5698}
!5689 = !DILocalVariable(name: "parser", arg: 1, scope: !5685, file: !3, line: 5789, type: !1896)
!5690 = !DILocalVariable(name: "type_name", arg: 2, scope: !5685, file: !3, line: 5790, type: !2011)
!5691 = !DILocalVariable(name: "type_loc", arg: 3, scope: !5685, file: !3, line: 5791, type: !846)
!5692 = !DILocalVariable(name: "type", scope: !5685, file: !3, line: 5793, type: !718)
!5693 = !DILocalVariable(name: "init", scope: !5685, file: !3, line: 5794, type: !715)
!5694 = !DILocalVariable(name: "non_const", scope: !5685, file: !3, line: 5795, type: !838)
!5695 = !DILocalVariable(name: "expr", scope: !5685, file: !3, line: 5796, type: !715)
!5696 = !DILocalVariable(name: "start_loc", scope: !5685, file: !3, line: 5797, type: !846)
!5697 = !DILocalVariable(name: "type_expr", scope: !5685, file: !3, line: 5798, type: !718)
!5698 = !DILocalVariable(name: "type_expr_const", scope: !5685, file: !3, line: 5799, type: !838)
!5699 = !DILocation(line: 0, scope: !5685)
!5700 = !DILocation(line: 5794, column: 3, scope: !5685)
!5701 = !DILocation(line: 5796, column: 3, scope: !5685)
!5702 = !DILocation(line: 5798, column: 3, scope: !5685)
!5703 = !DILocation(line: 5798, column: 8, scope: !5685)
!5704 = !DILocation(line: 5799, column: 3, scope: !5685)
!5705 = !DILocation(line: 5799, column: 8, scope: !5685)
!5706 = !DILocation(line: 5800, column: 3, scope: !5685)
!5707 = !DILocation(line: 5801, column: 3, scope: !5685)
!5708 = !DILocation(line: 5802, column: 10, scope: !5685)
!5709 = !DILocation(line: 5803, column: 15, scope: !5685)
!5710 = !DILocation(line: 5803, column: 45, scope: !5685)
!5711 = !DILocation(line: 5804, column: 15, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 5804, column: 7)
!5713 = !DILocation(line: 5804, column: 12, scope: !5712)
!5714 = !DILocation(line: 5804, column: 31, scope: !5712)
!5715 = !DILocation(line: 5804, column: 34, scope: !5712)
!5716 = !DILocation(line: 5804, column: 7, scope: !5685)
!5717 = !DILocation(line: 5806, column: 7, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 5805, column: 5)
!5719 = !DILocation(line: 5807, column: 14, scope: !5718)
!5720 = !DILocation(line: 5808, column: 5, scope: !5718)
!5721 = !DILocation(line: 5809, column: 10, scope: !5685)
!5722 = !DILocation(line: 5810, column: 3, scope: !5685)
!5723 = !DILocation(line: 5811, column: 3, scope: !5685)
!5724 = !DILocation(line: 5813, column: 15, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 5813, column: 7)
!5726 = !DILocation(line: 5813, column: 12, scope: !5725)
!5727 = !DILocation(line: 5814, column: 7, scope: !5725)
!5728 = !DILocation(line: 5814, column: 11, scope: !5725)
!5729 = !DILocation(line: 5815, column: 10, scope: !5725)
!5730 = !DILocation(line: 5815, column: 7, scope: !5725)
!5731 = !DILocation(line: 5817, column: 7, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 5816, column: 5)
!5733 = !DILocation(line: 5818, column: 14, scope: !5732)
!5734 = !DILocation(line: 5819, column: 5, scope: !5732)
!5735 = !DILocation(line: 5821, column: 8, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 5821, column: 7)
!5737 = !DILocation(line: 5821, column: 7, scope: !5685)
!5738 = !DILocation(line: 5822, column: 5, scope: !5736)
!5739 = !DILocation(line: 5823, column: 22, scope: !5685)
!5740 = !DILocation(line: 5823, column: 17, scope: !5685)
!5741 = !DILocation(line: 5823, column: 28, scope: !5685)
!5742 = !DILocation(line: 5823, column: 31, scope: !5685)
!5743 = !DILocation(line: 5823, column: 54, scope: !5685)
!5744 = !DILocation(line: 5823, column: 16, scope: !5685)
!5745 = !DILocation(line: 5824, column: 11, scope: !5685)
!5746 = !DILocation(line: 5825, column: 16, scope: !5685)
!5747 = !DILocation(line: 5825, column: 30, scope: !5685)
!5748 = !DILocation(line: 5826, column: 17, scope: !5685)
!5749 = !DILocation(line: 5826, column: 16, scope: !5685)
!5750 = !DILocation(line: 5826, column: 13, scope: !5685)
!5751 = !DILocation(line: 5827, column: 16, scope: !5685)
!5752 = !DILocation(line: 5827, column: 8, scope: !5685)
!5753 = !DILocation(line: 5827, column: 14, scope: !5685)
!5754 = !DILocation(line: 5828, column: 8, scope: !5685)
!5755 = !DILocation(line: 5828, column: 22, scope: !5685)
!5756 = !DILocation(line: 5829, column: 8, scope: !5685)
!5757 = !DILocation(line: 5829, column: 22, scope: !5685)
!5758 = !DILocation(line: 5830, column: 7, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5685, file: !3, line: 5830, column: 7)
!5760 = !DILocation(line: 5830, column: 7, scope: !5685)
!5761 = !DILocation(line: 5832, column: 11, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 5832, column: 11)
!5763 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 5831, column: 5)
!5764 = !DILocation(line: 5832, column: 34, scope: !5762)
!5765 = !DILocation(line: 5832, column: 11, scope: !5763)
!5766 = !DILocation(line: 5834, column: 4, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 5833, column: 2)
!5768 = !DILocation(line: 0, scope: !5767)
!5769 = !DILocation(line: 5835, column: 42, scope: !5767)
!5770 = !DILocation(line: 5835, column: 4, scope: !5767)
!5771 = !DILocation(line: 5835, column: 40, scope: !5767)
!5772 = !DILocation(line: 5836, column: 2, scope: !5767)
!5773 = !DILocation(line: 5839, column: 4, scope: !5774)
!5774 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 5838, column: 2)
!5775 = !DILocation(line: 5840, column: 17, scope: !5774)
!5776 = !DILocation(line: 5840, column: 15, scope: !5774)
!5777 = !DILocation(line: 5844, column: 10, scope: !5685)
!5778 = !DILocation(line: 5845, column: 1, scope: !5685)
!5779 = distinct !DISubprogram(name: "c_parser_unary_expression", scope: !3, file: !3, line: 5074, type: !5410, scopeLine: 5075, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5780)
!5780 = !{!5781, !5782, !5783, !5784, !5785, !5786}
!5781 = !DILocalVariable(name: "parser", arg: 1, scope: !5779, file: !3, line: 5074, type: !1896)
!5782 = !DILocalVariable(name: "ext", scope: !5779, file: !3, line: 5076, type: !815)
!5783 = !DILocalVariable(name: "ret", scope: !5779, file: !3, line: 5077, type: !715)
!5784 = !DILocalVariable(name: "op", scope: !5779, file: !3, line: 5077, type: !715)
!5785 = !DILocalVariable(name: "op_loc", scope: !5779, file: !3, line: 5078, type: !846)
!5786 = !DILocalVariable(name: "exp_loc", scope: !5779, file: !3, line: 5079, type: !846)
!5787 = !DILocation(line: 0, scope: !5779)
!5788 = !DILocation(line: 5077, column: 3, scope: !5779)
!5789 = !DILocation(line: 5078, column: 23, scope: !5779)
!5790 = !DILocation(line: 5078, column: 53, scope: !5779)
!5791 = !DILocation(line: 5080, column: 7, scope: !5779)
!5792 = !DILocation(line: 5080, column: 21, scope: !5779)
!5793 = !DILocation(line: 5081, column: 7, scope: !5779)
!5794 = !DILocation(line: 5081, column: 21, scope: !5779)
!5795 = !DILocation(line: 5082, column: 11, scope: !5779)
!5796 = !DILocation(line: 5082, column: 41, scope: !5779)
!5797 = !DILocation(line: 5082, column: 3, scope: !5779)
!5798 = !DILocation(line: 5085, column: 7, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 5083, column: 5)
!5800 = !DILocation(line: 5086, column: 17, scope: !5799)
!5801 = !DILocation(line: 5086, column: 47, scope: !5799)
!5802 = !DILocation(line: 5087, column: 12, scope: !5799)
!5803 = !DILocation(line: 5088, column: 12, scope: !5799)
!5804 = !DILocation(line: 5089, column: 14, scope: !5799)
!5805 = !DILocation(line: 5089, column: 7, scope: !5799)
!5806 = !DILocation(line: 5091, column: 7, scope: !5799)
!5807 = !DILocation(line: 5092, column: 17, scope: !5799)
!5808 = !DILocation(line: 5092, column: 47, scope: !5799)
!5809 = !DILocation(line: 5093, column: 12, scope: !5799)
!5810 = !DILocation(line: 5094, column: 12, scope: !5799)
!5811 = !DILocation(line: 5095, column: 14, scope: !5799)
!5812 = !DILocation(line: 5095, column: 7, scope: !5799)
!5813 = !DILocation(line: 5097, column: 7, scope: !5799)
!5814 = !DILocation(line: 5099, column: 9, scope: !5799)
!5815 = !DILocation(line: 5098, column: 14, scope: !5799)
!5816 = !DILocation(line: 5098, column: 7, scope: !5799)
!5817 = !DILocation(line: 5101, column: 7, scope: !5799)
!5818 = !DILocation(line: 5102, column: 17, scope: !5799)
!5819 = !DILocation(line: 5102, column: 47, scope: !5799)
!5820 = !DILocation(line: 5103, column: 12, scope: !5799)
!5821 = !DILocation(line: 5104, column: 12, scope: !5799)
!5822 = !DILocation(line: 5105, column: 50, scope: !5799)
!5823 = !DILocation(line: 5105, column: 19, scope: !5799)
!5824 = !DILocation(line: 5105, column: 11, scope: !5799)
!5825 = !DILocation(line: 5105, column: 17, scope: !5799)
!5826 = !DILocation(line: 5106, column: 14, scope: !5799)
!5827 = !DILocation(line: 5106, column: 7, scope: !5799)
!5828 = !DILocation(line: 5108, column: 12, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 5108, column: 11)
!5830 = !DILocation(line: 5108, column: 30, scope: !5829)
!5831 = !DILocation(line: 5108, column: 34, scope: !5829)
!5832 = !DILocation(line: 5108, column: 11, scope: !5799)
!5833 = !DILocation(line: 5109, column: 2, scope: !5829)
!5834 = !DILocation(line: 5112, column: 7, scope: !5799)
!5835 = !DILocation(line: 5113, column: 17, scope: !5799)
!5836 = !DILocation(line: 5113, column: 47, scope: !5799)
!5837 = !DILocation(line: 5114, column: 12, scope: !5799)
!5838 = !DILocation(line: 5115, column: 12, scope: !5799)
!5839 = !DILocation(line: 5116, column: 14, scope: !5799)
!5840 = !DILocation(line: 5116, column: 7, scope: !5799)
!5841 = !DILocation(line: 5118, column: 7, scope: !5799)
!5842 = !DILocation(line: 5119, column: 17, scope: !5799)
!5843 = !DILocation(line: 5119, column: 47, scope: !5799)
!5844 = !DILocation(line: 5120, column: 12, scope: !5799)
!5845 = !DILocation(line: 5121, column: 12, scope: !5799)
!5846 = !DILocation(line: 5122, column: 14, scope: !5799)
!5847 = !DILocation(line: 5122, column: 7, scope: !5799)
!5848 = !DILocation(line: 5124, column: 7, scope: !5799)
!5849 = !DILocation(line: 5125, column: 17, scope: !5799)
!5850 = !DILocation(line: 5125, column: 47, scope: !5799)
!5851 = !DILocation(line: 5126, column: 12, scope: !5799)
!5852 = !DILocation(line: 5127, column: 12, scope: !5799)
!5853 = !DILocation(line: 5128, column: 14, scope: !5799)
!5854 = !DILocation(line: 5128, column: 7, scope: !5799)
!5855 = !DILocation(line: 5130, column: 7, scope: !5799)
!5856 = !DILocation(line: 5131, column: 17, scope: !5799)
!5857 = !DILocation(line: 5131, column: 47, scope: !5799)
!5858 = !DILocation(line: 5132, column: 12, scope: !5799)
!5859 = !DILocation(line: 5133, column: 12, scope: !5799)
!5860 = !DILocation(line: 5134, column: 14, scope: !5799)
!5861 = !DILocation(line: 5134, column: 7, scope: !5799)
!5862 = !DILocation(line: 5137, column: 7, scope: !5799)
!5863 = !DILocation(line: 5138, column: 11, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 5138, column: 11)
!5865 = !DILocation(line: 5138, column: 11, scope: !5799)
!5866 = !DILocation(line: 5141, column: 7, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 5139, column: 2)
!5868 = !DILocation(line: 5141, column: 37, scope: !5867)
!5869 = !DILocation(line: 5140, column: 16, scope: !5867)
!5870 = !DILocation(line: 5140, column: 8, scope: !5867)
!5871 = !DILocation(line: 5140, column: 14, scope: !5867)
!5872 = !DILocation(line: 5142, column: 4, scope: !5867)
!5873 = !DILocation(line: 5143, column: 2, scope: !5867)
!5874 = !DILocation(line: 5146, column: 4, scope: !5875)
!5875 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 5145, column: 2)
!5876 = !DILocation(line: 5147, column: 16, scope: !5875)
!5877 = !DILocation(line: 5147, column: 14, scope: !5875)
!5878 = !DILocation(line: 5149, column: 9, scope: !5799)
!5879 = !DILocation(line: 5149, column: 2, scope: !5799)
!5880 = !DILocation(line: 5151, column: 15, scope: !5799)
!5881 = !DILocation(line: 5151, column: 45, scope: !5799)
!5882 = !DILocation(line: 5151, column: 7, scope: !5799)
!5883 = !DILocation(line: 5154, column: 11, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 5152, column: 2)
!5885 = !DILocation(line: 5154, column: 4, scope: !5884)
!5886 = !DILocation(line: 5156, column: 11, scope: !5884)
!5887 = !DILocation(line: 5156, column: 4, scope: !5884)
!5888 = !DILocation(line: 5158, column: 4, scope: !5884)
!5889 = !DILocation(line: 5159, column: 10, scope: !5884)
!5890 = !DILocation(line: 5160, column: 10, scope: !5884)
!5891 = !DILocation(line: 5161, column: 4, scope: !5884)
!5892 = !DILocation(line: 5162, column: 11, scope: !5884)
!5893 = !DILocation(line: 5162, column: 4, scope: !5884)
!5894 = !DILocation(line: 5164, column: 4, scope: !5884)
!5895 = !DILocation(line: 5165, column: 14, scope: !5884)
!5896 = !DILocation(line: 5165, column: 44, scope: !5884)
!5897 = !DILocation(line: 5166, column: 9, scope: !5884)
!5898 = !DILocation(line: 5167, column: 9, scope: !5884)
!5899 = !DILocation(line: 5168, column: 11, scope: !5884)
!5900 = !DILocation(line: 5168, column: 4, scope: !5884)
!5901 = !DILocation(line: 5170, column: 4, scope: !5884)
!5902 = !DILocation(line: 5171, column: 14, scope: !5884)
!5903 = !DILocation(line: 5171, column: 44, scope: !5884)
!5904 = !DILocation(line: 5172, column: 9, scope: !5884)
!5905 = !DILocation(line: 5173, column: 9, scope: !5884)
!5906 = !DILocation(line: 5174, column: 11, scope: !5884)
!5907 = !DILocation(line: 5174, column: 4, scope: !5884)
!5908 = !DILocation(line: 5176, column: 11, scope: !5884)
!5909 = !DILocation(line: 5176, column: 4, scope: !5884)
!5910 = !DILocation(line: 5179, column: 14, scope: !5799)
!5911 = !DILocation(line: 5179, column: 7, scope: !5799)
!5912 = !DILocation(line: 5181, column: 1, scope: !5779)
!5913 = distinct !DISubprogram(name: "c_parser_expression", scope: !3, file: !3, line: 5997, type: !5410, scopeLine: 5998, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5914)
!5914 = !{!5915, !5916, !5917, !5919, !5920}
!5915 = !DILocalVariable(name: "parser", arg: 1, scope: !5913, file: !3, line: 5997, type: !1896)
!5916 = !DILocalVariable(name: "expr", scope: !5913, file: !3, line: 5999, type: !715)
!5917 = !DILocalVariable(name: "next", scope: !5918, file: !3, line: 6003, type: !715)
!5918 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 6002, column: 5)
!5919 = !DILocalVariable(name: "loc", scope: !5918, file: !3, line: 6004, type: !846)
!5920 = !DILocalVariable(name: "expr_loc", scope: !5918, file: !3, line: 6005, type: !846)
!5921 = !DILocation(line: 0, scope: !5913)
!5922 = !DILocation(line: 5999, column: 17, scope: !5913)
!5923 = !DILocation(line: 6000, column: 10, scope: !5913)
!5924 = !DILocation(line: 0, scope: !5918)
!5925 = !DILocation(line: 6001, column: 3, scope: !5913)
!5926 = !DILocation(line: 6001, column: 10, scope: !5913)
!5927 = !DILocation(line: 6003, column: 7, scope: !5918)
!5928 = !DILocation(line: 6004, column: 24, scope: !5918)
!5929 = !DILocation(line: 6004, column: 54, scope: !5918)
!5930 = !DILocation(line: 6006, column: 7, scope: !5918)
!5931 = !DILocation(line: 6007, column: 18, scope: !5918)
!5932 = !DILocation(line: 6007, column: 48, scope: !5918)
!5933 = !DILocation(line: 6008, column: 14, scope: !5918)
!5934 = !DILocation(line: 6009, column: 14, scope: !5918)
!5935 = !DILocation(line: 6010, column: 51, scope: !5918)
!5936 = !DILocation(line: 6010, column: 63, scope: !5918)
!5937 = !DILocation(line: 6010, column: 20, scope: !5918)
!5938 = !DILocation(line: 6010, column: 18, scope: !5918)
!5939 = !DILocation(line: 6011, column: 26, scope: !5918)
!5940 = !DILocation(line: 6012, column: 33, scope: !5918)
!5941 = !DILocation(line: 6012, column: 26, scope: !5918)
!5942 = !DILocation(line: 6013, column: 5, scope: !5913)
!5943 = distinct !{!5943, !5925, !5942}
!5944 = !DILocation(line: 6014, column: 3, scope: !5913)
!5945 = distinct !DISubprogram(name: "c_parser_expr_list", scope: !3, file: !3, line: 6039, type: !5946, scopeLine: 6041, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5949)
!5946 = !DISubroutineType(types: !5947)
!5947 = !{!1386, !1896, !838, !838, !5948}
!5948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1386, size: 64)
!5949 = !{!5950, !5951, !5952, !5953, !5954, !5955, !5956, !5957}
!5950 = !DILocalVariable(name: "parser", arg: 1, scope: !5945, file: !3, line: 6039, type: !1896)
!5951 = !DILocalVariable(name: "convert_p", arg: 2, scope: !5945, file: !3, line: 6039, type: !838)
!5952 = !DILocalVariable(name: "fold_p", arg: 3, scope: !5945, file: !3, line: 6039, type: !838)
!5953 = !DILocalVariable(name: "p_orig_types", arg: 4, scope: !5945, file: !3, line: 6040, type: !5948)
!5954 = !DILocalVariable(name: "ret", scope: !5945, file: !3, line: 6042, type: !1386)
!5955 = !DILocalVariable(name: "orig_types", scope: !5945, file: !3, line: 6043, type: !1386)
!5956 = !DILocalVariable(name: "expr", scope: !5945, file: !3, line: 6044, type: !715)
!5957 = !DILocalVariable(name: "loc", scope: !5945, file: !3, line: 6045, type: !846)
!5958 = !DILocation(line: 0, scope: !5945)
!5959 = !DILocation(line: 6042, column: 3, scope: !5945)
!5960 = !DILocation(line: 6043, column: 3, scope: !5945)
!5961 = !DILocation(line: 6044, column: 3, scope: !5945)
!5962 = !DILocation(line: 6045, column: 20, scope: !5945)
!5963 = !DILocation(line: 6045, column: 50, scope: !5945)
!5964 = !DILocation(line: 6047, column: 9, scope: !5945)
!5965 = !DILocation(line: 6047, column: 7, scope: !5945)
!5966 = !DILocation(line: 6048, column: 20, scope: !5967)
!5967 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 6048, column: 7)
!5968 = !DILocation(line: 6048, column: 7, scope: !5945)
!5969 = !DILocation(line: 6049, column: 5, scope: !5967)
!5970 = !DILocation(line: 6051, column: 18, scope: !5967)
!5971 = !DILocation(line: 0, scope: !5967)
!5972 = !DILocation(line: 6053, column: 10, scope: !5945)
!5973 = !DILocation(line: 6054, column: 7, scope: !5974)
!5974 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 6054, column: 7)
!5975 = !DILocation(line: 6054, column: 7, scope: !5945)
!5976 = !DILocation(line: 6055, column: 12, scope: !5974)
!5977 = !DILocation(line: 6055, column: 5, scope: !5974)
!5978 = !DILocation(line: 6056, column: 7, scope: !5979)
!5979 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 6056, column: 7)
!5980 = !DILocation(line: 6056, column: 7, scope: !5945)
!5981 = !DILocation(line: 6058, column: 3, scope: !5945)
!5982 = !DILocation(line: 6057, column: 37, scope: !5979)
!5983 = !DILocation(line: 6057, column: 18, scope: !5979)
!5984 = !DILocation(line: 6057, column: 16, scope: !5979)
!5985 = !DILocation(line: 6057, column: 5, scope: !5979)
!5986 = !DILocation(line: 6059, column: 7, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 6059, column: 7)
!5988 = !DILocation(line: 6059, column: 18, scope: !5987)
!5989 = !DILocation(line: 6059, column: 7, scope: !5945)
!5990 = !DILocation(line: 6060, column: 5, scope: !5987)
!5991 = !DILocation(line: 0, scope: !5992)
!5992 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 6062, column: 5)
!5993 = !DILocation(line: 0, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 6066, column: 11)
!5995 = !DILocation(line: 0, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 6071, column: 11)
!5997 = !DILocation(line: 6061, column: 3, scope: !5945)
!5998 = !DILocation(line: 6061, column: 10, scope: !5945)
!5999 = !DILocation(line: 6063, column: 7, scope: !5992)
!6000 = !DILocation(line: 6064, column: 13, scope: !5992)
!6001 = !DILocation(line: 6065, column: 14, scope: !5992)
!6002 = !DILocation(line: 6068, column: 11, scope: !5992)
!6003 = !DILocation(line: 6070, column: 7, scope: !5992)
!6004 = !DILocation(line: 6069, column: 34, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !5992, file: !3, line: 6068, column: 11)
!6006 = !DILocation(line: 6069, column: 15, scope: !6005)
!6007 = !DILocation(line: 6069, column: 13, scope: !6005)
!6008 = !DILocation(line: 6069, column: 2, scope: !6005)
!6009 = !DILocation(line: 6071, column: 11, scope: !5996)
!6010 = !DILocation(line: 6071, column: 22, scope: !5996)
!6011 = !DILocation(line: 6071, column: 11, scope: !5992)
!6012 = !DILocation(line: 6072, column: 2, scope: !5996)
!6013 = distinct !{!6013, !5997, !6014}
!6014 = !DILocation(line: 6073, column: 5, scope: !5945)
!6015 = !DILocation(line: 6074, column: 7, scope: !6016)
!6016 = distinct !DILexicalBlock(scope: !5945, file: !3, line: 6074, column: 7)
!6017 = !DILocation(line: 6064, column: 43, scope: !5992)
!6018 = !DILocation(line: 6067, column: 9, scope: !5994)
!6019 = !DILocation(line: 6074, column: 18, scope: !6016)
!6020 = !DILocation(line: 6074, column: 7, scope: !5945)
!6021 = !DILocation(line: 6075, column: 19, scope: !6016)
!6022 = !DILocation(line: 6075, column: 5, scope: !6016)
!6023 = !DILocation(line: 6076, column: 10, scope: !5945)
!6024 = !DILocation(line: 6077, column: 1, scope: !5945)
!6025 = !DILocation(line: 6076, column: 3, scope: !5945)
!6026 = distinct !DISubprogram(name: "VEC_tree_base_quick_push", scope: !158, file: !158, line: 182, type: !6027, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6030)
!6027 = !DISubroutineType(types: !6028)
!6028 = !{!1623, !6029, !718}
!6029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!6030 = !{!6031, !6032, !6033}
!6031 = !DILocalVariable(name: "vec_", arg: 1, scope: !6026, file: !158, line: 182, type: !6029)
!6032 = !DILocalVariable(name: "obj_", arg: 2, scope: !6026, file: !158, line: 182, type: !718)
!6033 = !DILocalVariable(name: "slot_", scope: !6026, file: !158, line: 182, type: !1623)
!6034 = !DILocation(line: 0, scope: !6026)
!6035 = !DILocation(line: 182, column: 1, scope: !6026)
!6036 = distinct !DISubprogram(name: "VEC_tree_gc_safe_push", scope: !158, file: !158, line: 183, type: !6037, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6039)
!6037 = !DISubroutineType(types: !6038)
!6038 = !{!1623, !5948, !718}
!6039 = !{!6040, !6041}
!6040 = !DILocalVariable(name: "vec_", arg: 1, scope: !6036, file: !158, line: 183, type: !5948)
!6041 = !DILocalVariable(name: "obj_", arg: 2, scope: !6036, file: !158, line: 183, type: !718)
!6042 = !DILocation(line: 0, scope: !6036)
!6043 = !DILocation(line: 183, column: 1, scope: !6036)
!6044 = distinct !DISubprogram(name: "VEC_tree_gc_reserve", scope: !158, file: !158, line: 183, type: !6045, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6047)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{!815, !5948, !815}
!6047 = !{!6048, !6049, !6050}
!6048 = !DILocalVariable(name: "vec_", arg: 1, scope: !6044, file: !158, line: 183, type: !5948)
!6049 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6044, file: !158, line: 183, type: !815)
!6050 = !DILocalVariable(name: "extend", scope: !6044, file: !158, line: 183, type: !815)
!6051 = !DILocation(line: 0, scope: !6044)
!6052 = !DILocation(line: 183, column: 1, scope: !6044)
!6053 = !DILocation(line: 183, column: 1, scope: !6054)
!6054 = distinct !DILexicalBlock(scope: !6044, file: !158, line: 183, column: 1)
!6055 = distinct !DISubprogram(name: "VEC_tree_base_space", scope: !158, file: !158, line: 182, type: !6056, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6058)
!6056 = !DISubroutineType(types: !6057)
!6057 = !{!815, !6029, !815}
!6058 = !{!6059, !6060}
!6059 = !DILocalVariable(name: "vec_", arg: 1, scope: !6055, file: !158, line: 182, type: !6029)
!6060 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6055, file: !158, line: 182, type: !815)
!6061 = !DILocation(line: 0, scope: !6055)
!6062 = !DILocation(line: 182, column: 1, scope: !6055)
!6063 = distinct !DISubprogram(name: "c_parser_braced_init", scope: !3, file: !3, line: 3088, type: !6064, scopeLine: 3089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6066)
!6064 = !DISubroutineType(types: !6065)
!6065 = !{!715, !1896, !718, !838}
!6066 = !{!6067, !6068, !6069, !6070, !6071}
!6067 = !DILocalVariable(name: "parser", arg: 1, scope: !6063, file: !3, line: 3088, type: !1896)
!6068 = !DILocalVariable(name: "type", arg: 2, scope: !6063, file: !3, line: 3088, type: !718)
!6069 = !DILocalVariable(name: "nested_p", arg: 3, scope: !6063, file: !3, line: 3088, type: !838)
!6070 = !DILocalVariable(name: "brace_loc", scope: !6063, file: !3, line: 3090, type: !846)
!6071 = !DILocalVariable(name: "ret", scope: !6072, file: !3, line: 3120, type: !715)
!6072 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 3119, column: 5)
!6073 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 3118, column: 7)
!6074 = !DILocation(line: 0, scope: !6063)
!6075 = !DILocation(line: 3090, column: 26, scope: !6063)
!6076 = !DILocation(line: 3090, column: 56, scope: !6063)
!6077 = !DILocation(line: 3091, column: 3, scope: !6063)
!6078 = !DILocation(line: 3092, column: 3, scope: !6063)
!6079 = !DILocation(line: 3093, column: 7, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 3093, column: 7)
!6081 = !DILocation(line: 3093, column: 7, scope: !6063)
!6082 = !DILocation(line: 3094, column: 5, scope: !6080)
!6083 = !DILocation(line: 3096, column: 5, scope: !6080)
!6084 = !DILocation(line: 3097, column: 7, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6063, file: !3, line: 3097, column: 7)
!6086 = !DILocation(line: 3097, column: 7, scope: !6063)
!6087 = !DILocation(line: 0, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 3108, column: 8)
!6089 = distinct !DILexicalBlock(scope: !6090, file: !3, line: 3106, column: 2)
!6090 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 3102, column: 5)
!6091 = !DILocation(line: 3105, column: 7, scope: !6090)
!6092 = !DILocation(line: 3099, column: 7, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 3098, column: 5)
!6094 = !DILocation(line: 3100, column: 5, scope: !6093)
!6095 = !DILocation(line: 3107, column: 4, scope: !6089)
!6096 = !DILocation(line: 3108, column: 16, scope: !6088)
!6097 = !DILocation(line: 3108, column: 8, scope: !6088)
!6098 = !DILocation(line: 3108, column: 8, scope: !6089)
!6099 = !DILocation(line: 3110, column: 8, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 3110, column: 8)
!6101 = !DILocation(line: 3110, column: 8, scope: !6089)
!6102 = !DILocation(line: 3111, column: 6, scope: !6100)
!6103 = !DILocation(line: 3114, column: 8, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6089, file: !3, line: 3114, column: 8)
!6105 = !DILocation(line: 3114, column: 8, scope: !6089)
!6106 = distinct !{!6106, !6091, !6107}
!6107 = !DILocation(line: 3116, column: 2, scope: !6090)
!6108 = !DILocation(line: 3118, column: 7, scope: !6073)
!6109 = !DILocation(line: 3118, column: 7, scope: !6063)
!6110 = !DILocation(line: 3120, column: 21, scope: !6072)
!6111 = !DILocation(line: 3121, column: 19, scope: !6072)
!6112 = !DILocation(line: 3121, column: 17, scope: !6072)
!6113 = !DILocation(line: 3122, column: 11, scope: !6072)
!6114 = !DILocation(line: 3122, column: 25, scope: !6072)
!6115 = !DILocation(line: 3123, column: 11, scope: !6072)
!6116 = !DILocation(line: 3123, column: 25, scope: !6072)
!6117 = !DILocation(line: 3124, column: 7, scope: !6072)
!6118 = !DILocation(line: 3125, column: 7, scope: !6072)
!6119 = !DILocation(line: 3126, column: 7, scope: !6072)
!6120 = !DILocation(line: 3128, column: 3, scope: !6063)
!6121 = !DILocation(line: 3129, column: 10, scope: !6063)
!6122 = !DILocation(line: 3129, column: 3, scope: !6063)
!6123 = !DILocation(line: 3130, column: 1, scope: !6063)
!6124 = distinct !DISubprogram(name: "c_parser_initelt", scope: !3, file: !3, line: 3135, type: !2645, scopeLine: 3136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6125)
!6125 = !{!6126, !6127, !6130, !6131, !6133, !6138, !6140, !6141, !6142, !6145, !6146, !6147, !6150, !6152, !6153, !6154, !6161, !6162}
!6126 = !DILocalVariable(name: "parser", arg: 1, scope: !6124, file: !3, line: 3135, type: !1896)
!6127 = !DILocalVariable(name: "des_seen", scope: !6128, file: !3, line: 3155, type: !815)
!6128 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 3152, column: 5)
!6129 = distinct !DILexicalBlock(scope: !6124, file: !3, line: 3140, column: 7)
!6130 = !DILocalVariable(name: "des_loc", scope: !6128, file: !3, line: 3157, type: !846)
!6131 = !DILocalVariable(name: "des_prev", scope: !6132, file: !3, line: 3161, type: !815)
!6132 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 3160, column: 2)
!6133 = !DILocalVariable(name: "init", scope: !6134, file: !3, line: 3177, type: !715)
!6134 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 3176, column: 3)
!6135 = distinct !DILexicalBlock(scope: !6136, file: !3, line: 3170, column: 12)
!6136 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 3167, column: 6)
!6137 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 3166, column: 8)
!6138 = !DILocalVariable(name: "first", scope: !6139, file: !3, line: 3189, type: !718)
!6139 = distinct !DILexicalBlock(scope: !6137, file: !3, line: 3188, column: 6)
!6140 = !DILocalVariable(name: "second", scope: !6139, file: !3, line: 3189, type: !718)
!6141 = !DILocalVariable(name: "ellipsis_loc", scope: !6139, file: !3, line: 3190, type: !846)
!6142 = !DILocalVariable(name: "rec", scope: !6143, file: !3, line: 3216, type: !718)
!6143 = distinct !DILexicalBlock(scope: !6144, file: !3, line: 3208, column: 3)
!6144 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 3207, column: 12)
!6145 = !DILocalVariable(name: "args", scope: !6143, file: !3, line: 3216, type: !718)
!6146 = !DILocalVariable(name: "mexpr", scope: !6143, file: !3, line: 3217, type: !715)
!6147 = !DILocalVariable(name: "id", scope: !6148, file: !3, line: 3226, type: !718)
!6148 = distinct !DILexicalBlock(scope: !6149, file: !3, line: 3224, column: 7)
!6149 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 3219, column: 9)
!6150 = !DILocalVariable(name: "next", scope: !6151, file: !3, line: 3241, type: !715)
!6151 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 3240, column: 7)
!6152 = !DILocalVariable(name: "comma_loc", scope: !6151, file: !3, line: 3242, type: !846)
!6153 = !DILocalVariable(name: "exp_loc", scope: !6151, file: !3, line: 3242, type: !846)
!6154 = !DILocalVariable(name: "init", scope: !6155, file: !3, line: 3305, type: !715)
!6155 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 3304, column: 3)
!6156 = distinct !DILexicalBlock(scope: !6157, file: !3, line: 3300, column: 12)
!6157 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 3299, column: 6)
!6158 = distinct !DILexicalBlock(scope: !6159, file: !3, line: 3291, column: 8)
!6159 = distinct !DILexicalBlock(scope: !6160, file: !3, line: 3290, column: 2)
!6160 = distinct !DILexicalBlock(scope: !6128, file: !3, line: 3289, column: 11)
!6161 = !DILabel(scope: !6143, name: "parse_message_args", file: !3, line: 3250)
!6162 = !DILabel(scope: !6139, name: "array_desig_after_first", file: !3, line: 3267)
!6163 = !DILocation(line: 0, scope: !6124)
!6164 = !DILocation(line: 3140, column: 7, scope: !6129)
!6165 = !DILocation(line: 3141, column: 7, scope: !6129)
!6166 = !DILocation(line: 3141, column: 10, scope: !6129)
!6167 = !DILocation(line: 3141, column: 44, scope: !6129)
!6168 = !DILocation(line: 3141, column: 49, scope: !6129)
!6169 = !DILocation(line: 3140, column: 7, scope: !6124)
!6170 = !DILocation(line: 3144, column: 23, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6129, file: !3, line: 3142, column: 5)
!6172 = !DILocation(line: 3144, column: 53, scope: !6171)
!6173 = !DILocation(line: 3144, column: 7, scope: !6171)
!6174 = !DILocation(line: 3146, column: 16, scope: !6171)
!6175 = !DILocation(line: 3146, column: 50, scope: !6171)
!6176 = !DILocation(line: 3146, column: 7, scope: !6171)
!6177 = !DILocation(line: 3148, column: 7, scope: !6171)
!6178 = !DILocation(line: 3149, column: 7, scope: !6171)
!6179 = !DILocation(line: 3150, column: 5, scope: !6171)
!6180 = !DILocation(line: 0, scope: !6128)
!6181 = !DILocation(line: 0, scope: !6134)
!6182 = !DILocation(line: 0, scope: !6143)
!6183 = !DILocation(line: 0, scope: !6151)
!6184 = !DILocation(line: 0, scope: !6139)
!6185 = !DILocation(line: 0, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 3269, column: 3)
!6187 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 3268, column: 12)
!6188 = !DILocation(line: 3158, column: 7, scope: !6128)
!6189 = !DILocation(line: 3157, column: 18, scope: !6128)
!6190 = !DILocation(line: 3158, column: 14, scope: !6128)
!6191 = !DILocation(line: 3159, column: 7, scope: !6128)
!6192 = !DILocation(line: 3159, column: 10, scope: !6128)
!6193 = !DILocation(line: 0, scope: !6132)
!6194 = !DILocation(line: 3162, column: 9, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 3162, column: 8)
!6196 = !DILocation(line: 3162, column: 8, scope: !6132)
!6197 = !DILocation(line: 3163, column: 16, scope: !6195)
!6198 = !DILocation(line: 3163, column: 46, scope: !6195)
!6199 = !DILocation(line: 3163, column: 6, scope: !6195)
!6200 = !DILocation(line: 3164, column: 17, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 3164, column: 8)
!6202 = !DILocation(line: 3164, column: 8, scope: !6132)
!6203 = !DILocation(line: 3166, column: 8, scope: !6137)
!6204 = !DILocation(line: 3166, column: 8, scope: !6132)
!6205 = !DILocation(line: 3169, column: 8, scope: !6136)
!6206 = !DILocation(line: 3170, column: 12, scope: !6135)
!6207 = !DILocation(line: 3170, column: 12, scope: !6136)
!6208 = !DILocation(line: 3172, column: 21, scope: !6209)
!6209 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 3171, column: 3)
!6210 = !DILocation(line: 3172, column: 51, scope: !6209)
!6211 = !DILocation(line: 3172, column: 5, scope: !6209)
!6212 = !DILocation(line: 3173, column: 5, scope: !6209)
!6213 = !DILocation(line: 3186, column: 6, scope: !6136)
!6214 = !DILocation(line: 3177, column: 5, scope: !6134)
!6215 = !DILocation(line: 3178, column: 18, scope: !6134)
!6216 = !DILocation(line: 3178, column: 16, scope: !6134)
!6217 = !DILocation(line: 3179, column: 24, scope: !6134)
!6218 = !DILocation(line: 3180, column: 24, scope: !6134)
!6219 = !DILocation(line: 3181, column: 5, scope: !6134)
!6220 = !DILocation(line: 3182, column: 5, scope: !6134)
!6221 = !DILocation(line: 3183, column: 5, scope: !6134)
!6222 = !DILocation(line: 3185, column: 3, scope: !6135)
!6223 = !DILocation(line: 3202, column: 26, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 3202, column: 12)
!6225 = !DILocation(line: 3207, column: 29, scope: !6144)
!6226 = !DILocation(line: 3202, column: 29, scope: !6224)
!6227 = !DILocation(line: 3202, column: 12, scope: !6139)
!6228 = !DILocation(line: 3207, column: 26, scope: !6144)
!6229 = !DILocation(line: 3207, column: 12, scope: !6139)
!6230 = !DILocation(line: 3217, column: 5, scope: !6143)
!6231 = !DILocation(line: 3218, column: 5, scope: !6143)
!6232 = !DILocation(line: 3219, column: 9, scope: !6149)
!6233 = !DILocation(line: 3219, column: 39, scope: !6149)
!6234 = !DILocation(line: 3219, column: 44, scope: !6149)
!6235 = !DILocation(line: 3220, column: 9, scope: !6149)
!6236 = !DILocation(line: 3220, column: 14, scope: !6149)
!6237 = !DILocation(line: 3220, column: 44, scope: !6149)
!6238 = !DILocation(line: 3221, column: 7, scope: !6149)
!6239 = !DILocation(line: 3222, column: 6, scope: !6149)
!6240 = !DILocation(line: 3222, column: 10, scope: !6149)
!6241 = !DILocation(line: 3222, column: 40, scope: !6149)
!6242 = !DILocation(line: 3223, column: 10, scope: !6149)
!6243 = !DILocation(line: 3219, column: 9, scope: !6143)
!6244 = !DILocation(line: 3226, column: 19, scope: !6148)
!6245 = !DILocation(line: 3226, column: 49, scope: !6148)
!6246 = !DILocation(line: 0, scope: !6148)
!6247 = !DILocation(line: 3227, column: 9, scope: !6148)
!6248 = !DILocation(line: 3228, column: 15, scope: !6148)
!6249 = !DILocation(line: 3231, column: 13, scope: !6143)
!6250 = !DILocation(line: 3231, column: 52, scope: !6143)
!6251 = !DILocation(line: 3232, column: 9, scope: !6252)
!6252 = distinct !DILexicalBlock(scope: !6143, file: !3, line: 3232, column: 9)
!6253 = !DILocation(line: 3233, column: 9, scope: !6252)
!6254 = !DILocation(line: 3233, column: 12, scope: !6252)
!6255 = !DILocation(line: 3232, column: 9, scope: !6143)
!6256 = !DILocation(line: 3239, column: 5, scope: !6143)
!6257 = !DILocation(line: 3239, column: 12, scope: !6143)
!6258 = !DILocation(line: 3241, column: 9, scope: !6151)
!6259 = !DILocation(line: 3243, column: 21, scope: !6151)
!6260 = !DILocation(line: 3243, column: 51, scope: !6151)
!6261 = !DILocation(line: 3244, column: 9, scope: !6151)
!6262 = !DILocation(line: 3245, column: 19, scope: !6151)
!6263 = !DILocation(line: 3245, column: 49, scope: !6151)
!6264 = !DILocation(line: 3246, column: 16, scope: !6151)
!6265 = !DILocation(line: 3247, column: 16, scope: !6151)
!6266 = !DILocation(line: 3248, column: 57, scope: !6151)
!6267 = !DILocation(line: 3248, column: 15, scope: !6151)
!6268 = !DILocation(line: 3249, column: 7, scope: !6143)
!6269 = distinct !{!6269, !6256, !6268}
!6270 = !DILocation(line: 3252, column: 12, scope: !6143)
!6271 = !DILocation(line: 3250, column: 3, scope: !6143)
!6272 = !DILocation(line: 3253, column: 5, scope: !6143)
!6273 = !DILocation(line: 3256, column: 34, scope: !6143)
!6274 = !DILocation(line: 3256, column: 9, scope: !6143)
!6275 = !DILocation(line: 3256, column: 7, scope: !6143)
!6276 = !DILocation(line: 3257, column: 25, scope: !6143)
!6277 = !DILocation(line: 3258, column: 25, scope: !6143)
!6278 = !DILocation(line: 3262, column: 5, scope: !6143)
!6279 = !DILocation(line: 3263, column: 5, scope: !6143)
!6280 = !DILocation(line: 3264, column: 3, scope: !6144)
!6281 = !DILocation(line: 3265, column: 8, scope: !6139)
!6282 = !DILocation(line: 3266, column: 16, scope: !6139)
!6283 = !DILocation(line: 3266, column: 55, scope: !6139)
!6284 = !DILocation(line: 3266, column: 8, scope: !6139)
!6285 = !DILocation(line: 3267, column: 6, scope: !6139)
!6286 = !DILocation(line: 3268, column: 12, scope: !6187)
!6287 = !DILocation(line: 3268, column: 12, scope: !6139)
!6288 = !DILocation(line: 3270, column: 20, scope: !6186)
!6289 = !DILocation(line: 3270, column: 50, scope: !6186)
!6290 = !DILocation(line: 3271, column: 5, scope: !6186)
!6291 = !DILocation(line: 3272, column: 14, scope: !6186)
!6292 = !DILocation(line: 3272, column: 53, scope: !6186)
!6293 = !DILocation(line: 3273, column: 3, scope: !6186)
!6294 = !DILocation(line: 0, scope: !6187)
!6295 = !DILocation(line: 3276, column: 12, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 3276, column: 12)
!6297 = !DILocation(line: 3276, column: 12, scope: !6139)
!6298 = !DILocation(line: 3278, column: 5, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 3277, column: 3)
!6300 = !DILocation(line: 3279, column: 5, scope: !6299)
!6301 = !DILocation(line: 3280, column: 9, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 3280, column: 9)
!6303 = !DILocation(line: 3280, column: 9, scope: !6299)
!6304 = !DILocation(line: 3281, column: 7, scope: !6302)
!6305 = !DILocation(line: 3285, column: 3, scope: !6296)
!6306 = !DILocation(line: 0, scope: !6137)
!6307 = !DILocation(line: 3288, column: 2, scope: !6128)
!6308 = distinct !{!6308, !6188, !6307}
!6309 = !DILocation(line: 3289, column: 20, scope: !6160)
!6310 = !DILocation(line: 3289, column: 11, scope: !6128)
!6311 = !DILocation(line: 3291, column: 8, scope: !6158)
!6312 = !DILocation(line: 3291, column: 8, scope: !6159)
!6313 = !DILocation(line: 3293, column: 13, scope: !6314)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 3293, column: 12)
!6315 = distinct !DILexicalBlock(scope: !6158, file: !3, line: 3292, column: 6)
!6316 = !DILocation(line: 3293, column: 12, scope: !6315)
!6317 = !DILocation(line: 3294, column: 3, scope: !6314)
!6318 = !DILocation(line: 3296, column: 8, scope: !6315)
!6319 = !DILocation(line: 3297, column: 6, scope: !6315)
!6320 = !DILocation(line: 3300, column: 21, scope: !6156)
!6321 = !DILocation(line: 3300, column: 12, scope: !6157)
!6322 = !DILocation(line: 3301, column: 12, scope: !6156)
!6323 = !DILocation(line: 3301, column: 42, scope: !6156)
!6324 = !DILocation(line: 3301, column: 3, scope: !6156)
!6325 = !DILocation(line: 3305, column: 5, scope: !6155)
!6326 = !DILocation(line: 3306, column: 18, scope: !6155)
!6327 = !DILocation(line: 3306, column: 16, scope: !6155)
!6328 = !DILocation(line: 3307, column: 10, scope: !6155)
!6329 = !DILocation(line: 3307, column: 24, scope: !6155)
!6330 = !DILocation(line: 3308, column: 10, scope: !6155)
!6331 = !DILocation(line: 3308, column: 24, scope: !6155)
!6332 = !DILocation(line: 3309, column: 5, scope: !6155)
!6333 = !DILocation(line: 3310, column: 5, scope: !6155)
!6334 = !DILocation(line: 0, scope: !6155)
!6335 = !DILocation(line: 3311, column: 5, scope: !6155)
!6336 = !DILocation(line: 3313, column: 3, scope: !6156)
!6337 = !DILocation(line: 3317, column: 3, scope: !6124)
!6338 = !DILocation(line: 3318, column: 1, scope: !6124)
!6339 = distinct !DISubprogram(name: "c_parser_objc_message_args", scope: !3, file: !3, line: 6922, type: !3767, scopeLine: 6923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6340)
!6340 = !{!6341, !6342, !6343, !6344}
!6341 = !DILocalVariable(name: "parser", arg: 1, scope: !6339, file: !3, line: 6922, type: !1896)
!6342 = !DILocalVariable(name: "sel", scope: !6339, file: !3, line: 6924, type: !718)
!6343 = !DILocalVariable(name: "list", scope: !6339, file: !3, line: 6925, type: !718)
!6344 = !DILocalVariable(name: "keywordexpr", scope: !6345, file: !3, line: 6930, type: !718)
!6345 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 6929, column: 5)
!6346 = !DILocation(line: 0, scope: !6339)
!6347 = !DILocation(line: 6924, column: 14, scope: !6339)
!6348 = !DILocation(line: 6926, column: 7, scope: !6349)
!6349 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 6926, column: 7)
!6350 = !DILocation(line: 6926, column: 11, scope: !6349)
!6351 = !DILocation(line: 6926, column: 14, scope: !6349)
!6352 = !DILocation(line: 6926, column: 7, scope: !6339)
!6353 = !DILocation(line: 6928, column: 3, scope: !6339)
!6354 = !DILocation(line: 6931, column: 12, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 6931, column: 11)
!6356 = !DILocation(line: 6931, column: 11, scope: !6345)
!6357 = !DILocation(line: 6932, column: 9, scope: !6355)
!6358 = !DILocation(line: 6932, column: 2, scope: !6355)
!6359 = !DILocation(line: 6933, column: 21, scope: !6345)
!6360 = !DILocation(line: 0, scope: !6345)
!6361 = !DILocation(line: 6934, column: 29, scope: !6345)
!6362 = !DILocation(line: 6934, column: 14, scope: !6345)
!6363 = !DILocation(line: 6935, column: 13, scope: !6345)
!6364 = !DILocation(line: 6936, column: 12, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6345, file: !3, line: 6936, column: 11)
!6366 = !DILocation(line: 6936, column: 16, scope: !6365)
!6367 = !DILocation(line: 6936, column: 19, scope: !6365)
!6368 = !DILocation(line: 6936, column: 11, scope: !6345)
!6369 = !DILocation(line: 6938, column: 5, scope: !6339)
!6370 = distinct !{!6370, !6353, !6369}
!6371 = !DILocation(line: 6939, column: 3, scope: !6339)
!6372 = !DILocation(line: 6940, column: 1, scope: !6339)
!6373 = distinct !DISubprogram(name: "c_parser_initval", scope: !3, file: !3, line: 3327, type: !6374, scopeLine: 3328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6376)
!6374 = !DISubroutineType(types: !6375)
!6375 = !{null, !1896, !1919}
!6376 = !{!6377, !6378, !6379, !6380}
!6377 = !DILocalVariable(name: "parser", arg: 1, scope: !6373, file: !3, line: 3327, type: !1896)
!6378 = !DILocalVariable(name: "after", arg: 2, scope: !6373, file: !3, line: 3327, type: !1919)
!6379 = !DILocalVariable(name: "init", scope: !6373, file: !3, line: 3329, type: !715)
!6380 = !DILocalVariable(name: "loc", scope: !6381, file: !3, line: 3335, type: !846)
!6381 = distinct !DILexicalBlock(scope: !6382, file: !3, line: 3334, column: 5)
!6382 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 3331, column: 7)
!6383 = !DILocation(line: 0, scope: !6373)
!6384 = !DILocation(line: 3329, column: 3, scope: !6373)
!6385 = !DILocation(line: 3330, column: 3, scope: !6373)
!6386 = !DILocation(line: 3331, column: 7, scope: !6382)
!6387 = !DILocation(line: 3331, column: 59, scope: !6382)
!6388 = !DILocation(line: 3331, column: 55, scope: !6382)
!6389 = !DILocation(line: 3332, column: 12, scope: !6382)
!6390 = !DILocation(line: 3332, column: 5, scope: !6382)
!6391 = !DILocation(line: 3335, column: 24, scope: !6381)
!6392 = !DILocation(line: 3335, column: 54, scope: !6381)
!6393 = !DILocation(line: 0, scope: !6381)
!6394 = !DILocation(line: 3336, column: 14, scope: !6381)
!6395 = !DILocation(line: 3337, column: 16, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6381, file: !3, line: 3337, column: 11)
!6397 = !DILocation(line: 3337, column: 22, scope: !6396)
!6398 = !DILocation(line: 3338, column: 4, scope: !6396)
!6399 = !DILocation(line: 3338, column: 7, scope: !6396)
!6400 = !DILocation(line: 3338, column: 30, scope: !6396)
!6401 = !DILocation(line: 3339, column: 4, scope: !6396)
!6402 = !DILocation(line: 3339, column: 30, scope: !6396)
!6403 = !DILocation(line: 3337, column: 11, scope: !6381)
!6404 = !DILocation(line: 3340, column: 9, scope: !6396)
!6405 = !DILocation(line: 3340, column: 2, scope: !6396)
!6406 = !DILocation(line: 3342, column: 3, scope: !6373)
!6407 = !DILocation(line: 3343, column: 1, scope: !6373)
!6408 = distinct !DISubprogram(name: "c_parser_objc_keywordexpr", scope: !3, file: !3, line: 6949, type: !3767, scopeLine: 6950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6409)
!6409 = !{!6410, !6411, !6412}
!6410 = !DILocalVariable(name: "parser", arg: 1, scope: !6408, file: !3, line: 6949, type: !1896)
!6411 = !DILocalVariable(name: "ret", scope: !6408, file: !3, line: 6951, type: !718)
!6412 = !DILocalVariable(name: "expr_list", scope: !6408, file: !3, line: 6952, type: !1386)
!6413 = !DILocation(line: 0, scope: !6408)
!6414 = !DILocation(line: 6952, column: 29, scope: !6408)
!6415 = !DILocation(line: 6953, column: 7, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 6953, column: 7)
!6417 = !DILocation(line: 6953, column: 36, scope: !6416)
!6418 = !DILocation(line: 6953, column: 7, scope: !6408)
!6419 = !DILocation(line: 6957, column: 13, scope: !6420)
!6420 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 6954, column: 5)
!6421 = !DILocation(line: 6958, column: 5, scope: !6420)
!6422 = !DILocation(line: 6962, column: 13, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 6960, column: 5)
!6424 = !DILocation(line: 0, scope: !6416)
!6425 = !DILocation(line: 6964, column: 3, scope: !6408)
!6426 = !DILocation(line: 6965, column: 3, scope: !6408)
!6427 = distinct !DISubprogram(name: "VEC_tree_base_length", scope: !158, file: !158, line: 182, type: !6428, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6432)
!6428 = !DISubroutineType(types: !6429)
!6429 = !{!7, !6430}
!6430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6431, size: 64)
!6431 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1391)
!6432 = !{!6433}
!6433 = !DILocalVariable(name: "vec_", arg: 1, scope: !6427, file: !158, line: 182, type: !6430)
!6434 = !DILocation(line: 0, scope: !6427)
!6435 = !DILocation(line: 182, column: 1, scope: !6427)
!6436 = distinct !DISubprogram(name: "VEC_tree_base_index", scope: !158, file: !158, line: 182, type: !6437, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6439)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{!718, !6430, !7}
!6439 = !{!6440, !6441}
!6440 = !DILocalVariable(name: "vec_", arg: 1, scope: !6436, file: !158, line: 182, type: !6430)
!6441 = !DILocalVariable(name: "ix_", arg: 2, scope: !6436, file: !158, line: 182, type: !7)
!6442 = !DILocation(line: 0, scope: !6436)
!6443 = !DILocation(line: 182, column: 1, scope: !6436)
!6444 = distinct !DISubprogram(name: "c_parser_sizeof_expression", scope: !3, file: !3, line: 5186, type: !5410, scopeLine: 5187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6445)
!6445 = !{!6446, !6447, !6448, !6449, !6452, !6455}
!6446 = !DILocalVariable(name: "parser", arg: 1, scope: !6444, file: !3, line: 5186, type: !1896)
!6447 = !DILocalVariable(name: "expr", scope: !6444, file: !3, line: 5188, type: !715)
!6448 = !DILocalVariable(name: "expr_loc", scope: !6444, file: !3, line: 5189, type: !846)
!6449 = !DILocalVariable(name: "type_name", scope: !6450, file: !3, line: 5199, type: !2011)
!6450 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 5196, column: 5)
!6451 = distinct !DILexicalBlock(scope: !6444, file: !3, line: 5194, column: 7)
!6452 = !DILocalVariable(name: "ret", scope: !6453, file: !3, line: 5206, type: !715)
!6453 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 5205, column: 2)
!6454 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 5204, column: 11)
!6455 = !DILabel(scope: !6456, name: "sizeof_expr", file: !3, line: 5230)
!6456 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 5227, column: 5)
!6457 = !DILocation(line: 0, scope: !6444)
!6458 = !DILocation(line: 5188, column: 3, scope: !6444)
!6459 = !DILocation(line: 5190, column: 3, scope: !6444)
!6460 = !DILocation(line: 5191, column: 3, scope: !6444)
!6461 = !DILocation(line: 5192, column: 32, scope: !6444)
!6462 = !DILocation(line: 5193, column: 12, scope: !6444)
!6463 = !DILocation(line: 5194, column: 7, scope: !6451)
!6464 = !DILocation(line: 5195, column: 7, scope: !6451)
!6465 = !DILocation(line: 5195, column: 35, scope: !6451)
!6466 = !DILocation(line: 5195, column: 10, scope: !6451)
!6467 = !DILocation(line: 5194, column: 7, scope: !6444)
!6468 = !DILocation(line: 5200, column: 7, scope: !6450)
!6469 = !DILocation(line: 5201, column: 18, scope: !6450)
!6470 = !DILocation(line: 5201, column: 48, scope: !6450)
!6471 = !DILocation(line: 5202, column: 19, scope: !6450)
!6472 = !DILocation(line: 0, scope: !6450)
!6473 = !DILocation(line: 5203, column: 7, scope: !6450)
!6474 = !DILocation(line: 5204, column: 21, scope: !6454)
!6475 = !DILocation(line: 5204, column: 11, scope: !6450)
!6476 = !DILocation(line: 5206, column: 18, scope: !6453)
!6477 = !DILocation(line: 5207, column: 33, scope: !6453)
!6478 = !DILocation(line: 5208, column: 13, scope: !6453)
!6479 = !DILocation(line: 5209, column: 16, scope: !6453)
!6480 = !DILocation(line: 5209, column: 14, scope: !6453)
!6481 = !DILocation(line: 5210, column: 8, scope: !6453)
!6482 = !DILocation(line: 5210, column: 22, scope: !6453)
!6483 = !DILocation(line: 5211, column: 8, scope: !6453)
!6484 = !DILocation(line: 5211, column: 22, scope: !6453)
!6485 = !DILocation(line: 5212, column: 4, scope: !6453)
!6486 = !DILocation(line: 5214, column: 11, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 5214, column: 11)
!6488 = !DILocation(line: 5214, column: 11, scope: !6450)
!6489 = !DILocation(line: 5216, column: 11, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6487, file: !3, line: 5215, column: 2)
!6491 = !DILocation(line: 5219, column: 4, scope: !6490)
!6492 = !DILocation(line: 5222, column: 36, scope: !6450)
!6493 = !DILocation(line: 5223, column: 16, scope: !6450)
!6494 = !DILocation(line: 5224, column: 14, scope: !6450)
!6495 = !DILocation(line: 5224, column: 7, scope: !6450)
!6496 = !DILocation(line: 5228, column: 18, scope: !6456)
!6497 = !DILocation(line: 5228, column: 48, scope: !6456)
!6498 = !DILocation(line: 5229, column: 14, scope: !6456)
!6499 = !DILocation(line: 5229, column: 7, scope: !6456)
!6500 = !DILocation(line: 0, scope: !6451)
!6501 = !DILocation(line: 5230, column: 5, scope: !6456)
!6502 = !DILocation(line: 5231, column: 36, scope: !6456)
!6503 = !DILocation(line: 5232, column: 16, scope: !6456)
!6504 = !DILocation(line: 5233, column: 11, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 5233, column: 11)
!6506 = !DILocation(line: 5233, column: 34, scope: !6505)
!6507 = !DILocation(line: 5234, column: 4, scope: !6505)
!6508 = !DILocation(line: 5234, column: 7, scope: !6505)
!6509 = !DILocation(line: 5233, column: 11, scope: !6456)
!6510 = !DILocation(line: 5235, column: 2, scope: !6505)
!6511 = !DILocation(line: 5236, column: 14, scope: !6456)
!6512 = !DILocation(line: 5236, column: 7, scope: !6456)
!6513 = !DILocation(line: 5238, column: 1, scope: !6444)
!6514 = distinct !DISubprogram(name: "c_parser_alignof_expression", scope: !3, file: !3, line: 5243, type: !5410, scopeLine: 5244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6515)
!6515 = !{!6516, !6517, !6518, !6519, !6522, !6523, !6524, !6527, !6529}
!6516 = !DILocalVariable(name: "parser", arg: 1, scope: !6514, file: !3, line: 5243, type: !1896)
!6517 = !DILocalVariable(name: "expr", scope: !6514, file: !3, line: 5245, type: !715)
!6518 = !DILocalVariable(name: "loc", scope: !6514, file: !3, line: 5246, type: !846)
!6519 = !DILocalVariable(name: "loc", scope: !6520, file: !3, line: 5256, type: !846)
!6520 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 5253, column: 5)
!6521 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 5251, column: 7)
!6522 = !DILocalVariable(name: "type_name", scope: !6520, file: !3, line: 5257, type: !2011)
!6523 = !DILocalVariable(name: "ret", scope: !6520, file: !3, line: 5258, type: !715)
!6524 = !DILocalVariable(name: "ret", scope: !6525, file: !3, line: 5265, type: !715)
!6525 = distinct !DILexicalBlock(scope: !6526, file: !3, line: 5264, column: 2)
!6526 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 5263, column: 11)
!6527 = !DILocalVariable(name: "ret", scope: !6528, file: !3, line: 5290, type: !715)
!6528 = distinct !DILexicalBlock(scope: !6521, file: !3, line: 5289, column: 5)
!6529 = !DILabel(scope: !6528, name: "alignof_expr", file: !3, line: 5292)
!6530 = !DILocation(line: 0, scope: !6514)
!6531 = !DILocation(line: 5245, column: 3, scope: !6514)
!6532 = !DILocation(line: 5246, column: 20, scope: !6514)
!6533 = !DILocation(line: 5246, column: 50, scope: !6514)
!6534 = !DILocation(line: 5247, column: 3, scope: !6514)
!6535 = !DILocation(line: 5248, column: 3, scope: !6514)
!6536 = !DILocation(line: 5249, column: 32, scope: !6514)
!6537 = !DILocation(line: 5250, column: 13, scope: !6514)
!6538 = !DILocation(line: 5251, column: 7, scope: !6521)
!6539 = !DILocation(line: 5252, column: 7, scope: !6521)
!6540 = !DILocation(line: 5252, column: 35, scope: !6521)
!6541 = !DILocation(line: 5252, column: 10, scope: !6521)
!6542 = !DILocation(line: 5251, column: 7, scope: !6514)
!6543 = !DILocation(line: 5258, column: 7, scope: !6520)
!6544 = !DILocation(line: 5259, column: 7, scope: !6520)
!6545 = !DILocation(line: 5260, column: 13, scope: !6520)
!6546 = !DILocation(line: 5260, column: 43, scope: !6520)
!6547 = !DILocation(line: 0, scope: !6520)
!6548 = !DILocation(line: 5261, column: 19, scope: !6520)
!6549 = !DILocation(line: 5262, column: 7, scope: !6520)
!6550 = !DILocation(line: 5263, column: 21, scope: !6526)
!6551 = !DILocation(line: 5263, column: 11, scope: !6520)
!6552 = !DILocation(line: 5265, column: 18, scope: !6525)
!6553 = !DILocation(line: 5266, column: 33, scope: !6525)
!6554 = !DILocation(line: 5267, column: 14, scope: !6525)
!6555 = !DILocation(line: 5268, column: 16, scope: !6525)
!6556 = !DILocation(line: 5268, column: 14, scope: !6525)
!6557 = !DILocation(line: 5269, column: 8, scope: !6525)
!6558 = !DILocation(line: 5269, column: 22, scope: !6525)
!6559 = !DILocation(line: 5270, column: 8, scope: !6525)
!6560 = !DILocation(line: 5270, column: 22, scope: !6525)
!6561 = !DILocation(line: 5271, column: 4, scope: !6525)
!6562 = !DILocation(line: 5273, column: 11, scope: !6563)
!6563 = distinct !DILexicalBlock(scope: !6520, file: !3, line: 5273, column: 11)
!6564 = !DILocation(line: 5273, column: 11, scope: !6520)
!6565 = !DILocation(line: 5275, column: 11, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6563, file: !3, line: 5274, column: 2)
!6567 = !DILocation(line: 5278, column: 4, scope: !6566)
!6568 = !DILocation(line: 5281, column: 36, scope: !6520)
!6569 = !DILocation(line: 5282, column: 17, scope: !6520)
!6570 = !DILocation(line: 5283, column: 19, scope: !6520)
!6571 = !DILocation(line: 5283, column: 11, scope: !6520)
!6572 = !DILocation(line: 5283, column: 17, scope: !6520)
!6573 = !DILocation(line: 5284, column: 11, scope: !6520)
!6574 = !DILocation(line: 5284, column: 25, scope: !6520)
!6575 = !DILocation(line: 5285, column: 11, scope: !6520)
!6576 = !DILocation(line: 5285, column: 25, scope: !6520)
!6577 = !DILocation(line: 5286, column: 14, scope: !6520)
!6578 = !DILocation(line: 5286, column: 7, scope: !6520)
!6579 = !DILocation(line: 5287, column: 5, scope: !6521)
!6580 = !DILocation(line: 5290, column: 21, scope: !6528)
!6581 = !DILocation(line: 5291, column: 14, scope: !6528)
!6582 = !DILocation(line: 5291, column: 7, scope: !6528)
!6583 = !DILocation(line: 5292, column: 5, scope: !6528)
!6584 = !DILocation(line: 5293, column: 36, scope: !6528)
!6585 = !DILocation(line: 5294, column: 17, scope: !6528)
!6586 = !DILocation(line: 5295, column: 45, scope: !6528)
!6587 = !DILocation(line: 5295, column: 19, scope: !6528)
!6588 = !DILocation(line: 5295, column: 11, scope: !6528)
!6589 = !DILocation(line: 5295, column: 17, scope: !6528)
!6590 = !DILocation(line: 5296, column: 11, scope: !6528)
!6591 = !DILocation(line: 5296, column: 25, scope: !6528)
!6592 = !DILocation(line: 5297, column: 11, scope: !6528)
!6593 = !DILocation(line: 5297, column: 25, scope: !6528)
!6594 = !DILocation(line: 5298, column: 7, scope: !6528)
!6595 = !DILocation(line: 5300, column: 1, scope: !6514)
!6596 = distinct !DISubprogram(name: "c_parser_postfix_expression", scope: !3, file: !3, line: 5356, type: !5410, scopeLine: 5357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6597)
!6597 = !{!6598, !6599, !6600, !6601, !6602, !6603, !6604, !6605, !6606, !6609, !6612, !6613, !6616, !6617, !6621, !6623, !6624, !6631, !6633, !6635, !6636, !6638, !6640, !6642, !6645, !6646}
!6598 = !DILocalVariable(name: "parser", arg: 1, scope: !6596, file: !3, line: 5356, type: !1896)
!6599 = !DILocalVariable(name: "expr", scope: !6596, file: !3, line: 5358, type: !715)
!6600 = !DILocalVariable(name: "e1", scope: !6596, file: !3, line: 5358, type: !715)
!6601 = !DILocalVariable(name: "e2", scope: !6596, file: !3, line: 5358, type: !715)
!6602 = !DILocalVariable(name: "e3", scope: !6596, file: !3, line: 5358, type: !715)
!6603 = !DILocalVariable(name: "t1", scope: !6596, file: !3, line: 5359, type: !2011)
!6604 = !DILocalVariable(name: "t2", scope: !6596, file: !3, line: 5359, type: !2011)
!6605 = !DILocalVariable(name: "loc", scope: !6596, file: !3, line: 5360, type: !846)
!6606 = !DILocalVariable(name: "id", scope: !6607, file: !3, line: 5406, type: !718)
!6607 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 5405, column: 7)
!6608 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 5364, column: 5)
!6609 = !DILocalVariable(name: "stmt", scope: !6610, file: !3, line: 5420, type: !718)
!6610 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 5418, column: 2)
!6611 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 5417, column: 11)
!6612 = !DILocalVariable(name: "brace_loc", scope: !6610, file: !3, line: 5421, type: !846)
!6613 = !DILocalVariable(name: "loc", scope: !6614, file: !3, line: 5449, type: !846)
!6614 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 5444, column: 2)
!6615 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 5443, column: 16)
!6616 = !DILocalVariable(name: "type_name", scope: !6614, file: !3, line: 5450, type: !2011)
!6617 = !DILocalVariable(name: "type_expr", scope: !6618, file: !3, line: 5515, type: !718)
!6618 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 5514, column: 6)
!6619 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5509, column: 8)
!6620 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 5481, column: 2)
!6621 = !DILocalVariable(name: "type", scope: !6622, file: !3, line: 5547, type: !718)
!6622 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5546, column: 4)
!6623 = !DILocalVariable(name: "offsetof_ref", scope: !6622, file: !3, line: 5548, type: !718)
!6624 = !DILocalVariable(name: "idx", scope: !6625, file: !3, line: 5595, type: !718)
!6625 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 5594, column: 9)
!6626 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 5578, column: 16)
!6627 = distinct !DILexicalBlock(scope: !6628, file: !3, line: 5570, column: 11)
!6628 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 5569, column: 5)
!6629 = distinct !DILexicalBlock(scope: !6630, file: !3, line: 5560, column: 8)
!6630 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 5559, column: 10)
!6631 = !DILocalVariable(name: "c", scope: !6632, file: !3, line: 5639, type: !718)
!6632 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5638, column: 4)
!6633 = !DILocalVariable(name: "e1", scope: !6634, file: !3, line: 5679, type: !718)
!6634 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5678, column: 4)
!6635 = !DILocalVariable(name: "e2", scope: !6634, file: !3, line: 5679, type: !718)
!6636 = !DILocalVariable(name: "sel", scope: !6637, file: !3, line: 5698, type: !718)
!6637 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5697, column: 4)
!6638 = !DILocalVariable(name: "id", scope: !6639, file: !3, line: 5720, type: !718)
!6639 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5719, column: 4)
!6640 = !DILocalVariable(name: "type", scope: !6641, file: !3, line: 5746, type: !718)
!6641 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5745, column: 4)
!6642 = !DILocalVariable(name: "receiver", scope: !6643, file: !3, line: 5759, type: !718)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 5758, column: 2)
!6644 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 5757, column: 11)
!6645 = !DILocalVariable(name: "args", scope: !6643, file: !3, line: 5759, type: !718)
!6646 = !DILabel(scope: !6647, name: "do_dot", file: !3, line: 5580)
!6647 = distinct !DILexicalBlock(scope: !6626, file: !3, line: 5579, column: 9)
!6648 = !DILocation(line: 0, scope: !6596)
!6649 = !DILocation(line: 5358, column: 3, scope: !6596)
!6650 = !DILocation(line: 5360, column: 20, scope: !6596)
!6651 = !DILocation(line: 5360, column: 50, scope: !6596)
!6652 = !DILocation(line: 5361, column: 8, scope: !6596)
!6653 = !DILocation(line: 5361, column: 22, scope: !6596)
!6654 = !DILocation(line: 5362, column: 8, scope: !6596)
!6655 = !DILocation(line: 5362, column: 22, scope: !6596)
!6656 = !DILocation(line: 5363, column: 11, scope: !6596)
!6657 = !DILocation(line: 5363, column: 41, scope: !6596)
!6658 = !DILocation(line: 5363, column: 3, scope: !6596)
!6659 = !DILocation(line: 5366, column: 20, scope: !6608)
!6660 = !DILocation(line: 5366, column: 50, scope: !6608)
!6661 = !DILocation(line: 5366, column: 18, scope: !6608)
!6662 = !DILocation(line: 5367, column: 13, scope: !6608)
!6663 = !DILocation(line: 5367, column: 43, scope: !6608)
!6664 = !DILocation(line: 5368, column: 7, scope: !6608)
!6665 = !DILocation(line: 5369, column: 11, scope: !6666)
!6666 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 5369, column: 11)
!6667 = !DILocation(line: 5369, column: 34, scope: !6666)
!6668 = !DILocation(line: 5370, column: 4, scope: !6666)
!6669 = !DILocation(line: 5370, column: 16, scope: !6666)
!6670 = !DILocation(line: 5370, column: 8, scope: !6666)
!6671 = !DILocation(line: 5369, column: 11, scope: !6608)
!6672 = !DILocation(line: 5372, column: 4, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6666, file: !3, line: 5371, column: 2)
!6674 = !DILocation(line: 5373, column: 17, scope: !6673)
!6675 = !DILocation(line: 5373, column: 15, scope: !6673)
!6676 = !DILocation(line: 5374, column: 2, scope: !6673)
!6677 = !DILocation(line: 5380, column: 20, scope: !6608)
!6678 = !DILocation(line: 5380, column: 50, scope: !6608)
!6679 = !DILocation(line: 5380, column: 18, scope: !6608)
!6680 = !DILocation(line: 5381, column: 7, scope: !6608)
!6681 = !DILocation(line: 5382, column: 7, scope: !6608)
!6682 = !DILocation(line: 5388, column: 20, scope: !6608)
!6683 = !DILocation(line: 5388, column: 50, scope: !6608)
!6684 = !DILocation(line: 5388, column: 18, scope: !6608)
!6685 = !DILocation(line: 5389, column: 26, scope: !6608)
!6686 = !DILocation(line: 5390, column: 7, scope: !6608)
!6687 = !DILocation(line: 5391, column: 7, scope: !6608)
!6688 = !DILocation(line: 5393, column: 7, scope: !6608)
!6689 = !DILocation(line: 5395, column: 30, scope: !6608)
!6690 = !DILocation(line: 5395, column: 60, scope: !6608)
!6691 = !DILocation(line: 5395, column: 4, scope: !6608)
!6692 = !DILocation(line: 5394, column: 12, scope: !6608)
!6693 = !DILocation(line: 5395, column: 2, scope: !6608)
!6694 = !DILocation(line: 5396, column: 7, scope: !6608)
!6695 = !DILocation(line: 5397, column: 7, scope: !6608)
!6696 = !DILocation(line: 5399, column: 11, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 5399, column: 11)
!6698 = !DILocation(line: 5399, column: 41, scope: !6697)
!6699 = !DILocation(line: 5399, column: 49, scope: !6697)
!6700 = !DILocation(line: 5399, column: 11, scope: !6608)
!6701 = !DILocation(line: 5401, column: 4, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 5400, column: 2)
!6703 = !DILocation(line: 5402, column: 17, scope: !6702)
!6704 = !DILocation(line: 5402, column: 15, scope: !6702)
!6705 = !DILocation(line: 5403, column: 4, scope: !6702)
!6706 = !DILocation(line: 5406, column: 12, scope: !6607)
!6707 = !DILocation(line: 5406, column: 42, scope: !6607)
!6708 = !DILocation(line: 0, scope: !6607)
!6709 = !DILocation(line: 5407, column: 2, scope: !6607)
!6710 = !DILocation(line: 5409, column: 8, scope: !6607)
!6711 = !DILocation(line: 5409, column: 38, scope: !6607)
!6712 = !DILocation(line: 5410, column: 8, scope: !6607)
!6713 = !DILocation(line: 5408, column: 15, scope: !6607)
!6714 = !DILocation(line: 5408, column: 7, scope: !6607)
!6715 = !DILocation(line: 5408, column: 13, scope: !6607)
!6716 = !DILocation(line: 5413, column: 7, scope: !6608)
!6717 = !DILocation(line: 5417, column: 11, scope: !6611)
!6718 = !DILocation(line: 5417, column: 45, scope: !6611)
!6719 = !DILocation(line: 5417, column: 50, scope: !6611)
!6720 = !DILocation(line: 5417, column: 11, scope: !6608)
!6721 = !DILocation(line: 5422, column: 4, scope: !6610)
!6722 = !DILocation(line: 5423, column: 16, scope: !6610)
!6723 = !DILocation(line: 5423, column: 46, scope: !6610)
!6724 = !DILocation(line: 0, scope: !6610)
!6725 = !DILocation(line: 5424, column: 4, scope: !6610)
!6726 = !DILocation(line: 5425, column: 8, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6610, file: !3, line: 5425, column: 8)
!6728 = !DILocation(line: 5425, column: 22, scope: !6727)
!6729 = !DILocation(line: 5425, column: 8, scope: !6610)
!6730 = !DILocation(line: 5427, column: 8, scope: !6731)
!6731 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 5426, column: 6)
!6732 = !DILocation(line: 5429, column: 16, scope: !6731)
!6733 = !DILocation(line: 5429, column: 22, scope: !6731)
!6734 = !DILocation(line: 5430, column: 8, scope: !6731)
!6735 = !DILocation(line: 5431, column: 8, scope: !6731)
!6736 = !DILocation(line: 5432, column: 21, scope: !6731)
!6737 = !DILocation(line: 5432, column: 19, scope: !6731)
!6738 = !DILocation(line: 5433, column: 8, scope: !6731)
!6739 = !DILocation(line: 5435, column: 11, scope: !6610)
!6740 = !DILocation(line: 5436, column: 4, scope: !6610)
!6741 = !DILocation(line: 5437, column: 4, scope: !6610)
!6742 = !DILocation(line: 5439, column: 4, scope: !6610)
!6743 = !DILocation(line: 5441, column: 17, scope: !6610)
!6744 = !DILocation(line: 5441, column: 9, scope: !6610)
!6745 = !DILocation(line: 5441, column: 15, scope: !6610)
!6746 = !DILocation(line: 5442, column: 2, scope: !6611)
!6747 = !DILocation(line: 5443, column: 41, scope: !6615)
!6748 = !DILocation(line: 5443, column: 16, scope: !6615)
!6749 = !DILocation(line: 0, scope: !6615)
!6750 = !DILocation(line: 5443, column: 16, scope: !6611)
!6751 = !DILocation(line: 5452, column: 10, scope: !6614)
!6752 = !DILocation(line: 5452, column: 40, scope: !6614)
!6753 = !DILocation(line: 0, scope: !6614)
!6754 = !DILocation(line: 5453, column: 16, scope: !6614)
!6755 = !DILocation(line: 5454, column: 4, scope: !6614)
!6756 = !DILocation(line: 5456, column: 18, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6614, file: !3, line: 5456, column: 8)
!6758 = !DILocation(line: 5456, column: 8, scope: !6614)
!6759 = !DILocation(line: 5458, column: 21, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 5457, column: 6)
!6761 = !DILocation(line: 5458, column: 19, scope: !6760)
!6762 = !DILocation(line: 5459, column: 6, scope: !6760)
!6763 = !DILocation(line: 5461, column: 13, scope: !6757)
!6764 = !DILocation(line: 5469, column: 11, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 5466, column: 2)
!6766 = !DILocation(line: 5470, column: 8, scope: !6767)
!6767 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 5470, column: 8)
!6768 = !DILocation(line: 5470, column: 31, scope: !6767)
!6769 = !DILocation(line: 5470, column: 8, scope: !6765)
!6770 = !DILocation(line: 5471, column: 35, scope: !6767)
!6771 = !DILocation(line: 5471, column: 6, scope: !6767)
!6772 = !DILocation(line: 5472, column: 13, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 5472, column: 8)
!6774 = !DILocation(line: 5472, column: 27, scope: !6773)
!6775 = !DILocation(line: 5472, column: 8, scope: !6765)
!6776 = !DILocation(line: 5473, column: 25, scope: !6773)
!6777 = !DILocation(line: 5473, column: 6, scope: !6773)
!6778 = !DILocation(line: 5475, column: 4, scope: !6765)
!6779 = !DILocation(line: 5480, column: 15, scope: !6608)
!6780 = !DILocation(line: 5480, column: 45, scope: !6608)
!6781 = !DILocation(line: 5480, column: 7, scope: !6608)
!6782 = !DILocation(line: 5486, column: 8, scope: !6620)
!6783 = !DILocation(line: 5486, column: 38, scope: !6620)
!6784 = !DILocation(line: 5487, column: 8, scope: !6620)
!6785 = !DILocation(line: 5487, column: 38, scope: !6620)
!6786 = !DILocation(line: 5485, column: 17, scope: !6620)
!6787 = !DILocation(line: 5485, column: 9, scope: !6620)
!6788 = !DILocation(line: 5485, column: 15, scope: !6620)
!6789 = !DILocation(line: 5488, column: 4, scope: !6620)
!6790 = !DILocation(line: 5489, column: 4, scope: !6620)
!6791 = !DILocation(line: 5491, column: 4, scope: !6620)
!6792 = !DILocation(line: 5492, column: 9, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5492, column: 8)
!6794 = !DILocation(line: 5492, column: 8, scope: !6620)
!6795 = !DILocation(line: 5494, column: 21, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 5493, column: 6)
!6797 = !DILocation(line: 5494, column: 19, scope: !6796)
!6798 = !DILocation(line: 5495, column: 8, scope: !6796)
!6799 = !DILocation(line: 5497, column: 9, scope: !6620)
!6800 = !DILocation(line: 5498, column: 32, scope: !6620)
!6801 = !DILocation(line: 5498, column: 15, scope: !6620)
!6802 = !DILocation(line: 5498, column: 13, scope: !6620)
!6803 = !DILocation(line: 5499, column: 9, scope: !6804)
!6804 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5499, column: 8)
!6805 = !DILocation(line: 5499, column: 8, scope: !6620)
!6806 = !DILocation(line: 5501, column: 8, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6804, file: !3, line: 5500, column: 6)
!6808 = !DILocation(line: 5502, column: 21, scope: !6807)
!6809 = !DILocation(line: 5502, column: 19, scope: !6807)
!6810 = !DILocation(line: 5503, column: 8, scope: !6807)
!6811 = !DILocation(line: 5505, column: 10, scope: !6620)
!6812 = !DILocation(line: 5505, column: 40, scope: !6620)
!6813 = !DILocation(line: 5506, column: 9, scope: !6620)
!6814 = !DILocation(line: 5507, column: 4, scope: !6620)
!6815 = !DILocation(line: 5509, column: 11, scope: !6619)
!6816 = !DILocation(line: 5509, column: 8, scope: !6620)
!6817 = !DILocation(line: 5511, column: 21, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6619, file: !3, line: 5510, column: 6)
!6819 = !DILocation(line: 5511, column: 19, scope: !6818)
!6820 = !DILocation(line: 5512, column: 6, scope: !6818)
!6821 = !DILocation(line: 5515, column: 8, scope: !6618)
!6822 = !DILocation(line: 0, scope: !6618)
!6823 = !DILocation(line: 5515, column: 13, scope: !6618)
!6824 = !DILocation(line: 5517, column: 9, scope: !6618)
!6825 = !DILocation(line: 5516, column: 21, scope: !6618)
!6826 = !DILocation(line: 5516, column: 13, scope: !6618)
!6827 = !DILocation(line: 5516, column: 19, scope: !6618)
!6828 = !DILocation(line: 5518, column: 12, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6618, file: !3, line: 5518, column: 12)
!6830 = !DILocation(line: 5518, column: 12, scope: !6618)
!6831 = !DILocation(line: 5520, column: 18, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 5519, column: 3)
!6833 = !DILocation(line: 5520, column: 16, scope: !6832)
!6834 = !DILocation(line: 5523, column: 5, scope: !6832)
!6835 = !DILocation(line: 5523, column: 47, scope: !6832)
!6836 = !DILocation(line: 5524, column: 3, scope: !6832)
!6837 = !DILocation(line: 5525, column: 6, scope: !6619)
!6838 = !DILocation(line: 5528, column: 4, scope: !6620)
!6839 = !DILocation(line: 5529, column: 9, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5529, column: 8)
!6841 = !DILocation(line: 5529, column: 8, scope: !6620)
!6842 = !DILocation(line: 5531, column: 21, scope: !6843)
!6843 = distinct !DILexicalBlock(scope: !6840, file: !3, line: 5530, column: 6)
!6844 = !DILocation(line: 5531, column: 19, scope: !6843)
!6845 = !DILocation(line: 5532, column: 8, scope: !6843)
!6846 = !DILocation(line: 5534, column: 9, scope: !6620)
!6847 = !DILocation(line: 5535, column: 11, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5535, column: 8)
!6849 = !DILocation(line: 5535, column: 8, scope: !6620)
!6850 = !DILocation(line: 5537, column: 21, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 5536, column: 6)
!6852 = !DILocation(line: 5537, column: 19, scope: !6851)
!6853 = !DILocation(line: 5538, column: 8, scope: !6851)
!6854 = !DILocation(line: 5540, column: 9, scope: !6855)
!6855 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5540, column: 8)
!6856 = !DILocation(line: 5540, column: 8, scope: !6620)
!6857 = !DILocation(line: 5542, column: 8, scope: !6858)
!6858 = distinct !DILexicalBlock(scope: !6855, file: !3, line: 5541, column: 6)
!6859 = !DILocation(line: 5543, column: 21, scope: !6858)
!6860 = !DILocation(line: 5543, column: 19, scope: !6858)
!6861 = !DILocation(line: 5544, column: 8, scope: !6858)
!6862 = !DILocation(line: 5547, column: 18, scope: !6622)
!6863 = !DILocation(line: 0, scope: !6622)
!6864 = !DILocation(line: 5549, column: 18, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6622, file: !3, line: 5549, column: 10)
!6866 = !DILocation(line: 5549, column: 15, scope: !6865)
!6867 = !DILocation(line: 5549, column: 10, scope: !6622)
!6868 = !DILocation(line: 5550, column: 8, scope: !6865)
!6869 = !DILocation(line: 5553, column: 18, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 5552, column: 8)
!6871 = !DILocation(line: 5554, column: 3, scope: !6870)
!6872 = !DILocation(line: 0, scope: !6865)
!6873 = !DILocation(line: 5559, column: 10, scope: !6630)
!6874 = !DILocation(line: 5559, column: 10, scope: !6622)
!6875 = !DILocation(line: 5562, column: 25, scope: !6629)
!6876 = !DILocation(line: 5562, column: 55, scope: !6629)
!6877 = !DILocation(line: 5561, column: 18, scope: !6629)
!6878 = !DILocation(line: 5563, column: 3, scope: !6629)
!6879 = !DILocation(line: 0, scope: !6625)
!6880 = !DILocation(line: 5564, column: 3, scope: !6629)
!6881 = !DILocation(line: 0, scope: !6629)
!6882 = !DILocation(line: 5564, column: 10, scope: !6629)
!6883 = !DILocation(line: 5565, column: 10, scope: !6629)
!6884 = !DILocation(line: 5565, column: 13, scope: !6629)
!6885 = !DILocation(line: 5567, column: 10, scope: !6629)
!6886 = !DILocation(line: 5567, column: 13, scope: !6629)
!6887 = !DILocation(line: 5570, column: 11, scope: !6627)
!6888 = !DILocation(line: 5570, column: 11, scope: !6628)
!6889 = !DILocation(line: 5572, column: 10, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6627, file: !3, line: 5571, column: 9)
!6891 = !DILocation(line: 5572, column: 40, scope: !6890)
!6892 = !DILocation(line: 5575, column: 8, scope: !6890)
!6893 = !DILocation(line: 5573, column: 19, scope: !6890)
!6894 = !DILocation(line: 5576, column: 4, scope: !6890)
!6895 = !DILocation(line: 5578, column: 16, scope: !6626)
!6896 = !DILocation(line: 5578, column: 16, scope: !6627)
!6897 = !DILocation(line: 5580, column: 9, scope: !6647)
!6898 = !DILocation(line: 5581, column: 4, scope: !6647)
!6899 = !DILocation(line: 5582, column: 8, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 5582, column: 8)
!6901 = !DILocation(line: 5582, column: 8, scope: !6647)
!6902 = !DILocation(line: 5585, column: 8, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 5584, column: 6)
!6904 = !DILocation(line: 5586, column: 8, scope: !6903)
!6905 = !DILocation(line: 5590, column: 7, scope: !6647)
!6906 = !DILocation(line: 5590, column: 37, scope: !6647)
!6907 = !DILocation(line: 5588, column: 19, scope: !6647)
!6908 = !DILocation(line: 5591, column: 4, scope: !6647)
!6909 = !DILocation(line: 5592, column: 9, scope: !6647)
!6910 = !DILocation(line: 5596, column: 10, scope: !6625)
!6911 = !DILocation(line: 5596, column: 40, scope: !6625)
!6912 = !DILocation(line: 5597, column: 4, scope: !6625)
!6913 = !DILocation(line: 5598, column: 10, scope: !6625)
!6914 = !DILocation(line: 5598, column: 39, scope: !6625)
!6915 = !DILocation(line: 5599, column: 10, scope: !6625)
!6916 = !DILocation(line: 5600, column: 4, scope: !6625)
!6917 = !DILocation(line: 5602, column: 19, scope: !6625)
!6918 = !DILocation(line: 0, scope: !6627)
!6919 = !DILocation(line: 0, scope: !6626)
!6920 = distinct !{!6920, !6880, !6921}
!6921 = !DILocation(line: 5604, column: 5, scope: !6629)
!6922 = !DILocation(line: 5607, column: 8, scope: !6630)
!6923 = !DILocation(line: 5608, column: 6, scope: !6622)
!6924 = !DILocation(line: 5610, column: 19, scope: !6622)
!6925 = !DILocation(line: 5610, column: 11, scope: !6622)
!6926 = !DILocation(line: 5610, column: 17, scope: !6622)
!6927 = !DILocation(line: 5612, column: 4, scope: !6620)
!6928 = !DILocation(line: 5614, column: 4, scope: !6620)
!6929 = !DILocation(line: 5615, column: 9, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5615, column: 8)
!6931 = !DILocation(line: 5615, column: 8, scope: !6620)
!6932 = !DILocation(line: 5617, column: 21, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 5616, column: 6)
!6934 = !DILocation(line: 5617, column: 19, scope: !6933)
!6935 = !DILocation(line: 5618, column: 8, scope: !6933)
!6936 = !DILocation(line: 5620, column: 10, scope: !6620)
!6937 = !DILocation(line: 5620, column: 40, scope: !6620)
!6938 = !DILocation(line: 5621, column: 9, scope: !6620)
!6939 = !DILocation(line: 5622, column: 9, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5622, column: 8)
!6941 = !DILocation(line: 5622, column: 8, scope: !6620)
!6942 = !DILocation(line: 5624, column: 8, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 5623, column: 6)
!6944 = !DILocation(line: 5625, column: 21, scope: !6943)
!6945 = !DILocation(line: 5625, column: 19, scope: !6943)
!6946 = !DILocation(line: 5626, column: 8, scope: !6943)
!6947 = !DILocation(line: 5628, column: 9, scope: !6620)
!6948 = !DILocation(line: 5629, column: 9, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5629, column: 8)
!6950 = !DILocation(line: 5629, column: 8, scope: !6620)
!6951 = !DILocation(line: 5631, column: 8, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6949, file: !3, line: 5630, column: 6)
!6953 = !DILocation(line: 5632, column: 21, scope: !6952)
!6954 = !DILocation(line: 5632, column: 19, scope: !6952)
!6955 = !DILocation(line: 5633, column: 8, scope: !6952)
!6956 = !DILocation(line: 5635, column: 9, scope: !6620)
!6957 = !DILocation(line: 5636, column: 4, scope: !6620)
!6958 = !DILocation(line: 5641, column: 13, scope: !6632)
!6959 = !DILocation(line: 0, scope: !6632)
!6960 = !DILocation(line: 5642, column: 10, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6632, file: !3, line: 5642, column: 10)
!6962 = !DILocation(line: 5642, column: 24, scope: !6961)
!6963 = !DILocation(line: 5643, column: 3, scope: !6961)
!6964 = !DILocation(line: 5643, column: 7, scope: !6961)
!6965 = !DILocation(line: 5642, column: 10, scope: !6632)
!6966 = !DILocation(line: 5644, column: 8, scope: !6961)
!6967 = !DILocation(line: 5647, column: 6, scope: !6632)
!6968 = !DILocation(line: 5648, column: 13, scope: !6632)
!6969 = !DILocation(line: 5648, column: 33, scope: !6632)
!6970 = !DILocation(line: 5648, column: 38, scope: !6632)
!6971 = !DILocation(line: 5652, column: 4, scope: !6620)
!6972 = !DILocation(line: 5653, column: 9, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5653, column: 8)
!6974 = !DILocation(line: 5653, column: 8, scope: !6620)
!6975 = !DILocation(line: 5655, column: 21, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6973, file: !3, line: 5654, column: 6)
!6977 = !DILocation(line: 5655, column: 19, scope: !6976)
!6978 = !DILocation(line: 5656, column: 8, scope: !6976)
!6979 = !DILocation(line: 5658, column: 9, scope: !6620)
!6980 = !DILocation(line: 5659, column: 11, scope: !6981)
!6981 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5659, column: 8)
!6982 = !DILocation(line: 5659, column: 8, scope: !6620)
!6983 = !DILocation(line: 5661, column: 21, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6981, file: !3, line: 5660, column: 6)
!6985 = !DILocation(line: 5661, column: 19, scope: !6984)
!6986 = !DILocation(line: 5662, column: 8, scope: !6984)
!6987 = !DILocation(line: 5664, column: 9, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5664, column: 8)
!6989 = !DILocation(line: 5664, column: 8, scope: !6620)
!6990 = !DILocation(line: 5666, column: 8, scope: !6991)
!6991 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 5665, column: 6)
!6992 = !DILocation(line: 5667, column: 21, scope: !6991)
!6993 = !DILocation(line: 5667, column: 19, scope: !6991)
!6994 = !DILocation(line: 5668, column: 8, scope: !6991)
!6995 = !DILocation(line: 5670, column: 9, scope: !6620)
!6996 = !DILocation(line: 5671, column: 11, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5671, column: 8)
!6998 = !DILocation(line: 5671, column: 8, scope: !6620)
!6999 = !DILocation(line: 5673, column: 21, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6997, file: !3, line: 5672, column: 6)
!7001 = !DILocation(line: 5673, column: 19, scope: !7000)
!7002 = !DILocation(line: 5674, column: 8, scope: !7000)
!7003 = !DILocation(line: 5676, column: 4, scope: !6620)
!7004 = !DILocation(line: 5681, column: 11, scope: !6634)
!7005 = !DILocation(line: 0, scope: !6634)
!7006 = !DILocation(line: 5682, column: 11, scope: !6634)
!7007 = !DILocation(line: 5684, column: 19, scope: !6634)
!7008 = !DILocation(line: 5685, column: 10, scope: !6634)
!7009 = !DILocation(line: 5686, column: 10, scope: !6634)
!7010 = !DILocation(line: 5684, column: 11, scope: !6634)
!7011 = !DILocation(line: 5684, column: 17, scope: !6634)
!7012 = !DILocation(line: 5688, column: 4, scope: !6620)
!7013 = !DILocation(line: 5690, column: 4, scope: !6620)
!7014 = !DILocation(line: 5691, column: 4, scope: !6620)
!7015 = !DILocation(line: 5692, column: 9, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5692, column: 8)
!7017 = !DILocation(line: 5692, column: 8, scope: !6620)
!7018 = !DILocation(line: 5694, column: 21, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7016, file: !3, line: 5693, column: 6)
!7020 = !DILocation(line: 5694, column: 19, scope: !7019)
!7021 = !DILocation(line: 5695, column: 8, scope: !7019)
!7022 = !DILocation(line: 5698, column: 17, scope: !6637)
!7023 = !DILocation(line: 0, scope: !6637)
!7024 = !DILocation(line: 5699, column: 6, scope: !6637)
!7025 = !DILocation(line: 5701, column: 19, scope: !6637)
!7026 = !DILocation(line: 5701, column: 11, scope: !6637)
!7027 = !DILocation(line: 5701, column: 17, scope: !6637)
!7028 = !DILocation(line: 5703, column: 4, scope: !6620)
!7029 = !DILocation(line: 5705, column: 4, scope: !6620)
!7030 = !DILocation(line: 5706, column: 4, scope: !6620)
!7031 = !DILocation(line: 5707, column: 9, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5707, column: 8)
!7033 = !DILocation(line: 5707, column: 8, scope: !6620)
!7034 = !DILocation(line: 5709, column: 21, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 5708, column: 6)
!7036 = !DILocation(line: 5709, column: 19, scope: !7035)
!7037 = !DILocation(line: 5710, column: 8, scope: !7035)
!7038 = !DILocation(line: 5712, column: 8, scope: !7039)
!7039 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5712, column: 8)
!7040 = !DILocation(line: 5712, column: 8, scope: !6620)
!7041 = !DILocation(line: 5714, column: 8, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7039, file: !3, line: 5713, column: 6)
!7043 = !DILocation(line: 5715, column: 8, scope: !7042)
!7044 = !DILocation(line: 5716, column: 21, scope: !7042)
!7045 = !DILocation(line: 5716, column: 19, scope: !7042)
!7046 = !DILocation(line: 5717, column: 8, scope: !7042)
!7047 = !DILocation(line: 5720, column: 16, scope: !6639)
!7048 = !DILocation(line: 5720, column: 46, scope: !6639)
!7049 = !DILocation(line: 0, scope: !6639)
!7050 = !DILocation(line: 5721, column: 6, scope: !6639)
!7051 = !DILocation(line: 5722, column: 6, scope: !6639)
!7052 = !DILocation(line: 5724, column: 19, scope: !6639)
!7053 = !DILocation(line: 5724, column: 11, scope: !6639)
!7054 = !DILocation(line: 5724, column: 17, scope: !6639)
!7055 = !DILocation(line: 5726, column: 4, scope: !6620)
!7056 = !DILocation(line: 5729, column: 4, scope: !6620)
!7057 = !DILocation(line: 5730, column: 4, scope: !6620)
!7058 = !DILocation(line: 5731, column: 9, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5731, column: 8)
!7060 = !DILocation(line: 5731, column: 8, scope: !6620)
!7061 = !DILocation(line: 5733, column: 21, scope: !7062)
!7062 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 5732, column: 6)
!7063 = !DILocation(line: 5733, column: 19, scope: !7062)
!7064 = !DILocation(line: 5734, column: 8, scope: !7062)
!7065 = !DILocation(line: 5736, column: 9, scope: !6620)
!7066 = !DILocation(line: 5737, column: 11, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 5737, column: 8)
!7068 = !DILocation(line: 5737, column: 8, scope: !6620)
!7069 = !DILocation(line: 5739, column: 21, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 5738, column: 6)
!7071 = !DILocation(line: 5739, column: 19, scope: !7070)
!7072 = !DILocation(line: 5740, column: 8, scope: !7070)
!7073 = !DILocation(line: 5741, column: 8, scope: !7070)
!7074 = !DILocation(line: 5743, column: 4, scope: !6620)
!7075 = !DILocation(line: 5746, column: 18, scope: !6641)
!7076 = !DILocation(line: 0, scope: !6641)
!7077 = !DILocation(line: 5747, column: 19, scope: !6641)
!7078 = !DILocation(line: 5747, column: 11, scope: !6641)
!7079 = !DILocation(line: 5747, column: 17, scope: !6641)
!7080 = !DILocation(line: 5749, column: 4, scope: !6620)
!7081 = !DILocation(line: 5751, column: 4, scope: !6620)
!7082 = !DILocation(line: 5752, column: 17, scope: !6620)
!7083 = !DILocation(line: 5752, column: 15, scope: !6620)
!7084 = !DILocation(line: 5753, column: 4, scope: !6620)
!7085 = !DILocation(line: 5757, column: 11, scope: !6644)
!7086 = !DILocation(line: 5757, column: 11, scope: !6608)
!7087 = !DILocation(line: 5760, column: 4, scope: !6643)
!7088 = !DILocation(line: 5761, column: 15, scope: !6643)
!7089 = !DILocation(line: 0, scope: !6643)
!7090 = !DILocation(line: 5762, column: 11, scope: !6643)
!7091 = !DILocation(line: 5763, column: 4, scope: !6643)
!7092 = !DILocation(line: 5765, column: 42, scope: !6643)
!7093 = !DILocation(line: 5765, column: 17, scope: !6643)
!7094 = !DILocation(line: 5765, column: 9, scope: !6643)
!7095 = !DILocation(line: 5765, column: 15, scope: !6643)
!7096 = !DILocation(line: 5771, column: 7, scope: !6608)
!7097 = !DILocation(line: 5772, column: 20, scope: !6608)
!7098 = !DILocation(line: 5772, column: 18, scope: !6608)
!7099 = !DILocation(line: 5773, column: 7, scope: !6608)
!7100 = !DILocation(line: 5775, column: 10, scope: !6596)
!7101 = !DILocation(line: 5776, column: 1, scope: !6596)
!7102 = distinct !DISubprogram(name: "c_parser_compound_statement_nostart", scope: !3, file: !3, line: 3422, type: !2645, scopeLine: 3423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7103)
!7103 = !{!7104, !7105, !7106, !7107, !7108, !7109, !7114, !7116, !7123}
!7104 = !DILocalVariable(name: "parser", arg: 1, scope: !7102, file: !3, line: 3422, type: !1896)
!7105 = !DILocalVariable(name: "last_stmt", scope: !7102, file: !3, line: 3424, type: !838)
!7106 = !DILocalVariable(name: "last_label", scope: !7102, file: !3, line: 3425, type: !838)
!7107 = !DILocalVariable(name: "save_valid_for_pragma", scope: !7102, file: !3, line: 3426, type: !838)
!7108 = !DILocalVariable(name: "label_loc", scope: !7102, file: !3, line: 3427, type: !846)
!7109 = !DILocalVariable(name: "label", scope: !7110, file: !3, line: 3447, type: !718)
!7110 = distinct !DILexicalBlock(scope: !7111, file: !3, line: 3446, column: 6)
!7111 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 3440, column: 2)
!7112 = distinct !DILexicalBlock(scope: !7113, file: !3, line: 3435, column: 5)
!7113 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 3434, column: 7)
!7114 = !DILocalVariable(name: "loc", scope: !7115, file: !3, line: 3477, type: !846)
!7115 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 3476, column: 5)
!7116 = !DILocalVariable(name: "ext", scope: !7117, file: !3, line: 3519, type: !815)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 3518, column: 6)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 3517, column: 8)
!7119 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 3508, column: 2)
!7120 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 3506, column: 16)
!7121 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 3492, column: 16)
!7122 = distinct !DILexicalBlock(scope: !7115, file: !3, line: 3478, column: 11)
!7123 = !DILabel(scope: !7124, name: "statement", file: !3, line: 3571)
!7124 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 3570, column: 2)
!7125 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 3554, column: 16)
!7126 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 3548, column: 16)
!7127 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 3538, column: 16)
!7128 = !DILocation(line: 0, scope: !7102)
!7129 = !DILocation(line: 3426, column: 32, scope: !7102)
!7130 = !DILocation(line: 3428, column: 7, scope: !7131)
!7131 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 3428, column: 7)
!7132 = !DILocation(line: 3428, column: 7, scope: !7102)
!7133 = !DILocation(line: 3430, column: 7, scope: !7134)
!7134 = distinct !DILexicalBlock(scope: !7131, file: !3, line: 3429, column: 5)
!7135 = !DILocation(line: 3431, column: 7, scope: !7134)
!7136 = !DILocation(line: 3433, column: 3, scope: !7102)
!7137 = !DILocation(line: 3434, column: 7, scope: !7113)
!7138 = !DILocation(line: 3434, column: 7, scope: !7102)
!7139 = !DILocation(line: 3438, column: 7, scope: !7112)
!7140 = !DILocation(line: 3439, column: 7, scope: !7112)
!7141 = !DILocation(line: 3439, column: 14, scope: !7112)
!7142 = !DILocation(line: 3441, column: 16, scope: !7111)
!7143 = !DILocation(line: 3441, column: 46, scope: !7111)
!7144 = !DILocation(line: 3442, column: 4, scope: !7111)
!7145 = !DILocation(line: 3445, column: 4, scope: !7111)
!7146 = !DILocation(line: 3448, column: 12, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3448, column: 12)
!7148 = !DILocation(line: 3448, column: 12, scope: !7110)
!7149 = !DILocation(line: 3450, column: 5, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 3449, column: 3)
!7151 = !DILocation(line: 3451, column: 5, scope: !7150)
!7152 = !DILocation(line: 3454, column: 20, scope: !7110)
!7153 = !DILocation(line: 3454, column: 50, scope: !7110)
!7154 = !DILocation(line: 3454, column: 5, scope: !7110)
!7155 = !DILocation(line: 0, scope: !7110)
!7156 = !DILocation(line: 3455, column: 8, scope: !7110)
!7157 = !DILocation(line: 3455, column: 38, scope: !7110)
!7158 = !DILocation(line: 3456, column: 18, scope: !7110)
!7159 = !DILocation(line: 3456, column: 8, scope: !7110)
!7160 = !DILocation(line: 3457, column: 8, scope: !7110)
!7161 = !DILocation(line: 3458, column: 12, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3458, column: 12)
!7163 = !DILocation(line: 3458, column: 12, scope: !7110)
!7164 = !DILocation(line: 3459, column: 3, scope: !7162)
!7165 = !DILocation(line: 3462, column: 6, scope: !7111)
!7166 = distinct !{!7166, !7145, !7165}
!7167 = !DILocation(line: 3463, column: 4, scope: !7111)
!7168 = distinct !{!7168, !7140, !7169}
!7169 = !DILocation(line: 3464, column: 2, scope: !7112)
!7170 = !DILocation(line: 3465, column: 7, scope: !7112)
!7171 = !DILocation(line: 3466, column: 5, scope: !7112)
!7172 = !DILocation(line: 3427, column: 14, scope: !7102)
!7173 = !DILocation(line: 3468, column: 7, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 3468, column: 7)
!7175 = !DILocation(line: 3468, column: 7, scope: !7102)
!7176 = !DILocation(line: 0, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 3556, column: 15)
!7178 = distinct !DILexicalBlock(scope: !7125, file: !3, line: 3555, column: 9)
!7179 = !DILocation(line: 3475, column: 3, scope: !7102)
!7180 = !DILocation(line: 3470, column: 7, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7174, file: !3, line: 3469, column: 5)
!7182 = !DILocation(line: 3471, column: 7, scope: !7181)
!7183 = !DILocation(line: 3472, column: 7, scope: !7181)
!7184 = !DILocation(line: 3473, column: 7, scope: !7181)
!7185 = !DILocation(line: 3475, column: 10, scope: !7102)
!7186 = !DILocation(line: 3477, column: 24, scope: !7115)
!7187 = !DILocation(line: 3477, column: 54, scope: !7115)
!7188 = !DILocation(line: 0, scope: !7115)
!7189 = !DILocation(line: 3478, column: 11, scope: !7122)
!7190 = !DILocation(line: 3479, column: 4, scope: !7122)
!7191 = !DILocation(line: 3479, column: 7, scope: !7122)
!7192 = !DILocation(line: 3480, column: 4, scope: !7122)
!7193 = !DILocation(line: 3480, column: 8, scope: !7122)
!7194 = !DILocation(line: 3481, column: 8, scope: !7122)
!7195 = !DILocation(line: 3481, column: 11, scope: !7122)
!7196 = !DILocation(line: 3481, column: 45, scope: !7122)
!7197 = !DILocation(line: 3481, column: 50, scope: !7122)
!7198 = !DILocation(line: 3478, column: 11, scope: !7115)
!7199 = !DILocation(line: 3483, column: 8, scope: !7200)
!7200 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 3483, column: 8)
!7201 = distinct !DILexicalBlock(scope: !7122, file: !3, line: 3482, column: 2)
!7202 = !DILocation(line: 3483, column: 8, scope: !7201)
!7203 = !DILocation(line: 3484, column: 18, scope: !7200)
!7204 = !DILocation(line: 3484, column: 6, scope: !7200)
!7205 = !DILocation(line: 3486, column: 18, scope: !7200)
!7206 = !DILocation(line: 0, scope: !7200)
!7207 = !DILocation(line: 3489, column: 4, scope: !7201)
!7208 = !DILocation(line: 3490, column: 4, scope: !7201)
!7209 = !DILocation(line: 3491, column: 2, scope: !7201)
!7210 = !DILocation(line: 3493, column: 9, scope: !7121)
!7211 = !DILocation(line: 3493, column: 12, scope: !7121)
!7212 = !DILocation(line: 3492, column: 16, scope: !7122)
!7213 = !DILocation(line: 3496, column: 4, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 3494, column: 2)
!7215 = !DILocation(line: 3497, column: 4, scope: !7214)
!7216 = !DILocation(line: 3498, column: 8, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7214, file: !3, line: 3498, column: 8)
!7218 = !DILocation(line: 3498, column: 8, scope: !7214)
!7219 = !DILocation(line: 3500, column: 6, scope: !7217)
!7220 = !DILocation(line: 3500, column: 15, scope: !7217)
!7221 = !DILocation(line: 3500, column: 19, scope: !7217)
!7222 = !DILocation(line: 3500, column: 18, scope: !7217)
!7223 = !DILocation(line: 0, scope: !7217)
!7224 = !DILocation(line: 3500, column: 5, scope: !7217)
!7225 = !DILocation(line: 3499, column: 6, scope: !7217)
!7226 = !DILocation(line: 3507, column: 9, scope: !7120)
!7227 = !DILocation(line: 3507, column: 12, scope: !7120)
!7228 = !DILocation(line: 3506, column: 16, scope: !7121)
!7229 = !DILocation(line: 3513, column: 4, scope: !7119)
!7230 = !DILocation(line: 3513, column: 11, scope: !7119)
!7231 = !DILocation(line: 3513, column: 45, scope: !7119)
!7232 = !DILocation(line: 3513, column: 50, scope: !7119)
!7233 = !DILocation(line: 3514, column: 4, scope: !7119)
!7234 = !DILocation(line: 3514, column: 8, scope: !7119)
!7235 = !DILocation(line: 3514, column: 42, scope: !7119)
!7236 = !DILocation(line: 3515, column: 8, scope: !7119)
!7237 = !DILocation(line: 3516, column: 6, scope: !7119)
!7238 = distinct !{!7238, !7229, !7239}
!7239 = !DILocation(line: 3516, column: 36, scope: !7119)
!7240 = !DILocation(line: 3517, column: 34, scope: !7118)
!7241 = !DILocation(line: 3517, column: 8, scope: !7118)
!7242 = !DILocation(line: 3517, column: 8, scope: !7119)
!7243 = !DILocation(line: 3520, column: 14, scope: !7117)
!7244 = !DILocation(line: 0, scope: !7117)
!7245 = !DILocation(line: 3521, column: 8, scope: !7117)
!7246 = !DILocation(line: 3523, column: 8, scope: !7117)
!7247 = !DILocation(line: 3524, column: 8, scope: !7117)
!7248 = !DILocation(line: 3527, column: 8, scope: !7117)
!7249 = !DILocation(line: 3528, column: 12, scope: !7250)
!7250 = distinct !DILexicalBlock(scope: !7117, file: !3, line: 3528, column: 12)
!7251 = !DILocation(line: 3528, column: 12, scope: !7117)
!7252 = !DILocation(line: 3529, column: 22, scope: !7250)
!7253 = !DILocation(line: 3529, column: 31, scope: !7250)
!7254 = !DILocation(line: 3529, column: 35, scope: !7250)
!7255 = !DILocation(line: 3529, column: 34, scope: !7250)
!7256 = !DILocation(line: 0, scope: !7250)
!7257 = !DILocation(line: 3529, column: 21, scope: !7250)
!7258 = !DILocation(line: 3529, column: 3, scope: !7250)
!7259 = !DILocation(line: 3538, column: 16, scope: !7127)
!7260 = !DILocation(line: 3538, column: 16, scope: !7120)
!7261 = !DILocation(line: 3545, column: 8, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 3545, column: 8)
!7263 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 3539, column: 2)
!7264 = !DILocation(line: 3545, column: 8, scope: !7263)
!7265 = !DILocation(line: 3547, column: 2, scope: !7263)
!7266 = !DILocation(line: 3548, column: 16, scope: !7126)
!7267 = !DILocation(line: 3548, column: 16, scope: !7127)
!7268 = !DILocation(line: 3550, column: 4, scope: !7269)
!7269 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 3549, column: 2)
!7270 = !DILocation(line: 3551, column: 4, scope: !7269)
!7271 = !DILocation(line: 3552, column: 4, scope: !7269)
!7272 = !DILocation(line: 3554, column: 16, scope: !7125)
!7273 = !DILocation(line: 3554, column: 16, scope: !7126)
!7274 = !DILocation(line: 3556, column: 23, scope: !7177)
!7275 = !DILocation(line: 3556, column: 15, scope: !7177)
!7276 = !DILocation(line: 3556, column: 15, scope: !7178)
!7277 = !DILocation(line: 3558, column: 8, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 3557, column: 13)
!7279 = !DILocation(line: 3559, column: 15, scope: !7278)
!7280 = !DILocation(line: 3560, column: 15, scope: !7278)
!7281 = !DILocation(line: 3564, column: 15, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 3563, column: 13)
!7283 = !DILocation(line: 3565, column: 15, scope: !7282)
!7284 = !DILocation(line: 3566, column: 15, scope: !7282)
!7285 = distinct !{!7285, !7179, !7286}
!7286 = !DILocation(line: 3579, column: 5, scope: !7102)
!7287 = !DILocation(line: 3571, column: 2, scope: !7124)
!7288 = !DILocation(line: 3574, column: 4, scope: !7124)
!7289 = !DILocation(line: 3575, column: 4, scope: !7124)
!7290 = !DILocation(line: 0, scope: !7122)
!7291 = !DILocation(line: 3578, column: 21, scope: !7115)
!7292 = !DILocation(line: 3580, column: 7, scope: !7293)
!7293 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 3580, column: 7)
!7294 = !DILocation(line: 3580, column: 7, scope: !7102)
!7295 = !DILocation(line: 3581, column: 5, scope: !7293)
!7296 = !DILocation(line: 3582, column: 3, scope: !7102)
!7297 = !DILocation(line: 3584, column: 3, scope: !7102)
!7298 = !DILocation(line: 3585, column: 1, scope: !7102)
!7299 = distinct !DISubprogram(name: "c_parser_objc_selector_arg", scope: !3, file: !3, line: 6866, type: !3767, scopeLine: 6867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7300)
!7300 = !{!7301, !7302, !7303}
!7301 = !DILocalVariable(name: "parser", arg: 1, scope: !7299, file: !3, line: 6866, type: !1896)
!7302 = !DILocalVariable(name: "sel", scope: !7299, file: !3, line: 6868, type: !718)
!7303 = !DILocalVariable(name: "list", scope: !7299, file: !3, line: 6869, type: !718)
!7304 = !DILocation(line: 0, scope: !7299)
!7305 = !DILocation(line: 6868, column: 14, scope: !7299)
!7306 = !DILocation(line: 6870, column: 7, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 6870, column: 7)
!7308 = !DILocation(line: 6870, column: 11, scope: !7307)
!7309 = !DILocation(line: 6870, column: 14, scope: !7307)
!7310 = !DILocation(line: 6870, column: 7, scope: !7299)
!7311 = !DILocation(line: 6872, column: 3, scope: !7299)
!7312 = !DILocation(line: 6874, column: 12, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 6874, column: 11)
!7314 = distinct !DILexicalBlock(scope: !7299, file: !3, line: 6873, column: 5)
!7315 = !DILocation(line: 6874, column: 11, scope: !7314)
!7316 = !DILocation(line: 6876, column: 29, scope: !7314)
!7317 = !DILocation(line: 6876, column: 14, scope: !7314)
!7318 = !DILocation(line: 6877, column: 13, scope: !7314)
!7319 = !DILocation(line: 6878, column: 12, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 6878, column: 11)
!7321 = !DILocation(line: 6878, column: 16, scope: !7320)
!7322 = !DILocation(line: 6878, column: 19, scope: !7320)
!7323 = !DILocation(line: 6878, column: 11, scope: !7314)
!7324 = distinct !{!7324, !7311, !7325}
!7325 = !DILocation(line: 6880, column: 5, scope: !7299)
!7326 = !DILocation(line: 6882, column: 1, scope: !7299)
!7327 = distinct !DISubprogram(name: "c_parser_objc_receiver", scope: !3, file: !3, line: 6893, type: !3767, scopeLine: 6894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7328)
!7328 = !{!7329, !7330}
!7329 = !DILocalVariable(name: "parser", arg: 1, scope: !7327, file: !3, line: 6893, type: !1896)
!7330 = !DILocalVariable(name: "id", scope: !7331, file: !3, line: 6899, type: !718)
!7331 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 6898, column: 5)
!7332 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 6895, column: 7)
!7333 = !DILocation(line: 0, scope: !7327)
!7334 = !DILocation(line: 6895, column: 7, scope: !7332)
!7335 = !DILocation(line: 6895, column: 37, scope: !7332)
!7336 = !DILocation(line: 6895, column: 42, scope: !7332)
!7337 = !DILocation(line: 6896, column: 7, scope: !7332)
!7338 = !DILocation(line: 6896, column: 11, scope: !7332)
!7339 = !DILocation(line: 6896, column: 41, scope: !7332)
!7340 = !DILocation(line: 6896, column: 49, scope: !7332)
!7341 = !DILocation(line: 6897, column: 4, scope: !7332)
!7342 = !DILocation(line: 6897, column: 7, scope: !7332)
!7343 = !DILocation(line: 6897, column: 37, scope: !7332)
!7344 = !DILocation(line: 6897, column: 45, scope: !7332)
!7345 = !DILocation(line: 6895, column: 7, scope: !7327)
!7346 = !DILocation(line: 6899, column: 17, scope: !7331)
!7347 = !DILocation(line: 6899, column: 47, scope: !7331)
!7348 = !DILocation(line: 0, scope: !7331)
!7349 = !DILocation(line: 6900, column: 7, scope: !7331)
!7350 = !DILocation(line: 6901, column: 14, scope: !7331)
!7351 = !DILocation(line: 6903, column: 24, scope: !7327)
!7352 = !DILocation(line: 6903, column: 53, scope: !7327)
!7353 = !DILocation(line: 6903, column: 10, scope: !7327)
!7354 = !DILocation(line: 6903, column: 3, scope: !7327)
!7355 = !DILocation(line: 6904, column: 1, scope: !7327)
!7356 = distinct !DISubprogram(name: "c_parser_label", scope: !3, file: !3, line: 3604, type: !2645, scopeLine: 3605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7357)
!7357 = !{!7358, !7359, !7360, !7361, !7364, !7365, !7368, !7369, !7370}
!7358 = !DILocalVariable(name: "parser", arg: 1, scope: !7356, file: !3, line: 3604, type: !1896)
!7359 = !DILocalVariable(name: "loc1", scope: !7356, file: !3, line: 3606, type: !846)
!7360 = !DILocalVariable(name: "label", scope: !7356, file: !3, line: 3607, type: !718)
!7361 = !DILocalVariable(name: "exp1", scope: !7362, file: !3, line: 3610, type: !718)
!7362 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 3609, column: 5)
!7363 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 3608, column: 7)
!7364 = !DILocalVariable(name: "exp2", scope: !7362, file: !3, line: 3610, type: !718)
!7365 = !DILocalVariable(name: "name", scope: !7366, file: !3, line: 3636, type: !718)
!7366 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 3635, column: 5)
!7367 = distinct !DILexicalBlock(scope: !7363, file: !3, line: 3628, column: 12)
!7368 = !DILocalVariable(name: "tlab", scope: !7366, file: !3, line: 3637, type: !718)
!7369 = !DILocalVariable(name: "attrs", scope: !7366, file: !3, line: 3638, type: !718)
!7370 = !DILocalVariable(name: "loc2", scope: !7366, file: !3, line: 3639, type: !846)
!7371 = !DILocation(line: 0, scope: !7356)
!7372 = !DILocation(line: 3606, column: 21, scope: !7356)
!7373 = !DILocation(line: 3606, column: 51, scope: !7356)
!7374 = !DILocation(line: 3608, column: 7, scope: !7363)
!7375 = !DILocation(line: 3608, column: 7, scope: !7356)
!7376 = !DILocation(line: 3611, column: 7, scope: !7362)
!7377 = !DILocation(line: 3612, column: 14, scope: !7362)
!7378 = !DILocation(line: 3612, column: 53, scope: !7362)
!7379 = !DILocation(line: 0, scope: !7362)
!7380 = !DILocation(line: 3613, column: 11, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 3613, column: 11)
!7382 = !DILocation(line: 3613, column: 11, scope: !7362)
!7383 = !DILocation(line: 3615, column: 4, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 3614, column: 2)
!7385 = !DILocation(line: 3616, column: 12, scope: !7384)
!7386 = !DILocation(line: 3617, column: 2, scope: !7384)
!7387 = !DILocation(line: 3618, column: 16, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7381, file: !3, line: 3618, column: 16)
!7389 = !DILocation(line: 3618, column: 16, scope: !7381)
!7390 = !DILocation(line: 3620, column: 4, scope: !7391)
!7391 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 3619, column: 2)
!7392 = !DILocation(line: 3621, column: 11, scope: !7391)
!7393 = !DILocation(line: 3621, column: 50, scope: !7391)
!7394 = !DILocation(line: 3622, column: 8, scope: !7395)
!7395 = distinct !DILexicalBlock(scope: !7391, file: !3, line: 3622, column: 8)
!7396 = !DILocation(line: 3622, column: 8, scope: !7391)
!7397 = !DILocation(line: 3623, column: 14, scope: !7395)
!7398 = !DILocation(line: 3623, column: 6, scope: !7395)
!7399 = !DILocation(line: 3626, column: 2, scope: !7388)
!7400 = !DILocation(line: 3628, column: 12, scope: !7367)
!7401 = !DILocation(line: 3628, column: 12, scope: !7363)
!7402 = !DILocation(line: 3630, column: 7, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7367, file: !3, line: 3629, column: 5)
!7404 = !DILocation(line: 3631, column: 11, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 3631, column: 11)
!7406 = !DILocation(line: 3631, column: 11, scope: !7403)
!7407 = !DILocation(line: 3632, column: 10, scope: !7405)
!7408 = !DILocation(line: 3632, column: 2, scope: !7405)
!7409 = !DILocation(line: 3636, column: 19, scope: !7366)
!7410 = !DILocation(line: 3636, column: 49, scope: !7366)
!7411 = !DILocation(line: 0, scope: !7366)
!7412 = !DILocation(line: 3637, column: 7, scope: !7366)
!7413 = !DILocation(line: 3639, column: 25, scope: !7366)
!7414 = !DILocation(line: 3639, column: 55, scope: !7366)
!7415 = !DILocation(line: 3640, column: 7, scope: !7366)
!7416 = !DILocation(line: 3641, column: 7, scope: !7366)
!7417 = !DILocation(line: 3642, column: 7, scope: !7366)
!7418 = !DILocation(line: 3643, column: 7, scope: !7366)
!7419 = !DILocation(line: 3644, column: 15, scope: !7366)
!7420 = !DILocation(line: 3645, column: 14, scope: !7366)
!7421 = !DILocation(line: 3645, column: 12, scope: !7366)
!7422 = !DILocation(line: 3646, column: 11, scope: !7423)
!7423 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 3646, column: 11)
!7424 = !DILocation(line: 3646, column: 11, scope: !7366)
!7425 = !DILocation(line: 3648, column: 4, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 3647, column: 2)
!7427 = !DILocation(line: 3649, column: 52, scope: !7426)
!7428 = !DILocation(line: 3649, column: 22, scope: !7426)
!7429 = !DILocation(line: 3649, column: 12, scope: !7426)
!7430 = !DILocation(line: 3650, column: 2, scope: !7426)
!7431 = !DILocation(line: 3651, column: 5, scope: !7367)
!7432 = !DILocation(line: 0, scope: !7363)
!7433 = !DILocation(line: 3652, column: 7, scope: !7434)
!7434 = distinct !DILexicalBlock(scope: !7356, file: !3, line: 3652, column: 7)
!7435 = !DILocation(line: 3652, column: 7, scope: !7356)
!7436 = !DILocation(line: 3654, column: 11, scope: !7437)
!7437 = distinct !DILexicalBlock(scope: !7438, file: !3, line: 3654, column: 11)
!7438 = distinct !DILexicalBlock(scope: !7434, file: !3, line: 3653, column: 5)
!7439 = !DILocation(line: 3655, column: 4, scope: !7437)
!7440 = !DILocation(line: 3655, column: 9, scope: !7437)
!7441 = !DILocation(line: 3656, column: 9, scope: !7437)
!7442 = !DILocation(line: 3656, column: 12, scope: !7437)
!7443 = !DILocation(line: 3656, column: 46, scope: !7437)
!7444 = !DILocation(line: 3656, column: 51, scope: !7437)
!7445 = !DILocation(line: 3654, column: 11, scope: !7438)
!7446 = !DILocation(line: 3658, column: 14, scope: !7447)
!7447 = distinct !DILexicalBlock(scope: !7437, file: !3, line: 3657, column: 2)
!7448 = !DILocation(line: 3658, column: 44, scope: !7447)
!7449 = !DILocation(line: 3658, column: 4, scope: !7447)
!7450 = !DILocation(line: 3661, column: 4, scope: !7447)
!7451 = !DILocation(line: 3664, column: 2, scope: !7447)
!7452 = !DILocation(line: 3666, column: 1, scope: !7356)
!7453 = distinct !DISubprogram(name: "c_parser_next_token_starts_declspecs", scope: !3, file: !3, line: 501, type: !4294, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7454)
!7454 = !{!7455, !7456}
!7455 = !DILocalVariable(name: "parser", arg: 1, scope: !7453, file: !3, line: 501, type: !1896)
!7456 = !DILocalVariable(name: "token", scope: !7453, file: !3, line: 503, type: !2610)
!7457 = !DILocation(line: 0, scope: !7453)
!7458 = !DILocation(line: 503, column: 20, scope: !7453)
!7459 = !DILocation(line: 504, column: 10, scope: !7453)
!7460 = !DILocation(line: 504, column: 3, scope: !7453)
!7461 = distinct !DISubprogram(name: "c_token_starts_declspecs", scope: !3, file: !3, line: 431, type: !4339, scopeLine: 432, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7462)
!7462 = !{!7463}
!7463 = !DILocalVariable(name: "token", arg: 1, scope: !7461, file: !3, line: 431, type: !2610)
!7464 = !DILocation(line: 0, scope: !7461)
!7465 = !DILocation(line: 433, column: 18, scope: !7461)
!7466 = !DILocation(line: 433, column: 3, scope: !7461)
!7467 = !DILocation(line: 436, column: 22, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 434, column: 5)
!7469 = !DILocation(line: 436, column: 7, scope: !7468)
!7470 = !DILocation(line: 441, column: 4, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 437, column: 2)
!7472 = !DILocation(line: 443, column: 4, scope: !7471)
!7473 = !DILocation(line: 445, column: 4, scope: !7471)
!7474 = !DILocation(line: 448, column: 4, scope: !7471)
!7475 = !DILocation(line: 451, column: 22, scope: !7468)
!7476 = !DILocation(line: 449, column: 2, scope: !7471)
!7477 = !DILocation(line: 451, column: 7, scope: !7468)
!7478 = !DILocation(line: 487, column: 4, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 452, column: 2)
!7480 = !DILocation(line: 490, column: 11, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7468, file: !3, line: 490, column: 11)
!7482 = !DILocation(line: 0, scope: !7468)
!7483 = !DILocation(line: 496, column: 1, scope: !7461)
!7484 = distinct !DISubprogram(name: "c_parser_statement_after_labels", scope: !3, file: !3, line: 3779, type: !2645, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7485)
!7485 = !{!7486, !7487, !7488, !7489, !7490, !7495, !7498, !7499}
!7486 = !DILocalVariable(name: "parser", arg: 1, scope: !7484, file: !3, line: 3779, type: !1896)
!7487 = !DILocalVariable(name: "loc", scope: !7484, file: !3, line: 3781, type: !846)
!7488 = !DILocalVariable(name: "stmt", scope: !7484, file: !3, line: 3782, type: !718)
!7489 = !DILocalVariable(name: "in_if_block", scope: !7484, file: !3, line: 3783, type: !838)
!7490 = !DILocalVariable(name: "expr", scope: !7491, file: !3, line: 3842, type: !715)
!7491 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 3841, column: 6)
!7492 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 3835, column: 8)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 3792, column: 2)
!7494 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 3786, column: 5)
!7495 = !DILocalVariable(name: "expr", scope: !7496, file: !3, line: 3860, type: !718)
!7496 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 3859, column: 6)
!7497 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 3853, column: 8)
!7498 = !DILabel(scope: !7494, name: "expr_stmt", file: !3, line: 3894)
!7499 = !DILabel(scope: !7494, name: "expect_semicolon", file: !3, line: 3896)
!7500 = !DILocation(line: 0, scope: !7484)
!7501 = !DILocation(line: 3781, column: 20, scope: !7484)
!7502 = !DILocation(line: 3781, column: 50, scope: !7484)
!7503 = !DILocation(line: 3783, column: 30, scope: !7484)
!7504 = !DILocation(line: 3784, column: 23, scope: !7484)
!7505 = !DILocation(line: 3785, column: 11, scope: !7484)
!7506 = !DILocation(line: 3785, column: 41, scope: !7484)
!7507 = !DILocation(line: 3785, column: 3, scope: !7484)
!7508 = !DILocation(line: 3788, column: 17, scope: !7494)
!7509 = !DILocation(line: 3788, column: 7, scope: !7494)
!7510 = !DILocation(line: 3789, column: 7, scope: !7494)
!7511 = !DILocation(line: 3791, column: 15, scope: !7494)
!7512 = !DILocation(line: 3791, column: 45, scope: !7494)
!7513 = !DILocation(line: 3791, column: 7, scope: !7494)
!7514 = !DILocation(line: 3794, column: 4, scope: !7493)
!7515 = !DILocation(line: 3795, column: 4, scope: !7493)
!7516 = !DILocation(line: 3797, column: 4, scope: !7493)
!7517 = !DILocation(line: 3798, column: 4, scope: !7493)
!7518 = !DILocation(line: 3800, column: 4, scope: !7493)
!7519 = !DILocation(line: 3801, column: 4, scope: !7493)
!7520 = !DILocation(line: 3803, column: 4, scope: !7493)
!7521 = !DILocation(line: 3804, column: 4, scope: !7493)
!7522 = !DILocation(line: 3806, column: 4, scope: !7493)
!7523 = !DILocation(line: 3807, column: 4, scope: !7493)
!7524 = !DILocation(line: 3809, column: 4, scope: !7493)
!7525 = !DILocation(line: 3810, column: 8, scope: !7526)
!7526 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 3810, column: 8)
!7527 = !DILocation(line: 3810, column: 8, scope: !7493)
!7528 = !DILocation(line: 3813, column: 8, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 3811, column: 6)
!7530 = !DILocation(line: 3813, column: 38, scope: !7529)
!7531 = !DILocation(line: 3812, column: 15, scope: !7529)
!7532 = !DILocation(line: 3814, column: 8, scope: !7529)
!7533 = !DILocation(line: 3815, column: 6, scope: !7529)
!7534 = !DILocation(line: 3816, column: 13, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7526, file: !3, line: 3816, column: 13)
!7536 = !DILocation(line: 3816, column: 13, scope: !7526)
!7537 = !DILocation(line: 3818, column: 8, scope: !7538)
!7538 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 3817, column: 6)
!7539 = !DILocation(line: 3820, column: 6, scope: !7538)
!7540 = !DILocation(line: 3820, column: 35, scope: !7538)
!7541 = !DILocation(line: 3819, column: 15, scope: !7538)
!7542 = !DILocation(line: 3821, column: 6, scope: !7538)
!7543 = !DILocation(line: 3823, column: 6, scope: !7535)
!7544 = !DILocation(line: 3826, column: 4, scope: !7493)
!7545 = !DILocation(line: 3827, column: 11, scope: !7493)
!7546 = !DILocation(line: 3828, column: 4, scope: !7493)
!7547 = !DILocation(line: 3830, column: 4, scope: !7493)
!7548 = !DILocation(line: 3831, column: 11, scope: !7493)
!7549 = !DILocation(line: 3832, column: 4, scope: !7493)
!7550 = !DILocation(line: 3834, column: 4, scope: !7493)
!7551 = !DILocation(line: 3835, column: 8, scope: !7492)
!7552 = !DILocation(line: 3835, column: 8, scope: !7493)
!7553 = !DILocation(line: 3837, column: 15, scope: !7554)
!7554 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 3836, column: 6)
!7555 = !DILocation(line: 3838, column: 8, scope: !7554)
!7556 = !DILocation(line: 3846, column: 4, scope: !7493)
!7557 = !DILocation(line: 3842, column: 8, scope: !7491)
!7558 = !DILocation(line: 0, scope: !7491)
!7559 = !DILocation(line: 3842, column: 29, scope: !7491)
!7560 = !DILocation(line: 3843, column: 42, scope: !7491)
!7561 = !DILocation(line: 3843, column: 54, scope: !7491)
!7562 = !DILocation(line: 3843, column: 15, scope: !7491)
!7563 = !DILocation(line: 3845, column: 6, scope: !7492)
!7564 = !DILocation(line: 3848, column: 11, scope: !7493)
!7565 = !DILocation(line: 3849, column: 4, scope: !7493)
!7566 = !DILocation(line: 3851, column: 4, scope: !7493)
!7567 = !DILocation(line: 3852, column: 4, scope: !7493)
!7568 = !DILocation(line: 3853, column: 8, scope: !7497)
!7569 = !DILocation(line: 3853, column: 8, scope: !7493)
!7570 = !DILocation(line: 3855, column: 15, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7497, file: !3, line: 3854, column: 6)
!7572 = !DILocation(line: 3856, column: 8, scope: !7571)
!7573 = !DILocation(line: 3865, column: 4, scope: !7493)
!7574 = !DILocation(line: 3860, column: 20, scope: !7496)
!7575 = !DILocation(line: 3860, column: 49, scope: !7496)
!7576 = !DILocation(line: 0, scope: !7496)
!7577 = !DILocation(line: 3861, column: 15, scope: !7496)
!7578 = !DILocation(line: 3862, column: 15, scope: !7496)
!7579 = !DILocation(line: 3867, column: 4, scope: !7493)
!7580 = !DILocation(line: 3868, column: 4, scope: !7493)
!7581 = !DILocation(line: 3869, column: 4, scope: !7493)
!7582 = !DILocation(line: 3871, column: 4, scope: !7493)
!7583 = !DILocation(line: 3872, column: 4, scope: !7493)
!7584 = !DILocation(line: 3873, column: 4, scope: !7493)
!7585 = !DILocation(line: 3879, column: 7, scope: !7494)
!7586 = !DILocation(line: 3880, column: 7, scope: !7494)
!7587 = !DILocation(line: 3887, column: 7, scope: !7494)
!7588 = !DILocation(line: 3888, column: 7, scope: !7494)
!7589 = !DILocation(line: 3889, column: 7, scope: !7494)
!7590 = !DILocation(line: 3891, column: 7, scope: !7494)
!7591 = !DILocation(line: 3892, column: 7, scope: !7494)
!7592 = !DILocation(line: 3894, column: 5, scope: !7494)
!7593 = !DILocation(line: 3895, column: 39, scope: !7494)
!7594 = !DILocation(line: 3895, column: 73, scope: !7494)
!7595 = !DILocation(line: 3895, column: 14, scope: !7494)
!7596 = !DILocation(line: 3895, column: 7, scope: !7494)
!7597 = !DILocation(line: 0, scope: !7494)
!7598 = !DILocation(line: 3896, column: 5, scope: !7494)
!7599 = !DILocation(line: 3897, column: 7, scope: !7494)
!7600 = !DILocation(line: 3898, column: 7, scope: !7494)
!7601 = !DILocation(line: 3910, column: 7, scope: !7602)
!7602 = distinct !DILexicalBlock(scope: !7484, file: !3, line: 3910, column: 7)
!7603 = !DILocation(line: 3911, column: 7, scope: !7602)
!7604 = !DILocation(line: 3911, column: 10, scope: !7602)
!7605 = !DILocation(line: 3910, column: 7, scope: !7484)
!7606 = !DILocation(line: 3912, column: 5, scope: !7602)
!7607 = !DILocation(line: 3914, column: 23, scope: !7484)
!7608 = !DILocation(line: 3915, column: 1, scope: !7484)
!7609 = distinct !DISubprogram(name: "c_parser_compound_statement", scope: !3, file: !3, line: 3399, type: !3767, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7610)
!7610 = !{!7611, !7612, !7613}
!7611 = !DILocalVariable(name: "parser", arg: 1, scope: !7609, file: !3, line: 3399, type: !1896)
!7612 = !DILocalVariable(name: "stmt", scope: !7609, file: !3, line: 3401, type: !718)
!7613 = !DILocalVariable(name: "brace_loc", scope: !7609, file: !3, line: 3402, type: !846)
!7614 = !DILocation(line: 0, scope: !7609)
!7615 = !DILocation(line: 3403, column: 15, scope: !7609)
!7616 = !DILocation(line: 3403, column: 45, scope: !7609)
!7617 = !DILocation(line: 3404, column: 8, scope: !7618)
!7618 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 3404, column: 7)
!7619 = !DILocation(line: 3404, column: 7, scope: !7609)
!7620 = !DILocation(line: 3409, column: 7, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7618, file: !3, line: 3405, column: 5)
!7622 = !DILocation(line: 3410, column: 14, scope: !7621)
!7623 = !DILocation(line: 3410, column: 7, scope: !7621)
!7624 = !DILocation(line: 3413, column: 3, scope: !7609)
!7625 = !DILocation(line: 3414, column: 10, scope: !7609)
!7626 = !DILocation(line: 3414, column: 3, scope: !7609)
!7627 = !DILocation(line: 3415, column: 1, scope: !7609)
!7628 = distinct !DISubprogram(name: "c_parser_if_statement", scope: !3, file: !3, line: 4030, type: !2645, scopeLine: 4031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7629)
!7629 = !{!7630, !7631, !7632, !7633, !7634, !7635, !7636, !7637}
!7630 = !DILocalVariable(name: "parser", arg: 1, scope: !7628, file: !3, line: 4030, type: !1896)
!7631 = !DILocalVariable(name: "block", scope: !7628, file: !3, line: 4032, type: !718)
!7632 = !DILocalVariable(name: "loc", scope: !7628, file: !3, line: 4033, type: !846)
!7633 = !DILocalVariable(name: "cond", scope: !7628, file: !3, line: 4034, type: !718)
!7634 = !DILocalVariable(name: "first_if", scope: !7628, file: !3, line: 4035, type: !838)
!7635 = !DILocalVariable(name: "first_body", scope: !7628, file: !3, line: 4036, type: !718)
!7636 = !DILocalVariable(name: "second_body", scope: !7628, file: !3, line: 4036, type: !718)
!7637 = !DILocalVariable(name: "in_if_block", scope: !7628, file: !3, line: 4037, type: !838)
!7638 = !DILocation(line: 0, scope: !7628)
!7639 = !DILocation(line: 4035, column: 3, scope: !7628)
!7640 = !DILocation(line: 4035, column: 8, scope: !7628)
!7641 = !DILocation(line: 4039, column: 3, scope: !7628)
!7642 = !DILocation(line: 4040, column: 3, scope: !7628)
!7643 = !DILocation(line: 4041, column: 34, scope: !7628)
!7644 = !DILocation(line: 4041, column: 11, scope: !7628)
!7645 = !DILocation(line: 4042, column: 9, scope: !7628)
!7646 = !DILocation(line: 4042, column: 39, scope: !7628)
!7647 = !DILocation(line: 4043, column: 10, scope: !7628)
!7648 = !DILocation(line: 4044, column: 25, scope: !7628)
!7649 = !DILocation(line: 4045, column: 23, scope: !7628)
!7650 = !DILocation(line: 4046, column: 16, scope: !7628)
!7651 = !DILocation(line: 4047, column: 23, scope: !7628)
!7652 = !DILocation(line: 4048, column: 7, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7628, file: !3, line: 4048, column: 7)
!7654 = !DILocation(line: 4048, column: 7, scope: !7628)
!7655 = !DILocation(line: 4050, column: 7, scope: !7656)
!7656 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 4049, column: 5)
!7657 = !DILocation(line: 4051, column: 21, scope: !7656)
!7658 = !DILocation(line: 4052, column: 5, scope: !7656)
!7659 = !DILocation(line: 0, scope: !7653)
!7660 = !DILocation(line: 4055, column: 57, scope: !7628)
!7661 = !DILocation(line: 4055, column: 3, scope: !7628)
!7662 = !DILocation(line: 4056, column: 46, scope: !7628)
!7663 = !DILocation(line: 4056, column: 13, scope: !7628)
!7664 = !DILocation(line: 4056, column: 3, scope: !7628)
!7665 = !DILocation(line: 4057, column: 1, scope: !7628)
!7666 = distinct !DISubprogram(name: "c_parser_switch_statement", scope: !3, file: !3, line: 4066, type: !2645, scopeLine: 4067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7667)
!7667 = !{!7668, !7669, !7670, !7671, !7672, !7673, !7674, !7675, !7678}
!7668 = !DILocalVariable(name: "parser", arg: 1, scope: !7666, file: !3, line: 4066, type: !1896)
!7669 = !DILocalVariable(name: "block", scope: !7666, file: !3, line: 4068, type: !718)
!7670 = !DILocalVariable(name: "expr", scope: !7666, file: !3, line: 4068, type: !718)
!7671 = !DILocalVariable(name: "body", scope: !7666, file: !3, line: 4068, type: !718)
!7672 = !DILocalVariable(name: "save_break", scope: !7666, file: !3, line: 4068, type: !718)
!7673 = !DILocalVariable(name: "switch_loc", scope: !7666, file: !3, line: 4069, type: !846)
!7674 = !DILocalVariable(name: "switch_cond_loc", scope: !7666, file: !3, line: 4070, type: !846)
!7675 = !DILocalVariable(name: "here", scope: !7676, file: !3, line: 4092, type: !846)
!7676 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 4091, column: 5)
!7677 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 4090, column: 7)
!7678 = !DILocalVariable(name: "t", scope: !7676, file: !3, line: 4093, type: !718)
!7679 = !DILocation(line: 0, scope: !7666)
!7680 = !DILocation(line: 4069, column: 27, scope: !7666)
!7681 = !DILocation(line: 4069, column: 57, scope: !7666)
!7682 = !DILocation(line: 4071, column: 3, scope: !7666)
!7683 = !DILocation(line: 4072, column: 3, scope: !7666)
!7684 = !DILocation(line: 4073, column: 34, scope: !7666)
!7685 = !DILocation(line: 4073, column: 11, scope: !7666)
!7686 = !DILocation(line: 4074, column: 7, scope: !7687)
!7687 = distinct !DILexicalBlock(scope: !7666, file: !3, line: 4074, column: 7)
!7688 = !DILocation(line: 4074, column: 7, scope: !7666)
!7689 = !DILocation(line: 4076, column: 25, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 4075, column: 5)
!7691 = !DILocation(line: 4076, column: 55, scope: !7690)
!7692 = !DILocation(line: 4077, column: 14, scope: !7690)
!7693 = !DILocation(line: 4077, column: 43, scope: !7690)
!7694 = !DILocation(line: 4078, column: 7, scope: !7690)
!7695 = !DILocation(line: 4079, column: 5, scope: !7690)
!7696 = !DILocation(line: 4083, column: 14, scope: !7697)
!7697 = distinct !DILexicalBlock(scope: !7687, file: !3, line: 4081, column: 5)
!7698 = !DILocation(line: 0, scope: !7687)
!7699 = !DILocation(line: 4085, column: 3, scope: !7666)
!7700 = !DILocation(line: 4086, column: 16, scope: !7666)
!7701 = !DILocation(line: 4087, column: 17, scope: !7666)
!7702 = !DILocation(line: 4088, column: 10, scope: !7666)
!7703 = !DILocation(line: 4089, column: 3, scope: !7666)
!7704 = !DILocation(line: 4090, column: 7, scope: !7677)
!7705 = !DILocation(line: 4090, column: 7, scope: !7666)
!7706 = !DILocation(line: 4092, column: 25, scope: !7676)
!7707 = !DILocation(line: 4092, column: 55, scope: !7676)
!7708 = !DILocation(line: 0, scope: !7676)
!7709 = !DILocation(line: 4093, column: 16, scope: !7676)
!7710 = !DILocation(line: 4094, column: 7, scope: !7676)
!7711 = !DILocation(line: 4095, column: 7, scope: !7676)
!7712 = !DILocation(line: 4096, column: 5, scope: !7676)
!7713 = !DILocation(line: 4097, column: 17, scope: !7666)
!7714 = !DILocation(line: 4098, column: 53, scope: !7666)
!7715 = !DILocation(line: 4098, column: 13, scope: !7666)
!7716 = !DILocation(line: 4098, column: 3, scope: !7666)
!7717 = !DILocation(line: 4099, column: 1, scope: !7666)
!7718 = distinct !DISubprogram(name: "c_parser_while_statement", scope: !3, file: !3, line: 4108, type: !2645, scopeLine: 4109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7719)
!7719 = !{!7720, !7721, !7722, !7723, !7724, !7725, !7726}
!7720 = !DILocalVariable(name: "parser", arg: 1, scope: !7718, file: !3, line: 4108, type: !1896)
!7721 = !DILocalVariable(name: "block", scope: !7718, file: !3, line: 4110, type: !718)
!7722 = !DILocalVariable(name: "cond", scope: !7718, file: !3, line: 4110, type: !718)
!7723 = !DILocalVariable(name: "body", scope: !7718, file: !3, line: 4110, type: !718)
!7724 = !DILocalVariable(name: "save_break", scope: !7718, file: !3, line: 4110, type: !718)
!7725 = !DILocalVariable(name: "save_cont", scope: !7718, file: !3, line: 4110, type: !718)
!7726 = !DILocalVariable(name: "loc", scope: !7718, file: !3, line: 4111, type: !846)
!7727 = !DILocation(line: 0, scope: !7718)
!7728 = !DILocation(line: 4112, column: 3, scope: !7718)
!7729 = !DILocation(line: 4113, column: 3, scope: !7718)
!7730 = !DILocation(line: 4114, column: 34, scope: !7718)
!7731 = !DILocation(line: 4114, column: 11, scope: !7718)
!7732 = !DILocation(line: 4115, column: 9, scope: !7718)
!7733 = !DILocation(line: 4115, column: 39, scope: !7718)
!7734 = !DILocation(line: 4116, column: 10, scope: !7718)
!7735 = !DILocation(line: 4117, column: 16, scope: !7718)
!7736 = !DILocation(line: 4118, column: 17, scope: !7718)
!7737 = !DILocation(line: 4119, column: 15, scope: !7718)
!7738 = !DILocation(line: 4120, column: 16, scope: !7718)
!7739 = !DILocation(line: 4121, column: 10, scope: !7718)
!7740 = !DILocation(line: 4122, column: 41, scope: !7718)
!7741 = !DILocation(line: 4122, column: 56, scope: !7718)
!7742 = !DILocation(line: 4122, column: 3, scope: !7718)
!7743 = !DILocation(line: 4123, column: 46, scope: !7718)
!7744 = !DILocation(line: 4123, column: 13, scope: !7718)
!7745 = !DILocation(line: 4123, column: 3, scope: !7718)
!7746 = !DILocation(line: 4124, column: 17, scope: !7718)
!7747 = !DILocation(line: 4125, column: 16, scope: !7718)
!7748 = !DILocation(line: 4126, column: 1, scope: !7718)
!7749 = distinct !DISubprogram(name: "c_parser_do_statement", scope: !3, file: !3, line: 4135, type: !2645, scopeLine: 4136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7750)
!7750 = !{!7751, !7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759}
!7751 = !DILocalVariable(name: "parser", arg: 1, scope: !7749, file: !3, line: 4135, type: !1896)
!7752 = !DILocalVariable(name: "block", scope: !7749, file: !3, line: 4137, type: !718)
!7753 = !DILocalVariable(name: "cond", scope: !7749, file: !3, line: 4137, type: !718)
!7754 = !DILocalVariable(name: "body", scope: !7749, file: !3, line: 4137, type: !718)
!7755 = !DILocalVariable(name: "save_break", scope: !7749, file: !3, line: 4137, type: !718)
!7756 = !DILocalVariable(name: "save_cont", scope: !7749, file: !3, line: 4137, type: !718)
!7757 = !DILocalVariable(name: "new_break", scope: !7749, file: !3, line: 4137, type: !718)
!7758 = !DILocalVariable(name: "new_cont", scope: !7749, file: !3, line: 4137, type: !718)
!7759 = !DILocalVariable(name: "loc", scope: !7749, file: !3, line: 4138, type: !846)
!7760 = !DILocation(line: 0, scope: !7749)
!7761 = !DILocation(line: 4139, column: 3, scope: !7749)
!7762 = !DILocation(line: 4140, column: 3, scope: !7749)
!7763 = !DILocation(line: 4141, column: 7, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 4141, column: 7)
!7765 = !DILocation(line: 4141, column: 7, scope: !7749)
!7766 = !DILocation(line: 4142, column: 17, scope: !7764)
!7767 = !DILocation(line: 4142, column: 47, scope: !7764)
!7768 = !DILocation(line: 4142, column: 5, scope: !7764)
!7769 = !DILocation(line: 4145, column: 34, scope: !7749)
!7770 = !DILocation(line: 4145, column: 11, scope: !7749)
!7771 = !DILocation(line: 4146, column: 9, scope: !7749)
!7772 = !DILocation(line: 4146, column: 39, scope: !7749)
!7773 = !DILocation(line: 4147, column: 16, scope: !7749)
!7774 = !DILocation(line: 4148, column: 17, scope: !7749)
!7775 = !DILocation(line: 4149, column: 15, scope: !7749)
!7776 = !DILocation(line: 4150, column: 16, scope: !7749)
!7777 = !DILocation(line: 4151, column: 10, scope: !7749)
!7778 = !DILocation(line: 4152, column: 3, scope: !7749)
!7779 = !DILocation(line: 4153, column: 15, scope: !7749)
!7780 = !DILocation(line: 4154, column: 17, scope: !7749)
!7781 = !DILocation(line: 4155, column: 14, scope: !7749)
!7782 = !DILocation(line: 4156, column: 16, scope: !7749)
!7783 = !DILocation(line: 4157, column: 10, scope: !7749)
!7784 = !DILocation(line: 4158, column: 8, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 4158, column: 7)
!7786 = !DILocation(line: 4158, column: 7, scope: !7749)
!7787 = !DILocation(line: 4159, column: 5, scope: !7785)
!7788 = !DILocation(line: 4160, column: 3, scope: !7749)
!7789 = !DILocation(line: 4161, column: 46, scope: !7749)
!7790 = !DILocation(line: 4161, column: 13, scope: !7749)
!7791 = !DILocation(line: 4161, column: 3, scope: !7749)
!7792 = !DILocation(line: 4162, column: 1, scope: !7749)
!7793 = distinct !DISubprogram(name: "c_parser_for_statement", scope: !3, file: !3, line: 4181, type: !2645, scopeLine: 4182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7794)
!7794 = !{!7795, !7796, !7797, !7798, !7799, !7800, !7801, !7802, !7803, !7804, !7813}
!7795 = !DILocalVariable(name: "parser", arg: 1, scope: !7793, file: !3, line: 4181, type: !1896)
!7796 = !DILocalVariable(name: "block", scope: !7793, file: !3, line: 4183, type: !718)
!7797 = !DILocalVariable(name: "cond", scope: !7793, file: !3, line: 4183, type: !718)
!7798 = !DILocalVariable(name: "incr", scope: !7793, file: !3, line: 4183, type: !718)
!7799 = !DILocalVariable(name: "save_break", scope: !7793, file: !3, line: 4183, type: !718)
!7800 = !DILocalVariable(name: "save_cont", scope: !7793, file: !3, line: 4183, type: !718)
!7801 = !DILocalVariable(name: "body", scope: !7793, file: !3, line: 4183, type: !718)
!7802 = !DILocalVariable(name: "loc", scope: !7793, file: !3, line: 4184, type: !846)
!7803 = !DILocalVariable(name: "for_loc", scope: !7793, file: !3, line: 4185, type: !846)
!7804 = !DILocalVariable(name: "ext", scope: !7805, file: !3, line: 4214, type: !815)
!7805 = distinct !DILexicalBlock(scope: !7806, file: !3, line: 4213, column: 6)
!7806 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 4212, column: 8)
!7807 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4203, column: 2)
!7808 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 4202, column: 16)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 4197, column: 16)
!7810 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 4192, column: 11)
!7811 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 4190, column: 5)
!7812 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 4189, column: 7)
!7813 = !DILabel(scope: !7814, name: "init_expr", file: !3, line: 4226)
!7814 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 4225, column: 2)
!7815 = !DILocation(line: 0, scope: !7793)
!7816 = !DILocation(line: 4184, column: 20, scope: !7793)
!7817 = !DILocation(line: 4184, column: 50, scope: !7793)
!7818 = !DILocation(line: 4185, column: 24, scope: !7793)
!7819 = !DILocation(line: 4185, column: 54, scope: !7793)
!7820 = !DILocation(line: 4186, column: 3, scope: !7793)
!7821 = !DILocation(line: 4187, column: 3, scope: !7793)
!7822 = !DILocation(line: 4188, column: 34, scope: !7793)
!7823 = !DILocation(line: 4188, column: 11, scope: !7793)
!7824 = !DILocation(line: 4189, column: 7, scope: !7812)
!7825 = !DILocation(line: 4189, column: 7, scope: !7793)
!7826 = !DILocation(line: 4192, column: 11, scope: !7810)
!7827 = !DILocation(line: 4192, column: 11, scope: !7811)
!7828 = !DILocation(line: 4194, column: 4, scope: !7829)
!7829 = distinct !DILexicalBlock(scope: !7810, file: !3, line: 4193, column: 2)
!7830 = !DILocation(line: 4195, column: 4, scope: !7829)
!7831 = !DILocation(line: 4196, column: 2, scope: !7829)
!7832 = !DILocation(line: 4197, column: 16, scope: !7809)
!7833 = !DILocation(line: 4197, column: 16, scope: !7810)
!7834 = !DILocation(line: 4199, column: 4, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7809, file: !3, line: 4198, column: 2)
!7836 = !DILocation(line: 4200, column: 4, scope: !7835)
!7837 = !DILocation(line: 4201, column: 2, scope: !7835)
!7838 = !DILocation(line: 4202, column: 16, scope: !7808)
!7839 = !DILocation(line: 4202, column: 16, scope: !7809)
!7840 = !DILocation(line: 4208, column: 4, scope: !7807)
!7841 = !DILocation(line: 4208, column: 11, scope: !7807)
!7842 = !DILocation(line: 4208, column: 45, scope: !7807)
!7843 = !DILocation(line: 4208, column: 50, scope: !7807)
!7844 = !DILocation(line: 4209, column: 4, scope: !7807)
!7845 = !DILocation(line: 4209, column: 8, scope: !7807)
!7846 = !DILocation(line: 4209, column: 42, scope: !7807)
!7847 = !DILocation(line: 4210, column: 8, scope: !7807)
!7848 = !DILocation(line: 4211, column: 6, scope: !7807)
!7849 = distinct !{!7849, !7840, !7850}
!7850 = !DILocation(line: 4211, column: 36, scope: !7807)
!7851 = !DILocation(line: 4212, column: 34, scope: !7806)
!7852 = !DILocation(line: 4212, column: 8, scope: !7806)
!7853 = !DILocation(line: 4212, column: 8, scope: !7807)
!7854 = !DILocation(line: 4215, column: 14, scope: !7805)
!7855 = !DILocation(line: 0, scope: !7805)
!7856 = !DILocation(line: 4216, column: 8, scope: !7805)
!7857 = !DILocation(line: 4217, column: 8, scope: !7805)
!7858 = !DILocation(line: 4218, column: 8, scope: !7805)
!7859 = !DILocation(line: 4219, column: 8, scope: !7805)
!7860 = !DILocation(line: 4223, column: 2, scope: !7807)
!7861 = !DILocation(line: 4226, column: 2, scope: !7814)
!7862 = !DILocation(line: 4227, column: 29, scope: !7814)
!7863 = !DILocation(line: 4227, column: 58, scope: !7814)
!7864 = !DILocation(line: 4227, column: 4, scope: !7814)
!7865 = !DILocation(line: 4228, column: 4, scope: !7814)
!7866 = !DILocation(line: 4231, column: 11, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 4231, column: 11)
!7868 = !DILocation(line: 4231, column: 11, scope: !7811)
!7869 = !DILocation(line: 4233, column: 4, scope: !7870)
!7870 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 4232, column: 2)
!7871 = !DILocation(line: 4235, column: 2, scope: !7870)
!7872 = !DILocation(line: 4238, column: 11, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 4237, column: 2)
!7874 = !DILocation(line: 4239, column: 4, scope: !7873)
!7875 = !DILocation(line: 0, scope: !7867)
!7876 = !DILocation(line: 4242, column: 11, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7811, file: !3, line: 4242, column: 11)
!7878 = !DILocation(line: 4242, column: 11, scope: !7811)
!7879 = !DILocation(line: 4243, column: 9, scope: !7877)
!7880 = !DILocation(line: 4243, column: 2, scope: !7877)
!7881 = !DILocation(line: 4245, column: 35, scope: !7877)
!7882 = !DILocation(line: 4245, column: 64, scope: !7877)
!7883 = !DILocation(line: 4245, column: 9, scope: !7877)
!7884 = !DILocation(line: 0, scope: !7877)
!7885 = !DILocation(line: 4246, column: 7, scope: !7811)
!7886 = !DILocation(line: 4247, column: 5, scope: !7811)
!7887 = !DILocation(line: 4250, column: 14, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7812, file: !3, line: 4249, column: 5)
!7889 = !DILocation(line: 0, scope: !7812)
!7890 = !DILocation(line: 4253, column: 16, scope: !7793)
!7891 = !DILocation(line: 4254, column: 17, scope: !7793)
!7892 = !DILocation(line: 4255, column: 15, scope: !7793)
!7893 = !DILocation(line: 4256, column: 16, scope: !7793)
!7894 = !DILocation(line: 4257, column: 10, scope: !7793)
!7895 = !DILocation(line: 4258, column: 41, scope: !7793)
!7896 = !DILocation(line: 4258, column: 56, scope: !7793)
!7897 = !DILocation(line: 4258, column: 3, scope: !7793)
!7898 = !DILocation(line: 4259, column: 46, scope: !7793)
!7899 = !DILocation(line: 4259, column: 13, scope: !7793)
!7900 = !DILocation(line: 4259, column: 3, scope: !7793)
!7901 = !DILocation(line: 4260, column: 17, scope: !7793)
!7902 = !DILocation(line: 4261, column: 16, scope: !7793)
!7903 = !DILocation(line: 4262, column: 1, scope: !7793)
!7904 = distinct !DISubprogram(name: "c_parser_asm_statement", scope: !3, file: !3, line: 4286, type: !3767, scopeLine: 4287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7905)
!7905 = !{!7906, !7907, !7908, !7909, !7910, !7911, !7912, !7913, !7914, !7915, !7916, !7917, !7918, !7919, !7920, !7921}
!7906 = !DILocalVariable(name: "parser", arg: 1, scope: !7904, file: !3, line: 4286, type: !1896)
!7907 = !DILocalVariable(name: "quals", scope: !7904, file: !3, line: 4288, type: !718)
!7908 = !DILocalVariable(name: "str", scope: !7904, file: !3, line: 4288, type: !718)
!7909 = !DILocalVariable(name: "outputs", scope: !7904, file: !3, line: 4288, type: !718)
!7910 = !DILocalVariable(name: "inputs", scope: !7904, file: !3, line: 4288, type: !718)
!7911 = !DILocalVariable(name: "clobbers", scope: !7904, file: !3, line: 4288, type: !718)
!7912 = !DILocalVariable(name: "labels", scope: !7904, file: !3, line: 4288, type: !718)
!7913 = !DILocalVariable(name: "ret", scope: !7904, file: !3, line: 4288, type: !718)
!7914 = !DILocalVariable(name: "simple", scope: !7904, file: !3, line: 4289, type: !838)
!7915 = !DILocalVariable(name: "is_goto", scope: !7904, file: !3, line: 4289, type: !838)
!7916 = !DILocalVariable(name: "asm_loc", scope: !7904, file: !3, line: 4290, type: !846)
!7917 = !DILocalVariable(name: "section", scope: !7904, file: !3, line: 4291, type: !815)
!7918 = !DILocalVariable(name: "nsections", scope: !7904, file: !3, line: 4291, type: !815)
!7919 = !DILabel(scope: !7904, name: "done_asm", file: !3, line: 4382)
!7920 = !DILabel(scope: !7904, name: "error", file: !3, line: 4395)
!7921 = !DILabel(scope: !7904, name: "error_close_paren", file: !3, line: 4399)
!7922 = !DILocation(line: 0, scope: !7904)
!7923 = !DILocation(line: 4290, column: 24, scope: !7904)
!7924 = !DILocation(line: 4290, column: 54, scope: !7904)
!7925 = !DILocation(line: 4293, column: 3, scope: !7904)
!7926 = !DILocation(line: 4294, column: 3, scope: !7904)
!7927 = !DILocation(line: 4295, column: 7, scope: !7928)
!7928 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 4295, column: 7)
!7929 = !DILocation(line: 4295, column: 7, scope: !7904)
!7930 = !DILocation(line: 4297, column: 15, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4296, column: 5)
!7932 = !DILocation(line: 4297, column: 45, scope: !7931)
!7933 = !DILocation(line: 4298, column: 7, scope: !7931)
!7934 = !DILocation(line: 4299, column: 5, scope: !7931)
!7935 = !DILocation(line: 4300, column: 12, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7928, file: !3, line: 4300, column: 12)
!7937 = !DILocation(line: 4301, column: 5, scope: !7936)
!7938 = !DILocation(line: 4301, column: 8, scope: !7936)
!7939 = !DILocation(line: 4300, column: 12, scope: !7928)
!7940 = !DILocation(line: 4303, column: 19, scope: !7941)
!7941 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 4302, column: 5)
!7942 = !DILocation(line: 4303, column: 49, scope: !7941)
!7943 = !DILocation(line: 4306, column: 5, scope: !7941)
!7944 = !DILocation(line: 4306, column: 35, scope: !7941)
!7945 = !DILocation(line: 4303, column: 7, scope: !7941)
!7946 = !DILocation(line: 4308, column: 7, scope: !7941)
!7947 = !DILocation(line: 4309, column: 5, scope: !7941)
!7948 = !DILocation(line: 0, scope: !7928)
!7949 = !DILocation(line: 4314, column: 7, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 4314, column: 7)
!7951 = !DILocation(line: 4314, column: 7, scope: !7904)
!7952 = !DILocation(line: 4316, column: 7, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 4315, column: 5)
!7954 = !DILocation(line: 4318, column: 5, scope: !7953)
!7955 = !DILocation(line: 4322, column: 11, scope: !7904)
!7956 = !DILocation(line: 4322, column: 35, scope: !7904)
!7957 = !DILocation(line: 4325, column: 8, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 4325, column: 7)
!7959 = !DILocation(line: 4325, column: 7, scope: !7904)
!7960 = !DILocation(line: 4328, column: 9, scope: !7904)
!7961 = !DILocation(line: 4329, column: 11, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 4329, column: 7)
!7963 = !DILocation(line: 4329, column: 7, scope: !7904)
!7964 = !DILocation(line: 4338, column: 7, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 4338, column: 7)
!7966 = !DILocation(line: 4338, column: 60, scope: !7965)
!7967 = !DILocation(line: 4338, column: 56, scope: !7965)
!7968 = !DILocation(line: 4342, column: 17, scope: !7904)
!7969 = !DILocation(line: 0, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 4345, column: 11)
!7971 = distinct !DILexicalBlock(scope: !7972, file: !3, line: 4344, column: 5)
!7972 = distinct !DILexicalBlock(scope: !7973, file: !3, line: 4343, column: 3)
!7973 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 4343, column: 3)
!7974 = !DILocation(line: 4343, column: 8, scope: !7973)
!7975 = !DILocation(line: 4336, column: 10, scope: !7904)
!7976 = !DILocation(line: 4335, column: 12, scope: !7904)
!7977 = !DILocation(line: 4334, column: 10, scope: !7904)
!7978 = !DILocation(line: 4333, column: 11, scope: !7904)
!7979 = !DILocation(line: 0, scope: !7973)
!7980 = !DILocation(line: 4343, column: 29, scope: !7972)
!7981 = !DILocation(line: 4343, column: 3, scope: !7973)
!7982 = !DILocation(line: 4345, column: 12, scope: !7970)
!7983 = !DILocation(line: 4345, column: 11, scope: !7971)
!7984 = !DILocation(line: 4354, column: 13, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 4354, column: 11)
!7986 = !DILocation(line: 4355, column: 5, scope: !7985)
!7987 = !DILocation(line: 4354, column: 11, scope: !7971)
!7988 = !DILocation(line: 4355, column: 9, scope: !7985)
!7989 = !DILocation(line: 4356, column: 15, scope: !7985)
!7990 = !DILocation(line: 4356, column: 4, scope: !7985)
!7991 = !DILocation(line: 4357, column: 2, scope: !7985)
!7992 = !DILocation(line: 4372, column: 15, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 4358, column: 4)
!7994 = !DILocation(line: 4373, column: 6, scope: !7993)
!7995 = !DILocation(line: 4369, column: 17, scope: !7993)
!7996 = !DILocation(line: 4370, column: 6, scope: !7993)
!7997 = !DILocation(line: 4366, column: 15, scope: !7993)
!7998 = !DILocation(line: 4367, column: 6, scope: !7993)
!7999 = !DILocation(line: 4363, column: 18, scope: !8000)
!8000 = distinct !DILexicalBlock(scope: !7993, file: !3, line: 4362, column: 10)
!8001 = !DILocation(line: 4363, column: 8, scope: !8000)
!8002 = !DILocation(line: 4375, column: 6, scope: !7993)
!8003 = !DILocation(line: 4376, column: 4, scope: !7993)
!8004 = !DILocation(line: 4378, column: 11, scope: !8005)
!8005 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 4378, column: 11)
!8006 = !DILocation(line: 4378, column: 60, scope: !8005)
!8007 = !DILocation(line: 4343, column: 42, scope: !7972)
!8008 = !DILocation(line: 4343, column: 3, scope: !7972)
!8009 = distinct !{!8009, !7981, !8010}
!8010 = !DILocation(line: 4380, column: 5, scope: !7973)
!8011 = !DILocation(line: 4383, column: 8, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 4383, column: 7)
!8013 = !DILocation(line: 4400, column: 3, scope: !7904)
!8014 = !DILocation(line: 4362, column: 10, scope: !7993)
!8015 = !DILocation(line: 4382, column: 2, scope: !7904)
!8016 = !DILocation(line: 4383, column: 7, scope: !7904)
!8017 = !DILocation(line: 4385, column: 7, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 4384, column: 5)
!8019 = !DILocation(line: 4386, column: 7, scope: !8018)
!8020 = !DILocation(line: 4389, column: 8, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !7904, file: !3, line: 4389, column: 7)
!8022 = !DILocation(line: 4389, column: 7, scope: !7904)
!8023 = !DILocation(line: 4390, column: 5, scope: !8021)
!8024 = !DILocation(line: 4392, column: 32, scope: !7904)
!8025 = !DILocation(line: 4392, column: 9, scope: !7904)
!8026 = !DILocation(line: 4392, column: 3, scope: !7904)
!8027 = !DILocation(line: 4395, column: 2, scope: !7904)
!8028 = !DILocation(line: 4396, column: 35, scope: !7904)
!8029 = !DILocation(line: 4397, column: 3, scope: !7904)
!8030 = !DILocation(line: 4399, column: 2, scope: !7904)
!8031 = !DILocation(line: 4401, column: 3, scope: !7904)
!8032 = distinct !DISubprogram(name: "c_parser_objc_try_catch_statement", scope: !3, file: !3, line: 6711, type: !2645, scopeLine: 6712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8033)
!8033 = !{!8034, !8035, !8036, !8037, !8039, !8042}
!8034 = !DILocalVariable(name: "parser", arg: 1, scope: !8032, file: !3, line: 6711, type: !1896)
!8035 = !DILocalVariable(name: "loc", scope: !8032, file: !3, line: 6713, type: !846)
!8036 = !DILocalVariable(name: "stmt", scope: !8032, file: !3, line: 6714, type: !718)
!8037 = !DILocalVariable(name: "parm", scope: !8038, file: !3, line: 6722, type: !4090)
!8038 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 6721, column: 5)
!8039 = !DILocalVariable(name: "finloc", scope: !8040, file: !3, line: 6740, type: !846)
!8040 = distinct !DILexicalBlock(scope: !8041, file: !3, line: 6739, column: 5)
!8041 = distinct !DILexicalBlock(scope: !8032, file: !3, line: 6738, column: 7)
!8042 = !DILocalVariable(name: "finstmt", scope: !8040, file: !3, line: 6741, type: !718)
!8043 = !DILocation(line: 0, scope: !8032)
!8044 = !DILocation(line: 6715, column: 3, scope: !8032)
!8045 = !DILocation(line: 6716, column: 3, scope: !8032)
!8046 = !DILocation(line: 6717, column: 9, scope: !8032)
!8047 = !DILocation(line: 6717, column: 39, scope: !8032)
!8048 = !DILocation(line: 6718, column: 10, scope: !8032)
!8049 = !DILocation(line: 6719, column: 3, scope: !8032)
!8050 = !DILocation(line: 6720, column: 3, scope: !8032)
!8051 = !DILocation(line: 6720, column: 10, scope: !8032)
!8052 = !DILocation(line: 6723, column: 7, scope: !8038)
!8053 = !DILocation(line: 6724, column: 12, scope: !8054)
!8054 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 6724, column: 11)
!8055 = !DILocation(line: 6724, column: 11, scope: !8038)
!8056 = !DILocation(line: 6726, column: 14, scope: !8038)
!8057 = !DILocation(line: 0, scope: !8038)
!8058 = !DILocation(line: 6727, column: 16, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 6727, column: 11)
!8060 = !DILocation(line: 6727, column: 11, scope: !8038)
!8061 = !DILocation(line: 6729, column: 4, scope: !8062)
!8062 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 6728, column: 2)
!8063 = !DILocation(line: 6730, column: 4, scope: !8062)
!8064 = !DILocation(line: 6732, column: 7, scope: !8038)
!8065 = !DILocation(line: 6733, column: 32, scope: !8038)
!8066 = !DILocation(line: 6733, column: 7, scope: !8038)
!8067 = !DILocation(line: 6734, column: 11, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8038, file: !3, line: 6734, column: 11)
!8069 = !DILocation(line: 6734, column: 11, scope: !8038)
!8070 = !DILocation(line: 6735, column: 2, scope: !8068)
!8071 = !DILocation(line: 6736, column: 7, scope: !8038)
!8072 = !DILocation(line: 6737, column: 5, scope: !8032)
!8073 = distinct !{!8073, !8050, !8072}
!8074 = !DILocation(line: 6738, column: 7, scope: !8041)
!8075 = !DILocation(line: 6738, column: 7, scope: !8032)
!8076 = !DILocation(line: 6742, column: 7, scope: !8040)
!8077 = !DILocation(line: 6743, column: 16, scope: !8040)
!8078 = !DILocation(line: 6743, column: 46, scope: !8040)
!8079 = !DILocation(line: 0, scope: !8040)
!8080 = !DILocation(line: 6744, column: 17, scope: !8040)
!8081 = !DILocation(line: 6745, column: 7, scope: !8040)
!8082 = !DILocation(line: 6746, column: 5, scope: !8040)
!8083 = !DILocation(line: 6747, column: 3, scope: !8032)
!8084 = !DILocation(line: 6748, column: 1, scope: !8032)
!8085 = distinct !DISubprogram(name: "c_parser_objc_synchronized_statement", scope: !3, file: !3, line: 6757, type: !2645, scopeLine: 6758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8086)
!8086 = !{!8087, !8088, !8089, !8090}
!8087 = !DILocalVariable(name: "parser", arg: 1, scope: !8085, file: !3, line: 6757, type: !1896)
!8088 = !DILocalVariable(name: "loc", scope: !8085, file: !3, line: 6759, type: !846)
!8089 = !DILocalVariable(name: "expr", scope: !8085, file: !3, line: 6760, type: !718)
!8090 = !DILocalVariable(name: "stmt", scope: !8085, file: !3, line: 6760, type: !718)
!8091 = !DILocation(line: 0, scope: !8085)
!8092 = !DILocation(line: 6761, column: 3, scope: !8085)
!8093 = !DILocation(line: 6762, column: 3, scope: !8085)
!8094 = !DILocation(line: 6763, column: 9, scope: !8085)
!8095 = !DILocation(line: 6763, column: 39, scope: !8085)
!8096 = !DILocation(line: 6764, column: 7, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 6764, column: 7)
!8098 = !DILocation(line: 6764, column: 7, scope: !8085)
!8099 = !DILocation(line: 6766, column: 14, scope: !8100)
!8100 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 6765, column: 5)
!8101 = !DILocation(line: 6766, column: 43, scope: !8100)
!8102 = !DILocation(line: 6767, column: 14, scope: !8100)
!8103 = !DILocation(line: 6768, column: 7, scope: !8100)
!8104 = !DILocation(line: 6769, column: 5, scope: !8100)
!8105 = !DILocation(line: 6771, column: 12, scope: !8097)
!8106 = !DILocation(line: 0, scope: !8097)
!8107 = !DILocation(line: 6772, column: 10, scope: !8085)
!8108 = !DILocation(line: 6773, column: 3, scope: !8085)
!8109 = !DILocation(line: 6774, column: 1, scope: !8085)
!8110 = distinct !DISubprogram(name: "c_parser_paren_condition", scope: !3, file: !3, line: 3938, type: !3767, scopeLine: 3939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8111)
!8111 = !{!8112, !8113}
!8112 = !DILocalVariable(name: "parser", arg: 1, scope: !8110, file: !3, line: 3938, type: !1896)
!8113 = !DILocalVariable(name: "cond", scope: !8110, file: !3, line: 3940, type: !718)
!8114 = !DILocation(line: 0, scope: !8110)
!8115 = !DILocation(line: 3941, column: 8, scope: !8116)
!8116 = distinct !DILexicalBlock(scope: !8110, file: !3, line: 3941, column: 7)
!8117 = !DILocation(line: 3941, column: 7, scope: !8110)
!8118 = !DILocation(line: 3942, column: 12, scope: !8116)
!8119 = !DILocation(line: 3942, column: 5, scope: !8116)
!8120 = !DILocation(line: 3943, column: 10, scope: !8110)
!8121 = !DILocation(line: 3944, column: 3, scope: !8110)
!8122 = !DILocation(line: 3945, column: 3, scope: !8110)
!8123 = !DILocation(line: 3946, column: 1, scope: !8110)
!8124 = distinct !DISubprogram(name: "c_parser_if_body", scope: !3, file: !3, line: 3968, type: !8125, scopeLine: 3969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8127)
!8125 = !DISubroutineType(types: !8126)
!8126 = !{!718, !1896, !1981}
!8127 = !{!8128, !8129, !8130, !8131, !8132}
!8128 = !DILocalVariable(name: "parser", arg: 1, scope: !8124, file: !3, line: 3968, type: !1896)
!8129 = !DILocalVariable(name: "if_p", arg: 2, scope: !8124, file: !3, line: 3968, type: !1981)
!8130 = !DILocalVariable(name: "block", scope: !8124, file: !3, line: 3970, type: !718)
!8131 = !DILocalVariable(name: "body_loc", scope: !8124, file: !3, line: 3971, type: !846)
!8132 = !DILocalVariable(name: "loc", scope: !8133, file: !3, line: 3980, type: !846)
!8133 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 3979, column: 5)
!8134 = distinct !DILexicalBlock(scope: !8124, file: !3, line: 3978, column: 7)
!8135 = !DILocation(line: 0, scope: !8124)
!8136 = !DILocation(line: 3970, column: 39, scope: !8124)
!8137 = !DILocation(line: 3970, column: 16, scope: !8124)
!8138 = !DILocation(line: 3971, column: 25, scope: !8124)
!8139 = !DILocation(line: 3971, column: 55, scope: !8124)
!8140 = !DILocation(line: 3972, column: 3, scope: !8124)
!8141 = !DILocation(line: 3972, column: 10, scope: !8124)
!8142 = !DILocation(line: 3973, column: 3, scope: !8124)
!8143 = !DILocation(line: 3973, column: 6, scope: !8124)
!8144 = !DILocation(line: 3974, column: 3, scope: !8124)
!8145 = !DILocation(line: 3974, column: 7, scope: !8124)
!8146 = !DILocation(line: 3975, column: 7, scope: !8124)
!8147 = !DILocation(line: 3975, column: 10, scope: !8124)
!8148 = !DILocation(line: 3975, column: 44, scope: !8124)
!8149 = !DILocation(line: 3975, column: 49, scope: !8124)
!8150 = !DILocation(line: 3976, column: 5, scope: !8124)
!8151 = distinct !{!8151, !8140, !8152}
!8152 = !DILocation(line: 3976, column: 27, scope: !8124)
!8153 = !DILocation(line: 3977, column: 11, scope: !8124)
!8154 = !DILocation(line: 3977, column: 9, scope: !8124)
!8155 = !DILocation(line: 3978, column: 7, scope: !8134)
!8156 = !DILocation(line: 3978, column: 7, scope: !8124)
!8157 = !DILocation(line: 3980, column: 24, scope: !8133)
!8158 = !DILocation(line: 3980, column: 54, scope: !8133)
!8159 = !DILocation(line: 0, scope: !8133)
!8160 = !DILocation(line: 3981, column: 17, scope: !8133)
!8161 = !DILocation(line: 3981, column: 7, scope: !8133)
!8162 = !DILocation(line: 3982, column: 7, scope: !8133)
!8163 = !DILocation(line: 3983, column: 12, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8133, file: !3, line: 3983, column: 11)
!8165 = !DILocation(line: 3983, column: 11, scope: !8133)
!8166 = !DILocation(line: 3984, column: 2, scope: !8164)
!8167 = !DILocation(line: 3987, column: 12, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8134, file: !3, line: 3987, column: 12)
!8169 = !DILocation(line: 3987, column: 12, scope: !8134)
!8170 = !DILocation(line: 3988, column: 15, scope: !8168)
!8171 = !DILocation(line: 3988, column: 5, scope: !8168)
!8172 = !DILocation(line: 3990, column: 5, scope: !8168)
!8173 = !DILocation(line: 3991, column: 48, scope: !8124)
!8174 = !DILocation(line: 3991, column: 10, scope: !8124)
!8175 = !DILocation(line: 3991, column: 3, scope: !8124)
!8176 = distinct !DISubprogram(name: "c_parser_else_body", scope: !3, file: !3, line: 3999, type: !3767, scopeLine: 4000, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8177)
!8177 = !{!8178, !8179, !8180, !8181}
!8178 = !DILocalVariable(name: "parser", arg: 1, scope: !8176, file: !3, line: 3999, type: !1896)
!8179 = !DILocalVariable(name: "else_loc", scope: !8176, file: !3, line: 4001, type: !846)
!8180 = !DILocalVariable(name: "block", scope: !8176, file: !3, line: 4002, type: !718)
!8181 = !DILocalVariable(name: "loc", scope: !8182, file: !3, line: 4010, type: !846)
!8182 = distinct !DILexicalBlock(scope: !8183, file: !3, line: 4009, column: 5)
!8183 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 4008, column: 7)
!8184 = !DILocation(line: 0, scope: !8176)
!8185 = !DILocation(line: 4001, column: 25, scope: !8176)
!8186 = !DILocation(line: 4001, column: 55, scope: !8176)
!8187 = !DILocation(line: 4002, column: 39, scope: !8176)
!8188 = !DILocation(line: 4002, column: 16, scope: !8176)
!8189 = !DILocation(line: 4003, column: 3, scope: !8176)
!8190 = !DILocation(line: 4003, column: 10, scope: !8176)
!8191 = !DILocation(line: 4004, column: 3, scope: !8176)
!8192 = !DILocation(line: 4004, column: 6, scope: !8176)
!8193 = !DILocation(line: 4005, column: 3, scope: !8176)
!8194 = !DILocation(line: 4005, column: 7, scope: !8176)
!8195 = !DILocation(line: 4006, column: 7, scope: !8176)
!8196 = !DILocation(line: 4006, column: 10, scope: !8176)
!8197 = !DILocation(line: 4006, column: 44, scope: !8176)
!8198 = !DILocation(line: 4006, column: 49, scope: !8176)
!8199 = !DILocation(line: 4007, column: 5, scope: !8176)
!8200 = distinct !{!8200, !8189, !8201}
!8201 = !DILocation(line: 4007, column: 27, scope: !8176)
!8202 = !DILocation(line: 4008, column: 7, scope: !8183)
!8203 = !DILocation(line: 4008, column: 7, scope: !8176)
!8204 = !DILocation(line: 4010, column: 24, scope: !8182)
!8205 = !DILocation(line: 4010, column: 54, scope: !8182)
!8206 = !DILocation(line: 0, scope: !8182)
!8207 = !DILocation(line: 4011, column: 7, scope: !8182)
!8208 = !DILocation(line: 4014, column: 17, scope: !8182)
!8209 = !DILocation(line: 4014, column: 7, scope: !8182)
!8210 = !DILocation(line: 4015, column: 7, scope: !8182)
!8211 = !DILocation(line: 4016, column: 5, scope: !8182)
!8212 = !DILocation(line: 4018, column: 5, scope: !8183)
!8213 = !DILocation(line: 4019, column: 48, scope: !8176)
!8214 = !DILocation(line: 4019, column: 10, scope: !8176)
!8215 = !DILocation(line: 4019, column: 3, scope: !8176)
!8216 = distinct !DISubprogram(name: "c_parser_condition", scope: !3, file: !3, line: 3920, type: !3767, scopeLine: 3921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8217)
!8217 = !{!8218, !8219, !8220}
!8218 = !DILocalVariable(name: "parser", arg: 1, scope: !8216, file: !3, line: 3920, type: !1896)
!8219 = !DILocalVariable(name: "loc", scope: !8216, file: !3, line: 3922, type: !846)
!8220 = !DILocalVariable(name: "cond", scope: !8216, file: !3, line: 3923, type: !718)
!8221 = !DILocation(line: 0, scope: !8216)
!8222 = !DILocation(line: 3922, column: 20, scope: !8216)
!8223 = !DILocation(line: 3922, column: 50, scope: !8216)
!8224 = !DILocation(line: 3924, column: 10, scope: !8216)
!8225 = !DILocation(line: 3924, column: 44, scope: !8216)
!8226 = !DILocation(line: 3925, column: 10, scope: !8216)
!8227 = !DILocation(line: 3926, column: 10, scope: !8216)
!8228 = !DILocation(line: 3927, column: 7, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 3927, column: 7)
!8230 = !DILocation(line: 3927, column: 7, scope: !8216)
!8231 = !DILocation(line: 3928, column: 5, scope: !8229)
!8232 = !DILocation(line: 3929, column: 3, scope: !8216)
!8233 = distinct !DISubprogram(name: "c_parser_c99_block_statement", scope: !3, file: !3, line: 3951, type: !3767, scopeLine: 3952, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8234)
!8234 = !{!8235, !8236, !8237}
!8235 = !DILocalVariable(name: "parser", arg: 1, scope: !8233, file: !3, line: 3951, type: !1896)
!8236 = !DILocalVariable(name: "block", scope: !8233, file: !3, line: 3953, type: !718)
!8237 = !DILocalVariable(name: "loc", scope: !8233, file: !3, line: 3954, type: !846)
!8238 = !DILocation(line: 0, scope: !8233)
!8239 = !DILocation(line: 3953, column: 39, scope: !8233)
!8240 = !DILocation(line: 3953, column: 16, scope: !8233)
!8241 = !DILocation(line: 3954, column: 20, scope: !8233)
!8242 = !DILocation(line: 3954, column: 50, scope: !8233)
!8243 = !DILocation(line: 3955, column: 3, scope: !8233)
!8244 = !DILocation(line: 3956, column: 43, scope: !8233)
!8245 = !DILocation(line: 3956, column: 10, scope: !8233)
!8246 = !DILocation(line: 3956, column: 3, scope: !8233)
!8247 = distinct !DISubprogram(name: "c_parser_statement", scope: !3, file: !3, line: 3766, type: !2645, scopeLine: 3767, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8248)
!8248 = !{!8249}
!8249 = !DILocalVariable(name: "parser", arg: 1, scope: !8247, file: !3, line: 3766, type: !1896)
!8250 = !DILocation(line: 0, scope: !8247)
!8251 = !DILocation(line: 3768, column: 3, scope: !8247)
!8252 = !DILocation(line: 3768, column: 10, scope: !8247)
!8253 = !DILocation(line: 3769, column: 3, scope: !8247)
!8254 = !DILocation(line: 3769, column: 6, scope: !8247)
!8255 = !DILocation(line: 3770, column: 3, scope: !8247)
!8256 = !DILocation(line: 3770, column: 7, scope: !8247)
!8257 = !DILocation(line: 3771, column: 7, scope: !8247)
!8258 = !DILocation(line: 3771, column: 10, scope: !8247)
!8259 = !DILocation(line: 3771, column: 44, scope: !8247)
!8260 = !DILocation(line: 3771, column: 49, scope: !8247)
!8261 = !DILocation(line: 3772, column: 5, scope: !8247)
!8262 = distinct !{!8262, !8251, !8263}
!8263 = !DILocation(line: 3772, column: 27, scope: !8247)
!8264 = !DILocation(line: 3773, column: 3, scope: !8247)
!8265 = !DILocation(line: 3774, column: 1, scope: !8247)
!8266 = distinct !DISubprogram(name: "c_parser_skip_to_end_of_block_or_statement", scope: !3, file: !3, line: 757, type: !2645, scopeLine: 758, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8267)
!8267 = !{!8268, !8269, !8270, !8271, !8273}
!8268 = !DILocalVariable(name: "parser", arg: 1, scope: !8266, file: !3, line: 757, type: !1896)
!8269 = !DILocalVariable(name: "nesting_depth", scope: !8266, file: !3, line: 759, type: !7)
!8270 = !DILocalVariable(name: "save_error", scope: !8266, file: !3, line: 760, type: !838)
!8271 = !DILocalVariable(name: "token", scope: !8272, file: !3, line: 764, type: !2610)
!8272 = distinct !DILexicalBlock(scope: !8266, file: !3, line: 763, column: 5)
!8273 = !DILabel(scope: !8266, name: "finished", file: !3, line: 825)
!8274 = !DILocation(line: 0, scope: !8266)
!8275 = !DILocation(line: 760, column: 29, scope: !8266)
!8276 = !DILocation(line: 762, column: 3, scope: !8266)
!8277 = !DILocation(line: 759, column: 12, scope: !8266)
!8278 = !DILocation(line: 767, column: 15, scope: !8272)
!8279 = !DILocation(line: 0, scope: !8272)
!8280 = !DILocation(line: 769, column: 22, scope: !8272)
!8281 = !DILocation(line: 769, column: 7, scope: !8272)
!8282 = !DILocation(line: 775, column: 16, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 775, column: 8)
!8284 = distinct !DILexicalBlock(scope: !8272, file: !3, line: 770, column: 2)
!8285 = !DILocation(line: 775, column: 8, scope: !8283)
!8286 = !DILocation(line: 775, column: 8, scope: !8284)
!8287 = !DILocation(line: 782, column: 9, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 782, column: 8)
!8289 = !DILocation(line: 782, column: 8, scope: !8284)
!8290 = !DILocation(line: 785, column: 8, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 783, column: 6)
!8292 = !DILocation(line: 786, column: 8, scope: !8291)
!8293 = !DILocation(line: 793, column: 22, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 793, column: 8)
!8295 = !DILocation(line: 793, column: 27, scope: !8294)
!8296 = !DILocation(line: 793, column: 30, scope: !8294)
!8297 = !DILocation(line: 793, column: 46, scope: !8294)
!8298 = !DILocation(line: 793, column: 8, scope: !8284)
!8299 = !DILocation(line: 795, column: 8, scope: !8300)
!8300 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 794, column: 6)
!8301 = !DILocation(line: 796, column: 8, scope: !8300)
!8302 = !DILocation(line: 803, column: 4, scope: !8284)
!8303 = !DILocation(line: 804, column: 4, scope: !8284)
!8304 = !DILocation(line: 813, column: 4, scope: !8284)
!8305 = !DILocation(line: 814, column: 4, scope: !8284)
!8306 = !DILocation(line: 815, column: 18, scope: !8284)
!8307 = !DILocation(line: 816, column: 4, scope: !8284)
!8308 = distinct !{!8308, !8276, !8309}
!8309 = !DILocation(line: 823, column: 5, scope: !8266)
!8310 = !DILocation(line: 822, column: 7, scope: !8272)
!8311 = !DILocation(line: 825, column: 2, scope: !8266)
!8312 = !DILocation(line: 826, column: 17, scope: !8266)
!8313 = !DILocation(line: 827, column: 1, scope: !8266)
!8314 = distinct !DISubprogram(name: "c_parser_asm_operands", scope: !3, file: !3, line: 4418, type: !8315, scopeLine: 4419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8317)
!8315 = !DISubroutineType(types: !8316)
!8316 = !{!718, !1896, !838}
!8317 = !{!8318, !8319, !8320, !8321, !8322, !8324, !8325, !8326}
!8318 = !DILocalVariable(name: "parser", arg: 1, scope: !8314, file: !3, line: 4418, type: !1896)
!8319 = !DILocalVariable(name: "convert_p", arg: 2, scope: !8314, file: !3, line: 4418, type: !838)
!8320 = !DILocalVariable(name: "list", scope: !8314, file: !3, line: 4420, type: !718)
!8321 = !DILocalVariable(name: "loc", scope: !8314, file: !3, line: 4421, type: !846)
!8322 = !DILocalVariable(name: "name", scope: !8323, file: !3, line: 4424, type: !718)
!8323 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 4423, column: 5)
!8324 = !DILocalVariable(name: "str", scope: !8323, file: !3, line: 4424, type: !718)
!8325 = !DILocalVariable(name: "expr", scope: !8323, file: !3, line: 4425, type: !715)
!8326 = !DILocalVariable(name: "id", scope: !8327, file: !3, line: 4431, type: !718)
!8327 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 4430, column: 6)
!8328 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 4429, column: 8)
!8329 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 4427, column: 2)
!8330 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 4426, column: 11)
!8331 = !DILocation(line: 0, scope: !8314)
!8332 = !DILocation(line: 0, scope: !8323)
!8333 = !DILocation(line: 0, scope: !8334)
!8334 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 4458, column: 11)
!8335 = !DILocation(line: 4422, column: 3, scope: !8314)
!8336 = !DILocation(line: 4420, column: 8, scope: !8314)
!8337 = !DILocation(line: 4425, column: 7, scope: !8323)
!8338 = !DILocation(line: 4426, column: 11, scope: !8330)
!8339 = !DILocation(line: 4426, column: 11, scope: !8323)
!8340 = !DILocation(line: 4428, column: 4, scope: !8329)
!8341 = !DILocation(line: 4429, column: 8, scope: !8328)
!8342 = !DILocation(line: 4429, column: 8, scope: !8329)
!8343 = !DILocation(line: 4431, column: 18, scope: !8327)
!8344 = !DILocation(line: 4431, column: 48, scope: !8327)
!8345 = !DILocation(line: 0, scope: !8327)
!8346 = !DILocation(line: 4432, column: 8, scope: !8327)
!8347 = !DILocation(line: 4433, column: 29, scope: !8327)
!8348 = !DILocation(line: 4434, column: 8, scope: !8327)
!8349 = !DILocation(line: 4433, column: 15, scope: !8327)
!8350 = !DILocation(line: 4442, column: 4, scope: !8329)
!8351 = !DILocation(line: 4444, column: 2, scope: !8329)
!8352 = !DILocation(line: 4438, column: 8, scope: !8353)
!8353 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 4437, column: 6)
!8354 = !DILocation(line: 4439, column: 8, scope: !8353)
!8355 = !DILocation(line: 4440, column: 8, scope: !8353)
!8356 = !DILocation(line: 0, scope: !8330)
!8357 = !DILocation(line: 4447, column: 13, scope: !8323)
!8358 = !DILocation(line: 4448, column: 15, scope: !8359)
!8359 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 4448, column: 11)
!8360 = !DILocation(line: 4448, column: 11, scope: !8323)
!8361 = !DILocation(line: 4450, column: 39, scope: !8323)
!8362 = !DILocation(line: 4451, column: 12, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 4451, column: 11)
!8364 = !DILocation(line: 4451, column: 11, scope: !8323)
!8365 = !DILocation(line: 4453, column: 36, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 4452, column: 2)
!8367 = !DILocation(line: 4454, column: 4, scope: !8366)
!8368 = !DILocation(line: 4456, column: 13, scope: !8323)
!8369 = !DILocation(line: 4456, column: 43, scope: !8323)
!8370 = !DILocation(line: 4457, column: 14, scope: !8323)
!8371 = !DILocation(line: 4458, column: 11, scope: !8323)
!8372 = !DILocation(line: 4459, column: 9, scope: !8334)
!8373 = !DILocation(line: 4459, column: 2, scope: !8334)
!8374 = !DILocation(line: 4460, column: 39, scope: !8323)
!8375 = !DILocation(line: 4460, column: 20, scope: !8323)
!8376 = !DILocation(line: 4460, column: 18, scope: !8323)
!8377 = !DILocation(line: 4461, column: 39, scope: !8323)
!8378 = !DILocation(line: 4462, column: 12, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 4462, column: 11)
!8380 = !DILocation(line: 4462, column: 11, scope: !8323)
!8381 = !DILocation(line: 4464, column: 4, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8379, file: !3, line: 4463, column: 2)
!8383 = !DILocation(line: 4465, column: 4, scope: !8382)
!8384 = !DILocation(line: 4467, column: 29, scope: !8323)
!8385 = !DILocation(line: 4467, column: 14, scope: !8323)
!8386 = !DILocation(line: 4469, column: 11, scope: !8387)
!8387 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 4469, column: 11)
!8388 = !DILocation(line: 4469, column: 11, scope: !8323)
!8389 = !DILocation(line: 4470, column: 2, scope: !8387)
!8390 = !DILocation(line: 4473, column: 5, scope: !8314)
!8391 = distinct !{!8391, !8335, !8390}
!8392 = !DILocation(line: 4474, column: 3, scope: !8314)
!8393 = !DILocation(line: 4475, column: 1, scope: !8314)
!8394 = distinct !DISubprogram(name: "c_parser_asm_clobbers", scope: !3, file: !3, line: 4485, type: !3767, scopeLine: 4486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8395)
!8395 = !{!8396, !8397, !8398}
!8396 = !DILocalVariable(name: "parser", arg: 1, scope: !8394, file: !3, line: 4485, type: !1896)
!8397 = !DILocalVariable(name: "list", scope: !8394, file: !3, line: 4487, type: !718)
!8398 = !DILocalVariable(name: "str", scope: !8399, file: !3, line: 4490, type: !718)
!8399 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 4489, column: 5)
!8400 = !DILocation(line: 0, scope: !8394)
!8401 = !DILocation(line: 4488, column: 3, scope: !8394)
!8402 = !DILocation(line: 4490, column: 18, scope: !8399)
!8403 = !DILocation(line: 0, scope: !8399)
!8404 = !DILocation(line: 4491, column: 11, scope: !8405)
!8405 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 4491, column: 11)
!8406 = !DILocation(line: 4491, column: 11, scope: !8399)
!8407 = !DILocation(line: 4492, column: 9, scope: !8405)
!8408 = !DILocation(line: 4495, column: 11, scope: !8409)
!8409 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 4495, column: 11)
!8410 = !DILocation(line: 4495, column: 11, scope: !8399)
!8411 = !DILocation(line: 4496, column: 2, scope: !8409)
!8412 = !DILocation(line: 4499, column: 5, scope: !8394)
!8413 = distinct !{!8413, !8401, !8412}
!8414 = !DILocation(line: 4500, column: 3, scope: !8394)
!8415 = !DILocation(line: 4501, column: 1, scope: !8394)
!8416 = distinct !DISubprogram(name: "c_parser_asm_goto_operands", scope: !3, file: !3, line: 4511, type: !3767, scopeLine: 4512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8417)
!8417 = !{!8418, !8419, !8420, !8422, !8423}
!8418 = !DILocalVariable(name: "parser", arg: 1, scope: !8416, file: !3, line: 4511, type: !1896)
!8419 = !DILocalVariable(name: "list", scope: !8416, file: !3, line: 4513, type: !718)
!8420 = !DILocalVariable(name: "name", scope: !8421, file: !3, line: 4516, type: !718)
!8421 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 4515, column: 5)
!8422 = !DILocalVariable(name: "label", scope: !8421, file: !3, line: 4516, type: !718)
!8423 = !DILocalVariable(name: "tok", scope: !8424, file: !3, line: 4520, type: !2610)
!8424 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 4519, column: 2)
!8425 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 4518, column: 11)
!8426 = !DILocation(line: 0, scope: !8416)
!8427 = !DILocation(line: 4514, column: 3, scope: !8416)
!8428 = !DILocation(line: 4518, column: 11, scope: !8425)
!8429 = !DILocation(line: 4518, column: 11, scope: !8421)
!8430 = !DILocation(line: 4520, column: 19, scope: !8424)
!8431 = !DILocation(line: 0, scope: !8424)
!8432 = !DILocation(line: 4521, column: 16, scope: !8424)
!8433 = !DILocation(line: 0, scope: !8421)
!8434 = !DILocation(line: 4522, column: 40, scope: !8424)
!8435 = !DILocation(line: 4522, column: 12, scope: !8424)
!8436 = !DILocation(line: 4523, column: 4, scope: !8424)
!8437 = !DILocation(line: 4524, column: 4, scope: !8424)
!8438 = !DILocation(line: 4524, column: 22, scope: !8424)
!8439 = !DILocation(line: 4532, column: 28, scope: !8421)
!8440 = !DILocation(line: 4533, column: 7, scope: !8421)
!8441 = !DILocation(line: 4532, column: 14, scope: !8421)
!8442 = !DILocation(line: 4534, column: 14, scope: !8421)
!8443 = !DILocation(line: 4535, column: 11, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 4535, column: 11)
!8445 = !DILocation(line: 4535, column: 11, scope: !8421)
!8446 = !DILocation(line: 4528, column: 4, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8425, file: !3, line: 4527, column: 2)
!8448 = !DILocation(line: 4529, column: 4, scope: !8447)
!8449 = !DILocation(line: 4536, column: 2, scope: !8444)
!8450 = !DILocation(line: 4539, column: 5, scope: !8416)
!8451 = !DILocation(line: 4538, column: 9, scope: !8444)
!8452 = !DILocation(line: 4538, column: 2, scope: !8444)
!8453 = distinct !{!8453, !8427, !8450}
!8454 = !DILocation(line: 4540, column: 1, scope: !8416)
!8455 = distinct !DISubprogram(name: "c_parser_struct_declaration", scope: !3, file: !3, line: 2003, type: !3767, scopeLine: 2004, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8456)
!8456 = !{!8457, !8458, !8459, !8460, !8461, !8462, !8463, !8466, !8467, !8470, !8473, !8475, !8476, !8479, !8480}
!8457 = !DILocalVariable(name: "parser", arg: 1, scope: !8455, file: !3, line: 2003, type: !1896)
!8458 = !DILocalVariable(name: "specs", scope: !8455, file: !3, line: 2005, type: !2015)
!8459 = !DILocalVariable(name: "prefix_attrs", scope: !8455, file: !3, line: 2006, type: !718)
!8460 = !DILocalVariable(name: "all_prefix_attrs", scope: !8455, file: !3, line: 2007, type: !718)
!8461 = !DILocalVariable(name: "decls", scope: !8455, file: !3, line: 2008, type: !718)
!8462 = !DILocalVariable(name: "decl_loc", scope: !8455, file: !3, line: 2009, type: !846)
!8463 = !DILocalVariable(name: "ext", scope: !8464, file: !3, line: 2012, type: !815)
!8464 = distinct !DILexicalBlock(scope: !8465, file: !3, line: 2011, column: 5)
!8465 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 2010, column: 7)
!8466 = !DILocalVariable(name: "decl", scope: !8464, file: !3, line: 2013, type: !718)
!8467 = !DILocalVariable(name: "ret", scope: !8468, file: !3, line: 2033, type: !718)
!8468 = distinct !DILexicalBlock(scope: !8469, file: !3, line: 2032, column: 5)
!8469 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 2031, column: 7)
!8470 = !DILocalVariable(name: "attrs", scope: !8471, file: !3, line: 2046, type: !718)
!8471 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 2042, column: 2)
!8472 = distinct !DILexicalBlock(scope: !8468, file: !3, line: 2034, column: 11)
!8473 = !DILocalVariable(name: "declarator", scope: !8474, file: !3, line: 2064, type: !2048)
!8474 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 2062, column: 5)
!8475 = !DILocalVariable(name: "dummy", scope: !8474, file: !3, line: 2065, type: !838)
!8476 = !DILocalVariable(name: "postfix_attrs", scope: !8477, file: !3, line: 2082, type: !718)
!8477 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 2081, column: 2)
!8478 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 2076, column: 11)
!8479 = !DILocalVariable(name: "width", scope: !8477, file: !3, line: 2083, type: !718)
!8480 = !DILocalVariable(name: "d", scope: !8477, file: !3, line: 2084, type: !718)
!8481 = !DILocation(line: 0, scope: !8455)
!8482 = !DILocation(line: 2007, column: 3, scope: !8455)
!8483 = !DILocation(line: 2010, column: 7, scope: !8465)
!8484 = !DILocation(line: 2010, column: 7, scope: !8455)
!8485 = !DILocation(line: 2014, column: 13, scope: !8464)
!8486 = !DILocation(line: 0, scope: !8464)
!8487 = !DILocation(line: 2015, column: 7, scope: !8464)
!8488 = !DILocation(line: 2016, column: 14, scope: !8464)
!8489 = !DILocation(line: 2017, column: 7, scope: !8464)
!8490 = !DILocation(line: 2020, column: 11, scope: !8455)
!8491 = !DILocation(line: 2021, column: 14, scope: !8455)
!8492 = !DILocation(line: 2021, column: 44, scope: !8455)
!8493 = !DILocation(line: 2022, column: 3, scope: !8455)
!8494 = !DILocation(line: 2023, column: 15, scope: !8495)
!8495 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 2023, column: 7)
!8496 = !DILocation(line: 2023, column: 7, scope: !8495)
!8497 = !DILocation(line: 2023, column: 7, scope: !8455)
!8498 = !DILocation(line: 2025, column: 15, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8455, file: !3, line: 2025, column: 7)
!8500 = !DILocation(line: 2025, column: 8, scope: !8499)
!8501 = !DILocation(line: 2025, column: 7, scope: !8455)
!8502 = !DILocation(line: 2027, column: 7, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8499, file: !3, line: 2026, column: 5)
!8504 = !DILocation(line: 2028, column: 7, scope: !8503)
!8505 = !DILocation(line: 2030, column: 3, scope: !8455)
!8506 = !DILocation(line: 2031, column: 7, scope: !8469)
!8507 = !DILocation(line: 2031, column: 7, scope: !8455)
!8508 = !DILocation(line: 2033, column: 7, scope: !8468)
!8509 = !DILocation(line: 2034, column: 19, scope: !8472)
!8510 = !DILocation(line: 2034, column: 12, scope: !8472)
!8511 = !DILocation(line: 2034, column: 11, scope: !8468)
!8512 = !DILocation(line: 2036, column: 4, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8472, file: !3, line: 2035, column: 2)
!8514 = !DILocation(line: 2038, column: 30, scope: !8513)
!8515 = !DILocation(line: 2038, column: 4, scope: !8513)
!8516 = !DILocation(line: 0, scope: !8468)
!8517 = !DILocation(line: 2039, column: 8, scope: !8513)
!8518 = !DILocation(line: 2040, column: 2, scope: !8513)
!8519 = !DILocation(line: 2046, column: 4, scope: !8471)
!8520 = !DILocation(line: 0, scope: !8471)
!8521 = !DILocation(line: 2046, column: 9, scope: !8471)
!8522 = !DILocation(line: 2048, column: 21, scope: !8471)
!8523 = !DILocation(line: 2048, column: 51, scope: !8471)
!8524 = !DILocation(line: 2049, column: 7, scope: !8471)
!8525 = !DILocation(line: 2048, column: 10, scope: !8471)
!8526 = !DILocation(line: 2048, column: 8, scope: !8471)
!8527 = !DILocation(line: 2051, column: 8, scope: !8528)
!8528 = distinct !DILexicalBlock(scope: !8471, file: !3, line: 2051, column: 8)
!8529 = !DILocation(line: 2051, column: 8, scope: !8471)
!8530 = !DILocation(line: 2052, column: 29, scope: !8528)
!8531 = !DILocation(line: 2052, column: 6, scope: !8528)
!8532 = !DILocation(line: 2054, column: 14, scope: !8468)
!8533 = !DILocation(line: 2053, column: 2, scope: !8472)
!8534 = !DILocation(line: 2055, column: 5, scope: !8469)
!8535 = !DILocation(line: 2056, column: 3, scope: !8455)
!8536 = !DILocation(line: 2057, column: 25, scope: !8455)
!8537 = !DILocation(line: 2058, column: 20, scope: !8455)
!8538 = !DILocation(line: 2059, column: 16, scope: !8455)
!8539 = !DILocation(line: 0, scope: !8477)
!8540 = !DILocation(line: 0, scope: !8541)
!8541 = distinct !DILexicalBlock(scope: !8542, file: !3, line: 2086, column: 6)
!8542 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 2085, column: 8)
!8543 = !DILocation(line: 2061, column: 3, scope: !8455)
!8544 = !DILocation(line: 2060, column: 9, scope: !8455)
!8545 = !DILocation(line: 0, scope: !8474)
!8546 = !DILocation(line: 2065, column: 7, scope: !8474)
!8547 = !DILocation(line: 2065, column: 12, scope: !8474)
!8548 = !DILocation(line: 2066, column: 11, scope: !8549)
!8549 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 2066, column: 11)
!8550 = !DILocation(line: 2066, column: 11, scope: !8474)
!8551 = !DILocation(line: 2067, column: 15, scope: !8549)
!8552 = !DILocation(line: 2067, column: 2, scope: !8549)
!8553 = !DILocation(line: 2069, column: 51, scope: !8549)
!8554 = !DILocation(line: 2069, column: 15, scope: !8549)
!8555 = !DILocation(line: 0, scope: !8549)
!8556 = !DILocation(line: 2071, column: 22, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 2071, column: 11)
!8558 = !DILocation(line: 2071, column: 11, scope: !8474)
!8559 = !DILocation(line: 2073, column: 4, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 2072, column: 2)
!8561 = !DILocation(line: 2074, column: 4, scope: !8560)
!8562 = !DILocation(line: 2076, column: 11, scope: !8478)
!8563 = !DILocation(line: 2077, column: 4, scope: !8478)
!8564 = !DILocation(line: 2077, column: 7, scope: !8478)
!8565 = !DILocation(line: 2078, column: 4, scope: !8478)
!8566 = !DILocation(line: 2078, column: 7, scope: !8478)
!8567 = !DILocation(line: 2079, column: 4, scope: !8478)
!8568 = !DILocation(line: 2079, column: 7, scope: !8478)
!8569 = !DILocation(line: 2080, column: 4, scope: !8478)
!8570 = !DILocation(line: 2080, column: 7, scope: !8478)
!8571 = !DILocation(line: 2076, column: 11, scope: !8474)
!8572 = !DILocation(line: 2084, column: 4, scope: !8477)
!8573 = !DILocation(line: 2085, column: 8, scope: !8542)
!8574 = !DILocation(line: 2085, column: 8, scope: !8477)
!8575 = !DILocation(line: 2087, column: 8, scope: !8541)
!8576 = !DILocation(line: 2088, column: 16, scope: !8541)
!8577 = !DILocation(line: 2088, column: 55, scope: !8541)
!8578 = !DILocation(line: 2089, column: 6, scope: !8541)
!8579 = !DILocation(line: 2090, column: 8, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 2090, column: 8)
!8581 = !DILocation(line: 2090, column: 8, scope: !8477)
!8582 = !DILocation(line: 2091, column: 22, scope: !8580)
!8583 = !DILocation(line: 2091, column: 6, scope: !8580)
!8584 = !DILocation(line: 2092, column: 19, scope: !8477)
!8585 = !DILocation(line: 2092, column: 49, scope: !8477)
!8586 = !DILocation(line: 2092, column: 8, scope: !8477)
!8587 = !DILocation(line: 2092, column: 6, scope: !8477)
!8588 = !DILocation(line: 2095, column: 6, scope: !8477)
!8589 = !DILocation(line: 2094, column: 25, scope: !8477)
!8590 = !DILocation(line: 2094, column: 4, scope: !8477)
!8591 = !DILocation(line: 2096, column: 4, scope: !8477)
!8592 = !DILocation(line: 2096, column: 19, scope: !8477)
!8593 = !DILocation(line: 2097, column: 12, scope: !8477)
!8594 = !DILocation(line: 2098, column: 8, scope: !8595)
!8595 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 2098, column: 8)
!8596 = !DILocation(line: 2098, column: 8, scope: !8477)
!8597 = !DILocation(line: 2099, column: 34, scope: !8595)
!8598 = !DILocation(line: 2099, column: 25, scope: !8595)
!8599 = !DILocation(line: 2099, column: 6, scope: !8595)
!8600 = !DILocation(line: 0, scope: !8595)
!8601 = !DILocation(line: 2103, column: 8, scope: !8602)
!8602 = distinct !DILexicalBlock(scope: !8477, file: !3, line: 2103, column: 8)
!8603 = !DILocation(line: 2103, column: 8, scope: !8477)
!8604 = !DILocation(line: 2104, column: 6, scope: !8602)
!8605 = !DILocation(line: 2116, column: 2, scope: !8478)
!8606 = !DILocation(line: 2105, column: 13, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 2105, column: 13)
!8608 = !DILocation(line: 2106, column: 6, scope: !8607)
!8609 = !DILocation(line: 2106, column: 9, scope: !8607)
!8610 = !DILocation(line: 2105, column: 13, scope: !8602)
!8611 = !DILocation(line: 2113, column: 8, scope: !8612)
!8612 = distinct !DILexicalBlock(scope: !8607, file: !3, line: 2112, column: 6)
!8613 = !DILocation(line: 2114, column: 8, scope: !8612)
!8614 = !DILocation(line: 2119, column: 4, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8478, file: !3, line: 2118, column: 2)
!8616 = !DILocation(line: 2122, column: 4, scope: !8615)
!8617 = !DILocation(line: 2124, column: 5, scope: !8455)
!8618 = distinct !{!8618, !8543, !8617}
!8619 = !DILocation(line: 2126, column: 1, scope: !8455)
!8620 = distinct !DISubprogram(name: "c_parser_direct_declarator", scope: !3, file: !3, line: 2289, type: !4534, scopeLine: 2291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8621)
!8621 = !{!8622, !8623, !8624, !8625, !8626, !8629, !8632, !8635, !8636}
!8622 = !DILocalVariable(name: "parser", arg: 1, scope: !8620, file: !3, line: 2289, type: !1896)
!8623 = !DILocalVariable(name: "type_seen_p", arg: 2, scope: !8620, file: !3, line: 2289, type: !838)
!8624 = !DILocalVariable(name: "kind", arg: 3, scope: !8620, file: !3, line: 2289, type: !4536)
!8625 = !DILocalVariable(name: "seen_id", arg: 4, scope: !8620, file: !3, line: 2290, type: !1981)
!8626 = !DILocalVariable(name: "inner", scope: !8627, file: !3, line: 2332, type: !2048)
!8627 = distinct !DILexicalBlock(scope: !8628, file: !3, line: 2331, column: 5)
!8628 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 2326, column: 7)
!8629 = !DILocalVariable(name: "inner", scope: !8630, file: !3, line: 2343, type: !2048)
!8630 = distinct !DILexicalBlock(scope: !8631, file: !3, line: 2342, column: 5)
!8631 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 2340, column: 7)
!8632 = !DILocalVariable(name: "attrs", scope: !8633, file: !3, line: 2352, type: !718)
!8633 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 2351, column: 5)
!8634 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 2350, column: 7)
!8635 = !DILocalVariable(name: "inner", scope: !8633, file: !3, line: 2353, type: !2048)
!8636 = !DILocalVariable(name: "args", scope: !8637, file: !3, line: 2360, type: !2059)
!8637 = distinct !DILexicalBlock(scope: !8638, file: !3, line: 2359, column: 2)
!8638 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 2356, column: 11)
!8639 = !DILocation(line: 0, scope: !8620)
!8640 = !DILocation(line: 2327, column: 7, scope: !8628)
!8641 = !DILocation(line: 2327, column: 10, scope: !8628)
!8642 = !DILocation(line: 2328, column: 7, scope: !8628)
!8643 = !DILocation(line: 2328, column: 12, scope: !8628)
!8644 = !DILocation(line: 2329, column: 5, scope: !8628)
!8645 = !DILocation(line: 2329, column: 8, scope: !8628)
!8646 = !DILocation(line: 2329, column: 38, scope: !8628)
!8647 = !DILocation(line: 2329, column: 46, scope: !8628)
!8648 = !DILocation(line: 2330, column: 4, scope: !8628)
!8649 = !DILocation(line: 2330, column: 7, scope: !8628)
!8650 = !DILocation(line: 2330, column: 37, scope: !8628)
!8651 = !DILocation(line: 2330, column: 45, scope: !8628)
!8652 = !DILocation(line: 2326, column: 7, scope: !8620)
!8653 = !DILocation(line: 2333, column: 25, scope: !8627)
!8654 = !DILocation(line: 2333, column: 55, scope: !8627)
!8655 = !DILocation(line: 2333, column: 4, scope: !8627)
!8656 = !DILocation(line: 0, scope: !8627)
!8657 = !DILocation(line: 2334, column: 16, scope: !8627)
!8658 = !DILocation(line: 2335, column: 23, scope: !8627)
!8659 = !DILocation(line: 2335, column: 53, scope: !8627)
!8660 = !DILocation(line: 2335, column: 14, scope: !8627)
!8661 = !DILocation(line: 2335, column: 21, scope: !8627)
!8662 = !DILocation(line: 2336, column: 7, scope: !8627)
!8663 = !DILocation(line: 2337, column: 56, scope: !8627)
!8664 = !DILocation(line: 2337, column: 14, scope: !8627)
!8665 = !DILocation(line: 2340, column: 12, scope: !8631)
!8666 = !DILocation(line: 2341, column: 7, scope: !8631)
!8667 = !DILocation(line: 2341, column: 10, scope: !8631)
!8668 = !DILocation(line: 2340, column: 7, scope: !8620)
!8669 = !DILocation(line: 2343, column: 36, scope: !8630)
!8670 = !DILocation(line: 0, scope: !8630)
!8671 = !DILocation(line: 2344, column: 56, scope: !8630)
!8672 = !DILocation(line: 2344, column: 14, scope: !8630)
!8673 = !DILocation(line: 2350, column: 7, scope: !8634)
!8674 = !DILocation(line: 2350, column: 7, scope: !8620)
!8675 = !DILocation(line: 2354, column: 7, scope: !8633)
!8676 = !DILocation(line: 2355, column: 15, scope: !8633)
!8677 = !DILocation(line: 0, scope: !8633)
!8678 = !DILocation(line: 2356, column: 16, scope: !8638)
!8679 = !DILocation(line: 2357, column: 4, scope: !8638)
!8680 = !DILocation(line: 2357, column: 8, scope: !8638)
!8681 = !DILocation(line: 2358, column: 8, scope: !8638)
!8682 = !DILocation(line: 2358, column: 11, scope: !8638)
!8683 = !DILocation(line: 2356, column: 11, scope: !8633)
!8684 = !DILocation(line: 2361, column: 8, scope: !8637)
!8685 = !DILocation(line: 0, scope: !8637)
!8686 = !DILocation(line: 2363, column: 13, scope: !8687)
!8687 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 2363, column: 8)
!8688 = !DILocation(line: 2363, column: 8, scope: !8637)
!8689 = !DILocation(line: 2369, column: 11, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8687, file: !3, line: 2366, column: 6)
!8691 = !DILocation(line: 2368, column: 5, scope: !8690)
!8692 = !DILocation(line: 2370, column: 57, scope: !8690)
!8693 = !DILocation(line: 2370, column: 15, scope: !8690)
!8694 = !DILocation(line: 2370, column: 8, scope: !8690)
!8695 = !DILocation(line: 2375, column: 15, scope: !8633)
!8696 = !DILocation(line: 2376, column: 17, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 2376, column: 11)
!8698 = !DILocation(line: 2376, column: 34, scope: !8697)
!8699 = !DILocation(line: 2376, column: 25, scope: !8697)
!8700 = !DILocation(line: 2377, column: 10, scope: !8697)
!8701 = !DILocation(line: 2377, column: 2, scope: !8697)
!8702 = !DILocation(line: 2378, column: 11, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 2378, column: 11)
!8704 = !DILocation(line: 2378, column: 11, scope: !8633)
!8705 = !DILocation(line: 2380, column: 4, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 2379, column: 2)
!8707 = !DILocation(line: 2381, column: 14, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 2381, column: 8)
!8709 = !DILocation(line: 2381, column: 8, scope: !8706)
!8710 = !DILocation(line: 2384, column: 55, scope: !8708)
!8711 = !DILocation(line: 2384, column: 13, scope: !8708)
!8712 = !DILocation(line: 2384, column: 6, scope: !8708)
!8713 = !DILocation(line: 2388, column: 4, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 2387, column: 2)
!8715 = !DILocation(line: 2390, column: 4, scope: !8714)
!8716 = !DILocation(line: 2395, column: 16, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8718, file: !3, line: 2395, column: 11)
!8718 = distinct !DILexicalBlock(scope: !8634, file: !3, line: 2394, column: 5)
!8719 = !DILocation(line: 2395, column: 11, scope: !8718)
!8720 = !DILocation(line: 2397, column: 4, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8717, file: !3, line: 2396, column: 2)
!8722 = !DILocation(line: 2398, column: 4, scope: !8721)
!8723 = !DILocation(line: 2401, column: 9, scope: !8717)
!8724 = !DILocation(line: 2401, column: 2, scope: !8717)
!8725 = !DILocation(line: 2403, column: 1, scope: !8620)
!8726 = distinct !DISubprogram(name: "c_parser_direct_declarator_inner", scope: !3, file: !3, line: 2411, type: !8727, scopeLine: 2413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8729)
!8727 = !DISubroutineType(types: !8728)
!8728 = !{!2048, !1896, !838, !2048}
!8729 = !{!8730, !8731, !8732, !8733, !8736, !8737, !8738, !8739, !8740, !8741, !8744}
!8730 = !DILocalVariable(name: "parser", arg: 1, scope: !8726, file: !3, line: 2411, type: !1896)
!8731 = !DILocalVariable(name: "id_present", arg: 2, scope: !8726, file: !3, line: 2411, type: !838)
!8732 = !DILocalVariable(name: "inner", arg: 3, scope: !8726, file: !3, line: 2412, type: !2048)
!8733 = !DILocalVariable(name: "brace_loc", scope: !8734, file: !3, line: 2417, type: !846)
!8734 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 2416, column: 5)
!8735 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 2415, column: 7)
!8736 = !DILocalVariable(name: "declarator", scope: !8734, file: !3, line: 2418, type: !2048)
!8737 = !DILocalVariable(name: "quals_attrs", scope: !8734, file: !3, line: 2419, type: !2015)
!8738 = !DILocalVariable(name: "static_seen", scope: !8734, file: !3, line: 2420, type: !838)
!8739 = !DILocalVariable(name: "star_seen", scope: !8734, file: !3, line: 2421, type: !838)
!8740 = !DILocalVariable(name: "dimen", scope: !8734, file: !3, line: 2422, type: !718)
!8741 = !DILocalVariable(name: "attrs", scope: !8742, file: !3, line: 2484, type: !718)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 2483, column: 5)
!8743 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 2482, column: 12)
!8744 = !DILocalVariable(name: "args", scope: !8742, file: !3, line: 2485, type: !2059)
!8745 = !DILocation(line: 0, scope: !8726)
!8746 = !DILocation(line: 2415, column: 7, scope: !8735)
!8747 = !DILocation(line: 2415, column: 7, scope: !8726)
!8748 = !DILocation(line: 2417, column: 30, scope: !8734)
!8749 = !DILocation(line: 2417, column: 60, scope: !8734)
!8750 = !DILocation(line: 0, scope: !8734)
!8751 = !DILocation(line: 2419, column: 41, scope: !8734)
!8752 = !DILocation(line: 2423, column: 7, scope: !8734)
!8753 = !DILocation(line: 2424, column: 7, scope: !8734)
!8754 = !DILocation(line: 2425, column: 21, scope: !8734)
!8755 = !DILocation(line: 2426, column: 11, scope: !8756)
!8756 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 2426, column: 11)
!8757 = !DILocation(line: 2426, column: 11, scope: !8734)
!8758 = !DILocation(line: 2427, column: 2, scope: !8756)
!8759 = !DILocation(line: 2428, column: 23, scope: !8760)
!8760 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 2428, column: 11)
!8761 = !DILocation(line: 2428, column: 40, scope: !8760)
!8762 = !DILocation(line: 2428, column: 27, scope: !8760)
!8763 = !DILocation(line: 2428, column: 11, scope: !8734)
!8764 = !DILocation(line: 2429, column: 2, scope: !8760)
!8765 = !DILocation(line: 2430, column: 25, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 2430, column: 11)
!8767 = !DILocation(line: 2430, column: 12, scope: !8766)
!8768 = !DILocation(line: 2430, column: 11, scope: !8734)
!8769 = !DILocation(line: 2435, column: 11, scope: !8734)
!8770 = !DILocation(line: 2438, column: 12, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2436, column: 2)
!8772 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 2435, column: 11)
!8773 = !DILocation(line: 2438, column: 51, scope: !8771)
!8774 = !DILocation(line: 2439, column: 2, scope: !8771)
!8775 = !DILocation(line: 2442, column: 8, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8777, file: !3, line: 2442, column: 8)
!8777 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 2441, column: 2)
!8778 = !DILocation(line: 2442, column: 8, scope: !8777)
!8779 = !DILocation(line: 2447, column: 13, scope: !8780)
!8780 = distinct !DILexicalBlock(scope: !8776, file: !3, line: 2447, column: 13)
!8781 = !DILocation(line: 2447, column: 13, scope: !8776)
!8782 = !DILocation(line: 2449, column: 12, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 2449, column: 12)
!8784 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 2448, column: 6)
!8785 = !DILocation(line: 2449, column: 46, scope: !8783)
!8786 = !DILocation(line: 2449, column: 51, scope: !8783)
!8787 = !DILocation(line: 2449, column: 12, scope: !8784)
!8788 = !DILocation(line: 2453, column: 5, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2450, column: 3)
!8790 = !DILocation(line: 2454, column: 3, scope: !8789)
!8791 = !DILocation(line: 2458, column: 13, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 2456, column: 3)
!8793 = !DILocation(line: 2458, column: 52, scope: !8792)
!8794 = !DILocation(line: 2464, column: 16, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8780, file: !3, line: 2462, column: 6)
!8796 = !DILocation(line: 2464, column: 55, scope: !8795)
!8797 = !DILocation(line: 0, scope: !8772)
!8798 = !DILocation(line: 2467, column: 11, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 2467, column: 11)
!8800 = !DILocation(line: 2467, column: 11, scope: !8734)
!8801 = !DILocation(line: 2468, column: 2, scope: !8799)
!8802 = !DILocation(line: 2475, column: 20, scope: !8734)
!8803 = !DILocation(line: 2477, column: 22, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 2477, column: 11)
!8805 = !DILocation(line: 2477, column: 11, scope: !8734)
!8806 = !DILocation(line: 2471, column: 4, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 2470, column: 2)
!8808 = !DILocation(line: 2473, column: 4, scope: !8807)
!8809 = !DILocation(line: 2479, column: 15, scope: !8734)
!8810 = !DILocation(line: 2480, column: 14, scope: !8734)
!8811 = !DILocation(line: 2480, column: 7, scope: !8734)
!8812 = !DILocation(line: 2482, column: 12, scope: !8743)
!8813 = !DILocation(line: 2482, column: 12, scope: !8735)
!8814 = !DILocation(line: 2486, column: 7, scope: !8742)
!8815 = !DILocation(line: 2487, column: 15, scope: !8742)
!8816 = !DILocation(line: 0, scope: !8742)
!8817 = !DILocation(line: 2488, column: 14, scope: !8742)
!8818 = !DILocation(line: 2489, column: 16, scope: !8819)
!8819 = distinct !DILexicalBlock(scope: !8742, file: !3, line: 2489, column: 11)
!8820 = !DILocation(line: 2489, column: 11, scope: !8742)
!8821 = !DILocation(line: 2493, column: 12, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 2492, column: 2)
!8823 = !DILocation(line: 2494, column: 11, scope: !8822)
!8824 = !DILocation(line: 2494, column: 4, scope: !8822)
!8825 = !DILocation(line: 2498, column: 1, scope: !8726)
!8826 = distinct !DISubprogram(name: "c_parser_parms_declarator", scope: !3, file: !3, line: 2506, type: !8827, scopeLine: 2507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8829)
!8827 = !DISubroutineType(types: !8828)
!8828 = !{!2059, !1896, !838, !718}
!8829 = !{!8830, !8831, !8832, !8833, !8836, !8837, !8840}
!8830 = !DILocalVariable(name: "parser", arg: 1, scope: !8826, file: !3, line: 2506, type: !1896)
!8831 = !DILocalVariable(name: "id_list_ok", arg: 2, scope: !8826, file: !3, line: 2506, type: !838)
!8832 = !DILocalVariable(name: "attrs", arg: 3, scope: !8826, file: !3, line: 2506, type: !718)
!8833 = !DILocalVariable(name: "list", scope: !8834, file: !3, line: 2517, type: !718)
!8834 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 2516, column: 5)
!8835 = distinct !DILexicalBlock(scope: !8826, file: !3, line: 2512, column: 7)
!8836 = !DILocalVariable(name: "nextp", scope: !8834, file: !3, line: 2517, type: !1623)
!8837 = !DILocalVariable(name: "ret", scope: !8838, file: !3, line: 2536, type: !2059)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2535, column: 2)
!8839 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 2534, column: 11)
!8840 = !DILocalVariable(name: "ret", scope: !8841, file: !3, line: 2557, type: !2059)
!8841 = distinct !DILexicalBlock(scope: !8835, file: !3, line: 2556, column: 5)
!8842 = !DILocation(line: 0, scope: !8826)
!8843 = !DILocation(line: 2508, column: 3, scope: !8826)
!8844 = !DILocation(line: 2509, column: 3, scope: !8826)
!8845 = !DILocation(line: 2512, column: 7, scope: !8835)
!8846 = !DILocation(line: 2513, column: 11, scope: !8835)
!8847 = !DILocation(line: 2513, column: 7, scope: !8835)
!8848 = !DILocation(line: 2514, column: 10, scope: !8835)
!8849 = !DILocation(line: 2515, column: 7, scope: !8835)
!8850 = !DILocation(line: 2515, column: 10, scope: !8835)
!8851 = !DILocation(line: 2515, column: 40, scope: !8835)
!8852 = !DILocation(line: 2515, column: 48, scope: !8835)
!8853 = !DILocation(line: 2512, column: 7, scope: !8826)
!8854 = !DILocation(line: 2517, column: 7, scope: !8834)
!8855 = !DILocation(line: 0, scope: !8834)
!8856 = !DILocation(line: 2517, column: 12, scope: !8834)
!8857 = !DILocation(line: 2518, column: 7, scope: !8834)
!8858 = !DILocation(line: 2518, column: 14, scope: !8834)
!8859 = !DILocation(line: 2519, column: 7, scope: !8834)
!8860 = !DILocation(line: 2519, column: 10, scope: !8834)
!8861 = !DILocation(line: 2519, column: 40, scope: !8834)
!8862 = !DILocation(line: 2519, column: 48, scope: !8834)
!8863 = !DILocation(line: 2521, column: 13, scope: !8864)
!8864 = distinct !DILexicalBlock(scope: !8834, file: !3, line: 2520, column: 2)
!8865 = !DILocation(line: 2521, column: 11, scope: !8864)
!8866 = !DILocation(line: 2524, column: 4, scope: !8864)
!8867 = !DILocation(line: 2525, column: 8, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 2525, column: 8)
!8869 = !DILocation(line: 2525, column: 8, scope: !8864)
!8870 = !DILocation(line: 2523, column: 14, scope: !8864)
!8871 = !DILocation(line: 2527, column: 4, scope: !8864)
!8872 = !DILocation(line: 2528, column: 8, scope: !8873)
!8873 = distinct !DILexicalBlock(scope: !8864, file: !3, line: 2528, column: 8)
!8874 = !DILocation(line: 2528, column: 8, scope: !8864)
!8875 = distinct !{!8875, !8857, !8876}
!8876 = !DILocation(line: 2533, column: 2, scope: !8834)
!8877 = !DILocation(line: 2530, column: 8, scope: !8878)
!8878 = distinct !DILexicalBlock(scope: !8873, file: !3, line: 2529, column: 6)
!8879 = !DILocation(line: 2531, column: 8, scope: !8878)
!8880 = !DILocation(line: 2534, column: 11, scope: !8839)
!8881 = !DILocation(line: 2534, column: 11, scope: !8834)
!8882 = !DILocation(line: 2536, column: 29, scope: !8838)
!8883 = !DILocation(line: 0, scope: !8838)
!8884 = !DILocation(line: 2537, column: 9, scope: !8838)
!8885 = !DILocation(line: 2537, column: 15, scope: !8838)
!8886 = !DILocation(line: 2538, column: 9, scope: !8838)
!8887 = !DILocation(line: 2538, column: 14, scope: !8838)
!8888 = !DILocation(line: 2539, column: 17, scope: !8838)
!8889 = !DILocation(line: 2539, column: 9, scope: !8838)
!8890 = !DILocation(line: 2539, column: 15, scope: !8838)
!8891 = !DILocation(line: 2540, column: 9, scope: !8838)
!8892 = !DILocation(line: 2540, column: 16, scope: !8838)
!8893 = !DILocation(line: 2541, column: 9, scope: !8838)
!8894 = !DILocation(line: 2541, column: 23, scope: !8838)
!8895 = !DILocation(line: 2542, column: 9, scope: !8838)
!8896 = !DILocation(line: 2542, column: 24, scope: !8838)
!8897 = !DILocation(line: 2543, column: 4, scope: !8838)
!8898 = !DILocation(line: 2544, column: 4, scope: !8838)
!8899 = !DILocation(line: 2549, column: 4, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2548, column: 2)
!8901 = !DILocation(line: 2551, column: 4, scope: !8900)
!8902 = !DILocation(line: 2552, column: 4, scope: !8900)
!8903 = !DILocation(line: 0, scope: !8839)
!8904 = !DILocation(line: 2554, column: 5, scope: !8835)
!8905 = !DILocation(line: 2557, column: 32, scope: !8841)
!8906 = !DILocation(line: 0, scope: !8841)
!8907 = !DILocation(line: 2558, column: 7, scope: !8841)
!8908 = !DILocation(line: 0, scope: !8835)
!8909 = !DILocation(line: 2561, column: 1, scope: !8826)
!8910 = distinct !DISubprogram(name: "c_parser_parms_list_declarator", scope: !3, file: !3, line: 2568, type: !8911, scopeLine: 2569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8913)
!8911 = !DISubroutineType(types: !8912)
!8912 = !{!2059, !1896, !718}
!8913 = !{!8914, !8915, !8916, !8917, !8920, !8923, !8925, !8928, !8933}
!8914 = !DILocalVariable(name: "parser", arg: 1, scope: !8910, file: !3, line: 2568, type: !1896)
!8915 = !DILocalVariable(name: "attrs", arg: 2, scope: !8910, file: !3, line: 2568, type: !718)
!8916 = !DILocalVariable(name: "good_parm", scope: !8910, file: !3, line: 2570, type: !838)
!8917 = !DILocalVariable(name: "ret", scope: !8918, file: !3, line: 2579, type: !2059)
!8918 = distinct !DILexicalBlock(scope: !8919, file: !3, line: 2578, column: 5)
!8919 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 2577, column: 7)
!8920 = !DILocalVariable(name: "ret", scope: !8921, file: !3, line: 2591, type: !2059)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 2590, column: 5)
!8922 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 2589, column: 7)
!8923 = !DILocalVariable(name: "parm", scope: !8924, file: !3, line: 2620, type: !4090)
!8924 = distinct !DILexicalBlock(scope: !8910, file: !3, line: 2618, column: 5)
!8925 = !DILocalVariable(name: "new_attrs", scope: !8926, file: !3, line: 2629, type: !718)
!8926 = distinct !DILexicalBlock(scope: !8927, file: !3, line: 2628, column: 2)
!8927 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2627, column: 11)
!8928 = !DILocalVariable(name: "ret", scope: !8929, file: !3, line: 2642, type: !2059)
!8929 = distinct !DILexicalBlock(scope: !8930, file: !3, line: 2641, column: 6)
!8930 = distinct !DILexicalBlock(scope: !8931, file: !3, line: 2638, column: 8)
!8931 = distinct !DILexicalBlock(scope: !8932, file: !3, line: 2636, column: 2)
!8932 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2635, column: 11)
!8933 = !DILocalVariable(name: "ret", scope: !8934, file: !3, line: 2670, type: !2059)
!8934 = distinct !DILexicalBlock(scope: !8935, file: !3, line: 2669, column: 3)
!8935 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 2666, column: 12)
!8936 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 2664, column: 6)
!8937 = distinct !DILexicalBlock(scope: !8938, file: !3, line: 2663, column: 8)
!8938 = distinct !DILexicalBlock(scope: !8939, file: !3, line: 2661, column: 2)
!8939 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2660, column: 11)
!8940 = !DILocation(line: 0, scope: !8910)
!8941 = !DILocation(line: 2577, column: 7, scope: !8919)
!8942 = !DILocation(line: 2577, column: 7, scope: !8910)
!8943 = !DILocation(line: 2579, column: 32, scope: !8918)
!8944 = !DILocation(line: 0, scope: !8918)
!8945 = !DILocation(line: 2580, column: 12, scope: !8918)
!8946 = !DILocation(line: 2580, column: 18, scope: !8918)
!8947 = !DILocation(line: 2581, column: 12, scope: !8918)
!8948 = !DILocation(line: 2581, column: 17, scope: !8918)
!8949 = !DILocation(line: 2582, column: 12, scope: !8918)
!8950 = !DILocation(line: 2582, column: 18, scope: !8918)
!8951 = !DILocation(line: 2583, column: 12, scope: !8918)
!8952 = !DILocation(line: 2583, column: 19, scope: !8918)
!8953 = !DILocation(line: 2584, column: 12, scope: !8918)
!8954 = !DILocation(line: 2584, column: 26, scope: !8918)
!8955 = !DILocation(line: 2585, column: 12, scope: !8918)
!8956 = !DILocation(line: 2585, column: 27, scope: !8918)
!8957 = !DILocation(line: 2586, column: 7, scope: !8918)
!8958 = !DILocation(line: 2589, column: 7, scope: !8922)
!8959 = !DILocation(line: 2589, column: 7, scope: !8910)
!8960 = !DILocation(line: 2617, column: 3, scope: !8910)
!8961 = !DILocation(line: 2591, column: 32, scope: !8921)
!8962 = !DILocation(line: 0, scope: !8921)
!8963 = !DILocation(line: 2592, column: 12, scope: !8921)
!8964 = !DILocation(line: 2592, column: 18, scope: !8921)
!8965 = !DILocation(line: 2593, column: 12, scope: !8921)
!8966 = !DILocation(line: 2593, column: 17, scope: !8921)
!8967 = !DILocation(line: 2594, column: 12, scope: !8921)
!8968 = !DILocation(line: 2594, column: 19, scope: !8921)
!8969 = !DILocation(line: 2595, column: 12, scope: !8921)
!8970 = !DILocation(line: 2595, column: 26, scope: !8921)
!8971 = !DILocation(line: 2596, column: 12, scope: !8921)
!8972 = !DILocation(line: 2596, column: 27, scope: !8921)
!8973 = !DILocation(line: 2598, column: 20, scope: !8921)
!8974 = !DILocation(line: 2598, column: 12, scope: !8921)
!8975 = !DILocation(line: 2598, column: 18, scope: !8921)
!8976 = !DILocation(line: 2599, column: 17, scope: !8921)
!8977 = !DILocation(line: 2599, column: 47, scope: !8921)
!8978 = !DILocation(line: 2599, column: 7, scope: !8921)
!8979 = !DILocation(line: 2601, column: 7, scope: !8921)
!8980 = !DILocation(line: 2602, column: 11, scope: !8981)
!8981 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 2602, column: 11)
!8982 = !DILocation(line: 2602, column: 11, scope: !8921)
!8983 = !DILocation(line: 2604, column: 4, scope: !8984)
!8984 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 2603, column: 2)
!8985 = !DILocation(line: 2605, column: 4, scope: !8984)
!8986 = !DILocation(line: 2609, column: 4, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8981, file: !3, line: 2608, column: 2)
!8988 = !DILocation(line: 2611, column: 4, scope: !8987)
!8989 = !DILocation(line: 2620, column: 29, scope: !8924)
!8990 = !DILocation(line: 0, scope: !8924)
!8991 = !DILocation(line: 2622, column: 16, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2622, column: 11)
!8993 = !DILocation(line: 2622, column: 11, scope: !8924)
!8994 = !DILocation(line: 2625, column: 4, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8992, file: !3, line: 2623, column: 2)
!8996 = !DILocation(line: 2626, column: 2, scope: !8995)
!8997 = !DILocation(line: 2627, column: 11, scope: !8927)
!8998 = !DILocation(line: 2627, column: 11, scope: !8924)
!8999 = !DILocation(line: 2630, column: 4, scope: !8926)
!9000 = !DILocation(line: 2631, column: 4, scope: !8926)
!9001 = !DILocation(line: 2632, column: 16, scope: !8926)
!9002 = !DILocation(line: 0, scope: !8926)
!9003 = !DILocation(line: 2633, column: 11, scope: !8926)
!9004 = !DILocation(line: 2635, column: 11, scope: !8932)
!9005 = !DILocation(line: 2635, column: 11, scope: !8924)
!9006 = !DILocation(line: 2637, column: 4, scope: !8931)
!9007 = !DILocation(line: 2638, column: 8, scope: !8930)
!9008 = !DILocation(line: 2638, column: 8, scope: !8931)
!9009 = !DILocation(line: 2639, column: 13, scope: !8930)
!9010 = !DILocation(line: 2639, column: 6, scope: !8930)
!9011 = !DILocation(line: 2643, column: 5, scope: !8929)
!9012 = !DILocation(line: 0, scope: !8929)
!9013 = !DILocation(line: 2644, column: 13, scope: !8929)
!9014 = !DILocation(line: 2644, column: 19, scope: !8929)
!9015 = !DILocation(line: 2645, column: 13, scope: !8929)
!9016 = !DILocation(line: 2645, column: 18, scope: !8929)
!9017 = !DILocation(line: 2646, column: 13, scope: !8929)
!9018 = !DILocation(line: 2646, column: 19, scope: !8929)
!9019 = !DILocation(line: 2647, column: 13, scope: !8929)
!9020 = !DILocation(line: 2647, column: 20, scope: !8929)
!9021 = !DILocation(line: 2648, column: 13, scope: !8929)
!9022 = !DILocation(line: 2648, column: 27, scope: !8929)
!9023 = !DILocation(line: 2649, column: 13, scope: !8929)
!9024 = !DILocation(line: 2649, column: 28, scope: !8929)
!9025 = !DILocation(line: 2653, column: 12, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !8924, file: !3, line: 2653, column: 11)
!9027 = !DILocation(line: 2653, column: 11, scope: !8924)
!9028 = !DILocation(line: 2656, column: 4, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 2655, column: 2)
!9030 = !DILocation(line: 2657, column: 4, scope: !9029)
!9031 = !DILocation(line: 2658, column: 4, scope: !9029)
!9032 = !DILocation(line: 2660, column: 11, scope: !8939)
!9033 = !DILocation(line: 2660, column: 11, scope: !8924)
!9034 = !DILocation(line: 2662, column: 4, scope: !8938)
!9035 = !DILocation(line: 2663, column: 8, scope: !8937)
!9036 = !DILocation(line: 2663, column: 8, scope: !8938)
!9037 = !DILocation(line: 2665, column: 8, scope: !8936)
!9038 = !DILocation(line: 2666, column: 12, scope: !8935)
!9039 = !DILocation(line: 2666, column: 12, scope: !8936)
!9040 = !DILocation(line: 2667, column: 10, scope: !8935)
!9041 = !DILocation(line: 2667, column: 3, scope: !8935)
!9042 = !DILocation(line: 2671, column: 9, scope: !8934)
!9043 = !DILocation(line: 0, scope: !8934)
!9044 = !DILocation(line: 2672, column: 10, scope: !8934)
!9045 = !DILocation(line: 2672, column: 16, scope: !8934)
!9046 = !DILocation(line: 2673, column: 10, scope: !8934)
!9047 = !DILocation(line: 2673, column: 15, scope: !8934)
!9048 = !DILocation(line: 2674, column: 10, scope: !8934)
!9049 = !DILocation(line: 2674, column: 16, scope: !8934)
!9050 = !DILocation(line: 2675, column: 10, scope: !8934)
!9051 = !DILocation(line: 2675, column: 17, scope: !8934)
!9052 = !DILocation(line: 2676, column: 10, scope: !8934)
!9053 = !DILocation(line: 2676, column: 24, scope: !8934)
!9054 = !DILocation(line: 2677, column: 10, scope: !8934)
!9055 = !DILocation(line: 2677, column: 25, scope: !8934)
!9056 = !DILocation(line: 2683, column: 8, scope: !9057)
!9057 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 2682, column: 6)
!9058 = !DILocation(line: 2685, column: 8, scope: !9057)
!9059 = !DILocation(line: 2686, column: 8, scope: !9057)
!9060 = distinct !{!9060, !8960, !9061}
!9061 = !DILocation(line: 2689, column: 5, scope: !8910)
!9062 = !DILocation(line: 2690, column: 1, scope: !8910)
!9063 = distinct !DISubprogram(name: "c_parser_skip_to_end_of_parameter", scope: !3, file: !3, line: 695, type: !2645, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9064)
!9064 = !{!9065, !9066, !9067}
!9065 = !DILocalVariable(name: "parser", arg: 1, scope: !9063, file: !3, line: 695, type: !1896)
!9066 = !DILocalVariable(name: "nesting_depth", scope: !9063, file: !3, line: 697, type: !7)
!9067 = !DILocalVariable(name: "token", scope: !9068, file: !3, line: 701, type: !2610)
!9068 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 700, column: 5)
!9069 = !DILocation(line: 0, scope: !9063)
!9070 = !DILocation(line: 0, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 708, column: 11)
!9072 = !DILocation(line: 699, column: 3, scope: !9063)
!9073 = !DILocation(line: 697, column: 12, scope: !9063)
!9074 = !DILocation(line: 701, column: 24, scope: !9068)
!9075 = !DILocation(line: 0, scope: !9068)
!9076 = !DILocation(line: 702, column: 19, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 702, column: 11)
!9078 = !DILocation(line: 702, column: 24, scope: !9077)
!9079 = !DILocation(line: 702, column: 37, scope: !9077)
!9080 = !DILocation(line: 702, column: 52, scope: !9077)
!9081 = !DILocation(line: 703, column: 8, scope: !9077)
!9082 = !DILocation(line: 703, column: 4, scope: !9077)
!9083 = !DILocation(line: 702, column: 11, scope: !9068)
!9084 = !DILocation(line: 706, column: 23, scope: !9085)
!9085 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 706, column: 11)
!9086 = !DILocation(line: 706, column: 11, scope: !9068)
!9087 = !DILocation(line: 708, column: 23, scope: !9071)
!9088 = !DILocation(line: 708, column: 41, scope: !9071)
!9089 = !DILocation(line: 708, column: 52, scope: !9071)
!9090 = !DILocation(line: 708, column: 44, scope: !9071)
!9091 = !DILocation(line: 708, column: 11, scope: !9068)
!9092 = !DILocation(line: 710, column: 23, scope: !9093)
!9093 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 710, column: 11)
!9094 = !DILocation(line: 711, column: 4, scope: !9093)
!9095 = !DILocation(line: 711, column: 19, scope: !9093)
!9096 = !DILocation(line: 712, column: 4, scope: !9093)
!9097 = !DILocation(line: 712, column: 19, scope: !9093)
!9098 = !DILocation(line: 710, column: 11, scope: !9068)
!9099 = !DILocation(line: 713, column: 2, scope: !9093)
!9100 = !DILocation(line: 714, column: 28, scope: !9101)
!9101 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 714, column: 16)
!9102 = !DILocation(line: 715, column: 9, scope: !9101)
!9103 = !DILocation(line: 715, column: 24, scope: !9101)
!9104 = !DILocation(line: 716, column: 9, scope: !9101)
!9105 = !DILocation(line: 716, column: 24, scope: !9101)
!9106 = !DILocation(line: 714, column: 16, scope: !9093)
!9107 = !DILocation(line: 718, column: 21, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 718, column: 8)
!9109 = distinct !DILexicalBlock(scope: !9101, file: !3, line: 717, column: 2)
!9110 = !DILocation(line: 718, column: 24, scope: !9108)
!9111 = !DILocation(line: 718, column: 8, scope: !9109)
!9112 = !DILocation(line: 0, scope: !9093)
!9113 = !DILocation(line: 722, column: 7, scope: !9068)
!9114 = !DILocation(line: 723, column: 5, scope: !9063)
!9115 = distinct !{!9115, !9072, !9114}
!9116 = !DILocation(line: 724, column: 17, scope: !9063)
!9117 = !DILocation(line: 725, column: 1, scope: !9063)
!9118 = distinct !DISubprogram(name: "c_parser_omp_barrier", scope: !3, file: !3, line: 7911, type: !2645, scopeLine: 7912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9119)
!9119 = !{!9120, !9121}
!9120 = !DILocalVariable(name: "parser", arg: 1, scope: !9118, file: !3, line: 7911, type: !1896)
!9121 = !DILocalVariable(name: "loc", scope: !9118, file: !3, line: 7913, type: !846)
!9122 = !DILocation(line: 0, scope: !9118)
!9123 = !DILocation(line: 7913, column: 20, scope: !9118)
!9124 = !DILocation(line: 7913, column: 50, scope: !9118)
!9125 = !DILocation(line: 7914, column: 3, scope: !9118)
!9126 = !DILocation(line: 7915, column: 3, scope: !9118)
!9127 = !DILocation(line: 7917, column: 3, scope: !9118)
!9128 = !DILocation(line: 7918, column: 1, scope: !9118)
!9129 = distinct !DISubprogram(name: "c_parser_omp_flush", scope: !3, file: !3, line: 7958, type: !2645, scopeLine: 7959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9130)
!9130 = !{!9131, !9132}
!9131 = !DILocalVariable(name: "parser", arg: 1, scope: !9129, file: !3, line: 7958, type: !1896)
!9132 = !DILocalVariable(name: "loc", scope: !9129, file: !3, line: 7960, type: !846)
!9133 = !DILocation(line: 0, scope: !9129)
!9134 = !DILocation(line: 7960, column: 20, scope: !9129)
!9135 = !DILocation(line: 7960, column: 50, scope: !9129)
!9136 = !DILocation(line: 7961, column: 3, scope: !9129)
!9137 = !DILocation(line: 7962, column: 7, scope: !9138)
!9138 = distinct !DILexicalBlock(scope: !9129, file: !3, line: 7962, column: 7)
!9139 = !DILocation(line: 7962, column: 7, scope: !9129)
!9140 = !DILocation(line: 7963, column: 5, scope: !9138)
!9141 = !DILocation(line: 7964, column: 12, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9138, file: !3, line: 7964, column: 12)
!9143 = !DILocation(line: 7964, column: 12, scope: !9138)
!9144 = !DILocation(line: 7965, column: 5, scope: !9142)
!9145 = !DILocation(line: 7966, column: 3, scope: !9129)
!9146 = !DILocation(line: 7968, column: 3, scope: !9129)
!9147 = !DILocation(line: 7969, column: 1, scope: !9129)
!9148 = distinct !DISubprogram(name: "c_parser_omp_taskwait", scope: !3, file: !3, line: 8581, type: !2645, scopeLine: 8582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9149)
!9149 = !{!9150, !9151}
!9150 = !DILocalVariable(name: "parser", arg: 1, scope: !9148, file: !3, line: 8581, type: !1896)
!9151 = !DILocalVariable(name: "loc", scope: !9148, file: !3, line: 8583, type: !846)
!9152 = !DILocation(line: 0, scope: !9148)
!9153 = !DILocation(line: 8583, column: 20, scope: !9148)
!9154 = !DILocation(line: 8583, column: 50, scope: !9148)
!9155 = !DILocation(line: 8584, column: 3, scope: !9148)
!9156 = !DILocation(line: 8585, column: 3, scope: !9148)
!9157 = !DILocation(line: 8587, column: 3, scope: !9148)
!9158 = !DILocation(line: 8588, column: 1, scope: !9148)
!9159 = distinct !DISubprogram(name: "c_parser_omp_threadprivate", scope: !3, file: !3, line: 8645, type: !2645, scopeLine: 8646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9160)
!9160 = !{!9161, !9162, !9163, !9164, !9165}
!9161 = !DILocalVariable(name: "parser", arg: 1, scope: !9159, file: !3, line: 8645, type: !1896)
!9162 = !DILocalVariable(name: "vars", scope: !9159, file: !3, line: 8647, type: !718)
!9163 = !DILocalVariable(name: "t", scope: !9159, file: !3, line: 8647, type: !718)
!9164 = !DILocalVariable(name: "loc", scope: !9159, file: !3, line: 8648, type: !846)
!9165 = !DILocalVariable(name: "v", scope: !9166, file: !3, line: 8657, type: !718)
!9166 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 8656, column: 5)
!9167 = distinct !DILexicalBlock(scope: !9168, file: !3, line: 8655, column: 3)
!9168 = distinct !DILexicalBlock(scope: !9159, file: !3, line: 8655, column: 3)
!9169 = !DILocation(line: 0, scope: !9159)
!9170 = !DILocation(line: 8650, column: 3, scope: !9159)
!9171 = !DILocation(line: 8651, column: 9, scope: !9159)
!9172 = !DILocation(line: 8651, column: 39, scope: !9159)
!9173 = !DILocation(line: 8652, column: 10, scope: !9159)
!9174 = !DILocation(line: 8655, column: 8, scope: !9168)
!9175 = !DILocation(line: 0, scope: !9168)
!9176 = !DILocation(line: 8655, column: 3, scope: !9168)
!9177 = !DILocation(line: 8657, column: 16, scope: !9166)
!9178 = !DILocation(line: 0, scope: !9166)
!9179 = !DILocation(line: 8667, column: 11, scope: !9180)
!9180 = distinct !DILexicalBlock(scope: !9166, file: !3, line: 8667, column: 11)
!9181 = !DILocation(line: 8667, column: 25, scope: !9180)
!9182 = !DILocation(line: 8667, column: 11, scope: !9166)
!9183 = !DILocation(line: 8668, column: 2, scope: !9180)
!9184 = !DILocation(line: 8669, column: 16, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9180, file: !3, line: 8669, column: 16)
!9186 = !DILocation(line: 8669, column: 30, scope: !9185)
!9187 = !DILocation(line: 8669, column: 34, scope: !9185)
!9188 = !DILocation(line: 8669, column: 16, scope: !9180)
!9189 = !DILocation(line: 8670, column: 2, scope: !9185)
!9190 = !DILocation(line: 8671, column: 18, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9185, file: !3, line: 8671, column: 16)
!9192 = !DILocation(line: 8671, column: 34, scope: !9191)
!9193 = !DILocation(line: 8671, column: 39, scope: !9191)
!9194 = !DILocation(line: 8671, column: 16, scope: !9185)
!9195 = !DILocation(line: 8672, column: 2, scope: !9191)
!9196 = !DILocation(line: 8673, column: 16, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 8673, column: 16)
!9198 = !DILocation(line: 8673, column: 33, scope: !9197)
!9199 = !DILocation(line: 8673, column: 30, scope: !9197)
!9200 = !DILocation(line: 8673, column: 16, scope: !9191)
!9201 = !DILocation(line: 8675, column: 18, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 8675, column: 16)
!9203 = !DILocation(line: 8675, column: 16, scope: !9197)
!9204 = !DILocation(line: 8676, column: 2, scope: !9202)
!9205 = !DILocation(line: 8679, column: 10, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9207, file: !3, line: 8679, column: 8)
!9207 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 8678, column: 2)
!9208 = !DILocation(line: 8679, column: 8, scope: !9207)
!9209 = !DILocation(line: 8681, column: 29, scope: !9210)
!9210 = distinct !DILexicalBlock(scope: !9206, file: !3, line: 8680, column: 6)
!9211 = !DILocation(line: 8681, column: 27, scope: !9210)
!9212 = !DILocation(line: 8685, column: 12, scope: !9213)
!9213 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 8685, column: 12)
!9214 = !DILocation(line: 8685, column: 12, scope: !9210)
!9215 = !DILocation(line: 8686, column: 3, scope: !9213)
!9216 = !DILocation(line: 8688, column: 4, scope: !9207)
!9217 = !DILocation(line: 8688, column: 31, scope: !9207)
!9218 = !DILocation(line: 8655, column: 25, scope: !9167)
!9219 = !DILocation(line: 8655, column: 3, scope: !9167)
!9220 = distinct !{!9220, !9176, !9221}
!9221 = !DILocation(line: 8690, column: 5, scope: !9168)
!9222 = !DILocation(line: 8692, column: 3, scope: !9159)
!9223 = !DILocation(line: 8693, column: 1, scope: !9159)
!9224 = distinct !DISubprogram(name: "c_parser_omp_construct", scope: !3, file: !3, line: 8593, type: !2645, scopeLine: 8594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9225)
!9225 = !{!9226, !9227, !9228, !9229}
!9226 = !DILocalVariable(name: "parser", arg: 1, scope: !9224, file: !3, line: 8593, type: !1896)
!9227 = !DILocalVariable(name: "p_kind", scope: !9224, file: !3, line: 8595, type: !643)
!9228 = !DILocalVariable(name: "loc", scope: !9224, file: !3, line: 8596, type: !846)
!9229 = !DILocalVariable(name: "stmt", scope: !9224, file: !3, line: 8597, type: !718)
!9230 = !DILocation(line: 0, scope: !9224)
!9231 = !DILocation(line: 8599, column: 9, scope: !9224)
!9232 = !DILocation(line: 8599, column: 39, scope: !9224)
!9233 = !DILocation(line: 8600, column: 12, scope: !9224)
!9234 = !DILocation(line: 8600, column: 42, scope: !9224)
!9235 = !DILocation(line: 8601, column: 3, scope: !9224)
!9236 = !DILocation(line: 8603, column: 3, scope: !9224)
!9237 = !DILocation(line: 8606, column: 7, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 8604, column: 5)
!9239 = !DILocation(line: 8607, column: 7, scope: !9238)
!9240 = !DILocation(line: 8609, column: 14, scope: !9238)
!9241 = !DILocation(line: 8610, column: 7, scope: !9238)
!9242 = !DILocation(line: 8612, column: 14, scope: !9238)
!9243 = !DILocation(line: 8613, column: 7, scope: !9238)
!9244 = !DILocation(line: 8615, column: 14, scope: !9238)
!9245 = !DILocation(line: 8616, column: 7, scope: !9238)
!9246 = !DILocation(line: 8618, column: 14, scope: !9238)
!9247 = !DILocation(line: 8619, column: 7, scope: !9238)
!9248 = !DILocation(line: 8621, column: 14, scope: !9238)
!9249 = !DILocation(line: 8622, column: 7, scope: !9238)
!9250 = !DILocation(line: 8624, column: 14, scope: !9238)
!9251 = !DILocation(line: 8625, column: 7, scope: !9238)
!9252 = !DILocation(line: 8627, column: 14, scope: !9238)
!9253 = !DILocation(line: 8628, column: 7, scope: !9238)
!9254 = !DILocation(line: 8630, column: 14, scope: !9238)
!9255 = !DILocation(line: 8631, column: 7, scope: !9238)
!9256 = !DILocation(line: 8633, column: 7, scope: !9238)
!9257 = !DILocation(line: 8634, column: 5, scope: !9238)
!9258 = !DILocation(line: 8636, column: 7, scope: !9259)
!9259 = distinct !DILexicalBlock(scope: !9224, file: !3, line: 8636, column: 7)
!9260 = !DILocation(line: 8636, column: 7, scope: !9224)
!9261 = !DILocation(line: 8637, column: 5, scope: !9259)
!9262 = !DILocation(line: 8638, column: 1, scope: !9224)
!9263 = distinct !DISubprogram(name: "c_parser_omp_var_list_parens", scope: !3, file: !3, line: 7250, type: !9264, scopeLine: 7252, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9266)
!9264 = !DISubroutineType(types: !9265)
!9265 = !{!718, !1896, !157, !718}
!9266 = !{!9267, !9268, !9269, !9270}
!9267 = !DILocalVariable(name: "parser", arg: 1, scope: !9263, file: !3, line: 7250, type: !1896)
!9268 = !DILocalVariable(name: "kind", arg: 2, scope: !9263, file: !3, line: 7250, type: !157)
!9269 = !DILocalVariable(name: "list", arg: 3, scope: !9263, file: !3, line: 7251, type: !718)
!9270 = !DILocalVariable(name: "loc", scope: !9263, file: !3, line: 7254, type: !846)
!9271 = !DILocation(line: 0, scope: !9263)
!9272 = !DILocation(line: 7254, column: 20, scope: !9263)
!9273 = !DILocation(line: 7254, column: 50, scope: !9263)
!9274 = !DILocation(line: 7256, column: 7, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9263, file: !3, line: 7256, column: 7)
!9276 = !DILocation(line: 7256, column: 7, scope: !9263)
!9277 = !DILocation(line: 7258, column: 14, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 7257, column: 5)
!9279 = !DILocation(line: 7259, column: 7, scope: !9278)
!9280 = !DILocation(line: 7260, column: 5, scope: !9278)
!9281 = !DILocation(line: 7261, column: 3, scope: !9263)
!9282 = distinct !DISubprogram(name: "c_parser_omp_variable_list", scope: !3, file: !3, line: 7206, type: !9283, scopeLine: 7210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9285)
!9283 = !DISubroutineType(types: !9284)
!9284 = !{!718, !1896, !846, !157, !718}
!9285 = !{!9286, !9287, !9288, !9289, !9290, !9292}
!9286 = !DILocalVariable(name: "parser", arg: 1, scope: !9282, file: !3, line: 7206, type: !1896)
!9287 = !DILocalVariable(name: "clause_loc", arg: 2, scope: !9282, file: !3, line: 7207, type: !846)
!9288 = !DILocalVariable(name: "kind", arg: 3, scope: !9282, file: !3, line: 7208, type: !157)
!9289 = !DILocalVariable(name: "list", arg: 4, scope: !9282, file: !3, line: 7209, type: !718)
!9290 = !DILocalVariable(name: "t", scope: !9291, file: !3, line: 7218, type: !718)
!9291 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 7217, column: 5)
!9292 = !DILocalVariable(name: "u", scope: !9293, file: !3, line: 7227, type: !718)
!9293 = distinct !DILexicalBlock(scope: !9294, file: !3, line: 7226, column: 2)
!9294 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 7225, column: 16)
!9295 = distinct !DILexicalBlock(scope: !9296, file: !3, line: 7223, column: 16)
!9296 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 7220, column: 11)
!9297 = !DILocation(line: 0, scope: !9282)
!9298 = !DILocation(line: 7211, column: 7, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9282, file: !3, line: 7211, column: 7)
!9300 = !DILocation(line: 7212, column: 7, scope: !9299)
!9301 = !DILocation(line: 7212, column: 10, scope: !9299)
!9302 = !DILocation(line: 7212, column: 40, scope: !9299)
!9303 = !DILocation(line: 7212, column: 48, scope: !9299)
!9304 = !DILocation(line: 7211, column: 7, scope: !9282)
!9305 = !DILocation(line: 7213, column: 5, scope: !9299)
!9306 = !DILocation(line: 0, scope: !9294)
!9307 = !DILocation(line: 7215, column: 3, scope: !9282)
!9308 = !DILocation(line: 7215, column: 10, scope: !9282)
!9309 = !DILocation(line: 7216, column: 3, scope: !9282)
!9310 = !DILocation(line: 7216, column: 6, scope: !9282)
!9311 = !DILocation(line: 7216, column: 36, scope: !9282)
!9312 = !DILocation(line: 7216, column: 44, scope: !9282)
!9313 = !DILocation(line: 7218, column: 29, scope: !9291)
!9314 = !DILocation(line: 7218, column: 59, scope: !9291)
!9315 = !DILocation(line: 7218, column: 16, scope: !9291)
!9316 = !DILocation(line: 0, scope: !9291)
!9317 = !DILocation(line: 7220, column: 13, scope: !9296)
!9318 = !DILocation(line: 7220, column: 11, scope: !9291)
!9319 = !DILocation(line: 7223, column: 21, scope: !9295)
!9320 = !DILocation(line: 7223, column: 18, scope: !9295)
!9321 = !DILocation(line: 7223, column: 16, scope: !9296)
!9322 = !DILocation(line: 7233, column: 9, scope: !9294)
!9323 = !DILocation(line: 7221, column: 23, scope: !9296)
!9324 = !DILocation(line: 7221, column: 53, scope: !9296)
!9325 = !DILocation(line: 7222, column: 9, scope: !9296)
!9326 = !DILocation(line: 7222, column: 39, scope: !9296)
!9327 = !DILocation(line: 7221, column: 2, scope: !9296)
!9328 = !DILocation(line: 7235, column: 7, scope: !9291)
!9329 = !DILocation(line: 7237, column: 11, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 7237, column: 11)
!9331 = !DILocation(line: 7237, column: 11, scope: !9291)
!9332 = !DILocation(line: 7240, column: 7, scope: !9291)
!9333 = !DILocation(line: 7241, column: 5, scope: !9282)
!9334 = distinct !{!9334, !9307, !9333}
!9335 = !DILocation(line: 7243, column: 3, scope: !9282)
!9336 = !DILocation(line: 7227, column: 13, scope: !9293)
!9337 = !DILocation(line: 0, scope: !9293)
!9338 = !DILocation(line: 7228, column: 4, scope: !9293)
!9339 = !DILocation(line: 7228, column: 24, scope: !9293)
!9340 = !DILocation(line: 7229, column: 4, scope: !9293)
!9341 = !DILocation(line: 7229, column: 25, scope: !9293)
!9342 = !DILocation(line: 7231, column: 2, scope: !9293)
!9343 = distinct !DISubprogram(name: "c_parser_omp_atomic", scope: !3, file: !3, line: 7821, type: !9344, scopeLine: 7822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9346)
!9344 = !DISubroutineType(types: !9345)
!9345 = !{null, !846, !1896}
!9346 = !{!9347, !9348, !9349, !9350, !9351, !9352, !9353, !9354, !9357}
!9347 = !DILocalVariable(name: "loc", arg: 1, scope: !9343, file: !3, line: 7821, type: !846)
!9348 = !DILocalVariable(name: "parser", arg: 2, scope: !9343, file: !3, line: 7821, type: !1896)
!9349 = !DILocalVariable(name: "lhs", scope: !9343, file: !3, line: 7823, type: !718)
!9350 = !DILocalVariable(name: "rhs", scope: !9343, file: !3, line: 7823, type: !718)
!9351 = !DILocalVariable(name: "stmt", scope: !9343, file: !3, line: 7824, type: !718)
!9352 = !DILocalVariable(name: "code", scope: !9343, file: !3, line: 7825, type: !190)
!9353 = !DILocalVariable(name: "rhs_expr", scope: !9343, file: !3, line: 7826, type: !715)
!9354 = !DILocalVariable(name: "rhs_loc", scope: !9355, file: !3, line: 7891, type: !846)
!9355 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 7890, column: 7)
!9356 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 7833, column: 5)
!9357 = !DILabel(scope: !9356, name: "saw_error", file: !3, line: 7835)
!9358 = !DILocation(line: 0, scope: !9343)
!9359 = !DILocation(line: 7826, column: 3, scope: !9343)
!9360 = !DILocation(line: 7828, column: 3, scope: !9343)
!9361 = !DILocation(line: 7830, column: 9, scope: !9343)
!9362 = !DILocation(line: 7830, column: 44, scope: !9343)
!9363 = !DILocation(line: 7831, column: 9, scope: !9343)
!9364 = !DILocation(line: 7832, column: 11, scope: !9343)
!9365 = !DILocation(line: 7832, column: 3, scope: !9343)
!9366 = !DILocation(line: 7835, column: 5, scope: !9356)
!9367 = !DILocation(line: 7836, column: 7, scope: !9356)
!9368 = !DILocation(line: 7837, column: 7, scope: !9356)
!9369 = !DILocation(line: 7841, column: 13, scope: !9356)
!9370 = !DILocation(line: 7843, column: 13, scope: !9356)
!9371 = !DILocation(line: 7844, column: 7, scope: !9356)
!9372 = !DILocation(line: 7848, column: 13, scope: !9356)
!9373 = !DILocation(line: 7850, column: 13, scope: !9356)
!9374 = !DILocation(line: 7851, column: 7, scope: !9356)
!9375 = !DILocation(line: 7854, column: 15, scope: !9356)
!9376 = !DILocation(line: 7854, column: 45, scope: !9356)
!9377 = !DILocation(line: 7854, column: 7, scope: !9356)
!9378 = !DILocation(line: 7861, column: 4, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9356, file: !3, line: 7855, column: 2)
!9380 = !DILocation(line: 7864, column: 4, scope: !9379)
!9381 = !DILocation(line: 7867, column: 4, scope: !9379)
!9382 = !DILocation(line: 7870, column: 4, scope: !9379)
!9383 = !DILocation(line: 7873, column: 4, scope: !9379)
!9384 = !DILocation(line: 7876, column: 4, scope: !9379)
!9385 = !DILocation(line: 7879, column: 4, scope: !9379)
!9386 = !DILocation(line: 7882, column: 4, scope: !9379)
!9387 = !DILocation(line: 7884, column: 4, scope: !9379)
!9388 = !DILocation(line: 7886, column: 4, scope: !9379)
!9389 = !DILocation(line: 0, scope: !9379)
!9390 = !DILocation(line: 7889, column: 7, scope: !9356)
!9391 = !DILocation(line: 7891, column: 23, scope: !9355)
!9392 = !DILocation(line: 7891, column: 53, scope: !9355)
!9393 = !DILocation(line: 0, scope: !9355)
!9394 = !DILocation(line: 7892, column: 13, scope: !9355)
!9395 = !DILocation(line: 7893, column: 13, scope: !9355)
!9396 = !DILocation(line: 7895, column: 22, scope: !9356)
!9397 = !DILocation(line: 7896, column: 13, scope: !9356)
!9398 = !DILocation(line: 7897, column: 7, scope: !9356)
!9399 = !DILocation(line: 0, scope: !9356)
!9400 = !DILocation(line: 7899, column: 10, scope: !9343)
!9401 = !DILocation(line: 7900, column: 15, scope: !9402)
!9402 = distinct !DILexicalBlock(scope: !9343, file: !3, line: 7900, column: 7)
!9403 = !DILocation(line: 7900, column: 12, scope: !9402)
!9404 = !DILocation(line: 7900, column: 7, scope: !9343)
!9405 = !DILocation(line: 7901, column: 5, scope: !9402)
!9406 = !DILocation(line: 7902, column: 3, scope: !9343)
!9407 = !DILocation(line: 7903, column: 1, scope: !9343)
!9408 = distinct !DISubprogram(name: "c_parser_omp_critical", scope: !3, file: !3, line: 7927, type: !9409, scopeLine: 7928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9411)
!9409 = !DISubroutineType(types: !9410)
!9410 = !{!718, !846, !1896}
!9411 = !{!9412, !9413, !9414, !9415}
!9412 = !DILocalVariable(name: "loc", arg: 1, scope: !9408, file: !3, line: 7927, type: !846)
!9413 = !DILocalVariable(name: "parser", arg: 2, scope: !9408, file: !3, line: 7927, type: !1896)
!9414 = !DILocalVariable(name: "stmt", scope: !9408, file: !3, line: 7929, type: !718)
!9415 = !DILocalVariable(name: "name", scope: !9408, file: !3, line: 7929, type: !718)
!9416 = !DILocation(line: 0, scope: !9408)
!9417 = !DILocation(line: 7931, column: 7, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 7931, column: 7)
!9419 = !DILocation(line: 7931, column: 7, scope: !9408)
!9420 = !DILocation(line: 7933, column: 7, scope: !9421)
!9421 = distinct !DILexicalBlock(scope: !9418, file: !3, line: 7932, column: 5)
!9422 = !DILocation(line: 7934, column: 11, scope: !9423)
!9423 = distinct !DILexicalBlock(scope: !9421, file: !3, line: 7934, column: 11)
!9424 = !DILocation(line: 7934, column: 11, scope: !9421)
!9425 = !DILocation(line: 7936, column: 11, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9423, file: !3, line: 7935, column: 2)
!9427 = !DILocation(line: 7936, column: 41, scope: !9426)
!9428 = !DILocation(line: 7937, column: 4, scope: !9426)
!9429 = !DILocation(line: 7938, column: 4, scope: !9426)
!9430 = !DILocation(line: 7939, column: 2, scope: !9426)
!9431 = !DILocation(line: 7941, column: 2, scope: !9423)
!9432 = !DILocation(line: 7943, column: 12, scope: !9433)
!9433 = distinct !DILexicalBlock(scope: !9418, file: !3, line: 7943, column: 12)
!9434 = !DILocation(line: 7943, column: 12, scope: !9418)
!9435 = !DILocation(line: 7944, column: 5, scope: !9433)
!9436 = !DILocation(line: 7945, column: 3, scope: !9408)
!9437 = !DILocation(line: 7947, column: 10, scope: !9408)
!9438 = !DILocation(line: 7948, column: 10, scope: !9408)
!9439 = !DILocation(line: 7948, column: 3, scope: !9408)
!9440 = distinct !DISubprogram(name: "c_parser_omp_for", scope: !3, file: !3, line: 8276, type: !9409, scopeLine: 8277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9441)
!9441 = !{!9442, !9443, !9444, !9445, !9446}
!9442 = !DILocalVariable(name: "loc", arg: 1, scope: !9440, file: !3, line: 8276, type: !846)
!9443 = !DILocalVariable(name: "parser", arg: 2, scope: !9440, file: !3, line: 8276, type: !1896)
!9444 = !DILocalVariable(name: "block", scope: !9440, file: !3, line: 8278, type: !718)
!9445 = !DILocalVariable(name: "clauses", scope: !9440, file: !3, line: 8278, type: !718)
!9446 = !DILocalVariable(name: "ret", scope: !9440, file: !3, line: 8278, type: !718)
!9447 = !DILocation(line: 0, scope: !9440)
!9448 = !DILocation(line: 8280, column: 13, scope: !9440)
!9449 = !DILocation(line: 8283, column: 11, scope: !9440)
!9450 = !DILocation(line: 8284, column: 9, scope: !9440)
!9451 = !DILocation(line: 8285, column: 11, scope: !9440)
!9452 = !DILocation(line: 8286, column: 3, scope: !9440)
!9453 = !DILocation(line: 8288, column: 3, scope: !9440)
!9454 = distinct !DISubprogram(name: "c_parser_omp_master", scope: !3, file: !3, line: 8299, type: !9409, scopeLine: 8300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9455)
!9455 = !{!9456, !9457}
!9456 = !DILocalVariable(name: "loc", arg: 1, scope: !9454, file: !3, line: 8299, type: !846)
!9457 = !DILocalVariable(name: "parser", arg: 2, scope: !9454, file: !3, line: 8299, type: !1896)
!9458 = !DILocation(line: 0, scope: !9454)
!9459 = !DILocation(line: 8301, column: 3, scope: !9454)
!9460 = !DILocation(line: 8302, column: 36, scope: !9454)
!9461 = !DILocation(line: 8302, column: 10, scope: !9454)
!9462 = !DILocation(line: 8302, column: 3, scope: !9454)
!9463 = distinct !DISubprogram(name: "c_parser_omp_ordered", scope: !3, file: !3, line: 8313, type: !9409, scopeLine: 8314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9464)
!9464 = !{!9465, !9466}
!9465 = !DILocalVariable(name: "loc", arg: 1, scope: !9463, file: !3, line: 8313, type: !846)
!9466 = !DILocalVariable(name: "parser", arg: 2, scope: !9463, file: !3, line: 8313, type: !1896)
!9467 = !DILocation(line: 0, scope: !9463)
!9468 = !DILocation(line: 8315, column: 3, scope: !9463)
!9469 = !DILocation(line: 8316, column: 37, scope: !9463)
!9470 = !DILocation(line: 8316, column: 10, scope: !9463)
!9471 = !DILocation(line: 8316, column: 3, scope: !9463)
!9472 = distinct !DISubprogram(name: "c_parser_omp_parallel", scope: !3, file: !3, line: 8458, type: !9409, scopeLine: 8459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9473)
!9473 = !{!9474, !9475, !9476, !9477, !9478, !9479, !9480, !9481, !9482, !9483, !9484}
!9474 = !DILocalVariable(name: "loc", arg: 1, scope: !9472, file: !3, line: 8458, type: !846)
!9475 = !DILocalVariable(name: "parser", arg: 2, scope: !9472, file: !3, line: 8458, type: !1896)
!9476 = !DILocalVariable(name: "p_kind", scope: !9472, file: !3, line: 8460, type: !643)
!9477 = !DILocalVariable(name: "p_name", scope: !9472, file: !3, line: 8461, type: !922)
!9478 = !DILocalVariable(name: "stmt", scope: !9472, file: !3, line: 8462, type: !718)
!9479 = !DILocalVariable(name: "clauses", scope: !9472, file: !3, line: 8462, type: !718)
!9480 = !DILocalVariable(name: "par_clause", scope: !9472, file: !3, line: 8462, type: !718)
!9481 = !DILocalVariable(name: "ws_clause", scope: !9472, file: !3, line: 8462, type: !718)
!9482 = !DILocalVariable(name: "block", scope: !9472, file: !3, line: 8462, type: !718)
!9483 = !DILocalVariable(name: "mask", scope: !9472, file: !3, line: 8463, type: !7)
!9484 = !DILocalVariable(name: "p", scope: !9485, file: !3, line: 8475, type: !922)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 8474, column: 5)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 8473, column: 12)
!9487 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 8465, column: 7)
!9488 = !DILocation(line: 0, scope: !9472)
!9489 = !DILocation(line: 8462, column: 3, scope: !9472)
!9490 = !DILocation(line: 8465, column: 7, scope: !9487)
!9491 = !DILocation(line: 8465, column: 7, scope: !9472)
!9492 = !DILocation(line: 8467, column: 7, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 8466, column: 5)
!9494 = !DILocation(line: 8472, column: 5, scope: !9493)
!9495 = !DILocation(line: 8473, column: 12, scope: !9486)
!9496 = !DILocation(line: 8473, column: 12, scope: !9487)
!9497 = !DILocation(line: 8475, column: 23, scope: !9485)
!9498 = !DILocation(line: 0, scope: !9485)
!9499 = !DILocation(line: 8476, column: 11, scope: !9500)
!9500 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 8476, column: 11)
!9501 = !DILocation(line: 8476, column: 34, scope: !9500)
!9502 = !DILocation(line: 8476, column: 11, scope: !9485)
!9503 = !DILocation(line: 8478, column: 4, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 8477, column: 2)
!9505 = !DILocation(line: 8483, column: 2, scope: !9504)
!9506 = !DILocation(line: 0, scope: !9487)
!9507 = !DILocation(line: 8486, column: 13, scope: !9472)
!9508 = !DILocation(line: 8488, column: 3, scope: !9472)
!9509 = !DILocation(line: 8491, column: 15, scope: !9510)
!9510 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 8489, column: 5)
!9511 = !DILocation(line: 8492, column: 7, scope: !9510)
!9512 = !DILocation(line: 8493, column: 14, scope: !9510)
!9513 = !DILocation(line: 8494, column: 7, scope: !9510)
!9514 = !DILocation(line: 8497, column: 15, scope: !9510)
!9515 = !DILocation(line: 8498, column: 7, scope: !9510)
!9516 = !DILocation(line: 8499, column: 43, scope: !9510)
!9517 = !DILocation(line: 8499, column: 7, scope: !9510)
!9518 = !DILocation(line: 8500, column: 42, scope: !9510)
!9519 = !DILocation(line: 8500, column: 14, scope: !9510)
!9520 = !DILocation(line: 8501, column: 7, scope: !9510)
!9521 = !DILocation(line: 8501, column: 36, scope: !9510)
!9522 = !DILocation(line: 8502, column: 7, scope: !9510)
!9523 = !DILocation(line: 8505, column: 15, scope: !9510)
!9524 = !DILocation(line: 8506, column: 7, scope: !9510)
!9525 = !DILocation(line: 8507, column: 14, scope: !9510)
!9526 = !DILocation(line: 8508, column: 11, scope: !9527)
!9527 = distinct !DILexicalBlock(scope: !9510, file: !3, line: 8508, column: 11)
!9528 = !DILocation(line: 8508, column: 11, scope: !9510)
!9529 = !DILocation(line: 8509, column: 32, scope: !9527)
!9530 = !DILocation(line: 8509, column: 2, scope: !9527)
!9531 = !DILocation(line: 8509, column: 30, scope: !9527)
!9532 = !DILocation(line: 8510, column: 42, scope: !9510)
!9533 = !DILocation(line: 8510, column: 14, scope: !9510)
!9534 = !DILocation(line: 8511, column: 7, scope: !9510)
!9535 = !DILocation(line: 8511, column: 36, scope: !9510)
!9536 = !DILocation(line: 8512, column: 7, scope: !9510)
!9537 = !DILocation(line: 8515, column: 7, scope: !9510)
!9538 = !DILocation(line: 8516, column: 5, scope: !9510)
!9539 = !DILocation(line: 8519, column: 1, scope: !9472)
!9540 = !DILocation(line: 8518, column: 3, scope: !9472)
!9541 = distinct !DISubprogram(name: "c_parser_omp_sections", scope: !3, file: !3, line: 8422, type: !9409, scopeLine: 8423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9542)
!9542 = !{!9543, !9544, !9545, !9546, !9547}
!9543 = !DILocalVariable(name: "loc", arg: 1, scope: !9541, file: !3, line: 8422, type: !846)
!9544 = !DILocalVariable(name: "parser", arg: 2, scope: !9541, file: !3, line: 8422, type: !1896)
!9545 = !DILocalVariable(name: "block", scope: !9541, file: !3, line: 8424, type: !718)
!9546 = !DILocalVariable(name: "clauses", scope: !9541, file: !3, line: 8424, type: !718)
!9547 = !DILocalVariable(name: "ret", scope: !9541, file: !3, line: 8424, type: !718)
!9548 = !DILocation(line: 0, scope: !9541)
!9549 = !DILocation(line: 8426, column: 13, scope: !9541)
!9550 = !DILocation(line: 8429, column: 11, scope: !9541)
!9551 = !DILocation(line: 8430, column: 9, scope: !9541)
!9552 = !DILocation(line: 8431, column: 7, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 8431, column: 7)
!9554 = !DILocation(line: 8431, column: 7, scope: !9541)
!9555 = !DILocation(line: 8432, column: 5, scope: !9553)
!9556 = !DILocation(line: 8432, column: 32, scope: !9553)
!9557 = !DILocation(line: 8433, column: 11, scope: !9541)
!9558 = !DILocation(line: 8434, column: 3, scope: !9541)
!9559 = !DILocation(line: 8436, column: 3, scope: !9541)
!9560 = distinct !DISubprogram(name: "c_parser_omp_single", scope: !3, file: !3, line: 8535, type: !9409, scopeLine: 8536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9561)
!9561 = !{!9562, !9563, !9564}
!9562 = !DILocalVariable(name: "loc", arg: 1, scope: !9560, file: !3, line: 8535, type: !846)
!9563 = !DILocalVariable(name: "parser", arg: 2, scope: !9560, file: !3, line: 8535, type: !1896)
!9564 = !DILocalVariable(name: "stmt", scope: !9560, file: !3, line: 8537, type: !718)
!9565 = !DILocation(line: 0, scope: !9560)
!9566 = !DILocation(line: 8537, column: 15, scope: !9560)
!9567 = !DILocation(line: 8538, column: 3, scope: !9560)
!9568 = !DILocation(line: 8539, column: 22, scope: !9560)
!9569 = !DILocation(line: 8539, column: 3, scope: !9560)
!9570 = !DILocation(line: 8539, column: 20, scope: !9560)
!9571 = !DILocation(line: 8542, column: 7, scope: !9560)
!9572 = !DILocation(line: 8541, column: 3, scope: !9560)
!9573 = !DILocation(line: 8542, column: 5, scope: !9560)
!9574 = !DILocation(line: 8544, column: 28, scope: !9560)
!9575 = !DILocation(line: 8544, column: 26, scope: !9560)
!9576 = !DILocation(line: 8546, column: 10, scope: !9560)
!9577 = !DILocation(line: 8546, column: 3, scope: !9560)
!9578 = distinct !DISubprogram(name: "c_parser_omp_task", scope: !3, file: !3, line: 8564, type: !9409, scopeLine: 8565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9579)
!9579 = !{!9580, !9581, !9582, !9583}
!9580 = !DILocalVariable(name: "loc", arg: 1, scope: !9578, file: !3, line: 8564, type: !846)
!9581 = !DILocalVariable(name: "parser", arg: 2, scope: !9578, file: !3, line: 8564, type: !1896)
!9582 = !DILocalVariable(name: "clauses", scope: !9578, file: !3, line: 8566, type: !718)
!9583 = !DILocalVariable(name: "block", scope: !9578, file: !3, line: 8566, type: !718)
!9584 = !DILocation(line: 0, scope: !9578)
!9585 = !DILocation(line: 8568, column: 13, scope: !9578)
!9586 = !DILocation(line: 8571, column: 11, scope: !9578)
!9587 = !DILocation(line: 8572, column: 3, scope: !9578)
!9588 = !DILocation(line: 8573, column: 10, scope: !9578)
!9589 = !DILocation(line: 8573, column: 3, scope: !9578)
!9590 = distinct !DISubprogram(name: "c_parser_omp_structured_block", scope: !3, file: !3, line: 7800, type: !3767, scopeLine: 7801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9591)
!9591 = !{!9592, !9593}
!9592 = !DILocalVariable(name: "parser", arg: 1, scope: !9590, file: !3, line: 7800, type: !1896)
!9593 = !DILocalVariable(name: "stmt", scope: !9590, file: !3, line: 7802, type: !718)
!9594 = !DILocation(line: 0, scope: !9590)
!9595 = !DILocation(line: 7802, column: 15, scope: !9590)
!9596 = !DILocation(line: 7803, column: 3, scope: !9590)
!9597 = !DILocation(line: 7804, column: 10, scope: !9590)
!9598 = !DILocation(line: 7804, column: 3, scope: !9590)
!9599 = distinct !DISubprogram(name: "c_parser_omp_all_clauses", scope: !3, file: !3, line: 7689, type: !9600, scopeLine: 7691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9602)
!9600 = !DISubroutineType(types: !9601)
!9601 = !{!718, !1896, !7, !922}
!9602 = !{!9603, !9604, !9605, !9606, !9607, !9608, !9610, !9612, !9613, !9614}
!9603 = !DILocalVariable(name: "parser", arg: 1, scope: !9599, file: !3, line: 7689, type: !1896)
!9604 = !DILocalVariable(name: "mask", arg: 2, scope: !9599, file: !3, line: 7689, type: !7)
!9605 = !DILocalVariable(name: "where", arg: 3, scope: !9599, file: !3, line: 7690, type: !922)
!9606 = !DILocalVariable(name: "clauses", scope: !9599, file: !3, line: 7692, type: !718)
!9607 = !DILocalVariable(name: "first", scope: !9599, file: !3, line: 7693, type: !838)
!9608 = !DILocalVariable(name: "here", scope: !9609, file: !3, line: 7697, type: !846)
!9609 = distinct !DILexicalBlock(scope: !9599, file: !3, line: 7696, column: 5)
!9610 = !DILocalVariable(name: "c_kind", scope: !9609, file: !3, line: 7698, type: !9611)
!9611 = !DIDerivedType(tag: DW_TAG_typedef, name: "pragma_omp_clause", file: !644, line: 74, baseType: !1962)
!9612 = !DILocalVariable(name: "c_name", scope: !9609, file: !3, line: 7699, type: !922)
!9613 = !DILocalVariable(name: "prev", scope: !9609, file: !3, line: 7700, type: !718)
!9614 = !DILabel(scope: !9599, name: "saw_error", file: !3, line: 7785)
!9615 = !DILocation(line: 0, scope: !9599)
!9616 = !DILocation(line: 0, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 7776, column: 11)
!9618 = !DILocation(line: 7695, column: 3, scope: !9599)
!9619 = !DILocation(line: 7692, column: 8, scope: !9599)
!9620 = !DILocation(line: 7695, column: 10, scope: !9599)
!9621 = !DILocation(line: 0, scope: !9609)
!9622 = !DILocation(line: 7702, column: 12, scope: !9623)
!9623 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 7702, column: 11)
!9624 = !DILocation(line: 7702, column: 18, scope: !9623)
!9625 = !DILocation(line: 7702, column: 21, scope: !9623)
!9626 = !DILocation(line: 7702, column: 11, scope: !9609)
!9627 = !DILocation(line: 7703, column: 2, scope: !9623)
!9628 = !DILocation(line: 7706, column: 14, scope: !9609)
!9629 = !DILocation(line: 7706, column: 44, scope: !9609)
!9630 = !DILocation(line: 7707, column: 16, scope: !9609)
!9631 = !DILocation(line: 7709, column: 7, scope: !9609)
!9632 = !DILocation(line: 7712, column: 14, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9609, file: !3, line: 7710, column: 2)
!9634 = !DILocation(line: 7714, column: 4, scope: !9633)
!9635 = !DILocation(line: 7716, column: 14, scope: !9633)
!9636 = !DILocation(line: 7718, column: 4, scope: !9633)
!9637 = !DILocation(line: 7720, column: 14, scope: !9633)
!9638 = !DILocation(line: 7722, column: 4, scope: !9633)
!9639 = !DILocation(line: 7724, column: 14, scope: !9633)
!9640 = !DILocation(line: 7726, column: 4, scope: !9633)
!9641 = !DILocation(line: 7728, column: 14, scope: !9633)
!9642 = !DILocation(line: 7730, column: 4, scope: !9633)
!9643 = !DILocation(line: 7732, column: 14, scope: !9633)
!9644 = !DILocation(line: 7734, column: 4, scope: !9633)
!9645 = !DILocation(line: 7736, column: 14, scope: !9633)
!9646 = !DILocation(line: 7738, column: 4, scope: !9633)
!9647 = !DILocation(line: 7740, column: 14, scope: !9633)
!9648 = !DILocation(line: 7742, column: 4, scope: !9633)
!9649 = !DILocation(line: 7744, column: 14, scope: !9633)
!9650 = !DILocation(line: 7746, column: 4, scope: !9633)
!9651 = !DILocation(line: 7748, column: 14, scope: !9633)
!9652 = !DILocation(line: 7750, column: 4, scope: !9633)
!9653 = !DILocation(line: 7752, column: 14, scope: !9633)
!9654 = !DILocation(line: 7754, column: 4, scope: !9633)
!9655 = !DILocation(line: 7756, column: 14, scope: !9633)
!9656 = !DILocation(line: 7758, column: 4, scope: !9633)
!9657 = !DILocation(line: 7760, column: 14, scope: !9633)
!9658 = !DILocation(line: 7762, column: 4, scope: !9633)
!9659 = !DILocation(line: 7764, column: 14, scope: !9633)
!9660 = !DILocation(line: 7766, column: 4, scope: !9633)
!9661 = !DILocation(line: 7768, column: 14, scope: !9633)
!9662 = !DILocation(line: 7770, column: 4, scope: !9633)
!9663 = !DILocation(line: 7772, column: 4, scope: !9633)
!9664 = !DILocation(line: 7773, column: 4, scope: !9633)
!9665 = !DILocation(line: 0, scope: !9633)
!9666 = !DILocation(line: 7776, column: 34, scope: !9617)
!9667 = !DILocation(line: 7776, column: 39, scope: !9617)
!9668 = !DILocation(line: 7776, column: 51, scope: !9617)
!9669 = !DILocation(line: 7776, column: 43, scope: !9617)
!9670 = !DILocation(line: 7776, column: 11, scope: !9609)
!9671 = !DILocation(line: 7781, column: 4, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 7777, column: 2)
!9673 = !DILocation(line: 7782, column: 2, scope: !9672)
!9674 = distinct !{!9674, !9618, !9675}
!9675 = !DILocation(line: 7783, column: 5, scope: !9599)
!9676 = !DILocation(line: 7785, column: 2, scope: !9599)
!9677 = !DILocation(line: 7786, column: 3, scope: !9599)
!9678 = !DILocation(line: 7788, column: 10, scope: !9599)
!9679 = !DILocation(line: 7788, column: 3, scope: !9599)
!9680 = !DILocation(line: 7789, column: 1, scope: !9599)
!9681 = distinct !DISubprogram(name: "c_parser_omp_for_loop", scope: !3, file: !3, line: 7977, type: !9682, scopeLine: 7979, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9684)
!9682 = !DISubroutineType(types: !9683)
!9683 = !{!718, !846, !1896, !718, !1623}
!9684 = !{!9685, !9686, !9687, !9688, !9689, !9690, !9691, !9692, !9693, !9694, !9695, !9696, !9697, !9698, !9699, !9700, !9701, !9702, !9703, !9704, !9705, !9706, !9707, !9708, !9709, !9710, !9714, !9718, !9719, !9720, !9723, !9724, !9727, !9730, !9733, !9739, !9746, !9754, !9756, !9757}
!9685 = !DILocalVariable(name: "loc", arg: 1, scope: !9681, file: !3, line: 7977, type: !846)
!9686 = !DILocalVariable(name: "parser", arg: 2, scope: !9681, file: !3, line: 7978, type: !1896)
!9687 = !DILocalVariable(name: "clauses", arg: 3, scope: !9681, file: !3, line: 7978, type: !718)
!9688 = !DILocalVariable(name: "par_clauses", arg: 4, scope: !9681, file: !3, line: 7978, type: !1623)
!9689 = !DILocalVariable(name: "decl", scope: !9681, file: !3, line: 7980, type: !718)
!9690 = !DILocalVariable(name: "cond", scope: !9681, file: !3, line: 7980, type: !718)
!9691 = !DILocalVariable(name: "incr", scope: !9681, file: !3, line: 7980, type: !718)
!9692 = !DILocalVariable(name: "save_break", scope: !9681, file: !3, line: 7980, type: !718)
!9693 = !DILocalVariable(name: "save_cont", scope: !9681, file: !3, line: 7980, type: !718)
!9694 = !DILocalVariable(name: "body", scope: !9681, file: !3, line: 7980, type: !718)
!9695 = !DILocalVariable(name: "init", scope: !9681, file: !3, line: 7980, type: !718)
!9696 = !DILocalVariable(name: "stmt", scope: !9681, file: !3, line: 7980, type: !718)
!9697 = !DILocalVariable(name: "cl", scope: !9681, file: !3, line: 7980, type: !718)
!9698 = !DILocalVariable(name: "declv", scope: !9681, file: !3, line: 7981, type: !718)
!9699 = !DILocalVariable(name: "condv", scope: !9681, file: !3, line: 7981, type: !718)
!9700 = !DILocalVariable(name: "incrv", scope: !9681, file: !3, line: 7981, type: !718)
!9701 = !DILocalVariable(name: "initv", scope: !9681, file: !3, line: 7981, type: !718)
!9702 = !DILocalVariable(name: "for_block", scope: !9681, file: !3, line: 7981, type: !718)
!9703 = !DILocalVariable(name: "ret", scope: !9681, file: !3, line: 7981, type: !718)
!9704 = !DILocalVariable(name: "fail", scope: !9681, file: !3, line: 7982, type: !838)
!9705 = !DILocalVariable(name: "open_brace_parsed", scope: !9681, file: !3, line: 7982, type: !838)
!9706 = !DILocalVariable(name: "i", scope: !9681, file: !3, line: 7983, type: !815)
!9707 = !DILocalVariable(name: "collapse", scope: !9681, file: !3, line: 7983, type: !815)
!9708 = !DILocalVariable(name: "nbraces", scope: !9681, file: !3, line: 7983, type: !815)
!9709 = !DILocalVariable(name: "for_loc", scope: !9681, file: !3, line: 7984, type: !846)
!9710 = !DILocalVariable(name: "bracecount", scope: !9711, file: !3, line: 8007, type: !815)
!9711 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 8006, column: 5)
!9712 = distinct !DILexicalBlock(scope: !9713, file: !3, line: 8005, column: 3)
!9713 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 8005, column: 3)
!9714 = !DILocalVariable(name: "decl_exp", scope: !9715, file: !3, line: 8029, type: !715)
!9715 = distinct !DILexicalBlock(scope: !9716, file: !3, line: 8028, column: 2)
!9716 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 8026, column: 16)
!9717 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 8013, column: 11)
!9718 = !DILocalVariable(name: "init_exp", scope: !9715, file: !3, line: 8030, type: !715)
!9719 = !DILocalVariable(name: "init_loc", scope: !9715, file: !3, line: 8031, type: !846)
!9720 = !DILocalVariable(name: "cond_loc", scope: !9721, file: !3, line: 8063, type: !846)
!9721 = distinct !DILexicalBlock(scope: !9722, file: !3, line: 8062, column: 2)
!9722 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 8061, column: 11)
!9723 = !DILocalVariable(name: "cond_expr", scope: !9721, file: !3, line: 8064, type: !715)
!9724 = !DILocalVariable(name: "incr_loc", scope: !9725, file: !3, line: 8090, type: !846)
!9725 = distinct !DILexicalBlock(scope: !9726, file: !3, line: 8089, column: 2)
!9726 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 8088, column: 11)
!9727 = !DILocalVariable(name: "here", scope: !9728, file: !3, line: 8156, type: !846)
!9728 = distinct !DILexicalBlock(scope: !9729, file: !3, line: 8155, column: 5)
!9729 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 8154, column: 7)
!9730 = !DILocalVariable(name: "t", scope: !9731, file: !3, line: 8165, type: !718)
!9731 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 8164, column: 5)
!9732 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 8163, column: 7)
!9733 = !DILocalVariable(name: "here", scope: !9734, file: !3, line: 8188, type: !846)
!9734 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 8187, column: 6)
!9735 = distinct !DILexicalBlock(scope: !9736, file: !3, line: 8184, column: 2)
!9736 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 8181, column: 16)
!9737 = distinct !DILexicalBlock(scope: !9738, file: !3, line: 8176, column: 11)
!9738 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 8175, column: 5)
!9739 = !DILocalVariable(name: "c", scope: !9740, file: !3, line: 8208, type: !1623)
!9740 = distinct !DILexicalBlock(scope: !9741, file: !3, line: 8207, column: 6)
!9741 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 8206, column: 8)
!9742 = distinct !DILexicalBlock(scope: !9743, file: !3, line: 8205, column: 2)
!9743 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 8204, column: 11)
!9744 = distinct !DILexicalBlock(scope: !9745, file: !3, line: 8202, column: 5)
!9745 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 8201, column: 7)
!9746 = !DILocalVariable(name: "l", scope: !9747, file: !3, line: 8232, type: !718)
!9747 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 8228, column: 9)
!9748 = distinct !DILexicalBlock(scope: !9749, file: !3, line: 8220, column: 16)
!9749 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 8218, column: 11)
!9750 = distinct !DILexicalBlock(scope: !9751, file: !3, line: 8214, column: 5)
!9751 = distinct !DILexicalBlock(scope: !9752, file: !3, line: 8210, column: 7)
!9752 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 8209, column: 8)
!9753 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 8209, column: 8)
!9754 = !DILabel(scope: !9755, name: "error_init", file: !3, line: 8050)
!9755 = distinct !DILexicalBlock(scope: !9716, file: !3, line: 8049, column: 2)
!9756 = !DILabel(scope: !9711, name: "parse_next", file: !3, line: 8107)
!9757 = !DILabel(scope: !9681, name: "pop_scopes", file: !3, line: 8245)
!9758 = !DILocation(line: 0, scope: !9681)
!9759 = !DILocation(line: 7986, column: 8, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 7986, column: 3)
!9761 = !DILocation(line: 0, scope: !9760)
!9762 = !DILocation(line: 7986, column: 3, scope: !9760)
!9763 = !DILocation(line: 7987, column: 9, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 7987, column: 9)
!9765 = distinct !DILexicalBlock(scope: !9760, file: !3, line: 7986, column: 3)
!9766 = !DILocation(line: 7987, column: 30, scope: !9764)
!9767 = !DILocation(line: 7987, column: 9, scope: !9765)
!9768 = !DILocation(line: 7988, column: 32, scope: !9764)
!9769 = !DILocation(line: 7988, column: 18, scope: !9764)
!9770 = !DILocation(line: 7988, column: 7, scope: !9764)
!9771 = !DILocation(line: 7986, column: 31, scope: !9765)
!9772 = !DILocation(line: 7986, column: 3, scope: !9765)
!9773 = distinct !{!9773, !9762, !9774}
!9774 = !DILocation(line: 7988, column: 64, scope: !9760)
!9775 = !DILocation(line: 7990, column: 3, scope: !9681)
!9776 = !DILocation(line: 7992, column: 11, scope: !9681)
!9777 = !DILocation(line: 7993, column: 11, scope: !9681)
!9778 = !DILocation(line: 7994, column: 11, scope: !9681)
!9779 = !DILocation(line: 7995, column: 11, scope: !9681)
!9780 = !DILocation(line: 7997, column: 8, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 7997, column: 7)
!9782 = !DILocation(line: 7997, column: 7, scope: !9681)
!9783 = !DILocation(line: 7999, column: 7, scope: !9784)
!9784 = distinct !DILexicalBlock(scope: !9781, file: !3, line: 7998, column: 5)
!9785 = !DILocation(line: 8000, column: 7, scope: !9784)
!9786 = !DILocation(line: 8002, column: 13, scope: !9681)
!9787 = !DILocation(line: 8002, column: 43, scope: !9681)
!9788 = !DILocation(line: 8003, column: 3, scope: !9681)
!9789 = !DILocation(line: 0, scope: !9715)
!9790 = !DILocation(line: 0, scope: !9721)
!9791 = !DILocation(line: 0, scope: !9725)
!9792 = !DILocation(line: 0, scope: !9793)
!9793 = distinct !DILexicalBlock(scope: !9794, file: !3, line: 8100, column: 2)
!9794 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 8097, column: 11)
!9795 = !DILocation(line: 8005, column: 8, scope: !9713)
!9796 = !DILocation(line: 7982, column: 22, scope: !9681)
!9797 = !DILocation(line: 7983, column: 10, scope: !9681)
!9798 = !DILocation(line: 7983, column: 24, scope: !9681)
!9799 = !DILocation(line: 8005, column: 17, scope: !9712)
!9800 = !DILocation(line: 8005, column: 3, scope: !9713)
!9801 = !DILocation(line: 0, scope: !9711)
!9802 = !DILocation(line: 8009, column: 12, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 8009, column: 11)
!9804 = !DILocation(line: 8009, column: 11, scope: !9711)
!9805 = !DILocation(line: 8013, column: 11, scope: !9717)
!9806 = !DILocation(line: 8013, column: 11, scope: !9711)
!9807 = !DILocation(line: 8015, column: 10, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 8015, column: 8)
!9809 = distinct !DILexicalBlock(scope: !9717, file: !3, line: 8014, column: 2)
!9810 = !DILocation(line: 8015, column: 8, scope: !9809)
!9811 = !DILocation(line: 8017, column: 10, scope: !9808)
!9812 = !DILocation(line: 8016, column: 6, scope: !9808)
!9813 = !DILocation(line: 8018, column: 4, scope: !9809)
!9814 = !DILocation(line: 8019, column: 11, scope: !9809)
!9815 = !DILocation(line: 8020, column: 13, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 8020, column: 8)
!9817 = !DILocation(line: 8020, column: 8, scope: !9809)
!9818 = !DILocation(line: 8022, column: 8, scope: !9819)
!9819 = distinct !DILexicalBlock(scope: !9809, file: !3, line: 8022, column: 8)
!9820 = !DILocation(line: 8022, column: 31, scope: !9819)
!9821 = !DILocation(line: 8022, column: 28, scope: !9819)
!9822 = !DILocation(line: 8022, column: 8, scope: !9809)
!9823 = !DILocation(line: 8025, column: 2, scope: !9809)
!9824 = !DILocation(line: 8026, column: 16, scope: !9716)
!9825 = !DILocation(line: 8027, column: 9, scope: !9716)
!9826 = !DILocation(line: 8027, column: 12, scope: !9716)
!9827 = !DILocation(line: 8027, column: 46, scope: !9716)
!9828 = !DILocation(line: 8027, column: 51, scope: !9716)
!9829 = !DILocation(line: 8026, column: 16, scope: !9717)
!9830 = !DILocation(line: 8029, column: 4, scope: !9715)
!9831 = !DILocation(line: 8030, column: 4, scope: !9715)
!9832 = !DILocation(line: 8033, column: 15, scope: !9715)
!9833 = !DILocation(line: 8034, column: 20, scope: !9715)
!9834 = !DILocation(line: 8036, column: 4, scope: !9715)
!9835 = !DILocation(line: 8038, column: 15, scope: !9715)
!9836 = !DILocation(line: 8038, column: 45, scope: !9715)
!9837 = !DILocation(line: 8039, column: 15, scope: !9715)
!9838 = !DILocation(line: 8040, column: 15, scope: !9715)
!9839 = !DILocation(line: 8041, column: 55, scope: !9715)
!9840 = !DILocation(line: 8042, column: 38, scope: !9715)
!9841 = !DILocation(line: 8043, column: 18, scope: !9715)
!9842 = !DILocation(line: 8041, column: 11, scope: !9715)
!9843 = !DILocation(line: 8044, column: 11, scope: !9715)
!9844 = !DILocation(line: 8046, column: 4, scope: !9715)
!9845 = !DILocation(line: 8047, column: 2, scope: !9716)
!9846 = !DILocation(line: 8050, column: 2, scope: !9755)
!9847 = !DILocation(line: 8051, column: 4, scope: !9755)
!9848 = !DILocation(line: 8053, column: 4, scope: !9755)
!9849 = !DILocation(line: 8056, column: 4, scope: !9755)
!9850 = !DILocation(line: 0, scope: !9717)
!9851 = !DILocation(line: 8061, column: 11, scope: !9722)
!9852 = !DILocation(line: 8061, column: 11, scope: !9711)
!9853 = !DILocation(line: 8063, column: 26, scope: !9721)
!9854 = !DILocation(line: 8063, column: 56, scope: !9721)
!9855 = !DILocation(line: 8064, column: 4, scope: !9721)
!9856 = !DILocation(line: 8064, column: 30, scope: !9721)
!9857 = !DILocation(line: 8066, column: 21, scope: !9721)
!9858 = !DILocation(line: 8067, column: 11, scope: !9721)
!9859 = !DILocation(line: 8068, column: 11, scope: !9721)
!9860 = !DILocation(line: 8069, column: 22, scope: !9721)
!9861 = !DILocation(line: 8069, column: 4, scope: !9721)
!9862 = !DILocation(line: 8079, column: 15, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9721, file: !3, line: 8070, column: 6)
!9864 = !DILocation(line: 8080, column: 8, scope: !9863)
!9865 = !DILocation(line: 8082, column: 4, scope: !9721)
!9866 = !DILocation(line: 8083, column: 2, scope: !9722)
!9867 = !DILocation(line: 8083, column: 2, scope: !9721)
!9868 = !DILocation(line: 8084, column: 7, scope: !9711)
!9869 = !DILocation(line: 8088, column: 11, scope: !9726)
!9870 = !DILocation(line: 8088, column: 11, scope: !9711)
!9871 = !DILocation(line: 8090, column: 26, scope: !9725)
!9872 = !DILocation(line: 8090, column: 56, scope: !9725)
!9873 = !DILocation(line: 8093, column: 11, scope: !9725)
!9874 = !DILocation(line: 8093, column: 40, scope: !9725)
!9875 = !DILocation(line: 8092, column: 11, scope: !9725)
!9876 = !DILocation(line: 8094, column: 2, scope: !9725)
!9877 = !DILocation(line: 8095, column: 7, scope: !9711)
!9878 = !DILocation(line: 8097, column: 16, scope: !9794)
!9879 = !DILocation(line: 8097, column: 35, scope: !9794)
!9880 = !DILocation(line: 8097, column: 32, scope: !9794)
!9881 = !DILocation(line: 8097, column: 24, scope: !9794)
!9882 = !DILocation(line: 8097, column: 59, scope: !9794)
!9883 = !DILocation(line: 8101, column: 4, scope: !9793)
!9884 = !DILocation(line: 8101, column: 28, scope: !9793)
!9885 = !DILocation(line: 8102, column: 4, scope: !9793)
!9886 = !DILocation(line: 8102, column: 28, scope: !9793)
!9887 = !DILocation(line: 8103, column: 4, scope: !9793)
!9888 = !DILocation(line: 8103, column: 28, scope: !9793)
!9889 = !DILocation(line: 8104, column: 4, scope: !9793)
!9890 = !DILocation(line: 8104, column: 28, scope: !9793)
!9891 = !DILocation(line: 8017, column: 8, scope: !9808)
!9892 = !DILocation(line: 8107, column: 5, scope: !9711)
!9893 = !DILocation(line: 8108, column: 25, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 8108, column: 11)
!9895 = !DILocation(line: 8108, column: 13, scope: !9894)
!9896 = !DILocation(line: 8108, column: 11, scope: !9711)
!9897 = !DILocation(line: 8117, column: 8, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9711, file: !3, line: 8116, column: 2)
!9899 = !DILocation(line: 8117, column: 8, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 8117, column: 8)
!9901 = !DILocation(line: 8119, column: 8, scope: !9902)
!9902 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 8118, column: 6)
!9903 = !DILocation(line: 8120, column: 8, scope: !9902)
!9904 = !DILocation(line: 8122, column: 13, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 8122, column: 13)
!9906 = !DILocation(line: 8122, column: 13, scope: !9900)
!9907 = !DILocation(line: 8124, column: 8, scope: !9908)
!9908 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 8123, column: 6)
!9909 = !DILocation(line: 8125, column: 18, scope: !9908)
!9910 = !DILocation(line: 8126, column: 6, scope: !9908)
!9911 = !DILocation(line: 8127, column: 13, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 8127, column: 13)
!9913 = !DILocation(line: 8128, column: 6, scope: !9912)
!9914 = !DILocation(line: 8128, column: 9, scope: !9912)
!9915 = !DILocation(line: 8127, column: 13, scope: !9905)
!9916 = !DILocation(line: 8129, column: 6, scope: !9912)
!9917 = !DILocation(line: 8132, column: 8, scope: !9918)
!9918 = distinct !DILexicalBlock(scope: !9912, file: !3, line: 8131, column: 6)
!9919 = !DILocation(line: 8133, column: 12, scope: !9920)
!9920 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 8133, column: 12)
!9921 = !DILocation(line: 8136, column: 15, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9920, file: !3, line: 8134, column: 3)
!9923 = !DILocation(line: 8133, column: 12, scope: !9918)
!9924 = !DILocation(line: 8140, column: 8, scope: !9918)
!9925 = !DILocation(line: 8142, column: 2, scope: !9898)
!9926 = !DILocation(line: 8145, column: 15, scope: !9711)
!9927 = !DILocation(line: 8146, column: 5, scope: !9712)
!9928 = !DILocation(line: 8005, column: 30, scope: !9712)
!9929 = !DILocation(line: 8005, column: 3, scope: !9712)
!9930 = distinct !{!9930, !9800, !9931}
!9931 = !DILocation(line: 8146, column: 5, scope: !9713)
!9932 = !DILocation(line: 8148, column: 16, scope: !9681)
!9933 = !DILocation(line: 8149, column: 19, scope: !9681)
!9934 = !DILocation(line: 8149, column: 17, scope: !9681)
!9935 = !DILocation(line: 8150, column: 15, scope: !9681)
!9936 = !DILocation(line: 8151, column: 16, scope: !9681)
!9937 = !DILocation(line: 8152, column: 10, scope: !9681)
!9938 = !DILocation(line: 8154, column: 7, scope: !9729)
!9939 = !DILocation(line: 8154, column: 7, scope: !9681)
!9940 = !DILocation(line: 8156, column: 25, scope: !9728)
!9941 = !DILocation(line: 8156, column: 55, scope: !9728)
!9942 = !DILocation(line: 0, scope: !9728)
!9943 = !DILocation(line: 8157, column: 14, scope: !9728)
!9944 = !DILocation(line: 8158, column: 7, scope: !9728)
!9945 = !DILocation(line: 8159, column: 17, scope: !9728)
!9946 = !DILocation(line: 8159, column: 7, scope: !9728)
!9947 = !DILocation(line: 8160, column: 5, scope: !9728)
!9948 = !DILocation(line: 8162, column: 15, scope: !9729)
!9949 = !DILocation(line: 8162, column: 5, scope: !9729)
!9950 = !DILocation(line: 8163, column: 7, scope: !9732)
!9951 = !DILocation(line: 8163, column: 7, scope: !9681)
!9952 = !DILocation(line: 8165, column: 16, scope: !9731)
!9953 = !DILocation(line: 0, scope: !9731)
!9954 = !DILocation(line: 8166, column: 7, scope: !9731)
!9955 = !DILocation(line: 8167, column: 7, scope: !9731)
!9956 = !DILocation(line: 8168, column: 5, scope: !9731)
!9957 = !DILocation(line: 8170, column: 10, scope: !9681)
!9958 = !DILocation(line: 8171, column: 17, scope: !9681)
!9959 = !DILocation(line: 8172, column: 16, scope: !9681)
!9960 = !DILocation(line: 8174, column: 3, scope: !9681)
!9961 = !DILocation(line: 8176, column: 11, scope: !9737)
!9962 = !DILocation(line: 8176, column: 11, scope: !9738)
!9963 = !DILocation(line: 8178, column: 4, scope: !9964)
!9964 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 8177, column: 2)
!9965 = !DILocation(line: 8179, column: 11, scope: !9964)
!9966 = !DILocation(line: 8180, column: 2, scope: !9964)
!9967 = !DILocation(line: 8181, column: 16, scope: !9736)
!9968 = !DILocation(line: 8181, column: 16, scope: !9737)
!9969 = !DILocation(line: 8182, column: 2, scope: !9736)
!9970 = !DILocation(line: 8185, column: 4, scope: !9735)
!9971 = !DILocation(line: 8186, column: 4, scope: !9735)
!9972 = !DILocation(line: 8188, column: 26, scope: !9734)
!9973 = !DILocation(line: 8188, column: 56, scope: !9734)
!9974 = !DILocation(line: 0, scope: !9734)
!9975 = !DILocation(line: 8189, column: 15, scope: !9734)
!9976 = !DILocation(line: 8190, column: 8, scope: !9734)
!9977 = !DILocation(line: 8191, column: 8, scope: !9734)
!9978 = !DILocation(line: 8192, column: 15, scope: !9734)
!9979 = !DILocation(line: 8193, column: 15, scope: !9734)
!9980 = distinct !{!9980, !9971, !9981}
!9981 = !DILocation(line: 8194, column: 6, scope: !9735)
!9982 = distinct !{!9982, !9960, !9983}
!9983 = !DILocation(line: 8197, column: 5, scope: !9681)
!9984 = !DILocation(line: 8201, column: 8, scope: !9745)
!9985 = !DILocation(line: 8201, column: 7, scope: !9681)
!9986 = !DILocation(line: 8203, column: 14, scope: !9744)
!9987 = !DILocation(line: 8204, column: 11, scope: !9743)
!9988 = !DILocation(line: 8204, column: 11, scope: !9744)
!9989 = !DILocation(line: 8206, column: 20, scope: !9741)
!9990 = !DILocation(line: 8206, column: 8, scope: !9742)
!9991 = !DILocation(line: 8209, column: 8, scope: !9753)
!9992 = !DILocation(line: 0, scope: !9753)
!9993 = !DILocation(line: 0, scope: !9740)
!9994 = !DILocation(line: 8209, column: 30, scope: !9752)
!9995 = !DILocation(line: 8210, column: 7, scope: !9751)
!9996 = !DILocation(line: 8210, column: 28, scope: !9751)
!9997 = !DILocation(line: 8211, column: 7, scope: !9751)
!9998 = !DILocation(line: 8211, column: 31, scope: !9751)
!9999 = !DILocation(line: 8210, column: 7, scope: !9752)
!10000 = !DILocation(line: 8212, column: 10, scope: !9751)
!10001 = !DILocation(line: 8212, column: 5, scope: !9751)
!10002 = !DILocation(line: 8215, column: 12, scope: !10003)
!10003 = distinct !DILexicalBlock(scope: !9750, file: !3, line: 8215, column: 7)
!10004 = !DILocation(line: 0, scope: !10003)
!10005 = !DILocation(line: 8215, column: 21, scope: !10006)
!10006 = distinct !DILexicalBlock(scope: !10003, file: !3, line: 8215, column: 7)
!10007 = !DILocation(line: 8215, column: 7, scope: !10003)
!10008 = !DILocation(line: 8216, column: 13, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 8216, column: 13)
!10010 = !DILocation(line: 8216, column: 40, scope: !10009)
!10011 = !DILocation(line: 8216, column: 37, scope: !10009)
!10012 = !DILocation(line: 8216, column: 13, scope: !10006)
!10013 = !DILocation(line: 8215, column: 34, scope: !10006)
!10014 = !DILocation(line: 8215, column: 7, scope: !10006)
!10015 = distinct !{!10015, !10007, !10016}
!10016 = !DILocation(line: 8217, column: 4, scope: !10003)
!10017 = !DILocation(line: 8218, column: 13, scope: !9749)
!10018 = !DILocation(line: 8218, column: 11, scope: !9750)
!10019 = !DILocation(line: 8219, column: 14, scope: !9749)
!10020 = !DILocation(line: 8219, column: 9, scope: !9749)
!10021 = !DILocation(line: 8220, column: 16, scope: !9749)
!10022 = !DILocation(line: 8224, column: 7, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 8221, column: 9)
!10024 = !DILocation(line: 8222, column: 4, scope: !10023)
!10025 = !DILocation(line: 8225, column: 9, scope: !10023)
!10026 = !DILocation(line: 8225, column: 7, scope: !10023)
!10027 = !DILocation(line: 8226, column: 9, scope: !10023)
!10028 = !DILocation(line: 8232, column: 31, scope: !9747)
!10029 = !DILocation(line: 8232, column: 13, scope: !9747)
!10030 = !DILocation(line: 0, scope: !9747)
!10031 = !DILocation(line: 8234, column: 26, scope: !9747)
!10032 = !DILocation(line: 8234, column: 4, scope: !9747)
!10033 = !DILocation(line: 8234, column: 24, scope: !9747)
!10034 = !DILocation(line: 8235, column: 4, scope: !9747)
!10035 = !DILocation(line: 8235, column: 25, scope: !9747)
!10036 = !DILocation(line: 8237, column: 4, scope: !9747)
!10037 = !DILocation(line: 0, scope: !9751)
!10038 = !DILocation(line: 8209, column: 8, scope: !9752)
!10039 = distinct !{!10039, !9991, !10040}
!10040 = !DILocation(line: 8239, column: 5, scope: !9753)
!10041 = !DILocation(line: 8241, column: 4, scope: !9742)
!10042 = !DILocation(line: 8241, column: 27, scope: !9742)
!10043 = !DILocation(line: 8242, column: 2, scope: !9742)
!10044 = !DILocation(line: 8246, column: 3, scope: !9681)
!10045 = !DILocation(line: 7981, column: 54, scope: !9681)
!10046 = !DILocation(line: 8245, column: 1, scope: !9681)
!10047 = !DILocation(line: 8251, column: 40, scope: !10048)
!10048 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 8247, column: 5)
!10049 = !DILocation(line: 8251, column: 14, scope: !10048)
!10050 = !DILocation(line: 8252, column: 7, scope: !10048)
!10051 = !DILocation(line: 8253, column: 19, scope: !10048)
!10052 = distinct !{!10052, !10044, !10053}
!10053 = !DILocation(line: 8254, column: 5, scope: !9681)
!10054 = !DILocation(line: 8256, column: 1, scope: !9681)
!10055 = distinct !DISubprogram(name: "c_parser_omp_clause_name", scope: !3, file: !3, line: 7109, type: !10056, scopeLine: 7110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10058)
!10056 = !DISubroutineType(types: !10057)
!10057 = !{!9611, !1896}
!10058 = !{!10059, !10060, !10061}
!10059 = !DILocalVariable(name: "parser", arg: 1, scope: !10055, file: !3, line: 7109, type: !1896)
!10060 = !DILocalVariable(name: "result", scope: !10055, file: !3, line: 7111, type: !9611)
!10061 = !DILocalVariable(name: "p", scope: !10062, file: !3, line: 7119, type: !922)
!10062 = distinct !DILexicalBlock(scope: !10063, file: !3, line: 7118, column: 5)
!10063 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 7117, column: 12)
!10064 = distinct !DILexicalBlock(scope: !10065, file: !3, line: 7115, column: 12)
!10065 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 7113, column: 7)
!10066 = !DILocation(line: 0, scope: !10055)
!10067 = !DILocation(line: 7113, column: 7, scope: !10065)
!10068 = !DILocation(line: 7113, column: 7, scope: !10055)
!10069 = !DILocation(line: 7115, column: 12, scope: !10064)
!10070 = !DILocation(line: 7115, column: 12, scope: !10065)
!10071 = !DILocation(line: 7117, column: 12, scope: !10063)
!10072 = !DILocation(line: 7117, column: 12, scope: !10064)
!10073 = !DILocation(line: 7119, column: 23, scope: !10062)
!10074 = !DILocation(line: 0, scope: !10062)
!10075 = !DILocation(line: 7121, column: 15, scope: !10062)
!10076 = !DILocation(line: 7121, column: 7, scope: !10062)
!10077 = !DILocation(line: 7124, column: 9, scope: !10078)
!10078 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 7124, column: 8)
!10079 = distinct !DILexicalBlock(scope: !10062, file: !3, line: 7122, column: 2)
!10080 = !DILocation(line: 7124, column: 8, scope: !10079)
!10081 = !DILocation(line: 7126, column: 14, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 7126, column: 13)
!10083 = !DILocation(line: 7126, column: 13, scope: !10078)
!10084 = !DILocation(line: 7128, column: 21, scope: !10085)
!10085 = distinct !DILexicalBlock(scope: !10082, file: !3, line: 7128, column: 20)
!10086 = !DILocation(line: 7128, column: 20, scope: !10082)
!10087 = !DILocation(line: 7132, column: 9, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 7132, column: 8)
!10089 = !DILocation(line: 7132, column: 8, scope: !10079)
!10090 = !DILocation(line: 7134, column: 4, scope: !10079)
!10091 = !DILocation(line: 7136, column: 9, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 7136, column: 8)
!10093 = !DILocation(line: 7136, column: 8, scope: !10079)
!10094 = !DILocation(line: 7138, column: 4, scope: !10079)
!10095 = !DILocation(line: 7140, column: 9, scope: !10096)
!10096 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 7140, column: 8)
!10097 = !DILocation(line: 7140, column: 8, scope: !10079)
!10098 = !DILocation(line: 7142, column: 14, scope: !10099)
!10099 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 7142, column: 13)
!10100 = !DILocation(line: 7142, column: 13, scope: !10096)
!10101 = !DILocation(line: 7146, column: 9, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 7146, column: 8)
!10103 = !DILocation(line: 7146, column: 8, scope: !10079)
!10104 = !DILocation(line: 7148, column: 4, scope: !10079)
!10105 = !DILocation(line: 7150, column: 9, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 7150, column: 8)
!10107 = !DILocation(line: 7150, column: 8, scope: !10079)
!10108 = !DILocation(line: 7152, column: 4, scope: !10079)
!10109 = !DILocation(line: 7154, column: 9, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 7154, column: 8)
!10111 = !DILocation(line: 7154, column: 8, scope: !10079)
!10112 = !DILocation(line: 7156, column: 4, scope: !10079)
!10113 = !DILocation(line: 7158, column: 9, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 7158, column: 8)
!10115 = !DILocation(line: 7158, column: 8, scope: !10079)
!10116 = !DILocation(line: 7160, column: 14, scope: !10117)
!10117 = distinct !DILexicalBlock(scope: !10114, file: !3, line: 7160, column: 13)
!10118 = !DILocation(line: 7160, column: 13, scope: !10114)
!10119 = !DILocation(line: 7164, column: 9, scope: !10120)
!10120 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 7164, column: 8)
!10121 = !DILocation(line: 7164, column: 8, scope: !10079)
!10122 = !DILocation(line: 7166, column: 4, scope: !10079)
!10123 = !DILocation(line: 0, scope: !10065)
!10124 = !DILocation(line: 7170, column: 14, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10055, file: !3, line: 7170, column: 7)
!10126 = !DILocation(line: 7170, column: 7, scope: !10055)
!10127 = !DILocation(line: 7171, column: 5, scope: !10125)
!10128 = !DILocation(line: 7173, column: 3, scope: !10055)
!10129 = distinct !DISubprogram(name: "c_parser_omp_clause_collapse", scope: !3, file: !3, line: 7268, type: !10130, scopeLine: 7269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10132)
!10130 = !DISubroutineType(types: !10131)
!10131 = !{!718, !1896, !718}
!10132 = !{!10133, !10134, !10135, !10136, !10137, !10138}
!10133 = !DILocalVariable(name: "parser", arg: 1, scope: !10129, file: !3, line: 7268, type: !1896)
!10134 = !DILocalVariable(name: "list", arg: 2, scope: !10129, file: !3, line: 7268, type: !718)
!10135 = !DILocalVariable(name: "c", scope: !10129, file: !3, line: 7270, type: !718)
!10136 = !DILocalVariable(name: "num", scope: !10129, file: !3, line: 7270, type: !718)
!10137 = !DILocalVariable(name: "n", scope: !10129, file: !3, line: 7271, type: !774)
!10138 = !DILocalVariable(name: "loc", scope: !10129, file: !3, line: 7272, type: !846)
!10139 = !DILocation(line: 0, scope: !10129)
!10140 = !DILocation(line: 7270, column: 17, scope: !10129)
!10141 = !DILocation(line: 7274, column: 3, scope: !10129)
!10142 = !DILocation(line: 7276, column: 9, scope: !10129)
!10143 = !DILocation(line: 7276, column: 39, scope: !10129)
!10144 = !DILocation(line: 7277, column: 7, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 7277, column: 7)
!10146 = !DILocation(line: 7277, column: 7, scope: !10129)
!10147 = !DILocation(line: 7279, column: 13, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10145, file: !3, line: 7278, column: 5)
!10149 = !DILocation(line: 7279, column: 52, scope: !10148)
!10150 = !DILocation(line: 7280, column: 7, scope: !10148)
!10151 = !DILocation(line: 7281, column: 5, scope: !10148)
!10152 = !DILocation(line: 7282, column: 14, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 7282, column: 7)
!10154 = !DILocation(line: 7282, column: 11, scope: !10153)
!10155 = !DILocation(line: 7282, column: 7, scope: !10129)
!10156 = !DILocation(line: 7284, column: 8, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 7284, column: 7)
!10158 = !DILocation(line: 7285, column: 7, scope: !10157)
!10159 = !DILocation(line: 7285, column: 11, scope: !10157)
!10160 = !DILocation(line: 7286, column: 7, scope: !10157)
!10161 = !DILocation(line: 7286, column: 15, scope: !10157)
!10162 = !DILocation(line: 7286, column: 38, scope: !10157)
!10163 = !DILocation(line: 7287, column: 7, scope: !10157)
!10164 = !DILocation(line: 7287, column: 18, scope: !10157)
!10165 = !DILocation(line: 7284, column: 7, scope: !10129)
!10166 = !DILocation(line: 7289, column: 7, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 7288, column: 5)
!10168 = !DILocation(line: 7291, column: 7, scope: !10167)
!10169 = !DILocation(line: 7293, column: 7, scope: !10129)
!10170 = !DILocation(line: 7294, column: 3, scope: !10129)
!10171 = !DILocation(line: 7294, column: 32, scope: !10129)
!10172 = !DILocation(line: 7295, column: 3, scope: !10129)
!10173 = !DILocation(line: 7295, column: 24, scope: !10129)
!10174 = !DILocation(line: 7296, column: 3, scope: !10129)
!10175 = !DILocation(line: 7297, column: 1, scope: !10129)
!10176 = distinct !DISubprogram(name: "c_parser_omp_clause_copyin", scope: !3, file: !3, line: 7303, type: !10130, scopeLine: 7304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10177)
!10177 = !{!10178, !10179}
!10178 = !DILocalVariable(name: "parser", arg: 1, scope: !10176, file: !3, line: 7303, type: !1896)
!10179 = !DILocalVariable(name: "list", arg: 2, scope: !10176, file: !3, line: 7303, type: !718)
!10180 = !DILocation(line: 0, scope: !10176)
!10181 = !DILocation(line: 7305, column: 10, scope: !10176)
!10182 = !DILocation(line: 7305, column: 3, scope: !10176)
!10183 = distinct !DISubprogram(name: "c_parser_omp_clause_copyprivate", scope: !3, file: !3, line: 7312, type: !10130, scopeLine: 7313, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10184)
!10184 = !{!10185, !10186}
!10185 = !DILocalVariable(name: "parser", arg: 1, scope: !10183, file: !3, line: 7312, type: !1896)
!10186 = !DILocalVariable(name: "list", arg: 2, scope: !10183, file: !3, line: 7312, type: !718)
!10187 = !DILocation(line: 0, scope: !10183)
!10188 = !DILocation(line: 7314, column: 10, scope: !10183)
!10189 = !DILocation(line: 7314, column: 3, scope: !10183)
!10190 = distinct !DISubprogram(name: "c_parser_omp_clause_default", scope: !3, file: !3, line: 7321, type: !10130, scopeLine: 7322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10191)
!10191 = !{!10192, !10193, !10194, !10195, !10196, !10197, !10200}
!10192 = !DILocalVariable(name: "parser", arg: 1, scope: !10190, file: !3, line: 7321, type: !1896)
!10193 = !DILocalVariable(name: "list", arg: 2, scope: !10190, file: !3, line: 7321, type: !718)
!10194 = !DILocalVariable(name: "kind", scope: !10190, file: !3, line: 7323, type: !176)
!10195 = !DILocalVariable(name: "loc", scope: !10190, file: !3, line: 7324, type: !846)
!10196 = !DILocalVariable(name: "c", scope: !10190, file: !3, line: 7325, type: !718)
!10197 = !DILocalVariable(name: "p", scope: !10198, file: !3, line: 7331, type: !922)
!10198 = distinct !DILexicalBlock(scope: !10199, file: !3, line: 7330, column: 5)
!10199 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 7329, column: 7)
!10200 = !DILabel(scope: !10201, name: "invalid_kind", file: !3, line: 7355)
!10201 = distinct !DILexicalBlock(scope: !10199, file: !3, line: 7354, column: 5)
!10202 = !DILocation(line: 0, scope: !10190)
!10203 = !DILocation(line: 7324, column: 20, scope: !10190)
!10204 = !DILocation(line: 7324, column: 50, scope: !10190)
!10205 = !DILocation(line: 7327, column: 8, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 7327, column: 7)
!10207 = !DILocation(line: 7327, column: 7, scope: !10190)
!10208 = !DILocation(line: 7329, column: 7, scope: !10199)
!10209 = !DILocation(line: 7329, column: 7, scope: !10190)
!10210 = !DILocation(line: 7331, column: 23, scope: !10198)
!10211 = !DILocation(line: 0, scope: !10198)
!10212 = !DILocation(line: 7333, column: 15, scope: !10198)
!10213 = !DILocation(line: 7333, column: 7, scope: !10198)
!10214 = !DILocation(line: 7336, column: 8, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 7336, column: 8)
!10216 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 7334, column: 2)
!10217 = !DILocation(line: 7336, column: 27, scope: !10215)
!10218 = !DILocation(line: 7336, column: 8, scope: !10216)
!10219 = !DILocation(line: 7342, column: 8, scope: !10220)
!10220 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 7342, column: 8)
!10221 = !DILocation(line: 7342, column: 29, scope: !10220)
!10222 = !DILocation(line: 7342, column: 8, scope: !10216)
!10223 = !DILocation(line: 0, scope: !10216)
!10224 = !DILocation(line: 7351, column: 7, scope: !10198)
!10225 = !DILocation(line: 7352, column: 5, scope: !10199)
!10226 = !DILocation(line: 7323, column: 32, scope: !10190)
!10227 = !DILocation(line: 7355, column: 5, scope: !10201)
!10228 = !DILocation(line: 7356, column: 7, scope: !10201)
!10229 = !DILocation(line: 7358, column: 3, scope: !10190)
!10230 = !DILocation(line: 7360, column: 12, scope: !10231)
!10231 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 7360, column: 7)
!10232 = !DILocation(line: 7360, column: 7, scope: !10190)
!10233 = !DILocation(line: 7363, column: 3, scope: !10190)
!10234 = !DILocation(line: 7364, column: 7, scope: !10190)
!10235 = !DILocation(line: 7365, column: 3, scope: !10190)
!10236 = !DILocation(line: 7365, column: 24, scope: !10190)
!10237 = !DILocation(line: 7366, column: 3, scope: !10190)
!10238 = !DILocation(line: 7366, column: 31, scope: !10190)
!10239 = !DILocation(line: 7368, column: 3, scope: !10190)
!10240 = !DILocation(line: 7369, column: 1, scope: !10190)
!10241 = distinct !DISubprogram(name: "c_parser_omp_clause_firstprivate", scope: !3, file: !3, line: 7375, type: !10130, scopeLine: 7376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10242)
!10242 = !{!10243, !10244}
!10243 = !DILocalVariable(name: "parser", arg: 1, scope: !10241, file: !3, line: 7375, type: !1896)
!10244 = !DILocalVariable(name: "list", arg: 2, scope: !10241, file: !3, line: 7375, type: !718)
!10245 = !DILocation(line: 0, scope: !10241)
!10246 = !DILocation(line: 7377, column: 10, scope: !10241)
!10247 = !DILocation(line: 7377, column: 3, scope: !10241)
!10248 = distinct !DISubprogram(name: "c_parser_omp_clause_if", scope: !3, file: !3, line: 7384, type: !10130, scopeLine: 7385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10249)
!10249 = !{!10250, !10251, !10252, !10253, !10256}
!10250 = !DILocalVariable(name: "parser", arg: 1, scope: !10248, file: !3, line: 7384, type: !1896)
!10251 = !DILocalVariable(name: "list", arg: 2, scope: !10248, file: !3, line: 7384, type: !718)
!10252 = !DILocalVariable(name: "loc", scope: !10248, file: !3, line: 7386, type: !846)
!10253 = !DILocalVariable(name: "t", scope: !10254, file: !3, line: 7389, type: !718)
!10254 = distinct !DILexicalBlock(scope: !10255, file: !3, line: 7388, column: 5)
!10255 = distinct !DILexicalBlock(scope: !10248, file: !3, line: 7387, column: 7)
!10256 = !DILocalVariable(name: "c", scope: !10254, file: !3, line: 7390, type: !718)
!10257 = !DILocation(line: 0, scope: !10248)
!10258 = !DILocation(line: 7386, column: 20, scope: !10248)
!10259 = !DILocation(line: 7386, column: 50, scope: !10248)
!10260 = !DILocation(line: 7387, column: 7, scope: !10255)
!10261 = !DILocation(line: 7387, column: 7, scope: !10248)
!10262 = !DILocation(line: 7389, column: 16, scope: !10254)
!10263 = !DILocation(line: 0, scope: !10254)
!10264 = !DILocation(line: 7392, column: 7, scope: !10254)
!10265 = !DILocation(line: 7394, column: 11, scope: !10254)
!10266 = !DILocation(line: 7395, column: 7, scope: !10254)
!10267 = !DILocation(line: 7395, column: 30, scope: !10254)
!10268 = !DILocation(line: 7396, column: 7, scope: !10254)
!10269 = !DILocation(line: 7396, column: 28, scope: !10254)
!10270 = !DILocation(line: 7398, column: 5, scope: !10254)
!10271 = !DILocation(line: 7400, column: 5, scope: !10255)
!10272 = !DILocation(line: 7402, column: 3, scope: !10248)
!10273 = distinct !DISubprogram(name: "c_parser_omp_clause_lastprivate", scope: !3, file: !3, line: 7409, type: !10130, scopeLine: 7410, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10274)
!10274 = !{!10275, !10276}
!10275 = !DILocalVariable(name: "parser", arg: 1, scope: !10273, file: !3, line: 7409, type: !1896)
!10276 = !DILocalVariable(name: "list", arg: 2, scope: !10273, file: !3, line: 7409, type: !718)
!10277 = !DILocation(line: 0, scope: !10273)
!10278 = !DILocation(line: 7411, column: 10, scope: !10273)
!10279 = !DILocation(line: 7411, column: 3, scope: !10273)
!10280 = distinct !DISubprogram(name: "c_parser_omp_clause_nowait", scope: !3, file: !3, line: 7418, type: !10130, scopeLine: 7419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10281)
!10281 = !{!10282, !10283, !10284, !10285}
!10282 = !DILocalVariable(name: "parser", arg: 1, scope: !10280, file: !3, line: 7418, type: !1896)
!10283 = !DILocalVariable(name: "list", arg: 2, scope: !10280, file: !3, line: 7418, type: !718)
!10284 = !DILocalVariable(name: "c", scope: !10280, file: !3, line: 7420, type: !718)
!10285 = !DILocalVariable(name: "loc", scope: !10280, file: !3, line: 7421, type: !846)
!10286 = !DILocation(line: 0, scope: !10280)
!10287 = !DILocation(line: 7421, column: 20, scope: !10280)
!10288 = !DILocation(line: 7421, column: 50, scope: !10280)
!10289 = !DILocation(line: 7423, column: 3, scope: !10280)
!10290 = !DILocation(line: 7425, column: 7, scope: !10280)
!10291 = !DILocation(line: 7426, column: 3, scope: !10280)
!10292 = !DILocation(line: 7426, column: 24, scope: !10280)
!10293 = !DILocation(line: 7427, column: 3, scope: !10280)
!10294 = distinct !DISubprogram(name: "c_parser_omp_clause_num_threads", scope: !3, file: !3, line: 7434, type: !10130, scopeLine: 7435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10295)
!10295 = !{!10296, !10297, !10298, !10299, !10302, !10303}
!10296 = !DILocalVariable(name: "parser", arg: 1, scope: !10294, file: !3, line: 7434, type: !1896)
!10297 = !DILocalVariable(name: "list", arg: 2, scope: !10294, file: !3, line: 7434, type: !718)
!10298 = !DILocalVariable(name: "num_threads_loc", scope: !10294, file: !3, line: 7436, type: !846)
!10299 = !DILocalVariable(name: "expr_loc", scope: !10300, file: !3, line: 7439, type: !846)
!10300 = distinct !DILexicalBlock(scope: !10301, file: !3, line: 7438, column: 5)
!10301 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 7437, column: 7)
!10302 = !DILocalVariable(name: "c", scope: !10300, file: !3, line: 7440, type: !718)
!10303 = !DILocalVariable(name: "t", scope: !10300, file: !3, line: 7440, type: !718)
!10304 = !DILocation(line: 0, scope: !10294)
!10305 = !DILocation(line: 7436, column: 32, scope: !10294)
!10306 = !DILocation(line: 7436, column: 62, scope: !10294)
!10307 = !DILocation(line: 7437, column: 7, scope: !10301)
!10308 = !DILocation(line: 7437, column: 7, scope: !10294)
!10309 = !DILocation(line: 7439, column: 29, scope: !10300)
!10310 = !DILocation(line: 7439, column: 59, scope: !10300)
!10311 = !DILocation(line: 0, scope: !10300)
!10312 = !DILocation(line: 7440, column: 19, scope: !10300)
!10313 = !DILocation(line: 7440, column: 48, scope: !10300)
!10314 = !DILocation(line: 7441, column: 11, scope: !10300)
!10315 = !DILocation(line: 7443, column: 7, scope: !10300)
!10316 = !DILocation(line: 7445, column: 12, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10300, file: !3, line: 7445, column: 11)
!10318 = !DILocation(line: 7445, column: 11, scope: !10300)
!10319 = !DILocation(line: 7447, column: 4, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10317, file: !3, line: 7446, column: 2)
!10321 = !DILocation(line: 7448, column: 4, scope: !10320)
!10322 = !DILocation(line: 7452, column: 11, scope: !10300)
!10323 = !DILocation(line: 7454, column: 11, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10300, file: !3, line: 7454, column: 11)
!10325 = !DILocation(line: 7454, column: 11, scope: !10300)
!10326 = !DILocation(line: 7455, column: 2, scope: !10324)
!10327 = !DILocation(line: 7456, column: 16, scope: !10328)
!10328 = distinct !DILexicalBlock(scope: !10300, file: !3, line: 7456, column: 11)
!10329 = !DILocation(line: 7456, column: 13, scope: !10328)
!10330 = !DILocation(line: 7456, column: 11, scope: !10300)
!10331 = !DILocation(line: 7458, column: 4, scope: !10332)
!10332 = distinct !DILexicalBlock(scope: !10328, file: !3, line: 7457, column: 2)
!10333 = !DILocation(line: 7460, column: 8, scope: !10332)
!10334 = !DILocation(line: 7461, column: 2, scope: !10332)
!10335 = !DILocation(line: 7463, column: 7, scope: !10300)
!10336 = !DILocation(line: 7465, column: 11, scope: !10300)
!10337 = !DILocation(line: 7466, column: 7, scope: !10300)
!10338 = !DILocation(line: 7466, column: 39, scope: !10300)
!10339 = !DILocation(line: 7467, column: 7, scope: !10300)
!10340 = !DILocation(line: 7467, column: 28, scope: !10300)
!10341 = !DILocation(line: 7469, column: 5, scope: !10301)
!10342 = !DILocation(line: 7471, column: 3, scope: !10294)
!10343 = !DILocation(line: 7472, column: 1, scope: !10294)
!10344 = distinct !DISubprogram(name: "c_parser_omp_clause_ordered", scope: !3, file: !3, line: 7478, type: !10130, scopeLine: 7479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10345)
!10345 = !{!10346, !10347, !10348}
!10346 = !DILocalVariable(name: "parser", arg: 1, scope: !10344, file: !3, line: 7478, type: !1896)
!10347 = !DILocalVariable(name: "list", arg: 2, scope: !10344, file: !3, line: 7478, type: !718)
!10348 = !DILocalVariable(name: "c", scope: !10344, file: !3, line: 7480, type: !718)
!10349 = !DILocation(line: 0, scope: !10344)
!10350 = !DILocation(line: 7482, column: 3, scope: !10344)
!10351 = !DILocation(line: 7484, column: 25, scope: !10344)
!10352 = !DILocation(line: 7484, column: 55, scope: !10344)
!10353 = !DILocation(line: 7484, column: 7, scope: !10344)
!10354 = !DILocation(line: 7486, column: 3, scope: !10344)
!10355 = !DILocation(line: 7486, column: 24, scope: !10344)
!10356 = !DILocation(line: 7488, column: 3, scope: !10344)
!10357 = distinct !DISubprogram(name: "c_parser_omp_clause_private", scope: !3, file: !3, line: 7495, type: !10130, scopeLine: 7496, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10358)
!10358 = !{!10359, !10360}
!10359 = !DILocalVariable(name: "parser", arg: 1, scope: !10357, file: !3, line: 7495, type: !1896)
!10360 = !DILocalVariable(name: "list", arg: 2, scope: !10357, file: !3, line: 7495, type: !718)
!10361 = !DILocation(line: 0, scope: !10357)
!10362 = !DILocation(line: 7497, column: 10, scope: !10357)
!10363 = !DILocation(line: 7497, column: 3, scope: !10357)
!10364 = distinct !DISubprogram(name: "c_parser_omp_clause_reduction", scope: !3, file: !3, line: 7507, type: !10130, scopeLine: 7508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10365)
!10365 = !{!10366, !10367, !10368, !10369, !10372, !10375}
!10366 = !DILocalVariable(name: "parser", arg: 1, scope: !10364, file: !3, line: 7507, type: !1896)
!10367 = !DILocalVariable(name: "list", arg: 2, scope: !10364, file: !3, line: 7507, type: !718)
!10368 = !DILocalVariable(name: "clause_loc", scope: !10364, file: !3, line: 7509, type: !846)
!10369 = !DILocalVariable(name: "code", scope: !10370, file: !3, line: 7512, type: !190)
!10370 = distinct !DILexicalBlock(scope: !10371, file: !3, line: 7511, column: 5)
!10371 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 7510, column: 7)
!10372 = !DILocalVariable(name: "nl", scope: !10373, file: !3, line: 7550, type: !718)
!10373 = distinct !DILexicalBlock(scope: !10374, file: !3, line: 7549, column: 2)
!10374 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 7548, column: 11)
!10375 = !DILocalVariable(name: "c", scope: !10373, file: !3, line: 7550, type: !718)
!10376 = !DILocation(line: 0, scope: !10364)
!10377 = !DILocation(line: 7509, column: 27, scope: !10364)
!10378 = !DILocation(line: 7509, column: 57, scope: !10364)
!10379 = !DILocation(line: 7510, column: 7, scope: !10371)
!10380 = !DILocation(line: 7510, column: 7, scope: !10364)
!10381 = !DILocation(line: 7514, column: 15, scope: !10370)
!10382 = !DILocation(line: 7514, column: 45, scope: !10370)
!10383 = !DILocation(line: 7514, column: 7, scope: !10370)
!10384 = !DILocation(line: 0, scope: !10370)
!10385 = !DILocation(line: 7521, column: 4, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10370, file: !3, line: 7515, column: 2)
!10387 = !DILocation(line: 7524, column: 4, scope: !10386)
!10388 = !DILocation(line: 7527, column: 4, scope: !10386)
!10389 = !DILocation(line: 7530, column: 4, scope: !10386)
!10390 = !DILocation(line: 7533, column: 4, scope: !10386)
!10391 = !DILocation(line: 7536, column: 4, scope: !10386)
!10392 = !DILocation(line: 7539, column: 4, scope: !10386)
!10393 = !DILocation(line: 7541, column: 4, scope: !10386)
!10394 = !DILocation(line: 7544, column: 4, scope: !10386)
!10395 = !DILocation(line: 7545, column: 4, scope: !10386)
!10396 = !DILocation(line: 0, scope: !10386)
!10397 = !DILocation(line: 7547, column: 7, scope: !10370)
!10398 = !DILocation(line: 7548, column: 11, scope: !10374)
!10399 = !DILocation(line: 7548, column: 11, scope: !10370)
!10400 = !DILocation(line: 7552, column: 9, scope: !10373)
!10401 = !DILocation(line: 0, scope: !10373)
!10402 = !DILocation(line: 7554, column: 9, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10373, file: !3, line: 7554, column: 4)
!10404 = !DILocation(line: 0, scope: !10403)
!10405 = !DILocation(line: 7554, column: 19, scope: !10406)
!10406 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 7554, column: 4)
!10407 = !DILocation(line: 7554, column: 4, scope: !10403)
!10408 = !DILocation(line: 7555, column: 6, scope: !10406)
!10409 = !DILocation(line: 7555, column: 36, scope: !10406)
!10410 = !DILocation(line: 7554, column: 32, scope: !10406)
!10411 = !DILocation(line: 7554, column: 4, scope: !10406)
!10412 = distinct !{!10412, !10407, !10413}
!10413 = !DILocation(line: 7555, column: 38, scope: !10403)
!10414 = !DILocation(line: 7559, column: 7, scope: !10370)
!10415 = !DILocation(line: 7560, column: 5, scope: !10371)
!10416 = !DILocation(line: 7561, column: 3, scope: !10364)
!10417 = !DILocation(line: 7562, column: 1, scope: !10364)
!10418 = distinct !DISubprogram(name: "c_parser_omp_clause_schedule", scope: !3, file: !3, line: 7573, type: !10130, scopeLine: 7574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10419)
!10419 = !{!10420, !10421, !10422, !10423, !10424, !10425, !10428, !10429, !10432}
!10420 = !DILocalVariable(name: "parser", arg: 1, scope: !10418, file: !3, line: 7573, type: !1896)
!10421 = !DILocalVariable(name: "list", arg: 2, scope: !10418, file: !3, line: 7573, type: !718)
!10422 = !DILocalVariable(name: "c", scope: !10418, file: !3, line: 7575, type: !718)
!10423 = !DILocalVariable(name: "t", scope: !10418, file: !3, line: 7575, type: !718)
!10424 = !DILocalVariable(name: "loc", scope: !10418, file: !3, line: 7576, type: !846)
!10425 = !DILocalVariable(name: "kind", scope: !10426, file: !3, line: 7585, type: !718)
!10426 = distinct !DILexicalBlock(scope: !10427, file: !3, line: 7584, column: 5)
!10427 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 7583, column: 7)
!10428 = !DILocalVariable(name: "p", scope: !10426, file: !3, line: 7586, type: !922)
!10429 = !DILocalVariable(name: "here", scope: !10430, file: !3, line: 7622, type: !846)
!10430 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 7621, column: 5)
!10431 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 7620, column: 7)
!10432 = !DILabel(scope: !10418, name: "invalid_kind", file: !3, line: 7651)
!10433 = !DILocation(line: 0, scope: !10418)
!10434 = !DILocation(line: 7576, column: 20, scope: !10418)
!10435 = !DILocation(line: 7576, column: 50, scope: !10418)
!10436 = !DILocation(line: 7578, column: 8, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 7578, column: 7)
!10438 = !DILocation(line: 7578, column: 7, scope: !10418)
!10439 = !DILocation(line: 7581, column: 7, scope: !10418)
!10440 = !DILocation(line: 7583, column: 7, scope: !10427)
!10441 = !DILocation(line: 7583, column: 7, scope: !10418)
!10442 = !DILocation(line: 7585, column: 19, scope: !10426)
!10443 = !DILocation(line: 7585, column: 49, scope: !10426)
!10444 = !DILocation(line: 7586, column: 23, scope: !10426)
!10445 = !DILocation(line: 0, scope: !10426)
!10446 = !DILocation(line: 7588, column: 15, scope: !10426)
!10447 = !DILocation(line: 7588, column: 7, scope: !10426)
!10448 = !DILocation(line: 7591, column: 8, scope: !10449)
!10449 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 7591, column: 8)
!10450 = distinct !DILexicalBlock(scope: !10426, file: !3, line: 7589, column: 2)
!10451 = !DILocation(line: 7591, column: 30, scope: !10449)
!10452 = !DILocation(line: 7591, column: 8, scope: !10450)
!10453 = !DILocation(line: 7593, column: 4, scope: !10450)
!10454 = !DILocation(line: 7593, column: 33, scope: !10450)
!10455 = !DILocation(line: 7594, column: 4, scope: !10450)
!10456 = !DILocation(line: 7597, column: 8, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 7597, column: 8)
!10458 = !DILocation(line: 7597, column: 29, scope: !10457)
!10459 = !DILocation(line: 7597, column: 8, scope: !10450)
!10460 = !DILocation(line: 7599, column: 4, scope: !10450)
!10461 = !DILocation(line: 7599, column: 33, scope: !10450)
!10462 = !DILocation(line: 7600, column: 4, scope: !10450)
!10463 = !DILocation(line: 7603, column: 8, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10450, file: !3, line: 7603, column: 8)
!10465 = !DILocation(line: 7603, column: 30, scope: !10464)
!10466 = !DILocation(line: 7603, column: 8, scope: !10450)
!10467 = !DILocation(line: 7605, column: 4, scope: !10450)
!10468 = !DILocation(line: 7605, column: 33, scope: !10450)
!10469 = !DILocation(line: 7606, column: 4, scope: !10450)
!10470 = !DILocation(line: 7612, column: 12, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10427, file: !3, line: 7612, column: 12)
!10472 = !DILocation(line: 7612, column: 12, scope: !10427)
!10473 = !DILocation(line: 7613, column: 5, scope: !10471)
!10474 = !DILocation(line: 7613, column: 34, scope: !10471)
!10475 = !DILocation(line: 7614, column: 12, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 7614, column: 12)
!10477 = !DILocation(line: 7614, column: 12, scope: !10471)
!10478 = !DILocation(line: 7615, column: 5, scope: !10476)
!10479 = !DILocation(line: 7615, column: 34, scope: !10476)
!10480 = !DILocation(line: 7619, column: 3, scope: !10418)
!10481 = !DILocation(line: 7620, column: 7, scope: !10431)
!10482 = !DILocation(line: 7620, column: 7, scope: !10418)
!10483 = !DILocation(line: 7623, column: 7, scope: !10430)
!10484 = !DILocation(line: 7625, column: 14, scope: !10430)
!10485 = !DILocation(line: 7625, column: 44, scope: !10430)
!10486 = !DILocation(line: 0, scope: !10430)
!10487 = !DILocation(line: 7626, column: 11, scope: !10430)
!10488 = !DILocation(line: 7626, column: 50, scope: !10430)
!10489 = !DILocation(line: 7627, column: 11, scope: !10430)
!10490 = !DILocation(line: 7629, column: 11, scope: !10491)
!10491 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 7629, column: 11)
!10492 = !DILocation(line: 7629, column: 40, scope: !10491)
!10493 = !DILocation(line: 7629, column: 11, scope: !10430)
!10494 = !DILocation(line: 7630, column: 2, scope: !10491)
!10495 = !DILocation(line: 7632, column: 45, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10491, file: !3, line: 7632, column: 16)
!10497 = !DILocation(line: 7632, column: 16, scope: !10491)
!10498 = !DILocation(line: 7633, column: 2, scope: !10496)
!10499 = !DILocation(line: 7636, column: 16, scope: !10500)
!10500 = distinct !DILexicalBlock(scope: !10496, file: !3, line: 7636, column: 16)
!10501 = !DILocation(line: 7636, column: 42, scope: !10500)
!10502 = !DILocation(line: 7636, column: 16, scope: !10496)
!10503 = !DILocation(line: 7637, column: 2, scope: !10500)
!10504 = !DILocation(line: 7637, column: 37, scope: !10500)
!10505 = !DILocation(line: 7639, column: 2, scope: !10500)
!10506 = !DILocation(line: 7641, column: 7, scope: !10430)
!10507 = !DILocation(line: 7642, column: 5, scope: !10430)
!10508 = !DILocation(line: 7644, column: 5, scope: !10431)
!10509 = !DILocation(line: 7647, column: 3, scope: !10418)
!10510 = !DILocation(line: 7648, column: 3, scope: !10418)
!10511 = !DILocation(line: 7648, column: 24, scope: !10418)
!10512 = !DILocation(line: 7649, column: 3, scope: !10418)
!10513 = !DILocation(line: 7651, column: 2, scope: !10418)
!10514 = !DILocation(line: 7652, column: 3, scope: !10418)
!10515 = !DILocation(line: 7653, column: 3, scope: !10418)
!10516 = !DILocation(line: 7654, column: 3, scope: !10418)
!10517 = !DILocation(line: 7655, column: 1, scope: !10418)
!10518 = distinct !DISubprogram(name: "c_parser_omp_clause_shared", scope: !3, file: !3, line: 7661, type: !10130, scopeLine: 7662, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10519)
!10519 = !{!10520, !10521}
!10520 = !DILocalVariable(name: "parser", arg: 1, scope: !10518, file: !3, line: 7661, type: !1896)
!10521 = !DILocalVariable(name: "list", arg: 2, scope: !10518, file: !3, line: 7661, type: !718)
!10522 = !DILocation(line: 0, scope: !10518)
!10523 = !DILocation(line: 7663, column: 10, scope: !10518)
!10524 = !DILocation(line: 7663, column: 3, scope: !10518)
!10525 = distinct !DISubprogram(name: "c_parser_omp_clause_untied", scope: !3, file: !3, line: 7670, type: !10130, scopeLine: 7671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10526)
!10526 = !{!10527, !10528, !10529}
!10527 = !DILocalVariable(name: "parser", arg: 1, scope: !10525, file: !3, line: 7670, type: !1896)
!10528 = !DILocalVariable(name: "list", arg: 2, scope: !10525, file: !3, line: 7670, type: !718)
!10529 = !DILocalVariable(name: "c", scope: !10525, file: !3, line: 7672, type: !718)
!10530 = !DILocation(line: 0, scope: !10525)
!10531 = !DILocation(line: 7675, column: 3, scope: !10525)
!10532 = !DILocation(line: 7677, column: 25, scope: !10525)
!10533 = !DILocation(line: 7677, column: 55, scope: !10525)
!10534 = !DILocation(line: 7677, column: 7, scope: !10525)
!10535 = !DILocation(line: 7679, column: 3, scope: !10525)
!10536 = !DILocation(line: 7679, column: 24, scope: !10525)
!10537 = !DILocation(line: 7681, column: 3, scope: !10525)
!10538 = distinct !DISubprogram(name: "check_no_duplicate_clause", scope: !3, file: !3, line: 7179, type: !10539, scopeLine: 7181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10541)
!10539 = !DISubroutineType(types: !10540)
!10540 = !{null, !718, !157, !922}
!10541 = !{!10542, !10543, !10544, !10545, !10546}
!10542 = !DILocalVariable(name: "clauses", arg: 1, scope: !10538, file: !3, line: 7179, type: !718)
!10543 = !DILocalVariable(name: "code", arg: 2, scope: !10538, file: !3, line: 7179, type: !157)
!10544 = !DILocalVariable(name: "name", arg: 3, scope: !10538, file: !3, line: 7180, type: !922)
!10545 = !DILocalVariable(name: "c", scope: !10538, file: !3, line: 7182, type: !718)
!10546 = !DILocalVariable(name: "loc", scope: !10547, file: !3, line: 7187, type: !846)
!10547 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 7186, column: 7)
!10548 = distinct !DILexicalBlock(scope: !10549, file: !3, line: 7185, column: 9)
!10549 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 7184, column: 3)
!10550 = distinct !DILexicalBlock(scope: !10538, file: !3, line: 7184, column: 3)
!10551 = !DILocation(line: 0, scope: !10538)
!10552 = !DILocation(line: 7184, column: 8, scope: !10550)
!10553 = !DILocation(line: 0, scope: !10550)
!10554 = !DILocation(line: 7184, column: 3, scope: !10550)
!10555 = !DILocation(line: 7185, column: 9, scope: !10548)
!10556 = !DILocation(line: 7185, column: 29, scope: !10548)
!10557 = !DILocation(line: 7185, column: 9, scope: !10549)
!10558 = !DILocation(line: 7187, column: 19, scope: !10547)
!10559 = !DILocation(line: 0, scope: !10547)
!10560 = !DILocation(line: 7188, column: 2, scope: !10547)
!10561 = !DILocation(line: 7184, column: 29, scope: !10549)
!10562 = !DILocation(line: 7184, column: 3, scope: !10549)
!10563 = distinct !{!10563, !10554, !10564}
!10564 = !DILocation(line: 7190, column: 7, scope: !10550)
!10565 = !DILocation(line: 7191, column: 1, scope: !10538)
!10566 = distinct !DISubprogram(name: "c_parser_omp_sections_scope", scope: !3, file: !3, line: 8331, type: !9409, scopeLine: 8332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10567)
!10567 = !{!10568, !10569, !10570, !10571, !10572, !10573}
!10568 = !DILocalVariable(name: "sections_loc", arg: 1, scope: !10566, file: !3, line: 8331, type: !846)
!10569 = !DILocalVariable(name: "parser", arg: 2, scope: !10566, file: !3, line: 8331, type: !1896)
!10570 = !DILocalVariable(name: "stmt", scope: !10566, file: !3, line: 8333, type: !718)
!10571 = !DILocalVariable(name: "substmt", scope: !10566, file: !3, line: 8333, type: !718)
!10572 = !DILocalVariable(name: "error_suppress", scope: !10566, file: !3, line: 8334, type: !838)
!10573 = !DILocalVariable(name: "loc", scope: !10566, file: !3, line: 8335, type: !846)
!10574 = !DILocation(line: 0, scope: !10566)
!10575 = !DILocation(line: 8337, column: 9, scope: !10566)
!10576 = !DILocation(line: 8337, column: 39, scope: !10566)
!10577 = !DILocation(line: 8338, column: 8, scope: !10578)
!10578 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 8338, column: 7)
!10579 = !DILocation(line: 8338, column: 7, scope: !10566)
!10580 = !DILocation(line: 8341, column: 15, scope: !10581)
!10581 = distinct !DILexicalBlock(scope: !10578, file: !3, line: 8339, column: 5)
!10582 = !DILocation(line: 8341, column: 21, scope: !10581)
!10583 = !DILocation(line: 8342, column: 7, scope: !10581)
!10584 = !DILocation(line: 8345, column: 10, scope: !10566)
!10585 = !DILocation(line: 8347, column: 7, scope: !10586)
!10586 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 8347, column: 7)
!10587 = !DILocation(line: 8347, column: 37, scope: !10586)
!10588 = !DILocation(line: 8347, column: 49, scope: !10586)
!10589 = !DILocation(line: 8347, column: 7, scope: !10566)
!10590 = !DILocation(line: 8349, column: 17, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10586, file: !3, line: 8348, column: 5)
!10592 = !DILocation(line: 8351, column: 7, scope: !10591)
!10593 = !DILocation(line: 8353, column: 11, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 8352, column: 2)
!10595 = !DILocation(line: 8355, column: 8, scope: !10596)
!10596 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 8355, column: 8)
!10597 = !DILocation(line: 8355, column: 38, scope: !10596)
!10598 = !DILocation(line: 8355, column: 50, scope: !10596)
!10599 = !DILocation(line: 8355, column: 8, scope: !10594)
!10600 = !DILocation(line: 8357, column: 8, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 8357, column: 8)
!10602 = !DILocation(line: 8357, column: 8, scope: !10594)
!10603 = !DILocation(line: 8359, column: 8, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10594, file: !3, line: 8359, column: 8)
!10605 = !DILocation(line: 8359, column: 8, scope: !10594)
!10606 = distinct !{!10606, !10592, !10607}
!10607 = !DILocation(line: 8361, column: 2, scope: !10591)
!10608 = !DILocation(line: 8363, column: 17, scope: !10591)
!10609 = !DILocation(line: 8364, column: 17, scope: !10591)
!10610 = !DILocation(line: 8365, column: 7, scope: !10591)
!10611 = !DILocation(line: 8366, column: 7, scope: !10591)
!10612 = !DILocation(line: 8367, column: 5, scope: !10591)
!10613 = !DILocation(line: 8369, column: 3, scope: !10566)
!10614 = !DILocation(line: 8371, column: 11, scope: !10615)
!10615 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 8371, column: 11)
!10616 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 8370, column: 5)
!10617 = !DILocation(line: 8371, column: 11, scope: !10616)
!10618 = !DILocation(line: 8373, column: 11, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 8373, column: 11)
!10620 = !DILocation(line: 8373, column: 11, scope: !10616)
!10621 = !DILocation(line: 8376, column: 13, scope: !10616)
!10622 = !DILocation(line: 8376, column: 43, scope: !10616)
!10623 = !DILocation(line: 8377, column: 11, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10616, file: !3, line: 8377, column: 11)
!10625 = !DILocation(line: 8377, column: 41, scope: !10624)
!10626 = !DILocation(line: 8377, column: 53, scope: !10624)
!10627 = !DILocation(line: 8377, column: 11, scope: !10616)
!10628 = !DILocation(line: 8379, column: 4, scope: !10629)
!10629 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 8378, column: 2)
!10630 = !DILocation(line: 8380, column: 4, scope: !10629)
!10631 = !DILocation(line: 8382, column: 2, scope: !10629)
!10632 = !DILocation(line: 8383, column: 17, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10624, file: !3, line: 8383, column: 16)
!10634 = !DILocation(line: 8383, column: 16, scope: !10624)
!10635 = !DILocation(line: 8385, column: 4, scope: !10636)
!10636 = distinct !DILexicalBlock(scope: !10633, file: !3, line: 8384, column: 2)
!10637 = !DILocation(line: 8387, column: 2, scope: !10636)
!10638 = !DILocation(line: 8389, column: 17, scope: !10616)
!10639 = !DILocation(line: 8390, column: 17, scope: !10616)
!10640 = !DILocation(line: 8391, column: 7, scope: !10616)
!10641 = !DILocation(line: 8392, column: 7, scope: !10616)
!10642 = distinct !{!10642, !10613, !10643}
!10643 = !DILocation(line: 8393, column: 5, scope: !10566)
!10644 = !DILocation(line: 8394, column: 3, scope: !10566)
!10645 = !DILocation(line: 8397, column: 13, scope: !10566)
!10646 = !DILocation(line: 8399, column: 10, scope: !10566)
!10647 = !DILocation(line: 8400, column: 3, scope: !10566)
!10648 = !DILocation(line: 8401, column: 22, scope: !10566)
!10649 = !DILocation(line: 8401, column: 3, scope: !10566)
!10650 = !DILocation(line: 8401, column: 20, scope: !10566)
!10651 = !DILocation(line: 8402, column: 3, scope: !10566)
!10652 = !DILocation(line: 8402, column: 28, scope: !10566)
!10653 = !DILocation(line: 8404, column: 10, scope: !10566)
!10654 = !DILocation(line: 8404, column: 3, scope: !10566)
!10655 = !DILocation(line: 8405, column: 1, scope: !10566)
!10656 = distinct !DISubprogram(name: "c_parser_initializer", scope: !3, file: !3, line: 3065, type: !5410, scopeLine: 3066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10657)
!10657 = !{!10658, !10659, !10662}
!10658 = !DILocalVariable(name: "parser", arg: 1, scope: !10656, file: !3, line: 3065, type: !1896)
!10659 = !DILocalVariable(name: "ret", scope: !10660, file: !3, line: 3071, type: !715)
!10660 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 3070, column: 5)
!10661 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 3067, column: 7)
!10662 = !DILocalVariable(name: "loc", scope: !10660, file: !3, line: 3072, type: !846)
!10663 = !DILocation(line: 0, scope: !10656)
!10664 = !DILocation(line: 3067, column: 7, scope: !10661)
!10665 = !DILocation(line: 3067, column: 7, scope: !10656)
!10666 = !DILocation(line: 3068, column: 12, scope: !10661)
!10667 = !DILocation(line: 3068, column: 5, scope: !10661)
!10668 = !DILocation(line: 3071, column: 21, scope: !10660)
!10669 = !DILocation(line: 3072, column: 24, scope: !10660)
!10670 = !DILocation(line: 3072, column: 54, scope: !10660)
!10671 = !DILocation(line: 0, scope: !10660)
!10672 = !DILocation(line: 3073, column: 13, scope: !10660)
!10673 = !DILocation(line: 3074, column: 11, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10660, file: !3, line: 3074, column: 11)
!10675 = !DILocation(line: 3074, column: 33, scope: !10674)
!10676 = !DILocation(line: 3075, column: 4, scope: !10674)
!10677 = !DILocation(line: 3075, column: 29, scope: !10674)
!10678 = !DILocation(line: 3074, column: 11, scope: !10660)
!10679 = !DILocation(line: 3076, column: 8, scope: !10674)
!10680 = !DILocation(line: 3076, column: 2, scope: !10674)
!10681 = !DILocation(line: 3079, column: 1, scope: !10656)
