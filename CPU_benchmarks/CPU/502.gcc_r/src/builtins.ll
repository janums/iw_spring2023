; ModuleID = 'builtins.bc'
source_filename = "builtins.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.lang_hooks = type { i8*, i64, void (%union.tree_node*)*, i64 (i32)*, i32 (i32, i8**)*, void (%struct.diagnostic_context*)*, i32 (i64, i8*, i32)*, i8 (i8*, i64)*, i8 (i8**)*, i8 ()*, void ()*, void (i32)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*)*, void ()*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i8* (%union.tree_node*, i32)*, i32 (%union.tree_node*, %union.tree_node*)*, void (%struct.diagnostic_context*, i8*, %struct.diagnostic_info*)*, i64 (i64)*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.attribute_spec*, %struct.lang_hooks_for_tree_inlining, %struct.lang_hooks_for_callgraph, %struct.lang_hooks_for_tree_dump, %struct.lang_hooks_for_decls, %struct.lang_hooks_for_types, %struct.lang_hooks_for_lto, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void ()*, %union.tree_node* (%union.tree_node*, i8*, i8*)*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, i8 }
%struct.diagnostic_context = type { %struct.pretty_print_info*, [12 x i32], i8, i8, [870 x i32], i8, i8, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (%struct.diagnostic_context*, %struct.diagnostic_info*)*, void (i8*, [1 x %struct.__va_list_tag]*)*, %union.tree_node*, %struct.line_map*, i32, i8 }
%struct.pretty_print_info = type { %struct.output_buffer*, i8*, i32, i32, i32, %struct.pp_wrapping_mode_t, i8 (%struct.pretty_print_info*, %struct.text_info*, i8*, i32, i8, i8, i8)*, i8, i8, i8 }
%struct.output_buffer = type { %struct.obstack, %struct.obstack, %struct.obstack*, %struct.chunk_info*, %struct._IO_FILE*, i32, [128 x i8] }
%struct.chunk_info = type { %struct.chunk_info*, [60 x i8*] }
%struct.pp_wrapping_mode_t = type { i32, i32 }
%struct.text_info = type { i8*, [1 x %struct.__va_list_tag]*, i32, i32*, %union.tree_node** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.diagnostic_info = type { %struct.text_info, i32, i32, %union.tree_node*, i32, i32 }
%struct.line_map = type { i8*, i32, i32, i32, i8, i8, i8 }
%struct.lang_hooks_for_tree_inlining = type { i8 (%union.tree_node*, %union.tree_node*)* }
%struct.lang_hooks_for_callgraph = type { %union.tree_node* (%union.tree_node**, i32*)* }
%struct.lang_hooks_for_tree_dump = type { i8 (i8*, %union.tree_node*)*, i32 (%union.tree_node*)* }
%struct.lang_hooks_for_decls = type { i32 ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i8 (%union.tree_node*)*, void ()*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i32 (%union.tree_node*)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*, i8)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)* }
%struct.lang_hooks_for_types = type { %union.tree_node* (i32)*, i32 (%union.tree_node*)*, %union.tree_node* (i32, i32)*, %union.tree_node* (i32, i32)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, i8*)*, void (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%struct.gimplify_omp_ctx*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %struct.array_descr_info*)*, void (%union.tree_node*, %union.tree_node**, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i8 }
%struct.gimplify_omp_ctx = type opaque
%struct.array_descr_info = type opaque
%struct.lang_hooks_for_lto = type { void (i8*)*, void (i8*, i64, i8*)*, void ()* }
%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.optab_d = type { i32, i8*, i8, void (%struct.optab_d*, i8*, i8, i32)*, [87 x %struct.optab_handlers] }
%struct.optab_handlers = type { i32 }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.tree_exp = type { %struct.tree_common, i32, %union.tree_node*, [1 x %union.tree_node*] }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.call_expr_arg_iterator_d = type { %union.tree_node*, i32, i32 }
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.const_call_expr_arg_iterator_d = type { %union.tree_node*, i32, i32 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.tree_list = type { %struct.tree_common, %union.tree_node*, %union.tree_node* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [13 x i8] c"NOT_BUILT_IN\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"BUILT_IN_FRONTEND\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"BUILT_IN_MD\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"BUILT_IN_NORMAL\00", align 1
@built_in_class_names = dso_local local_unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0)], align 16, !dbg !0
@.str.4 = private unnamed_addr constant [14 x i8] c"BUILT_IN_ACOS\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ACOSF\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ACOSH\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ACOSHF\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ACOSHL\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ACOSL\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"BUILT_IN_ASIN\00", align 1
@.str.11 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ASINF\00", align 1
@.str.12 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ASINH\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ASINHF\00", align 1
@.str.14 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ASINHL\00", align 1
@.str.15 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ASINL\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"BUILT_IN_ATAN\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ATAN2\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ATAN2F\00", align 1
@.str.19 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ATAN2L\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ATANF\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ATANH\00", align 1
@.str.22 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ATANHF\00", align 1
@.str.23 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ATANHL\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ATANL\00", align 1
@.str.25 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CBRT\00", align 1
@.str.26 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CBRTF\00", align 1
@.str.27 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CBRTL\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CEIL\00", align 1
@.str.29 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CEILF\00", align 1
@.str.30 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CEILL\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"BUILT_IN_COPYSIGN\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"BUILT_IN_COPYSIGNF\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"BUILT_IN_COPYSIGNL\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"BUILT_IN_COS\00", align 1
@.str.35 = private unnamed_addr constant [14 x i8] c"BUILT_IN_COSF\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"BUILT_IN_COSH\00", align 1
@.str.37 = private unnamed_addr constant [15 x i8] c"BUILT_IN_COSHF\00", align 1
@.str.38 = private unnamed_addr constant [15 x i8] c"BUILT_IN_COSHL\00", align 1
@.str.39 = private unnamed_addr constant [14 x i8] c"BUILT_IN_COSL\00", align 1
@.str.40 = private unnamed_addr constant [14 x i8] c"BUILT_IN_DREM\00", align 1
@.str.41 = private unnamed_addr constant [15 x i8] c"BUILT_IN_DREMF\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"BUILT_IN_DREML\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"BUILT_IN_ERF\00", align 1
@.str.44 = private unnamed_addr constant [14 x i8] c"BUILT_IN_ERFC\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ERFCF\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ERFCL\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c"BUILT_IN_ERFF\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"BUILT_IN_ERFL\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"BUILT_IN_EXP\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"BUILT_IN_EXP10\00", align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXP10F\00", align 1
@.str.52 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXP10L\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"BUILT_IN_EXP2\00", align 1
@.str.54 = private unnamed_addr constant [15 x i8] c"BUILT_IN_EXP2F\00", align 1
@.str.55 = private unnamed_addr constant [15 x i8] c"BUILT_IN_EXP2L\00", align 1
@.str.56 = private unnamed_addr constant [14 x i8] c"BUILT_IN_EXPF\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"BUILT_IN_EXPL\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"BUILT_IN_EXPM1\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXPM1F\00", align 1
@.str.60 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXPM1L\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FABS\00", align 1
@.str.62 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FABSF\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FABSL\00", align 1
@.str.64 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FDIM\00", align 1
@.str.65 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FDIMF\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FDIML\00", align 1
@.str.67 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FLOOR\00", align 1
@.str.68 = private unnamed_addr constant [16 x i8] c"BUILT_IN_FLOORF\00", align 1
@.str.69 = private unnamed_addr constant [16 x i8] c"BUILT_IN_FLOORL\00", align 1
@.str.70 = private unnamed_addr constant [13 x i8] c"BUILT_IN_FMA\00", align 1
@.str.71 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FMAF\00", align 1
@.str.72 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FMAL\00", align 1
@.str.73 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FMAX\00", align 1
@.str.74 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FMAXF\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FMAXL\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FMIN\00", align 1
@.str.77 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FMINF\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FMINL\00", align 1
@.str.79 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FMOD\00", align 1
@.str.80 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FMODF\00", align 1
@.str.81 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FMODL\00", align 1
@.str.82 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FREXP\00", align 1
@.str.83 = private unnamed_addr constant [16 x i8] c"BUILT_IN_FREXPF\00", align 1
@.str.84 = private unnamed_addr constant [16 x i8] c"BUILT_IN_FREXPL\00", align 1
@.str.85 = private unnamed_addr constant [15 x i8] c"BUILT_IN_GAMMA\00", align 1
@.str.86 = private unnamed_addr constant [16 x i8] c"BUILT_IN_GAMMAF\00", align 1
@.str.87 = private unnamed_addr constant [16 x i8] c"BUILT_IN_GAMMAL\00", align 1
@.str.88 = private unnamed_addr constant [17 x i8] c"BUILT_IN_GAMMA_R\00", align 1
@.str.89 = private unnamed_addr constant [18 x i8] c"BUILT_IN_GAMMAF_R\00", align 1
@.str.90 = private unnamed_addr constant [18 x i8] c"BUILT_IN_GAMMAL_R\00", align 1
@.str.91 = private unnamed_addr constant [18 x i8] c"BUILT_IN_HUGE_VAL\00", align 1
@.str.92 = private unnamed_addr constant [19 x i8] c"BUILT_IN_HUGE_VALF\00", align 1
@.str.93 = private unnamed_addr constant [19 x i8] c"BUILT_IN_HUGE_VALL\00", align 1
@.str.94 = private unnamed_addr constant [15 x i8] c"BUILT_IN_HYPOT\00", align 1
@.str.95 = private unnamed_addr constant [16 x i8] c"BUILT_IN_HYPOTF\00", align 1
@.str.96 = private unnamed_addr constant [16 x i8] c"BUILT_IN_HYPOTL\00", align 1
@.str.97 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ILOGB\00", align 1
@.str.98 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ILOGBF\00", align 1
@.str.99 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ILOGBL\00", align 1
@.str.100 = private unnamed_addr constant [13 x i8] c"BUILT_IN_INF\00", align 1
@.str.101 = private unnamed_addr constant [14 x i8] c"BUILT_IN_INFF\00", align 1
@.str.102 = private unnamed_addr constant [14 x i8] c"BUILT_IN_INFL\00", align 1
@.str.103 = private unnamed_addr constant [16 x i8] c"BUILT_IN_INFD32\00", align 1
@.str.104 = private unnamed_addr constant [16 x i8] c"BUILT_IN_INFD64\00", align 1
@.str.105 = private unnamed_addr constant [17 x i8] c"BUILT_IN_INFD128\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"BUILT_IN_J0\00", align 1
@.str.107 = private unnamed_addr constant [13 x i8] c"BUILT_IN_J0F\00", align 1
@.str.108 = private unnamed_addr constant [13 x i8] c"BUILT_IN_J0L\00", align 1
@.str.109 = private unnamed_addr constant [12 x i8] c"BUILT_IN_J1\00", align 1
@.str.110 = private unnamed_addr constant [13 x i8] c"BUILT_IN_J1F\00", align 1
@.str.111 = private unnamed_addr constant [13 x i8] c"BUILT_IN_J1L\00", align 1
@.str.112 = private unnamed_addr constant [12 x i8] c"BUILT_IN_JN\00", align 1
@.str.113 = private unnamed_addr constant [13 x i8] c"BUILT_IN_JNF\00", align 1
@.str.114 = private unnamed_addr constant [13 x i8] c"BUILT_IN_JNL\00", align 1
@.str.115 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LCEIL\00", align 1
@.str.116 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LCEILF\00", align 1
@.str.117 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LCEILL\00", align 1
@.str.118 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LDEXP\00", align 1
@.str.119 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LDEXPF\00", align 1
@.str.120 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LDEXPL\00", align 1
@.str.121 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LFLOOR\00", align 1
@.str.122 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LFLOORF\00", align 1
@.str.123 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LFLOORL\00", align 1
@.str.124 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LGAMMA\00", align 1
@.str.125 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LGAMMAF\00", align 1
@.str.126 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LGAMMAL\00", align 1
@.str.127 = private unnamed_addr constant [18 x i8] c"BUILT_IN_LGAMMA_R\00", align 1
@.str.128 = private unnamed_addr constant [19 x i8] c"BUILT_IN_LGAMMAF_R\00", align 1
@.str.129 = private unnamed_addr constant [19 x i8] c"BUILT_IN_LGAMMAL_R\00", align 1
@.str.130 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LLCEIL\00", align 1
@.str.131 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LLCEILF\00", align 1
@.str.132 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LLCEILL\00", align 1
@.str.133 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LLFLOOR\00", align 1
@.str.134 = private unnamed_addr constant [18 x i8] c"BUILT_IN_LLFLOORF\00", align 1
@.str.135 = private unnamed_addr constant [18 x i8] c"BUILT_IN_LLFLOORL\00", align 1
@.str.136 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LLRINT\00", align 1
@.str.137 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LLRINTF\00", align 1
@.str.138 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LLRINTL\00", align 1
@.str.139 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LLROUND\00", align 1
@.str.140 = private unnamed_addr constant [18 x i8] c"BUILT_IN_LLROUNDF\00", align 1
@.str.141 = private unnamed_addr constant [18 x i8] c"BUILT_IN_LLROUNDL\00", align 1
@.str.142 = private unnamed_addr constant [13 x i8] c"BUILT_IN_LOG\00", align 1
@.str.143 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LOG10\00", align 1
@.str.144 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LOG10F\00", align 1
@.str.145 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LOG10L\00", align 1
@.str.146 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LOG1P\00", align 1
@.str.147 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LOG1PF\00", align 1
@.str.148 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LOG1PL\00", align 1
@.str.149 = private unnamed_addr constant [14 x i8] c"BUILT_IN_LOG2\00", align 1
@.str.150 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LOG2F\00", align 1
@.str.151 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LOG2L\00", align 1
@.str.152 = private unnamed_addr constant [14 x i8] c"BUILT_IN_LOGB\00", align 1
@.str.153 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LOGBF\00", align 1
@.str.154 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LOGBL\00", align 1
@.str.155 = private unnamed_addr constant [14 x i8] c"BUILT_IN_LOGF\00", align 1
@.str.156 = private unnamed_addr constant [14 x i8] c"BUILT_IN_LOGL\00", align 1
@.str.157 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LRINT\00", align 1
@.str.158 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LRINTF\00", align 1
@.str.159 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LRINTL\00", align 1
@.str.160 = private unnamed_addr constant [16 x i8] c"BUILT_IN_LROUND\00", align 1
@.str.161 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LROUNDF\00", align 1
@.str.162 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LROUNDL\00", align 1
@.str.163 = private unnamed_addr constant [14 x i8] c"BUILT_IN_MODF\00", align 1
@.str.164 = private unnamed_addr constant [15 x i8] c"BUILT_IN_MODFF\00", align 1
@.str.165 = private unnamed_addr constant [15 x i8] c"BUILT_IN_MODFL\00", align 1
@.str.166 = private unnamed_addr constant [13 x i8] c"BUILT_IN_NAN\00", align 1
@.str.167 = private unnamed_addr constant [14 x i8] c"BUILT_IN_NANF\00", align 1
@.str.168 = private unnamed_addr constant [14 x i8] c"BUILT_IN_NANL\00", align 1
@.str.169 = private unnamed_addr constant [16 x i8] c"BUILT_IN_NAND32\00", align 1
@.str.170 = private unnamed_addr constant [16 x i8] c"BUILT_IN_NAND64\00", align 1
@.str.171 = private unnamed_addr constant [17 x i8] c"BUILT_IN_NAND128\00", align 1
@.str.172 = private unnamed_addr constant [14 x i8] c"BUILT_IN_NANS\00", align 1
@.str.173 = private unnamed_addr constant [15 x i8] c"BUILT_IN_NANSF\00", align 1
@.str.174 = private unnamed_addr constant [15 x i8] c"BUILT_IN_NANSL\00", align 1
@.str.175 = private unnamed_addr constant [19 x i8] c"BUILT_IN_NEARBYINT\00", align 1
@.str.176 = private unnamed_addr constant [20 x i8] c"BUILT_IN_NEARBYINTF\00", align 1
@.str.177 = private unnamed_addr constant [20 x i8] c"BUILT_IN_NEARBYINTL\00", align 1
@.str.178 = private unnamed_addr constant [19 x i8] c"BUILT_IN_NEXTAFTER\00", align 1
@.str.179 = private unnamed_addr constant [20 x i8] c"BUILT_IN_NEXTAFTERF\00", align 1
@.str.180 = private unnamed_addr constant [20 x i8] c"BUILT_IN_NEXTAFTERL\00", align 1
@.str.181 = private unnamed_addr constant [20 x i8] c"BUILT_IN_NEXTTOWARD\00", align 1
@.str.182 = private unnamed_addr constant [21 x i8] c"BUILT_IN_NEXTTOWARDF\00", align 1
@.str.183 = private unnamed_addr constant [21 x i8] c"BUILT_IN_NEXTTOWARDL\00", align 1
@.str.184 = private unnamed_addr constant [13 x i8] c"BUILT_IN_POW\00", align 1
@.str.185 = private unnamed_addr constant [15 x i8] c"BUILT_IN_POW10\00", align 1
@.str.186 = private unnamed_addr constant [16 x i8] c"BUILT_IN_POW10F\00", align 1
@.str.187 = private unnamed_addr constant [16 x i8] c"BUILT_IN_POW10L\00", align 1
@.str.188 = private unnamed_addr constant [14 x i8] c"BUILT_IN_POWF\00", align 1
@.str.189 = private unnamed_addr constant [14 x i8] c"BUILT_IN_POWI\00", align 1
@.str.190 = private unnamed_addr constant [15 x i8] c"BUILT_IN_POWIF\00", align 1
@.str.191 = private unnamed_addr constant [15 x i8] c"BUILT_IN_POWIL\00", align 1
@.str.192 = private unnamed_addr constant [14 x i8] c"BUILT_IN_POWL\00", align 1
@.str.193 = private unnamed_addr constant [19 x i8] c"BUILT_IN_REMAINDER\00", align 1
@.str.194 = private unnamed_addr constant [20 x i8] c"BUILT_IN_REMAINDERF\00", align 1
@.str.195 = private unnamed_addr constant [20 x i8] c"BUILT_IN_REMAINDERL\00", align 1
@.str.196 = private unnamed_addr constant [16 x i8] c"BUILT_IN_REMQUO\00", align 1
@.str.197 = private unnamed_addr constant [17 x i8] c"BUILT_IN_REMQUOF\00", align 1
@.str.198 = private unnamed_addr constant [17 x i8] c"BUILT_IN_REMQUOL\00", align 1
@.str.199 = private unnamed_addr constant [14 x i8] c"BUILT_IN_RINT\00", align 1
@.str.200 = private unnamed_addr constant [15 x i8] c"BUILT_IN_RINTF\00", align 1
@.str.201 = private unnamed_addr constant [15 x i8] c"BUILT_IN_RINTL\00", align 1
@.str.202 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ROUND\00", align 1
@.str.203 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ROUNDF\00", align 1
@.str.204 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ROUNDL\00", align 1
@.str.205 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SCALB\00", align 1
@.str.206 = private unnamed_addr constant [16 x i8] c"BUILT_IN_SCALBF\00", align 1
@.str.207 = private unnamed_addr constant [16 x i8] c"BUILT_IN_SCALBL\00", align 1
@.str.208 = private unnamed_addr constant [17 x i8] c"BUILT_IN_SCALBLN\00", align 1
@.str.209 = private unnamed_addr constant [18 x i8] c"BUILT_IN_SCALBLNF\00", align 1
@.str.210 = private unnamed_addr constant [18 x i8] c"BUILT_IN_SCALBLNL\00", align 1
@.str.211 = private unnamed_addr constant [16 x i8] c"BUILT_IN_SCALBN\00", align 1
@.str.212 = private unnamed_addr constant [17 x i8] c"BUILT_IN_SCALBNF\00", align 1
@.str.213 = private unnamed_addr constant [17 x i8] c"BUILT_IN_SCALBNL\00", align 1
@.str.214 = private unnamed_addr constant [17 x i8] c"BUILT_IN_SIGNBIT\00", align 1
@.str.215 = private unnamed_addr constant [18 x i8] c"BUILT_IN_SIGNBITF\00", align 1
@.str.216 = private unnamed_addr constant [18 x i8] c"BUILT_IN_SIGNBITL\00", align 1
@.str.217 = private unnamed_addr constant [20 x i8] c"BUILT_IN_SIGNBITD32\00", align 1
@.str.218 = private unnamed_addr constant [20 x i8] c"BUILT_IN_SIGNBITD64\00", align 1
@.str.219 = private unnamed_addr constant [21 x i8] c"BUILT_IN_SIGNBITD128\00", align 1
@.str.220 = private unnamed_addr constant [21 x i8] c"BUILT_IN_SIGNIFICAND\00", align 1
@.str.221 = private unnamed_addr constant [22 x i8] c"BUILT_IN_SIGNIFICANDF\00", align 1
@.str.222 = private unnamed_addr constant [22 x i8] c"BUILT_IN_SIGNIFICANDL\00", align 1
@.str.223 = private unnamed_addr constant [13 x i8] c"BUILT_IN_SIN\00", align 1
@.str.224 = private unnamed_addr constant [16 x i8] c"BUILT_IN_SINCOS\00", align 1
@.str.225 = private unnamed_addr constant [17 x i8] c"BUILT_IN_SINCOSF\00", align 1
@.str.226 = private unnamed_addr constant [17 x i8] c"BUILT_IN_SINCOSL\00", align 1
@.str.227 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SINF\00", align 1
@.str.228 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SINH\00", align 1
@.str.229 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SINHF\00", align 1
@.str.230 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SINHL\00", align 1
@.str.231 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SINL\00", align 1
@.str.232 = private unnamed_addr constant [14 x i8] c"BUILT_IN_SQRT\00", align 1
@.str.233 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SQRTF\00", align 1
@.str.234 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SQRTL\00", align 1
@.str.235 = private unnamed_addr constant [13 x i8] c"BUILT_IN_TAN\00", align 1
@.str.236 = private unnamed_addr constant [14 x i8] c"BUILT_IN_TANF\00", align 1
@.str.237 = private unnamed_addr constant [14 x i8] c"BUILT_IN_TANH\00", align 1
@.str.238 = private unnamed_addr constant [15 x i8] c"BUILT_IN_TANHF\00", align 1
@.str.239 = private unnamed_addr constant [15 x i8] c"BUILT_IN_TANHL\00", align 1
@.str.240 = private unnamed_addr constant [14 x i8] c"BUILT_IN_TANL\00", align 1
@.str.241 = private unnamed_addr constant [16 x i8] c"BUILT_IN_TGAMMA\00", align 1
@.str.242 = private unnamed_addr constant [17 x i8] c"BUILT_IN_TGAMMAF\00", align 1
@.str.243 = private unnamed_addr constant [17 x i8] c"BUILT_IN_TGAMMAL\00", align 1
@.str.244 = private unnamed_addr constant [15 x i8] c"BUILT_IN_TRUNC\00", align 1
@.str.245 = private unnamed_addr constant [16 x i8] c"BUILT_IN_TRUNCF\00", align 1
@.str.246 = private unnamed_addr constant [16 x i8] c"BUILT_IN_TRUNCL\00", align 1
@.str.247 = private unnamed_addr constant [12 x i8] c"BUILT_IN_Y0\00", align 1
@.str.248 = private unnamed_addr constant [13 x i8] c"BUILT_IN_Y0F\00", align 1
@.str.249 = private unnamed_addr constant [13 x i8] c"BUILT_IN_Y0L\00", align 1
@.str.250 = private unnamed_addr constant [12 x i8] c"BUILT_IN_Y1\00", align 1
@.str.251 = private unnamed_addr constant [13 x i8] c"BUILT_IN_Y1F\00", align 1
@.str.252 = private unnamed_addr constant [13 x i8] c"BUILT_IN_Y1L\00", align 1
@.str.253 = private unnamed_addr constant [12 x i8] c"BUILT_IN_YN\00", align 1
@.str.254 = private unnamed_addr constant [13 x i8] c"BUILT_IN_YNF\00", align 1
@.str.255 = private unnamed_addr constant [13 x i8] c"BUILT_IN_YNL\00", align 1
@.str.256 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CABS\00", align 1
@.str.257 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CABSF\00", align 1
@.str.258 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CABSL\00", align 1
@.str.259 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CACOS\00", align 1
@.str.260 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CACOSF\00", align 1
@.str.261 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CACOSH\00", align 1
@.str.262 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CACOSHF\00", align 1
@.str.263 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CACOSHL\00", align 1
@.str.264 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CACOSL\00", align 1
@.str.265 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CARG\00", align 1
@.str.266 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CARGF\00", align 1
@.str.267 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CARGL\00", align 1
@.str.268 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CASIN\00", align 1
@.str.269 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CASINF\00", align 1
@.str.270 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CASINH\00", align 1
@.str.271 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CASINHF\00", align 1
@.str.272 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CASINHL\00", align 1
@.str.273 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CASINL\00", align 1
@.str.274 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CATAN\00", align 1
@.str.275 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CATANF\00", align 1
@.str.276 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CATANH\00", align 1
@.str.277 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CATANHF\00", align 1
@.str.278 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CATANHL\00", align 1
@.str.279 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CATANL\00", align 1
@.str.280 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CCOS\00", align 1
@.str.281 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CCOSF\00", align 1
@.str.282 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CCOSH\00", align 1
@.str.283 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CCOSHF\00", align 1
@.str.284 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CCOSHL\00", align 1
@.str.285 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CCOSL\00", align 1
@.str.286 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CEXP\00", align 1
@.str.287 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CEXPF\00", align 1
@.str.288 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CEXPL\00", align 1
@.str.289 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CEXPI\00", align 1
@.str.290 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CEXPIF\00", align 1
@.str.291 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CEXPIL\00", align 1
@.str.292 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CIMAG\00", align 1
@.str.293 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CIMAGF\00", align 1
@.str.294 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CIMAGL\00", align 1
@.str.295 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CLOG\00", align 1
@.str.296 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CLOGF\00", align 1
@.str.297 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CLOGL\00", align 1
@.str.298 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CLOG10\00", align 1
@.str.299 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CLOG10F\00", align 1
@.str.300 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CLOG10L\00", align 1
@.str.301 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CONJ\00", align 1
@.str.302 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CONJF\00", align 1
@.str.303 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CONJL\00", align 1
@.str.304 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CPOW\00", align 1
@.str.305 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CPOWF\00", align 1
@.str.306 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CPOWL\00", align 1
@.str.307 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CPROJ\00", align 1
@.str.308 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CPROJF\00", align 1
@.str.309 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CPROJL\00", align 1
@.str.310 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CREAL\00", align 1
@.str.311 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CREALF\00", align 1
@.str.312 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CREALL\00", align 1
@.str.313 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CSIN\00", align 1
@.str.314 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CSINF\00", align 1
@.str.315 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CSINH\00", align 1
@.str.316 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CSINHF\00", align 1
@.str.317 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CSINHL\00", align 1
@.str.318 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CSINL\00", align 1
@.str.319 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CSQRT\00", align 1
@.str.320 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CSQRTF\00", align 1
@.str.321 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CSQRTL\00", align 1
@.str.322 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CTAN\00", align 1
@.str.323 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CTANF\00", align 1
@.str.324 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CTANH\00", align 1
@.str.325 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CTANHF\00", align 1
@.str.326 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CTANHL\00", align 1
@.str.327 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CTANL\00", align 1
@.str.328 = private unnamed_addr constant [14 x i8] c"BUILT_IN_BCMP\00", align 1
@.str.329 = private unnamed_addr constant [15 x i8] c"BUILT_IN_BCOPY\00", align 1
@.str.330 = private unnamed_addr constant [15 x i8] c"BUILT_IN_BZERO\00", align 1
@.str.331 = private unnamed_addr constant [15 x i8] c"BUILT_IN_INDEX\00", align 1
@.str.332 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMCHR\00", align 1
@.str.333 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMCMP\00", align 1
@.str.334 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMCPY\00", align 1
@.str.335 = private unnamed_addr constant [17 x i8] c"BUILT_IN_MEMMOVE\00", align 1
@.str.336 = private unnamed_addr constant [17 x i8] c"BUILT_IN_MEMPCPY\00", align 1
@.str.337 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MEMSET\00", align 1
@.str.338 = private unnamed_addr constant [16 x i8] c"BUILT_IN_RINDEX\00", align 1
@.str.339 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STPCPY\00", align 1
@.str.340 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STPNCPY\00", align 1
@.str.341 = private unnamed_addr constant [20 x i8] c"BUILT_IN_STRCASECMP\00", align 1
@.str.342 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCAT\00", align 1
@.str.343 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCHR\00", align 1
@.str.344 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCMP\00", align 1
@.str.345 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRCPY\00", align 1
@.str.346 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRCSPN\00", align 1
@.str.347 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRDUP\00", align 1
@.str.348 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNDUP\00", align 1
@.str.349 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRLEN\00", align 1
@.str.350 = private unnamed_addr constant [21 x i8] c"BUILT_IN_STRNCASECMP\00", align 1
@.str.351 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNCAT\00", align 1
@.str.352 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNCMP\00", align 1
@.str.353 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRNCPY\00", align 1
@.str.354 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRPBRK\00", align 1
@.str.355 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRRCHR\00", align 1
@.str.356 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRSPN\00", align 1
@.str.357 = private unnamed_addr constant [16 x i8] c"BUILT_IN_STRSTR\00", align 1
@.str.358 = private unnamed_addr constant [17 x i8] c"BUILT_IN_FPRINTF\00", align 1
@.str.359 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FPRINTF_UNLOCKED\00", align 1
@.str.360 = private unnamed_addr constant [14 x i8] c"BUILT_IN_PUTC\00", align 1
@.str.361 = private unnamed_addr constant [23 x i8] c"BUILT_IN_PUTC_UNLOCKED\00", align 1
@.str.362 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FPUTC\00", align 1
@.str.363 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FPUTC_UNLOCKED\00", align 1
@.str.364 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FPUTS\00", align 1
@.str.365 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FPUTS_UNLOCKED\00", align 1
@.str.366 = private unnamed_addr constant [16 x i8] c"BUILT_IN_FSCANF\00", align 1
@.str.367 = private unnamed_addr constant [16 x i8] c"BUILT_IN_FWRITE\00", align 1
@.str.368 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FWRITE_UNLOCKED\00", align 1
@.str.369 = private unnamed_addr constant [16 x i8] c"BUILT_IN_PRINTF\00", align 1
@.str.370 = private unnamed_addr constant [25 x i8] c"BUILT_IN_PRINTF_UNLOCKED\00", align 1
@.str.371 = private unnamed_addr constant [17 x i8] c"BUILT_IN_PUTCHAR\00", align 1
@.str.372 = private unnamed_addr constant [26 x i8] c"BUILT_IN_PUTCHAR_UNLOCKED\00", align 1
@.str.373 = private unnamed_addr constant [14 x i8] c"BUILT_IN_PUTS\00", align 1
@.str.374 = private unnamed_addr constant [23 x i8] c"BUILT_IN_PUTS_UNLOCKED\00", align 1
@.str.375 = private unnamed_addr constant [15 x i8] c"BUILT_IN_SCANF\00", align 1
@.str.376 = private unnamed_addr constant [18 x i8] c"BUILT_IN_SNPRINTF\00", align 1
@.str.377 = private unnamed_addr constant [17 x i8] c"BUILT_IN_SPRINTF\00", align 1
@.str.378 = private unnamed_addr constant [16 x i8] c"BUILT_IN_SSCANF\00", align 1
@.str.379 = private unnamed_addr constant [18 x i8] c"BUILT_IN_VFPRINTF\00", align 1
@.str.380 = private unnamed_addr constant [17 x i8] c"BUILT_IN_VFSCANF\00", align 1
@.str.381 = private unnamed_addr constant [17 x i8] c"BUILT_IN_VPRINTF\00", align 1
@.str.382 = private unnamed_addr constant [16 x i8] c"BUILT_IN_VSCANF\00", align 1
@.str.383 = private unnamed_addr constant [19 x i8] c"BUILT_IN_VSNPRINTF\00", align 1
@.str.384 = private unnamed_addr constant [18 x i8] c"BUILT_IN_VSPRINTF\00", align 1
@.str.385 = private unnamed_addr constant [17 x i8] c"BUILT_IN_VSSCANF\00", align 1
@.str.386 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISALNUM\00", align 1
@.str.387 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISALPHA\00", align 1
@.str.388 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISASCII\00", align 1
@.str.389 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISBLANK\00", align 1
@.str.390 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISCNTRL\00", align 1
@.str.391 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISDIGIT\00", align 1
@.str.392 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISGRAPH\00", align 1
@.str.393 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISLOWER\00", align 1
@.str.394 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISPRINT\00", align 1
@.str.395 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISPUNCT\00", align 1
@.str.396 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISSPACE\00", align 1
@.str.397 = private unnamed_addr constant [17 x i8] c"BUILT_IN_ISUPPER\00", align 1
@.str.398 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISXDIGIT\00", align 1
@.str.399 = private unnamed_addr constant [17 x i8] c"BUILT_IN_TOASCII\00", align 1
@.str.400 = private unnamed_addr constant [17 x i8] c"BUILT_IN_TOLOWER\00", align 1
@.str.401 = private unnamed_addr constant [17 x i8] c"BUILT_IN_TOUPPER\00", align 1
@.str.402 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWALNUM\00", align 1
@.str.403 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWALPHA\00", align 1
@.str.404 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWBLANK\00", align 1
@.str.405 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWCNTRL\00", align 1
@.str.406 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWDIGIT\00", align 1
@.str.407 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWGRAPH\00", align 1
@.str.408 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWLOWER\00", align 1
@.str.409 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWPRINT\00", align 1
@.str.410 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWPUNCT\00", align 1
@.str.411 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWSPACE\00", align 1
@.str.412 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISWUPPER\00", align 1
@.str.413 = private unnamed_addr constant [19 x i8] c"BUILT_IN_ISWXDIGIT\00", align 1
@.str.414 = private unnamed_addr constant [18 x i8] c"BUILT_IN_TOWLOWER\00", align 1
@.str.415 = private unnamed_addr constant [18 x i8] c"BUILT_IN_TOWUPPER\00", align 1
@.str.416 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ABORT\00", align 1
@.str.417 = private unnamed_addr constant [13 x i8] c"BUILT_IN_ABS\00", align 1
@.str.418 = private unnamed_addr constant [36 x i8] c"BUILT_IN_AGGREGATE_INCOMING_ADDRESS\00", align 1
@.str.419 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ALLOCA\00", align 1
@.str.420 = private unnamed_addr constant [15 x i8] c"BUILT_IN_APPLY\00", align 1
@.str.421 = private unnamed_addr constant [20 x i8] c"BUILT_IN_APPLY_ARGS\00", align 1
@.str.422 = private unnamed_addr constant [19 x i8] c"BUILT_IN_ARGS_INFO\00", align 1
@.str.423 = private unnamed_addr constant [17 x i8] c"BUILT_IN_BSWAP32\00", align 1
@.str.424 = private unnamed_addr constant [17 x i8] c"BUILT_IN_BSWAP64\00", align 1
@.str.425 = private unnamed_addr constant [21 x i8] c"BUILT_IN_CLEAR_CACHE\00", align 1
@.str.426 = private unnamed_addr constant [16 x i8] c"BUILT_IN_CALLOC\00", align 1
@.str.427 = private unnamed_addr constant [23 x i8] c"BUILT_IN_CLASSIFY_TYPE\00", align 1
@.str.428 = private unnamed_addr constant [13 x i8] c"BUILT_IN_CLZ\00", align 1
@.str.429 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CLZIMAX\00", align 1
@.str.430 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CLZL\00", align 1
@.str.431 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CLZLL\00", align 1
@.str.432 = private unnamed_addr constant [20 x i8] c"BUILT_IN_CONSTANT_P\00", align 1
@.str.433 = private unnamed_addr constant [13 x i8] c"BUILT_IN_CTZ\00", align 1
@.str.434 = private unnamed_addr constant [17 x i8] c"BUILT_IN_CTZIMAX\00", align 1
@.str.435 = private unnamed_addr constant [14 x i8] c"BUILT_IN_CTZL\00", align 1
@.str.436 = private unnamed_addr constant [15 x i8] c"BUILT_IN_CTZLL\00", align 1
@.str.437 = private unnamed_addr constant [19 x i8] c"BUILT_IN_DCGETTEXT\00", align 1
@.str.438 = private unnamed_addr constant [18 x i8] c"BUILT_IN_DGETTEXT\00", align 1
@.str.439 = private unnamed_addr constant [19 x i8] c"BUILT_IN_DWARF_CFA\00", align 1
@.str.440 = private unnamed_addr constant [25 x i8] c"BUILT_IN_DWARF_SP_COLUMN\00", align 1
@.str.441 = private unnamed_addr constant [19 x i8] c"BUILT_IN_EH_RETURN\00", align 1
@.str.442 = private unnamed_addr constant [30 x i8] c"BUILT_IN_EH_RETURN_DATA_REGNO\00", align 1
@.str.443 = private unnamed_addr constant [15 x i8] c"BUILT_IN_EXECL\00", align 1
@.str.444 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXECLP\00", align 1
@.str.445 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXECLE\00", align 1
@.str.446 = private unnamed_addr constant [15 x i8] c"BUILT_IN_EXECV\00", align 1
@.str.447 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXECVP\00", align 1
@.str.448 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXECVE\00", align 1
@.str.449 = private unnamed_addr constant [14 x i8] c"BUILT_IN_EXIT\00", align 1
@.str.450 = private unnamed_addr constant [16 x i8] c"BUILT_IN_EXPECT\00", align 1
@.str.451 = private unnamed_addr constant [24 x i8] c"BUILT_IN_EXTEND_POINTER\00", align 1
@.str.452 = private unnamed_addr constant [29 x i8] c"BUILT_IN_EXTRACT_RETURN_ADDR\00", align 1
@.str.453 = private unnamed_addr constant [13 x i8] c"BUILT_IN_FFS\00", align 1
@.str.454 = private unnamed_addr constant [17 x i8] c"BUILT_IN_FFSIMAX\00", align 1
@.str.455 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FFSL\00", align 1
@.str.456 = private unnamed_addr constant [15 x i8] c"BUILT_IN_FFSLL\00", align 1
@.str.457 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FORK\00", align 1
@.str.458 = private unnamed_addr constant [23 x i8] c"BUILT_IN_FRAME_ADDRESS\00", align 1
@.str.459 = private unnamed_addr constant [14 x i8] c"BUILT_IN_FREE\00", align 1
@.str.460 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FROB_RETURN_ADDR\00", align 1
@.str.461 = private unnamed_addr constant [17 x i8] c"BUILT_IN_GETTEXT\00", align 1
@.str.462 = private unnamed_addr constant [17 x i8] c"BUILT_IN_IMAXABS\00", align 1
@.str.463 = private unnamed_addr constant [30 x i8] c"BUILT_IN_INIT_DWARF_REG_SIZES\00", align 1
@.str.464 = private unnamed_addr constant [16 x i8] c"BUILT_IN_FINITE\00", align 1
@.str.465 = private unnamed_addr constant [17 x i8] c"BUILT_IN_FINITEF\00", align 1
@.str.466 = private unnamed_addr constant [17 x i8] c"BUILT_IN_FINITEL\00", align 1
@.str.467 = private unnamed_addr constant [19 x i8] c"BUILT_IN_FINITED32\00", align 1
@.str.468 = private unnamed_addr constant [19 x i8] c"BUILT_IN_FINITED64\00", align 1
@.str.469 = private unnamed_addr constant [20 x i8] c"BUILT_IN_FINITED128\00", align 1
@.str.470 = private unnamed_addr constant [20 x i8] c"BUILT_IN_FPCLASSIFY\00", align 1
@.str.471 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISFINITE\00", align 1
@.str.472 = private unnamed_addr constant [20 x i8] c"BUILT_IN_ISINF_SIGN\00", align 1
@.str.473 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ISINF\00", align 1
@.str.474 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ISINFF\00", align 1
@.str.475 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ISINFL\00", align 1
@.str.476 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISINFD32\00", align 1
@.str.477 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISINFD64\00", align 1
@.str.478 = private unnamed_addr constant [19 x i8] c"BUILT_IN_ISINFD128\00", align 1
@.str.479 = private unnamed_addr constant [15 x i8] c"BUILT_IN_ISNAN\00", align 1
@.str.480 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ISNANF\00", align 1
@.str.481 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ISNANL\00", align 1
@.str.482 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISNAND32\00", align 1
@.str.483 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISNAND64\00", align 1
@.str.484 = private unnamed_addr constant [19 x i8] c"BUILT_IN_ISNAND128\00", align 1
@.str.485 = private unnamed_addr constant [18 x i8] c"BUILT_IN_ISNORMAL\00", align 1
@.str.486 = private unnamed_addr constant [19 x i8] c"BUILT_IN_ISGREATER\00", align 1
@.str.487 = private unnamed_addr constant [24 x i8] c"BUILT_IN_ISGREATEREQUAL\00", align 1
@.str.488 = private unnamed_addr constant [16 x i8] c"BUILT_IN_ISLESS\00", align 1
@.str.489 = private unnamed_addr constant [21 x i8] c"BUILT_IN_ISLESSEQUAL\00", align 1
@.str.490 = private unnamed_addr constant [23 x i8] c"BUILT_IN_ISLESSGREATER\00", align 1
@.str.491 = private unnamed_addr constant [21 x i8] c"BUILT_IN_ISUNORDERED\00", align 1
@.str.492 = private unnamed_addr constant [14 x i8] c"BUILT_IN_LABS\00", align 1
@.str.493 = private unnamed_addr constant [15 x i8] c"BUILT_IN_LLABS\00", align 1
@.str.494 = private unnamed_addr constant [17 x i8] c"BUILT_IN_LONGJMP\00", align 1
@.str.495 = private unnamed_addr constant [16 x i8] c"BUILT_IN_MALLOC\00", align 1
@.str.496 = private unnamed_addr constant [18 x i8] c"BUILT_IN_NEXT_ARG\00", align 1
@.str.497 = private unnamed_addr constant [16 x i8] c"BUILT_IN_PARITY\00", align 1
@.str.498 = private unnamed_addr constant [20 x i8] c"BUILT_IN_PARITYIMAX\00", align 1
@.str.499 = private unnamed_addr constant [17 x i8] c"BUILT_IN_PARITYL\00", align 1
@.str.500 = private unnamed_addr constant [18 x i8] c"BUILT_IN_PARITYLL\00", align 1
@.str.501 = private unnamed_addr constant [18 x i8] c"BUILT_IN_POPCOUNT\00", align 1
@.str.502 = private unnamed_addr constant [22 x i8] c"BUILT_IN_POPCOUNTIMAX\00", align 1
@.str.503 = private unnamed_addr constant [19 x i8] c"BUILT_IN_POPCOUNTL\00", align 1
@.str.504 = private unnamed_addr constant [20 x i8] c"BUILT_IN_POPCOUNTLL\00", align 1
@.str.505 = private unnamed_addr constant [18 x i8] c"BUILT_IN_PREFETCH\00", align 1
@.str.506 = private unnamed_addr constant [17 x i8] c"BUILT_IN_REALLOC\00", align 1
@.str.507 = private unnamed_addr constant [16 x i8] c"BUILT_IN_RETURN\00", align 1
@.str.508 = private unnamed_addr constant [24 x i8] c"BUILT_IN_RETURN_ADDRESS\00", align 1
@.str.509 = private unnamed_addr constant [18 x i8] c"BUILT_IN_SAVEREGS\00", align 1
@.str.510 = private unnamed_addr constant [16 x i8] c"BUILT_IN_SETJMP\00", align 1
@.str.511 = private unnamed_addr constant [17 x i8] c"BUILT_IN_STRFMON\00", align 1
@.str.512 = private unnamed_addr constant [18 x i8] c"BUILT_IN_STRFTIME\00", align 1
@.str.513 = private unnamed_addr constant [14 x i8] c"BUILT_IN_TRAP\00", align 1
@.str.514 = private unnamed_addr constant [21 x i8] c"BUILT_IN_UNREACHABLE\00", align 1
@.str.515 = private unnamed_addr constant [21 x i8] c"BUILT_IN_UNWIND_INIT\00", align 1
@.str.516 = private unnamed_addr constant [27 x i8] c"BUILT_IN_UPDATE_SETJMP_BUF\00", align 1
@.str.517 = private unnamed_addr constant [17 x i8] c"BUILT_IN_VA_COPY\00", align 1
@.str.518 = private unnamed_addr constant [16 x i8] c"BUILT_IN_VA_END\00", align 1
@.str.519 = private unnamed_addr constant [18 x i8] c"BUILT_IN_VA_START\00", align 1
@.str.520 = private unnamed_addr constant [21 x i8] c"BUILT_IN_VA_ARG_PACK\00", align 1
@.str.521 = private unnamed_addr constant [25 x i8] c"BUILT_IN_VA_ARG_PACK_LEN\00", align 1
@.str.522 = private unnamed_addr constant [15 x i8] c"BUILT_IN__EXIT\00", align 1
@.str.523 = private unnamed_addr constant [16 x i8] c"BUILT_IN__EXIT2\00", align 1
@.str.524 = private unnamed_addr constant [25 x i8] c"BUILT_IN_INIT_TRAMPOLINE\00", align 1
@.str.525 = private unnamed_addr constant [27 x i8] c"BUILT_IN_ADJUST_TRAMPOLINE\00", align 1
@.str.526 = private unnamed_addr constant [23 x i8] c"BUILT_IN_NONLOCAL_GOTO\00", align 1
@.str.527 = private unnamed_addr constant [22 x i8] c"BUILT_IN_SETJMP_SETUP\00", align 1
@.str.528 = private unnamed_addr constant [27 x i8] c"BUILT_IN_SETJMP_DISPATCHER\00", align 1
@.str.529 = private unnamed_addr constant [25 x i8] c"BUILT_IN_SETJMP_RECEIVER\00", align 1
@.str.530 = private unnamed_addr constant [20 x i8] c"BUILT_IN_STACK_SAVE\00", align 1
@.str.531 = private unnamed_addr constant [23 x i8] c"BUILT_IN_STACK_RESTORE\00", align 1
@.str.532 = private unnamed_addr constant [21 x i8] c"BUILT_IN_OBJECT_SIZE\00", align 1
@.str.533 = private unnamed_addr constant [20 x i8] c"BUILT_IN_MEMCPY_CHK\00", align 1
@.str.534 = private unnamed_addr constant [21 x i8] c"BUILT_IN_MEMMOVE_CHK\00", align 1
@.str.535 = private unnamed_addr constant [21 x i8] c"BUILT_IN_MEMPCPY_CHK\00", align 1
@.str.536 = private unnamed_addr constant [20 x i8] c"BUILT_IN_MEMSET_CHK\00", align 1
@.str.537 = private unnamed_addr constant [20 x i8] c"BUILT_IN_STPCPY_CHK\00", align 1
@.str.538 = private unnamed_addr constant [20 x i8] c"BUILT_IN_STRCAT_CHK\00", align 1
@.str.539 = private unnamed_addr constant [20 x i8] c"BUILT_IN_STRCPY_CHK\00", align 1
@.str.540 = private unnamed_addr constant [21 x i8] c"BUILT_IN_STRNCAT_CHK\00", align 1
@.str.541 = private unnamed_addr constant [21 x i8] c"BUILT_IN_STRNCPY_CHK\00", align 1
@.str.542 = private unnamed_addr constant [22 x i8] c"BUILT_IN_SNPRINTF_CHK\00", align 1
@.str.543 = private unnamed_addr constant [21 x i8] c"BUILT_IN_SPRINTF_CHK\00", align 1
@.str.544 = private unnamed_addr constant [23 x i8] c"BUILT_IN_VSNPRINTF_CHK\00", align 1
@.str.545 = private unnamed_addr constant [22 x i8] c"BUILT_IN_VSPRINTF_CHK\00", align 1
@.str.546 = private unnamed_addr constant [21 x i8] c"BUILT_IN_FPRINTF_CHK\00", align 1
@.str.547 = private unnamed_addr constant [20 x i8] c"BUILT_IN_PRINTF_CHK\00", align 1
@.str.548 = private unnamed_addr constant [22 x i8] c"BUILT_IN_VFPRINTF_CHK\00", align 1
@.str.549 = private unnamed_addr constant [21 x i8] c"BUILT_IN_VPRINTF_CHK\00", align 1
@.str.550 = private unnamed_addr constant [28 x i8] c"BUILT_IN_PROFILE_FUNC_ENTER\00", align 1
@.str.551 = private unnamed_addr constant [27 x i8] c"BUILT_IN_PROFILE_FUNC_EXIT\00", align 1
@.str.552 = private unnamed_addr constant [28 x i8] c"BUILT_IN_EMUTLS_GET_ADDRESS\00", align 1
@.str.553 = private unnamed_addr constant [32 x i8] c"BUILT_IN_EMUTLS_REGISTER_COMMON\00", align 1
@.str.554 = private unnamed_addr constant [23 x i8] c"BUILT_IN_UNWIND_RESUME\00", align 1
@.str.555 = private unnamed_addr constant [25 x i8] c"BUILT_IN_CXA_END_CLEANUP\00", align 1
@.str.556 = private unnamed_addr constant [20 x i8] c"BUILT_IN_EH_POINTER\00", align 1
@.str.557 = private unnamed_addr constant [19 x i8] c"BUILT_IN_EH_FILTER\00", align 1
@.str.558 = private unnamed_addr constant [24 x i8] c"BUILT_IN_EH_COPY_VALUES\00", align 1
@.str.559 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_ADD_N\00", align 1
@.str.560 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_ADD_1\00", align 1
@.str.561 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_ADD_2\00", align 1
@.str.562 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_ADD_4\00", align 1
@.str.563 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_ADD_8\00", align 1
@.str.564 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FETCH_AND_ADD_16\00", align 1
@.str.565 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_SUB_N\00", align 1
@.str.566 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_SUB_1\00", align 1
@.str.567 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_SUB_2\00", align 1
@.str.568 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_SUB_4\00", align 1
@.str.569 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_SUB_8\00", align 1
@.str.570 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FETCH_AND_SUB_16\00", align 1
@.str.571 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FETCH_AND_OR_N\00", align 1
@.str.572 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FETCH_AND_OR_1\00", align 1
@.str.573 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FETCH_AND_OR_2\00", align 1
@.str.574 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FETCH_AND_OR_4\00", align 1
@.str.575 = private unnamed_addr constant [24 x i8] c"BUILT_IN_FETCH_AND_OR_8\00", align 1
@.str.576 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_OR_16\00", align 1
@.str.577 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_AND_N\00", align 1
@.str.578 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_AND_1\00", align 1
@.str.579 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_AND_2\00", align 1
@.str.580 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_AND_4\00", align 1
@.str.581 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_AND_8\00", align 1
@.str.582 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FETCH_AND_AND_16\00", align 1
@.str.583 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_XOR_N\00", align 1
@.str.584 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_XOR_1\00", align 1
@.str.585 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_XOR_2\00", align 1
@.str.586 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_XOR_4\00", align 1
@.str.587 = private unnamed_addr constant [25 x i8] c"BUILT_IN_FETCH_AND_XOR_8\00", align 1
@.str.588 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FETCH_AND_XOR_16\00", align 1
@.str.589 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FETCH_AND_NAND_N\00", align 1
@.str.590 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FETCH_AND_NAND_1\00", align 1
@.str.591 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FETCH_AND_NAND_2\00", align 1
@.str.592 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FETCH_AND_NAND_4\00", align 1
@.str.593 = private unnamed_addr constant [26 x i8] c"BUILT_IN_FETCH_AND_NAND_8\00", align 1
@.str.594 = private unnamed_addr constant [27 x i8] c"BUILT_IN_FETCH_AND_NAND_16\00", align 1
@.str.595 = private unnamed_addr constant [25 x i8] c"BUILT_IN_ADD_AND_FETCH_N\00", align 1
@.str.596 = private unnamed_addr constant [25 x i8] c"BUILT_IN_ADD_AND_FETCH_1\00", align 1
@.str.597 = private unnamed_addr constant [25 x i8] c"BUILT_IN_ADD_AND_FETCH_2\00", align 1
@.str.598 = private unnamed_addr constant [25 x i8] c"BUILT_IN_ADD_AND_FETCH_4\00", align 1
@.str.599 = private unnamed_addr constant [25 x i8] c"BUILT_IN_ADD_AND_FETCH_8\00", align 1
@.str.600 = private unnamed_addr constant [26 x i8] c"BUILT_IN_ADD_AND_FETCH_16\00", align 1
@.str.601 = private unnamed_addr constant [25 x i8] c"BUILT_IN_SUB_AND_FETCH_N\00", align 1
@.str.602 = private unnamed_addr constant [25 x i8] c"BUILT_IN_SUB_AND_FETCH_1\00", align 1
@.str.603 = private unnamed_addr constant [25 x i8] c"BUILT_IN_SUB_AND_FETCH_2\00", align 1
@.str.604 = private unnamed_addr constant [25 x i8] c"BUILT_IN_SUB_AND_FETCH_4\00", align 1
@.str.605 = private unnamed_addr constant [25 x i8] c"BUILT_IN_SUB_AND_FETCH_8\00", align 1
@.str.606 = private unnamed_addr constant [26 x i8] c"BUILT_IN_SUB_AND_FETCH_16\00", align 1
@.str.607 = private unnamed_addr constant [24 x i8] c"BUILT_IN_OR_AND_FETCH_N\00", align 1
@.str.608 = private unnamed_addr constant [24 x i8] c"BUILT_IN_OR_AND_FETCH_1\00", align 1
@.str.609 = private unnamed_addr constant [24 x i8] c"BUILT_IN_OR_AND_FETCH_2\00", align 1
@.str.610 = private unnamed_addr constant [24 x i8] c"BUILT_IN_OR_AND_FETCH_4\00", align 1
@.str.611 = private unnamed_addr constant [24 x i8] c"BUILT_IN_OR_AND_FETCH_8\00", align 1
@.str.612 = private unnamed_addr constant [25 x i8] c"BUILT_IN_OR_AND_FETCH_16\00", align 1
@.str.613 = private unnamed_addr constant [25 x i8] c"BUILT_IN_AND_AND_FETCH_N\00", align 1
@.str.614 = private unnamed_addr constant [25 x i8] c"BUILT_IN_AND_AND_FETCH_1\00", align 1
@.str.615 = private unnamed_addr constant [25 x i8] c"BUILT_IN_AND_AND_FETCH_2\00", align 1
@.str.616 = private unnamed_addr constant [25 x i8] c"BUILT_IN_AND_AND_FETCH_4\00", align 1
@.str.617 = private unnamed_addr constant [25 x i8] c"BUILT_IN_AND_AND_FETCH_8\00", align 1
@.str.618 = private unnamed_addr constant [26 x i8] c"BUILT_IN_AND_AND_FETCH_16\00", align 1
@.str.619 = private unnamed_addr constant [25 x i8] c"BUILT_IN_XOR_AND_FETCH_N\00", align 1
@.str.620 = private unnamed_addr constant [25 x i8] c"BUILT_IN_XOR_AND_FETCH_1\00", align 1
@.str.621 = private unnamed_addr constant [25 x i8] c"BUILT_IN_XOR_AND_FETCH_2\00", align 1
@.str.622 = private unnamed_addr constant [25 x i8] c"BUILT_IN_XOR_AND_FETCH_4\00", align 1
@.str.623 = private unnamed_addr constant [25 x i8] c"BUILT_IN_XOR_AND_FETCH_8\00", align 1
@.str.624 = private unnamed_addr constant [26 x i8] c"BUILT_IN_XOR_AND_FETCH_16\00", align 1
@.str.625 = private unnamed_addr constant [26 x i8] c"BUILT_IN_NAND_AND_FETCH_N\00", align 1
@.str.626 = private unnamed_addr constant [26 x i8] c"BUILT_IN_NAND_AND_FETCH_1\00", align 1
@.str.627 = private unnamed_addr constant [26 x i8] c"BUILT_IN_NAND_AND_FETCH_2\00", align 1
@.str.628 = private unnamed_addr constant [26 x i8] c"BUILT_IN_NAND_AND_FETCH_4\00", align 1
@.str.629 = private unnamed_addr constant [26 x i8] c"BUILT_IN_NAND_AND_FETCH_8\00", align 1
@.str.630 = private unnamed_addr constant [27 x i8] c"BUILT_IN_NAND_AND_FETCH_16\00", align 1
@.str.631 = private unnamed_addr constant [33 x i8] c"BUILT_IN_BOOL_COMPARE_AND_SWAP_N\00", align 1
@.str.632 = private unnamed_addr constant [33 x i8] c"BUILT_IN_BOOL_COMPARE_AND_SWAP_1\00", align 1
@.str.633 = private unnamed_addr constant [33 x i8] c"BUILT_IN_BOOL_COMPARE_AND_SWAP_2\00", align 1
@.str.634 = private unnamed_addr constant [33 x i8] c"BUILT_IN_BOOL_COMPARE_AND_SWAP_4\00", align 1
@.str.635 = private unnamed_addr constant [33 x i8] c"BUILT_IN_BOOL_COMPARE_AND_SWAP_8\00", align 1
@.str.636 = private unnamed_addr constant [34 x i8] c"BUILT_IN_BOOL_COMPARE_AND_SWAP_16\00", align 1
@.str.637 = private unnamed_addr constant [32 x i8] c"BUILT_IN_VAL_COMPARE_AND_SWAP_N\00", align 1
@.str.638 = private unnamed_addr constant [32 x i8] c"BUILT_IN_VAL_COMPARE_AND_SWAP_1\00", align 1
@.str.639 = private unnamed_addr constant [32 x i8] c"BUILT_IN_VAL_COMPARE_AND_SWAP_2\00", align 1
@.str.640 = private unnamed_addr constant [32 x i8] c"BUILT_IN_VAL_COMPARE_AND_SWAP_4\00", align 1
@.str.641 = private unnamed_addr constant [32 x i8] c"BUILT_IN_VAL_COMPARE_AND_SWAP_8\00", align 1
@.str.642 = private unnamed_addr constant [33 x i8] c"BUILT_IN_VAL_COMPARE_AND_SWAP_16\00", align 1
@.str.643 = private unnamed_addr constant [29 x i8] c"BUILT_IN_LOCK_TEST_AND_SET_N\00", align 1
@.str.644 = private unnamed_addr constant [29 x i8] c"BUILT_IN_LOCK_TEST_AND_SET_1\00", align 1
@.str.645 = private unnamed_addr constant [29 x i8] c"BUILT_IN_LOCK_TEST_AND_SET_2\00", align 1
@.str.646 = private unnamed_addr constant [29 x i8] c"BUILT_IN_LOCK_TEST_AND_SET_4\00", align 1
@.str.647 = private unnamed_addr constant [29 x i8] c"BUILT_IN_LOCK_TEST_AND_SET_8\00", align 1
@.str.648 = private unnamed_addr constant [30 x i8] c"BUILT_IN_LOCK_TEST_AND_SET_16\00", align 1
@.str.649 = private unnamed_addr constant [24 x i8] c"BUILT_IN_LOCK_RELEASE_N\00", align 1
@.str.650 = private unnamed_addr constant [24 x i8] c"BUILT_IN_LOCK_RELEASE_1\00", align 1
@.str.651 = private unnamed_addr constant [24 x i8] c"BUILT_IN_LOCK_RELEASE_2\00", align 1
@.str.652 = private unnamed_addr constant [24 x i8] c"BUILT_IN_LOCK_RELEASE_4\00", align 1
@.str.653 = private unnamed_addr constant [24 x i8] c"BUILT_IN_LOCK_RELEASE_8\00", align 1
@.str.654 = private unnamed_addr constant [25 x i8] c"BUILT_IN_LOCK_RELEASE_16\00", align 1
@.str.655 = private unnamed_addr constant [21 x i8] c"BUILT_IN_SYNCHRONIZE\00", align 1
@.str.656 = private unnamed_addr constant [28 x i8] c"BUILT_IN_OMP_GET_THREAD_NUM\00", align 1
@.str.657 = private unnamed_addr constant [29 x i8] c"BUILT_IN_OMP_GET_NUM_THREADS\00", align 1
@.str.658 = private unnamed_addr constant [27 x i8] c"BUILT_IN_GOMP_ATOMIC_START\00", align 1
@.str.659 = private unnamed_addr constant [25 x i8] c"BUILT_IN_GOMP_ATOMIC_END\00", align 1
@.str.660 = private unnamed_addr constant [22 x i8] c"BUILT_IN_GOMP_BARRIER\00", align 1
@.str.661 = private unnamed_addr constant [23 x i8] c"BUILT_IN_GOMP_TASKWAIT\00", align 1
@.str.662 = private unnamed_addr constant [29 x i8] c"BUILT_IN_GOMP_CRITICAL_START\00", align 1
@.str.663 = private unnamed_addr constant [27 x i8] c"BUILT_IN_GOMP_CRITICAL_END\00", align 1
@.str.664 = private unnamed_addr constant [34 x i8] c"BUILT_IN_GOMP_CRITICAL_NAME_START\00", align 1
@.str.665 = private unnamed_addr constant [32 x i8] c"BUILT_IN_GOMP_CRITICAL_NAME_END\00", align 1
@.str.666 = private unnamed_addr constant [32 x i8] c"BUILT_IN_GOMP_LOOP_STATIC_START\00", align 1
@.str.667 = private unnamed_addr constant [33 x i8] c"BUILT_IN_GOMP_LOOP_DYNAMIC_START\00", align 1
@.str.668 = private unnamed_addr constant [32 x i8] c"BUILT_IN_GOMP_LOOP_GUIDED_START\00", align 1
@.str.669 = private unnamed_addr constant [33 x i8] c"BUILT_IN_GOMP_LOOP_RUNTIME_START\00", align 1
@.str.670 = private unnamed_addr constant [40 x i8] c"BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START\00", align 1
@.str.671 = private unnamed_addr constant [41 x i8] c"BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_START\00", align 1
@.str.672 = private unnamed_addr constant [40 x i8] c"BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_START\00", align 1
@.str.673 = private unnamed_addr constant [41 x i8] c"BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_START\00", align 1
@.str.674 = private unnamed_addr constant [31 x i8] c"BUILT_IN_GOMP_LOOP_STATIC_NEXT\00", align 1
@.str.675 = private unnamed_addr constant [32 x i8] c"BUILT_IN_GOMP_LOOP_DYNAMIC_NEXT\00", align 1
@.str.676 = private unnamed_addr constant [31 x i8] c"BUILT_IN_GOMP_LOOP_GUIDED_NEXT\00", align 1
@.str.677 = private unnamed_addr constant [32 x i8] c"BUILT_IN_GOMP_LOOP_RUNTIME_NEXT\00", align 1
@.str.678 = private unnamed_addr constant [39 x i8] c"BUILT_IN_GOMP_LOOP_ORDERED_STATIC_NEXT\00", align 1
@.str.679 = private unnamed_addr constant [40 x i8] c"BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_NEXT\00", align 1
@.str.680 = private unnamed_addr constant [39 x i8] c"BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_NEXT\00", align 1
@.str.681 = private unnamed_addr constant [40 x i8] c"BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_NEXT\00", align 1
@.str.682 = private unnamed_addr constant [36 x i8] c"BUILT_IN_GOMP_LOOP_ULL_STATIC_START\00", align 1
@.str.683 = private unnamed_addr constant [37 x i8] c"BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_START\00", align 1
@.str.684 = private unnamed_addr constant [36 x i8] c"BUILT_IN_GOMP_LOOP_ULL_GUIDED_START\00", align 1
@.str.685 = private unnamed_addr constant [37 x i8] c"BUILT_IN_GOMP_LOOP_ULL_RUNTIME_START\00", align 1
@.str.686 = private unnamed_addr constant [44 x i8] c"BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START\00", align 1
@.str.687 = private unnamed_addr constant [45 x i8] c"BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_START\00", align 1
@.str.688 = private unnamed_addr constant [44 x i8] c"BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_START\00", align 1
@.str.689 = private unnamed_addr constant [45 x i8] c"BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_START\00", align 1
@.str.690 = private unnamed_addr constant [35 x i8] c"BUILT_IN_GOMP_LOOP_ULL_STATIC_NEXT\00", align 1
@.str.691 = private unnamed_addr constant [36 x i8] c"BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_NEXT\00", align 1
@.str.692 = private unnamed_addr constant [35 x i8] c"BUILT_IN_GOMP_LOOP_ULL_GUIDED_NEXT\00", align 1
@.str.693 = private unnamed_addr constant [36 x i8] c"BUILT_IN_GOMP_LOOP_ULL_RUNTIME_NEXT\00", align 1
@.str.694 = private unnamed_addr constant [43 x i8] c"BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_NEXT\00", align 1
@.str.695 = private unnamed_addr constant [44 x i8] c"BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_NEXT\00", align 1
@.str.696 = private unnamed_addr constant [43 x i8] c"BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_NEXT\00", align 1
@.str.697 = private unnamed_addr constant [44 x i8] c"BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_NEXT\00", align 1
@.str.698 = private unnamed_addr constant [41 x i8] c"BUILT_IN_GOMP_PARALLEL_LOOP_STATIC_START\00", align 1
@.str.699 = private unnamed_addr constant [42 x i8] c"BUILT_IN_GOMP_PARALLEL_LOOP_DYNAMIC_START\00", align 1
@.str.700 = private unnamed_addr constant [41 x i8] c"BUILT_IN_GOMP_PARALLEL_LOOP_GUIDED_START\00", align 1
@.str.701 = private unnamed_addr constant [42 x i8] c"BUILT_IN_GOMP_PARALLEL_LOOP_RUNTIME_START\00", align 1
@.str.702 = private unnamed_addr constant [23 x i8] c"BUILT_IN_GOMP_LOOP_END\00", align 1
@.str.703 = private unnamed_addr constant [30 x i8] c"BUILT_IN_GOMP_LOOP_END_NOWAIT\00", align 1
@.str.704 = private unnamed_addr constant [28 x i8] c"BUILT_IN_GOMP_ORDERED_START\00", align 1
@.str.705 = private unnamed_addr constant [26 x i8] c"BUILT_IN_GOMP_ORDERED_END\00", align 1
@.str.706 = private unnamed_addr constant [29 x i8] c"BUILT_IN_GOMP_PARALLEL_START\00", align 1
@.str.707 = private unnamed_addr constant [27 x i8] c"BUILT_IN_GOMP_PARALLEL_END\00", align 1
@.str.708 = private unnamed_addr constant [19 x i8] c"BUILT_IN_GOMP_TASK\00", align 1
@.str.709 = private unnamed_addr constant [29 x i8] c"BUILT_IN_GOMP_SECTIONS_START\00", align 1
@.str.710 = private unnamed_addr constant [28 x i8] c"BUILT_IN_GOMP_SECTIONS_NEXT\00", align 1
@.str.711 = private unnamed_addr constant [38 x i8] c"BUILT_IN_GOMP_PARALLEL_SECTIONS_START\00", align 1
@.str.712 = private unnamed_addr constant [27 x i8] c"BUILT_IN_GOMP_SECTIONS_END\00", align 1
@.str.713 = private unnamed_addr constant [34 x i8] c"BUILT_IN_GOMP_SECTIONS_END_NOWAIT\00", align 1
@.str.714 = private unnamed_addr constant [27 x i8] c"BUILT_IN_GOMP_SINGLE_START\00", align 1
@.str.715 = private unnamed_addr constant [32 x i8] c"BUILT_IN_GOMP_SINGLE_COPY_START\00", align 1
@.str.716 = private unnamed_addr constant [30 x i8] c"BUILT_IN_GOMP_SINGLE_COPY_END\00", align 1
@built_in_names = dso_local local_unnamed_addr global <{ [713 x i8*], [8 x i8*] }> <{ [713 x i8*] [i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.60, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.83, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.84, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.86, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.88, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.89, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.90, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.91, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.96, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.97, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.98, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.99, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.100, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.101, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.102, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.103, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.104, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.105, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.107, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.108, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.109, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.110, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.111, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.112, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.113, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.114, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.115, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.116, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.117, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.118, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.119, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.120, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.121, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.122, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.123, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.124, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.125, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.135, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.136, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.137, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.138, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.139, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.140, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.141, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.142, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.143, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.144, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.145, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.146, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.147, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.148, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.149, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.150, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.151, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.152, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.153, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.154, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.155, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.156, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.157, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.158, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.159, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.160, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.161, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.162, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.163, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.164, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.165, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.166, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.167, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.168, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.169, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.170, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.171, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.172, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.173, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.174, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.175, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.176, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.177, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.178, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.179, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.180, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.181, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.182, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.183, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.184, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.185, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.186, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.187, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.188, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.189, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.190, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.191, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.192, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.193, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.194, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.195, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.196, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.197, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.198, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.199, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.200, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.201, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.202, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.203, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.204, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.205, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.206, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.207, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.208, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.209, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.210, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.211, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.212, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.213, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.214, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.215, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.216, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.217, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.218, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.219, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.220, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.221, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.222, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.223, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.224, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.225, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.226, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.227, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.229, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.230, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.231, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.232, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.233, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.235, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.236, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.237, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.238, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.239, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.240, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.241, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.242, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.243, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.244, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.245, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.246, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.247, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.248, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.249, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.250, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.251, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.252, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.253, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.254, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.255, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.256, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.257, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.258, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.259, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.260, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.261, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.262, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.263, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.264, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.265, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.266, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.267, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.268, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.269, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.270, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.271, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.272, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.273, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.274, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.275, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.276, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.277, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.278, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.279, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.280, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.282, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.283, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.285, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.287, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.288, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.290, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.291, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.293, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.294, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.296, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.297, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.298, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.299, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.300, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.301, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.302, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.303, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.304, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.305, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.306, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.307, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.308, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.309, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.310, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.311, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.312, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.313, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.314, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.315, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.316, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.317, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.318, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.319, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.320, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.321, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.322, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.323, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.324, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.325, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.326, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.327, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.328, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.329, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.330, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.331, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.332, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.333, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.334, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.335, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.336, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.337, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.338, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.339, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.340, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.341, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.342, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.343, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.344, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.345, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.346, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.347, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.348, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.349, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.350, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.351, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.352, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.353, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.354, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.355, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.356, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.357, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.358, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.359, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.360, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.361, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.362, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.363, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.364, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.365, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.366, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.367, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.368, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.369, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.370, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.371, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.372, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.373, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.374, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.375, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.376, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.377, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.378, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.379, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.380, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.381, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.382, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.383, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.384, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.385, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.387, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.389, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.390, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.391, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.392, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.393, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.394, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.396, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.397, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.398, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.399, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.400, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.401, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.402, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.403, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.404, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.406, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.407, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.408, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.409, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.410, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.411, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.412, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.413, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.414, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.415, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.416, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.417, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.418, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.419, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.420, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.421, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.422, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.423, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.424, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.425, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.426, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.427, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.428, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.429, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.430, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.431, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.432, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.433, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.434, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.435, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.436, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.437, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.438, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.439, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.440, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.441, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.442, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.443, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.444, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.445, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.446, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.447, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.448, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.449, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.450, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.451, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.452, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.453, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.454, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.455, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.456, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.457, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.458, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.459, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.460, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.461, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.462, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.463, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.464, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.465, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.466, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.467, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.468, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.469, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.470, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.471, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.472, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.473, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.474, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.475, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.476, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.477, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.478, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.479, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.480, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.481, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.482, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.483, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.484, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.485, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.486, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.487, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.488, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.489, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.490, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.491, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.492, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.493, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.494, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.495, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.496, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.497, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.498, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.499, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.500, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.501, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.502, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.503, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.504, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.505, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.506, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.507, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.508, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.509, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.510, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.511, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.512, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.513, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.514, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.515, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.516, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.517, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.518, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.519, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.520, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.521, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.522, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.523, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.524, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.525, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.526, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.527, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.528, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.529, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.530, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.531, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.532, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.533, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.534, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.535, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.536, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.537, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.538, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.539, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.540, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.541, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.542, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.543, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.544, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.545, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.546, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.547, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.548, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.549, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.550, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.551, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.552, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.553, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.554, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.555, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.556, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.557, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.558, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.559, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.560, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.561, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.562, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.563, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.564, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.565, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.566, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.567, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.568, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.569, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.570, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.571, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.572, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.573, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.574, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.575, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.576, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.577, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.578, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.579, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.580, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.581, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.582, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.583, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.584, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.585, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.586, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.587, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.588, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.589, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.590, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.591, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.592, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.593, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.594, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.595, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.596, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.597, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.598, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.599, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.600, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.601, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.602, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.603, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.604, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.605, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.606, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.607, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.608, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.609, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.610, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.611, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.612, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.613, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.614, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.615, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.616, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.617, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.618, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.619, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.620, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.621, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.622, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.623, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.624, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.625, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.626, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.627, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.628, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.629, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.630, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.631, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.632, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.633, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.634, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.635, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.636, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.637, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.638, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.639, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.640, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.641, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.642, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.643, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.644, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.645, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.646, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.647, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.648, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.649, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.650, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.651, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.652, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.653, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.654, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.655, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.656, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.657, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.658, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.659, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.660, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.661, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.662, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.663, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.664, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.665, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.666, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.667, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.668, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.669, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.670, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.671, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.672, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.673, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.674, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.675, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.676, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.677, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.678, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.679, i32 0, i32 0), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.680, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.681, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.682, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.683, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.684, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.685, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.686, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.687, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.688, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.689, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.690, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.691, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.692, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.693, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.694, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.695, i32 0, i32 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.696, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.697, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.698, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.699, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.700, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.701, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.702, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.703, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.704, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.705, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.706, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.707, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.708, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.709, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.710, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.711, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.712, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.713, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.714, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.715, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.716, i32 0, i32 0)], [8 x i8*] zeroinitializer }>, align 16, !dbg !4303
@.str.717 = private unnamed_addr constant [11 x i8] c"__builtin_\00", align 1
@.str.718 = private unnamed_addr constant [8 x i8] c"__sync_\00", align 1
@tree_code_type = external dso_local local_unnamed_addr constant [0 x i32], align 4
@optimize = external dso_local local_unnamed_addr global i32, align 4
@flag_tree_ter = external dso_local local_unnamed_addr global i32, align 4
@input_location = external dso_local local_unnamed_addr global i32, align 4
@.str.719 = private unnamed_addr constant [41 x i8] c"offset outside bounds of constant string\00", align 1
@setjmp_alias_set = internal unnamed_addr global i32 -1, align 4, !dbg !4361
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@current_function_decl = external dso_local local_unnamed_addr global %union.tree_node*, align 8
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@global_trees = external dso_local local_unnamed_addr global [131 x %union.tree_node*], align 16
@sizetype_tab = external dso_local local_unnamed_addr global [4 x %union.tree_node*], align 16
@flag_mudflap = external dso_local local_unnamed_addr global i32, align 4
@.str.720 = private unnamed_addr constant [53 x i8] c"first argument to %<va_arg%> not of type %<va_list%>\00", align 1
@lang_hooks = external dso_local local_unnamed_addr global %struct.lang_hooks, align 8
@gimplify_va_arg_expr.gave_help = internal unnamed_addr global i1 false, align 1, !dbg !4381
@.str.721 = private unnamed_addr constant [51 x i8] c"%qT is promoted to %qT when passed through %<...%>\00", align 1
@.str.722 = private unnamed_addr constant [47 x i8] c"(so you should pass %qT not %qT to %<va_arg%>)\00", align 1
@.str.723 = private unnamed_addr constant [48 x i8] c"if this code is reached, the program will abort\00", align 1
@implicit_built_in_decls = common dso_local local_unnamed_addr global [721 x %union.tree_node*] zeroinitializer, align 16, !dbg !4354
@integer_types = external dso_local local_unnamed_addr global [11 x %union.tree_node*], align 16
@tree_contains_struct = external dso_local local_unnamed_addr global [191 x [64 x i8]], align 16
@built_in_decls = common dso_local local_unnamed_addr global [721 x %union.tree_node*] zeroinitializer, align 16, !dbg !4351
@.str.724 = private unnamed_addr constant [11 x i8] c"builtins.c\00", align 1
@.str.725 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.726 = private unnamed_addr constant [46 x i8] c"%<va_start%> used in function with fixed args\00", align 1
@.str.727 = private unnamed_addr constant [51 x i8] c"wrong number of arguments to function %<va_start%>\00", align 1
@.str.728 = private unnamed_addr constant [50 x i8] c"%<__builtin_next_arg%> called without an argument\00", align 1
@.str.729 = private unnamed_addr constant [61 x i8] c"wrong number of arguments to function %<__builtin_next_arg%>\00", align 1
@.str.730 = private unnamed_addr constant [57 x i8] c"second parameter of %<va_start%> not last named argument\00", align 1
@.str.731 = private unnamed_addr constant [96 x i8] c"undefined behaviour when second parameter of %<va_start%> is declared with %<register%> storage\00", align 1
@target_percent = internal unnamed_addr global i64 0, align 8, !dbg !4356
@target_percent_s = internal global [3 x i8] zeroinitializer, align 1, !dbg !4358
@.str.732 = private unnamed_addr constant [7 x i8] c"memcpy\00", align 1
@libfunc_table = external dso_local local_unnamed_addr global [14 x %struct.rtx_def*], align 16
@.str.733 = private unnamed_addr constant [7 x i8] c"memset\00", align 1
@.str.734 = private unnamed_addr constant [8 x i8] c"memmove\00", align 1
@.str.735 = private unnamed_addr constant [7 x i8] c"memcmp\00", align 1
@.str.736 = private unnamed_addr constant [6 x i8] c"abort\00", align 1
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str.737 = private unnamed_addr constant [14 x i8] c"always_inline\00", align 1
@real_format_for_mode = external dso_local local_unnamed_addr global [7 x %struct.real_format*], align 16
@mode_inner = external dso_local local_unnamed_addr constant [87 x i8], align 16
@.str.738 = private unnamed_addr constant [40 x i8] c"target format does not support infinity\00", align 1
@folding_initializer = external dso_local local_unnamed_addr global i32, align 4
@flag_errno_math = external dso_local local_unnamed_addr global i32, align 4
@flag_signed_zeros = external dso_local local_unnamed_addr global i32, align 4
@dconst0 = external dso_local global %struct.real_value, align 8
@flag_finite_math_only = external dso_local local_unnamed_addr global i32, align 4
@.str.739 = private unnamed_addr constant [7 x i8] c"0x1p%d\00", align 1
@optab_table = external dso_local global [159 x %struct.optab_d], align 16
@target_newline = internal unnamed_addr global i64 0, align 8, !dbg !4363
@target_percent_s_newline = internal global [4 x i8] zeroinitializer, align 1, !dbg !4365
@target_percent_c = internal global [3 x i8] zeroinitializer, align 1, !dbg !4367
@ix86_isa_flags = external dso_local local_unnamed_addr global i32, align 4
@ptr_mode = external dso_local local_unnamed_addr global i32, align 4
@dconst1 = external dso_local global %struct.real_value, align 8
@gimple_ops_offset_ = external dso_local local_unnamed_addr constant [0 x i64], align 8
@.str.740 = private unnamed_addr constant [11 x i8] c"./gimple.h\00", align 1
@gss_for_code_ = external dso_local local_unnamed_addr constant [0 x i32], align 4
@init_target_chars.init = internal unnamed_addr global i1 false, align 1, !dbg !4382
@target_c = internal unnamed_addr global i64 0, align 8, !dbg !4375
@target_s = internal unnamed_addr global i64 0, align 8, !dbg !4377

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !4387 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !4400, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !4401, metadata !DIExpression()), !dbg !4402
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4403
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #7, !dbg !4404
  ret i32 %call, !dbg !4405
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !4406 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !4409
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #7, !dbg !4410
  ret i32 %call, !dbg !4411
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !4412 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !4466, metadata !DIExpression()), !dbg !4467
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !4468
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !4468
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !4468
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !4468
  %cmp = icmp uge i8* %0, %1, !dbg !4468
  %conv1 = zext i1 %cmp to i64, !dbg !4468
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4468
  %tobool = icmp eq i64 %expval, 0, !dbg !4468
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4468

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !4468
  br label %cond.end, !dbg !4468

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !4468
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !4468
  %2 = load i8, i8* %0, align 1, !dbg !4468
  %conv3 = zext i8 %2 to i32, !dbg !4468
  br label %cond.end, !dbg !4468

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !4468
  ret i32 %cond, !dbg !4469
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !4470 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !4472, metadata !DIExpression()), !dbg !4473
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !4474
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !4474
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !4474
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !4474
  %cmp = icmp uge i8* %0, %1, !dbg !4474
  %conv1 = zext i1 %cmp to i64, !dbg !4474
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4474
  %tobool = icmp eq i64 %expval, 0, !dbg !4474
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4474

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #7, !dbg !4474
  br label %cond.end, !dbg !4474

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !4474
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !4474
  %2 = load i8, i8* %0, align 1, !dbg !4474
  %conv3 = zext i8 %2 to i32, !dbg !4474
  br label %cond.end, !dbg !4474

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !4474
  ret i32 %cond, !dbg !4475
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !4476 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !4477
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !4477
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !4477
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !4477
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !4477
  %cmp = icmp uge i8* %1, %2, !dbg !4477
  %conv1 = zext i1 %cmp to i64, !dbg !4477
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4477
  %tobool = icmp eq i64 %expval, 0, !dbg !4477
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4477

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #7, !dbg !4477
  br label %cond.end, !dbg !4477

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !4477
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !4477
  %3 = load i8, i8* %1, align 1, !dbg !4477
  %conv3 = zext i8 %3 to i32, !dbg !4477
  br label %cond.end, !dbg !4477

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !4477
  ret i32 %cond, !dbg !4478
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !4479 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4483, metadata !DIExpression()), !dbg !4484
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4485
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #7, !dbg !4486
  ret i32 %call, !dbg !4487
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4488 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4492, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4493, metadata !DIExpression()), !dbg !4494
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !4495
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !4495
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !4495
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !4495
  %cmp = icmp uge i8* %0, %1, !dbg !4495
  %conv1 = zext i1 %cmp to i64, !dbg !4495
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4495
  %tobool = icmp eq i64 %expval, 0, !dbg !4495
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4495

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !4495
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !4495
  br label %cond.end, !dbg !4495

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !4495
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !4495
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !4495
  store i8 %conv2, i8* %0, align 1, !dbg !4495
  %conv6 = and i32 %__c, 255, !dbg !4495
  br label %cond.end, !dbg !4495

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !4495
  ret i32 %cond, !dbg !4496
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4497 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4499, metadata !DIExpression()), !dbg !4501
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4500, metadata !DIExpression()), !dbg !4501
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !4502
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !4502
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !4502
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !4502
  %cmp = icmp uge i8* %0, %1, !dbg !4502
  %conv1 = zext i1 %cmp to i64, !dbg !4502
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4502
  %tobool = icmp eq i64 %expval, 0, !dbg !4502
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4502

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !4502
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #7, !dbg !4502
  br label %cond.end, !dbg !4502

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !4502
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !4502
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !4502
  store i8 %conv2, i8* %0, align 1, !dbg !4502
  %conv6 = and i32 %__c, 255, !dbg !4502
  br label %cond.end, !dbg !4502

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !4502
  ret i32 %cond, !dbg !4503
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !4504 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4506, metadata !DIExpression()), !dbg !4507
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !4508
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !4508
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !4508
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !4508
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !4508
  %cmp = icmp uge i8* %1, %2, !dbg !4508
  %conv1 = zext i1 %cmp to i64, !dbg !4508
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !4508
  %tobool = icmp eq i64 %expval, 0, !dbg !4508
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !4508

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !4508
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #7, !dbg !4508
  br label %cond.end, !dbg !4508

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !4508
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !4508
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !4508
  store i8 %conv4, i8* %1, align 1, !dbg !4508
  %conv6 = and i32 %__c, 255, !dbg !4508
  br label %cond.end, !dbg !4508

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !4508
  ret i32 %cond, !dbg !4509
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4510 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !4516, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata i64* %__n, metadata !4517, metadata !DIExpression()), !dbg !4519
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4518, metadata !DIExpression()), !dbg !4519
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #7, !dbg !4520
  ret i64 %call, !dbg !4521
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4522 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4524, metadata !DIExpression()), !dbg !4525
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !4526
  %0 = load i32, i32* %_flags, align 8, !dbg !4526
  %and = lshr i32 %0, 4, !dbg !4526
  %and.lobit = and i32 %and, 1, !dbg !4526
  ret i32 %and.lobit, !dbg !4527
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !4528 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !4530, metadata !DIExpression()), !dbg !4531
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !4532
  %0 = load i32, i32* %_flags, align 8, !dbg !4532
  %and = lshr i32 %0, 5, !dbg !4532
  %and.lobit = and i32 %and, 1, !dbg !4532
  ret i32 %and.lobit, !dbg !4533
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !4534 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4537, metadata !DIExpression()), !dbg !4538
  %__c.off = add i32 %__c, 128, !dbg !4539
  %0 = icmp ult i32 %__c.off, 384, !dbg !4539
  br i1 %0, label %cond.true, label %cond.end, !dbg !4539

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #7, !dbg !4540
  %1 = load i32*, i32** %call, align 8, !dbg !4541
  %idxprom = sext i32 %__c to i64, !dbg !4542
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !4542
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4542
  br label %cond.end, !dbg !4543

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !4543
  ret i32 %cond, !dbg !4544
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !4545 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !4547, metadata !DIExpression()), !dbg !4548
  %__c.off = add i32 %__c, 128, !dbg !4549
  %0 = icmp ult i32 %__c.off, 384, !dbg !4549
  br i1 %0, label %cond.true, label %cond.end, !dbg !4549

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #7, !dbg !4550
  %1 = load i32*, i32** %call, align 8, !dbg !4551
  %idxprom = sext i32 %__c to i64, !dbg !4552
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !4552
  %2 = load i32, i32* %arrayidx, align 4, !dbg !4552
  br label %cond.end, !dbg !4553

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !4553
  ret i32 %cond, !dbg !4554
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !4555 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !4560, metadata !DIExpression()), !dbg !4561
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !4562
  %conv = trunc i64 %call to i32, !dbg !4563
  ret i32 %conv, !dbg !4564
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !4565 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !4569, metadata !DIExpression()), !dbg !4570
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #7, !dbg !4571
  ret i64 %call, !dbg !4572
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !4573 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !4578, metadata !DIExpression()), !dbg !4579
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #7, !dbg !4580
  ret i64 %call, !dbg !4581
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !4582 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !4588, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i8* %__base, metadata !4589, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !4590, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i64 %__size, metadata !4591, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !4592, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i64 0, metadata !4593, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !4594, metadata !DIExpression()), !dbg !4598
  br label %while.cond, !dbg !4599

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !4600
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !4598
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !4594, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !4593, metadata !DIExpression()), !dbg !4598
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !4601
  br i1 %cmp, label %while.body, label %cleanup, !dbg !4599

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !4602
  %div = lshr i64 %add, 1, !dbg !4604
  call void @llvm.dbg.value(metadata i64 %div, metadata !4595, metadata !DIExpression()), !dbg !4598
  %mul = mul i64 %div, %__size, !dbg !4605
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !4606
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !4596, metadata !DIExpression()), !dbg !4598
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #7, !dbg !4607
  call void @llvm.dbg.value(metadata i32 %call, metadata !4597, metadata !DIExpression()), !dbg !4598
  %cmp1 = icmp slt i32 %call, 0, !dbg !4608
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !4610

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !4611
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !4613

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !4614
  call void @llvm.dbg.value(metadata i64 %add4, metadata !4593, metadata !DIExpression()), !dbg !4598
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !4598
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !4598
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !4594, metadata !DIExpression()), !dbg !4598
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !4593, metadata !DIExpression()), !dbg !4598
  br label %while.cond, !dbg !4599, !llvm.loop !4615

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !4598
  ret i8* %retval.0, !dbg !4617
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !4618 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !4624, metadata !DIExpression()), !dbg !4625
  %call = tail call double @strtod(i8* %__nptr, i8** null) #7, !dbg !4626
  ret double %call, !dbg !4627
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !4628 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !4637, metadata !DIExpression()), !dbg !4640
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !4638, metadata !DIExpression()), !dbg !4640
  call void @llvm.dbg.value(metadata i32 %base, metadata !4639, metadata !DIExpression()), !dbg !4640
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !4641
  ret i64 %call, !dbg !4642
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !4643 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !4649, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !4650, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.value(metadata i32 %base, metadata !4651, metadata !DIExpression()), !dbg !4652
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #7, !dbg !4653
  ret i64 %call, !dbg !4654
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !4655 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !4666, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !4667, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata i32 %base, metadata !4668, metadata !DIExpression()), !dbg !4669
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !4670
  ret i64 %call, !dbg !4671
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !4672 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !4676, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !4677, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.value(metadata i32 %base, metadata !4678, metadata !DIExpression()), !dbg !4679
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #7, !dbg !4680
  ret i64 %call, !dbg !4681
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !4682 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4722, metadata !DIExpression()), !dbg !4724
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4723, metadata !DIExpression()), !dbg !4724
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !4725
  ret i32 %call, !dbg !4726
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !4727 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4729, metadata !DIExpression()), !dbg !4731
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4730, metadata !DIExpression()), !dbg !4731
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #7, !dbg !4732
  ret i32 %call, !dbg !4733
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !4734 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4738, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4739, metadata !DIExpression()), !dbg !4740
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #7, !dbg !4741
  ret i32 %call, !dbg !4742
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !4743 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4747, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !4748, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !4749, metadata !DIExpression()), !dbg !4751
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !4750, metadata !DIExpression()), !dbg !4751
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #7, !dbg !4752
  ret i32 %call, !dbg !4753
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !4754 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4758, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !4759, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !4760, metadata !DIExpression()), !dbg !4761
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !4760, metadata !DIExpression(DW_OP_deref)), !dbg !4761
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !4762
  ret i32 %call, !dbg !4763
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !4764 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4768, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4769, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !4770, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !4771, metadata !DIExpression()), !dbg !4772
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !4771, metadata !DIExpression(DW_OP_deref)), !dbg !4772
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #7, !dbg !4773
  ret i32 %call, !dbg !4774
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !4775 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4799, metadata !DIExpression()), !dbg !4801
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4800, metadata !DIExpression()), !dbg !4801
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !4802
  ret i32 %call, !dbg !4803
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !4804 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !4806, metadata !DIExpression()), !dbg !4808
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4807, metadata !DIExpression()), !dbg !4808
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #7, !dbg !4809
  ret i32 %call, !dbg !4810
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !4811 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4815, metadata !DIExpression()), !dbg !4817
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4816, metadata !DIExpression()), !dbg !4817
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #7, !dbg !4818
  ret i32 %call, !dbg !4819
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !4820 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !4824, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !4825, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !4826, metadata !DIExpression()), !dbg !4828
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !4827, metadata !DIExpression()), !dbg !4828
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #7, !dbg !4829
  ret i32 %call, !dbg !4830
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @is_builtin_name(i8* %name) local_unnamed_addr #5 !dbg !4831 {
entry:
  call void @llvm.dbg.value(metadata i8* %name, metadata !4835, metadata !DIExpression()), !dbg !4836
  %call = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.717, i64 0, i64 0), i64 10) #7, !dbg !4837
  %cmp = icmp eq i32 %call, 0, !dbg !4839
  br i1 %cmp, label %return, label %if.end, !dbg !4840

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @strncmp(i8* %name, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.718, i64 0, i64 0), i64 7) #7, !dbg !4841
  %cmp2 = icmp eq i32 %call1, 0, !dbg !4843
  %. = zext i1 %cmp2 to i8, !dbg !4836
  br label %return, !dbg !4836

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i8 [ 1, %entry ], [ %., %if.end ], !dbg !4836
  ret i8 %retval.0, !dbg !4844
}

declare dso_local i32 @strncmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @is_builtin_fn(%union.tree_node* %decl) local_unnamed_addr #5 !dbg !4845 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !4849, metadata !DIExpression()), !dbg !4850
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4851
  %bf.load = load i64, i64* %0, align 8, !dbg !4851
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4852
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !4852
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4853

land.rhs:                                         ; preds = %entry
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !4854
  %bf.load1 = load i32, i32* %built_in_class, align 8, !dbg !4854
  %bf.clear2 = and i32 %bf.load1, 6144, !dbg !4854
  %cmp3 = icmp ne i32 %bf.clear2, 0, !dbg !4854
  %phitmp = zext i1 %cmp3 to i8
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %1 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %1, !dbg !4855
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_object_alignment(%union.tree_node* %exp, i32 %align, i32 %max_align) local_unnamed_addr #5 !dbg !4856 {
entry:
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %offset = alloca %union.tree_node*, align 8
  %mode = alloca i32, align 4
  %unsignedp = alloca i32, align 4
  %volatilep = alloca i32, align 4
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4860, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata i32 %align, metadata !4861, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata i32 %max_align, metadata !4862, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata i32 %max_align, metadata !4863, metadata !DIExpression()), !dbg !4880
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %exp) #8, !dbg !4881
  %tobool = icmp eq i8 %call, 0, !dbg !4881
  br i1 %tobool, label %if.end76, label %if.then, !dbg !4882

if.then:                                          ; preds = %entry
  %0 = bitcast i64* %bitsize to i8*, !dbg !4883
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4883
  %1 = bitcast i64* %bitpos to i8*, !dbg !4883
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4883
  %2 = bitcast %union.tree_node** %offset to i8*, !dbg !4884
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #6, !dbg !4884
  %3 = bitcast i32* %mode to i8*, !dbg !4885
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #6, !dbg !4885
  %4 = bitcast i32* %unsignedp to i8*, !dbg !4886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #6, !dbg !4886
  %5 = bitcast i32* %volatilep to i8*, !dbg !4886
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6, !dbg !4886
  call void @llvm.dbg.value(metadata i64* %bitsize, metadata !4864, metadata !DIExpression(DW_OP_deref)), !dbg !4887
  call void @llvm.dbg.value(metadata i64* %bitpos, metadata !4867, metadata !DIExpression(DW_OP_deref)), !dbg !4887
  call void @llvm.dbg.value(metadata %union.tree_node** %offset, metadata !4868, metadata !DIExpression(DW_OP_deref)), !dbg !4887
  call void @llvm.dbg.value(metadata i32* %mode, metadata !4869, metadata !DIExpression(DW_OP_deref)), !dbg !4887
  call void @llvm.dbg.value(metadata i32* %unsignedp, metadata !4870, metadata !DIExpression(DW_OP_deref)), !dbg !4887
  call void @llvm.dbg.value(metadata i32* %volatilep, metadata !4871, metadata !DIExpression(DW_OP_deref)), !dbg !4887
  %call1 = call %union.tree_node* @get_inner_reference(%union.tree_node* %exp, i64* nonnull %bitsize, i64* nonnull %bitpos, %union.tree_node** nonnull %offset, i32* nonnull %mode, i32* nonnull %unsignedp, i32* nonnull %volatilep, i8 zeroext 1) #7, !dbg !4888
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !4860, metadata !DIExpression()), !dbg !4880
  %6 = load i64, i64* %bitpos, align 8, !dbg !4889
  call void @llvm.dbg.value(metadata i64 %6, metadata !4867, metadata !DIExpression()), !dbg !4887
  %tobool2 = icmp eq i64 %6, 0, !dbg !4889
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !4891

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.value(metadata i64 %6, metadata !4867, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata i64 %6, metadata !4867, metadata !DIExpression()), !dbg !4887
  %sub = sub nsw i64 0, %6, !dbg !4892
  %and = and i64 %6, %sub, !dbg !4892
  %conv = trunc i64 %and to i32, !dbg !4892
  %cmp = icmp ugt i32 %conv, %max_align, !dbg !4892
  br i1 %cmp, label %if.end, label %cond.false, !dbg !4892

cond.false:                                       ; preds = %if.then3
  call void @llvm.dbg.value(metadata i64 %6, metadata !4867, metadata !DIExpression()), !dbg !4887
  call void @llvm.dbg.value(metadata i64 %6, metadata !4867, metadata !DIExpression()), !dbg !4887
  br label %if.end, !dbg !4892

if.end:                                           ; preds = %if.then, %cond.false, %if.then3
  %inner.0 = phi i32 [ %max_align, %if.then ], [ %conv, %cond.false ], [ %max_align, %if.then3 ], !dbg !4880
  call void @llvm.dbg.value(metadata i32 %inner.0, metadata !4863, metadata !DIExpression()), !dbg !4880
  %7 = bitcast %union.tree_node** %offset to %struct.tree_exp**, !dbg !4893
  %8 = bitcast %union.tree_node** %offset to i64*, !dbg !4893
  br label %while.cond, !dbg !4896

while.cond:                                       ; preds = %cleanup, %if.end
  %inner.1 = phi i32 [ %inner.0, %if.end ], [ %inner.5, %cleanup ], !dbg !4887
  call void @llvm.dbg.value(metadata i32 %inner.1, metadata !4863, metadata !DIExpression()), !dbg !4880
  %9 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !4897
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4868, metadata !DIExpression()), !dbg !4887
  %tobool8 = icmp eq %union.tree_node* %9, null, !dbg !4896
  br i1 %tobool8, label %while.end, label %while.body, !dbg !4896

while.body:                                       ; preds = %while.cond
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4896
  %bf.load = load i64, i64* %10, align 8, !dbg !4898
  %bf.cast5 = and i64 %bf.load, 65535, !dbg !4899
  %cmp9 = icmp eq i64 %bf.cast5, 63, !dbg !4899
  br i1 %cmp9, label %if.then11, label %if.end16, !dbg !4900

if.then11:                                        ; preds = %while.body
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !4901
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !4901
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !4872, metadata !DIExpression()), !dbg !4902
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4903
  %14 = bitcast %union.tree_node** %13 to i64*, !dbg !4903
  %15 = load i64, i64* %14, align 8, !dbg !4903
  store i64 %15, i64* %8, align 8, !dbg !4904
  %16 = inttoptr i64 %15 to %union.tree_node*, !dbg !4905
  br label %if.end16, !dbg !4905

if.end16:                                         ; preds = %while.body, %if.then11
  %17 = phi %union.tree_node* [ %16, %if.then11 ], [ %9, %while.body ], !dbg !4906
  %next_offset.0 = phi %union.tree_node* [ %12, %if.then11 ], [ null, %while.body ], !dbg !4907
  call void @llvm.dbg.value(metadata %union.tree_node* %next_offset.0, metadata !4872, metadata !DIExpression()), !dbg !4902
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !4868, metadata !DIExpression()), !dbg !4887
  %call17 = call i32 @host_integerp(%union.tree_node* %17, i32 1) #7, !dbg !4908
  %tobool18 = icmp eq i32 %call17, 0, !dbg !4908
  %18 = load %union.tree_node*, %union.tree_node** %offset, align 8, !dbg !4909
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !4868, metadata !DIExpression()), !dbg !4887
  br i1 %tobool18, label %if.else35, label %if.then19, !dbg !4910

if.then19:                                        ; preds = %if.end16
  %call20 = call i64 @tree_low_cst(%union.tree_node* %18, i32 1) #7, !dbg !4911
  %conv21 = trunc i64 %call20 to i32, !dbg !4912
  %mul = shl i32 %conv21, 3, !dbg !4913
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4874, metadata !DIExpression()), !dbg !4914
  %tobool22 = icmp eq i32 %mul, 0, !dbg !4915
  br i1 %tobool22, label %if.end75, label %if.then23, !dbg !4917

if.then23:                                        ; preds = %if.then19
  %sub24 = sub i32 0, %mul, !dbg !4918
  %and25 = and i32 %mul, %sub24, !dbg !4918
  %cmp26 = icmp ult i32 %inner.1, %and25, !dbg !4918
  %cond33 = select i1 %cmp26, i32 %inner.1, i32 %and25, !dbg !4918
  br label %if.end75, !dbg !4918

if.else35:                                        ; preds = %if.end16
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4919
  %bf.load37 = load i64, i64* %19, align 8, !dbg !4919
  %bf.cast396 = and i64 %bf.load37, 65535, !dbg !4920
  %cmp40 = icmp eq i64 %bf.cast396, 65, !dbg !4920
  br i1 %cmp40, label %land.lhs.true, label %if.else67, !dbg !4921

land.lhs.true:                                    ; preds = %if.else35
  %20 = getelementptr inbounds %union.tree_node, %union.tree_node* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !4922
  %21 = load %union.tree_node*, %union.tree_node** %20, align 8, !dbg !4922
  %call45 = call i32 @host_integerp(%union.tree_node* %21, i32 1) #7, !dbg !4923
  %tobool46 = icmp eq i32 %call45, 0, !dbg !4923
  br i1 %tobool46, label %if.else67, label %if.then47, !dbg !4924

if.then47:                                        ; preds = %land.lhs.true
  %22 = load %struct.tree_exp*, %struct.tree_exp** %7, align 8, !dbg !4925
  %arrayidx50 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %22, i64 0, i32 3, i64 1, !dbg !4925
  %23 = load %union.tree_node*, %union.tree_node** %arrayidx50, align 8, !dbg !4925
  %call51 = call i64 @tree_low_cst(%union.tree_node* %23, i32 1) #7, !dbg !4926
  %conv52 = trunc i64 %call51 to i32, !dbg !4927
  %mul53 = shl i32 %conv52, 3, !dbg !4928
  call void @llvm.dbg.value(metadata i32 %mul53, metadata !4877, metadata !DIExpression()), !dbg !4929
  %tobool54 = icmp eq i32 %mul53, 0, !dbg !4930
  br i1 %tobool54, label %if.end75, label %if.then55, !dbg !4932

if.then55:                                        ; preds = %if.then47
  %sub56 = sub i32 0, %mul53, !dbg !4933
  %and57 = and i32 %mul53, %sub56, !dbg !4933
  %cmp58 = icmp ult i32 %inner.1, %and57, !dbg !4933
  %cond65 = select i1 %cmp58, i32 %inner.1, i32 %and57, !dbg !4933
  br label %if.end75, !dbg !4933

if.else67:                                        ; preds = %land.lhs.true, %if.else35
  %cmp68 = icmp ult i32 %inner.1, 8, !dbg !4934
  %inner.1. = select i1 %cmp68, i32 %inner.1, i32 8, !dbg !4934
  call void @llvm.dbg.value(metadata i32 %inner.1., metadata !4863, metadata !DIExpression()), !dbg !4880
  br label %cleanup, !dbg !4936

if.end75:                                         ; preds = %if.then19, %if.then47, %if.then55, %if.then23
  %inner.4 = phi i32 [ %inner.1, %if.then19 ], [ %cond33, %if.then23 ], [ %inner.1, %if.then47 ], [ %cond65, %if.then55 ], !dbg !4909
  call void @llvm.dbg.value(metadata i32 %inner.4, metadata !4863, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata %union.tree_node* %next_offset.0, metadata !4868, metadata !DIExpression()), !dbg !4887
  store %union.tree_node* %next_offset.0, %union.tree_node** %offset, align 8, !dbg !4937
  br label %cleanup, !dbg !4938

cleanup:                                          ; preds = %if.end75, %if.else67
  %inner.5 = phi i32 [ %inner.4, %if.end75 ], [ %inner.1., %if.else67 ], !dbg !4909
  %cleanup.dest.slot.0 = phi i1 [ true, %if.end75 ], [ false, %if.else67 ]
  call void @llvm.dbg.value(metadata i32 %inner.5, metadata !4863, metadata !DIExpression()), !dbg !4880
  br i1 %cleanup.dest.slot.0, label %while.cond, label %while.end, !llvm.loop !4939

while.end:                                        ; preds = %while.cond, %cleanup
  %inner.6 = phi i32 [ %inner.5, %cleanup ], [ %inner.1, %while.cond ], !dbg !4887
  call void @llvm.dbg.value(metadata i32 %inner.6, metadata !4863, metadata !DIExpression()), !dbg !4880
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6, !dbg !4940
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #6, !dbg !4940
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #6, !dbg !4940
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #6, !dbg !4940
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1) #6, !dbg !4940
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !4940
  br label %if.end76, !dbg !4941

if.end76:                                         ; preds = %entry, %while.end
  %inner.7 = phi i32 [ %inner.6, %while.end ], [ %max_align, %entry ], !dbg !4880
  %exp.addr.0 = phi %union.tree_node* [ %call1, %while.end ], [ %exp, %entry ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !4860, metadata !DIExpression()), !dbg !4880
  call void @llvm.dbg.value(metadata i32 %inner.7, metadata !4863, metadata !DIExpression()), !dbg !4880
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4942
  %bf.load78 = load i64, i64* %24, align 8, !dbg !4942
  %bf.cast801 = and i64 %bf.load78, 65535, !dbg !4944
  %cmp81 = icmp eq i64 %bf.cast801, 33, !dbg !4944
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !4945

if.then83:                                        ; preds = %if.end76
  %initial = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 5, !dbg !4946
  %25 = load %union.tree_node*, %union.tree_node** %initial, align 8, !dbg !4946
  call void @llvm.dbg.value(metadata %union.tree_node* %25, metadata !4860, metadata !DIExpression()), !dbg !4880
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4947
  %bf.load86.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !4949
  %.pre = and i64 %bf.load86.pre, 65535, !dbg !4949
  br label %if.end84, !dbg !4950

if.end84:                                         ; preds = %if.then83, %if.end76
  %bf.cast88.pre-phi = phi i64 [ %.pre, %if.then83 ], [ %bf.cast801, %if.end76 ], !dbg !4949
  %exp.addr.1 = phi %union.tree_node* [ %25, %if.then83 ], [ %exp.addr.0, %if.end76 ], !dbg !4880
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1, metadata !4860, metadata !DIExpression()), !dbg !4880
  %arrayidx89 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast88.pre-phi, !dbg !4949
  %26 = load i32, i32* %arrayidx89, align 4, !dbg !4949
  %cmp90 = icmp eq i32 %26, 3, !dbg !4949
  br i1 %cmp90, label %land.lhs.true92, label %if.else110, !dbg !4951

land.lhs.true92:                                  ; preds = %if.end84
  %cmp97 = icmp eq i64 %bf.cast88.pre-phi, 30, !dbg !4952
  br i1 %cmp97, label %if.else110, label %if.then99, !dbg !4953

if.then99:                                        ; preds = %land.lhs.true92
  %align101 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !4954
  %27 = load i32, i32* %align101, align 8, !dbg !4954
  %cmp102 = icmp ult i32 %inner.7, %27, !dbg !4954
  br i1 %cmp102, label %if.end163, label %cond.false105, !dbg !4954

cond.false105:                                    ; preds = %if.then99
  br label %if.end163, !dbg !4954

if.else110:                                       ; preds = %land.lhs.true92, %if.end84
  %cmp117 = icmp eq i32 %26, 1, !dbg !4955
  br i1 %cmp117, label %if.then119, label %if.else128, !dbg !4957

if.then119:                                       ; preds = %if.else110
  %call120 = call i32 @ix86_constant_alignment(%union.tree_node* %exp.addr.1, i32 %align) #7, !dbg !4958
  %cmp121 = icmp ult i32 %inner.7, %call120, !dbg !4958
  br i1 %cmp121, label %if.end163, label %cond.false124, !dbg !4958

cond.false124:                                    ; preds = %if.then119
  %call125 = call i32 @ix86_constant_alignment(%union.tree_node* %exp.addr.1, i32 %align) #7, !dbg !4958
  br label %if.end163, !dbg !4958

if.else128:                                       ; preds = %if.else110
  %cmp133 = icmp eq i64 %bf.cast88.pre-phi, 118, !dbg !4959
  br i1 %cmp133, label %if.then141, label %lor.lhs.false, !dbg !4961

lor.lhs.false:                                    ; preds = %if.else128
  %cmp139 = icmp eq i64 %bf.cast88.pre-phi, 47, !dbg !4962
  br i1 %cmp139, label %if.then141, label %if.else154, !dbg !4963

if.then141:                                       ; preds = %lor.lhs.false, %if.else128
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4964
  %28 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !4964
  %29 = load %struct.tree_type*, %struct.tree_type** %28, align 8, !dbg !4964
  %align143 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %29, i64 0, i32 7, !dbg !4964
  %30 = load i32, i32* %align143, align 8, !dbg !4964
  %cmp144 = icmp ult i32 %30, %inner.7, !dbg !4964
  br i1 %cmp144, label %cond.true146, label %if.end163, !dbg !4964

cond.true146:                                     ; preds = %if.then141
  br label %if.end163, !dbg !4964

if.else154:                                       ; preds = %lor.lhs.false
  %cmp155 = icmp ugt i32 %inner.7, %align, !dbg !4965
  %align.inner.7 = select i1 %cmp155, i32 %align, i32 %inner.7, !dbg !4965
  call void @llvm.dbg.value(metadata i32 %align.inner.7, metadata !4861, metadata !DIExpression()), !dbg !4880
  br label %if.end163

if.end163:                                        ; preds = %if.then119, %cond.false124, %cond.true146, %if.then141, %if.else154, %cond.false105, %if.then99
  %align.addr.2 = phi i32 [ %27, %cond.false105 ], [ %inner.7, %if.then99 ], [ %call125, %cond.false124 ], [ %inner.7, %if.then119 ], [ %align.inner.7, %if.else154 ], [ %30, %cond.true146 ], [ %inner.7, %if.then141 ], !dbg !4947
  call void @llvm.dbg.value(metadata i32 %align.addr.2, metadata !4861, metadata !DIExpression()), !dbg !4880
  %cmp164 = icmp ult i32 %align.addr.2, %max_align, !dbg !4966
  %align.addr.2.max_align = select i1 %cmp164, i32 %align.addr.2, i32 %max_align, !dbg !4966
  ret i32 %align.addr.2.max_align, !dbg !4967
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @handled_component_p(%union.tree_node* %t) unnamed_addr #0 !dbg !4968 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !4973, metadata !DIExpression()), !dbg !4974
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !4975
  %bf.load = load i64, i64* %0, align 8, !dbg !4975
  %1 = trunc i64 %bf.load to i16, !dbg !4975
  switch i16 %1, label %sw.default [
    i16 42, label %return
    i16 41, label %return
    i16 45, label %return
    i16 46, label %return
    i16 118, label %return
    i16 43, label %return
    i16 44, label %return
  ], !dbg !4976

sw.default:                                       ; preds = %entry
  br label %return, !dbg !4977

return:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.default
  %retval.0 = phi i8 [ 0, %sw.default ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ], !dbg !4979
  ret i8 %retval.0, !dbg !4980
}

declare dso_local %union.tree_node* @get_inner_reference(%union.tree_node*, i64*, i64*, %union.tree_node**, i32*, i32*, i32*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i64 @tree_low_cst(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @ix86_constant_alignment(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @can_trust_pointer_alignment() local_unnamed_addr #5 !dbg !4981 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !4982
  %tobool = icmp ne i32 %0, 0, !dbg !4982
  %1 = load i32, i32* @flag_tree_ter, align 4, !dbg !4983
  %tobool1 = icmp ne i32 %1, 0, !dbg !4983
  %2 = and i1 %tobool1, %tobool, !dbg !4983
  %conv = zext i1 %2 to i8, !dbg !4984
  ret i8 %conv, !dbg !4985
}

; Function Attrs: nounwind uwtable
define dso_local i32 @get_pointer_alignment(%union.tree_node* %exp, i32 %max_align) local_unnamed_addr #5 !dbg !4986 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !4990, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %max_align, metadata !4991, metadata !DIExpression()), !dbg !4994
  %call = tail call zeroext i8 @can_trust_pointer_alignment() #8, !dbg !4995
  %tobool = icmp eq i8 %call, 0, !dbg !4995
  br i1 %tobool, label %cleanup, label %if.end, !dbg !4997

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !4998
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !4998
  %1 = load i64*, i64** %0, align 8, !dbg !4998
  %bf.load = load i64, i64* %1, align 8, !dbg !4998
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !4998
  %cmp = icmp eq i64 %bf.cast1, 10, !dbg !4998
  br i1 %cmp, label %if.end9, label %lor.lhs.false, !dbg !4998

lor.lhs.false:                                    ; preds = %if.end
  %cmp7 = icmp eq i64 %bf.cast1, 12, !dbg !4998
  br i1 %cmp7, label %if.end9, label %cleanup, !dbg !5000

if.end9:                                          ; preds = %lor.lhs.false, %if.end
  %type13 = getelementptr inbounds i64, i64* %1, i64 2, !dbg !5001
  %2 = bitcast i64* %type13 to %struct.tree_type**, !dbg !5001
  %3 = load %struct.tree_type*, %struct.tree_type** %2, align 8, !dbg !5001
  %align15 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %3, i64 0, i32 7, !dbg !5001
  %4 = load i32, i32* %align15, align 8, !dbg !5001
  call void @llvm.dbg.value(metadata i32 %4, metadata !4992, metadata !DIExpression()), !dbg !4994
  %cmp16 = icmp ult i32 %4, %max_align, !dbg !5002
  %.max_align = select i1 %cmp16, i32 %4, i32 %max_align, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %.max_align, metadata !4992, metadata !DIExpression()), !dbg !4994
  br label %while.cond, !dbg !5003

while.cond:                                       ; preds = %sw.epilog, %if.end9
  %align.0 = phi i32 [ %.max_align, %if.end9 ], [ %align.1, %sw.epilog ], !dbg !5004
  %max_align.addr.0 = phi i32 [ %max_align, %if.end9 ], [ %max_align.addr.2, %sw.epilog ]
  %exp.addr.0 = phi %union.tree_node* [ %exp, %if.end9 ], [ %exp.addr.1, %sw.epilog ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0, metadata !4990, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %max_align.addr.0, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0, metadata !4992, metadata !DIExpression()), !dbg !4994
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5005
  %bf.load18 = load i64, i64* %5, align 8, !dbg !5005
  %6 = trunc i64 %bf.load18 to i16, !dbg !5005
  switch i16 %6, label %cleanup.loopexit [
    i16 116, label %sw.bb
    i16 113, label %sw.bb
    i16 66, label %sw.bb50
    i16 121, label %sw.bb69
  ], !dbg !5007

sw.bb:                                            ; preds = %while.cond, %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5008
  %7 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !5008
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !4990, metadata !DIExpression()), !dbg !4994
  %type23 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5010
  %8 = bitcast %union.tree_node** %type23 to i64**, !dbg !5010
  %9 = load i64*, i64** %8, align 8, !dbg !5010
  %bf.load25 = load i64, i64* %9, align 8, !dbg !5010
  %bf.cast273 = and i64 %bf.load25, 65535, !dbg !5010
  %cmp28 = icmp eq i64 %bf.cast273, 10, !dbg !5010
  br i1 %cmp28, label %if.end38, label %lor.lhs.false29, !dbg !5010

lor.lhs.false29:                                  ; preds = %sw.bb
  %cmp36 = icmp eq i64 %bf.cast273, 12, !dbg !5010
  br i1 %cmp36, label %if.end38, label %cleanup.loopexit, !dbg !5012

if.end38:                                         ; preds = %lor.lhs.false29, %sw.bb
  %type42 = getelementptr inbounds i64, i64* %9, i64 2, !dbg !5013
  %10 = bitcast i64* %type42 to %struct.tree_type**, !dbg !5013
  %11 = load %struct.tree_type*, %struct.tree_type** %10, align 8, !dbg !5013
  %align44 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %11, i64 0, i32 7, !dbg !5013
  %12 = load i32, i32* %align44, align 8, !dbg !5013
  call void @llvm.dbg.value(metadata i32 %12, metadata !4993, metadata !DIExpression()), !dbg !4994
  %cmp45 = icmp ult i32 %12, %max_align.addr.0, !dbg !5014
  %.max_align.addr.0 = select i1 %cmp45, i32 %12, i32 %max_align.addr.0, !dbg !5014
  call void @llvm.dbg.value(metadata i32 %.max_align.addr.0, metadata !4992, metadata !DIExpression()), !dbg !4994
  br label %sw.epilog, !dbg !5015

sw.bb50:                                          ; preds = %while.cond
  %operands52 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5016
  %arrayidx53 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands52, i64 1, !dbg !5016
  %13 = load %union.tree_node*, %union.tree_node** %arrayidx53, align 8, !dbg !5016
  %call54 = tail call i32 @host_integerp(%union.tree_node* %13, i32 1) #7, !dbg !5018
  %tobool55 = icmp eq i32 %call54, 0, !dbg !5018
  br i1 %tobool55, label %cleanup.loopexit, label %while.cond58.preheader, !dbg !5019

while.cond58.preheader:                           ; preds = %sw.bb50
  br label %while.cond58, !dbg !5020

while.cond58:                                     ; preds = %while.cond58.preheader, %while.body65
  %max_align.addr.1 = phi i32 [ %shr, %while.body65 ], [ %max_align.addr.0, %while.cond58.preheader ]
  call void @llvm.dbg.value(metadata i32 %max_align.addr.1, metadata !4991, metadata !DIExpression()), !dbg !4994
  %14 = load %union.tree_node*, %union.tree_node** %arrayidx53, align 8, !dbg !5021
  %call62 = tail call i64 @tree_low_cst(%union.tree_node* %14, i32 1) #7, !dbg !5022
  %div = lshr i32 %max_align.addr.1, 3, !dbg !5023
  %sub = add nsw i32 %div, -1, !dbg !5024
  %conv = zext i32 %sub to i64, !dbg !5025
  %and = and i64 %call62, %conv, !dbg !5026
  %cmp63 = icmp eq i64 %and, 0, !dbg !5027
  br i1 %cmp63, label %while.end, label %while.body65, !dbg !5020

while.body65:                                     ; preds = %while.cond58
  %shr = lshr i32 %max_align.addr.1, 1, !dbg !5028
  call void @llvm.dbg.value(metadata i32 %shr, metadata !4991, metadata !DIExpression()), !dbg !4994
  br label %while.cond58, !dbg !5020, !llvm.loop !5029

while.end:                                        ; preds = %while.cond58
  %max_align.addr.1.lcssa = phi i32 [ %max_align.addr.1, %while.cond58 ]
  call void @llvm.dbg.value(metadata i32 %max_align.addr.1.lcssa, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %max_align.addr.1.lcssa, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %max_align.addr.1.lcssa, metadata !4991, metadata !DIExpression()), !dbg !4994
  %15 = load %union.tree_node*, %union.tree_node** %operands52, align 8, !dbg !5031
  call void @llvm.dbg.value(metadata %union.tree_node* %15, metadata !4990, metadata !DIExpression()), !dbg !4994
  br label %sw.epilog, !dbg !5032

sw.bb69:                                          ; preds = %while.cond
  %align.0.lcssa13 = phi i32 [ %align.0, %while.cond ], !dbg !5004
  %max_align.addr.0.lcssa12 = phi i32 [ %max_align.addr.0, %while.cond ]
  %exp.addr.0.lcssa11 = phi %union.tree_node* [ %exp.addr.0, %while.cond ]
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa13, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %max_align.addr.0.lcssa12, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa11, metadata !4990, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa13, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %max_align.addr.0.lcssa12, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa11, metadata !4990, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa13, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %max_align.addr.0.lcssa12, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.0.lcssa11, metadata !4990, metadata !DIExpression()), !dbg !4994
  %operands71 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp.addr.0.lcssa11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5033
  %16 = load %union.tree_node*, %union.tree_node** %operands71, align 8, !dbg !5033
  %call73 = tail call i32 @get_object_alignment(%union.tree_node* %16, i32 %align.0.lcssa13, i32 %max_align.addr.0.lcssa12) #8, !dbg !5034
  br label %cleanup, !dbg !5035

sw.epilog:                                        ; preds = %while.end, %if.end38
  %align.1 = phi i32 [ %align.0, %while.end ], [ %.max_align.addr.0, %if.end38 ], !dbg !4994
  %max_align.addr.2 = phi i32 [ %max_align.addr.1.lcssa, %while.end ], [ %max_align.addr.0, %if.end38 ]
  %exp.addr.1 = phi %union.tree_node* [ %15, %while.end ], [ %7, %if.end38 ], !dbg !5036
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.addr.1, metadata !4990, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %max_align.addr.2, metadata !4991, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.1, metadata !4992, metadata !DIExpression()), !dbg !4994
  br label %while.cond, !dbg !5003, !llvm.loop !5037

cleanup.loopexit:                                 ; preds = %lor.lhs.false29, %while.cond, %sw.bb50
  %align.0.lcssa = phi i32 [ %align.0, %lor.lhs.false29 ], [ %align.0, %while.cond ], [ %align.0, %sw.bb50 ], !dbg !5004
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.value(metadata i32 %align.0.lcssa, metadata !4992, metadata !DIExpression()), !dbg !4994
  br label %cleanup, !dbg !5039

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %lor.lhs.false, %sw.bb69
  %retval.0 = phi i32 [ %call73, %sw.bb69 ], [ 0, %entry ], [ 0, %lor.lhs.false ], [ %align.0.lcssa, %cleanup.loopexit ], !dbg !4994
  ret i32 %retval.0, !dbg !5039
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @c_strlen(%union.tree_node* %src, i32 %only_value) local_unnamed_addr #5 !dbg !5040 {
entry:
  %offset_node = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !5044, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata i32 %only_value, metadata !5045, metadata !DIExpression()), !dbg !5058
  %0 = bitcast %union.tree_node** %offset_node to i8*, !dbg !5059
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5059
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %src) #7, !dbg !5060
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5044, metadata !DIExpression()), !dbg !5058
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5061
  %bf.load = load i64, i64* %1, align 8, !dbg !5061
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !5062
  %cmp = icmp eq i64 %bf.cast2, 56, !dbg !5062
  br i1 %cmp, label %land.lhs.true, label %if.end18, !dbg !5063

land.lhs.true:                                    ; preds = %entry
  %tobool = icmp eq i32 %only_value, 0, !dbg !5064
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5065

lor.lhs.false:                                    ; preds = %land.lhs.true
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5066
  %2 = bitcast %union.tree_node** %operands to i64**, !dbg !5066
  %3 = load i64*, i64** %2, align 8, !dbg !5066
  %bf.load2 = load i64, i64* %3, align 8, !dbg !5066
  %bf.cast47 = and i64 %bf.load2, 65536, !dbg !5066
  %tobool5 = icmp eq i64 %bf.cast47, 0, !dbg !5066
  br i1 %tobool5, label %if.then, label %if.end18, !dbg !5067

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %operands7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5068
  %arrayidx8 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands7, i64 1, !dbg !5068
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx8, align 8, !dbg !5068
  %call9 = tail call %union.tree_node* @c_strlen(%union.tree_node* %4, i32 %only_value) #8, !dbg !5069
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !5051, metadata !DIExpression()), !dbg !5070
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands7, i64 2, !dbg !5071
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx12, align 8, !dbg !5071
  %call13 = tail call %union.tree_node* @c_strlen(%union.tree_node* %5, i32 %only_value) #8, !dbg !5072
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !5054, metadata !DIExpression()), !dbg !5070
  %call14 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call9, %union.tree_node* %call13) #7, !dbg !5073
  %tobool15 = icmp eq i32 %call14, 0, !dbg !5073
  br i1 %tobool15, label %if.then.if.end18_crit_edge, label %cleanup139

if.then.if.end18_crit_edge:                       ; preds = %if.then
  %bf.load20.pre = load i64, i64* %1, align 8, !dbg !5075
  br label %if.end18

if.end18:                                         ; preds = %if.then.if.end18_crit_edge, %lor.lhs.false, %entry
  %bf.load68 = phi i64 [ %bf.load20.pre, %if.then.if.end18_crit_edge ], [ %bf.load, %lor.lhs.false ], [ %bf.load, %entry ], !dbg !5075
  %bf.cast223 = and i64 %bf.load68, 65535, !dbg !5077
  %cmp23 = icmp eq i64 %bf.cast223, 52, !dbg !5077
  br i1 %cmp23, label %land.lhs.true24, label %if.end41, !dbg !5078

land.lhs.true24:                                  ; preds = %if.end18
  %tobool25 = icmp eq i32 %only_value, 0, !dbg !5079
  br i1 %tobool25, label %lor.lhs.false26, label %if.then36, !dbg !5080

lor.lhs.false26:                                  ; preds = %land.lhs.true24
  %operands28 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5081
  %6 = bitcast %union.tree_node** %operands28 to i64**, !dbg !5081
  %7 = load i64*, i64** %6, align 8, !dbg !5081
  %bf.load31 = load i64, i64* %7, align 8, !dbg !5081
  %bf.cast346 = and i64 %bf.load31, 65536, !dbg !5081
  %tobool35 = icmp eq i64 %bf.cast346, 0, !dbg !5081
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !5082

if.then36:                                        ; preds = %lor.lhs.false26, %land.lhs.true24
  %operands38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5083
  %arrayidx39 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands38, i64 1, !dbg !5083
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx39, align 8, !dbg !5083
  %call40 = tail call %union.tree_node* @c_strlen(%union.tree_node* %8, i32 %only_value) #8, !dbg !5084
  br label %cleanup139, !dbg !5085

if.end41:                                         ; preds = %lor.lhs.false26, %if.end18
  %arrayidx46 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast223, !dbg !5086
  %9 = load i32, i32* %arrayidx46, align 4, !dbg !5086
  %cmp47 = icmp ugt i32 %9, 3, !dbg !5086
  br i1 %cmp47, label %land.lhs.true48, label %cond.end, !dbg !5086

land.lhs.true48:                                  ; preds = %if.end41
  %cmp55 = icmp ult i32 %9, 11, !dbg !5086
  br i1 %cmp55, label %cond.true, label %cond.end, !dbg !5086

cond.true:                                        ; preds = %land.lhs.true48
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5086
  %11 = load i32, i32* %10, align 8, !dbg !5086
  %phitmp = icmp ne i32 %11, 0, !dbg !5086
  br label %cond.end, !dbg !5086

cond.end:                                         ; preds = %if.end41, %land.lhs.true48, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ false, %land.lhs.true48 ], [ false, %if.end41 ]
  br i1 %cond, label %if.then58, label %if.else, !dbg !5088

if.then58:                                        ; preds = %cond.end
  br i1 %cmp47, label %land.lhs.true66, label %if.end80, !dbg !5089

land.lhs.true66:                                  ; preds = %if.then58
  %cmp73 = icmp ult i32 %9, 11, !dbg !5089
  br i1 %cmp73, label %cond.true74, label %if.end80, !dbg !5089

cond.true74:                                      ; preds = %land.lhs.true66
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5089
  %13 = load i32, i32* %12, align 8, !dbg !5089
  br label %if.end80, !dbg !5089

if.else:                                          ; preds = %cond.end
  %14 = load i32, i32* @input_location, align 4, !dbg !5090
  call void @llvm.dbg.value(metadata i32 %14, metadata !5050, metadata !DIExpression()), !dbg !5058
  br label %if.end80

if.end80:                                         ; preds = %cond.true74, %land.lhs.true66, %if.then58, %if.else
  %loc.0 = phi i32 [ %14, %if.else ], [ %13, %cond.true74 ], [ 0, %land.lhs.true66 ], [ 0, %if.then58 ], !dbg !5091
  call void @llvm.dbg.value(metadata i32 %loc.0, metadata !5050, metadata !DIExpression()), !dbg !5058
  call void @llvm.dbg.value(metadata %union.tree_node** %offset_node, metadata !5046, metadata !DIExpression(DW_OP_deref)), !dbg !5058
  %call81 = call %union.tree_node* @string_constant(%union.tree_node* %call, %union.tree_node** nonnull %offset_node) #7, !dbg !5092
  call void @llvm.dbg.value(metadata %union.tree_node* %call81, metadata !5044, metadata !DIExpression()), !dbg !5058
  %cmp82 = icmp eq %union.tree_node* %call81, null, !dbg !5093
  br i1 %cmp82, label %cleanup139, label %if.end84, !dbg !5095

if.end84:                                         ; preds = %if.end80
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5096
  %16 = load i32, i32* %15, align 8, !dbg !5096
  %sub = add nsw i32 %16, -1, !dbg !5097
  call void @llvm.dbg.value(metadata i32 %sub, metadata !5048, metadata !DIExpression()), !dbg !5058
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5098
  %arraydecay = bitcast i32* %str to i8*, !dbg !5098
  call void @llvm.dbg.value(metadata i8* %arraydecay, metadata !5049, metadata !DIExpression()), !dbg !5058
  %17 = load %union.tree_node*, %union.tree_node** %offset_node, align 8, !dbg !5099
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5046, metadata !DIExpression()), !dbg !5058
  %tobool86 = icmp eq %union.tree_node* %17, null, !dbg !5099
  br i1 %tobool86, label %if.end105, label %land.lhs.true87, !dbg !5100

land.lhs.true87:                                  ; preds = %if.end84
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5100
  %bf.load89 = load i64, i64* %18, align 8, !dbg !5101
  %bf.cast915 = and i64 %bf.load89, 65535, !dbg !5102
  %cmp92 = icmp eq i64 %bf.cast915, 23, !dbg !5102
  br i1 %cmp92, label %if.end105, label %for.cond.preheader, !dbg !5103

for.cond.preheader:                               ; preds = %land.lhs.true87
  %19 = sext i32 %sub to i64, !dbg !5104
  br label %for.cond, !dbg !5104

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !5106
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5055, metadata !DIExpression()), !dbg !5107
  %cmp94 = icmp slt i64 %indvars.iv, %19, !dbg !5108
  br i1 %cmp94, label %for.body, label %for.end, !dbg !5104

for.body:                                         ; preds = %for.cond
  %arrayidx96 = getelementptr inbounds i8, i8* %arraydecay, i64 %indvars.iv, !dbg !5110
  %20 = load i8, i8* %arrayidx96, align 1, !dbg !5110
  %cmp97 = icmp eq i8 %20, 0, !dbg !5112
  br i1 %cmp97, label %cleanup139.loopexit, label %for.inc, !dbg !5113

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5114
  call void @llvm.dbg.value(metadata i32 undef, metadata !5055, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5107
  br label %for.cond, !dbg !5115, !llvm.loop !5116

for.end:                                          ; preds = %for.cond
  %conv101 = sext i32 %sub to i64, !dbg !5118
  %call102 = call %union.tree_node* @size_int_kind(i64 %conv101, i32 0) #7, !dbg !5118
  %21 = load %union.tree_node*, %union.tree_node** %offset_node, align 8, !dbg !5119
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !5046, metadata !DIExpression()), !dbg !5058
  %call103 = call %union.tree_node* @size_diffop_loc(i32 %loc.0, %union.tree_node* %call102, %union.tree_node* %21) #7, !dbg !5120
  br label %cleanup139, !dbg !5121

if.end105:                                        ; preds = %land.lhs.true87, %if.end84
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5046, metadata !DIExpression()), !dbg !5058
  br i1 %tobool86, label %if.end116, label %if.else109, !dbg !5122

if.else109:                                       ; preds = %if.end105
  call void @llvm.dbg.value(metadata %union.tree_node* %17, metadata !5046, metadata !DIExpression()), !dbg !5058
  %call110 = call i32 @host_integerp(%union.tree_node* nonnull %17, i32 0) #7, !dbg !5123
  %tobool111 = icmp eq i32 %call110, 0, !dbg !5123
  br i1 %tobool111, label %if.end116, label %if.else113, !dbg !5126

if.else113:                                       ; preds = %if.else109
  %22 = load %union.tree_node*, %union.tree_node** %offset_node, align 8, !dbg !5127
  call void @llvm.dbg.value(metadata %union.tree_node* %22, metadata !5046, metadata !DIExpression()), !dbg !5058
  %call114 = call i64 @tree_low_cst(%union.tree_node* %22, i32 0) #7, !dbg !5128
  call void @llvm.dbg.value(metadata i64 %call114, metadata !5047, metadata !DIExpression()), !dbg !5058
  br label %if.end116

if.end116:                                        ; preds = %if.else109, %if.else113, %if.end105
  %offset.1 = phi i64 [ 0, %if.end105 ], [ %call114, %if.else113 ], [ -1, %if.else109 ], !dbg !5129
  call void @llvm.dbg.value(metadata i64 %offset.1, metadata !5047, metadata !DIExpression()), !dbg !5058
  %cmp117 = icmp slt i64 %offset.1, 0, !dbg !5130
  %conv120 = sext i32 %sub to i64, !dbg !5132
  %cmp121 = icmp sgt i64 %offset.1, %conv120, !dbg !5133
  %or.cond = or i1 %cmp117, %cmp121, !dbg !5134
  br i1 %or.cond, label %if.then123, label %if.end136, !dbg !5134

if.then123:                                       ; preds = %if.end116
  %23 = getelementptr inbounds %union.tree_node, %union.tree_node* %call81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5135
  %bf.load125 = load i64, i64* %23, align 8, !dbg !5135
  %bf.cast1284 = and i64 %bf.load125, 8388608, !dbg !5135
  %tobool129 = icmp eq i64 %bf.cast1284, 0, !dbg !5135
  br i1 %tobool129, label %if.then130, label %cleanup139, !dbg !5138

if.then130:                                       ; preds = %if.then123
  %call131 = call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %loc.0, i32 0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.719, i64 0, i64 0)) #7, !dbg !5139
  %bf.load133 = load i64, i64* %23, align 8, !dbg !5141
  %bf.set = or i64 %bf.load133, 8388608, !dbg !5141
  store i64 %bf.set, i64* %23, align 8, !dbg !5141
  br label %cleanup139, !dbg !5142

if.end136:                                        ; preds = %if.end116
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 %offset.1, !dbg !5143
  %call137 = call i64 @strlen(i8* nonnull %add.ptr) #7, !dbg !5143
  %call138 = call %union.tree_node* @size_int_kind(i64 %call137, i32 1) #7, !dbg !5143
  br label %cleanup139, !dbg !5144

cleanup139.loopexit:                              ; preds = %for.body
  br label %cleanup139, !dbg !5145

cleanup139:                                       ; preds = %cleanup139.loopexit, %if.then123, %if.then130, %for.end, %if.end80, %if.then, %if.end136, %if.then36
  %retval.2 = phi %union.tree_node* [ %call9, %if.then ], [ %call40, %if.then36 ], [ %call138, %if.end136 ], [ null, %if.end80 ], [ %call103, %for.end ], [ null, %if.then130 ], [ null, %if.then123 ], [ null, %cleanup139.loopexit ], !dbg !5058
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5145
  ret %union.tree_node* %retval.2, !dbg !5145
}

declare dso_local %union.tree_node* @tree_strip_nop_conversions(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_equal(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @string_constant(%union.tree_node*, %union.tree_node**) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_diffop_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_int_kind(i64, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @warning_at(i32, i32, i8*, ...) local_unnamed_addr #2

declare dso_local i64 @strlen(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_builtin_setjmp_setup(%struct.rtx_def* %buf_addr, %struct.rtx_def* %receiver_label) local_unnamed_addr #5 !dbg !5146 {
entry:
  %stack_save = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %buf_addr, metadata !5150, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata %struct.rtx_def* %receiver_label, metadata !5151, metadata !DIExpression()), !dbg !5155
  call void @llvm.dbg.value(metadata i32 16, metadata !5152, metadata !DIExpression()), !dbg !5155
  %0 = bitcast %struct.rtx_def** %stack_save to i8*, !dbg !5156
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5156
  %1 = load i32, i32* @setjmp_alias_set, align 4, !dbg !5157
  %cmp = icmp eq i32 %1, -1, !dbg !5159
  br i1 %cmp, label %if.then, label %if.end, !dbg !5160

if.then:                                          ; preds = %entry
  %call = tail call i32 @new_alias_set() #7, !dbg !5161
  store i32 %call, i32* @setjmp_alias_set, align 4, !dbg !5162
  br label %if.end, !dbg !5163

if.end:                                           ; preds = %if.then, %entry
  %call1 = tail call %struct.rtx_def* @convert_memory_address_addr_space(i32 16, %struct.rtx_def* %buf_addr, i8 zeroext 0) #7, !dbg !5164
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !5150, metadata !DIExpression()), !dbg !5155
  %call2 = tail call %struct.rtx_def* @force_operand(%struct.rtx_def* %call1, %struct.rtx_def* null) #7, !dbg !5165
  %call3 = tail call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %call2) #7, !dbg !5166
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !5150, metadata !DIExpression()), !dbg !5155
  %call4 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call3) #7, !dbg !5167
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call4, metadata !5154, metadata !DIExpression()), !dbg !5155
  %2 = load i32, i32* @setjmp_alias_set, align 4, !dbg !5168
  tail call void @set_mem_alias_set(%struct.rtx_def* %call4, i32 %2) #7, !dbg !5169
  %3 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 78), align 8, !dbg !5170
  %call5 = tail call %struct.rtx_def* %3() #7, !dbg !5171
  %call6 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call4, %struct.rtx_def* %call5) #7, !dbg !5172
  %4 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !5173
  %conv7 = zext i8 %4 to i64, !dbg !5173
  %call8 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call3, i64 %conv7) #7, !dbg !5174
  %call9 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call8) #7, !dbg !5175
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !5154, metadata !DIExpression()), !dbg !5155
  %5 = load i32, i32* @setjmp_alias_set, align 4, !dbg !5176
  tail call void @set_mem_alias_set(%struct.rtx_def* %call9, i32 %5) #7, !dbg !5177
  %call10 = tail call %struct.rtx_def* @validize_mem(%struct.rtx_def* %call9) #7, !dbg !5178
  %call11 = tail call %struct.rtx_def* @gen_rtx_fmt_u_stat(i32 44, i32 16, %struct.rtx_def* %receiver_label) #7, !dbg !5179
  %call12 = tail call %struct.rtx_def* @force_reg(i32 16, %struct.rtx_def* %call11) #7, !dbg !5180
  %call13 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %call10, %struct.rtx_def* %call12) #7, !dbg !5181
  %6 = load i8, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @mode_size, i64 0, i64 16), align 16, !dbg !5182
  %conv15 = zext i8 %6 to i64, !dbg !5182
  %mul = shl nuw nsw i64 %conv15, 1, !dbg !5183
  %call17 = tail call %struct.rtx_def* @plus_constant(%struct.rtx_def* %call3, i64 %mul) #7, !dbg !5184
  %call18 = tail call %struct.rtx_def* @gen_rtx_MEM(i32 16, %struct.rtx_def* %call17) #7, !dbg !5185
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !5153, metadata !DIExpression()), !dbg !5155
  store %struct.rtx_def* %call18, %struct.rtx_def** %stack_save, align 8, !dbg !5186
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call18, metadata !5153, metadata !DIExpression()), !dbg !5155
  %7 = load i32, i32* @setjmp_alias_set, align 4, !dbg !5187
  tail call void @set_mem_alias_set(%struct.rtx_def* %call18, i32 %7) #7, !dbg !5188
  call void @llvm.dbg.value(metadata %struct.rtx_def** %stack_save, metadata !5153, metadata !DIExpression(DW_OP_deref)), !dbg !5155
  call void @emit_stack_save(i32 2, %struct.rtx_def** nonnull %stack_save, %struct.rtx_def* null) #7, !dbg !5189
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5190
  %calls_setjmp = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, i32 20, !dbg !5191
  %bf.load = load i32, i32* %calls_setjmp, align 8, !dbg !5192
  %bf.set22 = or i32 %bf.load, 1310720, !dbg !5193
  store i32 %bf.set22, i32* %calls_setjmp, align 8, !dbg !5193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5194
  ret void, !dbg !5194
}

declare dso_local i32 @new_alias_set() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @convert_memory_address_addr_space(i32, %struct.rtx_def*, i8 zeroext) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_reg(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @force_operand(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @set_mem_alias_set(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_move_insn(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @validize_mem(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_u_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @emit_stack_save(i32, %struct.rtx_def**, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_builtin_setjmp_receiver(%struct.rtx_def* %receiver_label) local_unnamed_addr #5 !dbg !4310 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %receiver_label, metadata !4314, metadata !DIExpression()), !dbg !5195
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !5196
  %call = tail call %struct.rtx_def* @emit_use(%struct.rtx_def* %0) #7, !dbg !5197
  %1 = load %struct.rtx_def* (%union.tree_node*, i8)*, %struct.rtx_def* (%union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 21), align 8, !dbg !5198
  %2 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !5199
  %call1 = tail call %struct.rtx_def* %1(%union.tree_node* %2, i8 zeroext 1) #7, !dbg !5200
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4315, metadata !DIExpression()), !dbg !5195
  %tobool = icmp eq %struct.rtx_def* %call1, null, !dbg !5201
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5203

land.lhs.true:                                    ; preds = %entry
  %3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 0, !dbg !5204
  %bf.load = load i32, i32* %3, align 8, !dbg !5204
  %bf.clear = and i32 %bf.load, 65535, !dbg !5204
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !5204
  br i1 %cmp, label %if.then, label %if.end, !dbg !5205

if.then:                                          ; preds = %land.lhs.true
  %call2 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* nonnull %call1) #7, !dbg !5206
  br label %if.end, !dbg !5206

if.end:                                           ; preds = %entry, %if.then, %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 7), align 8, !dbg !5207
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !5209
  %call3 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %4, %struct.rtx_def* %5) #7, !dbg !5210
  %6 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !5211
  %call4 = tail call %struct.rtx_def* @emit_clobber(%struct.rtx_def* %6) #7, !dbg !5212
  %7 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !5213
  %tobool5 = icmp eq i8 %7, 0, !dbg !5213
  br i1 %tobool5, label %if.end20, label %for.cond.preheader, !dbg !5214

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !5215

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %i.0 = phi i64 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5217
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !4316, metadata !DIExpression()), !dbg !5218
  %exitcond = icmp eq i64 %i.0, 4, !dbg !5219
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5215

for.body:                                         ; preds = %for.cond
  %8 = icmp ult i64 %i.0, 2, !dbg !5221
  br i1 %8, label %land.lhs.true9, label %for.inc, !dbg !5223

land.lhs.true9:                                   ; preds = %for.body
  %9 = or i64 %i.0, 2, !dbg !5224
  %10 = icmp eq i64 %9, 3, !dbg !5224
  br i1 %10, label %for.end, label %for.inc, !dbg !5225

for.inc:                                          ; preds = %for.body, %land.lhs.true9
  %inc = add nuw nsw i64 %i.0, 1, !dbg !5226
  call void @llvm.dbg.value(metadata i64 %inc, metadata !4316, metadata !DIExpression()), !dbg !5218
  br label %for.cond, !dbg !5227, !llvm.loop !5228

for.end:                                          ; preds = %for.cond, %land.lhs.true9
  %i.0.lcssa = phi i64 [ %i.0, %for.cond ], [ %i.0, %land.lhs.true9 ], !dbg !5217
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !4316, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !4316, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !4316, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !4316, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !4316, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa, metadata !4316, metadata !DIExpression()), !dbg !5218
  %cmp14 = icmp eq i64 %i.0.lcssa, 4, !dbg !5230
  br i1 %cmp14, label %if.then15, label %if.end20, !dbg !5232

if.then15:                                        ; preds = %for.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 3, i32 5), align 8, !dbg !5233
  %call16 = tail call %struct.rtx_def* @get_arg_pointer_save_area() #7, !dbg !5235
  %call17 = tail call %struct.rtx_def* @copy_to_reg(%struct.rtx_def* %call16) #7, !dbg !5236
  %call18 = tail call %struct.rtx_def* @emit_move_insn(%struct.rtx_def* %11, %struct.rtx_def* %call17) #7, !dbg !5237
  br label %if.end20, !dbg !5238

if.end20:                                         ; preds = %if.end, %for.end, %if.then15
  %12 = load i32, i32* @flag_pic, align 4, !dbg !5239
  %tobool21 = icmp eq i32 %12, 0, !dbg !5239
  br i1 %tobool21, label %if.end25, label %if.then22, !dbg !5241

if.then22:                                        ; preds = %if.end20
  %call23 = tail call %struct.rtx_def* @gen_builtin_setjmp_receiver(%struct.rtx_def* %receiver_label) #7, !dbg !5242
  %call24 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call23) #7, !dbg !5243
  br label %if.end25, !dbg !5243

if.end25:                                         ; preds = %if.end20, %if.then22
  %call26 = tail call %struct.rtx_def* @gen_blockage() #7, !dbg !5244
  %call27 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call26) #7, !dbg !5245
  ret void, !dbg !5246
}

declare dso_local %struct.rtx_def* @emit_use(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_clobber(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_to_reg(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_arg_pointer_save_area() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_builtin_setjmp_receiver(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_blockage() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @mathfn_built_in(%union.tree_node* %type, i32 %fn) local_unnamed_addr #5 !dbg !5247 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5251, metadata !DIExpression()), !dbg !5253
  call void @llvm.dbg.value(metadata i32 %fn, metadata !5252, metadata !DIExpression()), !dbg !5253
  %call = tail call fastcc %union.tree_node* @mathfn_built_in_1(%union.tree_node* %type, i32 %fn, i8 zeroext 1) #8, !dbg !5254
  ret %union.tree_node* %call, !dbg !5255
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @mathfn_built_in_1(%union.tree_node* %type, i32 %fn, i8 zeroext %implicit) unnamed_addr #5 !dbg !5256 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5260, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 %fn, metadata !5261, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i8 %implicit, metadata !5262, metadata !DIExpression()), !dbg !5270
  %tobool = icmp eq i8 %implicit, 0, !dbg !5271
  %cond = select i1 %tobool, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 0), %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 0), !dbg !5271
  call void @llvm.dbg.value(metadata %union.tree_node** %cond, metadata !5263, metadata !DIExpression()), !dbg !5270
  switch i32 %fn, label %cleanup [
    i32 0, label %sw.epilog
    i32 1, label %sw.epilog
    i32 5, label %sw.epilog
    i32 2, label %sw.bb1
    i32 3, label %sw.bb1
    i32 4, label %sw.bb1
    i32 6, label %sw.bb2
    i32 7, label %sw.bb2
    i32 11, label %sw.bb2
    i32 8, label %sw.bb3
    i32 9, label %sw.bb3
    i32 10, label %sw.bb3
    i32 12, label %sw.bb4
    i32 16, label %sw.bb4
    i32 20, label %sw.bb4
    i32 13, label %sw.bb5
    i32 14, label %sw.bb5
    i32 15, label %sw.bb5
    i32 17, label %sw.bb6
    i32 18, label %sw.bb6
    i32 19, label %sw.bb6
    i32 21, label %sw.bb7
    i32 22, label %sw.bb7
    i32 23, label %sw.bb7
    i32 24, label %sw.bb8
    i32 25, label %sw.bb8
    i32 26, label %sw.bb8
    i32 285, label %sw.bb9
    i32 286, label %sw.bb9
    i32 287, label %sw.bb9
    i32 27, label %sw.bb10
    i32 28, label %sw.bb10
    i32 29, label %sw.bb10
    i32 30, label %sw.bb11
    i32 31, label %sw.bb11
    i32 35, label %sw.bb11
    i32 32, label %sw.bb12
    i32 33, label %sw.bb12
    i32 34, label %sw.bb12
    i32 36, label %sw.bb13
    i32 37, label %sw.bb13
    i32 38, label %sw.bb13
    i32 39, label %sw.bb14
    i32 43, label %sw.bb14
    i32 44, label %sw.bb14
    i32 40, label %sw.bb15
    i32 41, label %sw.bb15
    i32 42, label %sw.bb15
    i32 45, label %sw.bb16
    i32 52, label %sw.bb16
    i32 53, label %sw.bb16
    i32 46, label %sw.bb17
    i32 47, label %sw.bb17
    i32 48, label %sw.bb17
    i32 49, label %sw.bb18
    i32 50, label %sw.bb18
    i32 51, label %sw.bb18
    i32 54, label %sw.bb19
    i32 55, label %sw.bb19
    i32 56, label %sw.bb19
    i32 57, label %sw.bb20
    i32 58, label %sw.bb20
    i32 59, label %sw.bb20
    i32 60, label %sw.bb21
    i32 61, label %sw.bb21
    i32 62, label %sw.bb21
    i32 63, label %sw.bb22
    i32 64, label %sw.bb22
    i32 65, label %sw.bb22
    i32 66, label %sw.bb23
    i32 67, label %sw.bb23
    i32 68, label %sw.bb23
    i32 69, label %sw.bb24
    i32 70, label %sw.bb24
    i32 71, label %sw.bb24
    i32 72, label %sw.bb25
    i32 73, label %sw.bb25
    i32 74, label %sw.bb25
    i32 75, label %sw.bb26
    i32 76, label %sw.bb26
    i32 77, label %sw.bb26
    i32 78, label %sw.bb27
    i32 79, label %sw.bb27
    i32 80, label %sw.bb27
    i32 81, label %sw.bb28
    i32 82, label %sw.bb28
    i32 83, label %sw.bb28
    i32 84, label %sw.bb29
    i32 85, label %sw.bb29
    i32 86, label %sw.bb29
    i32 87, label %sw.bb30
    i32 88, label %sw.bb30
    i32 89, label %sw.bb30
    i32 90, label %sw.bb31
    i32 91, label %sw.bb31
    i32 92, label %sw.bb31
    i32 93, label %sw.bb32
    i32 94, label %sw.bb32
    i32 95, label %sw.bb32
    i32 96, label %sw.bb33
    i32 97, label %sw.bb33
    i32 98, label %sw.bb33
    i32 469, label %sw.bb34
    i32 470, label %sw.bb34
    i32 471, label %sw.bb34
    i32 102, label %sw.bb35
    i32 103, label %sw.bb35
    i32 104, label %sw.bb35
    i32 105, label %sw.bb36
    i32 106, label %sw.bb36
    i32 107, label %sw.bb36
    i32 108, label %sw.bb37
    i32 109, label %sw.bb37
    i32 110, label %sw.bb37
    i32 111, label %sw.bb38
    i32 112, label %sw.bb38
    i32 113, label %sw.bb38
    i32 114, label %sw.bb39
    i32 115, label %sw.bb39
    i32 116, label %sw.bb39
    i32 117, label %sw.bb40
    i32 118, label %sw.bb40
    i32 119, label %sw.bb40
    i32 120, label %sw.bb41
    i32 121, label %sw.bb41
    i32 122, label %sw.bb41
    i32 123, label %sw.bb42
    i32 124, label %sw.bb42
    i32 125, label %sw.bb42
    i32 126, label %sw.bb43
    i32 127, label %sw.bb43
    i32 128, label %sw.bb43
    i32 129, label %sw.bb44
    i32 130, label %sw.bb44
    i32 131, label %sw.bb44
    i32 132, label %sw.bb45
    i32 133, label %sw.bb45
    i32 134, label %sw.bb45
    i32 135, label %sw.bb46
    i32 136, label %sw.bb46
    i32 137, label %sw.bb46
    i32 138, label %sw.bb47
    i32 151, label %sw.bb47
    i32 152, label %sw.bb47
    i32 139, label %sw.bb48
    i32 140, label %sw.bb48
    i32 141, label %sw.bb48
    i32 142, label %sw.bb49
    i32 143, label %sw.bb49
    i32 144, label %sw.bb49
    i32 145, label %sw.bb50
    i32 146, label %sw.bb50
    i32 147, label %sw.bb50
    i32 148, label %sw.bb51
    i32 149, label %sw.bb51
    i32 150, label %sw.bb51
    i32 153, label %sw.bb52
    i32 154, label %sw.bb52
    i32 155, label %sw.bb52
    i32 156, label %sw.bb53
    i32 157, label %sw.bb53
    i32 158, label %sw.bb53
    i32 159, label %sw.bb54
    i32 160, label %sw.bb54
    i32 161, label %sw.bb54
    i32 162, label %sw.bb55
    i32 163, label %sw.bb55
    i32 164, label %sw.bb55
    i32 168, label %sw.bb56
    i32 169, label %sw.bb56
    i32 170, label %sw.bb56
    i32 171, label %sw.bb57
    i32 172, label %sw.bb57
    i32 173, label %sw.bb57
    i32 174, label %sw.bb58
    i32 175, label %sw.bb58
    i32 176, label %sw.bb58
    i32 177, label %sw.bb59
    i32 178, label %sw.bb59
    i32 179, label %sw.bb59
    i32 180, label %sw.bb60
    i32 184, label %sw.bb60
    i32 188, label %sw.bb60
    i32 185, label %sw.bb61
    i32 186, label %sw.bb61
    i32 187, label %sw.bb61
    i32 181, label %sw.bb62
    i32 182, label %sw.bb62
    i32 183, label %sw.bb62
    i32 189, label %sw.bb63
    i32 190, label %sw.bb63
    i32 191, label %sw.bb63
    i32 192, label %sw.bb64
    i32 193, label %sw.bb64
    i32 194, label %sw.bb64
    i32 195, label %sw.bb65
    i32 196, label %sw.bb65
    i32 197, label %sw.bb65
    i32 198, label %sw.bb66
    i32 199, label %sw.bb66
    i32 200, label %sw.bb66
    i32 201, label %sw.bb67
    i32 202, label %sw.bb67
    i32 203, label %sw.bb67
    i32 204, label %sw.bb68
    i32 205, label %sw.bb68
    i32 206, label %sw.bb68
    i32 207, label %sw.bb69
    i32 208, label %sw.bb69
    i32 209, label %sw.bb69
    i32 210, label %sw.bb70
    i32 211, label %sw.bb70
    i32 212, label %sw.bb70
    i32 216, label %sw.bb71
    i32 217, label %sw.bb71
    i32 218, label %sw.bb71
    i32 219, label %sw.bb72
    i32 223, label %sw.bb72
    i32 227, label %sw.bb72
    i32 220, label %sw.bb73
    i32 221, label %sw.bb73
    i32 222, label %sw.bb73
    i32 224, label %sw.bb74
    i32 225, label %sw.bb74
    i32 226, label %sw.bb74
    i32 228, label %sw.bb75
    i32 229, label %sw.bb75
    i32 230, label %sw.bb75
    i32 231, label %sw.bb76
    i32 232, label %sw.bb76
    i32 236, label %sw.bb76
    i32 233, label %sw.bb77
    i32 234, label %sw.bb77
    i32 235, label %sw.bb77
    i32 237, label %sw.bb78
    i32 238, label %sw.bb78
    i32 239, label %sw.bb78
    i32 240, label %sw.bb79
    i32 241, label %sw.bb79
    i32 242, label %sw.bb79
    i32 243, label %sw.bb80
    i32 244, label %sw.bb80
    i32 245, label %sw.bb80
    i32 246, label %sw.bb81
    i32 247, label %sw.bb81
    i32 248, label %sw.bb81
    i32 249, label %sw.bb82
    i32 250, label %sw.bb82
    i32 251, label %sw.bb82
  ], !dbg !5272

sw.bb1:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 2, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 3, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 4, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5273

sw.bb2:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 6, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 7, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 11, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5275

sw.bb3:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 8, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 9, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 10, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5276

sw.bb4:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 12, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 16, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 20, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5277

sw.bb5:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 13, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 14, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 15, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5278

sw.bb6:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 17, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 18, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 19, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5279

sw.bb7:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 21, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 22, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 23, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5280

sw.bb8:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 24, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 25, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 26, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5281

sw.bb9:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 285, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 286, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 287, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5282

sw.bb10:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 27, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 28, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 29, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5283

sw.bb11:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 30, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 31, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 35, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5284

sw.bb12:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 32, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 33, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 34, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5285

sw.bb13:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 36, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 37, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 38, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5286

sw.bb14:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 39, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 43, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 44, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5287

sw.bb15:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 40, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 41, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 42, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5288

sw.bb16:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 45, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 52, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 53, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5289

sw.bb17:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 46, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 47, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 48, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5290

sw.bb18:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 49, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 50, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 51, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5291

sw.bb19:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 54, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 55, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 56, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5292

sw.bb20:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 57, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 58, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 59, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5293

sw.bb21:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 60, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 61, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 62, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5294

sw.bb22:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 63, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 64, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 65, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5295

sw.bb23:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 66, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 67, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 68, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5296

sw.bb24:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 69, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 70, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 71, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5297

sw.bb25:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 72, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 73, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 74, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5298

sw.bb26:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 75, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 76, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 77, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5299

sw.bb27:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 78, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 79, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 80, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5300

sw.bb28:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 81, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 82, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 83, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5301

sw.bb29:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 84, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 85, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 86, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5302

sw.bb30:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 87, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 88, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 89, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5303

sw.bb31:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 90, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 91, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 92, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5304

sw.bb32:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 93, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 94, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 95, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5305

sw.bb33:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 96, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 97, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 98, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5306

sw.bb34:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 469, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 470, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 471, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5307

sw.bb35:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 102, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 103, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 104, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5308

sw.bb36:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 105, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 106, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 107, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5309

sw.bb37:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 108, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 109, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 110, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5310

sw.bb38:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 111, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 112, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 113, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5311

sw.bb39:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 114, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 115, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 116, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5312

sw.bb40:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 117, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 118, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 119, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5313

sw.bb41:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 120, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 121, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 122, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5314

sw.bb42:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 123, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 124, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 125, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5315

sw.bb43:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 126, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 127, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 128, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5316

sw.bb44:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 129, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 130, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 131, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5317

sw.bb45:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 132, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 133, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 134, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5318

sw.bb46:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 135, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 136, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 137, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5319

sw.bb47:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 138, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 151, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 152, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5320

sw.bb48:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 139, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 140, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 141, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5321

sw.bb49:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 142, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 143, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 144, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5322

sw.bb50:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 145, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 146, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 147, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5323

sw.bb51:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 148, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 149, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 150, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5324

sw.bb52:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 153, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 154, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 155, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5325

sw.bb53:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 156, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 157, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 158, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5326

sw.bb54:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 159, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 160, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 161, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5327

sw.bb55:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 162, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 163, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 164, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5328

sw.bb56:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 168, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 169, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 170, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5329

sw.bb57:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 171, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 172, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 173, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5330

sw.bb58:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 174, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 175, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 176, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5331

sw.bb59:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 177, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 178, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 179, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5332

sw.bb60:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 180, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 184, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 188, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5333

sw.bb61:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 185, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 186, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 187, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5334

sw.bb62:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 181, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 182, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 183, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5335

sw.bb63:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 189, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 190, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 191, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5336

sw.bb64:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 192, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 193, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 194, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5337

sw.bb65:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 195, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 196, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 197, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5338

sw.bb66:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 198, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 199, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 200, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5339

sw.bb67:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 201, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 202, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 203, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5340

sw.bb68:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 204, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 205, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 206, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5341

sw.bb69:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 207, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 208, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 209, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5342

sw.bb70:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 210, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 211, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 212, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5343

sw.bb71:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 216, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 217, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 218, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5344

sw.bb72:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 219, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 223, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 227, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5345

sw.bb73:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 220, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 221, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 222, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5346

sw.bb74:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 224, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 225, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 226, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5347

sw.bb75:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 228, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 229, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 230, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5348

sw.bb76:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 231, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 232, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 236, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5349

sw.bb77:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 233, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 234, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 235, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5350

sw.bb78:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 237, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 238, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 239, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5351

sw.bb79:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 240, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 241, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 242, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5352

sw.bb80:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 243, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 244, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 245, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5353

sw.bb81:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 246, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 247, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 248, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5354

sw.bb82:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata i32 249, metadata !5267, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 250, metadata !5268, metadata !DIExpression()), !dbg !5270
  call void @llvm.dbg.value(metadata i32 251, metadata !5269, metadata !DIExpression()), !dbg !5270
  br label %sw.epilog, !dbg !5355

sw.epilog:                                        ; preds = %entry, %entry, %entry, %sw.bb82, %sw.bb81, %sw.bb80, %sw.bb79, %sw.bb78, %sw.bb77, %sw.bb76, %sw.bb75, %sw.bb74, %sw.bb73, %sw.bb72, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb61, %sw.bb60, %sw.bb59, %sw.bb58, %sw.bb57, %sw.bb56, %sw.bb55, %sw.bb54, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50, %sw.bb49, %sw.bb48, %sw.bb47, %sw.bb46, %sw.bb45, %sw.bb44, %sw.bb43, %sw.bb42, %sw.bb41, %sw.bb40, %sw.bb39, %sw.bb38, %sw.bb37, %sw.bb36, %sw.bb35, %sw.bb34, %sw.bb33, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb25, %sw.bb24, %sw.bb23, %sw.bb22, %sw.bb21, %sw.bb20, %sw.bb19, %sw.bb18, %sw.bb17, %sw.bb16, %sw.bb15, %sw.bb14, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %fcode.0 = phi i64 [ 249, %sw.bb82 ], [ 246, %sw.bb81 ], [ 243, %sw.bb80 ], [ 240, %sw.bb79 ], [ 237, %sw.bb78 ], [ 233, %sw.bb77 ], [ 231, %sw.bb76 ], [ 228, %sw.bb75 ], [ 224, %sw.bb74 ], [ 220, %sw.bb73 ], [ 219, %sw.bb72 ], [ 216, %sw.bb71 ], [ 210, %sw.bb70 ], [ 207, %sw.bb69 ], [ 204, %sw.bb68 ], [ 201, %sw.bb67 ], [ 198, %sw.bb66 ], [ 195, %sw.bb65 ], [ 192, %sw.bb64 ], [ 189, %sw.bb63 ], [ 181, %sw.bb62 ], [ 185, %sw.bb61 ], [ 180, %sw.bb60 ], [ 177, %sw.bb59 ], [ 174, %sw.bb58 ], [ 171, %sw.bb57 ], [ 168, %sw.bb56 ], [ 162, %sw.bb55 ], [ 159, %sw.bb54 ], [ 156, %sw.bb53 ], [ 153, %sw.bb52 ], [ 148, %sw.bb51 ], [ 145, %sw.bb50 ], [ 142, %sw.bb49 ], [ 139, %sw.bb48 ], [ 138, %sw.bb47 ], [ 135, %sw.bb46 ], [ 132, %sw.bb45 ], [ 129, %sw.bb44 ], [ 126, %sw.bb43 ], [ 123, %sw.bb42 ], [ 120, %sw.bb41 ], [ 117, %sw.bb40 ], [ 114, %sw.bb39 ], [ 111, %sw.bb38 ], [ 108, %sw.bb37 ], [ 105, %sw.bb36 ], [ 102, %sw.bb35 ], [ 469, %sw.bb34 ], [ 96, %sw.bb33 ], [ 93, %sw.bb32 ], [ 90, %sw.bb31 ], [ 87, %sw.bb30 ], [ 84, %sw.bb29 ], [ 81, %sw.bb28 ], [ 78, %sw.bb27 ], [ 75, %sw.bb26 ], [ 72, %sw.bb25 ], [ 69, %sw.bb24 ], [ 66, %sw.bb23 ], [ 63, %sw.bb22 ], [ 60, %sw.bb21 ], [ 57, %sw.bb20 ], [ 54, %sw.bb19 ], [ 49, %sw.bb18 ], [ 46, %sw.bb17 ], [ 45, %sw.bb16 ], [ 40, %sw.bb15 ], [ 39, %sw.bb14 ], [ 36, %sw.bb13 ], [ 32, %sw.bb12 ], [ 30, %sw.bb11 ], [ 27, %sw.bb10 ], [ 285, %sw.bb9 ], [ 24, %sw.bb8 ], [ 21, %sw.bb7 ], [ 17, %sw.bb6 ], [ 13, %sw.bb5 ], [ 12, %sw.bb4 ], [ 8, %sw.bb3 ], [ 6, %sw.bb2 ], [ 2, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ]
  %fcodef.0 = phi i64 [ 250, %sw.bb82 ], [ 247, %sw.bb81 ], [ 244, %sw.bb80 ], [ 241, %sw.bb79 ], [ 238, %sw.bb78 ], [ 234, %sw.bb77 ], [ 232, %sw.bb76 ], [ 229, %sw.bb75 ], [ 225, %sw.bb74 ], [ 221, %sw.bb73 ], [ 223, %sw.bb72 ], [ 217, %sw.bb71 ], [ 211, %sw.bb70 ], [ 208, %sw.bb69 ], [ 205, %sw.bb68 ], [ 202, %sw.bb67 ], [ 199, %sw.bb66 ], [ 196, %sw.bb65 ], [ 193, %sw.bb64 ], [ 190, %sw.bb63 ], [ 182, %sw.bb62 ], [ 186, %sw.bb61 ], [ 184, %sw.bb60 ], [ 178, %sw.bb59 ], [ 175, %sw.bb58 ], [ 172, %sw.bb57 ], [ 169, %sw.bb56 ], [ 163, %sw.bb55 ], [ 160, %sw.bb54 ], [ 157, %sw.bb53 ], [ 154, %sw.bb52 ], [ 149, %sw.bb51 ], [ 146, %sw.bb50 ], [ 143, %sw.bb49 ], [ 140, %sw.bb48 ], [ 151, %sw.bb47 ], [ 136, %sw.bb46 ], [ 133, %sw.bb45 ], [ 130, %sw.bb44 ], [ 127, %sw.bb43 ], [ 124, %sw.bb42 ], [ 121, %sw.bb41 ], [ 118, %sw.bb40 ], [ 115, %sw.bb39 ], [ 112, %sw.bb38 ], [ 109, %sw.bb37 ], [ 106, %sw.bb36 ], [ 103, %sw.bb35 ], [ 470, %sw.bb34 ], [ 97, %sw.bb33 ], [ 94, %sw.bb32 ], [ 91, %sw.bb31 ], [ 88, %sw.bb30 ], [ 85, %sw.bb29 ], [ 82, %sw.bb28 ], [ 79, %sw.bb27 ], [ 76, %sw.bb26 ], [ 73, %sw.bb25 ], [ 70, %sw.bb24 ], [ 67, %sw.bb23 ], [ 64, %sw.bb22 ], [ 61, %sw.bb21 ], [ 58, %sw.bb20 ], [ 55, %sw.bb19 ], [ 50, %sw.bb18 ], [ 47, %sw.bb17 ], [ 52, %sw.bb16 ], [ 41, %sw.bb15 ], [ 43, %sw.bb14 ], [ 37, %sw.bb13 ], [ 33, %sw.bb12 ], [ 31, %sw.bb11 ], [ 28, %sw.bb10 ], [ 286, %sw.bb9 ], [ 25, %sw.bb8 ], [ 22, %sw.bb7 ], [ 18, %sw.bb6 ], [ 14, %sw.bb5 ], [ 16, %sw.bb4 ], [ 9, %sw.bb3 ], [ 7, %sw.bb2 ], [ 3, %sw.bb1 ], [ 1, %entry ], [ 1, %entry ], [ 1, %entry ]
  %fcodel.0 = phi i64 [ 251, %sw.bb82 ], [ 248, %sw.bb81 ], [ 245, %sw.bb80 ], [ 242, %sw.bb79 ], [ 239, %sw.bb78 ], [ 235, %sw.bb77 ], [ 236, %sw.bb76 ], [ 230, %sw.bb75 ], [ 226, %sw.bb74 ], [ 222, %sw.bb73 ], [ 227, %sw.bb72 ], [ 218, %sw.bb71 ], [ 212, %sw.bb70 ], [ 209, %sw.bb69 ], [ 206, %sw.bb68 ], [ 203, %sw.bb67 ], [ 200, %sw.bb66 ], [ 197, %sw.bb65 ], [ 194, %sw.bb64 ], [ 191, %sw.bb63 ], [ 183, %sw.bb62 ], [ 187, %sw.bb61 ], [ 188, %sw.bb60 ], [ 179, %sw.bb59 ], [ 176, %sw.bb58 ], [ 173, %sw.bb57 ], [ 170, %sw.bb56 ], [ 164, %sw.bb55 ], [ 161, %sw.bb54 ], [ 158, %sw.bb53 ], [ 155, %sw.bb52 ], [ 150, %sw.bb51 ], [ 147, %sw.bb50 ], [ 144, %sw.bb49 ], [ 141, %sw.bb48 ], [ 152, %sw.bb47 ], [ 137, %sw.bb46 ], [ 134, %sw.bb45 ], [ 131, %sw.bb44 ], [ 128, %sw.bb43 ], [ 125, %sw.bb42 ], [ 122, %sw.bb41 ], [ 119, %sw.bb40 ], [ 116, %sw.bb39 ], [ 113, %sw.bb38 ], [ 110, %sw.bb37 ], [ 107, %sw.bb36 ], [ 104, %sw.bb35 ], [ 471, %sw.bb34 ], [ 98, %sw.bb33 ], [ 95, %sw.bb32 ], [ 92, %sw.bb31 ], [ 89, %sw.bb30 ], [ 86, %sw.bb29 ], [ 83, %sw.bb28 ], [ 80, %sw.bb27 ], [ 77, %sw.bb26 ], [ 74, %sw.bb25 ], [ 71, %sw.bb24 ], [ 68, %sw.bb23 ], [ 65, %sw.bb22 ], [ 62, %sw.bb21 ], [ 59, %sw.bb20 ], [ 56, %sw.bb19 ], [ 51, %sw.bb18 ], [ 48, %sw.bb17 ], [ 53, %sw.bb16 ], [ 42, %sw.bb15 ], [ 44, %sw.bb14 ], [ 38, %sw.bb13 ], [ 34, %sw.bb12 ], [ 35, %sw.bb11 ], [ 29, %sw.bb10 ], [ 287, %sw.bb9 ], [ 26, %sw.bb8 ], [ 23, %sw.bb7 ], [ 19, %sw.bb6 ], [ 15, %sw.bb5 ], [ 20, %sw.bb4 ], [ 10, %sw.bb3 ], [ 11, %sw.bb2 ], [ 4, %sw.bb1 ], [ 5, %entry ], [ 5, %entry ], [ 5, %entry ]
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5356
  %1 = load %union.tree_node*, %union.tree_node** %0, align 8, !dbg !5356
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 32), align 16, !dbg !5358
  %cmp = icmp eq %union.tree_node* %1, %2, !dbg !5359
  br i1 %cmp, label %if.then, label %if.else, !dbg !5360

if.then:                                          ; preds = %sw.epilog
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %cond, i64 %fcode.0, !dbg !5361
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5361
  br label %cleanup, !dbg !5362

if.else:                                          ; preds = %sw.epilog
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 31), align 8, !dbg !5363
  %cmp87 = icmp eq %union.tree_node* %1, %4, !dbg !5365
  br i1 %cmp87, label %if.then89, label %if.else92, !dbg !5366

if.then89:                                        ; preds = %if.else
  %arrayidx91 = getelementptr inbounds %union.tree_node*, %union.tree_node** %cond, i64 %fcodef.0, !dbg !5367
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx91, align 8, !dbg !5367
  br label %cleanup, !dbg !5368

if.else92:                                        ; preds = %if.else
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 33), align 8, !dbg !5369
  %cmp95 = icmp eq %union.tree_node* %1, %6, !dbg !5371
  br i1 %cmp95, label %if.then97, label %cleanup, !dbg !5372

if.then97:                                        ; preds = %if.else92
  %arrayidx99 = getelementptr inbounds %union.tree_node*, %union.tree_node** %cond, i64 %fcodel.0, !dbg !5373
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx99, align 8, !dbg !5373
  br label %cleanup, !dbg !5374

cleanup:                                          ; preds = %if.else92, %entry, %if.then97, %if.then89, %if.then
  %retval.0 = phi %union.tree_node* [ %3, %if.then ], [ %5, %if.then89 ], [ %7, %if.then97 ], [ null, %entry ], [ null, %if.else92 ], !dbg !5270
  ret %union.tree_node* %retval.0, !dbg !5375
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @builtin_strncpy_read_str(i8* %data, i64 %offset, i32 %mode) local_unnamed_addr #5 !dbg !5376 {
entry:
  call void @llvm.dbg.value(metadata i8* %data, metadata !5380, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i64 %offset, metadata !5381, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5382, metadata !DIExpression()), !dbg !5384
  call void @llvm.dbg.value(metadata i8* %data, metadata !5383, metadata !DIExpression()), !dbg !5384
  %call = tail call i64 @strlen(i8* %data) #7, !dbg !5385
  %cmp = icmp ult i64 %call, %offset, !dbg !5387
  br i1 %cmp, label %if.then, label %if.end, !dbg !5388

if.then:                                          ; preds = %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5389
  br label %cleanup, !dbg !5390

if.end:                                           ; preds = %entry
  %add.ptr = getelementptr inbounds i8, i8* %data, i64 %offset, !dbg !5391
  %call1 = tail call fastcc %struct.rtx_def* @c_readstr(i8* %add.ptr, i32 %mode) #8, !dbg !5392
  br label %cleanup, !dbg !5393

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %call1, %if.end ], !dbg !5384
  ret %struct.rtx_def* %retval.0, !dbg !5394
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @c_readstr(i8* %str, i32 %mode) unnamed_addr #5 !dbg !5395 {
entry:
  %c = alloca [2 x i64], align 16
  call void @llvm.dbg.value(metadata i8* %str, metadata !5399, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5400, metadata !DIExpression()), !dbg !5406
  %0 = bitcast [2 x i64]* %c to i8*, !dbg !5407
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5407
  call void @llvm.dbg.declare(metadata [2 x i64]* %c, metadata !5401, metadata !DIExpression()), !dbg !5408
  %idxprom = zext i32 %mode to i64, !dbg !5409
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5409
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5409
  %cmp = icmp eq i8 %1, 2, !dbg !5409
  br i1 %cmp, label %cond.end, label %cond.true, !dbg !5409

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.724, i64 0, i64 0), i32 553, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !5409
  br label %cond.end, !dbg !5409

cond.end:                                         ; preds = %entry, %cond.true
  %arrayidx2 = getelementptr inbounds [2 x i64], [2 x i64]* %c, i64 0, i64 0, !dbg !5410
  store i64 0, i64* %arrayidx2, align 16, !dbg !5411
  %arrayidx3 = getelementptr inbounds [2 x i64], [2 x i64]* %c, i64 0, i64 1, !dbg !5412
  store i64 0, i64* %arrayidx3, align 8, !dbg !5413
  call void @llvm.dbg.value(metadata i64 1, metadata !5403, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.value(metadata i32 0, metadata !5404, metadata !DIExpression()), !dbg !5406
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5414
  br label %for.cond, !dbg !5417

for.cond:                                         ; preds = %if.end, %cond.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 0, %cond.end ], !dbg !5406
  %ch.0 = phi i64 [ %ch.1, %if.end ], [ 1, %cond.end ], !dbg !5406
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5404, metadata !DIExpression()), !dbg !5406
  call void @llvm.dbg.value(metadata i64 %ch.0, metadata !5403, metadata !DIExpression()), !dbg !5406
  %2 = load i8, i8* %arrayidx5, align 1, !dbg !5418
  %3 = zext i8 %2 to i64, !dbg !5419
  %cmp8 = icmp ult i64 %indvars.iv, %3, !dbg !5419
  br i1 %cmp8, label %for.body, label %for.end, !dbg !5420

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5405, metadata !DIExpression()), !dbg !5406
  %4 = shl i64 %indvars.iv, 3, !dbg !5421
  call void @llvm.dbg.value(metadata i32 undef, metadata !5405, metadata !DIExpression(DW_OP_constu, 3, DW_OP_shl, DW_OP_stack_value)), !dbg !5406
  %cmp10 = icmp ult i64 %4, 129, !dbg !5423
  br i1 %cmp10, label %cond.end14, label %cond.true12, !dbg !5423

cond.true12:                                      ; preds = %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.724, i64 0, i64 0), i32 567, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !5423
  br label %cond.end14, !dbg !5423

cond.end14:                                       ; preds = %for.body, %cond.true12
  %tobool = icmp eq i64 %ch.0, 0, !dbg !5424
  br i1 %tobool, label %if.end, label %if.then, !dbg !5426

if.then:                                          ; preds = %cond.end14
  %arrayidx17 = getelementptr inbounds i8, i8* %str, i64 %indvars.iv, !dbg !5427
  %5 = load i8, i8* %arrayidx17, align 1, !dbg !5427
  %conv18 = zext i8 %5 to i64, !dbg !5428
  call void @llvm.dbg.value(metadata i64 %conv18, metadata !5403, metadata !DIExpression()), !dbg !5406
  br label %if.end, !dbg !5429

if.end:                                           ; preds = %cond.end14, %if.then
  %ch.1 = phi i64 [ %conv18, %if.then ], [ 0, %cond.end14 ], !dbg !5406
  call void @llvm.dbg.value(metadata i64 %ch.1, metadata !5403, metadata !DIExpression()), !dbg !5406
  %rem = and i64 %4, 56, !dbg !5430
  %shl = shl i64 %ch.1, %rem, !dbg !5431
  %6 = lshr i64 %indvars.iv, 3, !dbg !5432
  %div = and i64 %6, 67108863, !dbg !5432
  %arrayidx20 = getelementptr inbounds [2 x i64], [2 x i64]* %c, i64 0, i64 %div, !dbg !5433
  %7 = load i64, i64* %arrayidx20, align 8, !dbg !5434
  %or = or i64 %7, %shl, !dbg !5434
  store i64 %or, i64* %arrayidx20, align 8, !dbg !5434
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5435
  call void @llvm.dbg.value(metadata i32 undef, metadata !5404, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5406
  br label %for.cond, !dbg !5436, !llvm.loop !5437

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %arrayidx2, align 16, !dbg !5439
  %9 = load i64, i64* %arrayidx3, align 8, !dbg !5440
  %call = tail call %struct.rtx_def* @immed_double_const(i64 %8, i64 %9, i32 %mode) #7, !dbg !5441
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5442
  ret %struct.rtx_def* %call, !dbg !5443
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @builtin_memset_read_str(i8* %data, i64 %offset, i32 %mode) local_unnamed_addr #5 !dbg !5444 {
entry:
  call void @llvm.dbg.value(metadata i8* %data, metadata !5446, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i64 %offset, metadata !5447, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5448, metadata !DIExpression()), !dbg !5451
  call void @llvm.dbg.value(metadata i8* %data, metadata !5449, metadata !DIExpression()), !dbg !5451
  %idxprom = zext i32 %mode to i64, !dbg !5452
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5452
  %0 = load i8, i8* %arrayidx, align 1, !dbg !5452
  %conv1 = zext i8 %0 to i64, !dbg !5452
  %1 = alloca i8, i64 %conv1, align 16, !dbg !5452
  call void @llvm.dbg.value(metadata i8* %1, metadata !5450, metadata !DIExpression()), !dbg !5451
  %2 = load i8, i8* %data, align 1, !dbg !5453
  %conv2 = sext i8 %2 to i32, !dbg !5453
  %call = call i8* @memset(i8* nonnull %1, i32 %conv2, i64 %conv1) #7, !dbg !5454
  %call7 = call fastcc %struct.rtx_def* @c_readstr(i8* nonnull %1, i32 %mode) #8, !dbg !5455
  ret %struct.rtx_def* %call7, !dbg !5456
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_builtin_saveregs() local_unnamed_addr #5 !dbg !5457 {
entry:
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 3), align 8, !dbg !5463
  %cmp = icmp eq %struct.rtx_def* %0, null, !dbg !5465
  br i1 %cmp, label %if.end, label %if.then, !dbg !5466

if.then:                                          ; preds = %entry
  br label %cleanup, !dbg !5467

if.end:                                           ; preds = %entry
  tail call void @start_sequence() #7, !dbg !5468
  %1 = load %struct.rtx_def* ()*, %struct.rtx_def* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 88, i32 6), align 8, !dbg !5469
  %call = tail call %struct.rtx_def* %1() #7, !dbg !5470
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5461, metadata !DIExpression()), !dbg !5471
  %call1 = tail call %struct.rtx_def* @get_insns() #7, !dbg !5472
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !5462, metadata !DIExpression()), !dbg !5471
  tail call void @end_sequence() #7, !dbg !5473
  store %struct.rtx_def* %call, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 0, i32 3), align 8, !dbg !5474
  tail call void @push_topmost_sequence() #7, !dbg !5475
  %call2 = tail call %struct.rtx_def* @entry_of_function() #7, !dbg !5476
  %call3 = tail call %struct.rtx_def* @emit_insn_after(%struct.rtx_def* %call1, %struct.rtx_def* %call2) #7, !dbg !5477
  tail call void @pop_topmost_sequence() #7, !dbg !5478
  br label %cleanup, !dbg !5479

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi %struct.rtx_def* [ %0, %if.then ], [ %call, %if.end ], !dbg !5471
  ret %struct.rtx_def* %retval.0, !dbg !5480
}

declare dso_local void @start_sequence() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

declare dso_local void @end_sequence() local_unnamed_addr #2

declare dso_local void @push_topmost_sequence() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn_after(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @entry_of_function() local_unnamed_addr #2

declare dso_local void @pop_topmost_sequence() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @std_build_builtin_va_list() local_unnamed_addr #5 !dbg !5481 {
entry:
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 39), align 8, !dbg !5484
  ret %union.tree_node* %0, !dbg !5485
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @std_fn_abi_va_list(%union.tree_node* %fndecl) local_unnamed_addr #5 !dbg !5486 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !5490, metadata !DIExpression()), !dbg !5491
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 44), align 16, !dbg !5492
  ret %union.tree_node* %0, !dbg !5493
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @std_canonical_va_list_type(%union.tree_node* %type) local_unnamed_addr #5 !dbg !5494 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5496, metadata !DIExpression()), !dbg !5499
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5500
  %bf.load = load i64, i64* %0, align 8, !dbg !5500
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5500
  %cmp = icmp eq i64 %bf.cast1, 47, !dbg !5500
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5500

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast1, 48, !dbg !5500
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !5500

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 49, !dbg !5500
  br i1 %cmp11, label %if.then, label %if.else, !dbg !5502

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5503
  %1 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !5503
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5496, metadata !DIExpression()), !dbg !5499
  br label %if.end42, !dbg !5504

if.else:                                          ; preds = %lor.lhs.false6
  %cmp17 = icmp eq i64 %bf.cast1, 10, !dbg !5505
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false18, !dbg !5505

lor.lhs.false18:                                  ; preds = %if.else
  %cmp23 = icmp eq i64 %bf.cast1, 12, !dbg !5505
  br i1 %cmp23, label %land.lhs.true, label %if.end42, !dbg !5507

land.lhs.true:                                    ; preds = %lor.lhs.false18, %if.else
  %type25 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5508
  %2 = bitcast %union.tree_node** %type25 to i64**, !dbg !5508
  %3 = load i64*, i64** %2, align 8, !dbg !5508
  %bf.load27 = load i64, i64* %3, align 8, !dbg !5508
  %bf.cast2913 = and i64 %bf.load27, 65535, !dbg !5508
  %cmp30 = icmp eq i64 %bf.cast2913, 10, !dbg !5508
  %4 = bitcast i64* %3 to %union.tree_node*, !dbg !5508
  br i1 %cmp30, label %if.then39, label %lor.lhs.false31, !dbg !5508

lor.lhs.false31:                                  ; preds = %land.lhs.true
  %cmp38 = icmp eq i64 %bf.cast2913, 12, !dbg !5508
  br i1 %cmp38, label %if.then39, label %if.end42, !dbg !5509

if.then39:                                        ; preds = %lor.lhs.false31, %land.lhs.true
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5496, metadata !DIExpression()), !dbg !5499
  br label %if.end42, !dbg !5510

if.end42:                                         ; preds = %lor.lhs.false18, %lor.lhs.false31, %if.then39, %if.then
  %type.addr.1 = phi %union.tree_node* [ %1, %if.then ], [ %4, %if.then39 ], [ %type, %lor.lhs.false31 ], [ %type, %lor.lhs.false18 ], !dbg !5511
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.1, metadata !5496, metadata !DIExpression()), !dbg !5499
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 44), align 16, !dbg !5512
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !5497, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.1, metadata !5498, metadata !DIExpression()), !dbg !5499
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5513
  %bf.load44 = load i64, i64* %6, align 8, !dbg !5513
  %bf.cast466 = and i64 %bf.load44, 65535, !dbg !5515
  %cmp47 = icmp eq i64 %bf.cast466, 16, !dbg !5515
  br i1 %cmp47, label %land.lhs.true48, label %if.else63, !dbg !5516

land.lhs.true48:                                  ; preds = %if.end42
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5517
  %bf.load50 = load i64, i64* %7, align 8, !dbg !5517
  %bf.cast5211 = and i64 %bf.load50, 65535, !dbg !5517
  %cmp53 = icmp eq i64 %bf.cast5211, 10, !dbg !5517
  br i1 %cmp53, label %if.then60, label %lor.lhs.false54, !dbg !5517

lor.lhs.false54:                                  ; preds = %land.lhs.true48
  %cmp59 = icmp eq i64 %bf.cast5211, 12, !dbg !5517
  br i1 %cmp59, label %if.then60, label %if.else63, !dbg !5518

if.then60:                                        ; preds = %lor.lhs.false54, %land.lhs.true48
  %type62 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5519
  %8 = load %union.tree_node*, %union.tree_node** %type62, align 8, !dbg !5519
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !5498, metadata !DIExpression()), !dbg !5499
  br label %if.end94, !dbg !5520

if.else63:                                        ; preds = %lor.lhs.false54, %if.end42
  %cmp68 = icmp eq i64 %bf.cast466, 15, !dbg !5521
  br i1 %cmp68, label %if.then69, label %if.end94, !dbg !5523

if.then69:                                        ; preds = %if.else63
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5524
  %bf.load71 = load i64, i64* %9, align 8, !dbg !5524
  %bf.cast738 = and i64 %bf.load71, 65535, !dbg !5527
  %cmp74 = icmp eq i64 %bf.cast738, 15, !dbg !5527
  br i1 %cmp74, label %if.then87, label %lor.lhs.false75, !dbg !5528

lor.lhs.false75:                                  ; preds = %if.then69
  %cmp80 = icmp eq i64 %bf.cast738, 10, !dbg !5529
  br i1 %cmp80, label %if.then87, label %lor.lhs.false81, !dbg !5529

lor.lhs.false81:                                  ; preds = %lor.lhs.false75
  %cmp86 = icmp eq i64 %bf.cast738, 12, !dbg !5529
  br i1 %cmp86, label %if.then87, label %if.end94, !dbg !5530

if.then87:                                        ; preds = %lor.lhs.false81, %lor.lhs.false75, %if.then69
  %type89 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5531
  %10 = load %union.tree_node*, %union.tree_node** %type89, align 8, !dbg !5531
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !5497, metadata !DIExpression()), !dbg !5499
  %type91 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5533
  %11 = load %union.tree_node*, %union.tree_node** %type91, align 8, !dbg !5533
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5498, metadata !DIExpression()), !dbg !5499
  br label %if.end94, !dbg !5534

if.end94:                                         ; preds = %if.else63, %if.then87, %lor.lhs.false81, %if.then60
  %htype.2 = phi %union.tree_node* [ %8, %if.then60 ], [ %type.addr.1, %if.else63 ], [ %11, %if.then87 ], [ %type.addr.1, %lor.lhs.false81 ], !dbg !5535
  %wtype.2 = phi %union.tree_node* [ %5, %if.then60 ], [ %5, %if.else63 ], [ %10, %if.then87 ], [ %5, %lor.lhs.false81 ], !dbg !5499
  call void @llvm.dbg.value(metadata %union.tree_node* %wtype.2, metadata !5497, metadata !DIExpression()), !dbg !5499
  call void @llvm.dbg.value(metadata %union.tree_node* %htype.2, metadata !5498, metadata !DIExpression()), !dbg !5499
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %wtype.2, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5536
  %13 = load %union.tree_node*, %union.tree_node** %12, align 8, !dbg !5536
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %htype.2, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5538
  %15 = load %union.tree_node*, %union.tree_node** %14, align 8, !dbg !5538
  %cmp98 = icmp eq %union.tree_node* %13, %15, !dbg !5539
  %retval.0 = select i1 %cmp98, %union.tree_node* %5, %union.tree_node* null, !dbg !5540
  ret %union.tree_node* %retval.0, !dbg !5541
}

; Function Attrs: nounwind uwtable
define dso_local void @std_expand_builtin_va_start(%union.tree_node* %valist, %struct.rtx_def* %nextarg) local_unnamed_addr #5 !dbg !5542 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %valist, metadata !5546, metadata !DIExpression()), !dbg !5549
  call void @llvm.dbg.value(metadata %struct.rtx_def* %nextarg, metadata !5547, metadata !DIExpression()), !dbg !5549
  %call = tail call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %valist, %struct.rtx_def* null, i32 0, i32 5) #8, !dbg !5550
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5548, metadata !DIExpression()), !dbg !5549
  tail call void @convert_move(%struct.rtx_def* %call, %struct.rtx_def* %nextarg, i32 0) #7, !dbg !5551
  ret void, !dbg !5552
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @expand_expr(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %mode, i32 %modifier) unnamed_addr #0 !dbg !5553 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5557, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !5558, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i32 0, metadata !5559, metadata !DIExpression()), !dbg !5561
  call void @llvm.dbg.value(metadata i32 %modifier, metadata !5560, metadata !DIExpression()), !dbg !5561
  %call = tail call %struct.rtx_def* @expand_expr_real(%union.tree_node* %exp, %struct.rtx_def* %target, i32 0, i32 %modifier, %struct.rtx_def** null) #7, !dbg !5562
  ret %struct.rtx_def* %call, !dbg !5563
}

declare dso_local void @convert_move(%struct.rtx_def*, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @std_gimplify_va_arg_expr(%union.tree_node* %valist, %union.tree_node* %type, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p) local_unnamed_addr #5 !dbg !5564 {
entry:
  %rounded_size = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %valist, metadata !5568, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5569, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !5570, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !5571, metadata !DIExpression()), !dbg !5580
  %0 = bitcast %union.tree_node** %rounded_size to i8*, !dbg !5581
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5581
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5582
  %bf.load = load i64, i64* %1, align 8, !dbg !5582
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5582
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !5582
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5582

cond.true:                                        ; preds = %entry
  %call = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !5582
  br label %cond.end, !dbg !5582

cond.false:                                       ; preds = %entry
  %type1 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !5582
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i64 0, i32 6, !dbg !5582
  %bf.load2 = load i32, i32* %mode, align 4, !dbg !5582
  %bf.lshr = lshr i32 %bf.load2, 16, !dbg !5582
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !5582
  br label %cond.end, !dbg !5582

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear3, %cond.false ], !dbg !5582
  %call4 = tail call zeroext i8 @pass_by_reference(%struct.ix86_args* null, i32 %cond, %union.tree_node* %type, i8 zeroext 0) #7, !dbg !5583
  call void @llvm.dbg.value(metadata i8 %call4, metadata !5579, metadata !DIExpression()), !dbg !5580
  %tobool = icmp eq i8 %call4, 0, !dbg !5584
  br i1 %tobool, label %if.end, label %if.then, !dbg !5586

if.then:                                          ; preds = %cond.end
  %call5 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %type) #7, !dbg !5587
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !5569, metadata !DIExpression()), !dbg !5580
  br label %if.end, !dbg !5588

if.end:                                           ; preds = %cond.end, %if.then
  %type.addr.0 = phi %union.tree_node* [ %call5, %if.then ], [ %type, %cond.end ]
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.0, metadata !5569, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.value(metadata i64 4, metadata !5577, metadata !DIExpression()), !dbg !5580
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5589
  %bf.load7 = load i64, i64* %2, align 8, !dbg !5589
  %bf.cast92 = and i64 %bf.load7, 65535, !dbg !5589
  %cmp10 = icmp eq i64 %bf.cast92, 14, !dbg !5589
  br i1 %cmp10, label %cond.true11, label %cond.false13, !dbg !5589

cond.true11:                                      ; preds = %if.end
  %call12 = tail call i32 @vector_type_mode(%union.tree_node* %type.addr.0) #7, !dbg !5589
  br label %cond.end19, !dbg !5589

cond.false13:                                     ; preds = %if.end
  %type14 = bitcast %union.tree_node* %type.addr.0 to %struct.tree_type*, !dbg !5589
  %mode15 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i64 0, i32 6, !dbg !5589
  %bf.load16 = load i32, i32* %mode15, align 4, !dbg !5589
  %bf.lshr17 = lshr i32 %bf.load16, 16, !dbg !5589
  %bf.clear18 = and i32 %bf.lshr17, 255, !dbg !5589
  br label %cond.end19, !dbg !5589

cond.end19:                                       ; preds = %cond.false13, %cond.true11
  %cond20 = phi i32 [ %call12, %cond.true11 ], [ %bf.clear18, %cond.false13 ], !dbg !5589
  %call21 = tail call i32 @ix86_function_arg_boundary(i32 %cond20, %union.tree_node* %type.addr.0) #7, !dbg !5589
  %conv = sext i32 %call21 to i64, !dbg !5589
  call void @llvm.dbg.value(metadata i64 %conv, metadata !5578, metadata !DIExpression()), !dbg !5580
  %3 = icmp ult i64 %conv, 2147483648, !dbg !5590
  %spec.select = select i1 %3, i64 %conv, i64 2147483648, !dbg !5590
  call void @llvm.dbg.value(metadata i64 %spec.select, metadata !5578, metadata !DIExpression()), !dbg !5580
  %div = lshr i64 %spec.select, 3, !dbg !5591
  call void @llvm.dbg.value(metadata i64 %div, metadata !5578, metadata !DIExpression()), !dbg !5580
  %call26 = tail call %union.tree_node* @get_initialized_tmp_var(%union.tree_node* %valist, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** null) #7, !dbg !5592
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !5576, metadata !DIExpression()), !dbg !5580
  %cmp27 = icmp ugt i64 %spec.select, 39, !dbg !5593
  br i1 %cmp27, label %land.lhs.true, label %if.end49, !dbg !5595

land.lhs.true:                                    ; preds = %cond.end19
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5596
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !5596
  %call30 = tail call i32 @integer_zerop(%union.tree_node* %5) #7, !dbg !5597
  %tobool31 = icmp eq i32 %call30, 0, !dbg !5597
  br i1 %tobool31, label %if.then32, label %if.end49, !dbg !5598

if.then32:                                        ; preds = %land.lhs.true
  %type33 = getelementptr inbounds %union.tree_node, %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5599
  %6 = load %union.tree_node*, %union.tree_node** %type33, align 8, !dbg !5599
  %sub = add nsw i64 %div, -1, !dbg !5599
  %call36 = tail call %union.tree_node* @size_int_kind(i64 %sub, i32 0) #7, !dbg !5599
  %call37 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 66, %union.tree_node* %6, %union.tree_node* %call26, %union.tree_node* %call36) #7, !dbg !5599
  %call38 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %6, %union.tree_node* %call26, %union.tree_node* %call37) #7, !dbg !5599
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !5573, metadata !DIExpression()), !dbg !5580
  tail call void @gimplify_and_add(%union.tree_node* %call38, %struct.gimple_seq_d** %pre_p) #7, !dbg !5601
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5602
  %call39 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %7, %union.tree_node* %call26) #7, !dbg !5602
  call void @llvm.dbg.value(metadata %union.tree_node* %call39, metadata !5573, metadata !DIExpression()), !dbg !5580
  %8 = load %union.tree_node*, %union.tree_node** %type33, align 8, !dbg !5603
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !5603
  %sub44 = sub nsw i64 0, %div, !dbg !5603
  %call45 = tail call %union.tree_node* @size_int_kind(i64 %sub44, i32 0) #7, !dbg !5603
  %call46 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 89, %union.tree_node* %9, %union.tree_node* %call39, %union.tree_node* %call45) #7, !dbg !5603
  %call47 = tail call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %8, %union.tree_node* %call46) #7, !dbg !5603
  %call48 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %8, %union.tree_node* %call26, %union.tree_node* %call47) #7, !dbg !5603
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !5573, metadata !DIExpression()), !dbg !5580
  tail call void @gimplify_and_add(%union.tree_node* %call48, %struct.gimple_seq_d** %pre_p) #7, !dbg !5604
  %phitmp = and i64 %spec.select, 4294967288, !dbg !5605
  br label %if.end49, !dbg !5605

if.end49:                                         ; preds = %land.lhs.true, %cond.end19, %if.then32
  %boundary.1 = phi i64 [ %phitmp, %if.then32 ], [ 32, %land.lhs.true ], [ 32, %cond.end19 ]
  call void @llvm.dbg.value(metadata i64 %boundary.1, metadata !5578, metadata !DIExpression()), !dbg !5580
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %type.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5606
  %11 = load i32, i32* %10, align 8, !dbg !5606
  %conv52 = zext i32 %11 to i64, !dbg !5606
  %cmp53 = icmp ult i64 %boundary.1, %conv52, !dbg !5608
  br i1 %cmp53, label %if.then55, label %if.end60, !dbg !5609

if.then55:                                        ; preds = %if.end49
  %call56 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %type.addr.0) #7, !dbg !5610
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !5569, metadata !DIExpression()), !dbg !5580
  %conv57 = trunc i64 %boundary.1 to i32, !dbg !5612
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5613
  store i32 %conv57, i32* %12, align 8, !dbg !5614
  br label %if.end60, !dbg !5615

if.end60:                                         ; preds = %if.then55, %if.end49
  %type.addr.1 = phi %union.tree_node* [ %call56, %if.then55 ], [ %type.addr.0, %if.end49 ], !dbg !5580
  call void @llvm.dbg.value(metadata %union.tree_node* %type.addr.1, metadata !5569, metadata !DIExpression()), !dbg !5580
  %call61 = tail call %union.tree_node* @size_in_bytes(%union.tree_node* %type.addr.1) #7, !dbg !5616
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !5574, metadata !DIExpression()), !dbg !5580
  %call63 = tail call %union.tree_node* @round_up_loc(i32 0, %union.tree_node* %call61, i32 4) #7, !dbg !5617
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !5575, metadata !DIExpression()), !dbg !5580
  store %union.tree_node* %call63, %union.tree_node** %rounded_size, align 8, !dbg !5618
  call void @llvm.dbg.value(metadata %union.tree_node** %rounded_size, metadata !5575, metadata !DIExpression(DW_OP_deref)), !dbg !5580
  %call64 = call i32 @gimplify_expr(%union.tree_node** nonnull %rounded_size, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !5619
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !5572, metadata !DIExpression()), !dbg !5580
  %type66 = getelementptr inbounds %union.tree_node, %union.tree_node* %valist, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5620
  %13 = load %union.tree_node*, %union.tree_node** %type66, align 8, !dbg !5620
  %14 = load %union.tree_node*, %union.tree_node** %rounded_size, align 8, !dbg !5620
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !5575, metadata !DIExpression()), !dbg !5580
  %call67 = call %union.tree_node* @build2_stat(i32 66, %union.tree_node* %13, %union.tree_node* %call26, %union.tree_node* %14) #7, !dbg !5620
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !5573, metadata !DIExpression()), !dbg !5580
  %15 = load %union.tree_node*, %union.tree_node** %type66, align 8, !dbg !5621
  %call70 = call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %15, %union.tree_node* %valist, %union.tree_node* %call67) #7, !dbg !5621
  call void @llvm.dbg.value(metadata %union.tree_node* %call70, metadata !5573, metadata !DIExpression()), !dbg !5580
  call void @gimplify_and_add(%union.tree_node* %call70, %struct.gimple_seq_d** %pre_p) #7, !dbg !5622
  %call71 = call %union.tree_node* @build_pointer_type(%union.tree_node* %type.addr.1) #7, !dbg !5623
  %call72 = call %union.tree_node* @fold_convert_loc(i32 0, %union.tree_node* %call71, %union.tree_node* %call26) #7, !dbg !5623
  call void @llvm.dbg.value(metadata %union.tree_node* %call72, metadata !5572, metadata !DIExpression()), !dbg !5580
  br i1 %tobool, label %if.end76, label %if.then74, !dbg !5624

if.then74:                                        ; preds = %if.end60
  %call75 = call %union.tree_node* @build_va_arg_indirect_ref(%union.tree_node* %call72) #8, !dbg !5625
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !5572, metadata !DIExpression()), !dbg !5580
  br label %if.end76, !dbg !5627

if.end76:                                         ; preds = %if.end60, %if.then74
  %addr.0 = phi %union.tree_node* [ %call75, %if.then74 ], [ %call72, %if.end60 ], !dbg !5580
  call void @llvm.dbg.value(metadata %union.tree_node* %addr.0, metadata !5572, metadata !DIExpression()), !dbg !5580
  %call77 = call %union.tree_node* @build_va_arg_indirect_ref(%union.tree_node* %addr.0) #8, !dbg !5628
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5629
  ret %union.tree_node* %call77, !dbg !5630
}

declare dso_local zeroext i8 @pass_by_reference(%struct.ix86_args*, i32, %union.tree_node*, i8 zeroext) local_unnamed_addr #2

declare dso_local i32 @vector_type_mode(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @ix86_function_arg_boundary(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_initialized_tmp_var(%union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**) local_unnamed_addr #2

declare dso_local i32 @integer_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build2_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build2_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local void @gimplify_and_add(%union.tree_node*, %struct.gimple_seq_d**) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_convert_loc(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_variant_type_copy(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_in_bytes(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @round_up_loc(i32, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i32 @gimplify_expr(%union.tree_node**, %struct.gimple_seq_d**, %struct.gimple_seq_d**, i8 (%union.tree_node*)*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_val(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_va_arg_indirect_ref(%union.tree_node* %addr) local_unnamed_addr #5 !dbg !5631 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %addr, metadata !5633, metadata !DIExpression()), !dbg !5634
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5635
  %bf.load = load i64, i64* %0, align 8, !dbg !5635
  %bf.cast = and i64 %bf.load, 65535, !dbg !5635
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5635
  %1 = load i32, i32* %arrayidx, align 4, !dbg !5635
  %cmp = icmp ugt i32 %1, 3, !dbg !5635
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !5635

land.lhs.true:                                    ; preds = %entry
  %cmp7 = icmp ult i32 %1, 11, !dbg !5635
  br i1 %cmp7, label %cond.true, label %cond.end, !dbg !5635

cond.true:                                        ; preds = %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %addr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5635
  %3 = load i32, i32* %2, align 8, !dbg !5635
  br label %cond.end, !dbg !5635

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !5635
  %call = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %cond, %union.tree_node* %addr) #7, !dbg !5636
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5633, metadata !DIExpression()), !dbg !5634
  %4 = load i32, i32* @flag_mudflap, align 4, !dbg !5637
  %tobool = icmp eq i32 %4, 0, !dbg !5637
  br i1 %tobool, label %if.end, label %if.then, !dbg !5639

if.then:                                          ; preds = %cond.end
  %call8 = tail call %union.tree_node* @mf_mark(%union.tree_node* %call) #7, !dbg !5640
  br label %if.end, !dbg !5640

if.end:                                           ; preds = %cond.end, %if.then
  ret %union.tree_node* %call, !dbg !5641
}

declare dso_local %union.tree_node* @build_fold_indirect_ref_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @mf_mark(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i32 @gimplify_va_arg_expr(%union.tree_node** %expr_p, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p) local_unnamed_addr #5 !dbg !4328 {
entry:
  %valist = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node** %expr_p, metadata !4333, metadata !DIExpression()), !dbg !5642
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %pre_p, metadata !4334, metadata !DIExpression()), !dbg !5642
  call void @llvm.dbg.value(metadata %struct.gimple_seq_d** %post_p, metadata !4335, metadata !DIExpression()), !dbg !5642
  %0 = bitcast %union.tree_node** %valist to i8*, !dbg !5643
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5643
  %1 = bitcast %union.tree_node** %expr_p to %struct.tree_exp**, !dbg !5644
  %2 = load %struct.tree_exp*, %struct.tree_exp** %1, align 8, !dbg !5644
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %2, i64 0, i32 3, i64 0, !dbg !5644
  %3 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !5644
  %4 = load i64, i64* %3, align 8, !dbg !5644
  %5 = bitcast %union.tree_node** %valist to i64*, !dbg !5645
  store i64 %4, i64* %5, align 8, !dbg !5645
  %type1 = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %2, i64 0, i32 0, i32 2, !dbg !5646
  %6 = load %union.tree_node*, %union.tree_node** %type1, align 8, !dbg !5646
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !4339, metadata !DIExpression()), !dbg !5642
  %.cast = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %2, i64 0, i32 0, i32 0, i32 0, !dbg !5647
  %bf.load = load i64, i64* %.cast, align 8, !dbg !5647
  %bf.cast = and i64 %bf.load, 65535, !dbg !5647
  %arrayidx2 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !5647
  %7 = load i32, i32* %arrayidx2, align 4, !dbg !5647
  %cmp = icmp ugt i32 %7, 3, !dbg !5647
  %8 = inttoptr i64 %4 to %struct.tree_common*, !dbg !5647
  %9 = inttoptr i64 %4 to %union.tree_node*, !dbg !5647
  br i1 %cmp, label %land.lhs.true, label %cond.end, !dbg !5647

land.lhs.true:                                    ; preds = %entry
  %cmp9 = icmp ult i32 %7, 11, !dbg !5647
  br i1 %cmp9, label %cond.true, label %cond.end, !dbg !5647

cond.true:                                        ; preds = %land.lhs.true
  %locus = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %2, i64 0, i32 1, !dbg !5647
  %10 = load i32, i32* %locus, align 8, !dbg !5647
  br label %cond.end, !dbg !5647

cond.end:                                         ; preds = %entry, %land.lhs.true, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ 0, %land.lhs.true ], [ 0, %entry ], !dbg !5647
  call void @llvm.dbg.value(metadata i32 %cond, metadata !4341, metadata !DIExpression()), !dbg !5642
  %type12 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !5648
  %11 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !5648
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !4337, metadata !DIExpression()), !dbg !5642
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 0), align 16, !dbg !5649
  %cmp13 = icmp eq %union.tree_node* %11, %12, !dbg !5651
  br i1 %cmp13, label %cleanup, label %if.end, !dbg !5652

if.end:                                           ; preds = %cond.end
  %13 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 71), align 8, !dbg !5653
  %call = tail call %union.tree_node* %13(%union.tree_node* %11) #7, !dbg !5654
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !4337, metadata !DIExpression()), !dbg !5642
  %cmp14 = icmp eq %union.tree_node* %call, null, !dbg !5655
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !5657

if.then15:                                        ; preds = %if.end
  tail call void (i32, i8*, ...) @error_at(i32 %cond, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.720, i64 0, i64 0)) #7, !dbg !5658
  br label %cleanup, !dbg !5660

if.end16:                                         ; preds = %if.end
  %14 = load %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 34, i32 6), align 8, !dbg !5661
  %call17 = tail call %union.tree_node* %14(%union.tree_node* %6) #7, !dbg !5662
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !4336, metadata !DIExpression()), !dbg !5642
  %cmp18 = icmp eq %union.tree_node* %call17, %6, !dbg !5663
  br i1 %cmp18, label %if.else, label %if.then19, !dbg !5664

if.then19:                                        ; preds = %if.end16
  %call20 = tail call zeroext i8 (i32, i32, i8*, ...) @warning_at(i32 %cond, i32 0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.721, i64 0, i64 0), %union.tree_node* %6, %union.tree_node* %call17) #7, !dbg !5665
  call void @llvm.dbg.value(metadata i8 %call20, metadata !4342, metadata !DIExpression()), !dbg !5666
  %.b = load i1, i1* @gimplify_va_arg_expr.gave_help, align 1, !dbg !5667
  %tobool = xor i1 %.b, true, !dbg !5667
  %tobool22 = icmp ne i8 %call20, 0, !dbg !5669
  %or.cond = and i1 %tobool22, %tobool, !dbg !5670
  br i1 %or.cond, label %if.then23, label %if.end24, !dbg !5670

if.then23:                                        ; preds = %if.then19
  store i1 true, i1* @gimplify_va_arg_expr.gave_help, align 1, !dbg !5671
  tail call void (i32, i8*, ...) @inform(i32 %cond, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.722, i64 0, i64 0), %union.tree_node* %call17, %union.tree_node* %6) #7, !dbg !5673
  br label %if.end24, !dbg !5674

if.end24:                                         ; preds = %if.then19, %if.then23
  %tobool25 = icmp eq i8 %call20, 0, !dbg !5675
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !5677

if.then26:                                        ; preds = %if.end24
  tail call void (i32, i8*, ...) @inform(i32 %cond, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.723, i64 0, i64 0)) #7, !dbg !5678
  br label %if.end27, !dbg !5678

if.end27:                                         ; preds = %if.end24, %if.then26
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4338, metadata !DIExpression()), !dbg !5642
  tail call void @gimplify_and_add(%union.tree_node* %9, %struct.gimple_seq_d** %pre_p) #7, !dbg !5679
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 509), align 8, !dbg !5680
  %call28 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %cond, %union.tree_node* %15, i32 0) #8, !dbg !5681
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !4340, metadata !DIExpression()), !dbg !5642
  tail call void @gimplify_and_add(%union.tree_node* %call28, %struct.gimple_seq_d** %pre_p) #7, !dbg !5682
  %call29 = tail call fastcc %union.tree_node* @dummy_object(%union.tree_node* %6) #8, !dbg !5683
  store %union.tree_node* %call29, %union.tree_node** %expr_p, align 8, !dbg !5684
  br label %cleanup

if.else:                                          ; preds = %if.end16
  %16 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5685
  %bf.load31 = load i64, i64* %16, align 8, !dbg !5685
  %bf.cast331 = and i64 %bf.load31, 65535, !dbg !5686
  %cmp34 = icmp eq i64 %bf.cast331, 15, !dbg !5686
  br i1 %cmp34, label %if.then36, label %if.else53, !dbg !5687

if.then36:                                        ; preds = %if.else
  %17 = bitcast %union.tree_node** %type12 to i64**, !dbg !5688
  %18 = load i64*, i64** %17, align 8, !dbg !5688
  %bf.load40 = load i64, i64* %18, align 8, !dbg !5688
  %bf.cast422 = and i64 %bf.load40, 65535, !dbg !5689
  %cmp43 = icmp eq i64 %bf.cast422, 15, !dbg !5689
  br i1 %cmp43, label %if.then45, label %if.end51, !dbg !5690

if.then45:                                        ; preds = %if.then36
  %type47 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5691
  %19 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !5691
  %call48 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %19) #7, !dbg !5692
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !4345, metadata !DIExpression()), !dbg !5693
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !4338, metadata !DIExpression()), !dbg !5642
  %call49 = tail call %union.tree_node* @build_fold_addr_expr_loc(i32 %cond, %union.tree_node* %9) #7, !dbg !5694
  %call50 = tail call %union.tree_node* @fold_convert_loc(i32 %cond, %union.tree_node* %call48, %union.tree_node* %call49) #7, !dbg !5695
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !4338, metadata !DIExpression()), !dbg !5642
  store %union.tree_node* %call50, %union.tree_node** %valist, align 8, !dbg !5696
  br label %if.end51, !dbg !5697

if.end51:                                         ; preds = %if.then45, %if.then36
  call void @llvm.dbg.value(metadata %union.tree_node** %valist, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !5642
  %call52 = call i32 @gimplify_expr(%union.tree_node** nonnull %valist, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_val, i32 1) #7, !dbg !5698
  br label %if.end55, !dbg !5699

if.else53:                                        ; preds = %if.else
  call void @llvm.dbg.value(metadata %union.tree_node** %valist, metadata !4338, metadata !DIExpression(DW_OP_deref)), !dbg !5642
  %call54 = call i32 @gimplify_expr(%union.tree_node** nonnull %valist, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p, i8 (%union.tree_node*)* nonnull @is_gimple_min_lval, i32 2) #7, !dbg !5700
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.end51
  %20 = load %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 73), align 8, !dbg !5701
  %tobool56 = icmp eq %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)* %20, null, !dbg !5703
  br i1 %tobool56, label %cleanup, label %if.end58, !dbg !5704

if.end58:                                         ; preds = %if.end55
  %21 = load %union.tree_node*, %union.tree_node** %valist, align 8, !dbg !5705
  call void @llvm.dbg.value(metadata %union.tree_node* %21, metadata !4338, metadata !DIExpression()), !dbg !5642
  %call59 = call %union.tree_node* %20(%union.tree_node* %21, %union.tree_node* %6, %struct.gimple_seq_d** %pre_p, %struct.gimple_seq_d** %post_p) #7, !dbg !5706
  store %union.tree_node* %call59, %union.tree_node** %expr_p, align 8, !dbg !5707
  br label %cleanup, !dbg !5708

cleanup:                                          ; preds = %if.end55, %cond.end, %if.end58, %if.end27, %if.then15
  %retval.0 = phi i32 [ -2, %if.then15 ], [ 1, %if.end27 ], [ 0, %if.end58 ], [ -2, %cond.end ], [ 1, %if.end55 ], !dbg !5642
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !5709
  ret i32 %retval.0, !dbg !5709
}

declare dso_local void @error_at(i32, i8*, ...) local_unnamed_addr #2

declare dso_local void @inform(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_call_expr_loc(i32 %loc, %union.tree_node* %fndecl, i32 %n, ...) local_unnamed_addr #5 !dbg !5710 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i32 %loc, metadata !5714, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !5715, metadata !DIExpression()), !dbg !5728
  call void @llvm.dbg.value(metadata i32 %n, metadata !5716, metadata !DIExpression()), !dbg !5728
  %0 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !5729
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !5729
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !5717, metadata !DIExpression()), !dbg !5730
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5731
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !5731
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !5724, metadata !DIExpression()), !dbg !5728
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %1) #7, !dbg !5732
  %call1 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call, %union.tree_node* %fndecl) #7, !dbg !5732
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5725, metadata !DIExpression()), !dbg !5728
  %conv = sext i32 %n to i64, !dbg !5733
  %2 = alloca %union.tree_node*, i64 %conv, align 16, !dbg !5733
  call void @llvm.dbg.value(metadata %union.tree_node** %2, metadata !5726, metadata !DIExpression()), !dbg !5728
  call void @llvm.va_start(i8* %0), !dbg !5734
  call void @llvm.dbg.value(metadata i32 0, metadata !5727, metadata !DIExpression()), !dbg !5728
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !5735
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !5735
  %3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !5735
  %4 = sext i32 %n to i64, !dbg !5738
  br label %for.cond, !dbg !5738

for.cond:                                         ; preds = %vaarg.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %vaarg.end ], [ 0, %entry ], !dbg !5739
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5727, metadata !DIExpression()), !dbg !5728
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !5740
  br i1 %cmp, label %for.body, label %for.end, !dbg !5741

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !5742
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !5742
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !5742

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %3, align 16, !dbg !5742
  %5 = sext i32 %gp_offset to i64, !dbg !5742
  %6 = getelementptr i8, i8* %reg_save_area, i64 %5, !dbg !5742
  %7 = add i32 %gp_offset, 8, !dbg !5742
  store i32 %7, i32* %gp_offset_p, align 16, !dbg !5742
  br label %vaarg.end, !dbg !5742

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !5742
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !5742
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !5742
  br label %vaarg.end, !dbg !5742

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %6, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %8 = bitcast i8* %vaarg.addr.in to i64*, !dbg !5742
  %9 = load i64, i64* %8, align 8, !dbg !5742
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %indvars.iv, !dbg !5743
  %10 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !5744
  store i64 %9, i64* %10, align 8, !dbg !5744
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5745
  call void @llvm.dbg.value(metadata i32 undef, metadata !5727, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5728
  br label %for.cond, !dbg !5746, !llvm.loop !5747

for.end:                                          ; preds = %for.cond
  call void @llvm.va_end(i8* nonnull %0), !dbg !5749
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5750
  %11 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !5750
  %call9 = call %union.tree_node* @fold_builtin_call_array(i32 %loc, %union.tree_node* %11, %union.tree_node* %call1, i32 %n, %union.tree_node** nonnull %2) #8, !dbg !5751
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !5752
  ret %union.tree_node* %call9, !dbg !5753
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @dummy_object(%union.tree_node* %type) unnamed_addr #5 !dbg !5754 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !5756, metadata !DIExpression()), !dbg !5758
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %type) #7, !dbg !5759
  %call1 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %call, i64 0) #7, !dbg !5760
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5757, metadata !DIExpression()), !dbg !5758
  %call2 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %type, %union.tree_node* %call1) #7, !dbg !5761
  ret %union.tree_node* %call2, !dbg !5762
}

declare dso_local %union.tree_node* @build_fold_addr_expr_loc(i32, %union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @is_gimple_min_lval(%union.tree_node*) #2

; Function Attrs: nounwind uwtable
define dso_local void @expand_builtin_trap() local_unnamed_addr #5 !dbg !5763 {
entry:
  %call = tail call %struct.rtx_def* @gen_trap() #7, !dbg !5766
  %call1 = tail call %struct.rtx_def* @emit_insn(%struct.rtx_def* %call) #7, !dbg !5768
  %call2 = tail call %struct.rtx_def* @emit_barrier() #7, !dbg !5769
  ret void, !dbg !5770
}

declare dso_local %struct.rtx_def* @gen_trap() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_barrier() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_string_literal(i32 %len, i8* %str) local_unnamed_addr #5 !dbg !5771 {
entry:
  call void @llvm.dbg.value(metadata i32 %len, metadata !5775, metadata !DIExpression()), !dbg !5781
  call void @llvm.dbg.value(metadata i8* %str, metadata !5776, metadata !DIExpression()), !dbg !5781
  %call = tail call %union.tree_node* @build_string(i32 %len, i8* %str) #7, !dbg !5782
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5777, metadata !DIExpression()), !dbg !5781
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 0), align 16, !dbg !5783
  %call1 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %0, i32 1) #7, !dbg !5783
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !5778, metadata !DIExpression()), !dbg !5781
  %sub = add nsw i32 %len, -1, !dbg !5784
  %conv = sext i32 %sub to i64, !dbg !5784
  %call2 = tail call %union.tree_node* @size_int_kind(i64 %conv, i32 0) #7, !dbg !5784
  %call3 = tail call %union.tree_node* @build_index_type(%union.tree_node* %call2) #7, !dbg !5785
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !5779, metadata !DIExpression()), !dbg !5781
  %call4 = tail call %union.tree_node* @build_array_type(%union.tree_node* %call1, %union.tree_node* %call3) #7, !dbg !5786
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !5780, metadata !DIExpression()), !dbg !5781
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5787
  store %union.tree_node* %call4, %union.tree_node** %type5, align 8, !dbg !5788
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5789
  %bf.load = load i64, i64* %1, align 8, !dbg !5790
  %bf.set13 = or i64 %bf.load, 68288512, !dbg !5791
  store i64 %bf.set13, i64* %1, align 8, !dbg !5791
  %call14 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %call1) #7, !dbg !5792
  call void @llvm.dbg.value(metadata %union.tree_node* %call14, metadata !5780, metadata !DIExpression()), !dbg !5781
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !5793
  %call15 = tail call %union.tree_node* @build4_stat(i32 45, %union.tree_node* %call1, %union.tree_node* %call, %union.tree_node* %2, %union.tree_node* null, %union.tree_node* null) #7, !dbg !5793
  %call16 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call14, %union.tree_node* %call15) #7, !dbg !5793
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !5777, metadata !DIExpression()), !dbg !5781
  ret %union.tree_node* %call16, !dbg !5794
}

declare dso_local %union.tree_node* @build_string(i32, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_qualified_type(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_index_type(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_array_type(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build1_stat(i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build4_stat(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @expand_builtin(%union.tree_node* %exp, %struct.rtx_def* %target, %struct.rtx_def* %subtarget, i32 %mode, i32 %ignore) local_unnamed_addr #5 !dbg !5795 {
entry:
  %iter = alloca %struct.call_expr_arg_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5799, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !5800, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata %struct.rtx_def* %subtarget, metadata !5801, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i32 %mode, metadata !5802, metadata !DIExpression()), !dbg !5818
  call void @llvm.dbg.value(metadata i32 %ignore, metadata !5803, metadata !DIExpression()), !dbg !5818
  %call = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %exp) #7, !dbg !5819
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5804, metadata !DIExpression()), !dbg !5818
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !5820
  %bf.load = load i32, i32* %function_code, align 8, !dbg !5820
  %bf.clear = and i32 %bf.load, 2047, !dbg !5820
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !5805, metadata !DIExpression()), !dbg !5818
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5821
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !5821
  %1 = load i64*, i64** %0, align 8, !dbg !5821
  %bf.load1 = load i64, i64* %1, align 8, !dbg !5821
  %bf.cast3 = and i64 %bf.load1, 65535, !dbg !5821
  %cmp = icmp eq i64 %bf.cast3, 14, !dbg !5821
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5821

cond.true:                                        ; preds = %entry
  %.cast = bitcast i64* %1 to %union.tree_node*, !dbg !5821
  %call5 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !5821
  %bf.load13.pre = load i32, i32* %function_code, align 8, !dbg !5822
  br label %cond.end, !dbg !5821

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5821

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load13 = phi i32 [ %bf.load, %cond.false ], [ %bf.load13.pre, %cond.true ], !dbg !5822
  call void @llvm.dbg.value(metadata i32 undef, metadata !5806, metadata !DIExpression()), !dbg !5818
  %bf.clear15 = and i32 %bf.load13, 6144, !dbg !5822
  %cmp16 = icmp eq i32 %bf.clear15, 4096, !dbg !5824
  br i1 %cmp16, label %if.then, label %if.end, !dbg !5825

if.then:                                          ; preds = %cond.end
  %2 = load %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 25), align 8, !dbg !5826
  %call17 = tail call %struct.rtx_def* %2(%union.tree_node* %exp, %struct.rtx_def* %target, %struct.rtx_def* %subtarget, i32 %mode, i32 %ignore) #7, !dbg !5827
  br label %cleanup83, !dbg !5828

if.end:                                           ; preds = %cond.end
  %3 = load i32, i32* @optimize, align 4, !dbg !5829
  %tobool = icmp eq i32 %3, 0, !dbg !5829
  br i1 %tobool, label %land.lhs.true, label %if.end38, !dbg !5831

land.lhs.true:                                    ; preds = %if.end
  %call18 = tail call fastcc zeroext i8 @called_as_built_in(%union.tree_node* %call) #8, !dbg !5832
  %tobool19 = icmp eq i8 %call18, 0, !dbg !5832
  br i1 %tobool19, label %land.lhs.true20, label %if.end38, !dbg !5833

land.lhs.true20:                                  ; preds = %land.lhs.true
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5834
  %bf.load22 = load i64, i64* %4, align 8, !dbg !5834
  %bf.cast24 = and i64 %bf.load22, 65535, !dbg !5834
  %arrayidx25 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %bf.cast24, i64 13, !dbg !5834
  %5 = load i8, i8* %arrayidx25, align 1, !dbg !5834
  %tobool26 = icmp eq i8 %5, 0, !dbg !5834
  br i1 %tobool26, label %if.end38, label %land.lhs.true27, !dbg !5834

land.lhs.true27:                                  ; preds = %land.lhs.true20
  %assembler_name = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !5834
  %6 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !5834
  %cmp28 = icmp ne %union.tree_node* %6, null, !dbg !5834
  %cmp31 = icmp ne i32 %bf.clear, 415, !dbg !5835
  %or.cond = and i1 %cmp28, %cmp31, !dbg !5836
  %cmp34 = icmp ne i32 %bf.clear, 455, !dbg !5837
  %or.cond2 = and i1 %or.cond, %cmp34, !dbg !5836
  br i1 %or.cond2, label %if.then36, label %if.end38, !dbg !5836

if.then36:                                        ; preds = %land.lhs.true27
  %call37 = tail call %struct.rtx_def* @expand_call(%union.tree_node* %exp, %struct.rtx_def* %target, i32 %ignore) #7, !dbg !5838
  br label %cleanup83, !dbg !5839

if.end38:                                         ; preds = %land.lhs.true20, %land.lhs.true, %if.end, %land.lhs.true27
  %tobool39 = icmp eq i32 %ignore, 0, !dbg !5840
  %7 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5842
  %spec.select = select i1 %tobool39, %struct.rtx_def* %target, %struct.rtx_def* %7, !dbg !5843
  call void @llvm.dbg.value(metadata %struct.rtx_def* %spec.select, metadata !5800, metadata !DIExpression()), !dbg !5818
  %cmp42 = icmp eq %struct.rtx_def* %spec.select, %7, !dbg !5844
  br i1 %cmp42, label %land.lhs.true44, label %if.end81, !dbg !5845

land.lhs.true44:                                  ; preds = %if.end38
  %bf.load46 = load i32, i32* %function_code, align 8, !dbg !5846
  %bf.clear48 = and i32 %bf.load46, 134217728, !dbg !5846
  %tobool49 = icmp eq i32 %bf.clear48, 0, !dbg !5846
  br i1 %tobool49, label %lor.lhs.false, label %if.then56, !dbg !5847

lor.lhs.false:                                    ; preds = %land.lhs.true44
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5848
  %bf.load51 = load i64, i64* %8, align 8, !dbg !5848
  %bf.cast544 = and i64 %bf.load51, 1048576, !dbg !5848
  %tobool55 = icmp eq i64 %bf.cast544, 0, !dbg !5848
  br i1 %tobool55, label %if.end81, label %if.then56, !dbg !5849

if.then56:                                        ; preds = %lor.lhs.false, %land.lhs.true44
  call void @llvm.dbg.value(metadata i8 0, metadata !5807, metadata !DIExpression()), !dbg !5850
  %9 = bitcast %struct.call_expr_arg_iterator_d* %iter to i8*, !dbg !5851
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #6, !dbg !5851
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !5811, metadata !DIExpression(DW_OP_deref)), !dbg !5850
  %call57 = call fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !5852
  call void @llvm.dbg.value(metadata %union.tree_node* %call57, metadata !5810, metadata !DIExpression()), !dbg !5850
  br label %for.cond, !dbg !5852

for.cond:                                         ; preds = %for.inc, %if.then56
  %arg.0 = phi %union.tree_node* [ %call57, %if.then56 ], [ %call67, %for.inc ], !dbg !5854
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !5810, metadata !DIExpression()), !dbg !5850
  %tobool58 = icmp eq %union.tree_node* %arg.0, null, !dbg !5852
  br i1 %tobool58, label %for.end, label %for.body, !dbg !5852

for.body:                                         ; preds = %for.cond
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5855
  %bf.load60 = load i64, i64* %10, align 8, !dbg !5855
  %bf.cast635 = and i64 %bf.load60, 524288, !dbg !5855
  %tobool64 = icmp eq i64 %bf.cast635, 0, !dbg !5855
  br i1 %tobool64, label %for.inc, label %for.end, !dbg !5858

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !5811, metadata !DIExpression(DW_OP_deref)), !dbg !5850
  %call67 = call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !5859
  call void @llvm.dbg.value(metadata %union.tree_node* %call67, metadata !5810, metadata !DIExpression()), !dbg !5850
  br label %for.cond, !dbg !5859, !llvm.loop !5860

for.end:                                          ; preds = %for.body, %for.cond
  %volatilep.0 = phi i1 [ false, %for.cond ], [ true, %for.body ]
  br i1 %volatilep.0, label %cleanup, label %if.then69, !dbg !5862

if.then69:                                        ; preds = %for.end
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !5811, metadata !DIExpression(DW_OP_deref)), !dbg !5850
  %call70 = call fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !5863
  call void @llvm.dbg.value(metadata %union.tree_node* %call70, metadata !5810, metadata !DIExpression()), !dbg !5850
  br label %for.cond71, !dbg !5863

for.cond71:                                       ; preds = %for.body73, %if.then69
  %arg.1 = phi %union.tree_node* [ %call70, %if.then69 ], [ %call76, %for.body73 ], !dbg !5867
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.1, metadata !5810, metadata !DIExpression()), !dbg !5850
  %tobool72 = icmp eq %union.tree_node* %arg.1, null, !dbg !5863
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5868
  br i1 %tobool72, label %cleanup.loopexit, label %for.body73, !dbg !5863

for.body73:                                       ; preds = %for.cond71
  %call74 = call fastcc %struct.rtx_def* @expand_expr(%union.tree_node* nonnull %arg.1, %struct.rtx_def* %11, i32 0, i32 0) #8, !dbg !5869
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !5811, metadata !DIExpression(DW_OP_deref)), !dbg !5850
  %call76 = call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !5871
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !5810, metadata !DIExpression()), !dbg !5850
  br label %for.cond71, !dbg !5871, !llvm.loop !5872

cleanup.loopexit:                                 ; preds = %for.cond71
  %.lcssa = phi %struct.rtx_def* [ %11, %for.cond71 ], !dbg !5868
  br label %cleanup, !dbg !5874

cleanup:                                          ; preds = %cleanup.loopexit, %for.end
  %cleanup.dest.slot.0 = phi i1 [ true, %for.end ], [ false, %cleanup.loopexit ]
  %retval.0 = phi %struct.rtx_def* [ undef, %for.end ], [ %.lcssa, %cleanup.loopexit ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #6, !dbg !5874
  br i1 %cleanup.dest.slot.0, label %if.end81, label %cleanup83

if.end81:                                         ; preds = %lor.lhs.false, %cleanup, %if.end38
  %call82 = call %struct.rtx_def* @expand_call(%union.tree_node* %exp, %struct.rtx_def* %spec.select, i32 %ignore) #7, !dbg !5875
  br label %cleanup83, !dbg !5876

cleanup83:                                        ; preds = %cleanup, %if.end81, %if.then36, %if.then
  %retval.1 = phi %struct.rtx_def* [ %call17, %if.then ], [ %retval.0, %cleanup ], [ %call82, %if.end81 ], [ %call37, %if.then36 ]
  ret %struct.rtx_def* %retval.1, !dbg !5877
}

declare dso_local %union.tree_node* @get_callee_fndecl(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @called_as_built_in(%union.tree_node* %node) unnamed_addr #5 !dbg !5878 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %node, metadata !5880, metadata !DIExpression()), !dbg !5882
  %name1 = getelementptr inbounds %union.tree_node, %union.tree_node* %node, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5883
  %0 = bitcast %union.tree_node** %name1 to %struct.tree_identifier**, !dbg !5883
  %1 = load %struct.tree_identifier*, %struct.tree_identifier** %0, align 8, !dbg !5883
  %str = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %1, i64 0, i32 1, i32 0, !dbg !5883
  %2 = load i8*, i8** %str, align 8, !dbg !5883
  call void @llvm.dbg.value(metadata i8* %2, metadata !5881, metadata !DIExpression()), !dbg !5882
  %call = tail call zeroext i8 @is_builtin_name(i8* %2) #8, !dbg !5884
  ret i8 %call, !dbg !5885
}

declare dso_local %struct.rtx_def* @expand_call(%union.tree_node*, %struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @first_call_expr_arg(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !5886 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !5891, metadata !DIExpression()), !dbg !5893
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !5892, metadata !DIExpression()), !dbg !5893
  tail call fastcc void @init_call_expr_arg_iterator(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* %iter) #8, !dbg !5894
  %call = tail call fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* %iter) #8, !dbg !5895
  ret %union.tree_node* %call, !dbg !5896
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @next_call_expr_arg(%struct.call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !5897 {
entry:
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !5901, metadata !DIExpression()), !dbg !5903
  %i = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !5904
  %0 = load i32, i32* %i, align 4, !dbg !5904
  %n = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !5906
  %1 = load i32, i32* %n, align 8, !dbg !5906
  %cmp = icmp slt i32 %0, %1, !dbg !5907
  br i1 %cmp, label %if.end, label %cleanup, !dbg !5908

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.call_expr_arg_iterator_d* %iter to %struct.tree_exp**, !dbg !5909
  %3 = load %struct.tree_exp*, %struct.tree_exp** %2, align 8, !dbg !5909
  %add = add nsw i32 %0, 3, !dbg !5909
  %idxprom = sext i32 %add to i64, !dbg !5909
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %3, i64 0, i32 3, i64 %idxprom, !dbg !5909
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !5909
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !5902, metadata !DIExpression()), !dbg !5903
  %inc = add nsw i32 %0, 1, !dbg !5910
  store i32 %inc, i32* %i, align 4, !dbg !5910
  br label %cleanup, !dbg !5911

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %4, %if.end ], [ null, %entry ], !dbg !5903
  ret %union.tree_node* %retval.0, !dbg !5912
}

; Function Attrs: nounwind uwtable
define dso_local i32 @builtin_mathfn_code(%union.tree_node* %t) local_unnamed_addr #5 !dbg !5913 {
entry:
  %iter = alloca %struct.const_call_expr_arg_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %t, metadata !5917, metadata !DIExpression()), !dbg !5930
  %0 = bitcast %struct.const_call_expr_arg_iterator_d* %iter to i8*, !dbg !5931
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %0) #6, !dbg !5931
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5932
  %bf.load = load i64, i64* %1, align 8, !dbg !5932
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !5934
  %cmp = icmp eq i64 %bf.cast1, 59, !dbg !5934
  br i1 %cmp, label %lor.lhs.false, label %cleanup, !dbg !5935

lor.lhs.false:                                    ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !5936
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !5936
  %2 = bitcast %union.tree_node** %arrayidx to i64**, !dbg !5936
  %3 = load i64*, i64** %2, align 8, !dbg !5936
  %bf.load2 = load i64, i64* %3, align 8, !dbg !5936
  %bf.cast42 = and i64 %bf.load2, 65535, !dbg !5937
  %cmp5 = icmp eq i64 %bf.cast42, 121, !dbg !5937
  br i1 %cmp5, label %if.end, label %cleanup, !dbg !5938

if.end:                                           ; preds = %lor.lhs.false
  %call = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %t) #7, !dbg !5939
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !5918, metadata !DIExpression()), !dbg !5930
  %cmp6 = icmp eq %union.tree_node* %call, null, !dbg !5940
  br i1 %cmp6, label %cleanup, label %lor.lhs.false7, !dbg !5942

lor.lhs.false7:                                   ; preds = %if.end
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5943
  %bf.load9 = load i64, i64* %4, align 8, !dbg !5943
  %bf.cast113 = and i64 %bf.load9, 65535, !dbg !5944
  %cmp12 = icmp eq i64 %bf.cast113, 29, !dbg !5944
  br i1 %cmp12, label %lor.lhs.false13, label %cleanup, !dbg !5945

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !5946
  %bf.load14 = load i32, i32* %built_in_class, align 8, !dbg !5946
  %bf.clear15 = and i32 %bf.load14, 6144, !dbg !5946
  %cmp16 = icmp eq i32 %bf.clear15, 0, !dbg !5946
  br i1 %cmp16, label %cleanup, label %lor.lhs.false17, !dbg !5947

lor.lhs.false17:                                  ; preds = %lor.lhs.false13
  %cmp23 = icmp eq i32 %bf.clear15, 4096, !dbg !5948
  br i1 %cmp23, label %cleanup, label %if.end25, !dbg !5949

if.end25:                                         ; preds = %lor.lhs.false17
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5950
  %5 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !5950
  %6 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !5950
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 1, !dbg !5950
  %7 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !5950
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !5920, metadata !DIExpression()), !dbg !5930
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !5923, metadata !DIExpression(DW_OP_deref)), !dbg !5930
  call fastcc void @init_const_call_expr_arg_iterator(%union.tree_node* %t, %struct.const_call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !5951
  br label %for.cond, !dbg !5952

for.cond:                                         ; preds = %for.inc, %if.end25
  %.in = phi %union.tree_node* [ %7, %if.end25 ], [ %20, %for.inc ]
  %parmlist.0 = phi %union.tree_node* [ %7, %if.end25 ], [ %20, %for.inc ], !dbg !5930
  call void @llvm.dbg.value(metadata %union.tree_node* %parmlist.0, metadata !5920, metadata !DIExpression()), !dbg !5930
  %tobool = icmp eq %union.tree_node* %parmlist.0, null, !dbg !5953
  br i1 %tobool, label %for.end, label %for.body, !dbg !5953

for.body:                                         ; preds = %for.cond
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %.in, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !5955
  %9 = load %union.tree_node*, %union.tree_node** %8, align 8, !dbg !5955
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !5922, metadata !DIExpression()), !dbg !5930
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5958
  %bf.load28 = load i64, i64* %10, align 8, !dbg !5958
  %bf.cast304 = and i64 %bf.load28, 65535, !dbg !5958
  %cmp31 = icmp eq i64 %bf.cast304, 19, !dbg !5958
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !5923, metadata !DIExpression(DW_OP_deref)), !dbg !5930
  %call33 = call fastcc zeroext i8 @more_const_call_expr_args_p(%struct.const_call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !5960
  %tobool34 = icmp ne i8 %call33, 0, !dbg !5960
  br i1 %cmp31, label %if.then32, label %if.end40, !dbg !5961

if.then32:                                        ; preds = %for.body
  %tobool34.lcssa = phi i1 [ %tobool34, %for.body ], !dbg !5960
  br i1 %tobool34.lcssa, label %cleanup, label %if.end36, !dbg !5962

if.end36:                                         ; preds = %if.then32
  %bf.load38 = load i32, i32* %built_in_class, align 8, !dbg !5964
  %bf.clear39 = and i32 %bf.load38, 2047, !dbg !5964
  br label %cleanup, !dbg !5965

if.end40:                                         ; preds = %for.body
  br i1 %tobool34, label %if.end44, label %cleanup.loopexit, !dbg !5966

if.end44:                                         ; preds = %if.end40
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !5923, metadata !DIExpression(DW_OP_deref)), !dbg !5930
  %call45 = call fastcc %union.tree_node* @next_const_call_expr_arg(%struct.const_call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !5967
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !5919, metadata !DIExpression()), !dbg !5930
  %type47 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5968
  %11 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !5968
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !5921, metadata !DIExpression()), !dbg !5930
  %bf.load49 = load i64, i64* %10, align 8, !dbg !5969
  %bf.cast515 = and i64 %bf.load49, 65535, !dbg !5969
  %cmp52 = icmp eq i64 %bf.cast515, 9, !dbg !5969
  br i1 %cmp52, label %if.then53, label %if.else, !dbg !5971

if.then53:                                        ; preds = %if.end44
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5972
  %bf.load55 = load i64, i64* %12, align 8, !dbg !5972
  %bf.cast5720 = and i64 %bf.load55, 65535, !dbg !5972
  %cmp58 = icmp eq i64 %bf.cast5720, 9, !dbg !5972
  br i1 %cmp58, label %for.inc, label %cleanup.loopexit, !dbg !5975

if.else:                                          ; preds = %if.end44
  %cmp65 = icmp eq i64 %bf.cast515, 13, !dbg !5976
  br i1 %cmp65, label %land.lhs.true, label %if.else89, !dbg !5976

land.lhs.true:                                    ; preds = %if.else
  %type67 = getelementptr inbounds %union.tree_node, %union.tree_node* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5976
  %13 = bitcast %union.tree_node** %type67 to i64**, !dbg !5976
  %14 = load i64*, i64** %13, align 8, !dbg !5976
  %bf.load69 = load i64, i64* %14, align 8, !dbg !5976
  %bf.cast7117 = and i64 %bf.load69, 65535, !dbg !5976
  %cmp72 = icmp eq i64 %bf.cast7117, 9, !dbg !5976
  br i1 %cmp72, label %if.then73, label %if.else89, !dbg !5978

if.then73:                                        ; preds = %land.lhs.true
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5979
  %bf.load75 = load i64, i64* %15, align 8, !dbg !5979
  %bf.cast7718 = and i64 %bf.load75, 65535, !dbg !5979
  %cmp78 = icmp eq i64 %bf.cast7718, 13, !dbg !5979
  br i1 %cmp78, label %land.lhs.true79, label %cleanup.loopexit, !dbg !5979

land.lhs.true79:                                  ; preds = %if.then73
  %type81 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !5979
  %16 = bitcast %union.tree_node** %type81 to i64**, !dbg !5979
  %17 = load i64*, i64** %16, align 8, !dbg !5979
  %bf.load83 = load i64, i64* %17, align 8, !dbg !5979
  %bf.cast8519 = and i64 %bf.load83, 65535, !dbg !5979
  %cmp86 = icmp eq i64 %bf.cast8519, 9, !dbg !5979
  br i1 %cmp86, label %for.inc, label %cleanup.loopexit, !dbg !5982

if.else89:                                        ; preds = %land.lhs.true, %if.else
  %cmp94 = icmp eq i64 %bf.cast515, 10, !dbg !5983
  br i1 %cmp94, label %if.then101, label %lor.lhs.false95, !dbg !5983

lor.lhs.false95:                                  ; preds = %if.else89
  %cmp100 = icmp eq i64 %bf.cast515, 12, !dbg !5983
  br i1 %cmp100, label %if.then101, label %if.else115, !dbg !5985

if.then101:                                       ; preds = %lor.lhs.false95, %if.else89
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5986
  %bf.load103 = load i64, i64* %18, align 8, !dbg !5986
  %bf.cast10515 = and i64 %bf.load103, 65535, !dbg !5986
  %cmp106 = icmp eq i64 %bf.cast10515, 10, !dbg !5986
  br i1 %cmp106, label %for.inc, label %lor.lhs.false107, !dbg !5986

lor.lhs.false107:                                 ; preds = %if.then101
  %cmp112 = icmp eq i64 %bf.cast10515, 12, !dbg !5986
  br i1 %cmp112, label %for.inc, label %cleanup.loopexit, !dbg !5989

if.else115:                                       ; preds = %lor.lhs.false95
  %cmp120 = icmp eq i64 %bf.cast515, 6, !dbg !5990
  br i1 %cmp120, label %if.then133, label %lor.lhs.false121, !dbg !5990

lor.lhs.false121:                                 ; preds = %if.else115
  %cmp126 = icmp eq i64 %bf.cast515, 7, !dbg !5990
  br i1 %cmp126, label %if.then133, label %lor.lhs.false127, !dbg !5990

lor.lhs.false127:                                 ; preds = %lor.lhs.false121
  %cmp132 = icmp eq i64 %bf.cast515, 8, !dbg !5990
  br i1 %cmp132, label %if.then133, label %cleanup.loopexit, !dbg !5992

if.then133:                                       ; preds = %lor.lhs.false127, %lor.lhs.false121, %if.else115
  %19 = getelementptr inbounds %union.tree_node, %union.tree_node* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !5993
  %bf.load135 = load i64, i64* %19, align 8, !dbg !5993
  %bf.cast13712 = and i64 %bf.load135, 65535, !dbg !5993
  %cmp138 = icmp eq i64 %bf.cast13712, 6, !dbg !5993
  br i1 %cmp138, label %for.inc, label %lor.lhs.false139, !dbg !5993

lor.lhs.false139:                                 ; preds = %if.then133
  %cmp144 = icmp eq i64 %bf.cast13712, 7, !dbg !5993
  br i1 %cmp144, label %for.inc, label %lor.lhs.false145, !dbg !5993

lor.lhs.false145:                                 ; preds = %lor.lhs.false139
  %cmp150 = icmp eq i64 %bf.cast13712, 8, !dbg !5993
  br i1 %cmp150, label %for.inc, label %cleanup.loopexit, !dbg !5996

for.inc:                                          ; preds = %if.then53, %lor.lhs.false107, %if.then101, %if.then133, %lor.lhs.false139, %lor.lhs.false145, %land.lhs.true79
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %parmlist.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !5997
  %20 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5997
  call void @llvm.dbg.value(metadata %union.tree_node* %20, metadata !5920, metadata !DIExpression()), !dbg !5930
  br label %for.cond, !dbg !5998, !llvm.loop !5999

for.end:                                          ; preds = %for.cond
  %bf.load161 = load i32, i32* %built_in_class, align 8, !dbg !6001
  %bf.clear162 = and i32 %bf.load161, 2047, !dbg !6001
  br label %cleanup, !dbg !6002

cleanup.loopexit:                                 ; preds = %if.end40, %if.then53, %land.lhs.true79, %if.then73, %lor.lhs.false107, %lor.lhs.false145, %lor.lhs.false127
  br label %cleanup, !dbg !6003

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false, %entry, %if.then32, %if.end, %lor.lhs.false17, %for.end, %if.end36
  %retval.0 = phi i32 [ %bf.clear39, %if.end36 ], [ %bf.clear162, %for.end ], [ 721, %lor.lhs.false ], [ 721, %entry ], [ 721, %lor.lhs.false17 ], [ 721, %lor.lhs.false13 ], [ 721, %lor.lhs.false7 ], [ 721, %if.end ], [ 721, %if.then32 ], [ 721, %cleanup.loopexit ], !dbg !5930
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %0) #6, !dbg !6003
  ret i32 %retval.0, !dbg !6003
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @init_const_call_expr_arg_iterator(%union.tree_node* %exp, %struct.const_call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !6004 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6009, metadata !DIExpression()), !dbg !6011
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6010, metadata !DIExpression()), !dbg !6011
  %t = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 0, !dbg !6012
  store %union.tree_node* %exp, %union.tree_node** %t, align 8, !dbg !6013
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6014
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !6014
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !6014
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !6014
  %2 = load i64, i64* %low, align 8, !dbg !6014
  %conv = trunc i64 %2 to i32, !dbg !6014
  %sub = add nsw i32 %conv, -3, !dbg !6014
  %n = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !6015
  store i32 %sub, i32* %n, align 8, !dbg !6016
  %i = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !6017
  store i32 0, i32* %i, align 4, !dbg !6018
  ret void, !dbg !6019
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @more_const_call_expr_args_p(%struct.const_call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !6020 {
entry:
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6026, metadata !DIExpression()), !dbg !6027
  %i = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !6028
  %0 = load i32, i32* %i, align 4, !dbg !6028
  %n = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !6029
  %1 = load i32, i32* %n, align 8, !dbg !6029
  %cmp = icmp slt i32 %0, %1, !dbg !6030
  %conv1 = zext i1 %cmp to i8, !dbg !6031
  ret i8 %conv1, !dbg !6032
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @next_const_call_expr_arg(%struct.const_call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !6033 {
entry:
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6037, metadata !DIExpression()), !dbg !6039
  %i = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !6040
  %0 = load i32, i32* %i, align 4, !dbg !6040
  %n = getelementptr inbounds %struct.const_call_expr_arg_iterator_d, %struct.const_call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !6042
  %1 = load i32, i32* %n, align 8, !dbg !6042
  %cmp = icmp slt i32 %0, %1, !dbg !6043
  br i1 %cmp, label %if.end, label %cleanup, !dbg !6044

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.const_call_expr_arg_iterator_d* %iter to %struct.tree_exp**, !dbg !6045
  %3 = load %struct.tree_exp*, %struct.tree_exp** %2, align 8, !dbg !6045
  %add = add nsw i32 %0, 3, !dbg !6045
  %idxprom = sext i32 %add to i64, !dbg !6045
  %arrayidx = getelementptr inbounds %struct.tree_exp, %struct.tree_exp* %3, i64 0, i32 3, i64 %idxprom, !dbg !6045
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6045
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6038, metadata !DIExpression()), !dbg !6039
  %inc = add nsw i32 %0, 1, !dbg !6046
  store i32 %inc, i32* %i, align 4, !dbg !6046
  br label %cleanup, !dbg !6047

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %4, %if.end ], [ null, %entry ], !dbg !6039
  ret %union.tree_node* %retval.0, !dbg !6048
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_builtin_strcpy(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len) local_unnamed_addr #5 !dbg !6049 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6053, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !6054, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !6055, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !6056, metadata !DIExpression()), !dbg !6059
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !6057, metadata !DIExpression()), !dbg !6059
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !6060
  %tobool = icmp eq i8 %call, 0, !dbg !6060
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6062

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !6063
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6063
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !6064

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call i32 @operand_equal_p(%union.tree_node* %src, %union.tree_node* %dest, i32 0) #7, !dbg !6065
  %tobool4 = icmp eq i32 %call3, 0, !dbg !6065
  br i1 %tobool4, label %if.end9, label %if.then5, !dbg !6067

if.then5:                                         ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6068
  %0 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !6068
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !6068
  %type7 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !6068
  %2 = load %union.tree_node*, %union.tree_node** %type7, align 8, !dbg !6068
  %call8 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %dest) #7, !dbg !6069
  br label %cleanup, !dbg !6070

if.end9:                                          ; preds = %if.end
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6071
  %call10 = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %3) #7, !dbg !6073
  %tobool11 = icmp eq i8 %call10, 0, !dbg !6073
  br i1 %tobool11, label %if.end13, label %cleanup, !dbg !6074

if.end13:                                         ; preds = %if.end9
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 330), align 16, !dbg !6075
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6058, metadata !DIExpression()), !dbg !6059
  %tobool14 = icmp eq %union.tree_node* %4, null, !dbg !6076
  br i1 %tobool14, label %cleanup, label %if.end16, !dbg !6078

if.end16:                                         ; preds = %if.end13
  %tobool17 = icmp eq %union.tree_node* %len, null, !dbg !6079
  br i1 %tobool17, label %if.then18, label %if.end25, !dbg !6081

if.then18:                                        ; preds = %if.end16
  %call19 = tail call %union.tree_node* @c_strlen(%union.tree_node* %src, i32 1) #8, !dbg !6082
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !6057, metadata !DIExpression()), !dbg !6059
  %tobool20 = icmp eq %union.tree_node* %call19, null, !dbg !6084
  br i1 %tobool20, label %cleanup, label %lor.lhs.false21, !dbg !6086

lor.lhs.false21:                                  ; preds = %if.then18
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %call19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6087
  %bf.load = load i64, i64* %5, align 8, !dbg !6087
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !6087
  %tobool22 = icmp eq i64 %bf.cast1, 0, !dbg !6087
  br i1 %tobool22, label %if.end25, label %cleanup, !dbg !6088

if.end25:                                         ; preds = %lor.lhs.false21, %if.end16
  %len.addr.0 = phi %union.tree_node* [ %len, %if.end16 ], [ %call19, %lor.lhs.false21 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %len.addr.0, metadata !6057, metadata !DIExpression()), !dbg !6059
  %call26 = tail call %union.tree_node* @size_int_kind(i64 1, i32 1) #7, !dbg !6089
  %call27 = tail call %union.tree_node* @size_binop_loc(i32 %loc, i32 63, %union.tree_node* %len.addr.0, %union.tree_node* %call26) #7, !dbg !6090
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !6057, metadata !DIExpression()), !dbg !6059
  %type29 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6091
  %6 = bitcast %union.tree_node** %type29 to %struct.tree_common**, !dbg !6091
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !6091
  %type31 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !6091
  %8 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !6091
  %call32 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %4, i32 3, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %call27) #8, !dbg !6092
  %call33 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %8, %union.tree_node* %call32) #7, !dbg !6093
  br label %cleanup, !dbg !6094

cleanup:                                          ; preds = %lor.lhs.false21, %if.then18, %if.end13, %if.end9, %lor.lhs.false, %entry, %if.end25, %if.then5
  %retval.0 = phi %union.tree_node* [ %call8, %if.then5 ], [ %call33, %if.end25 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end9 ], [ null, %if.end13 ], [ null, %lor.lhs.false21 ], [ null, %if.then18 ], !dbg !6059
  ret %union.tree_node* %retval.0, !dbg !6095
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 %code) unnamed_addr #5 !dbg !6096 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !6100, metadata !DIExpression()), !dbg !6102
  call void @llvm.dbg.value(metadata i32 %code, metadata !6101, metadata !DIExpression()), !dbg !6102
  %tobool = icmp eq %union.tree_node* %arg, null, !dbg !6103
  br i1 %tobool, label %return, label %if.else, !dbg !6105

if.else:                                          ; preds = %entry
  switch i32 %code, label %if.end43 [
    i32 10, label %if.then1
    i32 8, label %if.then13
  ], !dbg !6106

if.then1:                                         ; preds = %if.else
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6107
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !6107
  %1 = load i64*, i64** %0, align 8, !dbg !6107
  %bf.load = load i64, i64* %1, align 8, !dbg !6107
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !6107
  %cmp2 = icmp eq i64 %bf.cast4, 10, !dbg !6107
  br i1 %cmp2, label %lor.end, label %lor.rhs, !dbg !6107

lor.rhs:                                          ; preds = %if.then1
  %cmp9 = icmp eq i64 %bf.cast4, 12, !dbg !6107
  %phitmp6 = zext i1 %cmp9 to i8, !dbg !6107
  br label %lor.end, !dbg !6107

lor.end:                                          ; preds = %lor.rhs, %if.then1
  %2 = phi i8 [ 1, %if.then1 ], [ %phitmp6, %lor.rhs ]
  br label %return, !dbg !6109

if.then13:                                        ; preds = %if.else
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6110
  %3 = bitcast %union.tree_node** %type15 to i64**, !dbg !6110
  %4 = load i64*, i64** %3, align 8, !dbg !6110
  %bf.load17 = load i64, i64* %4, align 8, !dbg !6110
  %bf.cast191 = and i64 %bf.load17, 65535, !dbg !6110
  %cmp20 = icmp eq i64 %bf.cast191, 6, !dbg !6110
  br i1 %cmp20, label %lor.end39, label %lor.lhs.false, !dbg !6110

lor.lhs.false:                                    ; preds = %if.then13
  %cmp28 = icmp eq i64 %bf.cast191, 7, !dbg !6110
  br i1 %cmp28, label %lor.end39, label %lor.rhs30, !dbg !6110

lor.rhs30:                                        ; preds = %lor.lhs.false
  %cmp37 = icmp eq i64 %bf.cast191, 8, !dbg !6110
  %phitmp = zext i1 %cmp37 to i8, !dbg !6110
  br label %lor.end39, !dbg !6110

lor.end39:                                        ; preds = %lor.rhs30, %lor.lhs.false, %if.then13
  %5 = phi i8 [ 1, %lor.lhs.false ], [ 1, %if.then13 ], [ %phitmp, %lor.rhs30 ]
  br label %return, !dbg !6112

if.end43:                                         ; preds = %if.else
  %type45 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6113
  %6 = bitcast %union.tree_node** %type45 to i64**, !dbg !6113
  %7 = load i64*, i64** %6, align 8, !dbg !6113
  %bf.load47 = load i64, i64* %7, align 8, !dbg !6113
  %8 = trunc i64 %bf.load47 to i32, !dbg !6113
  %bf.cast49 = and i32 %8, 65535, !dbg !6113
  %cmp50 = icmp eq i32 %bf.cast49, %code, !dbg !6114
  %conv52 = zext i1 %cmp50 to i8, !dbg !6115
  br label %return, !dbg !6116

return:                                           ; preds = %entry, %if.end43, %lor.end39, %lor.end
  %retval.0 = phi i8 [ %2, %lor.end ], [ %5, %lor.end39 ], [ %conv52, %if.end43 ], [ 0, %entry ], !dbg !6102
  ret i8 %retval.0, !dbg !6117
}

declare dso_local i32 @operand_equal_p(%union.tree_node*, %union.tree_node*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @optimize_function_for_size_p(%struct.function*) local_unnamed_addr #2

declare dso_local %union.tree_node* @size_binop_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_builtin_strncpy(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len, %union.tree_node* %slen) local_unnamed_addr #5 !dbg !6118 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6122, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !6123, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !6124, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !6125, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !6126, metadata !DIExpression()), !dbg !6129
  call void @llvm.dbg.value(metadata %union.tree_node* %slen, metadata !6127, metadata !DIExpression()), !dbg !6129
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !6130
  %tobool = icmp eq i8 %call, 0, !dbg !6130
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6132

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !6133
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6133
  br i1 %tobool2, label %cleanup, label %lor.lhs.false3, !dbg !6134

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %len, i32 8) #8, !dbg !6135
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6135
  br i1 %tobool5, label %cleanup, label %if.end, !dbg !6136

if.end:                                           ; preds = %lor.lhs.false3
  %call6 = tail call i32 @integer_zerop(%union.tree_node* %len) #7, !dbg !6137
  %tobool7 = icmp eq i32 %call6, 0, !dbg !6137
  br i1 %tobool7, label %if.end12, label %if.then8, !dbg !6139

if.then8:                                         ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6140
  %0 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !6140
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !6140
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !6140
  %2 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !6140
  %call11 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %dest, %union.tree_node* %src) #7, !dbg !6141
  br label %cleanup, !dbg !6142

if.end12:                                         ; preds = %if.end
  %cmp = icmp eq %union.tree_node* %len, null, !dbg !6143
  br i1 %cmp, label %cleanup, label %lor.lhs.false13, !dbg !6145

lor.lhs.false13:                                  ; preds = %if.end12
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %len, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6146
  %bf.load = load i64, i64* %3, align 8, !dbg !6146
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !6147
  %cmp14 = icmp eq i64 %bf.cast1, 23, !dbg !6147
  br i1 %cmp14, label %if.end16, label %cleanup, !dbg !6148

if.end16:                                         ; preds = %lor.lhs.false13
  %tobool17 = icmp eq %union.tree_node* %slen, null, !dbg !6149
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !6151

if.then18:                                        ; preds = %if.end16
  %call19 = tail call %union.tree_node* @c_strlen(%union.tree_node* %src, i32 1) #8, !dbg !6152
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !6127, metadata !DIExpression()), !dbg !6129
  br label %if.end20, !dbg !6153

if.end20:                                         ; preds = %if.end16, %if.then18
  %slen.addr.0 = phi %union.tree_node* [ %slen, %if.end16 ], [ %call19, %if.then18 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %slen.addr.0, metadata !6127, metadata !DIExpression()), !dbg !6129
  %cmp21 = icmp eq %union.tree_node* %slen.addr.0, null, !dbg !6154
  br i1 %cmp21, label %cleanup, label %lor.lhs.false22, !dbg !6156

lor.lhs.false22:                                  ; preds = %if.end20
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %slen.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6157
  %bf.load24 = load i64, i64* %4, align 8, !dbg !6157
  %bf.cast262 = and i64 %bf.load24, 65535, !dbg !6158
  %cmp27 = icmp eq i64 %bf.cast262, 23, !dbg !6158
  br i1 %cmp27, label %if.end29, label %cleanup, !dbg !6159

if.end29:                                         ; preds = %lor.lhs.false22
  %call30 = tail call %union.tree_node* @size_int_kind(i64 1, i32 1) #7, !dbg !6160
  %call31 = tail call %union.tree_node* @size_binop_loc(i32 %loc, i32 63, %union.tree_node* nonnull %slen.addr.0, %union.tree_node* %call30) #7, !dbg !6161
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !6127, metadata !DIExpression()), !dbg !6129
  %call32 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call31, %union.tree_node* nonnull %len) #7, !dbg !6162
  %tobool33 = icmp eq i32 %call32, 0, !dbg !6162
  br i1 %tobool33, label %if.end35, label %cleanup, !dbg !6164

if.end35:                                         ; preds = %if.end29
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 330), align 16, !dbg !6165
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6128, metadata !DIExpression()), !dbg !6129
  %tobool36 = icmp eq %union.tree_node* %5, null, !dbg !6166
  br i1 %tobool36, label %cleanup, label %if.end38, !dbg !6168

if.end38:                                         ; preds = %if.end35
  %type40 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6169
  %6 = bitcast %union.tree_node** %type40 to %struct.tree_common**, !dbg !6169
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !6169
  %type42 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !6169
  %8 = load %union.tree_node*, %union.tree_node** %type42, align 8, !dbg !6169
  %call43 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %5, i32 3, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* nonnull %len) #8, !dbg !6170
  %call44 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %8, %union.tree_node* %call43) #7, !dbg !6171
  br label %cleanup, !dbg !6172

cleanup:                                          ; preds = %if.end35, %if.end29, %lor.lhs.false22, %lor.lhs.false13, %lor.lhs.false3, %lor.lhs.false, %entry, %if.end20, %if.end12, %if.end38, %if.then8
  %retval.0 = phi %union.tree_node* [ %call11, %if.then8 ], [ %call44, %if.end38 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %lor.lhs.false13 ], [ null, %if.end12 ], [ null, %lor.lhs.false22 ], [ null, %if.end20 ], [ null, %if.end29 ], [ null, %if.end35 ], !dbg !6129
  ret %union.tree_node* %retval.0, !dbg !6173
}

declare dso_local %union.tree_node* @omit_one_operand_loc(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_lt(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_call_expr(i32 %loc, %union.tree_node* %exp, i8 zeroext %ignore) local_unnamed_addr #5 !dbg !6174 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6178, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6179, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !6180, metadata !DIExpression()), !dbg !6194
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6181, metadata !DIExpression()), !dbg !6194
  %call = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %exp) #7, !dbg !6195
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6182, metadata !DIExpression()), !dbg !6194
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !6196
  br i1 %tobool, label %if.end91, label %land.lhs.true, !dbg !6197

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6198
  %bf.load = load i64, i64* %0, align 8, !dbg !6198
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !6199
  %cmp = icmp eq i64 %bf.cast3, 29, !dbg !6199
  br i1 %cmp, label %land.lhs.true1, label %if.end91, !dbg !6200

land.lhs.true1:                                   ; preds = %land.lhs.true
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !6201
  %bf.load2 = load i32, i32* %built_in_class, align 8, !dbg !6201
  %bf.clear3 = and i32 %bf.load2, 6144, !dbg !6201
  %cmp4 = icmp eq i32 %bf.clear3, 0, !dbg !6201
  br i1 %cmp4, label %if.end91, label %land.lhs.true5, !dbg !6202

land.lhs.true5:                                   ; preds = %land.lhs.true1
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6203
  %bf.load7 = load i64, i64* %1, align 8, !dbg !6203
  %bf.cast104 = and i64 %bf.load7, 134217728, !dbg !6203
  %tobool11 = icmp eq i64 %bf.cast104, 0, !dbg !6203
  br i1 %tobool11, label %if.then, label %if.end91, !dbg !6204

if.then:                                          ; preds = %land.lhs.true5
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6205
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !6205
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !6205
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !6205
  %4 = load i64, i64* %low, align 8, !dbg !6205
  %conv = trunc i64 %4 to i32, !dbg !6205
  %sub = add nsw i32 %conv, -3, !dbg !6205
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6183, metadata !DIExpression()), !dbg !6206
  %tobool14 = icmp eq i32 %sub, 0, !dbg !6207
  br i1 %tobool14, label %if.end57, label %land.lhs.true15, !dbg !6208

land.lhs.true15:                                  ; preds = %if.then
  %add = shl i64 %4, 32, !dbg !6209
  %sext = add i64 %add, -4294967296, !dbg !6209
  %idxprom = ashr exact i64 %sext, 32, !dbg !6209
  %arrayidx19 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %idxprom, !dbg !6209
  %5 = bitcast %union.tree_node** %arrayidx19 to i64**, !dbg !6209
  %6 = load i64*, i64** %5, align 8, !dbg !6209
  %bf.load21 = load i64, i64* %6, align 8, !dbg !6209
  %bf.cast235 = and i64 %bf.load21, 65535, !dbg !6210
  %cmp24 = icmp eq i64 %bf.cast235, 59, !dbg !6210
  br i1 %cmp24, label %if.then26, label %if.end57, !dbg !6211

if.then26:                                        ; preds = %land.lhs.true15
  %7 = bitcast i64* %6 to %union.tree_node*, !dbg !6211
  %call33 = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %7) #7, !dbg !6212
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !6186, metadata !DIExpression()), !dbg !6213
  %tobool34 = icmp eq %union.tree_node* %call33, null, !dbg !6214
  br i1 %tobool34, label %if.end, label %land.lhs.true35, !dbg !6216

land.lhs.true35:                                  ; preds = %if.then26
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6217
  %bf.load37 = load i64, i64* %8, align 8, !dbg !6217
  %bf.cast397 = and i64 %bf.load37, 65535, !dbg !6218
  %cmp40 = icmp eq i64 %bf.cast397, 29, !dbg !6218
  br i1 %cmp40, label %land.lhs.true42, label %if.end, !dbg !6219

land.lhs.true42:                                  ; preds = %land.lhs.true35
  %built_in_class44 = getelementptr inbounds %union.tree_node, %union.tree_node* %call33, i64 0, i32 0, i32 5, !dbg !6220
  %bf.load45 = load i32, i32* %built_in_class44, align 8, !dbg !6220
  %bf.clear47 = and i32 %bf.load45, 6144, !dbg !6220
  %cmp48 = icmp eq i32 %bf.clear47, 6144, !dbg !6221
  br i1 %cmp48, label %land.lhs.true50, label %if.end, !dbg !6222

land.lhs.true50:                                  ; preds = %land.lhs.true42
  %bf.clear53 = and i32 %bf.load45, 2047, !dbg !6223
  %cmp54 = icmp eq i32 %bf.clear53, 516, !dbg !6224
  br i1 %cmp54, label %cleanup, label %if.end, !dbg !6225

if.end:                                           ; preds = %if.then26, %land.lhs.true50, %land.lhs.true42, %land.lhs.true35
  br label %cleanup, !dbg !6226

cleanup:                                          ; preds = %land.lhs.true50, %if.end
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end ], [ 1, %land.lhs.true50 ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end57, label %cleanup88

if.end57:                                         ; preds = %if.then, %cleanup, %land.lhs.true15
  %call58 = tail call fastcc zeroext i8 @avoid_folding_inline_builtin(%union.tree_node* nonnull %call) #8, !dbg !6227
  %tobool59 = icmp eq i8 %call58, 0, !dbg !6227
  br i1 %tobool59, label %if.end61, label %cleanup88, !dbg !6229

if.end61:                                         ; preds = %if.end57
  %bf.load64 = load i32, i32* %built_in_class, align 8, !dbg !6230
  %bf.clear66 = and i32 %bf.load64, 6144, !dbg !6230
  %cmp67 = icmp eq i32 %bf.clear66, 4096, !dbg !6231
  br i1 %cmp67, label %if.then69, label %if.else, !dbg !6232

if.then69:                                        ; preds = %if.end61
  %9 = load %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 27), align 8, !dbg !6233
  %call70 = tail call %union.tree_node* @call_expr_arglist(%union.tree_node* %exp) #7, !dbg !6234
  %call71 = tail call %union.tree_node* %9(%union.tree_node* nonnull %call, %union.tree_node* %call70, i8 zeroext %ignore) #7, !dbg !6235
  br label %cleanup88, !dbg !6236

if.else:                                          ; preds = %if.end61
  %cmp72 = icmp slt i32 %sub, 5, !dbg !6237
  br i1 %cmp72, label %if.then74, label %if.end79, !dbg !6238

if.then74:                                        ; preds = %if.else
  %add.ptr = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !6239
  call void @llvm.dbg.value(metadata %union.tree_node** %add.ptr, metadata !6189, metadata !DIExpression()), !dbg !6240
  %call78 = tail call fastcc %union.tree_node* @fold_builtin_n(i32 %loc, %union.tree_node* nonnull %call, %union.tree_node** nonnull %add.ptr, i32 %sub, i8 zeroext %ignore) #8, !dbg !6241
  call void @llvm.dbg.value(metadata %union.tree_node* %call78, metadata !6181, metadata !DIExpression()), !dbg !6194
  br label %if.end79, !dbg !6242

if.end79:                                         ; preds = %if.then74, %if.else
  %ret.0 = phi %union.tree_node* [ %call78, %if.then74 ], [ null, %if.else ], !dbg !6194
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !6181, metadata !DIExpression()), !dbg !6194
  %tobool80 = icmp eq %union.tree_node* %ret.0, null, !dbg !6243
  br i1 %tobool80, label %if.then81, label %if.end83, !dbg !6245

if.then81:                                        ; preds = %if.end79
  %call82 = tail call fastcc %union.tree_node* @fold_builtin_varargs(i32 %loc, %union.tree_node* nonnull %call, %union.tree_node* %exp, i8 zeroext %ignore) #8, !dbg !6246
  call void @llvm.dbg.value(metadata %union.tree_node* %call82, metadata !6181, metadata !DIExpression()), !dbg !6194
  br label %if.end83, !dbg !6247

if.end83:                                         ; preds = %if.end79, %if.then81
  %ret.1 = phi %union.tree_node* [ %ret.0, %if.end79 ], [ %call82, %if.then81 ], !dbg !6248
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !6181, metadata !DIExpression()), !dbg !6194
  %tobool84 = icmp ne %union.tree_node* %ret.1, null, !dbg !6249
  %spec.select = zext i1 %tobool84 to i32, !dbg !6251
  br label %cleanup88, !dbg !6251

cleanup88:                                        ; preds = %if.end57, %if.end83, %cleanup, %if.then69
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 1, %if.then69 ], [ 1, %if.end57 ], [ %spec.select, %if.end83 ]
  %retval.2 = phi %union.tree_node* [ null, %cleanup ], [ %call71, %if.then69 ], [ null, %if.end57 ], [ %ret.1, %if.end83 ], !dbg !6206
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %if.end91, label %cleanup92

if.end91:                                         ; preds = %land.lhs.true5, %land.lhs.true1, %entry, %cleanup88, %land.lhs.true
  br label %cleanup92, !dbg !6252

cleanup92:                                        ; preds = %cleanup88, %if.end91
  %retval.3 = phi %union.tree_node* [ null, %if.end91 ], [ %retval.2, %cleanup88 ], !dbg !6194
  ret %union.tree_node* %retval.3, !dbg !6253
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @avoid_folding_inline_builtin(%union.tree_node* %fndecl) unnamed_addr #5 !dbg !6254 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !6256, metadata !DIExpression()), !dbg !6257
  %declared_inline_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !6258
  %bf.load = load i32, i32* %declared_inline_flag, align 8, !dbg !6258
  %bf.clear = and i32 %bf.load, 2097152, !dbg !6258
  %tobool = icmp eq i32 %bf.clear, 0, !dbg !6258
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !6259

land.lhs.true:                                    ; preds = %entry
  %bf.clear4 = and i32 %bf.load, 67108864, !dbg !6260
  %tobool5 = icmp eq i32 %bf.clear4, 0, !dbg !6260
  br i1 %tobool5, label %land.end, label %land.lhs.true6, !dbg !6261

land.lhs.true6:                                   ; preds = %land.lhs.true
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6262
  %tobool7 = icmp eq %struct.function* %0, null, !dbg !6262
  br i1 %tobool7, label %land.end, label %land.lhs.true8, !dbg !6263

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %always_inline_functions_inlined = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 20, !dbg !6264
  %bf.load10 = load i32, i32* %always_inline_functions_inlined, align 8, !dbg !6264
  %bf.clear12 = and i32 %bf.load10, 33554432, !dbg !6264
  %tobool13 = icmp eq i32 %bf.clear12, 0, !dbg !6265
  br i1 %tobool13, label %land.rhs, label %land.end, !dbg !6266

land.rhs:                                         ; preds = %land.lhs.true8
  %attributes = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, !dbg !6267
  %1 = load %union.tree_node*, %union.tree_node** %attributes, align 8, !dbg !6267
  %call = tail call %union.tree_node* @lookup_attribute(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.737, i64 0, i64 0), %union.tree_node* %1) #7, !dbg !6268
  %tobool14 = icmp ne %union.tree_node* %call, null, !dbg !6266
  %phitmp = zext i1 %tobool14 to i8
  br label %land.end

land.end:                                         ; preds = %land.lhs.true8, %land.lhs.true6, %land.lhs.true, %entry, %land.rhs
  %2 = phi i8 [ 0, %land.lhs.true8 ], [ 0, %land.lhs.true6 ], [ 0, %land.lhs.true ], [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !6269
}

declare dso_local %union.tree_node* @call_expr_arglist(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_n(i32 %loc, %union.tree_node* %fndecl, %union.tree_node** %args, i32 %nargs, i8 zeroext %ignore) unnamed_addr #5 !dbg !6270 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6274, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !6275, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.value(metadata %union.tree_node** %args, metadata !6276, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.value(metadata i32 %nargs, metadata !6277, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !6278, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6279, metadata !DIExpression()), !dbg !6280
  switch i32 %nargs, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb3
    i32 3, label %sw.bb7
    i32 4, label %sw.bb12
  ], !dbg !6281

sw.bb:                                            ; preds = %entry
  %call = tail call fastcc %union.tree_node* @fold_builtin_0(i32 %loc, %union.tree_node* %fndecl, i8 zeroext %ignore) #8, !dbg !6282
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6279, metadata !DIExpression()), !dbg !6280
  br label %sw.epilog, !dbg !6284

sw.bb1:                                           ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** %args, align 8, !dbg !6285
  %call2 = tail call fastcc %union.tree_node* @fold_builtin_1(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %0, i8 zeroext %ignore) #8, !dbg !6286
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6279, metadata !DIExpression()), !dbg !6280
  br label %sw.epilog, !dbg !6287

sw.bb3:                                           ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %args, align 8, !dbg !6288
  %arrayidx5 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 1, !dbg !6289
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx5, align 8, !dbg !6289
  %call6 = tail call fastcc %union.tree_node* @fold_builtin_2(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %1, %union.tree_node* %2, i8 zeroext %ignore) #8, !dbg !6290
  call void @llvm.dbg.value(metadata %union.tree_node* %call6, metadata !6279, metadata !DIExpression()), !dbg !6280
  br label %sw.epilog, !dbg !6291

sw.bb7:                                           ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** %args, align 8, !dbg !6292
  %arrayidx9 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 1, !dbg !6293
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx9, align 8, !dbg !6293
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 2, !dbg !6294
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8, !dbg !6294
  %call11 = tail call fastcc %union.tree_node* @fold_builtin_3(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %3, %union.tree_node* %4, %union.tree_node* %5, i8 zeroext %ignore) #8, !dbg !6295
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !6279, metadata !DIExpression()), !dbg !6280
  br label %sw.epilog, !dbg !6296

sw.bb12:                                          ; preds = %entry
  %6 = load %union.tree_node*, %union.tree_node** %args, align 8, !dbg !6297
  %arrayidx14 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 1, !dbg !6298
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !6298
  %arrayidx15 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 2, !dbg !6299
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx15, align 8, !dbg !6299
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %args, i64 3, !dbg !6300
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8, !dbg !6300
  %call17 = tail call fastcc %union.tree_node* @fold_builtin_4(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %6, %union.tree_node* %7, %union.tree_node* %8, %union.tree_node* %9, i8 zeroext %ignore) #8, !dbg !6301
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !6279, metadata !DIExpression()), !dbg !6280
  br label %sw.epilog, !dbg !6302

sw.epilog:                                        ; preds = %entry, %sw.bb12, %sw.bb7, %sw.bb3, %sw.bb1, %sw.bb
  %ret.0 = phi %union.tree_node* [ %call17, %sw.bb12 ], [ %call11, %sw.bb7 ], [ %call6, %sw.bb3 ], [ %call2, %sw.bb1 ], [ %call, %sw.bb ], [ null, %entry ], !dbg !6280
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !6279, metadata !DIExpression()), !dbg !6280
  %tobool = icmp eq %union.tree_node* %ret.0, null, !dbg !6303
  br i1 %tobool, label %cleanup, label %if.then, !dbg !6305

if.then:                                          ; preds = %sw.epilog
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6306
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6306
  %call18 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %10, %union.tree_node* nonnull %ret.0) #7, !dbg !6306
  call void @llvm.dbg.value(metadata %union.tree_node* %call18, metadata !6279, metadata !DIExpression()), !dbg !6280
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6308
  store i32 %loc, i32* %11, align 8, !dbg !6308
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6309
  %bf.load = load i64, i64* %12, align 8, !dbg !6310
  %bf.set = or i64 %bf.load, 8388608, !dbg !6310
  store i64 %bf.set, i64* %12, align 8, !dbg !6310
  br label %cleanup, !dbg !6311

cleanup:                                          ; preds = %sw.epilog, %if.then
  %retval.0 = phi %union.tree_node* [ %call18, %if.then ], [ null, %sw.epilog ], !dbg !6280
  ret %union.tree_node* %retval.0, !dbg !6312
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_varargs(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %exp, i8 zeroext %ignore) unnamed_addr #5 !dbg !6313 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6317, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !6318, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6319, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !6320, metadata !DIExpression()), !dbg !6323
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !6324
  %bf.load = load i32, i32* %function_code, align 8, !dbg !6324
  %bf.clear = and i32 %bf.load, 2047, !dbg !6324
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6321, metadata !DIExpression()), !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6322, metadata !DIExpression()), !dbg !6323
  switch i32 %bf.clear, label %sw.epilog [
    i32 539, label %sw.bb
    i32 541, label %sw.bb
    i32 538, label %sw.bb1
    i32 540, label %sw.bb1
    i32 466, label %sw.bb3
  ], !dbg !6325

sw.bb:                                            ; preds = %entry, %entry
  %call = tail call fastcc %union.tree_node* @fold_builtin_sprintf_chk(i32 %loc, %union.tree_node* %exp, i32 %bf.clear) #8, !dbg !6326
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6322, metadata !DIExpression()), !dbg !6323
  br label %sw.epilog, !dbg !6328

sw.bb1:                                           ; preds = %entry, %entry
  %call2 = tail call %union.tree_node* @fold_builtin_snprintf_chk(i32 %loc, %union.tree_node* %exp, %union.tree_node* null, i32 %bf.clear) #8, !dbg !6329
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !6322, metadata !DIExpression()), !dbg !6323
  br label %sw.epilog, !dbg !6330

sw.bb3:                                           ; preds = %entry
  %call4 = tail call fastcc %union.tree_node* @fold_builtin_fpclassify(i32 %loc, %union.tree_node* %exp) #8, !dbg !6331
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6322, metadata !DIExpression()), !dbg !6323
  br label %sw.epilog, !dbg !6332

sw.epilog:                                        ; preds = %entry, %sw.bb3, %sw.bb1, %sw.bb
  %ret.0 = phi %union.tree_node* [ %call4, %sw.bb3 ], [ %call2, %sw.bb1 ], [ %call, %sw.bb ], [ null, %entry ], !dbg !6323
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !6322, metadata !DIExpression()), !dbg !6323
  %tobool = icmp eq %union.tree_node* %ret.0, null, !dbg !6333
  br i1 %tobool, label %cleanup, label %if.then, !dbg !6335

if.then:                                          ; preds = %sw.epilog
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6336
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6336
  %call5 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %0, %union.tree_node* nonnull %ret.0) #7, !dbg !6336
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !6322, metadata !DIExpression()), !dbg !6323
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6338
  store i32 %loc, i32* %1, align 8, !dbg !6338
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6339
  %bf.load7 = load i64, i64* %2, align 8, !dbg !6340
  %bf.set = or i64 %bf.load7, 8388608, !dbg !6340
  store i64 %bf.set, i64* %2, align 8, !dbg !6340
  br label %cleanup, !dbg !6341

cleanup:                                          ; preds = %sw.epilog, %if.then
  %retval.0 = phi %union.tree_node* [ %call5, %if.then ], [ null, %sw.epilog ], !dbg !6323
  ret %union.tree_node* %retval.0, !dbg !6342
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @build_function_call_expr(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arglist) local_unnamed_addr #5 !dbg !6343 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6347, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !6348, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist, metadata !6349, metadata !DIExpression()), !dbg !6355
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6356
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6356
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6350, metadata !DIExpression()), !dbg !6355
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %0) #7, !dbg !6357
  %call1 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call, %union.tree_node* %fndecl) #7, !dbg !6357
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !6351, metadata !DIExpression()), !dbg !6355
  %call2 = tail call i32 @list_length(%union.tree_node* %arglist) #7, !dbg !6358
  call void @llvm.dbg.value(metadata i32 %call2, metadata !6352, metadata !DIExpression()), !dbg !6355
  %conv = sext i32 %call2 to i64, !dbg !6359
  %1 = alloca %union.tree_node*, i64 %conv, align 16, !dbg !6359
  call void @llvm.dbg.value(metadata %union.tree_node** %1, metadata !6353, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata i32 0, metadata !6354, metadata !DIExpression()), !dbg !6355
  %2 = sext i32 %call2 to i64, !dbg !6360
  br label %for.cond, !dbg !6360

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %arglist.addr.0 = phi %union.tree_node* [ %7, %for.body ], [ %arglist, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6354, metadata !DIExpression()), !dbg !6355
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.addr.0, metadata !6349, metadata !DIExpression()), !dbg !6355
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !6362
  br i1 %cmp, label %for.body, label %for.end, !dbg !6364

for.body:                                         ; preds = %for.cond
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %arglist.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6365
  %4 = bitcast %union.tree_node** %3 to i64*, !dbg !6365
  %5 = load i64, i64* %4, align 8, !dbg !6365
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %1, i64 %indvars.iv, !dbg !6366
  %6 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !6367
  store i64 %5, i64* %6, align 8, !dbg !6367
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6368
  call void @llvm.dbg.value(metadata i32 undef, metadata !6354, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6355
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %arglist.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6369
  %7 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !6369
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6349, metadata !DIExpression()), !dbg !6355
  br label %for.cond, !dbg !6370, !llvm.loop !6371

for.end:                                          ; preds = %for.cond
  %type6 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6373
  %8 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !6373
  %call7 = call %union.tree_node* @fold_builtin_call_array(i32 %loc, %union.tree_node* %8, %union.tree_node* %call1, i32 %call2, %union.tree_node** nonnull %1) #8, !dbg !6374
  ret %union.tree_node* %call7, !dbg !6375
}

declare dso_local i32 @list_length(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_builtin_call_array(i32 %loc, %union.tree_node* %type, %union.tree_node* %fn, i32 %n, %union.tree_node** %argarray) local_unnamed_addr #5 !dbg !6376 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6380, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !6381, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata %union.tree_node* %fn, metadata !6382, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata i32 %n, metadata !6383, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata %union.tree_node** %argarray, metadata !6384, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6385, metadata !DIExpression()), !dbg !6399
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6400
  %bf.load = load i64, i64* %0, align 8, !dbg !6400
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !6401
  %cmp = icmp eq i64 %bf.cast3, 121, !dbg !6401
  br i1 %cmp, label %if.then, label %if.end82, !dbg !6402

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %fn, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6403
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !6403
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6388, metadata !DIExpression()), !dbg !6404
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6405
  %bf.load3 = load i64, i64* %2, align 8, !dbg !6405
  %bf.cast54 = and i64 %bf.load3, 65535, !dbg !6406
  %cmp6 = icmp eq i64 %bf.cast54, 29, !dbg !6406
  br i1 %cmp6, label %land.lhs.true, label %cleanup79, !dbg !6407

land.lhs.true:                                    ; preds = %if.then
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 5, !dbg !6408
  %bf.load7 = load i32, i32* %built_in_class, align 8, !dbg !6408
  %bf.clear8 = and i32 %bf.load7, 6144, !dbg !6408
  %cmp9 = icmp eq i32 %bf.clear8, 0, !dbg !6408
  br i1 %cmp9, label %cleanup79, label %if.then10, !dbg !6409

if.then10:                                        ; preds = %land.lhs.true
  %tobool = icmp eq i32 %n, 0, !dbg !6410
  br i1 %tobool, label %if.end43, label %land.lhs.true11, !dbg !6411

land.lhs.true11:                                  ; preds = %if.then10
  %sub = add nsw i32 %n, -1, !dbg !6412
  %idxprom = sext i32 %sub to i64, !dbg !6412
  %arrayidx12 = getelementptr inbounds %union.tree_node*, %union.tree_node** %argarray, i64 %idxprom, !dbg !6412
  %3 = bitcast %union.tree_node** %arrayidx12 to i64**, !dbg !6412
  %4 = load i64*, i64** %3, align 8, !dbg !6412
  %bf.load14 = load i64, i64* %4, align 8, !dbg !6412
  %bf.cast165 = and i64 %bf.load14, 65535, !dbg !6413
  %cmp17 = icmp eq i64 %bf.cast165, 59, !dbg !6413
  br i1 %cmp17, label %if.then18, label %if.end43, !dbg !6414

if.then18:                                        ; preds = %land.lhs.true11
  %5 = bitcast i64* %4 to %union.tree_node*, !dbg !6414
  %call = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %5) #7, !dbg !6415
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6391, metadata !DIExpression()), !dbg !6416
  %tobool22 = icmp eq %union.tree_node* %call, null, !dbg !6417
  br i1 %tobool22, label %cleanup, label %land.lhs.true23, !dbg !6419

land.lhs.true23:                                  ; preds = %if.then18
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6420
  %bf.load25 = load i64, i64* %6, align 8, !dbg !6420
  %bf.cast276 = and i64 %bf.load25, 65535, !dbg !6421
  %cmp28 = icmp eq i64 %bf.cast276, 29, !dbg !6421
  br i1 %cmp28, label %land.lhs.true29, label %cleanup, !dbg !6422

land.lhs.true29:                                  ; preds = %land.lhs.true23
  %built_in_class31 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !6423
  %bf.load32 = load i32, i32* %built_in_class31, align 8, !dbg !6423
  %bf.clear34 = and i32 %bf.load32, 6144, !dbg !6423
  %cmp35 = icmp eq i32 %bf.clear34, 6144, !dbg !6424
  br i1 %cmp35, label %land.lhs.true36, label %cleanup, !dbg !6425

land.lhs.true36:                                  ; preds = %land.lhs.true29
  %bf.clear39 = and i32 %bf.load32, 2047, !dbg !6426
  %cmp40 = icmp eq i32 %bf.clear39, 516, !dbg !6427
  br i1 %cmp40, label %if.then41, label %cleanup, !dbg !6428

if.then41:                                        ; preds = %land.lhs.true36
  %call42 = tail call %union.tree_node* @build_call_array_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %fn, i32 %n, %union.tree_node** %argarray) #7, !dbg !6429
  br label %cleanup, !dbg !6430

cleanup:                                          ; preds = %if.then18, %land.lhs.true23, %land.lhs.true29, %land.lhs.true36, %if.then41
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then41 ], [ 0, %land.lhs.true36 ], [ 0, %land.lhs.true29 ], [ 0, %land.lhs.true23 ], [ 0, %if.then18 ]
  %retval.0 = phi %union.tree_node* [ %call42, %if.then41 ], [ undef, %land.lhs.true36 ], [ undef, %land.lhs.true29 ], [ undef, %land.lhs.true23 ], [ undef, %if.then18 ]
  %cond2 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond2, label %if.end43, label %cleanup79

if.end43:                                         ; preds = %if.then10, %cleanup, %land.lhs.true11
  %call44 = tail call fastcc zeroext i8 @avoid_folding_inline_builtin(%union.tree_node* %1) #8, !dbg !6431
  %tobool45 = icmp eq i8 %call44, 0, !dbg !6431
  br i1 %tobool45, label %if.end48, label %if.then46, !dbg !6433

if.then46:                                        ; preds = %if.end43
  %call47 = tail call %union.tree_node* @build_call_array_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %fn, i32 %n, %union.tree_node** %argarray) #7, !dbg !6434
  br label %cleanup79, !dbg !6435

if.end48:                                         ; preds = %if.end43
  %bf.load51 = load i32, i32* %built_in_class, align 8, !dbg !6436
  %bf.clear53 = and i32 %bf.load51, 6144, !dbg !6436
  %cmp54 = icmp eq i32 %bf.clear53, 4096, !dbg !6437
  br i1 %cmp54, label %if.then55, label %if.else, !dbg !6438

if.then55:                                        ; preds = %if.end48
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6396, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata i32 %n, metadata !6386, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6399
  %7 = sext i32 %n to i64, !dbg !6440
  br label %for.cond, !dbg !6440

for.cond:                                         ; preds = %for.body, %if.then55
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %7, %if.then55 ]
  %arglist.0 = phi %union.tree_node* [ %call60, %for.body ], [ null, %if.then55 ], !dbg !6439
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6442
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0, metadata !6396, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata i32 undef, metadata !6386, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6399
  %cmp57 = icmp sgt i64 %indvars.iv, 0, !dbg !6443
  br i1 %cmp57, label %for.body, label %for.end, !dbg !6445

for.body:                                         ; preds = %for.cond
  %arrayidx59 = getelementptr inbounds %union.tree_node*, %union.tree_node** %argarray, i64 %indvars.iv.next, !dbg !6446
  %8 = load %union.tree_node*, %union.tree_node** %arrayidx59, align 8, !dbg !6446
  %call60 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %8, %union.tree_node* %arglist.0) #7, !dbg !6446
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !6396, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata i32 undef, metadata !6386, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6399
  br label %for.cond, !dbg !6447, !llvm.loop !6448

for.end:                                          ; preds = %for.cond
  %arglist.0.lcssa = phi %union.tree_node* [ %arglist.0, %for.cond ], !dbg !6439
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0.lcssa, metadata !6396, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0.lcssa, metadata !6396, metadata !DIExpression()), !dbg !6439
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0.lcssa, metadata !6396, metadata !DIExpression()), !dbg !6439
  %9 = load %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 27), align 8, !dbg !6450
  %call61 = tail call %union.tree_node* %9(%union.tree_node* %1, %union.tree_node* %arglist.0.lcssa, i8 zeroext 0) #7, !dbg !6451
  call void @llvm.dbg.value(metadata %union.tree_node* %call61, metadata !6385, metadata !DIExpression()), !dbg !6399
  %tobool62 = icmp eq %union.tree_node* %call61, null, !dbg !6452
  br i1 %tobool62, label %if.end64, label %cleanup79, !dbg !6454

if.end64:                                         ; preds = %for.end
  %call65 = tail call %union.tree_node* @build_call_array_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %fn, i32 %n, %union.tree_node** %argarray) #7, !dbg !6455
  br label %cleanup79, !dbg !6456

if.else:                                          ; preds = %if.end48
  %cmp67 = icmp slt i32 %n, 5, !dbg !6457
  br i1 %cmp67, label %if.then68, label %if.end74, !dbg !6459

if.then68:                                        ; preds = %if.else
  %call69 = tail call fastcc %union.tree_node* @fold_builtin_n(i32 %loc, %union.tree_node* %1, %union.tree_node** %argarray, i32 %n, i8 zeroext 0) #8, !dbg !6460
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !6385, metadata !DIExpression()), !dbg !6399
  %tobool70 = icmp eq %union.tree_node* %call69, null, !dbg !6462
  br i1 %tobool70, label %if.end74, label %cleanup79, !dbg !6464

if.end74:                                         ; preds = %if.then68, %if.else
  %call75 = tail call %union.tree_node* @build_call_array_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %fn, i32 %n, %union.tree_node** %argarray) #7, !dbg !6465
  call void @llvm.dbg.value(metadata %union.tree_node* %call75, metadata !6387, metadata !DIExpression()), !dbg !6399
  %call76 = tail call fastcc %union.tree_node* @fold_builtin_varargs(i32 %loc, %union.tree_node* %1, %union.tree_node* %call75, i8 zeroext 0) #8, !dbg !6466
  call void @llvm.dbg.value(metadata %union.tree_node* %call76, metadata !6385, metadata !DIExpression()), !dbg !6399
  %tobool77 = icmp eq %union.tree_node* %call76, null, !dbg !6467
  %call76.call75 = select i1 %tobool77, %union.tree_node* %call75, %union.tree_node* %call76, !dbg !6467
  br label %cleanup79, !dbg !6468

cleanup79:                                        ; preds = %for.end, %if.then68, %land.lhs.true, %if.then, %if.end64, %cleanup, %if.end74, %if.then46
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 1, %if.then46 ], [ 1, %if.end74 ], [ 1, %for.end ], [ 1, %if.end64 ], [ 1, %if.then68 ], [ 0, %land.lhs.true ], [ 0, %if.then ]
  %retval.2 = phi %union.tree_node* [ %retval.0, %cleanup ], [ %call47, %if.then46 ], [ %call76.call75, %if.end74 ], [ %call61, %for.end ], [ %call65, %if.end64 ], [ %call69, %if.then68 ], [ undef, %land.lhs.true ], [ undef, %if.then ]
  %cond1 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond1, label %if.end82, label %cleanup84

if.end82:                                         ; preds = %cleanup79, %entry
  %call83 = tail call %union.tree_node* @build_call_array_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %fn, i32 %n, %union.tree_node** %argarray) #7, !dbg !6469
  br label %cleanup84, !dbg !6470

cleanup84:                                        ; preds = %cleanup79, %if.end82
  %retval.3 = phi %union.tree_node* [ %retval.2, %cleanup79 ], [ %call83, %if.end82 ], !dbg !6399
  ret %union.tree_node* %retval.3, !dbg !6471
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #6

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #6

declare dso_local %union.tree_node* @build_call_array_loc(i32, %union.tree_node*, %union.tree_node*, i32, %union.tree_node**) local_unnamed_addr #2

declare dso_local %union.tree_node* @tree_cons_stat(%union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @validate_gimple_arglist(%union.gimple_statement_d* %call, ...) local_unnamed_addr #5 !dbg !6472 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %call, metadata !6477, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i8 0, metadata !6479, metadata !DIExpression()), !dbg !6484
  %0 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !6485
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !6485
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !6480, metadata !DIExpression()), !dbg !6486
  call void @llvm.va_start(i8* %0), !dbg !6487
  call void @llvm.dbg.value(metadata i64 0, metadata !6482, metadata !DIExpression()), !dbg !6484
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !6488
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !6488
  %1 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !6488
  br label %do.body, !dbg !6490

do.body:                                          ; preds = %sw.default, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %sw.default ], !dbg !6484
  call void @llvm.dbg.value(metadata i64 %i.0, metadata !6482, metadata !DIExpression()), !dbg !6484
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !6491
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !6491
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !6491

vaarg.in_reg:                                     ; preds = %do.body
  %reg_save_area = load i8*, i8** %1, align 16, !dbg !6491
  %2 = sext i32 %gp_offset to i64, !dbg !6491
  %3 = getelementptr i8, i8* %reg_save_area, i64 %2, !dbg !6491
  %4 = add i32 %gp_offset, 8, !dbg !6491
  store i32 %4, i32* %gp_offset_p, align 16, !dbg !6491
  br label %vaarg.end, !dbg !6491

vaarg.in_mem:                                     ; preds = %do.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !6491
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !6491
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !6491
  br label %vaarg.end, !dbg !6491

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %3, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to i32*, !dbg !6491
  %5 = load i32, i32* %vaarg.addr, align 4, !dbg !6491
  call void @llvm.dbg.value(metadata i32 %5, metadata !6478, metadata !DIExpression()), !dbg !6484
  switch i32 %5, label %sw.default [
    i32 0, label %end.loopexit
    i32 19, label %sw.bb3
  ], !dbg !6492

sw.bb3:                                           ; preds = %vaarg.end
  %i.0.lcssa3 = phi i64 [ %i.0, %vaarg.end ], !dbg !6484
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa3, metadata !6482, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa3, metadata !6482, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i64 %i.0.lcssa3, metadata !6482, metadata !DIExpression()), !dbg !6484
  %call4 = call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %call) #8, !dbg !6493
  %conv = zext i32 %call4 to i64, !dbg !6493
  %cmp = icmp eq i64 %i.0.lcssa3, %conv, !dbg !6495
  %conv6 = zext i1 %cmp to i8, !dbg !6496
  call void @llvm.dbg.value(metadata i8 %conv6, metadata !6479, metadata !DIExpression()), !dbg !6484
  br label %end, !dbg !6497

sw.default:                                       ; preds = %vaarg.end
  %inc = add i64 %i.0, 1, !dbg !6498
  call void @llvm.dbg.value(metadata i64 %inc, metadata !6482, metadata !DIExpression()), !dbg !6484
  %conv7 = trunc i64 %i.0 to i32, !dbg !6499
  %call8 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %call, i32 %conv7) #8, !dbg !6500
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !6481, metadata !DIExpression()), !dbg !6484
  %call9 = call fastcc zeroext i8 @validate_arg(%union.tree_node* %call8, i32 %5) #8, !dbg !6501
  %tobool = icmp eq i8 %call9, 0, !dbg !6501
  br i1 %tobool, label %end.loopexit, label %do.body, !dbg !6503

end.loopexit:                                     ; preds = %vaarg.end, %sw.default
  %res.0.ph = phi i8 [ 0, %sw.default ], [ 1, %vaarg.end ]
  br label %end, !dbg !6504

end:                                              ; preds = %end.loopexit, %sw.bb3
  %res.0 = phi i8 [ %conv6, %sw.bb3 ], [ %res.0.ph, %end.loopexit ], !dbg !6484
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !6479, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.label(metadata !6483), !dbg !6505
  call void @llvm.va_end(i8* nonnull %0), !dbg !6504
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !6506
  ret i8 %res.0, !dbg !6507
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !6508 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6512, metadata !DIExpression()), !dbg !6514
  %call = tail call fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) #8, !dbg !6515
  call void @llvm.dbg.value(metadata i32 %call, metadata !6513, metadata !DIExpression()), !dbg !6514
  %sub = add i32 %call, -3, !dbg !6516
  ret i32 %sub, !dbg !6517
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %gs, i32 %index) unnamed_addr #0 !dbg !6518 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !6522, metadata !DIExpression()), !dbg !6524
  call void @llvm.dbg.value(metadata i32 %index, metadata !6523, metadata !DIExpression()), !dbg !6524
  %add = add i32 %index, 3, !dbg !6525
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %add) #8, !dbg !6526
  ret %union.tree_node* %call, !dbg !6527
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @validate_arglist(%union.tree_node* %callexpr, ...) local_unnamed_addr #5 !dbg !6528 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %iter = alloca %struct.const_call_expr_arg_iterator_d, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %callexpr, metadata !6532, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.value(metadata i8 0, metadata !6534, metadata !DIExpression()), !dbg !6539
  %0 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !6540
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %0) #6, !dbg !6540
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !6535, metadata !DIExpression()), !dbg !6541
  %1 = bitcast %struct.const_call_expr_arg_iterator_d* %iter to i8*, !dbg !6542
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #6, !dbg !6542
  call void @llvm.va_start(i8* %0), !dbg !6543
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6536, metadata !DIExpression(DW_OP_deref)), !dbg !6539
  call fastcc void @init_const_call_expr_arg_iterator(%union.tree_node* %callexpr, %struct.const_call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !6544
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !6545
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !6545
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !6545
  br label %do.body, !dbg !6547

do.body:                                          ; preds = %sw.default, %entry
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !6548
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !6548
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !6548

vaarg.in_reg:                                     ; preds = %do.body
  %reg_save_area = load i8*, i8** %2, align 16, !dbg !6548
  %3 = sext i32 %gp_offset to i64, !dbg !6548
  %4 = getelementptr i8, i8* %reg_save_area, i64 %3, !dbg !6548
  %5 = add i32 %gp_offset, 8, !dbg !6548
  store i32 %5, i32* %gp_offset_p, align 16, !dbg !6548
  br label %vaarg.end, !dbg !6548

vaarg.in_mem:                                     ; preds = %do.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !6548
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !6548
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !6548
  br label %vaarg.end, !dbg !6548

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %4, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %vaarg.addr = bitcast i8* %vaarg.addr.in to i32*, !dbg !6548
  %6 = load i32, i32* %vaarg.addr, align 4, !dbg !6548
  call void @llvm.dbg.value(metadata i32 %6, metadata !6533, metadata !DIExpression()), !dbg !6539
  switch i32 %6, label %sw.default [
    i32 0, label %end.loopexit
    i32 19, label %sw.bb3
  ], !dbg !6549

sw.bb3:                                           ; preds = %vaarg.end
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6536, metadata !DIExpression(DW_OP_deref)), !dbg !6539
  %call = call fastcc zeroext i8 @more_const_call_expr_args_p(%struct.const_call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !6550
  %tobool = icmp eq i8 %call, 0, !dbg !6552
  %conv = zext i1 %tobool to i8, !dbg !6552
  call void @llvm.dbg.value(metadata i8 %conv, metadata !6534, metadata !DIExpression()), !dbg !6539
  br label %end, !dbg !6553

sw.default:                                       ; preds = %vaarg.end
  call void @llvm.dbg.value(metadata %struct.const_call_expr_arg_iterator_d* %iter, metadata !6536, metadata !DIExpression(DW_OP_deref)), !dbg !6539
  %call4 = call fastcc %union.tree_node* @next_const_call_expr_arg(%struct.const_call_expr_arg_iterator_d* nonnull %iter) #8, !dbg !6554
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !6537, metadata !DIExpression()), !dbg !6539
  %call5 = call fastcc zeroext i8 @validate_arg(%union.tree_node* %call4, i32 %6) #8, !dbg !6555
  %tobool6 = icmp eq i8 %call5, 0, !dbg !6555
  br i1 %tobool6, label %end.loopexit, label %do.body, !dbg !6557

end.loopexit:                                     ; preds = %vaarg.end, %sw.default
  %res.0.ph = phi i8 [ 0, %sw.default ], [ 1, %vaarg.end ]
  br label %end, !dbg !6558

end:                                              ; preds = %end.loopexit, %sw.bb3
  %res.0 = phi i8 [ %conv, %sw.bb3 ], [ %res.0.ph, %end.loopexit ], !dbg !6539
  call void @llvm.dbg.value(metadata i8 %res.0, metadata !6534, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.label(metadata !6538), !dbg !6559
  call void @llvm.va_end(i8* nonnull %0), !dbg !6558
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #6, !dbg !6560
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %0) #6, !dbg !6560
  ret i8 %res.0, !dbg !6561
}

; Function Attrs: nounwind uwtable
define dso_local %struct.rtx_def* @default_expand_builtin(%union.tree_node* %exp, %struct.rtx_def* %target, %struct.rtx_def* %subtarget, i32 %mode, i32 %ignore) local_unnamed_addr #5 !dbg !6562 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6564, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata %struct.rtx_def* %target, metadata !6565, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata %struct.rtx_def* %subtarget, metadata !6566, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6567, metadata !DIExpression()), !dbg !6569
  call void @llvm.dbg.value(metadata i32 %ignore, metadata !6568, metadata !DIExpression()), !dbg !6569
  ret %struct.rtx_def* null, !dbg !6570
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_builtin_fputs(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, i8 zeroext %ignore, i8 zeroext %unlocked, %union.tree_node* %len) local_unnamed_addr #5 !dbg !6571 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6575, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !6576, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !6577, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !6578, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata i8 %unlocked, metadata !6579, metadata !DIExpression()), !dbg !6586
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !6580, metadata !DIExpression()), !dbg !6586
  %tobool = icmp eq i8 %unlocked, 0, !dbg !6587
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 359), align 8, !dbg !6587
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 358), align 16, !dbg !6587
  %cond = select i1 %tobool, %union.tree_node* %1, %union.tree_node* %0, !dbg !6587
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !6581, metadata !DIExpression()), !dbg !6586
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 364), align 16, !dbg !6588
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 363), align 8, !dbg !6588
  %cond6 = select i1 %tobool, %union.tree_node* %3, %union.tree_node* %2, !dbg !6588
  call void @llvm.dbg.value(metadata %union.tree_node* %cond6, metadata !6582, metadata !DIExpression()), !dbg !6586
  %tobool7 = icmp eq i8 %ignore, 0, !dbg !6589
  br i1 %tobool7, label %cleanup44, label %if.end, !dbg !6591

if.end:                                           ; preds = %entry
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 10) #8, !dbg !6592
  %tobool8 = icmp eq i8 %call, 0, !dbg !6592
  br i1 %tobool8, label %cleanup44, label %lor.lhs.false, !dbg !6594

lor.lhs.false:                                    ; preds = %if.end
  %call9 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 10) #8, !dbg !6595
  %tobool10 = icmp eq i8 %call9, 0, !dbg !6595
  br i1 %tobool10, label %cleanup44, label %if.end12, !dbg !6596

if.end12:                                         ; preds = %lor.lhs.false
  %tobool13 = icmp eq %union.tree_node* %len, null, !dbg !6597
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !6599

if.then14:                                        ; preds = %if.end12
  %call15 = tail call %union.tree_node* @c_strlen(%union.tree_node* %arg0, i32 0) #8, !dbg !6600
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !6580, metadata !DIExpression()), !dbg !6586
  br label %if.end16, !dbg !6601

if.end16:                                         ; preds = %if.end12, %if.then14
  %len.addr.0 = phi %union.tree_node* [ %len, %if.end12 ], [ %call15, %if.then14 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %len.addr.0, metadata !6580, metadata !DIExpression()), !dbg !6586
  %tobool17 = icmp eq %union.tree_node* %len.addr.0, null, !dbg !6602
  br i1 %tobool17, label %cleanup44, label %lor.lhs.false18, !dbg !6604

lor.lhs.false18:                                  ; preds = %if.end16
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %len.addr.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6605
  %bf.load = load i64, i64* %4, align 8, !dbg !6605
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6606
  %cmp = icmp eq i64 %bf.cast2, 23, !dbg !6606
  br i1 %cmp, label %if.end21, label %cleanup44, !dbg !6607

if.end21:                                         ; preds = %lor.lhs.false18
  %call22 = tail call i32 @compare_tree_int(%union.tree_node* nonnull %len.addr.0, i64 1) #7, !dbg !6608
  switch i32 %call22, label %sw.default [
    i32 -1, label %sw.bb
    i32 0, label %sw.bb24
    i32 1, label %sw.bb35
  ], !dbg !6609

sw.bb:                                            ; preds = %if.end21
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !6610
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !6611
  %call23 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %5, %union.tree_node* %6, %union.tree_node* %arg1) #7, !dbg !6612
  br label %cleanup44, !dbg !6613

sw.bb24:                                          ; preds = %if.end21
  %call25 = tail call fastcc i8* @c_getstr(%union.tree_node* %arg0) #8, !dbg !6614
  call void @llvm.dbg.value(metadata i8* %call25, metadata !6583, metadata !DIExpression()), !dbg !6615
  %cmp26 = icmp eq i8* %call25, null, !dbg !6616
  br i1 %cmp26, label %cleanup, label %if.then28, !dbg !6618

if.then28:                                        ; preds = %sw.bb24
  %tobool29 = icmp eq %union.tree_node* %cond, null, !dbg !6619
  br i1 %tobool29, label %cleanup, label %if.then30, !dbg !6622

if.then30:                                        ; preds = %if.then28
  %7 = load i8, i8* %call25, align 1, !dbg !6623
  %conv31 = sext i8 %7 to i64, !dbg !6623
  %call32 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv31) #7, !dbg !6624
  %call33 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %cond, i32 2, %union.tree_node* %call32, %union.tree_node* %arg1) #8, !dbg !6625
  br label %cleanup, !dbg !6626

cleanup:                                          ; preds = %if.then28, %sw.bb24, %if.then30
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then30 ], [ false, %if.then28 ], [ true, %sw.bb24 ]
  %retval.0 = phi %union.tree_node* [ %call33, %if.then30 ], [ null, %if.then28 ], [ undef, %sw.bb24 ]
  br i1 %cleanup.dest.slot.0, label %sw.bb35, label %cleanup44

sw.bb35:                                          ; preds = %cleanup, %if.end21
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6627
  %call36 = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %8) #7, !dbg !6630
  %tobool37 = icmp eq i8 %call36, 0, !dbg !6630
  %tobool40 = icmp ne %union.tree_node* %cond6, null, !dbg !6631
  %or.cond = and i1 %tobool37, %tobool40, !dbg !6633
  br i1 %or.cond, label %if.then41, label %cleanup44, !dbg !6633

if.then41:                                        ; preds = %sw.bb35
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 18), align 16, !dbg !6634
  %call42 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %cond6, i32 4, %union.tree_node* %arg0, %union.tree_node* %9, %union.tree_node* nonnull %len.addr.0, %union.tree_node* %arg1) #8, !dbg !6635
  br label %cleanup44, !dbg !6636

sw.default:                                       ; preds = %if.end21
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.724, i64 0, i64 0), i32 11645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !6637
  br label %cleanup44, !dbg !6638

cleanup44:                                        ; preds = %lor.lhs.false18, %if.end16, %lor.lhs.false, %if.end, %entry, %sw.bb35, %cleanup, %sw.default, %if.then41, %sw.bb
  %retval.1 = phi %union.tree_node* [ null, %sw.default ], [ %call42, %if.then41 ], [ %retval.0, %cleanup ], [ %call23, %sw.bb ], [ null, %entry ], [ null, %lor.lhs.false ], [ null, %if.end ], [ null, %lor.lhs.false18 ], [ null, %if.end16 ], [ null, %sw.bb35 ], !dbg !6586
  ret %union.tree_node* %retval.1, !dbg !6639
}

declare dso_local i32 @compare_tree_int(%union.tree_node*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i8* @c_getstr(%union.tree_node* %src) unnamed_addr #5 !dbg !6640 {
entry:
  %offset_node = alloca %union.tree_node*, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !6644, metadata !DIExpression()), !dbg !6646
  %0 = bitcast %union.tree_node** %offset_node to i8*, !dbg !6647
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6647
  call void @llvm.dbg.value(metadata %union.tree_node** %offset_node, metadata !6645, metadata !DIExpression(DW_OP_deref)), !dbg !6646
  %call = call %union.tree_node* @string_constant(%union.tree_node* %src, %union.tree_node** nonnull %offset_node) #7, !dbg !6648
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !6644, metadata !DIExpression()), !dbg !6646
  %cmp = icmp eq %union.tree_node* %call, null, !dbg !6649
  br i1 %cmp, label %cleanup, label %if.end, !dbg !6651

if.end:                                           ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %offset_node, align 8, !dbg !6652
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6645, metadata !DIExpression()), !dbg !6646
  %cmp1 = icmp eq %union.tree_node* %1, null, !dbg !6654
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !6655

if.then2:                                         ; preds = %if.end
  %str = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6656
  %arraydecay = bitcast i32* %str to i8*, !dbg !6656
  br label %cleanup, !dbg !6657

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6645, metadata !DIExpression()), !dbg !6646
  %call3 = call i32 @host_integerp(%union.tree_node* nonnull %1, i32 1) #7, !dbg !6658
  %tobool = icmp eq i32 %call3, 0, !dbg !6658
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6660

lor.lhs.false:                                    ; preds = %if.else
  %2 = load %union.tree_node*, %union.tree_node** %offset_node, align 8, !dbg !6661
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !6645, metadata !DIExpression()), !dbg !6646
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6662
  %4 = load i32, i32* %3, align 8, !dbg !6662
  %sub = add nsw i32 %4, -1, !dbg !6663
  %conv = sext i32 %sub to i64, !dbg !6662
  %call5 = call i32 @compare_tree_int(%union.tree_node* %2, i64 %conv) #7, !dbg !6664
  %cmp6 = icmp sgt i32 %call5, 0, !dbg !6665
  br i1 %cmp6, label %cleanup, label %if.end10, !dbg !6666

if.end10:                                         ; preds = %lor.lhs.false
  %str12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6667
  %arraydecay13 = bitcast i32* %str12 to i8*, !dbg !6667
  %5 = load %union.tree_node*, %union.tree_node** %offset_node, align 8, !dbg !6668
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6645, metadata !DIExpression()), !dbg !6646
  %call14 = call i64 @tree_low_cst(%union.tree_node* %5, i32 1) #7, !dbg !6669
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay13, i64 %call14, !dbg !6670
  br label %cleanup, !dbg !6671

cleanup:                                          ; preds = %if.else, %lor.lhs.false, %entry, %if.end10, %if.then2
  %retval.0 = phi i8* [ %arraydecay, %if.then2 ], [ %add.ptr, %if.end10 ], [ null, %entry ], [ null, %lor.lhs.false ], [ null, %if.else ], !dbg !6646
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #6, !dbg !6672
  ret i8* %retval.0, !dbg !6672
}

declare dso_local %union.tree_node* @build_int_cst(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local zeroext i8 @fold_builtin_next_arg(%union.tree_node* %exp, i8 zeroext %va_start_p) local_unnamed_addr #5 !dbg !6673 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6677, metadata !DIExpression()), !dbg !6685
  call void @llvm.dbg.value(metadata i8 %va_start_p, metadata !6678, metadata !DIExpression()), !dbg !6685
  %0 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_common**), align 8, !dbg !6686
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %0, i64 0, i32 2, !dbg !6686
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !6686
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !6679, metadata !DIExpression()), !dbg !6685
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6687
  %2 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !6687
  %3 = load %struct.tree_int_cst*, %struct.tree_int_cst** %2, align 8, !dbg !6687
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %3, i64 0, i32 1, i32 0, !dbg !6687
  %4 = load i64, i64* %low, align 8, !dbg !6687
  %conv = trunc i64 %4 to i32, !dbg !6687
  %sub = add nsw i32 %conv, -3, !dbg !6687
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6680, metadata !DIExpression()), !dbg !6685
  %values = getelementptr inbounds %union.tree_node, %union.tree_node* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6688
  %5 = bitcast i32* %values to %union.tree_node**, !dbg !6688
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !6688
  %cmp = icmp eq %union.tree_node* %6, null, !dbg !6690
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6691

lor.lhs.false:                                    ; preds = %entry
  %call = tail call %union.tree_node* @tree_last(%union.tree_node* nonnull %6) #7, !dbg !6692
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !6692
  %8 = load %union.tree_node*, %union.tree_node** %7, align 8, !dbg !6692
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !6693
  %cmp7 = icmp eq %union.tree_node* %8, %9, !dbg !6694
  br i1 %cmp7, label %if.then, label %if.end, !dbg !6695

if.then:                                          ; preds = %lor.lhs.false, %entry
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.726, i64 0, i64 0)) #7, !dbg !6696
  br label %cleanup, !dbg !6698

if.end:                                           ; preds = %lor.lhs.false
  %tobool = icmp eq i8 %va_start_p, 0, !dbg !6699
  br i1 %tobool, label %if.else, label %if.then9, !dbg !6701

if.then9:                                         ; preds = %if.end
  %cmp12 = icmp eq i32 %sub, 2, !dbg !6702
  br i1 %cmp12, label %if.end15, label %if.then14, !dbg !6705

if.then14:                                        ; preds = %if.then9
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.727, i64 0, i64 0)) #7, !dbg !6706
  br label %cleanup, !dbg !6708

if.end15:                                         ; preds = %if.then9
  %arrayidx18 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !6709
  br label %if.end32, !dbg !6710

if.else:                                          ; preds = %if.end
  %cmp19 = icmp eq i32 %sub, 0, !dbg !6711
  br i1 %cmp19, label %if.then21, label %if.else23, !dbg !6714

if.then21:                                        ; preds = %if.else
  %call22 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.728, i64 0, i64 0)) #7, !dbg !6715
  br label %cleanup, !dbg !6717

if.else23:                                        ; preds = %if.else
  %cmp24 = icmp sgt i32 %sub, 1, !dbg !6718
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !6720

if.then26:                                        ; preds = %if.else23
  tail call void (i8*, ...) @error(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.729, i64 0, i64 0)) #7, !dbg !6721
  br label %cleanup, !dbg !6723

if.end28:                                         ; preds = %if.else23
  %arrayidx31 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !6724
  br label %if.end32

if.end32:                                         ; preds = %if.end28, %if.end15
  %arg.0.in = phi %union.tree_node** [ %arrayidx18, %if.end15 ], [ %arrayidx31, %if.end28 ]
  %arg.0 = load %union.tree_node*, %union.tree_node** %arg.0.in, align 8, !dbg !6725
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.0, metadata !6681, metadata !DIExpression()), !dbg !6685
  %10 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6726
  %bf.load = load i64, i64* %10, align 8, !dbg !6726
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !6728
  %cmp33 = icmp eq i64 %bf.cast2, 141, !dbg !6728
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !6729

if.then35:                                        ; preds = %if.end32
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !6730
  %11 = bitcast i32* %var to %union.tree_node**, !dbg !6730
  %12 = load %union.tree_node*, %union.tree_node** %11, align 8, !dbg !6730
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !6681, metadata !DIExpression()), !dbg !6685
  br label %if.end36, !dbg !6731

if.end36:                                         ; preds = %if.then35, %if.end32
  %arg.1 = phi %union.tree_node* [ %12, %if.then35 ], [ %arg.0, %if.end32 ], !dbg !6685
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.1, metadata !6681, metadata !DIExpression()), !dbg !6685
  %call37 = tail call i32 @integer_zerop(%union.tree_node* %arg.1) #7, !dbg !6732
  %tobool38 = icmp eq i32 %call37, 0, !dbg !6732
  br i1 %tobool38, label %if.then39, label %cleanup, !dbg !6733

if.then39:                                        ; preds = %if.end36
  %13 = load %struct.tree_decl_non_common*, %struct.tree_decl_non_common** bitcast (%union.tree_node** @current_function_decl to %struct.tree_decl_non_common**), align 8, !dbg !6734
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %13, i64 0, i32 2, !dbg !6734
  %14 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !6734
  %call40 = tail call %union.tree_node* @tree_last(%union.tree_node* %14) #7, !dbg !6735
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !6682, metadata !DIExpression()), !dbg !6736
  br label %while.cond, !dbg !6737

while.cond:                                       ; preds = %while.body, %if.then39
  %arg.2 = phi %union.tree_node* [ %arg.1, %if.then39 ], [ %16, %while.body ], !dbg !6685
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.2, metadata !6681, metadata !DIExpression()), !dbg !6685
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6738
  %bf.load42 = load i64, i64* %15, align 8, !dbg !6738
  %bf.cast443 = and i64 %bf.load42, 65535, !dbg !6738
  %cmp45 = icmp eq i64 %bf.cast443, 116, !dbg !6738
  br i1 %cmp45, label %while.body, label %lor.lhs.false47, !dbg !6738

lor.lhs.false47:                                  ; preds = %while.cond
  %cmp52 = icmp eq i64 %bf.cast443, 113, !dbg !6738
  %cmp58 = icmp eq i64 %bf.cast443, 47, !dbg !6739
  %or.cond = or i1 %cmp52, %cmp58, !dbg !6740
  br i1 %or.cond, label %while.body, label %while.end, !dbg !6740

while.body:                                       ; preds = %while.cond, %lor.lhs.false47
  %operands61 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !6741
  %16 = load %union.tree_node*, %union.tree_node** %operands61, align 8, !dbg !6741
  call void @llvm.dbg.value(metadata %union.tree_node* %16, metadata !6681, metadata !DIExpression()), !dbg !6685
  br label %while.cond, !dbg !6737, !llvm.loop !6742

while.end:                                        ; preds = %lor.lhs.false47
  %arg.2.lcssa = phi %union.tree_node* [ %arg.2, %lor.lhs.false47 ], !dbg !6685
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.2.lcssa, metadata !6681, metadata !DIExpression()), !dbg !6685
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.2.lcssa, metadata !6681, metadata !DIExpression()), !dbg !6685
  call void @llvm.dbg.value(metadata %union.tree_node* %arg.2.lcssa, metadata !6681, metadata !DIExpression()), !dbg !6685
  %cmp63 = icmp eq %union.tree_node* %arg.2.lcssa, %call40, !dbg !6743
  br i1 %cmp63, label %if.else67, label %if.then65, !dbg !6745

if.then65:                                        ; preds = %while.end
  %call66 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.730, i64 0, i64 0)) #7, !dbg !6746
  br label %if.end75, !dbg !6748

if.else67:                                        ; preds = %while.end
  %decl_flag_0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6749
  %17 = bitcast i40* %decl_flag_0 to i64*, !dbg !6749
  %bf.load68 = load i64, i64* %17, align 8, !dbg !6749
  %bf.cast706 = and i64 %bf.load68, 16777216, !dbg !6749
  %tobool71 = icmp eq i64 %bf.cast706, 0, !dbg !6749
  br i1 %tobool71, label %if.end75, label %if.then72, !dbg !6751

if.then72:                                        ; preds = %if.else67
  %call73 = tail call zeroext i8 (i32, i8*, ...) @warning(i32 0, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.731, i64 0, i64 0)) #7, !dbg !6752
  br label %if.end75, !dbg !6752

if.end75:                                         ; preds = %if.else67, %if.then72, %if.then65
  %18 = load i64, i64* bitcast (%union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13) to i64*), align 8, !dbg !6753
  br i1 %tobool, label %if.else81, label %if.then77, !dbg !6755

if.then77:                                        ; preds = %if.end75
  %arrayidx80 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !6756
  %19 = bitcast %union.tree_node** %arrayidx80 to i64*, !dbg !6757
  store i64 %18, i64* %19, align 8, !dbg !6757
  br label %cleanup, !dbg !6756

if.else81:                                        ; preds = %if.end75
  %arrayidx84 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !6758
  %20 = bitcast %union.tree_node** %arrayidx84 to i64*, !dbg !6759
  store i64 %18, i64* %20, align 8, !dbg !6759
  br label %cleanup

cleanup:                                          ; preds = %if.end36, %if.else81, %if.then77, %if.then26, %if.then21, %if.then14, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 1, %if.then14 ], [ 1, %if.then21 ], [ 1, %if.then26 ], [ 0, %if.then77 ], [ 0, %if.else81 ], [ 0, %if.end36 ], !dbg !6685
  ret i8 %retval.0, !dbg !6760
}

declare dso_local %union.tree_node* @tree_last(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

declare dso_local zeroext i8 @warning(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_builtin_memory_chk(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len, %union.tree_node* %size, %union.tree_node* %maxlen, i8 zeroext %ignore, i32 %fcode) local_unnamed_addr #5 !dbg !6761 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6765, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !6766, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !6767, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !6768, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !6769, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !6770, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen, metadata !6771, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !6772, metadata !DIExpression()), !dbg !6780
  call void @llvm.dbg.value(metadata i32 %fcode, metadata !6773, metadata !DIExpression()), !dbg !6780
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !6781
  %tobool = icmp eq i8 %call, 0, !dbg !6781
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6783

lor.lhs.false:                                    ; preds = %entry
  %cmp = icmp eq i32 %fcode, 532, !dbg !6784
  %cond = select i1 %cmp, i32 8, i32 10, !dbg !6785
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 %cond) #8, !dbg !6786
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6786
  br i1 %tobool2, label %cleanup, label %lor.lhs.false3, !dbg !6787

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %len, i32 8) #8, !dbg !6788
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6788
  br i1 %tobool5, label %cleanup, label %lor.lhs.false6, !dbg !6789

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %call7 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %size, i32 8) #8, !dbg !6790
  %tobool8 = icmp eq i8 %call7, 0, !dbg !6790
  br i1 %tobool8, label %cleanup, label %if.end, !dbg !6791

if.end:                                           ; preds = %lor.lhs.false6
  br i1 %cmp, label %if.end26, label %land.lhs.true, !dbg !6792

land.lhs.true:                                    ; preds = %if.end
  %call10 = tail call i32 @operand_equal_p(%union.tree_node* %src, %union.tree_node* %dest, i32 0) #7, !dbg !6793
  %tobool11 = icmp eq i32 %call10, 0, !dbg !6793
  br i1 %tobool11, label %if.end26, label %if.then12, !dbg !6794

if.then12:                                        ; preds = %land.lhs.true
  %cmp13 = icmp eq i32 %fcode, 531, !dbg !6795
  br i1 %cmp13, label %if.else, label %if.then14, !dbg !6796

if.then14:                                        ; preds = %if.then12
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6797
  %0 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !6797
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !6797
  %type16 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !6797
  %2 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !6797
  %call17 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %dest, %union.tree_node* %len) #7, !dbg !6798
  br label %cleanup, !dbg !6799

if.else:                                          ; preds = %if.then12
  %type19 = getelementptr inbounds %union.tree_node, %union.tree_node* %dest, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6800
  %3 = load %union.tree_node*, %union.tree_node** %type19, align 8, !dbg !6800
  %call20 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %3, %union.tree_node* %dest, %union.tree_node* %len) #7, !dbg !6800
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !6775, metadata !DIExpression()), !dbg !6801
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6802
  %4 = bitcast %union.tree_node** %type22 to %struct.tree_common**, !dbg !6802
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !6802
  %type24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !6802
  %6 = load %union.tree_node*, %union.tree_node** %type24, align 8, !dbg !6802
  %call25 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %6, %union.tree_node* %call20) #7, !dbg !6803
  br label %cleanup

if.end26:                                         ; preds = %land.lhs.true, %if.end
  %call27 = tail call i32 @host_integerp(%union.tree_node* %size, i32 1) #7, !dbg !6804
  %tobool28 = icmp eq i32 %call27, 0, !dbg !6804
  br i1 %tobool28, label %cleanup, label %if.end30, !dbg !6806

if.end30:                                         ; preds = %if.end26
  %call31 = tail call i32 @integer_all_onesp(%union.tree_node* %size) #7, !dbg !6807
  %tobool32 = icmp eq i32 %call31, 0, !dbg !6807
  br i1 %tobool32, label %if.then33, label %if.end58, !dbg !6809

if.then33:                                        ; preds = %if.end30
  %call34 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !6810
  %tobool35 = icmp eq i32 %call34, 0, !dbg !6810
  br i1 %tobool35, label %if.then36, label %if.end53, !dbg !6813

if.then36:                                        ; preds = %if.then33
  %cmp37 = icmp eq %union.tree_node* %maxlen, null, !dbg !6814
  br i1 %cmp37, label %if.then41, label %lor.lhs.false38, !dbg !6817

lor.lhs.false38:                                  ; preds = %if.then36
  %call39 = tail call i32 @host_integerp(%union.tree_node* nonnull %maxlen, i32 1) #7, !dbg !6818
  %tobool40 = icmp eq i32 %call39, 0, !dbg !6818
  br i1 %tobool40, label %if.then41, label %if.end53, !dbg !6819

if.then41:                                        ; preds = %lor.lhs.false38, %if.then36
  %cmp42 = icmp eq i32 %fcode, 531, !dbg !6820
  %tobool44 = icmp ne i8 %ignore, 0, !dbg !6823
  %or.cond = and i1 %cmp42, %tobool44, !dbg !6824
  br i1 %or.cond, label %if.then45, label %cleanup, !dbg !6824

if.then45:                                        ; preds = %if.then41
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 529), align 8, !dbg !6825
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6774, metadata !DIExpression()), !dbg !6780
  %tobool46 = icmp eq %union.tree_node* %7, null, !dbg !6827
  br i1 %tobool46, label %cleanup, label %if.end48, !dbg !6829

if.end48:                                         ; preds = %if.then45
  %call49 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %7, i32 4, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len, %union.tree_node* %size) #8, !dbg !6830
  br label %cleanup, !dbg !6831

if.end53:                                         ; preds = %lor.lhs.false38, %if.then33
  %maxlen.addr.0 = phi %union.tree_node* [ %maxlen, %lor.lhs.false38 ], [ %len, %if.then33 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen.addr.0, metadata !6771, metadata !DIExpression()), !dbg !6780
  %call54 = tail call i32 @tree_int_cst_lt(%union.tree_node* %size, %union.tree_node* %maxlen.addr.0) #7, !dbg !6832
  %tobool55 = icmp eq i32 %call54, 0, !dbg !6832
  br i1 %tobool55, label %if.end58, label %cleanup, !dbg !6834

if.end58:                                         ; preds = %if.end53, %if.end30
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !6774, metadata !DIExpression()), !dbg !6780
  switch i32 %fcode, label %sw.epilog [
    i32 529, label %sw.bb
    i32 531, label %sw.bb59
    i32 530, label %sw.bb60
    i32 532, label %sw.bb61
  ], !dbg !6835

sw.bb:                                            ; preds = %if.end58
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 330), align 16, !dbg !6836
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !6774, metadata !DIExpression()), !dbg !6780
  br label %sw.epilog, !dbg !6838

sw.bb59:                                          ; preds = %if.end58
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 332), align 16, !dbg !6839
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !6774, metadata !DIExpression()), !dbg !6780
  br label %sw.epilog, !dbg !6840

sw.bb60:                                          ; preds = %if.end58
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 331), align 8, !dbg !6841
  call void @llvm.dbg.value(metadata %union.tree_node* %10, metadata !6774, metadata !DIExpression()), !dbg !6780
  br label %sw.epilog, !dbg !6842

sw.bb61:                                          ; preds = %if.end58
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 333), align 8, !dbg !6843
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !6774, metadata !DIExpression()), !dbg !6780
  br label %sw.epilog, !dbg !6844

sw.epilog:                                        ; preds = %if.end58, %sw.bb61, %sw.bb60, %sw.bb59, %sw.bb
  %fn.0 = phi %union.tree_node* [ %11, %sw.bb61 ], [ %10, %sw.bb60 ], [ %9, %sw.bb59 ], [ %8, %sw.bb ], [ null, %if.end58 ], !dbg !6780
  call void @llvm.dbg.value(metadata %union.tree_node* %fn.0, metadata !6774, metadata !DIExpression()), !dbg !6780
  %tobool62 = icmp eq %union.tree_node* %fn.0, null, !dbg !6845
  br i1 %tobool62, label %cleanup, label %if.end64, !dbg !6847

if.end64:                                         ; preds = %sw.epilog
  %call65 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %fn.0, i32 3, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len) #8, !dbg !6848
  br label %cleanup, !dbg !6849

cleanup:                                          ; preds = %sw.epilog, %if.end53, %if.then45, %if.end26, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry, %if.then41, %if.end64, %if.end48, %if.else, %if.then14
  %retval.0 = phi %union.tree_node* [ %call17, %if.then14 ], [ %call25, %if.else ], [ %call65, %if.end64 ], [ %call49, %if.end48 ], [ null, %lor.lhs.false6 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end26 ], [ null, %if.then45 ], [ null, %if.then41 ], [ null, %if.end53 ], [ null, %sw.epilog ], !dbg !6780
  ret %union.tree_node* %retval.0, !dbg !6850
}

declare dso_local i32 @integer_all_onesp(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_builtin_stxcpy_chk(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %size, %union.tree_node* %maxlen, i8 zeroext %ignore, i32 %fcode) local_unnamed_addr #5 !dbg !6851 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6855, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !6856, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !6857, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !6858, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !6859, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen, metadata !6860, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !6861, metadata !DIExpression()), !dbg !6865
  call void @llvm.dbg.value(metadata i32 %fcode, metadata !6862, metadata !DIExpression()), !dbg !6865
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !6866
  %tobool = icmp eq i8 %call, 0, !dbg !6866
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6868

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !6869
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6869
  br i1 %tobool2, label %cleanup, label %lor.lhs.false3, !dbg !6870

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %size, i32 8) #8, !dbg !6871
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6871
  br i1 %tobool5, label %cleanup, label %if.end, !dbg !6872

if.end:                                           ; preds = %lor.lhs.false3
  %cmp = icmp eq i32 %fcode, 535, !dbg !6873
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !6875

land.lhs.true:                                    ; preds = %if.end
  %call6 = tail call i32 @operand_equal_p(%union.tree_node* %src, %union.tree_node* %dest, i32 0) #7, !dbg !6876
  %tobool7 = icmp eq i32 %call6, 0, !dbg !6876
  br i1 %tobool7, label %if.end12, label %if.then8, !dbg !6877

if.then8:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6878
  %0 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !6878
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !6878
  %type10 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !6878
  %2 = load %union.tree_node*, %union.tree_node** %type10, align 8, !dbg !6878
  %call11 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %dest) #7, !dbg !6879
  br label %cleanup, !dbg !6880

if.end12:                                         ; preds = %land.lhs.true, %if.end
  %call13 = tail call i32 @host_integerp(%union.tree_node* %size, i32 1) #7, !dbg !6881
  %tobool14 = icmp eq i32 %call13, 0, !dbg !6881
  br i1 %tobool14, label %cleanup, label %if.end16, !dbg !6883

if.end16:                                         ; preds = %if.end12
  %call17 = tail call i32 @integer_all_onesp(%union.tree_node* %size) #7, !dbg !6884
  %tobool18 = icmp eq i32 %call17, 0, !dbg !6884
  br i1 %tobool18, label %if.then19, label %if.end63, !dbg !6886

if.then19:                                        ; preds = %if.end16
  %call20 = tail call %union.tree_node* @c_strlen(%union.tree_node* %src, i32 1) #8, !dbg !6887
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !6863, metadata !DIExpression()), !dbg !6865
  %tobool21 = icmp eq %union.tree_node* %call20, null, !dbg !6889
  br i1 %tobool21, label %if.then25, label %lor.lhs.false22, !dbg !6891

lor.lhs.false22:                                  ; preds = %if.then19
  %call23 = tail call i32 @host_integerp(%union.tree_node* nonnull %call20, i32 1) #7, !dbg !6892
  %tobool24 = icmp eq i32 %call23, 0, !dbg !6892
  br i1 %tobool24, label %if.then25, label %if.end58, !dbg !6893

if.then25:                                        ; preds = %lor.lhs.false22, %if.then19
  %cmp26 = icmp eq %union.tree_node* %maxlen, null, !dbg !6894
  br i1 %cmp26, label %if.then30, label %lor.lhs.false27, !dbg !6897

lor.lhs.false27:                                  ; preds = %if.then25
  %call28 = tail call i32 @host_integerp(%union.tree_node* nonnull %maxlen, i32 1) #7, !dbg !6898
  %tobool29 = icmp eq i32 %call28, 0, !dbg !6898
  br i1 %tobool29, label %if.then30, label %if.end58, !dbg !6899

if.then30:                                        ; preds = %lor.lhs.false27, %if.then25
  %cmp31 = icmp eq i32 %fcode, 533, !dbg !6900
  br i1 %cmp31, label %if.then32, label %if.end40, !dbg !6903

if.then32:                                        ; preds = %if.then30
  %tobool33 = icmp eq i8 %ignore, 0, !dbg !6904
  br i1 %tobool33, label %cleanup, label %if.end35, !dbg !6907

if.end35:                                         ; preds = %if.then32
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 535), align 8, !dbg !6908
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6864, metadata !DIExpression()), !dbg !6865
  %tobool36 = icmp eq %union.tree_node* %3, null, !dbg !6909
  br i1 %tobool36, label %cleanup, label %if.end38, !dbg !6911

if.end38:                                         ; preds = %if.end35
  %call39 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %3, i32 3, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %size) #8, !dbg !6912
  br label %cleanup, !dbg !6913

if.end40:                                         ; preds = %if.then30
  br i1 %tobool21, label %cleanup, label %lor.lhs.false42, !dbg !6914

lor.lhs.false42:                                  ; preds = %if.end40
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !6916
  %bf.load = load i64, i64* %4, align 8, !dbg !6916
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !6916
  %tobool43 = icmp eq i64 %bf.cast1, 0, !dbg !6916
  br i1 %tobool43, label %if.end45, label %cleanup, !dbg !6917

if.end45:                                         ; preds = %lor.lhs.false42
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 529), align 8, !dbg !6918
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6864, metadata !DIExpression()), !dbg !6865
  %tobool46 = icmp eq %union.tree_node* %5, null, !dbg !6919
  br i1 %tobool46, label %cleanup, label %if.end48, !dbg !6921

if.end48:                                         ; preds = %if.end45
  %call49 = tail call %union.tree_node* @size_int_kind(i64 1, i32 1) #7, !dbg !6922
  %call50 = tail call %union.tree_node* @size_binop_loc(i32 %loc, i32 63, %union.tree_node* nonnull %call20, %union.tree_node* %call49) #7, !dbg !6923
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !6863, metadata !DIExpression()), !dbg !6865
  %type52 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !6924
  %6 = bitcast %union.tree_node** %type52 to %struct.tree_common**, !dbg !6924
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !6924
  %type54 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !6924
  %8 = load %union.tree_node*, %union.tree_node** %type54, align 8, !dbg !6924
  %call55 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %5, i32 4, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %call50, %union.tree_node* %size) #8, !dbg !6925
  %call56 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %8, %union.tree_node* %call55) #7, !dbg !6926
  br label %cleanup, !dbg !6927

if.end58:                                         ; preds = %lor.lhs.false22, %lor.lhs.false27
  %maxlen.addr.0 = phi %union.tree_node* [ %maxlen, %lor.lhs.false27 ], [ %call20, %lor.lhs.false22 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen.addr.0, metadata !6860, metadata !DIExpression()), !dbg !6865
  %call59 = tail call i32 @tree_int_cst_lt(%union.tree_node* %maxlen.addr.0, %union.tree_node* %size) #7, !dbg !6928
  %tobool60 = icmp eq i32 %call59, 0, !dbg !6928
  br i1 %tobool60, label %cleanup, label %if.end63, !dbg !6930

if.end63:                                         ; preds = %if.end58, %if.end16
  %cmp64 = icmp eq i32 %fcode, 533, !dbg !6931
  %cond = select i1 %cmp64, i64 335, i64 341, !dbg !6932
  %arrayidx = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %cond, !dbg !6933
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !6933
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !6864, metadata !DIExpression()), !dbg !6865
  %tobool65 = icmp eq %union.tree_node* %9, null, !dbg !6934
  br i1 %tobool65, label %cleanup, label %if.end67, !dbg !6936

if.end67:                                         ; preds = %if.end63
  %call68 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %9, i32 2, %union.tree_node* %dest, %union.tree_node* %src) #8, !dbg !6937
  br label %cleanup, !dbg !6938

cleanup:                                          ; preds = %if.end63, %if.end58, %if.end35, %if.then32, %if.end45, %lor.lhs.false42, %if.end40, %if.end12, %lor.lhs.false3, %lor.lhs.false, %entry, %if.end67, %if.end48, %if.end38, %if.then8
  %retval.0 = phi %union.tree_node* [ %call11, %if.then8 ], [ %call68, %if.end67 ], [ %call39, %if.end38 ], [ %call56, %if.end48 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end12 ], [ null, %if.then32 ], [ null, %if.end35 ], [ null, %lor.lhs.false42 ], [ null, %if.end40 ], [ null, %if.end45 ], [ null, %if.end58 ], [ null, %if.end63 ], !dbg !6865
  ret %union.tree_node* %retval.0, !dbg !6939
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_builtin_strncpy_chk(i32 %loc, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len, %union.tree_node* %size, %union.tree_node* %maxlen) local_unnamed_addr #5 !dbg !6940 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6942, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !6943, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !6944, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !6945, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !6946, metadata !DIExpression()), !dbg !6949
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen, metadata !6947, metadata !DIExpression()), !dbg !6949
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !6950
  %tobool = icmp eq i8 %call, 0, !dbg !6950
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !6952

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !6953
  %tobool2 = icmp eq i8 %call1, 0, !dbg !6953
  br i1 %tobool2, label %cleanup, label %lor.lhs.false3, !dbg !6954

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %len, i32 8) #8, !dbg !6955
  %tobool5 = icmp eq i8 %call4, 0, !dbg !6955
  br i1 %tobool5, label %cleanup, label %lor.lhs.false6, !dbg !6956

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %call7 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %size, i32 8) #8, !dbg !6957
  %tobool8 = icmp eq i8 %call7, 0, !dbg !6957
  br i1 %tobool8, label %cleanup, label %if.end, !dbg !6958

if.end:                                           ; preds = %lor.lhs.false6
  %call9 = tail call i32 @host_integerp(%union.tree_node* %size, i32 1) #7, !dbg !6959
  %tobool10 = icmp eq i32 %call9, 0, !dbg !6959
  br i1 %tobool10, label %cleanup, label %if.end12, !dbg !6961

if.end12:                                         ; preds = %if.end
  %call13 = tail call i32 @integer_all_onesp(%union.tree_node* %size) #7, !dbg !6962
  %tobool14 = icmp eq i32 %call13, 0, !dbg !6962
  br i1 %tobool14, label %if.then15, label %if.end29, !dbg !6964

if.then15:                                        ; preds = %if.end12
  %call16 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !6965
  %tobool17 = icmp eq i32 %call16, 0, !dbg !6965
  br i1 %tobool17, label %if.then18, label %if.end24, !dbg !6968

if.then18:                                        ; preds = %if.then15
  %cmp = icmp eq %union.tree_node* %maxlen, null, !dbg !6969
  br i1 %cmp, label %cleanup, label %lor.lhs.false19, !dbg !6972

lor.lhs.false19:                                  ; preds = %if.then18
  %call20 = tail call i32 @host_integerp(%union.tree_node* nonnull %maxlen, i32 1) #7, !dbg !6973
  %tobool21 = icmp eq i32 %call20, 0, !dbg !6973
  br i1 %tobool21, label %cleanup, label %if.end24, !dbg !6974

if.end24:                                         ; preds = %lor.lhs.false19, %if.then15
  %maxlen.addr.0 = phi %union.tree_node* [ %maxlen, %lor.lhs.false19 ], [ %len, %if.then15 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen.addr.0, metadata !6947, metadata !DIExpression()), !dbg !6949
  %call25 = tail call i32 @tree_int_cst_lt(%union.tree_node* %size, %union.tree_node* %maxlen.addr.0) #7, !dbg !6975
  %tobool26 = icmp eq i32 %call25, 0, !dbg !6975
  br i1 %tobool26, label %if.end29, label %cleanup, !dbg !6977

if.end29:                                         ; preds = %if.end24, %if.end12
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 349), align 8, !dbg !6978
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !6948, metadata !DIExpression()), !dbg !6949
  %tobool30 = icmp eq %union.tree_node* %0, null, !dbg !6979
  br i1 %tobool30, label %cleanup, label %if.end32, !dbg !6981

if.end32:                                         ; preds = %if.end29
  %call33 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %0, i32 3, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len) #8, !dbg !6982
  br label %cleanup, !dbg !6983

cleanup:                                          ; preds = %if.end29, %if.end24, %lor.lhs.false19, %if.end, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry, %if.then18, %if.end32
  %retval.0 = phi %union.tree_node* [ %call33, %if.end32 ], [ null, %lor.lhs.false6 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end ], [ null, %lor.lhs.false19 ], [ null, %if.then18 ], [ null, %if.end24 ], [ null, %if.end29 ], !dbg !6949
  ret %union.tree_node* %retval.0, !dbg !6984
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_builtin_snprintf_chk(i32 %loc, %union.tree_node* %exp, %union.tree_node* %maxlen, i32 %fcode) local_unnamed_addr #5 !dbg !6985 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !6989, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !6990, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen, metadata !6991, metadata !DIExpression()), !dbg !7000
  call void @llvm.dbg.value(metadata i32 %fcode, metadata !6992, metadata !DIExpression()), !dbg !7000
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7001
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !7001
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !7001
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !7001
  %2 = load i64, i64* %low, align 8, !dbg !7001
  %conv = trunc i64 %2 to i32, !dbg !7001
  %cmp = icmp slt i32 %conv, 8, !dbg !7003
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7004

if.end:                                           ; preds = %entry
  %arrayidx6 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !7005
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx6, align 8, !dbg !7005
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !6993, metadata !DIExpression()), !dbg !7000
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %3, i32 10) #8, !dbg !7006
  %tobool = icmp eq i8 %call, 0, !dbg !7006
  br i1 %tobool, label %cleanup, label %if.end8, !dbg !7008

if.end8:                                          ; preds = %if.end
  %arrayidx11 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !7009
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx11, align 8, !dbg !7009
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !6995, metadata !DIExpression()), !dbg !7000
  %call12 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %4, i32 8) #8, !dbg !7010
  %tobool13 = icmp eq i8 %call12, 0, !dbg !7010
  br i1 %tobool13, label %cleanup, label %if.end15, !dbg !7012

if.end15:                                         ; preds = %if.end8
  %arrayidx18 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 5, !dbg !7013
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8, !dbg !7013
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !6998, metadata !DIExpression()), !dbg !7000
  %call19 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %5, i32 8) #8, !dbg !7014
  %tobool20 = icmp eq i8 %call19, 0, !dbg !7014
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !7016

if.end22:                                         ; preds = %if.end15
  %arrayidx25 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 6, !dbg !7017
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8, !dbg !7017
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !6994, metadata !DIExpression()), !dbg !7000
  %call26 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %6, i32 8) #8, !dbg !7018
  %tobool27 = icmp eq i8 %call26, 0, !dbg !7018
  br i1 %tobool27, label %cleanup, label %if.end29, !dbg !7020

if.end29:                                         ; preds = %if.end22
  %arrayidx32 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 7, !dbg !7021
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx32, align 8, !dbg !7021
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !6997, metadata !DIExpression()), !dbg !7000
  %call33 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %7, i32 10) #8, !dbg !7022
  %tobool34 = icmp eq i8 %call33, 0, !dbg !7022
  br i1 %tobool34, label %cleanup, label %if.end36, !dbg !7024

if.end36:                                         ; preds = %if.end29
  %call37 = tail call i32 @host_integerp(%union.tree_node* %6, i32 1) #7, !dbg !7025
  %tobool38 = icmp eq i32 %call37, 0, !dbg !7025
  br i1 %tobool38, label %cleanup, label %if.end40, !dbg !7027

if.end40:                                         ; preds = %if.end36
  %call41 = tail call i32 @integer_all_onesp(%union.tree_node* %6) #7, !dbg !7028
  %tobool42 = icmp eq i32 %call41, 0, !dbg !7028
  br i1 %tobool42, label %if.then43, label %if.end58, !dbg !7030

if.then43:                                        ; preds = %if.end40
  %call44 = tail call i32 @host_integerp(%union.tree_node* %4, i32 1) #7, !dbg !7031
  %tobool45 = icmp eq i32 %call44, 0, !dbg !7031
  br i1 %tobool45, label %if.then46, label %if.end53, !dbg !7034

if.then46:                                        ; preds = %if.then43
  %cmp47 = icmp eq %union.tree_node* %maxlen, null, !dbg !7035
  br i1 %cmp47, label %cleanup, label %lor.lhs.false, !dbg !7038

lor.lhs.false:                                    ; preds = %if.then46
  %call49 = tail call i32 @host_integerp(%union.tree_node* nonnull %maxlen, i32 1) #7, !dbg !7039
  %tobool50 = icmp eq i32 %call49, 0, !dbg !7039
  br i1 %tobool50, label %cleanup, label %if.end53, !dbg !7040

if.end53:                                         ; preds = %lor.lhs.false, %if.then43
  %maxlen.addr.0 = phi %union.tree_node* [ %maxlen, %lor.lhs.false ], [ %4, %if.then43 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen.addr.0, metadata !6991, metadata !DIExpression()), !dbg !7000
  %call54 = tail call i32 @tree_int_cst_lt(%union.tree_node* %6, %union.tree_node* %maxlen.addr.0) #7, !dbg !7041
  %tobool55 = icmp eq i32 %call54, 0, !dbg !7041
  br i1 %tobool55, label %if.end58, label %cleanup, !dbg !7043

if.end58:                                         ; preds = %if.end53, %if.end40
  %call59 = tail call fastcc zeroext i8 @init_target_chars() #8, !dbg !7044
  %tobool60 = icmp eq i8 %call59, 0, !dbg !7044
  br i1 %tobool60, label %cleanup, label %if.end62, !dbg !7046

if.end62:                                         ; preds = %if.end58
  %call63 = tail call i32 @integer_zerop(%union.tree_node* %5) #7, !dbg !7047
  %tobool64 = icmp eq i32 %call63, 0, !dbg !7047
  br i1 %tobool64, label %if.then65, label %if.end79, !dbg !7049

if.then65:                                        ; preds = %if.end62
  %call66 = tail call fastcc i8* @c_getstr(%union.tree_node* %7) #8, !dbg !7050
  call void @llvm.dbg.value(metadata i8* %call66, metadata !6999, metadata !DIExpression()), !dbg !7000
  %cmp67 = icmp eq i8* %call66, null, !dbg !7052
  br i1 %cmp67, label %cleanup, label %if.end70, !dbg !7054

if.end70:                                         ; preds = %if.then65
  %8 = load i64, i64* @target_percent, align 8, !dbg !7055
  %conv71 = trunc i64 %8 to i32, !dbg !7055
  %call72 = tail call i8* @strchr(i8* nonnull %call66, i32 %conv71) #7, !dbg !7057
  %cmp73 = icmp eq i8* %call72, null, !dbg !7058
  br i1 %cmp73, label %if.end79, label %land.lhs.true, !dbg !7059

land.lhs.true:                                    ; preds = %if.end70
  %call75 = tail call i32 @strcmp(i8* nonnull %call66, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !7060
  %tobool76 = icmp eq i32 %call75, 0, !dbg !7060
  br i1 %tobool76, label %if.end79, label %cleanup, !dbg !7061

if.end79:                                         ; preds = %land.lhs.true, %if.end70, %if.end62
  %cmp80 = icmp eq i32 %fcode, 540, !dbg !7062
  %cond = select i1 %cmp80, i64 379, i64 372, !dbg !7063
  %arrayidx82 = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %cond, !dbg !7064
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx82, align 8, !dbg !7064
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !6996, metadata !DIExpression()), !dbg !7000
  %tobool83 = icmp eq %union.tree_node* %9, null, !dbg !7065
  br i1 %tobool83, label %cleanup, label %if.end85, !dbg !7067

if.end85:                                         ; preds = %if.end79
  %call86 = tail call %union.tree_node* (i32, %union.tree_node*, i32, %union.tree_node*, i32, ...) @rewrite_call_expr(i32 %loc, %union.tree_node* %exp, i32 5, %union.tree_node* nonnull %9, i32 3, %union.tree_node* %3, %union.tree_node* %4, %union.tree_node* %7) #8, !dbg !7068
  br label %cleanup, !dbg !7069

cleanup:                                          ; preds = %land.lhs.true, %if.end79, %if.end58, %if.end53, %lor.lhs.false, %if.end36, %if.end29, %if.end22, %if.end15, %if.end8, %if.end, %if.then65, %if.then46, %entry, %if.end85
  %retval.0 = phi %union.tree_node* [ %call86, %if.end85 ], [ null, %entry ], [ null, %if.end ], [ null, %if.end8 ], [ null, %if.end15 ], [ null, %if.end22 ], [ null, %if.end29 ], [ null, %if.end36 ], [ null, %lor.lhs.false ], [ null, %if.then46 ], [ null, %if.end53 ], [ null, %if.end58 ], [ null, %if.then65 ], [ null, %land.lhs.true ], [ null, %if.end79 ], !dbg !7000
  ret %union.tree_node* %retval.0, !dbg !7070
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @init_target_chars() unnamed_addr #5 !dbg !4371 {
entry:
  %.b = load i1, i1* @init_target_chars.init, align 1, !dbg !7071
  br i1 %.b, label %return, label %if.then, !dbg !7073

if.then:                                          ; preds = %entry
  %0 = load i64 (i64)*, i64 (i64)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 26), align 8, !dbg !7074
  %call = tail call i64 %0(i64 10) #7, !dbg !7076
  store i64 %call, i64* @target_newline, align 8, !dbg !7077
  %1 = load i64 (i64)*, i64 (i64)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 26), align 8, !dbg !7078
  %call1 = tail call i64 %1(i64 37) #7, !dbg !7079
  store i64 %call1, i64* @target_percent, align 8, !dbg !7080
  %2 = load i64 (i64)*, i64 (i64)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 26), align 8, !dbg !7081
  %call2 = tail call i64 %2(i64 99) #7, !dbg !7082
  store i64 %call2, i64* @target_c, align 8, !dbg !7083
  %3 = load i64 (i64)*, i64 (i64)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 26), align 8, !dbg !7084
  %call3 = tail call i64 %3(i64 115) #7, !dbg !7085
  store i64 %call3, i64* @target_s, align 8, !dbg !7086
  %4 = load i64, i64* @target_newline, align 8, !dbg !7087
  %cmp = icmp eq i64 %4, 0, !dbg !7089
  %5 = load i64, i64* @target_percent, align 8, !dbg !7090
  %cmp4 = icmp eq i64 %5, 0, !dbg !7091
  %or.cond = or i1 %cmp, %cmp4, !dbg !7092
  %6 = load i64, i64* @target_c, align 8, !dbg !7093
  %cmp6 = icmp eq i64 %6, 0, !dbg !7094
  %or.cond1 = or i1 %or.cond, %cmp6, !dbg !7092
  %cmp8 = icmp eq i64 %call3, 0, !dbg !7095
  %or.cond2 = or i1 %or.cond1, %cmp8, !dbg !7092
  br i1 %or.cond2, label %return, label %if.end, !dbg !7092

if.end:                                           ; preds = %if.then
  %conv = trunc i64 %5 to i8, !dbg !7096
  store i8 %conv, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_c, i64 0, i64 0), align 1, !dbg !7097
  %conv10 = trunc i64 %6 to i8, !dbg !7098
  store i8 %conv10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_c, i64 0, i64 1), align 1, !dbg !7099
  store i8 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_c, i64 0, i64 2), align 1, !dbg !7100
  store i8 %conv, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0), align 1, !dbg !7101
  %conv12 = trunc i64 %call3 to i8, !dbg !7102
  store i8 %conv12, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 1), align 1, !dbg !7103
  store i8 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 2), align 1, !dbg !7104
  store i8 %conv, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @target_percent_s_newline, i64 0, i64 0), align 1, !dbg !7105
  store i8 %conv12, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @target_percent_s_newline, i64 0, i64 1), align 1, !dbg !7106
  %conv15 = trunc i64 %4 to i8, !dbg !7107
  store i8 %conv15, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @target_percent_s_newline, i64 0, i64 2), align 1, !dbg !7108
  store i8 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @target_percent_s_newline, i64 0, i64 3), align 1, !dbg !7109
  store i1 true, i1* @init_target_chars.init, align 1, !dbg !7110
  br label %return, !dbg !7111

return:                                           ; preds = %entry, %if.end, %if.then
  %retval.0 = phi i8 [ 0, %if.then ], [ 1, %if.end ], [ 1, %entry ], !dbg !7112
  ret i8 %retval.0, !dbg !7113
}

declare dso_local i8* @strchr(i8*, i32) local_unnamed_addr #2

declare dso_local i32 @strcmp(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @rewrite_call_expr(i32 %loc, %union.tree_node* %exp, i32 %skip, %union.tree_node* %fndecl, i32 %n, ...) unnamed_addr #5 !dbg !7114 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7118, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !7119, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata i32 %skip, metadata !7120, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7121, metadata !DIExpression()), !dbg !7133
  call void @llvm.dbg.value(metadata i32 %n, metadata !7122, metadata !DIExpression()), !dbg !7133
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7134
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !7134
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !7134
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !7134
  %2 = load i64, i64* %low, align 8, !dbg !7134
  %conv = trunc i64 %2 to i32, !dbg !7134
  %sub = add nsw i32 %conv, -3, !dbg !7134
  call void @llvm.dbg.value(metadata i32 %sub, metadata !7123, metadata !DIExpression()), !dbg !7133
  %sub3 = sub nsw i32 %sub, %skip, !dbg !7135
  %add = add nsw i32 %sub3, %n, !dbg !7136
  call void @llvm.dbg.value(metadata i32 %add, metadata !7124, metadata !DIExpression()), !dbg !7133
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7137
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7137
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7125, metadata !DIExpression()), !dbg !7133
  %call = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %3) #7, !dbg !7138
  %call4 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call, %union.tree_node* %fndecl) #7, !dbg !7138
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !7126, metadata !DIExpression()), !dbg !7133
  %4 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !7139
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #6, !dbg !7139
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7132, metadata !DIExpression()), !dbg !7140
  %conv6 = sext i32 %add to i64, !dbg !7141
  %5 = alloca %union.tree_node*, i64 %conv6, align 16, !dbg !7141
  call void @llvm.dbg.value(metadata %union.tree_node** %5, metadata !7127, metadata !DIExpression()), !dbg !7133
  call void @llvm.va_start(i8* %4), !dbg !7142
  call void @llvm.dbg.value(metadata i32 0, metadata !7128, metadata !DIExpression()), !dbg !7143
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !7144
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !7144
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !7144
  %7 = sext i32 %n to i64, !dbg !7147
  br label %for.cond, !dbg !7147

for.cond:                                         ; preds = %vaarg.end, %entry
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %vaarg.end ], [ 0, %entry ], !dbg !7148
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !7128, metadata !DIExpression()), !dbg !7143
  %cmp8 = icmp slt i64 %indvars.iv4, %7, !dbg !7149
  br i1 %cmp8, label %for.body, label %for.end, !dbg !7150

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !7151
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !7151
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !7151

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %6, align 16, !dbg !7151
  %8 = sext i32 %gp_offset to i64, !dbg !7151
  %9 = getelementptr i8, i8* %reg_save_area, i64 %8, !dbg !7151
  %10 = add i32 %gp_offset, 8, !dbg !7151
  store i32 %10, i32* %gp_offset_p, align 16, !dbg !7151
  br label %vaarg.end, !dbg !7151

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !7151
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !7151
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !7151
  br label %vaarg.end, !dbg !7151

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %9, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %11 = bitcast i8* %vaarg.addr.in to i64*, !dbg !7151
  %12 = load i64, i64* %11, align 8, !dbg !7151
  %arrayidx11 = getelementptr inbounds %union.tree_node*, %union.tree_node** %5, i64 %indvars.iv4, !dbg !7152
  %13 = bitcast %union.tree_node** %arrayidx11 to i64*, !dbg !7153
  store i64 %12, i64* %13, align 8, !dbg !7153
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !7154
  call void @llvm.dbg.value(metadata i32 undef, metadata !7128, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7143
  br label %for.cond, !dbg !7155, !llvm.loop !7156

for.end:                                          ; preds = %for.cond
  %indvars.iv4.lcssa = phi i64 [ %indvars.iv4, %for.cond ], !dbg !7148
  call void @llvm.dbg.value(metadata i64 %indvars.iv4.lcssa, metadata !7128, metadata !DIExpression()), !dbg !7143
  call void @llvm.va_end(i8* nonnull %4), !dbg !7158
  call void @llvm.dbg.value(metadata i32 %skip, metadata !7131, metadata !DIExpression()), !dbg !7143
  %14 = and i64 %indvars.iv4.lcssa, 4294967295, !dbg !7159
  %15 = sext i32 %skip to i64, !dbg !7159
  %16 = sext i32 %sub to i64, !dbg !7159
  br label %for.cond14, !dbg !7159

for.cond14:                                       ; preds = %for.body17, %for.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body17 ], [ %15, %for.end ], !dbg !7143
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body17 ], [ %14, %for.end ], !dbg !7143
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !7131, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7128, metadata !DIExpression()), !dbg !7143
  %cmp15 = icmp slt i64 %indvars.iv1, %16, !dbg !7161
  br i1 %cmp15, label %for.body17, label %for.end28, !dbg !7163

for.body17:                                       ; preds = %for.cond14
  %17 = add nsw i64 %indvars.iv1, 3, !dbg !7164
  %arrayidx22 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 %17, !dbg !7164
  %18 = bitcast %union.tree_node** %arrayidx22 to i64*, !dbg !7164
  %19 = load i64, i64* %18, align 8, !dbg !7164
  %arrayidx24 = getelementptr inbounds %union.tree_node*, %union.tree_node** %5, i64 %indvars.iv, !dbg !7165
  %20 = bitcast %union.tree_node** %arrayidx24 to i64*, !dbg !7166
  store i64 %19, i64* %20, align 8, !dbg !7166
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, 1, !dbg !7167
  call void @llvm.dbg.value(metadata i32 undef, metadata !7131, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7143
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7168
  call void @llvm.dbg.value(metadata i32 undef, metadata !7128, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7143
  br label %for.cond14, !dbg !7169, !llvm.loop !7170

for.end28:                                        ; preds = %for.cond14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #6, !dbg !7172
  call void @llvm.dbg.value(metadata %union.tree_node** %5, metadata !7127, metadata !DIExpression()), !dbg !7133
  %type34 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7173
  %21 = load %union.tree_node*, %union.tree_node** %type34, align 8, !dbg !7173
  %call35 = call %union.tree_node* @build_call_array_loc(i32 %loc, %union.tree_node* %21, %union.tree_node* %call4, i32 %add, %union.tree_node** nonnull %5) #7, !dbg !7174
  %call36 = call %union.tree_node* @fold(%union.tree_node* %call35) #7, !dbg !7175
  ret %union.tree_node* %call36, !dbg !7176
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @gimple_fold_builtin_snprintf_chk(%union.gimple_statement_d* %stmt, %union.tree_node* %maxlen, i32 %fcode) local_unnamed_addr #5 !dbg !7177 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7181, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen, metadata !7182, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.value(metadata i32 %fcode, metadata !7183, metadata !DIExpression()), !dbg !7191
  %call = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #8, !dbg !7192
  %cmp = icmp ult i32 %call, 5, !dbg !7194
  br i1 %cmp, label %cleanup, label %if.end, !dbg !7195

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #8, !dbg !7196
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !7184, metadata !DIExpression()), !dbg !7191
  %call2 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call1, i32 10) #8, !dbg !7197
  %tobool = icmp eq i8 %call2, 0, !dbg !7197
  br i1 %tobool, label %cleanup, label %if.end4, !dbg !7199

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 1) #8, !dbg !7200
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !7186, metadata !DIExpression()), !dbg !7191
  %call6 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call5, i32 8) #8, !dbg !7201
  %tobool7 = icmp eq i8 %call6, 0, !dbg !7201
  br i1 %tobool7, label %cleanup, label %if.end9, !dbg !7203

if.end9:                                          ; preds = %if.end4
  %call10 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 2) #8, !dbg !7204
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !7189, metadata !DIExpression()), !dbg !7191
  %call11 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call10, i32 8) #8, !dbg !7205
  %tobool12 = icmp eq i8 %call11, 0, !dbg !7205
  br i1 %tobool12, label %cleanup, label %if.end14, !dbg !7207

if.end14:                                         ; preds = %if.end9
  %call15 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 3) #8, !dbg !7208
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !7185, metadata !DIExpression()), !dbg !7191
  %call16 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call15, i32 8) #8, !dbg !7209
  %tobool17 = icmp eq i8 %call16, 0, !dbg !7209
  br i1 %tobool17, label %cleanup, label %if.end19, !dbg !7211

if.end19:                                         ; preds = %if.end14
  %call20 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 4) #8, !dbg !7212
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !7188, metadata !DIExpression()), !dbg !7191
  %call21 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call20, i32 10) #8, !dbg !7213
  %tobool22 = icmp eq i8 %call21, 0, !dbg !7213
  br i1 %tobool22, label %cleanup, label %if.end24, !dbg !7215

if.end24:                                         ; preds = %if.end19
  %call25 = tail call i32 @host_integerp(%union.tree_node* %call15, i32 1) #7, !dbg !7216
  %tobool26 = icmp eq i32 %call25, 0, !dbg !7216
  br i1 %tobool26, label %cleanup, label %if.end28, !dbg !7218

if.end28:                                         ; preds = %if.end24
  %call29 = tail call i32 @integer_all_onesp(%union.tree_node* %call15) #7, !dbg !7219
  %tobool30 = icmp eq i32 %call29, 0, !dbg !7219
  br i1 %tobool30, label %if.then31, label %if.end45, !dbg !7221

if.then31:                                        ; preds = %if.end28
  %call32 = tail call i32 @host_integerp(%union.tree_node* %call5, i32 1) #7, !dbg !7222
  %tobool33 = icmp eq i32 %call32, 0, !dbg !7222
  br i1 %tobool33, label %if.then34, label %if.end40, !dbg !7225

if.then34:                                        ; preds = %if.then31
  %cmp35 = icmp eq %union.tree_node* %maxlen, null, !dbg !7226
  br i1 %cmp35, label %cleanup, label %lor.lhs.false, !dbg !7229

lor.lhs.false:                                    ; preds = %if.then34
  %call36 = tail call i32 @host_integerp(%union.tree_node* nonnull %maxlen, i32 1) #7, !dbg !7230
  %tobool37 = icmp eq i32 %call36, 0, !dbg !7230
  br i1 %tobool37, label %cleanup, label %if.end40, !dbg !7231

if.end40:                                         ; preds = %lor.lhs.false, %if.then31
  %maxlen.addr.0 = phi %union.tree_node* [ %maxlen, %lor.lhs.false ], [ %call5, %if.then31 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %maxlen.addr.0, metadata !7182, metadata !DIExpression()), !dbg !7191
  %call41 = tail call i32 @tree_int_cst_lt(%union.tree_node* %call15, %union.tree_node* %maxlen.addr.0) #7, !dbg !7232
  %tobool42 = icmp eq i32 %call41, 0, !dbg !7232
  br i1 %tobool42, label %if.end45, label %cleanup, !dbg !7234

if.end45:                                         ; preds = %if.end40, %if.end28
  %call46 = tail call fastcc zeroext i8 @init_target_chars() #8, !dbg !7235
  %tobool47 = icmp eq i8 %call46, 0, !dbg !7235
  br i1 %tobool47, label %cleanup, label %if.end49, !dbg !7237

if.end49:                                         ; preds = %if.end45
  %call50 = tail call i32 @integer_zerop(%union.tree_node* %call10) #7, !dbg !7238
  %tobool51 = icmp eq i32 %call50, 0, !dbg !7238
  br i1 %tobool51, label %if.then52, label %if.end64, !dbg !7240

if.then52:                                        ; preds = %if.end49
  %call53 = tail call fastcc i8* @c_getstr(%union.tree_node* %call20) #8, !dbg !7241
  call void @llvm.dbg.value(metadata i8* %call53, metadata !7190, metadata !DIExpression()), !dbg !7191
  %cmp54 = icmp eq i8* %call53, null, !dbg !7243
  br i1 %cmp54, label %cleanup, label %if.end56, !dbg !7245

if.end56:                                         ; preds = %if.then52
  %0 = load i64, i64* @target_percent, align 8, !dbg !7246
  %conv = trunc i64 %0 to i32, !dbg !7246
  %call57 = tail call i8* @strchr(i8* nonnull %call53, i32 %conv) #7, !dbg !7248
  %cmp58 = icmp eq i8* %call57, null, !dbg !7249
  br i1 %cmp58, label %if.end64, label %land.lhs.true, !dbg !7250

land.lhs.true:                                    ; preds = %if.end56
  %call60 = tail call i32 @strcmp(i8* nonnull %call53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !7251
  %tobool61 = icmp eq i32 %call60, 0, !dbg !7251
  br i1 %tobool61, label %if.end64, label %cleanup, !dbg !7252

if.end64:                                         ; preds = %land.lhs.true, %if.end56, %if.end49
  %cmp65 = icmp eq i32 %fcode, 540, !dbg !7253
  %cond = select i1 %cmp65, i64 379, i64 372, !dbg !7254
  %arrayidx = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %cond, !dbg !7255
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7255
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7187, metadata !DIExpression()), !dbg !7191
  %tobool67 = icmp eq %union.tree_node* %1, null, !dbg !7256
  br i1 %tobool67, label %cleanup, label %if.end69, !dbg !7258

if.end69:                                         ; preds = %if.end64
  %call70 = tail call %union.tree_node* (%union.gimple_statement_d*, i32, %union.tree_node*, i32, ...) @gimple_rewrite_call_expr(%union.gimple_statement_d* %stmt, i32 5, %union.tree_node* nonnull %1, i32 3, %union.tree_node* %call1, %union.tree_node* %call5, %union.tree_node* %call20) #8, !dbg !7259
  br label %cleanup, !dbg !7260

cleanup:                                          ; preds = %land.lhs.true, %if.end64, %if.end45, %if.end40, %lor.lhs.false, %if.end24, %if.end19, %if.end14, %if.end9, %if.end4, %if.end, %if.then52, %if.then34, %entry, %if.end69
  %retval.0 = phi %union.tree_node* [ %call70, %if.end69 ], [ null, %entry ], [ null, %if.end ], [ null, %if.end4 ], [ null, %if.end9 ], [ null, %if.end14 ], [ null, %if.end19 ], [ null, %if.end24 ], [ null, %lor.lhs.false ], [ null, %if.then34 ], [ null, %if.end40 ], [ null, %if.end45 ], [ null, %if.then52 ], [ null, %land.lhs.true ], [ null, %if.end64 ], !dbg !7191
  ret %union.tree_node* %retval.0, !dbg !7261
}

; Function Attrs: nounwind uwtable
define internal %union.tree_node* @gimple_rewrite_call_expr(%union.gimple_statement_d* %stmt, i32 %skip, %union.tree_node* %fndecl, i32 %n, ...) unnamed_addr #5 !dbg !7262 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7266, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.value(metadata i32 %skip, metadata !7267, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7268, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.value(metadata i32 %n, metadata !7269, metadata !DIExpression()), !dbg !7279
  %call = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #8, !dbg !7280
  call void @llvm.dbg.value(metadata i32 %call, metadata !7270, metadata !DIExpression()), !dbg !7279
  %sub = sub nsw i32 %call, %skip, !dbg !7281
  %add = add nsw i32 %sub, %n, !dbg !7282
  call void @llvm.dbg.value(metadata i32 %add, metadata !7271, metadata !DIExpression()), !dbg !7279
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7283
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7283
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !7272, metadata !DIExpression()), !dbg !7279
  %call1 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %0) #7, !dbg !7284
  %call2 = tail call %union.tree_node* @build1_stat(i32 121, %union.tree_node* %call1, %union.tree_node* %fndecl) #7, !dbg !7284
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7273, metadata !DIExpression()), !dbg !7279
  %1 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !7285
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1) #6, !dbg !7285
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %ap, metadata !7277, metadata !DIExpression()), !dbg !7286
  %call3 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #8, !dbg !7287
  call void @llvm.dbg.value(metadata i32 %call3, metadata !7278, metadata !DIExpression()), !dbg !7279
  %conv = sext i32 %add to i64, !dbg !7288
  %2 = alloca %union.tree_node*, i64 %conv, align 16, !dbg !7288
  call void @llvm.dbg.value(metadata %union.tree_node** %2, metadata !7274, metadata !DIExpression()), !dbg !7279
  call void @llvm.va_start(i8* %1), !dbg !7289
  call void @llvm.dbg.value(metadata i32 0, metadata !7275, metadata !DIExpression()), !dbg !7279
  %gp_offset_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !7290
  %overflow_arg_area_p = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !7290
  %3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !7290
  %4 = sext i32 %n to i64, !dbg !7293
  br label %for.cond, !dbg !7293

for.cond:                                         ; preds = %vaarg.end, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %vaarg.end ], [ 0, %entry ], !dbg !7294
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !7275, metadata !DIExpression()), !dbg !7279
  %cmp = icmp slt i64 %indvars.iv1, %4, !dbg !7295
  br i1 %cmp, label %for.body, label %for.end, !dbg !7296

for.body:                                         ; preds = %for.cond
  %gp_offset = load i32, i32* %gp_offset_p, align 16, !dbg !7297
  %fits_in_gp = icmp ult i32 %gp_offset, 41, !dbg !7297
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem, !dbg !7297

vaarg.in_reg:                                     ; preds = %for.body
  %reg_save_area = load i8*, i8** %3, align 16, !dbg !7297
  %5 = sext i32 %gp_offset to i64, !dbg !7297
  %6 = getelementptr i8, i8* %reg_save_area, i64 %5, !dbg !7297
  %7 = add i32 %gp_offset, 8, !dbg !7297
  store i32 %7, i32* %gp_offset_p, align 16, !dbg !7297
  br label %vaarg.end, !dbg !7297

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8, !dbg !7297
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i64 8, !dbg !7297
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8, !dbg !7297
  br label %vaarg.end, !dbg !7297

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr.in = phi i8* [ %6, %vaarg.in_reg ], [ %overflow_arg_area, %vaarg.in_mem ]
  %8 = bitcast i8* %vaarg.addr.in to i64*, !dbg !7297
  %9 = load i64, i64* %8, align 8, !dbg !7297
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %indvars.iv1, !dbg !7298
  %10 = bitcast %union.tree_node** %arrayidx to i64*, !dbg !7299
  store i64 %9, i64* %10, align 8, !dbg !7299
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !7300
  call void @llvm.dbg.value(metadata i32 undef, metadata !7275, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7279
  br label %for.cond, !dbg !7301, !llvm.loop !7302

for.end:                                          ; preds = %for.cond
  %indvars.iv1.lcssa = phi i64 [ %indvars.iv1, %for.cond ], !dbg !7294
  call void @llvm.dbg.value(metadata i64 %indvars.iv1.lcssa, metadata !7275, metadata !DIExpression()), !dbg !7279
  call void @llvm.va_end(i8* nonnull %1), !dbg !7304
  call void @llvm.dbg.value(metadata i32 %skip, metadata !7276, metadata !DIExpression()), !dbg !7279
  %11 = and i64 %indvars.iv1.lcssa, 4294967295, !dbg !7305
  br label %for.cond9, !dbg !7305

for.cond9:                                        ; preds = %for.body12, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body12 ], [ %11, %for.end ], !dbg !7279
  %j.0 = phi i32 [ %inc17, %for.body12 ], [ %skip, %for.end ], !dbg !7307
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !7276, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7275, metadata !DIExpression()), !dbg !7279
  %cmp10 = icmp slt i32 %j.0, %call, !dbg !7308
  br i1 %cmp10, label %for.body12, label %for.end19, !dbg !7310

for.body12:                                       ; preds = %for.cond9
  %call13 = call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %j.0) #8, !dbg !7311
  %arrayidx15 = getelementptr inbounds %union.tree_node*, %union.tree_node** %2, i64 %indvars.iv, !dbg !7312
  store %union.tree_node* %call13, %union.tree_node** %arrayidx15, align 8, !dbg !7313
  %inc17 = add nsw i32 %j.0, 1, !dbg !7314
  call void @llvm.dbg.value(metadata i32 %inc17, metadata !7276, metadata !DIExpression()), !dbg !7279
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7315
  call void @llvm.dbg.value(metadata i32 undef, metadata !7275, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7279
  br label %for.cond9, !dbg !7316, !llvm.loop !7317

for.end19:                                        ; preds = %for.cond9
  %type21 = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7319
  %12 = load %union.tree_node*, %union.tree_node** %type21, align 8, !dbg !7319
  %call22 = call %union.tree_node* @build_call_array_loc(i32 %call3, %union.tree_node* %12, %union.tree_node* %call2, i32 %add, %union.tree_node** nonnull %2) #7, !dbg !7320
  %call23 = call %union.tree_node* @fold(%union.tree_node* %call22) #7, !dbg !7321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1) #6, !dbg !7322
  ret %union.tree_node* %call23, !dbg !7323
}

; Function Attrs: nounwind uwtable
define dso_local %union.tree_node* @fold_call_stmt(%union.gimple_statement_d* %stmt, i8 zeroext %ignore) local_unnamed_addr #5 !dbg !7324 {
entry:
  %args = alloca [4 x %union.tree_node*], align 16
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7328, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !7329, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7330, metadata !DIExpression()), !dbg !7351
  %call = tail call fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %stmt) #8, !dbg !7352
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7331, metadata !DIExpression()), !dbg !7351
  %call1 = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %stmt) #8, !dbg !7353
  call void @llvm.dbg.value(metadata i32 %call1, metadata !7332, metadata !DIExpression()), !dbg !7351
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !7354
  br i1 %tobool, label %if.end94, label %land.lhs.true, !dbg !7355

land.lhs.true:                                    ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7356
  %bf.load = load i64, i64* %0, align 8, !dbg !7356
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !7357
  %cmp = icmp eq i64 %bf.cast2, 29, !dbg !7357
  br i1 %cmp, label %land.lhs.true2, label %if.end94, !dbg !7358

land.lhs.true2:                                   ; preds = %land.lhs.true
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !7359
  %bf.load3 = load i32, i32* %built_in_class, align 8, !dbg !7359
  %bf.clear4 = and i32 %bf.load3, 6144, !dbg !7359
  %cmp5 = icmp eq i32 %bf.clear4, 0, !dbg !7359
  br i1 %cmp5, label %if.end94, label %land.lhs.true6, !dbg !7360

land.lhs.true6:                                   ; preds = %land.lhs.true2
  %call7 = tail call fastcc zeroext i8 @gimple_call_va_arg_pack_p(%union.gimple_statement_d* %stmt) #8, !dbg !7361
  %tobool8 = icmp eq i8 %call7, 0, !dbg !7361
  br i1 %tobool8, label %if.then, label %if.end94, !dbg !7362

if.then:                                          ; preds = %land.lhs.true6
  %call9 = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #8, !dbg !7363
  call void @llvm.dbg.value(metadata i32 %call9, metadata !7333, metadata !DIExpression()), !dbg !7364
  %call10 = tail call fastcc zeroext i8 @avoid_folding_inline_builtin(%union.tree_node* nonnull %call) #8, !dbg !7365
  %tobool11 = icmp eq i8 %call10, 0, !dbg !7365
  br i1 %tobool11, label %if.end, label %cleanup, !dbg !7367

if.end:                                           ; preds = %if.then
  %bf.load15 = load i32, i32* %built_in_class, align 8, !dbg !7368
  %bf.clear17 = and i32 %bf.load15, 6144, !dbg !7368
  %cmp18 = icmp eq i32 %bf.clear17, 4096, !dbg !7369
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !7370

if.then19:                                        ; preds = %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7336, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i32 %call9, metadata !7339, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7371
  br label %for.cond, !dbg !7372

for.cond:                                         ; preds = %for.body, %if.then19
  %arglist.0 = phi %union.tree_node* [ null, %if.then19 ], [ %call22, %for.body ], !dbg !7371
  %i.0.in = phi i32 [ %call9, %if.then19 ], [ %i.0, %for.body ]
  %i.0 = add nsw i32 %i.0.in, -1, !dbg !7374
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7339, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0, metadata !7336, metadata !DIExpression()), !dbg !7371
  %cmp20 = icmp sgt i32 %i.0.in, 0, !dbg !7375
  br i1 %cmp20, label %for.body, label %for.end, !dbg !7377

for.body:                                         ; preds = %for.cond
  %call21 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %i.0) #8, !dbg !7378
  %call22 = tail call %union.tree_node* @tree_cons_stat(%union.tree_node* null, %union.tree_node* %call21, %union.tree_node* %arglist.0) #7, !dbg !7378
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !7336, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7339, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !7371
  br label %for.cond, !dbg !7379, !llvm.loop !7380

for.end:                                          ; preds = %for.cond
  %arglist.0.lcssa = phi %union.tree_node* [ %arglist.0, %for.cond ], !dbg !7371
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0.lcssa, metadata !7336, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0.lcssa, metadata !7336, metadata !DIExpression()), !dbg !7371
  call void @llvm.dbg.value(metadata %union.tree_node* %arglist.0.lcssa, metadata !7336, metadata !DIExpression()), !dbg !7371
  %1 = load %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 27), align 8, !dbg !7382
  %call23 = tail call %union.tree_node* %1(%union.tree_node* nonnull %call, %union.tree_node* %arglist.0.lcssa, i8 zeroext %ignore) #7, !dbg !7383
  br label %cleanup

if.else:                                          ; preds = %if.end
  %cmp24 = icmp slt i32 %call9, 5, !dbg !7384
  br i1 %cmp24, label %if.then25, label %if.end34, !dbg !7385

if.then25:                                        ; preds = %if.else
  %2 = bitcast [4 x %union.tree_node*]* %args to i8*, !dbg !7386
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #6, !dbg !7386
  call void @llvm.dbg.declare(metadata [4 x %union.tree_node*]* %args, metadata !7340, metadata !DIExpression()), !dbg !7387
  call void @llvm.dbg.value(metadata i32 0, metadata !7345, metadata !DIExpression()), !dbg !7388
  %3 = sext i32 %call9 to i64, !dbg !7389
  br label %for.cond27, !dbg !7389

for.cond27:                                       ; preds = %for.body29, %if.then25
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body29 ], [ 0, %if.then25 ], !dbg !7391
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !7345, metadata !DIExpression()), !dbg !7388
  %cmp28 = icmp slt i64 %indvars.iv, %3, !dbg !7392
  br i1 %cmp28, label %for.body29, label %for.end32, !dbg !7394

for.body29:                                       ; preds = %for.cond27
  %4 = trunc i64 %indvars.iv to i32, !dbg !7395
  %call30 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 %4) #8, !dbg !7395
  %arrayidx = getelementptr inbounds [4 x %union.tree_node*], [4 x %union.tree_node*]* %args, i64 0, i64 %indvars.iv, !dbg !7396
  store %union.tree_node* %call30, %union.tree_node** %arrayidx, align 8, !dbg !7397
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !7398
  call void @llvm.dbg.value(metadata i32 undef, metadata !7345, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !7388
  br label %for.cond27, !dbg !7399, !llvm.loop !7400

for.end32:                                        ; preds = %for.cond27
  %arraydecay = getelementptr inbounds [4 x %union.tree_node*], [4 x %union.tree_node*]* %args, i64 0, i64 0, !dbg !7402
  %call33 = call fastcc %union.tree_node* @fold_builtin_n(i32 %call1, %union.tree_node* nonnull %call, %union.tree_node** nonnull %arraydecay, i32 %call9, i8 zeroext %ignore) #8, !dbg !7403
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !7330, metadata !DIExpression()), !dbg !7351
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #6, !dbg !7404
  br label %if.end34, !dbg !7405

if.end34:                                         ; preds = %for.end32, %if.else
  %ret.0 = phi %union.tree_node* [ %call33, %for.end32 ], [ null, %if.else ], !dbg !7351
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.0, metadata !7330, metadata !DIExpression()), !dbg !7351
  %tobool35 = icmp eq %union.tree_node* %ret.0, null, !dbg !7406
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !7408

if.then36:                                        ; preds = %if.end34
  %call37 = call fastcc %union.tree_node* @gimple_fold_builtin_varargs(%union.tree_node* nonnull %call, %union.gimple_statement_d* %stmt, i8 zeroext %ignore) #8, !dbg !7409
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !7330, metadata !DIExpression()), !dbg !7351
  br label %if.end38, !dbg !7410

if.end38:                                         ; preds = %if.end34, %if.then36
  %ret.1 = phi %union.tree_node* [ %ret.0, %if.end34 ], [ %call37, %if.then36 ], !dbg !7411
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !7330, metadata !DIExpression()), !dbg !7351
  %tobool39 = icmp eq %union.tree_node* %ret.1, null, !dbg !7412
  br i1 %tobool39, label %cleanup, label %if.then40, !dbg !7413

if.then40:                                        ; preds = %if.end38
  %call41 = call fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %stmt) #8, !dbg !7414
  %tobool42 = icmp eq i8 %call41, 0, !dbg !7414
  br i1 %tobool42, label %cleanup, label %if.then43, !dbg !7415

if.then43:                                        ; preds = %if.then40
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !7346, metadata !DIExpression()), !dbg !7416
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7417
  %bf.load45 = load i64, i64* %5, align 8, !dbg !7417
  %bf.cast473 = and i64 %bf.load45, 65535, !dbg !7419
  %cmp48 = icmp eq i64 %bf.cast473, 116, !dbg !7419
  br i1 %cmp48, label %if.then49, label %if.end51, !dbg !7420

if.then49:                                        ; preds = %if.then43
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7421
  %6 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7421
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !7346, metadata !DIExpression()), !dbg !7416
  br label %if.end51, !dbg !7422

if.end51:                                         ; preds = %if.then49, %if.then43
  %realret.0 = phi %union.tree_node* [ %6, %if.then49 ], [ %ret.1, %if.then43 ], !dbg !7416
  call void @llvm.dbg.value(metadata %union.tree_node* %realret.0, metadata !7346, metadata !DIExpression()), !dbg !7416
  %tobool52 = icmp eq %union.tree_node* %realret.0, null, !dbg !7423
  br i1 %tobool52, label %cleanup, label %land.lhs.true53, !dbg !7423

land.lhs.true53:                                  ; preds = %if.end51
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %realret.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7423
  %bf.load55 = load i64, i64* %7, align 8, !dbg !7423
  %bf.cast57 = and i64 %bf.load55, 65535, !dbg !7423
  %arrayidx59 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast57, !dbg !7423
  %8 = load i32, i32* %arrayidx59, align 4, !dbg !7423
  %cmp60 = icmp ugt i32 %8, 3, !dbg !7423
  br i1 %cmp60, label %land.lhs.true61, label %cleanup, !dbg !7423

land.lhs.true61:                                  ; preds = %land.lhs.true53
  %cmp68 = icmp ult i32 %8, 11, !dbg !7423
  br i1 %cmp68, label %land.lhs.true69, label %cleanup, !dbg !7425

land.lhs.true69:                                  ; preds = %land.lhs.true61
  br i1 true, label %land.lhs.true77, label %land.lhs.true69.cond.end_crit_edge, !dbg !7426

land.lhs.true69.cond.end_crit_edge:               ; preds = %land.lhs.true69
  br label %cond.end, !dbg !7426

land.lhs.true77:                                  ; preds = %land.lhs.true69
  br i1 true, label %cond.true, label %land.lhs.true77.cond.end_crit_edge, !dbg !7426

land.lhs.true77.cond.end_crit_edge:               ; preds = %land.lhs.true77
  br label %cond.end, !dbg !7426

cond.true:                                        ; preds = %land.lhs.true77
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %realret.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7426
  %10 = load i32, i32* %9, align 8, !dbg !7426
  %phitmp = icmp ne i32 %10, 0, !dbg !7426
  br label %cond.end, !dbg !7426

cond.end:                                         ; preds = %land.lhs.true77.cond.end_crit_edge, %land.lhs.true69.cond.end_crit_edge, %cond.true
  %cond = phi i1 [ %phitmp, %cond.true ], [ undef, %land.lhs.true77.cond.end_crit_edge ], [ undef, %land.lhs.true69.cond.end_crit_edge ]
  br i1 %cond, label %cleanup, label %if.then87, !dbg !7427

if.then87:                                        ; preds = %cond.end
  %11 = getelementptr inbounds %union.tree_node, %union.tree_node* %realret.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !7428
  store i32 %call1, i32* %11, align 8, !dbg !7428
  br label %cleanup, !dbg !7428

cleanup:                                          ; preds = %if.end51, %if.then40, %if.end38, %if.then, %land.lhs.true53, %land.lhs.true61, %cond.end, %if.then87, %for.end
  %cleanup.dest.slot.0 = phi i1 [ false, %for.end ], [ false, %if.then ], [ false, %if.then87 ], [ false, %cond.end ], [ false, %land.lhs.true61 ], [ false, %land.lhs.true53 ], [ false, %if.end51 ], [ false, %if.then40 ], [ true, %if.end38 ]
  %retval.0 = phi %union.tree_node* [ %call23, %for.end ], [ null, %if.then ], [ %realret.0, %if.then87 ], [ %realret.0, %cond.end ], [ %realret.0, %land.lhs.true61 ], [ %realret.0, %land.lhs.true53 ], [ null, %if.end51 ], [ %ret.1, %if.then40 ], [ undef, %if.end38 ]
  br i1 %cleanup.dest.slot.0, label %if.end94, label %cleanup95

if.end94:                                         ; preds = %land.lhs.true6, %land.lhs.true2, %entry, %cleanup, %land.lhs.true
  br label %cleanup95, !dbg !7429

cleanup95:                                        ; preds = %cleanup, %if.end94
  %retval.1 = phi %union.tree_node* [ null, %if.end94 ], [ %retval.0, %cleanup ], !dbg !7351
  ret %union.tree_node* %retval.1, !dbg !7430
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fndecl(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !7431 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !7435, metadata !DIExpression()), !dbg !7437
  %call = tail call fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) #8, !dbg !7438
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7436, metadata !DIExpression()), !dbg !7437
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7439
  %bf.load = load i64, i64* %0, align 8, !dbg !7439
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7441
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !7441
  br i1 %cmp, label %if.then, label %cleanup, !dbg !7442

if.then:                                          ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7443
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7443
  br label %cleanup, !dbg !7444

cleanup:                                          ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %1, %if.then ], [ null, %entry ], !dbg !7437
  ret %union.tree_node* %retval.0, !dbg !7445
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7446 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7450, metadata !DIExpression()), !dbg !7451
  %location = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 2, !dbg !7452
  %0 = load i32, i32* %location, align 8, !dbg !7452
  ret i32 %0, !dbg !7453
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_call_va_arg_pack_p(%union.gimple_statement_d* %s) unnamed_addr #0 !dbg !7454 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %s, metadata !7458, metadata !DIExpression()), !dbg !7459
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %s, i64 0, i32 0, i32 0, i32 0, !dbg !7460
  %bf.load = load i32, i32* %0, align 8, !dbg !7460
  %and = lshr i32 %bf.load, 20, !dbg !7461
  %1 = trunc i32 %and to i8, !dbg !7461
  %2 = and i8 %1, 1, !dbg !7461
  ret i8 %2, !dbg !7462
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @gimple_fold_builtin_varargs(%union.tree_node* %fndecl, %union.gimple_statement_d* %stmt, i8 zeroext %ignore) unnamed_addr #5 !dbg !7463 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7467, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !7468, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !7469, metadata !DIExpression()), !dbg !7472
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !7473
  %bf.load = load i32, i32* %function_code, align 8, !dbg !7473
  %bf.clear = and i32 %bf.load, 2047, !dbg !7473
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7470, metadata !DIExpression()), !dbg !7472
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !7471, metadata !DIExpression()), !dbg !7472
  switch i32 %bf.clear, label %sw.epilog [
    i32 539, label %sw.bb
    i32 541, label %sw.bb
    i32 538, label %sw.bb1
    i32 540, label %sw.bb1
  ], !dbg !7474

sw.bb:                                            ; preds = %entry, %entry
  %call = tail call fastcc %union.tree_node* @gimple_fold_builtin_sprintf_chk(%union.gimple_statement_d* %stmt, i32 %bf.clear) #8, !dbg !7475
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7471, metadata !DIExpression()), !dbg !7472
  br label %sw.epilog, !dbg !7477

sw.bb1:                                           ; preds = %entry, %entry
  %call2 = tail call %union.tree_node* @gimple_fold_builtin_snprintf_chk(%union.gimple_statement_d* %stmt, %union.tree_node* null, i32 %bf.clear) #8, !dbg !7478
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !7471, metadata !DIExpression()), !dbg !7472
  br label %sw.epilog, !dbg !7479

sw.epilog:                                        ; preds = %sw.bb1, %entry, %sw.bb
  %ret.1 = phi %union.tree_node* [ %call, %sw.bb ], [ null, %entry ], [ %call2, %sw.bb1 ], !dbg !7472
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.1, metadata !7471, metadata !DIExpression()), !dbg !7472
  %tobool = icmp eq %union.tree_node* %ret.1, null, !dbg !7480
  br i1 %tobool, label %cleanup, label %if.then, !dbg !7482

if.then:                                          ; preds = %sw.epilog
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7483
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7483
  %call3 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %0, %union.tree_node* nonnull %ret.1) #7, !dbg !7483
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !7471, metadata !DIExpression()), !dbg !7472
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7485
  %bf.load4 = load i64, i64* %1, align 8, !dbg !7486
  %bf.set = or i64 %bf.load4, 8388608, !dbg !7486
  store i64 %bf.set, i64* %1, align 8, !dbg !7486
  br label %cleanup, !dbg !7487

cleanup:                                          ; preds = %sw.epilog, %if.then
  %retval.0 = phi %union.tree_node* [ %call3, %if.then ], [ null, %sw.epilog ], !dbg !7472
  ret %union.tree_node* %retval.0, !dbg !7488
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_location(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !7489 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !7493, metadata !DIExpression()), !dbg !7494
  %call = tail call fastcc i32 @gimple_location(%union.gimple_statement_d* %g) #8, !dbg !7495
  %cmp = icmp ne i32 %call, 0, !dbg !7496
  %conv1 = zext i1 %cmp to i8, !dbg !7495
  ret i8 %conv1, !dbg !7497
}

; Function Attrs: nounwind uwtable
define dso_local void @set_builtin_user_assembler_name(%union.tree_node* %decl, i8* %asmspec) local_unnamed_addr #5 !dbg !7498 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %decl, metadata !7502, metadata !DIExpression()), !dbg !7505
  call void @llvm.dbg.value(metadata i8* %asmspec, metadata !7503, metadata !DIExpression()), !dbg !7505
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7506
  %bf.load = load i64, i64* %0, align 8, !dbg !7506
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7506
  %cmp = icmp eq i64 %bf.cast1, 29, !dbg !7506
  br i1 %cmp, label %land.lhs.true, label %cond.true, !dbg !7506

land.lhs.true:                                    ; preds = %entry
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !7506
  %bf.load1 = load i32, i32* %built_in_class, align 8, !dbg !7506
  %bf.clear2 = and i32 %bf.load1, 6144, !dbg !7506
  %cmp3 = icmp eq i32 %bf.clear2, 6144, !dbg !7506
  %cmp5 = icmp ne i8* %asmspec, null, !dbg !7506
  %or.cond = and i1 %cmp3, %cmp5, !dbg !7506
  br i1 %or.cond, label %cond.end, label %cond.true, !dbg !7506

cond.true:                                        ; preds = %land.lhs.true, %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.724, i64 0, i64 0), i32 13869, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !7506
  %function_code.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !7505
  %bf.load7.pre = load i32, i32* %function_code.phi.trans.insert, align 8, !dbg !7507
  br label %cond.end, !dbg !7506

cond.end:                                         ; preds = %land.lhs.true, %cond.true
  %bf.load7 = phi i32 [ %bf.load1, %land.lhs.true ], [ %bf.load7.pre, %cond.true ], !dbg !7507
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %decl, i64 0, i32 0, i32 5, !dbg !7507
  %bf.clear8 = and i32 %bf.load7, 2047, !dbg !7507
  %idxprom = zext i32 %bf.clear8 to i64, !dbg !7508
  %arrayidx = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %idxprom, !dbg !7508
  %1 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !7508
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !7504, metadata !DIExpression()), !dbg !7505
  tail call void @set_user_assembler_name(%union.tree_node* %1, i8* %asmspec) #7, !dbg !7509
  %bf.load11 = load i32, i32* %function_code, align 8, !dbg !7510
  %bf.clear12 = and i32 %bf.load11, 2047, !dbg !7510
  switch i32 %bf.clear12, label %sw.epilog [
    i32 330, label %sw.bb
    i32 333, label %sw.bb13
    i32 331, label %sw.bb15
    i32 329, label %sw.bb17
    i32 412, label %sw.bb19
  ], !dbg !7511

sw.bb:                                            ; preds = %cond.end
  tail call void @init_block_move_fn(i8* %asmspec) #7, !dbg !7512
  %call = tail call %struct.rtx_def* @set_user_assembler_libfunc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.732, i64 0, i64 0), i8* %asmspec) #7, !dbg !7514
  store %struct.rtx_def* %call, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 1), align 8, !dbg !7515
  br label %sw.epilog, !dbg !7516

sw.bb13:                                          ; preds = %cond.end
  tail call void @init_block_clear_fn(i8* %asmspec) #7, !dbg !7517
  %call14 = tail call %struct.rtx_def* @set_user_assembler_libfunc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.733, i64 0, i64 0), i8* %asmspec) #7, !dbg !7518
  store %struct.rtx_def* %call14, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 4), align 16, !dbg !7519
  br label %sw.epilog, !dbg !7520

sw.bb15:                                          ; preds = %cond.end
  %call16 = tail call %struct.rtx_def* @set_user_assembler_libfunc(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.734, i64 0, i64 0), i8* %asmspec) #7, !dbg !7521
  store %struct.rtx_def* %call16, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 2), align 16, !dbg !7522
  br label %sw.epilog, !dbg !7523

sw.bb17:                                          ; preds = %cond.end
  %call18 = tail call %struct.rtx_def* @set_user_assembler_libfunc(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.735, i64 0, i64 0), i8* %asmspec) #7, !dbg !7524
  store %struct.rtx_def* %call18, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 3), align 8, !dbg !7525
  br label %sw.epilog, !dbg !7526

sw.bb19:                                          ; preds = %cond.end
  %call20 = tail call %struct.rtx_def* @set_user_assembler_libfunc(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.736, i64 0, i64 0), i8* %asmspec) #7, !dbg !7527
  store %struct.rtx_def* %call20, %struct.rtx_def** getelementptr inbounds ([14 x %struct.rtx_def*], [14 x %struct.rtx_def*]* @libfunc_table, i64 0, i64 0), align 16, !dbg !7528
  br label %sw.epilog, !dbg !7529

sw.epilog:                                        ; preds = %cond.end, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb
  ret void, !dbg !7530
}

declare dso_local void @set_user_assembler_name(%union.tree_node*, i8*) local_unnamed_addr #2

declare dso_local void @init_block_move_fn(i8*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @set_user_assembler_libfunc(i8*, i8*) local_unnamed_addr #2

declare dso_local void @init_block_clear_fn(i8*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @immed_double_const(i64, i64, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @expand_expr_real(%union.tree_node*, %struct.rtx_def*, i32, i32, %struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @init_call_expr_arg_iterator(%union.tree_node* %exp, %struct.call_expr_arg_iterator_d* %iter) unnamed_addr #0 !dbg !7531 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !7535, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.value(metadata %struct.call_expr_arg_iterator_d* %iter, metadata !7536, metadata !DIExpression()), !dbg !7537
  %t = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 0, !dbg !7538
  store %union.tree_node* %exp, %union.tree_node** %t, align 8, !dbg !7539
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7540
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !7540
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !7540
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !7540
  %2 = load i64, i64* %low, align 8, !dbg !7540
  %conv = trunc i64 %2 to i32, !dbg !7540
  %sub = add nsw i32 %conv, -3, !dbg !7540
  %n = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 1, !dbg !7541
  store i32 %sub, i32* %n, align 8, !dbg !7542
  %i = getelementptr inbounds %struct.call_expr_arg_iterator_d, %struct.call_expr_arg_iterator_d* %iter, i64 0, i32 2, !dbg !7543
  store i32 0, i32* %i, align 4, !dbg !7544
  ret void, !dbg !7545
}

declare dso_local %union.tree_node* @lookup_attribute(i8*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_0(i32 %loc, %union.tree_node* %fndecl, i8 zeroext %ignore) unnamed_addr #5 !dbg !7546 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7548, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7549, metadata !DIExpression()), !dbg !7553
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !7550, metadata !DIExpression()), !dbg !7553
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7554
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !7554
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !7554
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !7554
  %2 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !7554
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7551, metadata !DIExpression()), !dbg !7553
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !7555
  %bf.load = load i32, i32* %function_code, align 8, !dbg !7555
  %bf.clear = and i32 %bf.load, 2047, !dbg !7555
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7552, metadata !DIExpression()), !dbg !7553
  switch i32 %bf.clear, label %cleanup [
    i32 96, label %sw.bb
    i32 97, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
    i32 100, label %sw.bb
    i32 101, label %sw.bb
    i32 87, label %sw.bb4
    i32 88, label %sw.bb4
    i32 89, label %sw.bb4
    i32 423, label %sw.bb6
  ], !dbg !7556

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call = tail call fastcc %union.tree_node* @fold_builtin_inf(i32 %loc, %union.tree_node* %2, i32 1) #8, !dbg !7557
  br label %cleanup, !dbg !7559

sw.bb4:                                           ; preds = %entry, %entry, %entry
  %call5 = tail call fastcc %union.tree_node* @fold_builtin_inf(i32 %loc, %union.tree_node* %2, i32 0) #8, !dbg !7560
  br label %cleanup, !dbg !7561

sw.bb6:                                           ; preds = %entry
  %call7 = tail call fastcc %union.tree_node* @fold_builtin_classify_type(%union.tree_node* null) #8, !dbg !7562
  br label %cleanup, !dbg !7563

cleanup:                                          ; preds = %entry, %sw.bb6, %sw.bb4, %sw.bb
  %retval.0 = phi %union.tree_node* [ %call7, %sw.bb6 ], [ %call5, %sw.bb4 ], [ %call, %sw.bb ], [ null, %entry ], !dbg !7553
  ret %union.tree_node* %retval.0, !dbg !7564
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_1(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, i8 zeroext %ignore) unnamed_addr #5 !dbg !7565 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7567, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7568, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !7569, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !7570, metadata !DIExpression()), !dbg !7580
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7581
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !7581
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !7581
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !7581
  %2 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !7581
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7571, metadata !DIExpression()), !dbg !7580
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !7582
  %bf.load = load i32, i32* %function_code, align 8, !dbg !7582
  %bf.clear = and i32 %bf.load, 2047, !dbg !7582
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7572, metadata !DIExpression()), !dbg !7580
  switch i32 %bf.clear, label %cleanup178 [
    i32 428, label %sw.bb
    i32 423, label %sw.bb5
    i32 345, label %sw.bb7
    i32 57, label %sw.bb9
    i32 58, label %sw.bb9
    i32 59, label %sw.bb9
    i32 413, label %sw.bb11
    i32 488, label %sw.bb11
    i32 489, label %sw.bb11
    i32 458, label %sw.bb11
    i32 297, label %sw.bb13
    i32 298, label %sw.bb13
    i32 299, label %sw.bb13
    i32 306, label %sw.bb27
    i32 307, label %sw.bb27
    i32 308, label %sw.bb27
    i32 288, label %sw.bb46
    i32 289, label %sw.bb46
    i32 290, label %sw.bb46
    i32 276, label %sw.bb65
    i32 277, label %sw.bb65
    i32 281, label %sw.bb65
    i32 278, label %sw.bb67
    i32 279, label %sw.bb67
    i32 280, label %sw.bb67
    i32 377, label %sw.bb176
    i32 366, label %sw.bb176
    i32 365, label %sw.bb176
    i32 480, label %sw.bb174
    i32 479, label %sw.bb174
    i32 478, label %sw.bb174
    i32 477, label %sw.bb174
    i32 476, label %sw.bb174
    i32 475, label %sw.bb174
    i32 468, label %sw.bb172
    i32 481, label %sw.bb170
    i32 474, label %sw.bb162
    i32 473, label %sw.bb162
    i32 472, label %sw.bb162
    i32 471, label %sw.bb162
    i32 470, label %sw.bb162
    i32 469, label %sw.bb162
    i32 467, label %sw.bb156
    i32 465, label %sw.bb156
    i32 464, label %sw.bb156
    i32 463, label %sw.bb156
    i32 462, label %sw.bb156
    i32 461, label %sw.bb156
    i32 460, label %sw.bb156
    i32 387, label %sw.bb154
    i32 395, label %sw.bb152
    i32 384, label %sw.bb150
    i32 150, label %sw.bb148
    i32 149, label %sw.bb148
    i32 148, label %sw.bb148
    i32 95, label %sw.bb148
    i32 94, label %sw.bb148
    i32 93, label %sw.bb148
    i32 218, label %sw.bb146
    i32 217, label %sw.bb146
    i32 216, label %sw.bb146
    i32 252, label %sw.bb81
    i32 253, label %sw.bb81
    i32 254, label %sw.bb81
    i32 261, label %sw.bb83
    i32 262, label %sw.bb83
    i32 263, label %sw.bb83
    i32 228, label %sw.bb85
    i32 229, label %sw.bb85
    i32 230, label %sw.bb85
    i32 21, label %sw.bb87
    i32 22, label %sw.bb87
    i32 23, label %sw.bb87
    i32 212, label %sw.bb144
    i32 211, label %sw.bb144
    i32 210, label %sw.bb144
    i32 496, label %sw.bb142
    i32 495, label %sw.bb142
    i32 493, label %sw.bb142
    i32 500, label %sw.bb142
    i32 499, label %sw.bb142
    i32 497, label %sw.bb142
    i32 432, label %sw.bb142
    i32 431, label %sw.bb142
    i32 429, label %sw.bb142
    i32 427, label %sw.bb142
    i32 426, label %sw.bb142
    i32 424, label %sw.bb142
    i32 452, label %sw.bb142
    i32 451, label %sw.bb142
    i32 449, label %sw.bb142
    i32 420, label %sw.bb140
    i32 419, label %sw.bb140
    i32 134, label %sw.bb138
    i32 30, label %sw.bb96
    i32 31, label %sw.bb96
    i32 35, label %sw.bb96
    i32 231, label %sw.bb98
    i32 232, label %sw.bb98
    i32 236, label %sw.bb98
    i32 282, label %sw.bb100
    i32 283, label %sw.bb100
    i32 284, label %sw.bb100
    i32 133, label %sw.bb138
    i32 132, label %sw.bb138
    i32 155, label %sw.bb138
    i32 154, label %sw.bb138
    i32 153, label %sw.bb138
    i32 137, label %sw.bb136
    i32 32, label %sw.bb104
    i32 33, label %sw.bb104
    i32 34, label %sw.bb104
    i32 136, label %sw.bb136
    i32 135, label %sw.bb136
    i32 158, label %sw.bb136
    i32 157, label %sw.bb136
    i32 156, label %sw.bb136
    i32 131, label %sw.bb136
    i32 130, label %sw.bb136
    i32 129, label %sw.bb136
    i32 119, label %sw.bb136
    i32 118, label %sw.bb136
    i32 117, label %sw.bb136
    i32 128, label %sw.bb136
    i32 127, label %sw.bb136
    i32 126, label %sw.bb136
    i32 113, label %sw.bb136
    i32 112, label %sw.bb136
    i32 111, label %sw.bb136
    i32 197, label %sw.bb134
    i32 196, label %sw.bb134
    i32 195, label %sw.bb134
    i32 173, label %sw.bb134
    i32 172, label %sw.bb134
    i32 171, label %sw.bb134
    i32 200, label %sw.bb132
    i32 199, label %sw.bb132
    i32 198, label %sw.bb132
    i32 242, label %sw.bb130
    i32 241, label %sw.bb130
    i32 240, label %sw.bb130
    i32 26, label %sw.bb128
    i32 25, label %sw.bb128
    i32 24, label %sw.bb128
    i32 65, label %sw.bb126
    i32 64, label %sw.bb126
    i32 63, label %sw.bb126
    i32 170, label %sw.bb124
    i32 169, label %sw.bb124
    i32 168, label %sw.bb124
    i32 167, label %sw.bb122
    i32 166, label %sw.bb122
    i32 165, label %sw.bb122
    i32 164, label %sw.bb122
    i32 163, label %sw.bb122
    i32 162, label %sw.bb122
  ], !dbg !7583

sw.bb:                                            ; preds = %entry
  %call = tail call fastcc %union.tree_node* @fold_builtin_constant_p(%union.tree_node* %arg0) #8, !dbg !7584
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7573, metadata !DIExpression()), !dbg !7585
  %tobool = icmp ne %union.tree_node* %call, null, !dbg !7586
  %3 = load i32, i32* @optimize, align 4, !dbg !7588
  %tobool4 = icmp ne i32 %3, 0, !dbg !7588
  %or.cond = or i1 %tobool, %tobool4, !dbg !7589
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !7589
  %val.0 = select i1 %or.cond, %union.tree_node* %call, %union.tree_node* %4, !dbg !7589
  br label %cleanup178, !dbg !7589

sw.bb5:                                           ; preds = %entry
  %call6 = tail call fastcc %union.tree_node* @fold_builtin_classify_type(%union.tree_node* %arg0) #8, !dbg !7590
  br label %cleanup178, !dbg !7591

sw.bb7:                                           ; preds = %entry
  %call8 = tail call fastcc %union.tree_node* @fold_builtin_strlen(i32 %loc, %union.tree_node* %2, %union.tree_node* %arg0) #8, !dbg !7592
  br label %cleanup178, !dbg !7593

sw.bb9:                                           ; preds = %entry, %entry, %entry
  %call10 = tail call fastcc %union.tree_node* @fold_builtin_fabs(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7594
  br label %cleanup178, !dbg !7595

sw.bb11:                                          ; preds = %entry, %entry, %entry, %entry
  %call12 = tail call fastcc %union.tree_node* @fold_builtin_abs(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7596
  br label %cleanup178, !dbg !7597

sw.bb13:                                          ; preds = %entry, %entry, %entry
  %call14 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 13) #8, !dbg !7598
  %tobool15 = icmp eq i8 %call14, 0, !dbg !7598
  br i1 %tobool15, label %cleanup178, label %land.lhs.true16, !dbg !7600

land.lhs.true16:                                  ; preds = %sw.bb13
  %type18 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7601
  %5 = bitcast %union.tree_node** %type18 to %struct.tree_common**, !dbg !7601
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !7601
  %type20 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !7601
  %7 = bitcast %union.tree_node** %type20 to i64**, !dbg !7601
  %8 = load i64*, i64** %7, align 8, !dbg !7601
  %bf.load21 = load i64, i64* %8, align 8, !dbg !7601
  %bf.cast3 = and i64 %bf.load21, 65535, !dbg !7602
  %cmp = icmp eq i64 %bf.cast3, 9, !dbg !7602
  br i1 %cmp, label %if.then24, label %cleanup178, !dbg !7603

if.then24:                                        ; preds = %land.lhs.true16
  %call25 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 124, %union.tree_node* %2, %union.tree_node* %arg0) #7, !dbg !7604
  br label %cleanup178, !dbg !7605

sw.bb27:                                          ; preds = %entry, %entry, %entry
  %call28 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 13) #8, !dbg !7606
  %tobool30 = icmp eq i8 %call28, 0, !dbg !7606
  br i1 %tobool30, label %cleanup178, label %land.lhs.true31, !dbg !7608

land.lhs.true31:                                  ; preds = %sw.bb27
  %type33 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7609
  %9 = bitcast %union.tree_node** %type33 to %struct.tree_common**, !dbg !7609
  %10 = load %struct.tree_common*, %struct.tree_common** %9, align 8, !dbg !7609
  %type35 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %10, i64 0, i32 2, !dbg !7609
  %11 = bitcast %union.tree_node** %type35 to i64**, !dbg !7609
  %12 = load i64*, i64** %11, align 8, !dbg !7609
  %bf.load37 = load i64, i64* %12, align 8, !dbg !7609
  %bf.cast392 = and i64 %bf.load37, 65535, !dbg !7610
  %cmp40 = icmp eq i64 %bf.cast392, 9, !dbg !7610
  br i1 %cmp40, label %if.then42, label %cleanup178, !dbg !7611

if.then42:                                        ; preds = %land.lhs.true31
  %call43 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 43, %union.tree_node* %2, %union.tree_node* %arg0) #7, !dbg !7612
  %call44 = tail call %union.tree_node* @non_lvalue_loc(i32 %loc, %union.tree_node* %call43) #7, !dbg !7613
  br label %cleanup178, !dbg !7614

sw.bb46:                                          ; preds = %entry, %entry, %entry
  %call47 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 13) #8, !dbg !7615
  %tobool49 = icmp eq i8 %call47, 0, !dbg !7615
  br i1 %tobool49, label %cleanup178, label %land.lhs.true50, !dbg !7617

land.lhs.true50:                                  ; preds = %sw.bb46
  %type52 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7618
  %13 = bitcast %union.tree_node** %type52 to %struct.tree_common**, !dbg !7618
  %14 = load %struct.tree_common*, %struct.tree_common** %13, align 8, !dbg !7618
  %type54 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i64 0, i32 2, !dbg !7618
  %15 = bitcast %union.tree_node** %type54 to i64**, !dbg !7618
  %16 = load i64*, i64** %15, align 8, !dbg !7618
  %bf.load56 = load i64, i64* %16, align 8, !dbg !7618
  %bf.cast581 = and i64 %bf.load56, 65535, !dbg !7619
  %cmp59 = icmp eq i64 %bf.cast581, 9, !dbg !7619
  br i1 %cmp59, label %if.then61, label %cleanup178, !dbg !7620

if.then61:                                        ; preds = %land.lhs.true50
  %call62 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 44, %union.tree_node* %2, %union.tree_node* %arg0) #7, !dbg !7621
  %call63 = tail call %union.tree_node* @non_lvalue_loc(i32 %loc, %union.tree_node* %call62) #7, !dbg !7622
  br label %cleanup178, !dbg !7623

sw.bb65:                                          ; preds = %entry, %entry, %entry
  %call66 = tail call fastcc %union.tree_node* @fold_builtin_ccos(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2, %union.tree_node* %fndecl, i8 zeroext 0) #8, !dbg !7624
  br label %cleanup178, !dbg !7625

sw.bb67:                                          ; preds = %entry, %entry, %entry
  %call68 = tail call fastcc %union.tree_node* @fold_builtin_ccos(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2, %union.tree_node* %fndecl, i8 zeroext 1) #8, !dbg !7626
  br label %cleanup178, !dbg !7627

sw.bb81:                                          ; preds = %entry, %entry, %entry
  %call82 = tail call fastcc %union.tree_node* @fold_builtin_cabs(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2, %union.tree_node* %fndecl) #8, !dbg !7628
  br label %cleanup178, !dbg !7629

sw.bb83:                                          ; preds = %entry, %entry, %entry
  %call84 = tail call fastcc %union.tree_node* @fold_builtin_carg(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7630
  br label %cleanup178, !dbg !7631

sw.bb85:                                          ; preds = %entry, %entry, %entry
  %call86 = tail call fastcc %union.tree_node* @fold_builtin_sqrt(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7632
  br label %cleanup178, !dbg !7633

sw.bb87:                                          ; preds = %entry, %entry, %entry
  %call88 = tail call fastcc %union.tree_node* @fold_builtin_cbrt(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7634
  br label %cleanup178, !dbg !7635

sw.bb96:                                          ; preds = %entry, %entry, %entry
  %call97 = tail call fastcc %union.tree_node* @fold_builtin_cos(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2, %union.tree_node* %fndecl) #8, !dbg !7636
  br label %cleanup178, !dbg !7637

sw.bb98:                                          ; preds = %entry, %entry, %entry
  %call99 = tail call fastcc %union.tree_node* @fold_builtin_tan(%union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7638
  br label %cleanup178, !dbg !7639

sw.bb100:                                         ; preds = %entry, %entry, %entry
  %call101 = tail call fastcc %union.tree_node* @fold_builtin_cexp(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7640
  br label %cleanup178, !dbg !7641

sw.bb104:                                         ; preds = %entry, %entry, %entry
  %call105 = tail call fastcc %union.tree_node* @fold_builtin_cosh(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2, %union.tree_node* %fndecl) #8, !dbg !7642
  br label %cleanup178, !dbg !7643

sw.bb122:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call123 = tail call fastcc %union.tree_node* @fold_builtin_nan(%union.tree_node* %arg0, %union.tree_node* %2, i32 1) #8, !dbg !7644
  br label %cleanup178, !dbg !7645

sw.bb124:                                         ; preds = %entry, %entry, %entry
  %call125 = tail call fastcc %union.tree_node* @fold_builtin_nan(%union.tree_node* %arg0, %union.tree_node* %2, i32 0) #8, !dbg !7646
  br label %cleanup178, !dbg !7647

sw.bb126:                                         ; preds = %entry, %entry, %entry
  %call127 = tail call fastcc %union.tree_node* @fold_builtin_floor(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7648
  br label %cleanup178, !dbg !7649

sw.bb128:                                         ; preds = %entry, %entry, %entry
  %call129 = tail call fastcc %union.tree_node* @fold_builtin_ceil(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7650
  br label %cleanup178, !dbg !7651

sw.bb130:                                         ; preds = %entry, %entry, %entry
  %call131 = tail call fastcc %union.tree_node* @fold_builtin_trunc(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7652
  br label %cleanup178, !dbg !7653

sw.bb132:                                         ; preds = %entry, %entry, %entry
  %call133 = tail call fastcc %union.tree_node* @fold_builtin_round(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7654
  br label %cleanup178, !dbg !7655

sw.bb134:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call135 = tail call fastcc %union.tree_node* @fold_trunc_transparent_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7656
  br label %cleanup178, !dbg !7657

sw.bb136:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %call137 = tail call fastcc %union.tree_node* @fold_builtin_int_roundingfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7658
  br label %cleanup178, !dbg !7659

sw.bb138:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call139 = tail call fastcc %union.tree_node* @fold_fixed_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7660
  br label %cleanup178, !dbg !7661

sw.bb140:                                         ; preds = %entry, %entry
  %call141 = tail call fastcc %union.tree_node* @fold_builtin_bswap(%union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7662
  br label %cleanup178, !dbg !7663

sw.bb142:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %call143 = tail call fastcc %union.tree_node* @fold_builtin_bitop(%union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7664
  br label %cleanup178, !dbg !7665

sw.bb144:                                         ; preds = %entry, %entry, %entry
  %call145 = tail call fastcc %union.tree_node* @fold_builtin_signbit(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7666
  br label %cleanup178, !dbg !7667

sw.bb146:                                         ; preds = %entry, %entry, %entry
  %call147 = tail call fastcc %union.tree_node* @fold_builtin_significand(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7668
  br label %cleanup178, !dbg !7669

sw.bb148:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call149 = tail call fastcc %union.tree_node* @fold_builtin_logb(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %2) #8, !dbg !7670
  br label %cleanup178, !dbg !7671

sw.bb150:                                         ; preds = %entry
  %call151 = tail call fastcc %union.tree_node* @fold_builtin_isascii(i32 %loc, %union.tree_node* %arg0) #8, !dbg !7672
  br label %cleanup178, !dbg !7673

sw.bb152:                                         ; preds = %entry
  %call153 = tail call fastcc %union.tree_node* @fold_builtin_toascii(i32 %loc, %union.tree_node* %arg0) #8, !dbg !7674
  br label %cleanup178, !dbg !7675

sw.bb154:                                         ; preds = %entry
  %call155 = tail call fastcc %union.tree_node* @fold_builtin_isdigit(i32 %loc, %union.tree_node* %arg0) #8, !dbg !7676
  br label %cleanup178, !dbg !7677

sw.bb156:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %call157 = tail call fastcc %union.tree_node* @fold_builtin_classify(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, i32 467) #8, !dbg !7678
  call void @llvm.dbg.value(metadata %union.tree_node* %call157, metadata !7576, metadata !DIExpression()), !dbg !7679
  %tobool158 = icmp eq %union.tree_node* %call157, null, !dbg !7680
  br i1 %tobool158, label %if.end160, label %cleanup178, !dbg !7682

if.end160:                                        ; preds = %sw.bb156
  %call161 = tail call fastcc %union.tree_node* @fold_builtin_interclass_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7683
  br label %cleanup178, !dbg !7684

sw.bb162:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call164 = tail call fastcc %union.tree_node* @fold_builtin_classify(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, i32 469) #8, !dbg !7685
  call void @llvm.dbg.value(metadata %union.tree_node* %call164, metadata !7578, metadata !DIExpression()), !dbg !7686
  %tobool165 = icmp eq %union.tree_node* %call164, null, !dbg !7687
  br i1 %tobool165, label %if.end167, label %cleanup178, !dbg !7689

if.end167:                                        ; preds = %sw.bb162
  %call168 = tail call fastcc %union.tree_node* @fold_builtin_interclass_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7690
  br label %cleanup178, !dbg !7691

sw.bb170:                                         ; preds = %entry
  %call171 = tail call fastcc %union.tree_node* @fold_builtin_interclass_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0) #8, !dbg !7692
  br label %cleanup178, !dbg !7693

sw.bb172:                                         ; preds = %entry
  %call173 = tail call fastcc %union.tree_node* @fold_builtin_classify(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, i32 468) #8, !dbg !7694
  br label %cleanup178, !dbg !7695

sw.bb174:                                         ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call175 = tail call fastcc %union.tree_node* @fold_builtin_classify(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, i32 475) #8, !dbg !7696
  br label %cleanup178, !dbg !7697

sw.bb176:                                         ; preds = %entry, %entry, %entry
  %call177 = tail call fastcc %union.tree_node* @fold_builtin_printf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* null, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7698
  br label %cleanup178, !dbg !7699

cleanup178:                                       ; preds = %sw.bb13, %sw.bb27, %sw.bb46, %sw.bb162, %sw.bb156, %land.lhs.true16, %land.lhs.true31, %land.lhs.true50, %entry, %if.end167, %if.end160, %sw.bb, %sw.bb176, %sw.bb174, %sw.bb172, %sw.bb170, %sw.bb154, %sw.bb152, %sw.bb150, %sw.bb148, %sw.bb146, %sw.bb144, %sw.bb142, %sw.bb140, %sw.bb138, %sw.bb136, %sw.bb134, %sw.bb132, %sw.bb130, %sw.bb128, %sw.bb126, %sw.bb124, %sw.bb122, %sw.bb104, %sw.bb100, %sw.bb98, %sw.bb96, %sw.bb87, %sw.bb85, %sw.bb83, %sw.bb81, %sw.bb67, %sw.bb65, %if.then61, %if.then42, %if.then24, %sw.bb11, %sw.bb9, %sw.bb7, %sw.bb5
  %retval.2 = phi %union.tree_node* [ %call177, %sw.bb176 ], [ %call175, %sw.bb174 ], [ %call173, %sw.bb172 ], [ %call171, %sw.bb170 ], [ %call155, %sw.bb154 ], [ %call153, %sw.bb152 ], [ %call151, %sw.bb150 ], [ %call149, %sw.bb148 ], [ %call147, %sw.bb146 ], [ %call145, %sw.bb144 ], [ %call143, %sw.bb142 ], [ %call141, %sw.bb140 ], [ %call139, %sw.bb138 ], [ %call137, %sw.bb136 ], [ %call135, %sw.bb134 ], [ %call133, %sw.bb132 ], [ %call131, %sw.bb130 ], [ %call129, %sw.bb128 ], [ %call127, %sw.bb126 ], [ %call125, %sw.bb124 ], [ %call123, %sw.bb122 ], [ null, %sw.bb104 ], [ null, %sw.bb100 ], [ null, %sw.bb98 ], [ null, %sw.bb96 ], [ null, %sw.bb87 ], [ null, %sw.bb85 ], [ %call84, %sw.bb83 ], [ null, %sw.bb81 ], [ null, %sw.bb67 ], [ null, %sw.bb65 ], [ %call63, %if.then61 ], [ %call44, %if.then42 ], [ %call25, %if.then24 ], [ %call12, %sw.bb11 ], [ %call10, %sw.bb9 ], [ %call8, %sw.bb7 ], [ %call6, %sw.bb5 ], [ %val.0, %sw.bb ], [ %call161, %if.end160 ], [ %call157, %sw.bb156 ], [ %call168, %if.end167 ], [ %call164, %sw.bb162 ], [ null, %entry ], [ null, %sw.bb46 ], [ null, %land.lhs.true50 ], [ null, %sw.bb27 ], [ null, %land.lhs.true31 ], [ null, %sw.bb13 ], [ null, %land.lhs.true16 ], !dbg !7580
  ret %union.tree_node* %retval.2, !dbg !7700
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_2(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, i8 zeroext %ignore) unnamed_addr #5 !dbg !7701 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7705, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7706, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !7707, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !7708, metadata !DIExpression()), !dbg !7716
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !7709, metadata !DIExpression()), !dbg !7716
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7717
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !7717
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !7717
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !7717
  %2 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !7717
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7710, metadata !DIExpression()), !dbg !7716
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !7718
  %bf.load = load i32, i32* %function_code, align 8, !dbg !7718
  %bf.clear = and i32 %bf.load, 2047, !dbg !7718
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7711, metadata !DIExpression()), !dbg !7716
  switch i32 %bf.clear, label %sw.epilog [
    i32 108, label %cleanup89
    i32 109, label %cleanup89
    i32 110, label %cleanup89
    i32 249, label %cleanup89
    i32 250, label %cleanup89
    i32 251, label %cleanup89
    i32 36, label %cleanup89
    i32 37, label %cleanup89
    i32 38, label %cleanup89
    i32 189, label %cleanup89
    i32 190, label %cleanup89
    i32 191, label %cleanup89
    i32 84, label %cleanup89
    i32 85, label %cleanup89
    i32 86, label %cleanup89
    i32 123, label %cleanup89
    i32 124, label %cleanup89
    i32 125, label %cleanup89
    i32 13, label %cleanup89
    i32 14, label %cleanup89
    i32 15, label %cleanup89
    i32 60, label %cleanup89
    i32 61, label %cleanup89
    i32 62, label %cleanup89
    i32 90, label %sw.bb9
    i32 91, label %sw.bb9
    i32 92, label %sw.bb9
    i32 300, label %cleanup89
    i32 301, label %cleanup89
    i32 302, label %cleanup89
    i32 114, label %sw.bb11
    i32 115, label %sw.bb11
    i32 116, label %sw.bb11
    i32 207, label %sw.bb13
    i32 208, label %sw.bb13
    i32 209, label %sw.bb13
    i32 204, label %sw.bb13
    i32 205, label %sw.bb13
    i32 206, label %sw.bb13
    i32 78, label %sw.bb15
    i32 79, label %sw.bb15
    i32 80, label %sw.bb15
    i32 159, label %sw.bb17
    i32 160, label %sw.bb17
    i32 161, label %sw.bb17
    i32 326, label %sw.bb19
    i32 360, label %sw.bb21
    i32 361, label %sw.bb23
    i32 353, label %sw.bb25
    i32 338, label %sw.bb27
    i32 352, label %sw.bb29
    i32 342, label %sw.bb31
    i32 339, label %sw.bb33
    i32 327, label %sw.bb33
    i32 351, label %sw.bb35
    i32 334, label %sw.bb35
    i32 341, label %sw.bb37
    i32 335, label %sw.bb39
    i32 340, label %sw.bb44
    i32 350, label %sw.bb46
    i32 446, label %sw.bb48
    i32 180, label %sw.bb50
    i32 184, label %sw.bb50
    i32 188, label %sw.bb50
    i32 185, label %sw.bb52
    i32 186, label %sw.bb52
    i32 187, label %sw.bb52
    i32 27, label %sw.bb54
    i32 28, label %sw.bb54
    i32 29, label %sw.bb54
    i32 72, label %sw.bb56
    i32 73, label %sw.bb56
    i32 74, label %sw.bb56
    i32 69, label %sw.bb58
    i32 70, label %sw.bb58
    i32 71, label %sw.bb58
    i32 482, label %sw.bb60
    i32 483, label %sw.bb62
    i32 484, label %sw.bb64
    i32 485, label %sw.bb66
    i32 486, label %sw.bb68
    i32 487, label %sw.bb70
    i32 375, label %sw.bb87
    i32 373, label %sw.bb72
    i32 528, label %sw.bb74
    i32 365, label %sw.bb76
    i32 366, label %sw.bb76
    i32 377, label %sw.bb76
    i32 543, label %sw.bb78
    i32 545, label %sw.bb78
    i32 354, label %sw.bb87
    i32 355, label %sw.bb87
  ], !dbg !7719

sw.bb9:                                           ; preds = %entry, %entry, %entry
  %call = tail call fastcc %union.tree_node* @fold_builtin_hypot(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7720
  br label %cleanup89, !dbg !7721

sw.bb11:                                          ; preds = %entry, %entry, %entry
  %call12 = tail call fastcc %union.tree_node* @fold_builtin_load_exponent(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2, i8 zeroext 1) #8, !dbg !7722
  br label %cleanup89, !dbg !7723

sw.bb13:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  %call14 = tail call fastcc %union.tree_node* @fold_builtin_load_exponent(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2, i8 zeroext 0) #8, !dbg !7724
  br label %cleanup89, !dbg !7725

sw.bb15:                                          ; preds = %entry, %entry, %entry
  %call16 = tail call fastcc %union.tree_node* @fold_builtin_frexp(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7726
  br label %cleanup89, !dbg !7727

sw.bb17:                                          ; preds = %entry, %entry, %entry
  %call18 = tail call fastcc %union.tree_node* @fold_builtin_modf(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7728
  br label %cleanup89, !dbg !7729

sw.bb19:                                          ; preds = %entry
  %call20 = tail call fastcc %union.tree_node* @fold_builtin_bzero(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, i8 zeroext %ignore) #8, !dbg !7730
  br label %cleanup89, !dbg !7731

sw.bb21:                                          ; preds = %entry
  %call22 = tail call %union.tree_node* @fold_builtin_fputs(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, i8 zeroext %ignore, i8 zeroext 0, %union.tree_node* null) #8, !dbg !7732
  br label %cleanup89, !dbg !7733

sw.bb23:                                          ; preds = %entry
  %call24 = tail call %union.tree_node* @fold_builtin_fputs(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, i8 zeroext %ignore, i8 zeroext 1, %union.tree_node* null) #8, !dbg !7734
  br label %cleanup89, !dbg !7735

sw.bb25:                                          ; preds = %entry
  %call26 = tail call fastcc %union.tree_node* @fold_builtin_strstr(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7736
  br label %cleanup89, !dbg !7737

sw.bb27:                                          ; preds = %entry
  %call28 = tail call fastcc %union.tree_node* @fold_builtin_strcat(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1) #8, !dbg !7738
  br label %cleanup89, !dbg !7739

sw.bb29:                                          ; preds = %entry
  %call30 = tail call fastcc %union.tree_node* @fold_builtin_strspn(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1) #8, !dbg !7740
  br label %cleanup89, !dbg !7741

sw.bb31:                                          ; preds = %entry
  %call32 = tail call fastcc %union.tree_node* @fold_builtin_strcspn(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1) #8, !dbg !7742
  br label %cleanup89, !dbg !7743

sw.bb33:                                          ; preds = %entry, %entry
  %call34 = tail call fastcc %union.tree_node* @fold_builtin_strchr(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7744
  br label %cleanup89, !dbg !7745

sw.bb35:                                          ; preds = %entry, %entry
  %call36 = tail call fastcc %union.tree_node* @fold_builtin_strrchr(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7746
  br label %cleanup89, !dbg !7747

sw.bb37:                                          ; preds = %entry
  %call38 = tail call %union.tree_node* @fold_builtin_strcpy(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* null) #8, !dbg !7748
  br label %cleanup89, !dbg !7749

sw.bb39:                                          ; preds = %entry
  %tobool = icmp eq i8 %ignore, 0, !dbg !7750
  br i1 %tobool, label %if.else, label %if.then, !dbg !7751

if.then:                                          ; preds = %sw.bb39
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 341), align 8, !dbg !7752
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7712, metadata !DIExpression()), !dbg !7753
  %tobool40 = icmp eq %union.tree_node* %3, null, !dbg !7754
  br i1 %tobool40, label %cleanup, label %if.end, !dbg !7756

if.end:                                           ; preds = %if.then
  %call42 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %3, i32 2, %union.tree_node* %arg0, %union.tree_node* %arg1) #8, !dbg !7757
  br label %cleanup, !dbg !7758

cleanup:                                          ; preds = %if.then, %if.end
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end ], [ true, %if.then ]
  %retval.0 = phi %union.tree_node* [ %call42, %if.end ], [ undef, %if.then ]
  br i1 %cleanup.dest.slot.0, label %sw.epilog, label %cleanup89

if.else:                                          ; preds = %sw.bb39
  %call43 = tail call fastcc %union.tree_node* @fold_builtin_stpcpy(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1) #8, !dbg !7759
  br label %cleanup89, !dbg !7760

sw.bb44:                                          ; preds = %entry
  %call45 = tail call fastcc %union.tree_node* @fold_builtin_strcmp(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1) #8, !dbg !7761
  br label %cleanup89, !dbg !7762

sw.bb46:                                          ; preds = %entry
  %call47 = tail call fastcc %union.tree_node* @fold_builtin_strpbrk(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7763
  br label %cleanup89, !dbg !7764

sw.bb48:                                          ; preds = %entry
  %call49 = tail call fastcc %union.tree_node* @fold_builtin_expect(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1) #8, !dbg !7765
  br label %cleanup89, !dbg !7766

sw.bb50:                                          ; preds = %entry, %entry, %entry
  %call51 = tail call fastcc %union.tree_node* @fold_builtin_pow(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7767
  br label %cleanup89, !dbg !7768

sw.bb52:                                          ; preds = %entry, %entry, %entry
  %call53 = tail call fastcc %union.tree_node* @fold_builtin_powi(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7769
  br label %cleanup89, !dbg !7770

sw.bb54:                                          ; preds = %entry, %entry, %entry
  %call55 = tail call fastcc %union.tree_node* @fold_builtin_copysign(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2) #8, !dbg !7771
  br label %cleanup89, !dbg !7772

sw.bb56:                                          ; preds = %entry, %entry, %entry
  %call57 = tail call fastcc %union.tree_node* @fold_builtin_fmin_fmax(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2, i8 zeroext 0) #8, !dbg !7773
  br label %cleanup89, !dbg !7774

sw.bb58:                                          ; preds = %entry, %entry, %entry
  %call59 = tail call fastcc %union.tree_node* @fold_builtin_fmin_fmax(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %2, i8 zeroext 1) #8, !dbg !7775
  br label %cleanup89, !dbg !7776

sw.bb60:                                          ; preds = %entry
  %call61 = tail call fastcc %union.tree_node* @fold_builtin_unordered_cmp(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, i32 106, i32 98) #8, !dbg !7777
  br label %cleanup89, !dbg !7778

sw.bb62:                                          ; preds = %entry
  %call63 = tail call fastcc %union.tree_node* @fold_builtin_unordered_cmp(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, i32 105, i32 97) #8, !dbg !7779
  br label %cleanup89, !dbg !7780

sw.bb64:                                          ; preds = %entry
  %call65 = tail call fastcc %union.tree_node* @fold_builtin_unordered_cmp(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, i32 108, i32 100) #8, !dbg !7781
  br label %cleanup89, !dbg !7782

sw.bb66:                                          ; preds = %entry
  %call67 = tail call fastcc %union.tree_node* @fold_builtin_unordered_cmp(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, i32 107, i32 99) #8, !dbg !7783
  br label %cleanup89, !dbg !7784

sw.bb68:                                          ; preds = %entry
  %call69 = tail call fastcc %union.tree_node* @fold_builtin_unordered_cmp(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, i32 109, i32 101) #8, !dbg !7785
  br label %cleanup89, !dbg !7786

sw.bb70:                                          ; preds = %entry
  %call71 = tail call fastcc %union.tree_node* @fold_builtin_unordered_cmp(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, i32 103, i32 116) #8, !dbg !7787
  br label %cleanup89, !dbg !7788

sw.bb72:                                          ; preds = %entry
  %conv = zext i8 %ignore to i32, !dbg !7789
  %call73 = tail call fastcc %union.tree_node* @fold_builtin_sprintf(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* null, i32 %conv) #8, !dbg !7790
  br label %cleanup89, !dbg !7791

sw.bb74:                                          ; preds = %entry
  %call75 = tail call fastcc %union.tree_node* @fold_builtin_object_size(%union.tree_node* %arg0, %union.tree_node* %arg1) #8, !dbg !7792
  br label %cleanup89, !dbg !7793

sw.bb76:                                          ; preds = %entry, %entry, %entry
  %call77 = tail call fastcc %union.tree_node* @fold_builtin_printf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7794
  br label %cleanup89, !dbg !7795

sw.bb78:                                          ; preds = %entry, %entry
  %call79 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 8) #8, !dbg !7796
  %tobool80 = icmp eq i8 %call79, 0, !dbg !7796
  br i1 %tobool80, label %cleanup89, label %lor.lhs.false, !dbg !7798

lor.lhs.false:                                    ; preds = %sw.bb78
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7799
  %bf.load81 = load i64, i64* %4, align 8, !dbg !7799
  %bf.cast1 = and i64 %bf.load81, 65536, !dbg !7799
  %tobool83 = icmp eq i64 %bf.cast1, 0, !dbg !7799
  br i1 %tobool83, label %if.else85, label %cleanup89, !dbg !7800

if.else85:                                        ; preds = %lor.lhs.false
  %call86 = tail call fastcc %union.tree_node* @fold_builtin_printf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg1, %union.tree_node* null, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7801
  br label %cleanup89, !dbg !7802

sw.bb87:                                          ; preds = %entry, %entry, %entry
  %call88 = tail call fastcc %union.tree_node* @fold_builtin_fprintf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* null, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7803
  br label %cleanup89, !dbg !7804

sw.epilog:                                        ; preds = %entry, %cleanup
  br label %cleanup89, !dbg !7805

cleanup89:                                        ; preds = %lor.lhs.false, %sw.bb78, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %cleanup, %sw.epilog, %sw.bb87, %if.else85, %sw.bb76, %sw.bb74, %sw.bb72, %sw.bb70, %sw.bb68, %sw.bb66, %sw.bb64, %sw.bb62, %sw.bb60, %sw.bb58, %sw.bb56, %sw.bb54, %sw.bb52, %sw.bb50, %sw.bb48, %sw.bb46, %sw.bb44, %if.else, %sw.bb37, %sw.bb35, %sw.bb33, %sw.bb31, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb21, %sw.bb19, %sw.bb17, %sw.bb15, %sw.bb13, %sw.bb11, %sw.bb9
  %retval.1 = phi %union.tree_node* [ null, %sw.epilog ], [ %call88, %sw.bb87 ], [ %call86, %if.else85 ], [ %call77, %sw.bb76 ], [ %call75, %sw.bb74 ], [ %call73, %sw.bb72 ], [ %call71, %sw.bb70 ], [ %call69, %sw.bb68 ], [ %call67, %sw.bb66 ], [ %call65, %sw.bb64 ], [ %call63, %sw.bb62 ], [ %call61, %sw.bb60 ], [ null, %sw.bb58 ], [ null, %sw.bb56 ], [ %call55, %sw.bb54 ], [ %call53, %sw.bb52 ], [ null, %sw.bb50 ], [ %call49, %sw.bb48 ], [ %call47, %sw.bb46 ], [ %call45, %sw.bb44 ], [ %retval.0, %cleanup ], [ %call43, %if.else ], [ %call38, %sw.bb37 ], [ %call36, %sw.bb35 ], [ %call34, %sw.bb33 ], [ %call32, %sw.bb31 ], [ %call30, %sw.bb29 ], [ %call28, %sw.bb27 ], [ %call26, %sw.bb25 ], [ %call24, %sw.bb23 ], [ %call22, %sw.bb21 ], [ %call20, %sw.bb19 ], [ %call18, %sw.bb17 ], [ %call16, %sw.bb15 ], [ %call14, %sw.bb13 ], [ %call12, %sw.bb11 ], [ null, %sw.bb9 ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %entry ], [ null, %lor.lhs.false ], [ null, %sw.bb78 ], !dbg !7716
  ret %union.tree_node* %retval.1, !dbg !7806
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_3(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, i8 zeroext %ignore) unnamed_addr #5 !dbg !7807 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7811, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7812, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !7813, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !7814, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !7815, metadata !DIExpression()), !dbg !7819
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !7816, metadata !DIExpression()), !dbg !7819
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7820
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !7820
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !7820
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !7820
  %2 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !7820
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !7817, metadata !DIExpression()), !dbg !7819
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !7821
  %bf.load = load i32, i32* %function_code, align 8, !dbg !7821
  %bf.clear = and i32 %bf.load, 2047, !dbg !7821
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7818, metadata !DIExpression()), !dbg !7819
  switch i32 %bf.clear, label %cleanup [
    i32 220, label %sw.bb
    i32 221, label %sw.bb
    i32 222, label %sw.bb
    i32 544, label %sw.bb40
    i32 542, label %sw.bb40
    i32 375, label %sw.bb38
    i32 355, label %sw.bb38
    i32 354, label %sw.bb38
    i32 545, label %sw.bb32
    i32 333, label %sw.bb6
    i32 325, label %sw.bb8
    i32 330, label %sw.bb10
    i32 332, label %sw.bb12
    i32 331, label %sw.bb14
    i32 347, label %sw.bb16
    i32 349, label %sw.bb18
    i32 348, label %sw.bb20
    i32 328, label %sw.bb22
    i32 324, label %sw.bb24
    i32 329, label %sw.bb24
    i32 373, label %sw.bb26
    i32 535, label %sw.bb28
    i32 533, label %sw.bb28
    i32 534, label %sw.bb30
    i32 543, label %sw.bb32
  ], !dbg !7822

sw.bb:                                            ; preds = %entry, %entry, %entry
  %call = tail call fastcc %union.tree_node* @fold_builtin_sincos(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2) #8, !dbg !7823
  br label %cleanup, !dbg !7825

sw.bb6:                                           ; preds = %entry
  %call7 = tail call fastcc %union.tree_node* @fold_builtin_memset(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %2, i8 zeroext %ignore) #8, !dbg !7826
  br label %cleanup, !dbg !7827

sw.bb8:                                           ; preds = %entry
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !7828
  %call9 = tail call fastcc %union.tree_node* @fold_builtin_memory_op(i32 %loc, %union.tree_node* %arg1, %union.tree_node* %arg0, %union.tree_node* %arg2, %union.tree_node* %3, i8 zeroext 1, i32 3) #8, !dbg !7829
  br label %cleanup, !dbg !7830

sw.bb10:                                          ; preds = %entry
  %call11 = tail call fastcc %union.tree_node* @fold_builtin_memory_op(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %2, i8 zeroext %ignore, i32 0) #8, !dbg !7831
  br label %cleanup, !dbg !7832

sw.bb12:                                          ; preds = %entry
  %call13 = tail call fastcc %union.tree_node* @fold_builtin_memory_op(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %2, i8 zeroext %ignore, i32 1) #8, !dbg !7833
  br label %cleanup, !dbg !7834

sw.bb14:                                          ; preds = %entry
  %call15 = tail call fastcc %union.tree_node* @fold_builtin_memory_op(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %2, i8 zeroext %ignore, i32 3) #8, !dbg !7835
  br label %cleanup, !dbg !7836

sw.bb16:                                          ; preds = %entry
  %call17 = tail call fastcc %union.tree_node* @fold_builtin_strncat(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2) #8, !dbg !7837
  br label %cleanup, !dbg !7838

sw.bb18:                                          ; preds = %entry
  %call19 = tail call %union.tree_node* @fold_builtin_strncpy(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* null) #8, !dbg !7839
  br label %cleanup, !dbg !7840

sw.bb20:                                          ; preds = %entry
  %call21 = tail call fastcc %union.tree_node* @fold_builtin_strncmp(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2) #8, !dbg !7841
  br label %cleanup, !dbg !7842

sw.bb22:                                          ; preds = %entry
  %call23 = tail call fastcc %union.tree_node* @fold_builtin_memchr(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %2) #8, !dbg !7843
  br label %cleanup, !dbg !7844

sw.bb24:                                          ; preds = %entry, %entry
  %call25 = tail call fastcc %union.tree_node* @fold_builtin_memcmp(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2) #8, !dbg !7845
  br label %cleanup, !dbg !7846

sw.bb26:                                          ; preds = %entry
  %conv = zext i8 %ignore to i32, !dbg !7847
  %call27 = tail call fastcc %union.tree_node* @fold_builtin_sprintf(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, i32 %conv) #8, !dbg !7848
  br label %cleanup, !dbg !7849

sw.bb28:                                          ; preds = %entry, %entry
  %call29 = tail call %union.tree_node* @fold_builtin_stxcpy_chk(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* null, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7850
  br label %cleanup, !dbg !7851

sw.bb30:                                          ; preds = %entry
  %call31 = tail call fastcc %union.tree_node* @fold_builtin_strcat_chk(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2) #8, !dbg !7852
  br label %cleanup, !dbg !7853

sw.bb32:                                          ; preds = %entry, %entry
  %call33 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 8) #8, !dbg !7854
  %tobool = icmp eq i8 %call33, 0, !dbg !7854
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !7856

lor.lhs.false:                                    ; preds = %sw.bb32
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7857
  %bf.load34 = load i64, i64* %4, align 8, !dbg !7857
  %bf.cast1 = and i64 %bf.load34, 65536, !dbg !7857
  %tobool36 = icmp eq i64 %bf.cast1, 0, !dbg !7857
  br i1 %tobool36, label %if.else, label %cleanup, !dbg !7858

if.else:                                          ; preds = %lor.lhs.false
  %call37 = tail call fastcc %union.tree_node* @fold_builtin_printf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg1, %union.tree_node* %arg2, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7859
  br label %cleanup, !dbg !7860

sw.bb38:                                          ; preds = %entry, %entry, %entry
  %call39 = tail call fastcc %union.tree_node* @fold_builtin_fprintf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7861
  br label %cleanup, !dbg !7862

sw.bb40:                                          ; preds = %entry, %entry
  %call41 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 8) #8, !dbg !7863
  %tobool42 = icmp eq i8 %call41, 0, !dbg !7863
  br i1 %tobool42, label %cleanup, label %lor.lhs.false43, !dbg !7865

lor.lhs.false43:                                  ; preds = %sw.bb40
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7866
  %bf.load45 = load i64, i64* %5, align 8, !dbg !7866
  %bf.cast482 = and i64 %bf.load45, 65536, !dbg !7866
  %tobool49 = icmp eq i64 %bf.cast482, 0, !dbg !7866
  br i1 %tobool49, label %if.else51, label %cleanup, !dbg !7867

if.else51:                                        ; preds = %lor.lhs.false43
  %call52 = tail call fastcc %union.tree_node* @fold_builtin_fprintf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg2, %union.tree_node* null, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7868
  br label %cleanup, !dbg !7869

cleanup:                                          ; preds = %lor.lhs.false43, %sw.bb40, %lor.lhs.false, %sw.bb32, %entry, %if.else51, %sw.bb38, %if.else, %sw.bb30, %sw.bb28, %sw.bb26, %sw.bb24, %sw.bb22, %sw.bb20, %sw.bb18, %sw.bb16, %sw.bb14, %sw.bb12, %sw.bb10, %sw.bb8, %sw.bb6, %sw.bb
  %retval.0 = phi %union.tree_node* [ %call52, %if.else51 ], [ %call39, %sw.bb38 ], [ %call37, %if.else ], [ %call31, %sw.bb30 ], [ %call29, %sw.bb28 ], [ %call27, %sw.bb26 ], [ %call25, %sw.bb24 ], [ %call23, %sw.bb22 ], [ %call21, %sw.bb20 ], [ %call19, %sw.bb18 ], [ %call17, %sw.bb16 ], [ %call15, %sw.bb14 ], [ %call13, %sw.bb12 ], [ %call11, %sw.bb10 ], [ %call9, %sw.bb8 ], [ %call7, %sw.bb6 ], [ null, %sw.bb ], [ null, %lor.lhs.false ], [ null, %sw.bb32 ], [ null, %lor.lhs.false43 ], [ null, %sw.bb40 ], [ null, %entry ], !dbg !7819
  ret %union.tree_node* %retval.0, !dbg !7870
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_4(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %arg3, i8 zeroext %ignore) unnamed_addr #5 !dbg !7871 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7875, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !7876, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !7877, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !7878, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !7879, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata %union.tree_node* %arg3, metadata !7880, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !7881, metadata !DIExpression()), !dbg !7883
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !7884
  %bf.load = load i32, i32* %function_code, align 8, !dbg !7884
  %bf.clear = and i32 %bf.load, 2047, !dbg !7884
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !7882, metadata !DIExpression()), !dbg !7883
  switch i32 %bf.clear, label %cleanup [
    i32 529, label %sw.bb
    i32 531, label %sw.bb
    i32 530, label %sw.bb
    i32 532, label %sw.bb
    i32 537, label %sw.bb5
    i32 536, label %sw.bb7
    i32 542, label %sw.bb9
    i32 544, label %sw.bb9
  ], !dbg !7885

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %call = tail call %union.tree_node* @fold_builtin_memory_chk(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %arg3, %union.tree_node* null, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7886
  br label %cleanup, !dbg !7888

sw.bb5:                                           ; preds = %entry
  %call6 = tail call %union.tree_node* @fold_builtin_strncpy_chk(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %arg3, %union.tree_node* null) #8, !dbg !7889
  br label %cleanup, !dbg !7890

sw.bb7:                                           ; preds = %entry
  %call8 = tail call fastcc %union.tree_node* @fold_builtin_strncat_chk(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %arg3) #8, !dbg !7891
  br label %cleanup, !dbg !7892

sw.bb9:                                           ; preds = %entry, %entry
  %call10 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 8) #8, !dbg !7893
  %tobool = icmp eq i8 %call10, 0, !dbg !7893
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !7895

lor.lhs.false:                                    ; preds = %sw.bb9
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7896
  %bf.load11 = load i64, i64* %0, align 8, !dbg !7896
  %bf.cast1 = and i64 %bf.load11, 65536, !dbg !7896
  %tobool13 = icmp eq i64 %bf.cast1, 0, !dbg !7896
  br i1 %tobool13, label %if.else, label %cleanup, !dbg !7897

if.else:                                          ; preds = %lor.lhs.false
  %call14 = tail call fastcc %union.tree_node* @fold_builtin_fprintf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg2, %union.tree_node* %arg3, i8 zeroext %ignore, i32 %bf.clear) #8, !dbg !7898
  br label %cleanup, !dbg !7899

cleanup:                                          ; preds = %lor.lhs.false, %sw.bb9, %entry, %if.else, %sw.bb7, %sw.bb5, %sw.bb
  %retval.0 = phi %union.tree_node* [ %call14, %if.else ], [ %call8, %sw.bb7 ], [ %call6, %sw.bb5 ], [ %call, %sw.bb ], [ null, %lor.lhs.false ], [ null, %sw.bb9 ], [ null, %entry ], !dbg !7883
  ret %union.tree_node* %retval.0, !dbg !7900
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_inf(i32 %loc, %union.tree_node* %type, i32 %warn) unnamed_addr #5 !dbg !7901 {
entry:
  %real = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !7905, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7906, metadata !DIExpression()), !dbg !7909
  call void @llvm.dbg.value(metadata i32 %warn, metadata !7907, metadata !DIExpression()), !dbg !7909
  %0 = bitcast %struct.real_value* %real to i8*, !dbg !7910
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #6, !dbg !7910
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7911
  %bf.load = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !7911
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !7911
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7911

cond.true:                                        ; preds = %entry
  %call = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end, !dbg !7911

cond.false:                                       ; preds = %entry
  %type1 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1, i64 0, i32 6, !dbg !7911
  %bf.load2 = load i32, i32* %mode, align 4, !dbg !7911
  %bf.lshr = lshr i32 %bf.load2, 16, !dbg !7911
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !7911
  br label %cond.end, !dbg !7911

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear3, %cond.false ], !dbg !7911
  %idxprom = zext i32 %cond to i64, !dbg !7911
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !7911
  %2 = load i8, i8* %arrayidx, align 1, !dbg !7911
  %cmp4 = icmp eq i8 %2, 8, !dbg !7911
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false, !dbg !7911

lor.lhs.false:                                    ; preds = %cond.end
  %bf.load7 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast92 = and i64 %bf.load7, 65535, !dbg !7911
  %cmp10 = icmp eq i64 %bf.cast92, 14, !dbg !7911
  br i1 %cmp10, label %cond.true12, label %cond.false14, !dbg !7911

cond.true12:                                      ; preds = %lor.lhs.false
  %call13 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end20, !dbg !7911

cond.false14:                                     ; preds = %lor.lhs.false
  %type15 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode16 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type15, i64 0, i32 6, !dbg !7911
  %bf.load17 = load i32, i32* %mode16, align 4, !dbg !7911
  %bf.lshr18 = lshr i32 %bf.load17, 16, !dbg !7911
  %bf.clear19 = and i32 %bf.lshr18, 255, !dbg !7911
  br label %cond.end20, !dbg !7911

cond.end20:                                       ; preds = %cond.false14, %cond.true12
  %cond21 = phi i32 [ %call13, %cond.true12 ], [ %bf.clear19, %cond.false14 ], !dbg !7911
  %idxprom22 = zext i32 %cond21 to i64, !dbg !7911
  %arrayidx23 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom22, !dbg !7911
  %3 = load i8, i8* %arrayidx23, align 1, !dbg !7911
  %cmp25 = icmp eq i8 %3, 9, !dbg !7911
  br i1 %cmp25, label %land.lhs.true, label %lor.lhs.false27, !dbg !7911

lor.lhs.false27:                                  ; preds = %cond.end20
  %bf.load29 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast313 = and i64 %bf.load29, 65535, !dbg !7911
  %cmp32 = icmp eq i64 %bf.cast313, 14, !dbg !7911
  br i1 %cmp32, label %cond.true34, label %cond.false36, !dbg !7911

cond.true34:                                      ; preds = %lor.lhs.false27
  %call35 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end42, !dbg !7911

cond.false36:                                     ; preds = %lor.lhs.false27
  %type37 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode38 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type37, i64 0, i32 6, !dbg !7911
  %bf.load39 = load i32, i32* %mode38, align 4, !dbg !7911
  %bf.lshr40 = lshr i32 %bf.load39, 16, !dbg !7911
  %bf.clear41 = and i32 %bf.lshr40, 255, !dbg !7911
  br label %cond.end42, !dbg !7911

cond.end42:                                       ; preds = %cond.false36, %cond.true34
  %cond43 = phi i32 [ %call35, %cond.true34 ], [ %bf.clear41, %cond.false36 ], !dbg !7911
  %idxprom44 = zext i32 %cond43 to i64, !dbg !7911
  %arrayidx45 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom44, !dbg !7911
  %4 = load i8, i8* %arrayidx45, align 1, !dbg !7911
  %cmp47 = icmp eq i8 %4, 11, !dbg !7911
  br i1 %cmp47, label %land.lhs.true, label %lor.lhs.false49, !dbg !7911

lor.lhs.false49:                                  ; preds = %cond.end42
  %bf.load51 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast534 = and i64 %bf.load51, 65535, !dbg !7911
  %cmp54 = icmp eq i64 %bf.cast534, 14, !dbg !7911
  br i1 %cmp54, label %cond.true56, label %cond.false58, !dbg !7911

cond.true56:                                      ; preds = %lor.lhs.false49
  %call57 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end64, !dbg !7911

cond.false58:                                     ; preds = %lor.lhs.false49
  %type59 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode60 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type59, i64 0, i32 6, !dbg !7911
  %bf.load61 = load i32, i32* %mode60, align 4, !dbg !7911
  %bf.lshr62 = lshr i32 %bf.load61, 16, !dbg !7911
  %bf.clear63 = and i32 %bf.lshr62, 255, !dbg !7911
  br label %cond.end64, !dbg !7911

cond.end64:                                       ; preds = %cond.false58, %cond.true56
  %cond65 = phi i32 [ %call57, %cond.true56 ], [ %bf.clear63, %cond.false58 ], !dbg !7911
  %idxprom66 = zext i32 %cond65 to i64, !dbg !7911
  %arrayidx67 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom66, !dbg !7911
  %5 = load i8, i8* %arrayidx67, align 1, !dbg !7911
  %cmp69 = icmp eq i8 %5, 17, !dbg !7911
  br i1 %cmp69, label %land.lhs.true, label %land.lhs.true330, !dbg !7911

land.lhs.true:                                    ; preds = %cond.end64, %cond.end42, %cond.end20, %cond.end
  %bf.load72 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast745 = and i64 %bf.load72, 65535, !dbg !7911
  %cmp75 = icmp eq i64 %bf.cast745, 14, !dbg !7911
  br i1 %cmp75, label %cond.true77, label %cond.false79, !dbg !7911

cond.true77:                                      ; preds = %land.lhs.true
  %call78 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end85, !dbg !7911

cond.false79:                                     ; preds = %land.lhs.true
  %type80 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode81 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type80, i64 0, i32 6, !dbg !7911
  %bf.load82 = load i32, i32* %mode81, align 4, !dbg !7911
  %bf.lshr83 = lshr i32 %bf.load82, 16, !dbg !7911
  %bf.clear84 = and i32 %bf.lshr83, 255, !dbg !7911
  br label %cond.end85, !dbg !7911

cond.end85:                                       ; preds = %cond.false79, %cond.true77
  %cond86 = phi i32 [ %call78, %cond.true77 ], [ %bf.clear84, %cond.false79 ], !dbg !7911
  %idxprom87 = zext i32 %cond86 to i64, !dbg !7911
  %arrayidx88 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom87, !dbg !7911
  %6 = load i8, i8* %arrayidx88, align 1, !dbg !7911
  %cmp90 = icmp eq i8 %6, 8, !dbg !7911
  br i1 %cmp90, label %cond.true114, label %lor.lhs.false92, !dbg !7911

lor.lhs.false92:                                  ; preds = %cond.end85
  %bf.load94 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast966 = and i64 %bf.load94, 65535, !dbg !7911
  %cmp97 = icmp eq i64 %bf.cast966, 14, !dbg !7911
  br i1 %cmp97, label %cond.true99, label %cond.false101, !dbg !7911

cond.true99:                                      ; preds = %lor.lhs.false92
  %call100 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end107, !dbg !7911

cond.false101:                                    ; preds = %lor.lhs.false92
  %type102 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode103 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type102, i64 0, i32 6, !dbg !7911
  %bf.load104 = load i32, i32* %mode103, align 4, !dbg !7911
  %bf.lshr105 = lshr i32 %bf.load104, 16, !dbg !7911
  %bf.clear106 = and i32 %bf.lshr105, 255, !dbg !7911
  br label %cond.end107, !dbg !7911

cond.end107:                                      ; preds = %cond.false101, %cond.true99
  %cond108 = phi i32 [ %call100, %cond.true99 ], [ %bf.clear106, %cond.false101 ], !dbg !7911
  %idxprom109 = zext i32 %cond108 to i64, !dbg !7911
  %arrayidx110 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom109, !dbg !7911
  %7 = load i8, i8* %arrayidx110, align 1, !dbg !7911
  %cmp112 = icmp eq i8 %7, 9, !dbg !7911
  br i1 %cmp112, label %cond.true114, label %cond.false131, !dbg !7911

cond.true114:                                     ; preds = %cond.end107, %cond.end85
  %bf.load116 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast11815 = and i64 %bf.load116, 65535, !dbg !7911
  %cmp119 = icmp eq i64 %bf.cast11815, 14, !dbg !7911
  br i1 %cmp119, label %cond.true121, label %cond.false123, !dbg !7911

cond.true121:                                     ; preds = %cond.true114
  %call122 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end151, !dbg !7911

cond.false123:                                    ; preds = %cond.true114
  %type124 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode125 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type124, i64 0, i32 6, !dbg !7911
  %bf.load126 = load i32, i32* %mode125, align 4, !dbg !7911
  %bf.lshr127 = lshr i32 %bf.load126, 16, !dbg !7911
  %bf.clear128 = and i32 %bf.lshr127, 255, !dbg !7911
  br label %cond.end151, !dbg !7911

cond.false131:                                    ; preds = %cond.end107
  %bf.load133 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast1357 = and i64 %bf.load133, 65535, !dbg !7911
  %cmp136 = icmp eq i64 %bf.cast1357, 14, !dbg !7911
  br i1 %cmp136, label %cond.true138, label %cond.false140, !dbg !7911

cond.true138:                                     ; preds = %cond.false131
  %call139 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end146, !dbg !7911

cond.false140:                                    ; preds = %cond.false131
  %type141 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode142 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type141, i64 0, i32 6, !dbg !7911
  %bf.load143 = load i32, i32* %mode142, align 4, !dbg !7911
  %bf.lshr144 = lshr i32 %bf.load143, 16, !dbg !7911
  %bf.clear145 = and i32 %bf.lshr144, 255, !dbg !7911
  br label %cond.end146, !dbg !7911

cond.end146:                                      ; preds = %cond.false140, %cond.true138
  %cond147 = phi i32 [ %call139, %cond.true138 ], [ %bf.clear145, %cond.false140 ], !dbg !7911
  %idxprom148 = zext i32 %cond147 to i64, !dbg !7911
  %arrayidx149 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom148, !dbg !7911
  %8 = load i8, i8* %arrayidx149, align 1, !dbg !7911
  %conv150 = zext i8 %8 to i32, !dbg !7911
  br label %cond.end151, !dbg !7911

cond.end151:                                      ; preds = %cond.true121, %cond.false123, %cond.end146
  %cond152 = phi i32 [ %conv150, %cond.end146 ], [ %call122, %cond.true121 ], [ %bf.clear128, %cond.false123 ], !dbg !7911
  %idxprom153 = zext i32 %cond152 to i64, !dbg !7911
  %arrayidx154 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom153, !dbg !7911
  %9 = load i8, i8* %arrayidx154, align 1, !dbg !7911
  %cmp156 = icmp eq i8 %9, 9, !dbg !7911
  %bf.load160 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast1628 = and i64 %bf.load160, 65535, !dbg !7911
  %cmp163 = icmp eq i64 %bf.cast1628, 14, !dbg !7911
  br i1 %cmp156, label %cond.true158, label %cond.false241, !dbg !7911

cond.true158:                                     ; preds = %cond.end151
  br i1 %cmp163, label %cond.true165, label %cond.false167, !dbg !7911

cond.true165:                                     ; preds = %cond.true158
  %call166 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end173, !dbg !7911

cond.false167:                                    ; preds = %cond.true158
  %type168 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode169 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type168, i64 0, i32 6, !dbg !7911
  %bf.load170 = load i32, i32* %mode169, align 4, !dbg !7911
  %bf.lshr171 = lshr i32 %bf.load170, 16, !dbg !7911
  %bf.clear172 = and i32 %bf.lshr171, 255, !dbg !7911
  br label %cond.end173, !dbg !7911

cond.end173:                                      ; preds = %cond.false167, %cond.true165
  %cond174 = phi i32 [ %call166, %cond.true165 ], [ %bf.clear172, %cond.false167 ], !dbg !7911
  %idxprom175 = zext i32 %cond174 to i64, !dbg !7911
  %arrayidx176 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom175, !dbg !7911
  %10 = load i8, i8* %arrayidx176, align 1, !dbg !7911
  %cmp178 = icmp eq i8 %10, 8, !dbg !7911
  br i1 %cmp178, label %cond.true202, label %lor.lhs.false180, !dbg !7911

lor.lhs.false180:                                 ; preds = %cond.end173
  %bf.load182 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast18412 = and i64 %bf.load182, 65535, !dbg !7911
  %cmp185 = icmp eq i64 %bf.cast18412, 14, !dbg !7911
  br i1 %cmp185, label %cond.true187, label %cond.false189, !dbg !7911

cond.true187:                                     ; preds = %lor.lhs.false180
  %call188 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end195, !dbg !7911

cond.false189:                                    ; preds = %lor.lhs.false180
  %type190 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode191 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type190, i64 0, i32 6, !dbg !7911
  %bf.load192 = load i32, i32* %mode191, align 4, !dbg !7911
  %bf.lshr193 = lshr i32 %bf.load192, 16, !dbg !7911
  %bf.clear194 = and i32 %bf.lshr193, 255, !dbg !7911
  br label %cond.end195, !dbg !7911

cond.end195:                                      ; preds = %cond.false189, %cond.true187
  %cond196 = phi i32 [ %call188, %cond.true187 ], [ %bf.clear194, %cond.false189 ], !dbg !7911
  %idxprom197 = zext i32 %cond196 to i64, !dbg !7911
  %arrayidx198 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom197, !dbg !7911
  %11 = load i8, i8* %arrayidx198, align 1, !dbg !7911
  %cmp200 = icmp eq i8 %11, 9, !dbg !7911
  br i1 %cmp200, label %cond.true202, label %cond.false219, !dbg !7911

cond.true202:                                     ; preds = %cond.end195, %cond.end173
  %bf.load204 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast20614 = and i64 %bf.load204, 65535, !dbg !7911
  %cmp207 = icmp eq i64 %bf.cast20614, 14, !dbg !7911
  br i1 %cmp207, label %cond.true209, label %cond.false211, !dbg !7911

cond.true209:                                     ; preds = %cond.true202
  %call210 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end239, !dbg !7911

cond.false211:                                    ; preds = %cond.true202
  %type212 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode213 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type212, i64 0, i32 6, !dbg !7911
  %bf.load214 = load i32, i32* %mode213, align 4, !dbg !7911
  %bf.lshr215 = lshr i32 %bf.load214, 16, !dbg !7911
  %bf.clear216 = and i32 %bf.lshr215, 255, !dbg !7911
  br label %cond.end239, !dbg !7911

cond.false219:                                    ; preds = %cond.end195
  %bf.load221 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast22313 = and i64 %bf.load221, 65535, !dbg !7911
  %cmp224 = icmp eq i64 %bf.cast22313, 14, !dbg !7911
  br i1 %cmp224, label %cond.true226, label %cond.false228, !dbg !7911

cond.true226:                                     ; preds = %cond.false219
  %call227 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end234, !dbg !7911

cond.false228:                                    ; preds = %cond.false219
  %type229 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode230 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type229, i64 0, i32 6, !dbg !7911
  %bf.load231 = load i32, i32* %mode230, align 4, !dbg !7911
  %bf.lshr232 = lshr i32 %bf.load231, 16, !dbg !7911
  %bf.clear233 = and i32 %bf.lshr232, 255, !dbg !7911
  br label %cond.end234, !dbg !7911

cond.end234:                                      ; preds = %cond.false228, %cond.true226
  %cond235 = phi i32 [ %call227, %cond.true226 ], [ %bf.clear233, %cond.false228 ], !dbg !7911
  %idxprom236 = zext i32 %cond235 to i64, !dbg !7911
  %arrayidx237 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom236, !dbg !7911
  %12 = load i8, i8* %arrayidx237, align 1, !dbg !7911
  %conv238 = zext i8 %12 to i32, !dbg !7911
  br label %cond.end239, !dbg !7911

cond.end239:                                      ; preds = %cond.true209, %cond.false211, %cond.end234
  %cond240 = phi i32 [ %conv238, %cond.end234 ], [ %call210, %cond.true209 ], [ %bf.clear216, %cond.false211 ], !dbg !7911
  br label %cond.end325, !dbg !7911

cond.false241:                                    ; preds = %cond.end151
  br i1 %cmp163, label %cond.true248, label %cond.false250, !dbg !7911

cond.true248:                                     ; preds = %cond.false241
  %call249 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end256, !dbg !7911

cond.false250:                                    ; preds = %cond.false241
  %type251 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode252 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type251, i64 0, i32 6, !dbg !7911
  %bf.load253 = load i32, i32* %mode252, align 4, !dbg !7911
  %bf.lshr254 = lshr i32 %bf.load253, 16, !dbg !7911
  %bf.clear255 = and i32 %bf.lshr254, 255, !dbg !7911
  br label %cond.end256, !dbg !7911

cond.end256:                                      ; preds = %cond.false250, %cond.true248
  %cond257 = phi i32 [ %call249, %cond.true248 ], [ %bf.clear255, %cond.false250 ], !dbg !7911
  %idxprom258 = zext i32 %cond257 to i64, !dbg !7911
  %arrayidx259 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom258, !dbg !7911
  %13 = load i8, i8* %arrayidx259, align 1, !dbg !7911
  %cmp261 = icmp eq i8 %13, 8, !dbg !7911
  br i1 %cmp261, label %cond.true285, label %lor.lhs.false263, !dbg !7911

lor.lhs.false263:                                 ; preds = %cond.end256
  %bf.load265 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast2679 = and i64 %bf.load265, 65535, !dbg !7911
  %cmp268 = icmp eq i64 %bf.cast2679, 14, !dbg !7911
  br i1 %cmp268, label %cond.true270, label %cond.false272, !dbg !7911

cond.true270:                                     ; preds = %lor.lhs.false263
  %call271 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end278, !dbg !7911

cond.false272:                                    ; preds = %lor.lhs.false263
  %type273 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode274 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type273, i64 0, i32 6, !dbg !7911
  %bf.load275 = load i32, i32* %mode274, align 4, !dbg !7911
  %bf.lshr276 = lshr i32 %bf.load275, 16, !dbg !7911
  %bf.clear277 = and i32 %bf.lshr276, 255, !dbg !7911
  br label %cond.end278, !dbg !7911

cond.end278:                                      ; preds = %cond.false272, %cond.true270
  %cond279 = phi i32 [ %call271, %cond.true270 ], [ %bf.clear277, %cond.false272 ], !dbg !7911
  %idxprom280 = zext i32 %cond279 to i64, !dbg !7911
  %arrayidx281 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom280, !dbg !7911
  %14 = load i8, i8* %arrayidx281, align 1, !dbg !7911
  %cmp283 = icmp eq i8 %14, 9, !dbg !7911
  br i1 %cmp283, label %cond.true285, label %cond.false302, !dbg !7911

cond.true285:                                     ; preds = %cond.end278, %cond.end256
  %bf.load287 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast28911 = and i64 %bf.load287, 65535, !dbg !7911
  %cmp290 = icmp eq i64 %bf.cast28911, 14, !dbg !7911
  br i1 %cmp290, label %cond.true292, label %cond.false294, !dbg !7911

cond.true292:                                     ; preds = %cond.true285
  %call293 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end322, !dbg !7911

cond.false294:                                    ; preds = %cond.true285
  %type295 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode296 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type295, i64 0, i32 6, !dbg !7911
  %bf.load297 = load i32, i32* %mode296, align 4, !dbg !7911
  %bf.lshr298 = lshr i32 %bf.load297, 16, !dbg !7911
  %bf.clear299 = and i32 %bf.lshr298, 255, !dbg !7911
  br label %cond.end322, !dbg !7911

cond.false302:                                    ; preds = %cond.end278
  %bf.load304 = load i64, i64* %1, align 8, !dbg !7911
  %bf.cast30610 = and i64 %bf.load304, 65535, !dbg !7911
  %cmp307 = icmp eq i64 %bf.cast30610, 14, !dbg !7911
  br i1 %cmp307, label %cond.true309, label %cond.false311, !dbg !7911

cond.true309:                                     ; preds = %cond.false302
  %call310 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !7911
  br label %cond.end317, !dbg !7911

cond.false311:                                    ; preds = %cond.false302
  %type312 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7911
  %mode313 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type312, i64 0, i32 6, !dbg !7911
  %bf.load314 = load i32, i32* %mode313, align 4, !dbg !7911
  %bf.lshr315 = lshr i32 %bf.load314, 16, !dbg !7911
  %bf.clear316 = and i32 %bf.lshr315, 255, !dbg !7911
  br label %cond.end317, !dbg !7911

cond.end317:                                      ; preds = %cond.false311, %cond.true309
  %cond318 = phi i32 [ %call310, %cond.true309 ], [ %bf.clear316, %cond.false311 ], !dbg !7911
  %idxprom319 = zext i32 %cond318 to i64, !dbg !7911
  %arrayidx320 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom319, !dbg !7911
  %15 = load i8, i8* %arrayidx320, align 1, !dbg !7911
  %conv321 = zext i8 %15 to i32, !dbg !7911
  br label %cond.end322, !dbg !7911

cond.end322:                                      ; preds = %cond.true292, %cond.false294, %cond.end317
  %cond323 = phi i32 [ %conv321, %cond.end317 ], [ %call293, %cond.true292 ], [ %bf.clear299, %cond.false294 ], !dbg !7911
  br label %cond.end325, !dbg !7911

cond.end325:                                      ; preds = %cond.end322, %cond.end239
  %cond326.in = phi i32 [ %cond240, %cond.end239 ], [ %cond323, %cond.end322 ]
  %cond326 = add i32 %cond326.in, -38, !dbg !7911
  %idxprom327 = zext i32 %cond326 to i64, !dbg !7911
  %arrayidx328 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom327, !dbg !7911
  %16 = load %struct.real_format*, %struct.real_format** %arrayidx328, align 8, !dbg !7911
  %has_inf = getelementptr inbounds %struct.real_format, %struct.real_format* %16, i64 0, i32 12, !dbg !7911
  %17 = load i8, i8* %has_inf, align 1, !dbg !7911
  %tobool = icmp eq i8 %17, 0, !dbg !7911
  %tobool331 = icmp ne i32 %warn, 0, !dbg !7913
  %or.cond = and i1 %tobool, %tobool331, !dbg !7914
  br i1 %or.cond, label %if.then, label %if.end, !dbg !7914

land.lhs.true330:                                 ; preds = %cond.end64
  %tobool331.old = icmp eq i32 %warn, 0, !dbg !7913
  br i1 %tobool331.old, label %if.end, label %if.then, !dbg !7915

if.then:                                          ; preds = %land.lhs.true330, %cond.end325
  %call332 = tail call zeroext i8 (i32, i32, i8*, ...) @pedwarn(i32 %loc, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.738, i64 0, i64 0)) #7, !dbg !7916
  br label %if.end, !dbg !7916

if.end:                                           ; preds = %land.lhs.true330, %cond.end325, %if.then
  call void @llvm.dbg.value(metadata %struct.real_value* %real, metadata !7908, metadata !DIExpression(DW_OP_deref)), !dbg !7909
  call void @real_inf(%struct.real_value* nonnull %real) #7, !dbg !7917
  call void @llvm.dbg.value(metadata %struct.real_value* %real, metadata !7908, metadata !DIExpression(DW_OP_deref)), !dbg !7909
  %call333 = call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 %real) #7, !dbg !7918
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #6, !dbg !7919
  ret %union.tree_node* %call333, !dbg !7920
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_classify_type(%union.tree_node* %arg) unnamed_addr #5 !dbg !7921 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !7923, metadata !DIExpression()), !dbg !7924
  %cmp = icmp eq %union.tree_node* %arg, null, !dbg !7925
  br i1 %cmp, label %if.then, label %if.end, !dbg !7927

if.then:                                          ; preds = %entry
  %call = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 -1) #7, !dbg !7928
  br label %return, !dbg !7929

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !7930
  %0 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !7930
  %call1 = tail call fastcc i32 @type_to_class(%union.tree_node* %0) #8, !dbg !7931
  %conv = sext i32 %call1 to i64, !dbg !7931
  %call2 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #7, !dbg !7932
  br label %return, !dbg !7933

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %union.tree_node* [ %call, %if.then ], [ %call2, %if.end ], !dbg !7924
  ret %union.tree_node* %retval.0, !dbg !7934
}

declare dso_local zeroext i8 @pedwarn(i32, i32, i8*, ...) local_unnamed_addr #2

declare dso_local void @real_inf(%struct.real_value*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_real(%union.tree_node*, %struct.real_value* byval(%struct.real_value) align 8) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @type_to_class(%union.tree_node* %type) unnamed_addr #5 !dbg !7935 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !7939, metadata !DIExpression()), !dbg !7940
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7941
  %bf.load = load i64, i64* %0, align 8, !dbg !7941
  %1 = trunc i64 %bf.load to i16, !dbg !7941
  switch i16 %1, label %sw.default [
    i16 19, label %return
    i16 8, label %sw.bb1
    i16 6, label %sw.bb2
    i16 7, label %sw.bb3
    i16 10, label %sw.bb4
    i16 12, label %sw.bb5
    i16 5, label %sw.bb6
    i16 9, label %sw.bb7
    i16 13, label %sw.bb8
    i16 20, label %sw.bb9
    i16 21, label %sw.bb10
    i16 16, label %sw.bb11
    i16 17, label %sw.bb12
    i16 18, label %sw.bb12
    i16 15, label %sw.bb13
    i16 22, label %sw.bb17
  ], !dbg !7942

sw.bb1:                                           ; preds = %entry
  br label %return, !dbg !7943

sw.bb2:                                           ; preds = %entry
  br label %return, !dbg !7945

sw.bb3:                                           ; preds = %entry
  br label %return, !dbg !7946

sw.bb4:                                           ; preds = %entry
  br label %return, !dbg !7947

sw.bb5:                                           ; preds = %entry
  br label %return, !dbg !7948

sw.bb6:                                           ; preds = %entry
  br label %return, !dbg !7949

sw.bb7:                                           ; preds = %entry
  br label %return, !dbg !7950

sw.bb8:                                           ; preds = %entry
  br label %return, !dbg !7951

sw.bb9:                                           ; preds = %entry
  br label %return, !dbg !7952

sw.bb10:                                          ; preds = %entry
  br label %return, !dbg !7953

sw.bb11:                                          ; preds = %entry
  br label %return, !dbg !7954

sw.bb12:                                          ; preds = %entry, %entry
  br label %return, !dbg !7955

sw.bb13:                                          ; preds = %entry
  %type14 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !7956
  %string_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type14, i64 0, i32 6, !dbg !7956
  %bf.load15 = load i32, i32* %string_flag, align 4, !dbg !7956
  %bf.clear16 = and i32 %bf.load15, 16777216, !dbg !7956
  %tobool = icmp eq i32 %bf.clear16, 0, !dbg !7956
  %cond = select i1 %tobool, i32 14, i32 15, !dbg !7956
  br label %return, !dbg !7957

sw.bb17:                                          ; preds = %entry
  br label %return, !dbg !7958

sw.default:                                       ; preds = %entry
  br label %return, !dbg !7959

return:                                           ; preds = %entry, %sw.default, %sw.bb17, %sw.bb13, %sw.bb12, %sw.bb11, %sw.bb10, %sw.bb9, %sw.bb8, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1
  %retval.0 = phi i32 [ -1, %sw.default ], [ 16, %sw.bb17 ], [ %cond, %sw.bb13 ], [ 13, %sw.bb12 ], [ 12, %sw.bb11 ], [ 11, %sw.bb10 ], [ 10, %sw.bb9 ], [ 9, %sw.bb8 ], [ 8, %sw.bb7 ], [ 7, %sw.bb6 ], [ 6, %sw.bb5 ], [ 5, %sw.bb4 ], [ 4, %sw.bb3 ], [ 3, %sw.bb2 ], [ 1, %sw.bb1 ], [ 0, %entry ], !dbg !7960
  ret i32 %retval.0, !dbg !7961
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_constant_p(%union.tree_node* %arg) unnamed_addr #5 !dbg !7962 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !7964, metadata !DIExpression()), !dbg !7968
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %arg) #7, !dbg !7969
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !7964, metadata !DIExpression()), !dbg !7968
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7970
  %bf.load = load i64, i64* %0, align 8, !dbg !7970
  %bf.cast = and i64 %bf.load, 65535, !dbg !7970
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !7970
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7970
  %cmp = icmp eq i32 %1, 1, !dbg !7970
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7972

lor.lhs.false:                                    ; preds = %entry
  %cmp5 = icmp eq i64 %bf.cast, 51, !dbg !7973
  br i1 %cmp5, label %land.lhs.true, label %if.end, !dbg !7974

land.lhs.true:                                    ; preds = %lor.lhs.false
  %bf.cast914 = and i64 %bf.load, 131072, !dbg !7975
  %tobool = icmp eq i64 %bf.cast914, 0, !dbg !7975
  br i1 %tobool, label %if.end, label %if.then, !dbg !7976

if.then:                                          ; preds = %land.lhs.true, %entry
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !7977
  br label %return, !dbg !7978

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %cmp14 = icmp eq i64 %bf.cast, 121, !dbg !7979
  br i1 %cmp14, label %if.then15, label %if.end45, !dbg !7980

if.then15:                                        ; preds = %if.end
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7981
  %3 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !7981
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !7965, metadata !DIExpression()), !dbg !7982
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !7983
  %bf.load18 = load i64, i64* %4, align 8, !dbg !7983
  %bf.cast2011 = and i64 %bf.load18, 65535, !dbg !7985
  %cmp21 = icmp eq i64 %bf.cast2011, 28, !dbg !7985
  br i1 %cmp21, label %if.then43, label %lor.lhs.false22, !dbg !7986

lor.lhs.false22:                                  ; preds = %if.then15
  %cmp27 = icmp eq i64 %bf.cast2011, 45, !dbg !7987
  br i1 %cmp27, label %land.lhs.true28, label %cleanup, !dbg !7988

land.lhs.true28:                                  ; preds = %lor.lhs.false22
  %operands30 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !7989
  %arrayidx31 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands30, i64 1, !dbg !7989
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx31, align 8, !dbg !7989
  %call32 = tail call i32 @integer_zerop(%union.tree_node* %5) #7, !dbg !7990
  %tobool33 = icmp eq i32 %call32, 0, !dbg !7990
  br i1 %tobool33, label %cleanup, label %land.lhs.true34, !dbg !7991

land.lhs.true34:                                  ; preds = %land.lhs.true28
  %6 = bitcast %union.tree_node** %operands30 to i64**, !dbg !7992
  %7 = load i64*, i64** %6, align 8, !dbg !7992
  %bf.load39 = load i64, i64* %7, align 8, !dbg !7992
  %bf.cast4113 = and i64 %bf.load39, 65535, !dbg !7993
  %cmp42 = icmp eq i64 %bf.cast4113, 28, !dbg !7993
  br i1 %cmp42, label %if.then43, label %cleanup, !dbg !7994

if.then43:                                        ; preds = %land.lhs.true34, %if.then15
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !7995
  br label %cleanup, !dbg !7996

cleanup:                                          ; preds = %land.lhs.true28, %lor.lhs.false22, %land.lhs.true34, %if.then43
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then43 ], [ true, %land.lhs.true34 ], [ true, %land.lhs.true28 ], [ true, %lor.lhs.false22 ]
  %retval.0 = phi %union.tree_node* [ %8, %if.then43 ], [ undef, %land.lhs.true34 ], [ undef, %land.lhs.true28 ], [ undef, %lor.lhs.false22 ]
  br i1 %cleanup.dest.slot.0, label %cleanup.if.end45_crit_edge, label %return

cleanup.if.end45_crit_edge:                       ; preds = %cleanup
  %bf.load47.pre = load i64, i64* %0, align 8, !dbg !7997
  br label %if.end45

if.end45:                                         ; preds = %cleanup.if.end45_crit_edge, %if.end
  %bf.load47 = phi i64 [ %bf.load47.pre, %cleanup.if.end45_crit_edge ], [ %bf.load, %if.end ], !dbg !7997
  %bf.cast504 = and i64 %bf.load47, 65536, !dbg !7997
  %tobool51 = icmp eq i64 %bf.cast504, 0, !dbg !7997
  br i1 %tobool51, label %lor.lhs.false52, label %if.then102, !dbg !7999

lor.lhs.false52:                                  ; preds = %if.end45
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8000
  %9 = bitcast %union.tree_node** %type to i64**, !dbg !8000
  %10 = load i64*, i64** %9, align 8, !dbg !8000
  %bf.load54 = load i64, i64* %10, align 8, !dbg !8000
  %bf.cast565 = and i64 %bf.load54, 65535, !dbg !8000
  %cmp57 = icmp eq i64 %bf.cast565, 15, !dbg !8000
  br i1 %cmp57, label %if.then102, label %lor.lhs.false58, !dbg !8000

lor.lhs.false58:                                  ; preds = %lor.lhs.false52
  %cmp65 = icmp eq i64 %bf.cast565, 16, !dbg !8000
  br i1 %cmp65, label %if.then102, label %lor.lhs.false66, !dbg !8000

lor.lhs.false66:                                  ; preds = %lor.lhs.false58
  %cmp73 = icmp eq i64 %bf.cast565, 17, !dbg !8000
  br i1 %cmp73, label %if.then102, label %lor.lhs.false74, !dbg !8000

lor.lhs.false74:                                  ; preds = %lor.lhs.false66
  %cmp81 = icmp eq i64 %bf.cast565, 18, !dbg !8000
  br i1 %cmp81, label %if.then102, label %lor.lhs.false82, !dbg !8001

lor.lhs.false82:                                  ; preds = %lor.lhs.false74
  %cmp89 = icmp eq i64 %bf.cast565, 10, !dbg !8002
  br i1 %cmp89, label %if.then102, label %lor.lhs.false90, !dbg !8002

lor.lhs.false90:                                  ; preds = %lor.lhs.false82
  %cmp97 = icmp eq i64 %bf.cast565, 12, !dbg !8002
  br i1 %cmp97, label %if.then102, label %lor.lhs.false98, !dbg !8003

lor.lhs.false98:                                  ; preds = %lor.lhs.false90
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8004
  %cmp99 = icmp eq %struct.function* %11, null, !dbg !8005
  %12 = load i32, i32* @folding_initializer, align 4, !dbg !8006
  %tobool101 = icmp ne i32 %12, 0, !dbg !8006
  %or.cond = or i1 %cmp99, %tobool101, !dbg !8007
  br i1 %or.cond, label %if.then102, label %return, !dbg !8007

if.then102:                                       ; preds = %if.end45, %lor.lhs.false98, %lor.lhs.false90, %lor.lhs.false82, %lor.lhs.false74, %lor.lhs.false66, %lor.lhs.false58, %lor.lhs.false52
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8008
  br label %return, !dbg !8009

return:                                           ; preds = %lor.lhs.false98, %cleanup, %if.then102, %if.then
  %retval.1 = phi %union.tree_node* [ %2, %if.then ], [ %retval.0, %cleanup ], [ %13, %if.then102 ], [ null, %lor.lhs.false98 ], !dbg !7968
  ret %union.tree_node* %retval.1, !dbg !8010
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strlen(i32 %loc, %union.tree_node* %type, %union.tree_node* %arg) unnamed_addr #5 !dbg !8011 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8013, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8014, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8015, metadata !DIExpression()), !dbg !8019
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 10) #8, !dbg !8020
  %tobool = icmp eq i8 %call, 0, !dbg !8020
  br i1 %tobool, label %return, label %if.else, !dbg !8021

if.else:                                          ; preds = %entry
  %call1 = tail call %union.tree_node* @c_strlen(%union.tree_node* %arg, i32 0) #8, !dbg !8022
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8016, metadata !DIExpression()), !dbg !8023
  %tobool2 = icmp eq %union.tree_node* %call1, null, !dbg !8024
  br i1 %tobool2, label %return, label %if.then3, !dbg !8026

if.then3:                                         ; preds = %if.else
  %call4 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* nonnull %call1) #7, !dbg !8027
  br label %return, !dbg !8028

return:                                           ; preds = %if.else, %entry, %if.then3
  %retval.1 = phi %union.tree_node* [ null, %entry ], [ %call4, %if.then3 ], [ null, %if.else ], !dbg !8029
  ret %union.tree_node* %retval.1, !dbg !8030
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_fabs(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type) unnamed_addr #5 !dbg !8031 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8033, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8034, metadata !DIExpression()), !dbg !8036
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8035, metadata !DIExpression()), !dbg !8036
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8037
  %tobool = icmp eq i8 %call, 0, !dbg !8037
  br i1 %tobool, label %return, label %if.end, !dbg !8039

if.end:                                           ; preds = %entry
  %call1 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %arg) #7, !dbg !8040
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8034, metadata !DIExpression()), !dbg !8036
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8041
  %bf.load = load i64, i64* %0, align 8, !dbg !8041
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8043
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !8043
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !8044

if.then2:                                         ; preds = %if.end
  %call3 = tail call %union.tree_node* @fold_abs_const(%union.tree_node* %call1, %union.tree_node* %type) #7, !dbg !8045
  br label %return, !dbg !8046

if.end4:                                          ; preds = %if.end
  %call5 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 82, %union.tree_node* %type, %union.tree_node* %call1) #7, !dbg !8047
  br label %return, !dbg !8048

return:                                           ; preds = %entry, %if.end4, %if.then2
  %retval.0 = phi %union.tree_node* [ %call3, %if.then2 ], [ %call5, %if.end4 ], [ null, %entry ], !dbg !8036
  ret %union.tree_node* %retval.0, !dbg !8049
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_abs(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type) unnamed_addr #5 !dbg !8050 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8052, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8053, metadata !DIExpression()), !dbg !8055
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8054, metadata !DIExpression()), !dbg !8055
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 8) #8, !dbg !8056
  %tobool = icmp eq i8 %call, 0, !dbg !8056
  br i1 %tobool, label %return, label %if.end, !dbg !8058

if.end:                                           ; preds = %entry
  %call1 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %arg) #7, !dbg !8059
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8053, metadata !DIExpression()), !dbg !8055
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8060
  %bf.load = load i64, i64* %0, align 8, !dbg !8060
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8062
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !8062
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !8063

if.then2:                                         ; preds = %if.end
  %call3 = tail call %union.tree_node* @fold_abs_const(%union.tree_node* %call1, %union.tree_node* %type) #7, !dbg !8064
  br label %return, !dbg !8065

if.end4:                                          ; preds = %if.end
  %call5 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 82, %union.tree_node* %type, %union.tree_node* %call1) #7, !dbg !8066
  br label %return, !dbg !8067

return:                                           ; preds = %entry, %if.end4, %if.then2
  %retval.0 = phi %union.tree_node* [ %call3, %if.then2 ], [ %call5, %if.end4 ], [ null, %entry ], !dbg !8055
  ret %union.tree_node* %retval.0, !dbg !8068
}

declare dso_local %union.tree_node* @fold_build1_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @non_lvalue_loc(i32, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_ccos(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type, %union.tree_node* %fndecl, i8 zeroext %hyper) unnamed_addr #5 !dbg !8069 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8071, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8072, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8073, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8074, metadata !DIExpression()), !dbg !8076
  call void @llvm.dbg.value(metadata i8 %hyper, metadata !8075, metadata !DIExpression()), !dbg !8076
  ret %union.tree_node* undef, !dbg !8077
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_cabs(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type, %union.tree_node* %fndecl) unnamed_addr #5 !dbg !8078 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8082, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8083, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8084, metadata !DIExpression()), !dbg !8086
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8085, metadata !DIExpression()), !dbg !8086
  ret %union.tree_node* undef, !dbg !8087
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_carg(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type) unnamed_addr #5 !dbg !8088 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8090, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8091, metadata !DIExpression()), !dbg !8101
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8092, metadata !DIExpression()), !dbg !8101
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 13) #8, !dbg !8102
  %tobool = icmp eq i8 %call, 0, !dbg !8102
  br i1 %tobool, label %if.end12, label %land.lhs.true, !dbg !8103

land.lhs.true:                                    ; preds = %entry
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8104
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !8104
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !8104
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !8104
  %2 = bitcast %union.tree_node** %type3 to i64**, !dbg !8104
  %3 = load i64*, i64** %2, align 8, !dbg !8104
  %bf.load = load i64, i64* %3, align 8, !dbg !8104
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8105
  %cmp = icmp eq i64 %bf.cast1, 9, !dbg !8105
  br i1 %cmp, label %if.then, label %if.end12, !dbg !8106

if.then:                                          ; preds = %land.lhs.true
  %call5 = tail call %union.tree_node* @mathfn_built_in(%union.tree_node* %type, i32 13) #8, !dbg !8107
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !8093, metadata !DIExpression()), !dbg !8108
  %tobool6 = icmp eq %union.tree_node* %call5, null, !dbg !8109
  br i1 %tobool6, label %cleanup, label %if.then7, !dbg !8110

if.then7:                                         ; preds = %if.then
  %call8 = tail call fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %arg) #8, !dbg !8111
  call void @llvm.dbg.value(metadata %union.tree_node* %call8, metadata !8096, metadata !DIExpression()), !dbg !8112
  %call9 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 43, %union.tree_node* %type, %union.tree_node* %call8) #7, !dbg !8113
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !8099, metadata !DIExpression()), !dbg !8112
  %call10 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 44, %union.tree_node* %type, %union.tree_node* %call8) #7, !dbg !8114
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !8100, metadata !DIExpression()), !dbg !8112
  %call11 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %call5, i32 2, %union.tree_node* %call10, %union.tree_node* %call9) #8, !dbg !8115
  br label %cleanup

cleanup:                                          ; preds = %if.then, %if.then7
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then7 ], [ true, %if.then ]
  %retval.0 = phi %union.tree_node* [ %call11, %if.then7 ], [ undef, %if.then ]
  br i1 %cleanup.dest.slot.0, label %if.end12, label %return

if.end12:                                         ; preds = %entry, %cleanup, %land.lhs.true
  br label %return, !dbg !8116

return:                                           ; preds = %cleanup, %if.end12
  %retval.1 = phi %union.tree_node* [ %retval.0, %cleanup ], [ null, %if.end12 ], !dbg !8101
  ret %union.tree_node* %retval.1, !dbg !8117
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_sqrt(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type) unnamed_addr #5 !dbg !8118 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8120, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8121, metadata !DIExpression()), !dbg !8123
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8122, metadata !DIExpression()), !dbg !8123
  ret %union.tree_node* undef, !dbg !8124
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_cbrt(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type) unnamed_addr #5 !dbg !8125 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8127, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8128, metadata !DIExpression()), !dbg !8130
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8129, metadata !DIExpression()), !dbg !8130
  ret %union.tree_node* undef, !dbg !8131
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_cos(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type, %union.tree_node* %fndecl) unnamed_addr #5 !dbg !8132 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8134, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8135, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8136, metadata !DIExpression()), !dbg !8138
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8137, metadata !DIExpression()), !dbg !8138
  ret %union.tree_node* undef, !dbg !8139
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_tan(%union.tree_node* %arg, %union.tree_node* %type) unnamed_addr #5 !dbg !8140 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8144, metadata !DIExpression()), !dbg !8146
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8145, metadata !DIExpression()), !dbg !8146
  ret %union.tree_node* undef, !dbg !8147
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_cexp(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %type) unnamed_addr #5 !dbg !8148 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8150, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !8151, metadata !DIExpression()), !dbg !8153
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8152, metadata !DIExpression()), !dbg !8153
  ret %union.tree_node* undef, !dbg !8154
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_cosh(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type, %union.tree_node* %fndecl) unnamed_addr #5 !dbg !8155 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8157, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8158, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8159, metadata !DIExpression()), !dbg !8161
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8160, metadata !DIExpression()), !dbg !8161
  ret %union.tree_node* undef, !dbg !8162
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_nan(%union.tree_node* %arg, %union.tree_node* %type, i32 %quiet) unnamed_addr #5 !dbg !8163 {
entry:
  %real = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8167, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8168, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.value(metadata i32 %quiet, metadata !8169, metadata !DIExpression()), !dbg !8172
  %0 = bitcast %struct.real_value* %real to i8*, !dbg !8173
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #6, !dbg !8173
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 10) #8, !dbg !8174
  %tobool = icmp eq i8 %call, 0, !dbg !8174
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8176

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i8* @c_getstr(%union.tree_node* %arg) #8, !dbg !8177
  call void @llvm.dbg.value(metadata i8* %call1, metadata !8171, metadata !DIExpression()), !dbg !8172
  %tobool2 = icmp eq i8* %call1, null, !dbg !8178
  br i1 %tobool2, label %cleanup, label %if.end4, !dbg !8180

if.end4:                                          ; preds = %if.end
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8181
  %bf.load = load i64, i64* %1, align 8, !dbg !8181
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8181
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !8181
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8181

cond.true:                                        ; preds = %if.end4
  %call5 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !8181
  br label %cond.end, !dbg !8181

cond.false:                                       ; preds = %if.end4
  %type6 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !8181
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type6, i64 0, i32 6, !dbg !8181
  %bf.load7 = load i32, i32* %mode, align 4, !dbg !8181
  %bf.lshr = lshr i32 %bf.load7, 16, !dbg !8181
  %bf.clear8 = and i32 %bf.lshr, 255, !dbg !8181
  br label %cond.end, !dbg !8181

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call5, %cond.true ], [ %bf.clear8, %cond.false ], !dbg !8181
  call void @llvm.dbg.value(metadata %struct.real_value* %real, metadata !8170, metadata !DIExpression(DW_OP_deref)), !dbg !8172
  %call9 = call zeroext i8 @real_nan(%struct.real_value* nonnull %real, i8* nonnull %call1, i32 %quiet, i32 %cond) #7, !dbg !8183
  %tobool10 = icmp eq i8 %call9, 0, !dbg !8183
  br i1 %tobool10, label %cleanup, label %if.end12, !dbg !8184

if.end12:                                         ; preds = %cond.end
  call void @llvm.dbg.value(metadata %struct.real_value* %real, metadata !8170, metadata !DIExpression(DW_OP_deref)), !dbg !8172
  %call13 = call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 %real) #7, !dbg !8185
  br label %cleanup, !dbg !8186

cleanup:                                          ; preds = %cond.end, %if.end, %entry, %if.end12
  %retval.0 = phi %union.tree_node* [ %call13, %if.end12 ], [ null, %entry ], [ null, %if.end ], [ null, %cond.end ], !dbg !8172
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #6, !dbg !8187
  ret %union.tree_node* %retval.0, !dbg !8187
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_floor(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8188 {
entry:
  %x = alloca %struct.real_value, align 8
  %r = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8190, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8191, metadata !DIExpression()), !dbg !8203
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8192, metadata !DIExpression()), !dbg !8203
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8204
  %tobool = icmp eq i8 %call, 0, !dbg !8204
  br i1 %tobool, label %return, label %if.end, !dbg !8206

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8207
  %bf.load = load i64, i64* %0, align 8, !dbg !8207
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !8208
  %cmp = icmp eq i64 %bf.cast2, 24, !dbg !8208
  br i1 %cmp, label %land.lhs.true, label %if.end26, !dbg !8209

land.lhs.true:                                    ; preds = %if.end
  %bf.cast43 = and i64 %bf.load, 134217728, !dbg !8210
  %tobool5 = icmp eq i64 %bf.cast43, 0, !dbg !8210
  br i1 %tobool5, label %if.then6, label %if.end26, !dbg !8211

if.then6:                                         ; preds = %land.lhs.true
  %1 = bitcast %struct.real_value* %x to i8*, !dbg !8212
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8212
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8213
  %2 = bitcast i32* %real_cst_ptr to i8**, !dbg !8213
  %3 = load i8*, i8** %2, align 8, !dbg !8213
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* align 8 %3, i64 32, i1 false), !dbg !8213
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8193, metadata !DIExpression(DW_OP_deref)), !dbg !8214
  %call7 = call zeroext i8 @real_isnan(%struct.real_value* nonnull %x) #7, !dbg !8215
  %tobool8 = icmp ne i8 %call7, 0, !dbg !8215
  %4 = load i32, i32* @flag_errno_math, align 4, !dbg !8216
  %tobool9 = icmp ne i32 %4, 0, !dbg !8216
  %or.cond = and i1 %tobool8, %tobool9, !dbg !8217
  br i1 %or.cond, label %cleanup, label %if.then10, !dbg !8217

if.then10:                                        ; preds = %if.then6
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8218
  %5 = bitcast %union.tree_node** %type11 to %struct.tree_common**, !dbg !8218
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !8218
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !8218
  %7 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !8218
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8196, metadata !DIExpression()), !dbg !8219
  %8 = bitcast %struct.real_value* %r to i8*, !dbg !8220
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6, !dbg !8220
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8221
  %bf.load15 = load i64, i64* %9, align 8, !dbg !8221
  %bf.cast174 = and i64 %bf.load15, 65535, !dbg !8221
  %cmp18 = icmp eq i64 %bf.cast174, 14, !dbg !8221
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !8221

cond.true:                                        ; preds = %if.then10
  %call19 = call i32 @vector_type_mode(%union.tree_node* %7) #7, !dbg !8221
  br label %cond.end, !dbg !8221

cond.false:                                       ; preds = %if.then10
  %type20 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !8221
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i64 0, i32 6, !dbg !8221
  %bf.load21 = load i32, i32* %mode, align 4, !dbg !8221
  %bf.lshr22 = lshr i32 %bf.load21, 16, !dbg !8221
  %bf.clear23 = and i32 %bf.lshr22, 255, !dbg !8221
  br label %cond.end, !dbg !8221

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call19, %cond.true ], [ %bf.clear23, %cond.false ], !dbg !8221
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8193, metadata !DIExpression(DW_OP_deref)), !dbg !8214
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8199, metadata !DIExpression(DW_OP_deref)), !dbg !8219
  call void @real_floor(%struct.real_value* nonnull %r, i32 %cond, %struct.real_value* nonnull %x) #7, !dbg !8222
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8199, metadata !DIExpression(DW_OP_deref)), !dbg !8219
  %call24 = call %union.tree_node* @build_real(%union.tree_node* %7, %struct.real_value* nonnull byval(%struct.real_value) align 8 %r) #7, !dbg !8223
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6, !dbg !8224
  br label %cleanup

cleanup:                                          ; preds = %if.then6, %cond.end
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end ], [ true, %if.then6 ]
  %retval.0 = phi %union.tree_node* [ %call24, %cond.end ], [ undef, %if.then6 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8225
  br i1 %cleanup.dest.slot.0, label %if.end26, label %return

if.end26:                                         ; preds = %land.lhs.true, %cleanup, %if.end
  %retval.1 = phi %union.tree_node* [ undef, %land.lhs.true ], [ undef, %if.end ], [ %retval.0, %cleanup ]
  %call27 = call zeroext i8 @tree_expr_nonnegative_p(%union.tree_node* %arg) #7, !dbg !8226
  %tobool28 = icmp eq i8 %call27, 0, !dbg !8226
  br i1 %tobool28, label %if.end40, label %if.then29, !dbg !8227

if.then29:                                        ; preds = %if.end26
  %type31 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8228
  %10 = load %union.tree_node*, %union.tree_node** %type31, align 8, !dbg !8228
  %call32 = call %union.tree_node* @mathfn_built_in(%union.tree_node* %10, i32 240) #8, !dbg !8229
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !8200, metadata !DIExpression()), !dbg !8230
  %tobool33 = icmp eq %union.tree_node* %call32, null, !dbg !8231
  br i1 %tobool33, label %cleanup37, label %if.then34, !dbg !8233

if.then34:                                        ; preds = %if.then29
  %call35 = call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %call32, i32 1, %union.tree_node* %arg) #8, !dbg !8234
  br label %cleanup37, !dbg !8235

cleanup37:                                        ; preds = %if.then29, %if.then34
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then34 ], [ true, %if.then29 ]
  %retval.2 = phi %union.tree_node* [ %call35, %if.then34 ], [ %retval.1, %if.then29 ]
  br i1 %cleanup.dest.slot.1, label %if.end40, label %return

if.end40:                                         ; preds = %if.end26, %cleanup37
  %call41 = call fastcc %union.tree_node* @fold_trunc_transparent_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) #8, !dbg !8236
  br label %return, !dbg !8237

return:                                           ; preds = %entry, %cleanup37, %cleanup, %if.end40
  %retval.3 = phi %union.tree_node* [ %retval.2, %cleanup37 ], [ %call41, %if.end40 ], [ %retval.0, %cleanup ], [ null, %entry ]
  ret %union.tree_node* %retval.3, !dbg !8238
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_ceil(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8239 {
entry:
  %x = alloca %struct.real_value, align 8
  %r = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8241, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8242, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8243, metadata !DIExpression()), !dbg !8251
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8252
  %tobool = icmp eq i8 %call, 0, !dbg !8252
  br i1 %tobool, label %return, label %if.end, !dbg !8254

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8255
  %bf.load = load i64, i64* %0, align 8, !dbg !8255
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8256
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !8256
  br i1 %cmp, label %land.lhs.true, label %if.end26, !dbg !8257

land.lhs.true:                                    ; preds = %if.end
  %bf.cast42 = and i64 %bf.load, 134217728, !dbg !8258
  %tobool5 = icmp eq i64 %bf.cast42, 0, !dbg !8258
  br i1 %tobool5, label %if.then6, label %if.end26, !dbg !8259

if.then6:                                         ; preds = %land.lhs.true
  %1 = bitcast %struct.real_value* %x to i8*, !dbg !8260
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8260
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8261
  %2 = bitcast i32* %real_cst_ptr to i8**, !dbg !8261
  %3 = load i8*, i8** %2, align 8, !dbg !8261
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* align 8 %3, i64 32, i1 false), !dbg !8261
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8244, metadata !DIExpression(DW_OP_deref)), !dbg !8262
  %call7 = call zeroext i8 @real_isnan(%struct.real_value* nonnull %x) #7, !dbg !8263
  %tobool8 = icmp ne i8 %call7, 0, !dbg !8263
  %4 = load i32, i32* @flag_errno_math, align 4, !dbg !8264
  %tobool9 = icmp ne i32 %4, 0, !dbg !8264
  %or.cond = and i1 %tobool8, %tobool9, !dbg !8265
  br i1 %or.cond, label %cleanup, label %if.then10, !dbg !8265

if.then10:                                        ; preds = %if.then6
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8266
  %5 = bitcast %union.tree_node** %type11 to %struct.tree_common**, !dbg !8266
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !8266
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !8266
  %7 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !8266
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8247, metadata !DIExpression()), !dbg !8267
  %8 = bitcast %struct.real_value* %r to i8*, !dbg !8268
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6, !dbg !8268
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8269
  %bf.load15 = load i64, i64* %9, align 8, !dbg !8269
  %bf.cast173 = and i64 %bf.load15, 65535, !dbg !8269
  %cmp18 = icmp eq i64 %bf.cast173, 14, !dbg !8269
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !8269

cond.true:                                        ; preds = %if.then10
  %call19 = call i32 @vector_type_mode(%union.tree_node* %7) #7, !dbg !8269
  br label %cond.end, !dbg !8269

cond.false:                                       ; preds = %if.then10
  %type20 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !8269
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i64 0, i32 6, !dbg !8269
  %bf.load21 = load i32, i32* %mode, align 4, !dbg !8269
  %bf.lshr22 = lshr i32 %bf.load21, 16, !dbg !8269
  %bf.clear23 = and i32 %bf.lshr22, 255, !dbg !8269
  br label %cond.end, !dbg !8269

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call19, %cond.true ], [ %bf.clear23, %cond.false ], !dbg !8269
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8244, metadata !DIExpression(DW_OP_deref)), !dbg !8262
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8250, metadata !DIExpression(DW_OP_deref)), !dbg !8267
  call void @real_ceil(%struct.real_value* nonnull %r, i32 %cond, %struct.real_value* nonnull %x) #7, !dbg !8270
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8250, metadata !DIExpression(DW_OP_deref)), !dbg !8267
  %call24 = call %union.tree_node* @build_real(%union.tree_node* %7, %struct.real_value* nonnull byval(%struct.real_value) align 8 %r) #7, !dbg !8271
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6, !dbg !8272
  br label %cleanup

cleanup:                                          ; preds = %if.then6, %cond.end
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end ], [ true, %if.then6 ]
  %retval.0 = phi %union.tree_node* [ %call24, %cond.end ], [ undef, %if.then6 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8273
  br i1 %cleanup.dest.slot.0, label %if.end26, label %return

if.end26:                                         ; preds = %land.lhs.true, %cleanup, %if.end
  %call27 = call fastcc %union.tree_node* @fold_trunc_transparent_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) #8, !dbg !8274
  br label %return, !dbg !8275

return:                                           ; preds = %entry, %cleanup, %if.end26
  %retval.1 = phi %union.tree_node* [ %call27, %if.end26 ], [ %retval.0, %cleanup ], [ null, %entry ]
  ret %union.tree_node* %retval.1, !dbg !8276
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_trunc(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8277 {
entry:
  %r = alloca %struct.real_value, align 8
  %x = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8279, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8280, metadata !DIExpression()), !dbg !8287
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8281, metadata !DIExpression()), !dbg !8287
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8288
  %tobool = icmp eq i8 %call, 0, !dbg !8288
  br i1 %tobool, label %return, label %if.end, !dbg !8290

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8291
  %bf.load = load i64, i64* %0, align 8, !dbg !8291
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8292
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !8292
  br i1 %cmp, label %land.lhs.true, label %if.end21, !dbg !8293

land.lhs.true:                                    ; preds = %if.end
  %bf.cast42 = and i64 %bf.load, 134217728, !dbg !8294
  %tobool5 = icmp eq i64 %bf.cast42, 0, !dbg !8294
  br i1 %tobool5, label %if.then6, label %if.end21, !dbg !8295

if.then6:                                         ; preds = %land.lhs.true
  %1 = bitcast %struct.real_value* %r to i8*, !dbg !8296
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8296
  %2 = bitcast %struct.real_value* %x to i8*, !dbg !8296
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #6, !dbg !8296
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8297
  %3 = bitcast %union.tree_node** %type7 to %struct.tree_common**, !dbg !8297
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !8297
  %type9 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !8297
  %5 = load %union.tree_node*, %union.tree_node** %type9, align 8, !dbg !8297
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !8286, metadata !DIExpression()), !dbg !8298
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8299
  %6 = bitcast i32* %real_cst_ptr to i8**, !dbg !8299
  %7 = load i8*, i8** %6, align 8, !dbg !8299
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %7, i64 32, i1 false), !dbg !8299
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8300
  %bf.load11 = load i64, i64* %8, align 8, !dbg !8300
  %bf.cast133 = and i64 %bf.load11, 65535, !dbg !8300
  %cmp14 = icmp eq i64 %bf.cast133, 14, !dbg !8300
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !8300

cond.true:                                        ; preds = %if.then6
  %call15 = tail call i32 @vector_type_mode(%union.tree_node* %5) #7, !dbg !8300
  br label %cond.end, !dbg !8300

cond.false:                                       ; preds = %if.then6
  %type16 = bitcast %union.tree_node* %5 to %struct.tree_type*, !dbg !8300
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i64 0, i32 6, !dbg !8300
  %bf.load17 = load i32, i32* %mode, align 4, !dbg !8300
  %bf.lshr18 = lshr i32 %bf.load17, 16, !dbg !8300
  %bf.clear19 = and i32 %bf.lshr18, 255, !dbg !8300
  br label %cond.end, !dbg !8300

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call15, %cond.true ], [ %bf.clear19, %cond.false ], !dbg !8300
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8282, metadata !DIExpression(DW_OP_deref)), !dbg !8298
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8285, metadata !DIExpression(DW_OP_deref)), !dbg !8298
  call void @real_trunc(%struct.real_value* nonnull %r, i32 %cond, %struct.real_value* nonnull %x) #7, !dbg !8301
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8282, metadata !DIExpression(DW_OP_deref)), !dbg !8298
  %call20 = call %union.tree_node* @build_real(%union.tree_node* %5, %struct.real_value* nonnull byval(%struct.real_value) align 8 %r) #7, !dbg !8302
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #6, !dbg !8303
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8303
  br label %return

if.end21:                                         ; preds = %land.lhs.true, %if.end
  %call22 = tail call fastcc %union.tree_node* @fold_trunc_transparent_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) #8, !dbg !8304
  br label %return, !dbg !8305

return:                                           ; preds = %entry, %if.end21, %cond.end
  %retval.0 = phi %union.tree_node* [ %call22, %if.end21 ], [ %call20, %cond.end ], [ null, %entry ], !dbg !8287
  ret %union.tree_node* %retval.0, !dbg !8306
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_round(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8307 {
entry:
  %x = alloca %struct.real_value, align 8
  %r = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8309, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8310, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8311, metadata !DIExpression()), !dbg !8319
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8320
  %tobool = icmp eq i8 %call, 0, !dbg !8320
  br i1 %tobool, label %return, label %if.end, !dbg !8322

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8323
  %bf.load = load i64, i64* %0, align 8, !dbg !8323
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8324
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !8324
  br i1 %cmp, label %land.lhs.true, label %if.end26, !dbg !8325

land.lhs.true:                                    ; preds = %if.end
  %bf.cast42 = and i64 %bf.load, 134217728, !dbg !8326
  %tobool5 = icmp eq i64 %bf.cast42, 0, !dbg !8326
  br i1 %tobool5, label %if.then6, label %if.end26, !dbg !8327

if.then6:                                         ; preds = %land.lhs.true
  %1 = bitcast %struct.real_value* %x to i8*, !dbg !8328
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8328
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8329
  %2 = bitcast i32* %real_cst_ptr to i8**, !dbg !8329
  %3 = load i8*, i8** %2, align 8, !dbg !8329
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* align 8 %3, i64 32, i1 false), !dbg !8329
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8312, metadata !DIExpression(DW_OP_deref)), !dbg !8330
  %call7 = call zeroext i8 @real_isnan(%struct.real_value* nonnull %x) #7, !dbg !8331
  %tobool8 = icmp ne i8 %call7, 0, !dbg !8331
  %4 = load i32, i32* @flag_errno_math, align 4, !dbg !8332
  %tobool9 = icmp ne i32 %4, 0, !dbg !8332
  %or.cond = and i1 %tobool8, %tobool9, !dbg !8333
  br i1 %or.cond, label %cleanup, label %if.then10, !dbg !8333

if.then10:                                        ; preds = %if.then6
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8334
  %5 = bitcast %union.tree_node** %type11 to %struct.tree_common**, !dbg !8334
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !8334
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !8334
  %7 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !8334
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8315, metadata !DIExpression()), !dbg !8335
  %8 = bitcast %struct.real_value* %r to i8*, !dbg !8336
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6, !dbg !8336
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8337
  %bf.load15 = load i64, i64* %9, align 8, !dbg !8337
  %bf.cast173 = and i64 %bf.load15, 65535, !dbg !8337
  %cmp18 = icmp eq i64 %bf.cast173, 14, !dbg !8337
  br i1 %cmp18, label %cond.true, label %cond.false, !dbg !8337

cond.true:                                        ; preds = %if.then10
  %call19 = call i32 @vector_type_mode(%union.tree_node* %7) #7, !dbg !8337
  br label %cond.end, !dbg !8337

cond.false:                                       ; preds = %if.then10
  %type20 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !8337
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type20, i64 0, i32 6, !dbg !8337
  %bf.load21 = load i32, i32* %mode, align 4, !dbg !8337
  %bf.lshr22 = lshr i32 %bf.load21, 16, !dbg !8337
  %bf.clear23 = and i32 %bf.lshr22, 255, !dbg !8337
  br label %cond.end, !dbg !8337

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call19, %cond.true ], [ %bf.clear23, %cond.false ], !dbg !8337
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8312, metadata !DIExpression(DW_OP_deref)), !dbg !8330
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8318, metadata !DIExpression(DW_OP_deref)), !dbg !8335
  call void @real_round(%struct.real_value* nonnull %r, i32 %cond, %struct.real_value* nonnull %x) #7, !dbg !8338
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8318, metadata !DIExpression(DW_OP_deref)), !dbg !8335
  %call24 = call %union.tree_node* @build_real(%union.tree_node* %7, %struct.real_value* nonnull byval(%struct.real_value) align 8 %r) #7, !dbg !8339
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6, !dbg !8340
  br label %cleanup

cleanup:                                          ; preds = %if.then6, %cond.end
  %cleanup.dest.slot.0 = phi i1 [ false, %cond.end ], [ true, %if.then6 ]
  %retval.0 = phi %union.tree_node* [ %call24, %cond.end ], [ undef, %if.then6 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8341
  br i1 %cleanup.dest.slot.0, label %if.end26, label %return

if.end26:                                         ; preds = %land.lhs.true, %cleanup, %if.end
  %call27 = call fastcc %union.tree_node* @fold_trunc_transparent_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) #8, !dbg !8342
  br label %return, !dbg !8343

return:                                           ; preds = %entry, %cleanup, %if.end26
  %retval.1 = phi %union.tree_node* [ %call27, %if.end26 ], [ %retval.0, %cleanup ], [ null, %entry ]
  ret %union.tree_node* %retval.1, !dbg !8344
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_trunc_transparent_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8345 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8347, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8348, metadata !DIExpression()), !dbg !8357
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8349, metadata !DIExpression()), !dbg !8357
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !8358
  %bf.load = load i32, i32* %function_code, align 8, !dbg !8358
  %bf.clear = and i32 %bf.load, 2047, !dbg !8358
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !8350, metadata !DIExpression()), !dbg !8357
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8359
  %tobool = icmp eq i8 %call, 0, !dbg !8359
  br i1 %tobool, label %cleanup37, label %if.end, !dbg !8361

if.end:                                           ; preds = %entry
  %call1 = tail call i32 @builtin_mathfn_code(%union.tree_node* %arg) #8, !dbg !8362
  %cmp = icmp eq i32 %bf.clear, %call1, !dbg !8364
  br i1 %cmp, label %cleanup37, label %if.end3, !dbg !8365

if.end3:                                          ; preds = %if.end
  %0 = load i32, i32* @flag_errno_math, align 4, !dbg !8366
  %tobool4 = icmp eq i32 %0, 0, !dbg !8366
  br i1 %tobool4, label %land.lhs.true, label %if.end8, !dbg !8368

land.lhs.true:                                    ; preds = %if.end3
  %call5 = tail call fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %arg) #8, !dbg !8369
  %tobool6 = icmp eq i8 %call5, 0, !dbg !8369
  br i1 %tobool6, label %if.end8, label %cleanup37, !dbg !8370

if.end8:                                          ; preds = %land.lhs.true, %if.end3
  %1 = load i32, i32* @optimize, align 4, !dbg !8371
  %tobool9 = icmp eq i32 %1, 0, !dbg !8371
  br i1 %tobool9, label %if.end36, label %if.then10, !dbg !8372

if.then10:                                        ; preds = %if.end8
  %call11 = tail call %union.tree_node* @strip_float_extensions(%union.tree_node* %arg) #7, !dbg !8373
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !8351, metadata !DIExpression()), !dbg !8374
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8375
  %2 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !8375
  %3 = load %struct.tree_common*, %struct.tree_common** %2, align 8, !dbg !8375
  %type13 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %3, i64 0, i32 2, !dbg !8375
  %4 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !8375
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !8354, metadata !DIExpression()), !dbg !8374
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8376
  %5 = load %union.tree_node*, %union.tree_node** %type15, align 8, !dbg !8376
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !8355, metadata !DIExpression()), !dbg !8374
  %type16 = bitcast %union.tree_node* %5 to %struct.tree_type*, !dbg !8377
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i64 0, i32 6, !dbg !8377
  %bf.load17 = load i32, i32* %precision, align 4, !dbg !8377
  %bf.clear18 = and i32 %bf.load17, 1023, !dbg !8377
  %type19 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !8379
  %precision20 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type19, i64 0, i32 6, !dbg !8379
  %bf.load21 = load i32, i32* %precision20, align 4, !dbg !8379
  %bf.clear22 = and i32 %bf.load21, 1023, !dbg !8379
  %cmp23 = icmp ult i32 %bf.clear18, %bf.clear22, !dbg !8380
  br i1 %cmp23, label %land.lhs.true25, label %cleanup, !dbg !8381

land.lhs.true25:                                  ; preds = %if.then10
  %call26 = tail call %union.tree_node* @mathfn_built_in(%union.tree_node* %5, i32 %bf.clear) #8, !dbg !8382
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !8356, metadata !DIExpression()), !dbg !8374
  %tobool27 = icmp eq %union.tree_node* %call26, null, !dbg !8383
  br i1 %tobool27, label %cleanup, label %if.then28, !dbg !8384

if.then28:                                        ; preds = %land.lhs.true25
  %call29 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %5, %union.tree_node* %call11) #7, !dbg !8385
  %call30 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %call26, i32 1, %union.tree_node* %call29) #8, !dbg !8386
  %call31 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %4, %union.tree_node* %call30) #7, !dbg !8387
  br label %cleanup, !dbg !8388

cleanup:                                          ; preds = %land.lhs.true25, %if.then10, %if.then28
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then28 ], [ true, %land.lhs.true25 ], [ true, %if.then10 ]
  %retval.0 = phi %union.tree_node* [ %call31, %if.then28 ], [ undef, %land.lhs.true25 ], [ undef, %if.then10 ]
  br i1 %cleanup.dest.slot.0, label %if.end36, label %cleanup37

if.end36:                                         ; preds = %if.end8, %cleanup
  br label %cleanup37, !dbg !8389

cleanup37:                                        ; preds = %land.lhs.true, %entry, %if.end, %cleanup, %if.end36
  %retval.1 = phi %union.tree_node* [ %retval.0, %cleanup ], [ null, %if.end36 ], [ null, %entry ], [ %arg, %if.end ], [ %arg, %land.lhs.true ], !dbg !8357
  ret %union.tree_node* %retval.1, !dbg !8390
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_int_roundingfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8391 {
entry:
  %x = alloca %struct.real_value, align 8
  %lo2 = alloca i64, align 8
  %hi = alloca i64, align 8
  %lo = alloca i64, align 8
  %r = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8393, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8394, metadata !DIExpression()), !dbg !8408
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8395, metadata !DIExpression()), !dbg !8408
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8409
  %tobool = icmp eq i8 %call, 0, !dbg !8409
  br i1 %tobool, label %return, label %if.end, !dbg !8411

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8412
  %bf.load = load i64, i64* %0, align 8, !dbg !8412
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !8413
  %cmp = icmp eq i64 %bf.cast2, 24, !dbg !8413
  br i1 %cmp, label %land.lhs.true, label %if.end72, !dbg !8414

land.lhs.true:                                    ; preds = %if.end
  %bf.cast43 = and i64 %bf.load, 134217728, !dbg !8415
  %tobool5 = icmp eq i64 %bf.cast43, 0, !dbg !8415
  br i1 %tobool5, label %if.then6, label %if.end72, !dbg !8416

if.then6:                                         ; preds = %land.lhs.true
  %1 = bitcast %struct.real_value* %x to i8*, !dbg !8417
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8417
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8418
  %2 = bitcast i32* %real_cst_ptr to i8**, !dbg !8418
  %3 = load i8*, i8** %2, align 8, !dbg !8418
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* align 8 %3, i64 32, i1 false), !dbg !8418
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8396, metadata !DIExpression(DW_OP_deref)), !dbg !8419
  %call7 = call zeroext i8 @real_isfinite(%struct.real_value* nonnull %x) #7, !dbg !8420
  %tobool8 = icmp eq i8 %call7, 0, !dbg !8420
  br i1 %tobool8, label %if.end68, label %if.then9, !dbg !8421

if.then9:                                         ; preds = %if.then6
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8422
  %4 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !8422
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !8422
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !8422
  %6 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !8422
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !8400, metadata !DIExpression()), !dbg !8423
  %type13 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8424
  %7 = load %union.tree_node*, %union.tree_node** %type13, align 8, !dbg !8424
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8403, metadata !DIExpression()), !dbg !8423
  %8 = bitcast i64* %lo2 to i8*, !dbg !8425
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !8425
  %9 = bitcast i64* %hi to i8*, !dbg !8426
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #6, !dbg !8426
  %10 = bitcast i64* %lo to i8*, !dbg !8426
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #6, !dbg !8426
  %11 = bitcast %struct.real_value* %r to i8*, !dbg !8427
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #6, !dbg !8427
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !8428
  %bf.load14 = load i32, i32* %function_code, align 8, !dbg !8428
  %bf.clear15 = and i32 %bf.load14, 2047, !dbg !8428
  switch i32 %bf.clear15, label %sw.default [
    i32 117, label %sw.bb
    i32 118, label %sw.bb
    i32 119, label %sw.bb
    i32 129, label %sw.bb
    i32 130, label %sw.bb
    i32 131, label %sw.bb
    i32 111, label %sw.bb26
    i32 112, label %sw.bb26
    i32 113, label %sw.bb26
    i32 126, label %sw.bb26
    i32 127, label %sw.bb26
    i32 128, label %sw.bb26
    i32 156, label %sw.bb42
    i32 157, label %sw.bb42
    i32 158, label %sw.bb42
    i32 135, label %sw.bb42
    i32 136, label %sw.bb42
    i32 137, label %sw.bb42
  ], !dbg !8429

sw.bb:                                            ; preds = %if.then9, %if.then9, %if.then9, %if.then9, %if.then9, %if.then9
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8430
  %bf.load17 = load i64, i64* %12, align 8, !dbg !8430
  %bf.cast196 = and i64 %bf.load17, 65535, !dbg !8430
  %cmp20 = icmp eq i64 %bf.cast196, 14, !dbg !8430
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !8430

cond.true:                                        ; preds = %sw.bb
  %call21 = call i32 @vector_type_mode(%union.tree_node* %7) #7, !dbg !8430
  br label %cond.end, !dbg !8430

cond.false:                                       ; preds = %sw.bb
  %type22 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !8430
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type22, i64 0, i32 6, !dbg !8430
  %bf.load23 = load i32, i32* %mode, align 4, !dbg !8430
  %bf.lshr24 = lshr i32 %bf.load23, 16, !dbg !8430
  %bf.clear25 = and i32 %bf.lshr24, 255, !dbg !8430
  br label %cond.end, !dbg !8430

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call21, %cond.true ], [ %bf.clear25, %cond.false ], !dbg !8430
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8396, metadata !DIExpression(DW_OP_deref)), !dbg !8419
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8407, metadata !DIExpression(DW_OP_deref)), !dbg !8423
  call void @real_floor(%struct.real_value* nonnull %r, i32 %cond, %struct.real_value* nonnull %x) #7, !dbg !8432
  br label %sw.epilog, !dbg !8433

sw.bb26:                                          ; preds = %if.then9, %if.then9, %if.then9, %if.then9, %if.then9, %if.then9
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8434
  %bf.load28 = load i64, i64* %13, align 8, !dbg !8434
  %bf.cast305 = and i64 %bf.load28, 65535, !dbg !8434
  %cmp31 = icmp eq i64 %bf.cast305, 14, !dbg !8434
  br i1 %cmp31, label %cond.true32, label %cond.false34, !dbg !8434

cond.true32:                                      ; preds = %sw.bb26
  %call33 = call i32 @vector_type_mode(%union.tree_node* %7) #7, !dbg !8434
  br label %cond.end40, !dbg !8434

cond.false34:                                     ; preds = %sw.bb26
  %type35 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !8434
  %mode36 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type35, i64 0, i32 6, !dbg !8434
  %bf.load37 = load i32, i32* %mode36, align 4, !dbg !8434
  %bf.lshr38 = lshr i32 %bf.load37, 16, !dbg !8434
  %bf.clear39 = and i32 %bf.lshr38, 255, !dbg !8434
  br label %cond.end40, !dbg !8434

cond.end40:                                       ; preds = %cond.false34, %cond.true32
  %cond41 = phi i32 [ %call33, %cond.true32 ], [ %bf.clear39, %cond.false34 ], !dbg !8434
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8396, metadata !DIExpression(DW_OP_deref)), !dbg !8419
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8407, metadata !DIExpression(DW_OP_deref)), !dbg !8423
  call void @real_ceil(%struct.real_value* nonnull %r, i32 %cond41, %struct.real_value* nonnull %x) #7, !dbg !8435
  br label %sw.epilog, !dbg !8436

sw.bb42:                                          ; preds = %if.then9, %if.then9, %if.then9, %if.then9, %if.then9, %if.then9
  %14 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8437
  %bf.load44 = load i64, i64* %14, align 8, !dbg !8437
  %bf.cast464 = and i64 %bf.load44, 65535, !dbg !8437
  %cmp47 = icmp eq i64 %bf.cast464, 14, !dbg !8437
  br i1 %cmp47, label %cond.true48, label %cond.false50, !dbg !8437

cond.true48:                                      ; preds = %sw.bb42
  %call49 = call i32 @vector_type_mode(%union.tree_node* %7) #7, !dbg !8437
  br label %cond.end56, !dbg !8437

cond.false50:                                     ; preds = %sw.bb42
  %type51 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !8437
  %mode52 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type51, i64 0, i32 6, !dbg !8437
  %bf.load53 = load i32, i32* %mode52, align 4, !dbg !8437
  %bf.lshr54 = lshr i32 %bf.load53, 16, !dbg !8437
  %bf.clear55 = and i32 %bf.lshr54, 255, !dbg !8437
  br label %cond.end56, !dbg !8437

cond.end56:                                       ; preds = %cond.false50, %cond.true48
  %cond57 = phi i32 [ %call49, %cond.true48 ], [ %bf.clear55, %cond.false50 ], !dbg !8437
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !8396, metadata !DIExpression(DW_OP_deref)), !dbg !8419
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8407, metadata !DIExpression(DW_OP_deref)), !dbg !8423
  call void @real_round(%struct.real_value* nonnull %r, i32 %cond57, %struct.real_value* nonnull %x) #7, !dbg !8438
  br label %sw.epilog, !dbg !8439

sw.default:                                       ; preds = %if.then9
  call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.724, i64 0, i64 0), i32 7529, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !8440
  br label %sw.epilog, !dbg !8441

sw.epilog:                                        ; preds = %sw.default, %cond.end56, %cond.end40, %cond.end
  call void @llvm.dbg.value(metadata i64* %hi, metadata !8405, metadata !DIExpression(DW_OP_deref)), !dbg !8423
  call void @llvm.dbg.value(metadata i64* %lo, metadata !8406, metadata !DIExpression(DW_OP_deref)), !dbg !8423
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8407, metadata !DIExpression(DW_OP_deref)), !dbg !8423
  call void @real_to_integer2(i64* nonnull %lo, i64* nonnull %hi, %struct.real_value* nonnull %r) #7, !dbg !8442
  %15 = load i64, i64* %lo, align 8, !dbg !8443
  call void @llvm.dbg.value(metadata i64 %15, metadata !8406, metadata !DIExpression()), !dbg !8423
  %16 = load i64, i64* %hi, align 8, !dbg !8445
  call void @llvm.dbg.value(metadata i64 %16, metadata !8405, metadata !DIExpression()), !dbg !8423
  call void @llvm.dbg.value(metadata i64* %lo2, metadata !8404, metadata !DIExpression(DW_OP_deref)), !dbg !8423
  call void @llvm.dbg.value(metadata i64* %hi, metadata !8405, metadata !DIExpression(DW_OP_deref)), !dbg !8423
  %call58 = call i32 @fit_double_type(i64 %15, i64 %16, i64* nonnull %lo2, i64* nonnull %hi, %union.tree_node* %6) #7, !dbg !8446
  %tobool59 = icmp eq i32 %call58, 0, !dbg !8446
  br i1 %tobool59, label %if.then60, label %cleanup, !dbg !8447

if.then60:                                        ; preds = %sw.epilog
  %17 = load i64, i64* %lo2, align 8, !dbg !8448
  call void @llvm.dbg.value(metadata i64 %17, metadata !8404, metadata !DIExpression()), !dbg !8423
  %18 = load i64, i64* %hi, align 8, !dbg !8449
  call void @llvm.dbg.value(metadata i64 %18, metadata !8405, metadata !DIExpression()), !dbg !8423
  %call61 = call %union.tree_node* @build_int_cst_wide(%union.tree_node* %6, i64 %17, i64 %18) #7, !dbg !8450
  br label %cleanup, !dbg !8451

cleanup:                                          ; preds = %sw.epilog, %if.then60
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then60 ], [ 0, %sw.epilog ]
  %retval.0 = phi %union.tree_node* [ %call61, %if.then60 ], [ undef, %sw.epilog ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #6, !dbg !8452
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #6, !dbg !8452
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #6, !dbg !8452
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !8452
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end68, label %cleanup69

if.end68:                                         ; preds = %if.then6, %cleanup
  %retval.1 = phi %union.tree_node* [ undef, %if.then6 ], [ %retval.0, %cleanup ]
  br label %cleanup69, !dbg !8453

cleanup69:                                        ; preds = %cleanup, %if.end68
  %cleanup.dest.slot.1 = phi i32 [ %cleanup.dest.slot.0, %cleanup ], [ 0, %if.end68 ], !dbg !8454
  %retval.2 = phi %union.tree_node* [ %retval.0, %cleanup ], [ %retval.1, %if.end68 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8453
  %switch = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %switch, label %if.end72, label %return

if.end72:                                         ; preds = %land.lhs.true, %cleanup69, %if.end
  %function_code74 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !8455
  %bf.load75 = load i32, i32* %function_code74, align 8, !dbg !8455
  %bf.clear76 = and i32 %bf.load75, 2047, !dbg !8455
  switch i32 %bf.clear76, label %sw.epilog88 [
    i32 117, label %sw.bb77
    i32 118, label %sw.bb77
    i32 119, label %sw.bb77
    i32 129, label %sw.bb77
    i32 130, label %sw.bb77
    i32 131, label %sw.bb77
  ], !dbg !8456

sw.bb77:                                          ; preds = %if.end72, %if.end72, %if.end72, %if.end72, %if.end72, %if.end72
  %call78 = call zeroext i8 @tree_expr_nonnegative_p(%union.tree_node* %arg) #7, !dbg !8457
  %tobool79 = icmp eq i8 %call78, 0, !dbg !8457
  br i1 %tobool79, label %sw.epilog88, label %if.then80, !dbg !8460

if.then80:                                        ; preds = %sw.bb77
  %type82 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8461
  %19 = bitcast %union.tree_node** %type82 to %struct.tree_common**, !dbg !8461
  %20 = load %struct.tree_common*, %struct.tree_common** %19, align 8, !dbg !8461
  %type84 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %20, i64 0, i32 2, !dbg !8461
  %21 = load %union.tree_node*, %union.tree_node** %type84, align 8, !dbg !8461
  %call85 = call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 77, %union.tree_node* %21, %union.tree_node* %arg) #7, !dbg !8461
  br label %return, !dbg !8462

sw.epilog88:                                      ; preds = %sw.bb77, %if.end72
  %call89 = call fastcc %union.tree_node* @fold_fixed_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) #8, !dbg !8463
  br label %return, !dbg !8464

return:                                           ; preds = %entry, %cleanup69, %sw.epilog88, %if.then80
  %retval.3 = phi %union.tree_node* [ %call89, %sw.epilog88 ], [ %call85, %if.then80 ], [ %retval.2, %cleanup69 ], [ null, %entry ]
  ret %union.tree_node* %retval.3, !dbg !8465
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_fixed_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8466 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8468, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8469, metadata !DIExpression()), !dbg !8484
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8470, metadata !DIExpression()), !dbg !8484
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !8485
  %bf.load = load i32, i32* %function_code, align 8, !dbg !8485
  %bf.clear = and i32 %bf.load, 2047, !dbg !8485
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !8471, metadata !DIExpression()), !dbg !8484
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8486
  %tobool = icmp eq i8 %call, 0, !dbg !8486
  br i1 %tobool, label %cleanup75, label %if.end, !dbg !8488

if.end:                                           ; preds = %entry
  %0 = load i32, i32* @flag_errno_math, align 4, !dbg !8489
  %tobool1 = icmp eq i32 %0, 0, !dbg !8489
  br i1 %tobool1, label %land.lhs.true, label %if.end8, !dbg !8491

land.lhs.true:                                    ; preds = %if.end
  %call2 = tail call fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %arg) #8, !dbg !8492
  %tobool3 = icmp eq i8 %call2, 0, !dbg !8492
  br i1 %tobool3, label %if.end8, label %if.then4, !dbg !8493

if.then4:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8494
  %1 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !8494
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !8494
  %type6 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !8494
  %3 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !8494
  %call7 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 77, %union.tree_node* %3, %union.tree_node* %arg) #7, !dbg !8494
  br label %cleanup75, !dbg !8495

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %4 = load i32, i32* @optimize, align 4, !dbg !8496
  %tobool9 = icmp eq i32 %4, 0, !dbg !8496
  br i1 %tobool9, label %if.end34, label %if.then10, !dbg !8497

if.then10:                                        ; preds = %if.end8
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8498
  %5 = bitcast %union.tree_node** %type12 to %struct.tree_type**, !dbg !8498
  %6 = load %struct.tree_type*, %struct.tree_type** %5, align 8, !dbg !8498
  %call13 = tail call %union.tree_node* @strip_float_extensions(%union.tree_node* %arg) #7, !dbg !8499
  call void @llvm.dbg.value(metadata %union.tree_node* %call13, metadata !8475, metadata !DIExpression()), !dbg !8500
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8501
  %7 = load %union.tree_node*, %union.tree_node** %type15, align 8, !dbg !8501
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !8476, metadata !DIExpression()), !dbg !8500
  %type16 = bitcast %union.tree_node* %7 to %struct.tree_type*, !dbg !8502
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type16, i64 0, i32 6, !dbg !8502
  %bf.load17 = load i32, i32* %precision, align 4, !dbg !8502
  %bf.clear18 = and i32 %bf.load17, 1023, !dbg !8502
  %precision20 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %6, i64 0, i32 6, !dbg !8504
  %bf.load21 = load i32, i32* %precision20, align 4, !dbg !8504
  %bf.clear22 = and i32 %bf.load21, 1023, !dbg !8504
  %cmp = icmp ult i32 %bf.clear18, %bf.clear22, !dbg !8505
  br i1 %cmp, label %land.lhs.true24, label %cleanup, !dbg !8506

land.lhs.true24:                                  ; preds = %if.then10
  %call25 = tail call %union.tree_node* @mathfn_built_in(%union.tree_node* %7, i32 %bf.clear) #8, !dbg !8507
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !8477, metadata !DIExpression()), !dbg !8500
  %tobool26 = icmp eq %union.tree_node* %call25, null, !dbg !8508
  br i1 %tobool26, label %cleanup, label %if.then27, !dbg !8509

if.then27:                                        ; preds = %land.lhs.true24
  %call28 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %7, %union.tree_node* %call13) #7, !dbg !8510
  %call29 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %call25, i32 1, %union.tree_node* %call28) #8, !dbg !8511
  br label %cleanup, !dbg !8512

cleanup:                                          ; preds = %land.lhs.true24, %if.then10, %if.then27
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then27 ], [ true, %land.lhs.true24 ], [ true, %if.then10 ]
  %retval.0 = phi %union.tree_node* [ %call29, %if.then27 ], [ undef, %land.lhs.true24 ], [ undef, %if.then10 ]
  br i1 %cleanup.dest.slot.0, label %if.end34, label %cleanup75

if.end34:                                         ; preds = %if.end8, %cleanup
  %retval.1 = phi %union.tree_node* [ undef, %if.end8 ], [ %retval.0, %cleanup ]
  %8 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 9) to %struct.tree_type**), align 8, !dbg !8513
  %precision36 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %8, i64 0, i32 6, !dbg !8513
  %bf.load37 = load i32, i32* %precision36, align 4, !dbg !8513
  %9 = load %struct.tree_type*, %struct.tree_type** bitcast (%union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 7) to %struct.tree_type**), align 8, !dbg !8514
  %precision40 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %9, i64 0, i32 6, !dbg !8514
  %bf.load41 = load i32, i32* %precision40, align 4, !dbg !8514
  %10 = xor i32 %bf.load37, %bf.load41, !dbg !8515
  %11 = and i32 %10, 1023, !dbg !8515
  %cmp43 = icmp eq i32 %11, 0, !dbg !8515
  br i1 %cmp43, label %if.then45, label %if.end74, !dbg !8516

if.then45:                                        ; preds = %if.end34
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8478, metadata !DIExpression()), !dbg !8517
  switch i32 %bf.clear, label %sw.epilog [
    i32 126, label %sw.bb
    i32 127, label %sw.bb
    i32 128, label %sw.bb
    i32 129, label %sw.bb49
    i32 130, label %sw.bb49
    i32 131, label %sw.bb49
    i32 135, label %sw.bb53
    i32 136, label %sw.bb53
    i32 137, label %sw.bb53
    i32 132, label %sw.bb57
    i32 133, label %sw.bb57
    i32 134, label %sw.bb57
  ], !dbg !8518

sw.bb:                                            ; preds = %if.then45, %if.then45, %if.then45
  %type47 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8519
  %12 = load %union.tree_node*, %union.tree_node** %type47, align 8, !dbg !8519
  %call48 = tail call %union.tree_node* @mathfn_built_in(%union.tree_node* %12, i32 111) #8, !dbg !8521
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !8478, metadata !DIExpression()), !dbg !8517
  br label %sw.epilog, !dbg !8522

sw.bb49:                                          ; preds = %if.then45, %if.then45, %if.then45
  %type51 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8523
  %13 = load %union.tree_node*, %union.tree_node** %type51, align 8, !dbg !8523
  %call52 = tail call %union.tree_node* @mathfn_built_in(%union.tree_node* %13, i32 117) #8, !dbg !8524
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !8478, metadata !DIExpression()), !dbg !8517
  br label %sw.epilog, !dbg !8525

sw.bb53:                                          ; preds = %if.then45, %if.then45, %if.then45
  %type55 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8526
  %14 = load %union.tree_node*, %union.tree_node** %type55, align 8, !dbg !8526
  %call56 = tail call %union.tree_node* @mathfn_built_in(%union.tree_node* %14, i32 156) #8, !dbg !8527
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !8478, metadata !DIExpression()), !dbg !8517
  br label %sw.epilog, !dbg !8528

sw.bb57:                                          ; preds = %if.then45, %if.then45, %if.then45
  %type59 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8529
  %15 = load %union.tree_node*, %union.tree_node** %type59, align 8, !dbg !8529
  %call60 = tail call %union.tree_node* @mathfn_built_in(%union.tree_node* %15, i32 153) #8, !dbg !8530
  call void @llvm.dbg.value(metadata %union.tree_node* %call60, metadata !8478, metadata !DIExpression()), !dbg !8517
  br label %sw.epilog, !dbg !8531

sw.epilog:                                        ; preds = %if.then45, %sw.bb57, %sw.bb53, %sw.bb49, %sw.bb
  %newfn.0 = phi %union.tree_node* [ %call60, %sw.bb57 ], [ %call56, %sw.bb53 ], [ %call52, %sw.bb49 ], [ %call48, %sw.bb ], [ null, %if.then45 ], !dbg !8517
  call void @llvm.dbg.value(metadata %union.tree_node* %newfn.0, metadata !8478, metadata !DIExpression()), !dbg !8517
  %tobool61 = icmp eq %union.tree_node* %newfn.0, null, !dbg !8532
  br i1 %tobool61, label %cleanup71, label %if.then62, !dbg !8533

if.then62:                                        ; preds = %sw.epilog
  %call63 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %newfn.0, i32 1, %union.tree_node* %arg) #8, !dbg !8534
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !8481, metadata !DIExpression()), !dbg !8535
  %type65 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8536
  %16 = bitcast %union.tree_node** %type65 to %struct.tree_common**, !dbg !8536
  %17 = load %struct.tree_common*, %struct.tree_common** %16, align 8, !dbg !8536
  %type67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %17, i64 0, i32 2, !dbg !8536
  %18 = load %union.tree_node*, %union.tree_node** %type67, align 8, !dbg !8536
  %call68 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %18, %union.tree_node* %call63) #7, !dbg !8537
  br label %cleanup71

cleanup71:                                        ; preds = %sw.epilog, %if.then62
  %cleanup.dest.slot.1 = phi i1 [ false, %if.then62 ], [ true, %sw.epilog ]
  %retval.2 = phi %union.tree_node* [ %call68, %if.then62 ], [ %retval.1, %sw.epilog ], !dbg !8484
  br i1 %cleanup.dest.slot.1, label %if.end74, label %cleanup75

if.end74:                                         ; preds = %cleanup71, %if.end34
  br label %cleanup75, !dbg !8538

cleanup75:                                        ; preds = %entry, %cleanup, %cleanup71, %if.end74, %if.then4
  %retval.3 = phi %union.tree_node* [ %retval.0, %cleanup ], [ %retval.2, %cleanup71 ], [ null, %if.end74 ], [ %call7, %if.then4 ], [ null, %entry ], !dbg !8484
  ret %union.tree_node* %retval.3, !dbg !8539
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_bswap(%union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8540 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8542, metadata !DIExpression()), !dbg !8560
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8543, metadata !DIExpression()), !dbg !8560
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 8) #8, !dbg !8561
  %tobool = icmp eq i8 %call, 0, !dbg !8561
  br i1 %tobool, label %return, label %if.end, !dbg !8563

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8564
  %bf.load = load i64, i64* %0, align 8, !dbg !8564
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8565
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !8565
  br i1 %cmp, label %land.lhs.true, label %return, !dbg !8566

land.lhs.true:                                    ; preds = %if.end
  %bf.cast42 = and i64 %bf.load, 134217728, !dbg !8567
  %tobool5 = icmp eq i64 %bf.cast42, 0, !dbg !8567
  br i1 %tobool5, label %if.then6, label %return, !dbg !8568

if.then6:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i64 0, metadata !8548, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i64 0, metadata !8550, metadata !DIExpression()), !dbg !8569
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8570
  %1 = bitcast %union.tree_node** %type7 to %struct.tree_type**, !dbg !8570
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !8570
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 6, !dbg !8571
  %bf.load9 = load i32, i32* %precision, align 4, !dbg !8571
  %bf.clear10 = and i32 %bf.load9, 1023, !dbg !8571
  call void @llvm.dbg.value(metadata i32 %bf.clear10, metadata !8547, metadata !DIExpression()), !dbg !8569
  %int_cst11 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8572
  %low = bitcast i32* %int_cst11 to i64*, !dbg !8572
  %3 = load i64, i64* %low, align 8, !dbg !8572
  call void @llvm.dbg.value(metadata i64 %3, metadata !8549, metadata !DIExpression()), !dbg !8569
  %high = getelementptr inbounds i32, i32* %int_cst11, i64 2, !dbg !8573
  %4 = bitcast i32* %high to i64*, !dbg !8573
  %5 = load i64, i64* %4, align 8, !dbg !8573
  call void @llvm.dbg.value(metadata i64 %5, metadata !8544, metadata !DIExpression()), !dbg !8569
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !8574
  %bf.load14 = load i32, i32* %function_code, align 8, !dbg !8574
  %bf.clear15 = and i32 %bf.load14, 2047, !dbg !8574
  %bf.clear15.off = add nsw i32 %bf.clear15, -419, !dbg !8575
  %switch = icmp ult i32 %bf.clear15.off, 2, !dbg !8575
  br i1 %switch, label %for.cond.preheader, label %sw.default, !dbg !8575

for.cond.preheader:                               ; preds = %if.then6
  %6 = zext i32 %bf.clear10 to i64, !dbg !8576
  %7 = zext i32 %bf.clear10 to i64, !dbg !8576
  br label %for.cond, !dbg !8576

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !8577
  %r_hi.0 = phi i64 [ 0, %for.cond.preheader ], [ %r_hi.1, %for.inc ], !dbg !8577
  %r_lo.0 = phi i64 [ 0, %for.cond.preheader ], [ %r_lo.1, %for.inc ], !dbg !8569
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !8552, metadata !DIExpression()), !dbg !8578
  call void @llvm.dbg.value(metadata i64 %r_lo.0, metadata !8550, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_hi.0, metadata !8548, metadata !DIExpression()), !dbg !8569
  %cmp17 = icmp ult i64 %indvars.iv, %6, !dbg !8579
  br i1 %cmp17, label %for.body, label %sw.epilog.loopexit, !dbg !8576

for.body:                                         ; preds = %for.cond
  %8 = sub nsw i64 %7, %indvars.iv, !dbg !8580
  %9 = add nsw i64 %8, -8, !dbg !8581
  %cmp22 = icmp ult i64 %indvars.iv, 64, !dbg !8582
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !8584

if.then24:                                        ; preds = %for.body
  %shr = lshr i64 %3, %indvars.iv, !dbg !8585
  call void @llvm.dbg.value(metadata i64 %shr, metadata !8559, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !8586
  br label %if.end29, !dbg !8587

if.else:                                          ; preds = %for.body
  %10 = add nuw nsw i64 %indvars.iv, 4294967232, !dbg !8588
  %sh_prom26 = and i64 %10, 4294967288, !dbg !8588
  %shr27 = ashr i64 %5, %sh_prom26, !dbg !8588
  call void @llvm.dbg.value(metadata i64 %shr27, metadata !8559, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !8586
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then24
  %byte.0.in = phi i64 [ %shr, %if.then24 ], [ %shr27, %if.else ]
  %byte.0 = and i64 %byte.0.in, 255, !dbg !8589
  call void @llvm.dbg.value(metadata i64 %byte.0, metadata !8559, metadata !DIExpression()), !dbg !8586
  %cmp30 = icmp slt i64 %9, 64, !dbg !8590
  br i1 %cmp30, label %if.then32, label %if.else34, !dbg !8592

if.then32:                                        ; preds = %if.end29
  %sh_prom33 = and i64 %9, 4294967295, !dbg !8593
  %shl = shl i64 %byte.0, %sh_prom33, !dbg !8593
  %or = or i64 %r_lo.0, %shl, !dbg !8594
  call void @llvm.dbg.value(metadata i64 %or, metadata !8550, metadata !DIExpression()), !dbg !8569
  br label %for.inc, !dbg !8595

if.else34:                                        ; preds = %if.end29
  %11 = add nsw i64 %8, 4294967224, !dbg !8596
  %sh_prom36 = and i64 %11, 4294967295, !dbg !8596
  %shl37 = shl i64 %byte.0, %sh_prom36, !dbg !8596
  %or38 = or i64 %r_hi.0, %shl37, !dbg !8597
  call void @llvm.dbg.value(metadata i64 %or38, metadata !8548, metadata !DIExpression()), !dbg !8569
  br label %for.inc

for.inc:                                          ; preds = %if.then32, %if.else34
  %r_hi.1 = phi i64 [ %r_hi.0, %if.then32 ], [ %or38, %if.else34 ], !dbg !8569
  %r_lo.1 = phi i64 [ %or, %if.then32 ], [ %r_lo.0, %if.else34 ], !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_lo.1, metadata !8550, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_hi.1, metadata !8548, metadata !DIExpression()), !dbg !8569
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 8, !dbg !8598
  call void @llvm.dbg.value(metadata i32 undef, metadata !8552, metadata !DIExpression(DW_OP_plus_uconst, 8, DW_OP_stack_value)), !dbg !8578
  br label %for.cond, !dbg !8599, !llvm.loop !8600

sw.default:                                       ; preds = %if.then6
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.724, i64 0, i64 0), i32 7692, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !8602
  br label %sw.epilog, !dbg !8603

sw.epilog.loopexit:                               ; preds = %for.cond
  %r_hi.0.lcssa = phi i64 [ %r_hi.0, %for.cond ], !dbg !8577
  %r_lo.0.lcssa = phi i64 [ %r_lo.0, %for.cond ], !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_hi.0.lcssa, metadata !8548, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_lo.0.lcssa, metadata !8550, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_hi.0.lcssa, metadata !8548, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_lo.0.lcssa, metadata !8550, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_hi.0.lcssa, metadata !8548, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_lo.0.lcssa, metadata !8550, metadata !DIExpression()), !dbg !8569
  br label %sw.epilog, !dbg !8604

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.default
  %r_hi.2 = phi i64 [ 0, %sw.default ], [ %r_hi.0.lcssa, %sw.epilog.loopexit ], !dbg !8577
  %r_lo.2 = phi i64 [ 0, %sw.default ], [ %r_lo.0.lcssa, %sw.epilog.loopexit ], !dbg !8606
  call void @llvm.dbg.value(metadata i64 %r_lo.2, metadata !8550, metadata !DIExpression()), !dbg !8569
  call void @llvm.dbg.value(metadata i64 %r_hi.2, metadata !8548, metadata !DIExpression()), !dbg !8569
  %cmp40 = icmp ult i32 %bf.clear10, 64, !dbg !8604
  %type44 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8607
  %12 = bitcast %union.tree_node** %type44 to %struct.tree_common**, !dbg !8607
  %13 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !8607
  %type46 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !8607
  %14 = load %union.tree_node*, %union.tree_node** %type46, align 8, !dbg !8607
  br i1 %cmp40, label %if.then42, label %if.else48, !dbg !8608

if.then42:                                        ; preds = %sw.epilog
  %call47 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %14, i64 %r_lo.2) #7, !dbg !8609
  br label %return, !dbg !8610

if.else48:                                        ; preds = %sw.epilog
  %call53 = tail call %union.tree_node* @build_int_cst_wide(%union.tree_node* %14, i64 %r_lo.2, i64 %r_hi.2) #7, !dbg !8611
  br label %return, !dbg !8612

return:                                           ; preds = %land.lhs.true, %entry, %if.end, %if.then42, %if.else48
  %retval.1 = phi %union.tree_node* [ null, %entry ], [ %call47, %if.then42 ], [ %call53, %if.else48 ], [ null, %land.lhs.true ], [ null, %if.end ], !dbg !8560
  ret %union.tree_node* %retval.1, !dbg !8613
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_bitop(%union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8614 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8616, metadata !DIExpression()), !dbg !8625
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8617, metadata !DIExpression()), !dbg !8625
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 8) #8, !dbg !8626
  %tobool = icmp eq i8 %call, 0, !dbg !8626
  br i1 %tobool, label %return, label %if.end, !dbg !8628

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8629
  %bf.load = load i64, i64* %0, align 8, !dbg !8629
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8630
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !8630
  br i1 %cmp, label %land.lhs.true, label %return, !dbg !8631

land.lhs.true:                                    ; preds = %if.end
  %bf.cast42 = and i64 %bf.load, 134217728, !dbg !8632
  %tobool5 = icmp eq i64 %bf.cast42, 0, !dbg !8632
  br i1 %tobool5, label %if.then6, label %return, !dbg !8633

if.then6:                                         ; preds = %land.lhs.true
  %type7 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8634
  %1 = bitcast %union.tree_node** %type7 to %struct.tree_type**, !dbg !8634
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !8634
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 6, !dbg !8635
  %bf.load9 = load i32, i32* %precision, align 4, !dbg !8635
  %bf.clear10 = and i32 %bf.load9, 1023, !dbg !8635
  %conv = zext i32 %bf.clear10 to i64, !dbg !8635
  call void @llvm.dbg.value(metadata i64 %conv, metadata !8621, metadata !DIExpression()), !dbg !8636
  %int_cst11 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8637
  %low = bitcast i32* %int_cst11 to i64*, !dbg !8637
  %3 = load i64, i64* %low, align 8, !dbg !8637
  call void @llvm.dbg.value(metadata i64 %3, metadata !8623, metadata !DIExpression()), !dbg !8636
  %cmp12 = icmp ugt i32 %bf.clear10, 64, !dbg !8638
  br i1 %cmp12, label %if.then14, label %if.else, !dbg !8640

if.then14:                                        ; preds = %if.then6
  %high = getelementptr inbounds i32, i32* %int_cst11, i64 2, !dbg !8641
  %4 = bitcast i32* %high to i64*, !dbg !8641
  %5 = load i64, i64* %4, align 8, !dbg !8641
  call void @llvm.dbg.value(metadata i64 %5, metadata !8618, metadata !DIExpression()), !dbg !8636
  %cmp17 = icmp ult i32 %bf.clear10, 128, !dbg !8643
  br i1 %cmp17, label %if.then19, label %if.end27, !dbg !8645

if.then19:                                        ; preds = %if.then14
  call void @llvm.dbg.value(metadata i64 0, metadata !8618, metadata !DIExpression()), !dbg !8636
  br label %if.end27, !dbg !8646

if.else:                                          ; preds = %if.then6
  call void @llvm.dbg.value(metadata i64 0, metadata !8618, metadata !DIExpression()), !dbg !8636
  %cmp21 = icmp eq i32 %bf.clear10, 64, !dbg !8647
  br i1 %cmp21, label %if.end27, label %if.then23, !dbg !8650

if.then23:                                        ; preds = %if.else
  %shl = shl i64 -1, %conv, !dbg !8651
  %neg24 = xor i64 %shl, -1, !dbg !8652
  %and25 = and i64 %3, %neg24, !dbg !8653
  call void @llvm.dbg.value(metadata i64 %and25, metadata !8623, metadata !DIExpression()), !dbg !8636
  br label %if.end27, !dbg !8654

if.end27:                                         ; preds = %if.else, %if.then23, %if.then14, %if.then19
  %hi.1 = phi i64 [ 0, %if.then19 ], [ %5, %if.then14 ], [ 0, %if.then23 ], [ 0, %if.else ], !dbg !8655
  %lo.1 = phi i64 [ %3, %if.then19 ], [ %3, %if.then14 ], [ %and25, %if.then23 ], [ %3, %if.else ], !dbg !8636
  call void @llvm.dbg.value(metadata i64 %lo.1, metadata !8623, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %hi.1, metadata !8618, metadata !DIExpression()), !dbg !8636
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !8656
  %bf.load28 = load i32, i32* %function_code, align 8, !dbg !8656
  %bf.clear29 = and i32 %bf.load28, 2047, !dbg !8656
  switch i32 %bf.clear29, label %sw.default [
    i32 449, label %sw.bb
    i32 451, label %sw.bb
    i32 452, label %sw.bb
    i32 424, label %sw.bb50
    i32 426, label %sw.bb50
    i32 427, label %sw.bb50
    i32 429, label %sw.bb70
    i32 431, label %sw.bb70
    i32 432, label %sw.bb70
    i32 497, label %sw.bb90
    i32 499, label %sw.bb90
    i32 500, label %sw.bb90
    i32 493, label %sw.bb101
    i32 495, label %sw.bb101
    i32 496, label %sw.bb101
  ], !dbg !8657

sw.bb:                                            ; preds = %if.end27, %if.end27, %if.end27
  %cmp30 = icmp eq i64 %lo.1, 0, !dbg !8658
  br i1 %cmp30, label %if.else37, label %if.then32, !dbg !8661

if.then32:                                        ; preds = %sw.bb
  %sub33 = sub i64 0, %lo.1, !dbg !8662
  %and34 = and i64 %lo.1, %sub33, !dbg !8663
  %call35 = tail call i32 @exact_log2(i64 %and34) #7, !dbg !8664
  %add = add nsw i32 %call35, 1, !dbg !8665
  %conv36 = sext i32 %add to i64, !dbg !8664
  call void @llvm.dbg.value(metadata i64 %conv36, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %sw.epilog, !dbg !8666

if.else37:                                        ; preds = %sw.bb
  %cmp38 = icmp eq i64 %hi.1, 0, !dbg !8667
  br i1 %cmp38, label %sw.epilog, label %if.then40, !dbg !8669

if.then40:                                        ; preds = %if.else37
  %sub41 = sub nsw i64 0, %hi.1, !dbg !8670
  %and42 = and i64 %hi.1, %sub41, !dbg !8671
  %call43 = tail call i32 @exact_log2(i64 %and42) #7, !dbg !8672
  %add45 = add nsw i32 %call43, 65, !dbg !8673
  %conv46 = sext i32 %add45 to i64, !dbg !8674
  call void @llvm.dbg.value(metadata i64 %conv46, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %sw.epilog, !dbg !8675

sw.bb50:                                          ; preds = %if.end27, %if.end27, %if.end27
  %cmp51 = icmp eq i64 %hi.1, 0, !dbg !8676
  br i1 %cmp51, label %if.else59, label %if.then53, !dbg !8678

if.then53:                                        ; preds = %sw.bb50
  %call54 = tail call i32 @floor_log2(i64 %hi.1) #7, !dbg !8679
  %6 = xor i32 %call54, -1, !dbg !8680
  %7 = sext i32 %6 to i64, !dbg !8680
  %sub57 = add nsw i64 %7, %conv, !dbg !8680
  %sub58 = add nsw i64 %sub57, -64, !dbg !8681
  call void @llvm.dbg.value(metadata i64 %sub58, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %sw.epilog, !dbg !8682

if.else59:                                        ; preds = %sw.bb50
  %cmp60 = icmp eq i64 %lo.1, 0, !dbg !8683
  br i1 %cmp60, label %sw.epilog, label %if.then62, !dbg !8685

if.then62:                                        ; preds = %if.else59
  %call63 = tail call i32 @floor_log2(i64 %lo.1) #7, !dbg !8686
  %8 = xor i32 %call63, -1, !dbg !8687
  %9 = sext i32 %8 to i64, !dbg !8687
  %sub66 = add nsw i64 %9, %conv, !dbg !8687
  call void @llvm.dbg.value(metadata i64 %sub66, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %sw.epilog, !dbg !8688

sw.bb70:                                          ; preds = %if.end27, %if.end27, %if.end27
  %cmp71 = icmp eq i64 %lo.1, 0, !dbg !8689
  br i1 %cmp71, label %if.else78, label %if.then73, !dbg !8691

if.then73:                                        ; preds = %sw.bb70
  %sub74 = sub i64 0, %lo.1, !dbg !8692
  %and75 = and i64 %lo.1, %sub74, !dbg !8693
  %call76 = tail call i32 @exact_log2(i64 %and75) #7, !dbg !8694
  %conv77 = sext i32 %call76 to i64, !dbg !8694
  call void @llvm.dbg.value(metadata i64 %conv77, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %sw.epilog, !dbg !8695

if.else78:                                        ; preds = %sw.bb70
  %cmp79 = icmp eq i64 %hi.1, 0, !dbg !8696
  br i1 %cmp79, label %sw.epilog, label %if.then81, !dbg !8698

if.then81:                                        ; preds = %if.else78
  %sub82 = sub nsw i64 0, %hi.1, !dbg !8699
  %and83 = and i64 %hi.1, %sub82, !dbg !8700
  %call84 = tail call i32 @exact_log2(i64 %and83) #7, !dbg !8701
  %add85 = add nsw i32 %call84, 64, !dbg !8702
  %conv86 = sext i32 %add85 to i64, !dbg !8703
  call void @llvm.dbg.value(metadata i64 %conv86, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %sw.epilog, !dbg !8704

sw.bb90:                                          ; preds = %if.end27, %if.end27, %if.end27
  call void @llvm.dbg.value(metadata i64 0, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %while.cond, !dbg !8705

while.cond:                                       ; preds = %while.body, %sw.bb90
  %result.6 = phi i64 [ 0, %sw.bb90 ], [ %inc, %while.body ], !dbg !8706
  %lo.2 = phi i64 [ %lo.1, %sw.bb90 ], [ %and93, %while.body ], !dbg !8636
  call void @llvm.dbg.value(metadata i64 %lo.2, metadata !8623, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.6, metadata !8622, metadata !DIExpression()), !dbg !8636
  %tobool91 = icmp eq i64 %lo.2, 0, !dbg !8705
  br i1 %tobool91, label %while.cond94.preheader, label %while.body, !dbg !8705

while.cond94.preheader:                           ; preds = %while.cond
  %result.6.lcssa = phi i64 [ %result.6, %while.cond ], !dbg !8706
  call void @llvm.dbg.value(metadata i64 %result.6.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.6.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.6.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %while.cond94, !dbg !8707

while.body:                                       ; preds = %while.cond
  %inc = add nuw nsw i64 %result.6, 1, !dbg !8708
  call void @llvm.dbg.value(metadata i64 %inc, metadata !8622, metadata !DIExpression()), !dbg !8636
  %sub92 = add i64 %lo.2, -1, !dbg !8709
  %and93 = and i64 %lo.2, %sub92, !dbg !8710
  call void @llvm.dbg.value(metadata i64 %and93, metadata !8623, metadata !DIExpression()), !dbg !8636
  br label %while.cond, !dbg !8705, !llvm.loop !8711

while.cond94:                                     ; preds = %while.cond94.preheader, %while.body96
  %hi.2 = phi i64 [ %and99, %while.body96 ], [ %hi.1, %while.cond94.preheader ], !dbg !8636
  %result.7 = phi i64 [ %inc97, %while.body96 ], [ %result.6.lcssa, %while.cond94.preheader ], !dbg !8706
  call void @llvm.dbg.value(metadata i64 %result.7, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %hi.2, metadata !8618, metadata !DIExpression()), !dbg !8636
  %tobool95 = icmp eq i64 %hi.2, 0, !dbg !8707
  br i1 %tobool95, label %sw.epilog.loopexit, label %while.body96, !dbg !8707

while.body96:                                     ; preds = %while.cond94
  %inc97 = add nuw nsw i64 %result.7, 1, !dbg !8713
  call void @llvm.dbg.value(metadata i64 %inc97, metadata !8622, metadata !DIExpression()), !dbg !8636
  %sub98 = add nsw i64 %hi.2, -1, !dbg !8714
  %and99 = and i64 %hi.2, %sub98, !dbg !8715
  call void @llvm.dbg.value(metadata i64 %and99, metadata !8618, metadata !DIExpression()), !dbg !8636
  br label %while.cond94, !dbg !8707, !llvm.loop !8716

sw.bb101:                                         ; preds = %if.end27, %if.end27, %if.end27
  call void @llvm.dbg.value(metadata i64 0, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %while.cond102, !dbg !8718

while.cond102:                                    ; preds = %while.body104, %sw.bb101
  %result.8 = phi i64 [ 0, %sw.bb101 ], [ %inc105, %while.body104 ], !dbg !8706
  %lo.3 = phi i64 [ %lo.1, %sw.bb101 ], [ %and107, %while.body104 ], !dbg !8636
  call void @llvm.dbg.value(metadata i64 %lo.3, metadata !8623, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.8, metadata !8622, metadata !DIExpression()), !dbg !8636
  %tobool103 = icmp eq i64 %lo.3, 0, !dbg !8718
  br i1 %tobool103, label %while.cond109.preheader, label %while.body104, !dbg !8718

while.cond109.preheader:                          ; preds = %while.cond102
  %result.8.lcssa = phi i64 [ %result.8, %while.cond102 ], !dbg !8706
  call void @llvm.dbg.value(metadata i64 %result.8.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.8.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.8.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %while.cond109, !dbg !8719

while.body104:                                    ; preds = %while.cond102
  %inc105 = add nuw nsw i64 %result.8, 1, !dbg !8720
  call void @llvm.dbg.value(metadata i64 %inc105, metadata !8622, metadata !DIExpression()), !dbg !8636
  %sub106 = add i64 %lo.3, -1, !dbg !8721
  %and107 = and i64 %lo.3, %sub106, !dbg !8722
  call void @llvm.dbg.value(metadata i64 %and107, metadata !8623, metadata !DIExpression()), !dbg !8636
  br label %while.cond102, !dbg !8718, !llvm.loop !8723

while.cond109:                                    ; preds = %while.cond109.preheader, %while.body111
  %hi.3 = phi i64 [ %and114, %while.body111 ], [ %hi.1, %while.cond109.preheader ], !dbg !8636
  %result.9 = phi i64 [ %inc112, %while.body111 ], [ %result.8.lcssa, %while.cond109.preheader ], !dbg !8706
  call void @llvm.dbg.value(metadata i64 %result.9, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %hi.3, metadata !8618, metadata !DIExpression()), !dbg !8636
  %tobool110 = icmp eq i64 %hi.3, 0, !dbg !8719
  br i1 %tobool110, label %while.end115, label %while.body111, !dbg !8719

while.body111:                                    ; preds = %while.cond109
  %inc112 = add nuw nsw i64 %result.9, 1, !dbg !8725
  call void @llvm.dbg.value(metadata i64 %inc112, metadata !8622, metadata !DIExpression()), !dbg !8636
  %sub113 = add nsw i64 %hi.3, -1, !dbg !8726
  %and114 = and i64 %hi.3, %sub113, !dbg !8727
  call void @llvm.dbg.value(metadata i64 %and114, metadata !8618, metadata !DIExpression()), !dbg !8636
  br label %while.cond109, !dbg !8719, !llvm.loop !8728

while.end115:                                     ; preds = %while.cond109
  %result.9.lcssa = phi i64 [ %result.9, %while.cond109 ], !dbg !8706
  call void @llvm.dbg.value(metadata i64 %result.9.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.9.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.9.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  %and116 = and i64 %result.9.lcssa, 1, !dbg !8730
  call void @llvm.dbg.value(metadata i64 %and116, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %sw.epilog, !dbg !8731

sw.default:                                       ; preds = %if.end27
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.724, i64 0, i64 0), i32 7636, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !8732
  br label %sw.epilog, !dbg !8733

sw.epilog.loopexit:                               ; preds = %while.cond94
  %result.7.lcssa = phi i64 [ %result.7, %while.cond94 ], !dbg !8706
  call void @llvm.dbg.value(metadata i64 %result.7.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.7.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  call void @llvm.dbg.value(metadata i64 %result.7.lcssa, metadata !8622, metadata !DIExpression()), !dbg !8636
  br label %sw.epilog, !dbg !8734

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %if.else37, %if.else59, %if.else78, %if.then73, %if.then81, %if.then53, %if.then62, %if.then32, %if.then40, %sw.default, %while.end115
  %result.10 = phi i64 [ undef, %sw.default ], [ %and116, %while.end115 ], [ %conv36, %if.then32 ], [ %conv46, %if.then40 ], [ 0, %if.else37 ], [ %sub58, %if.then53 ], [ %sub66, %if.then62 ], [ %conv, %if.else59 ], [ %conv77, %if.then73 ], [ %conv86, %if.then81 ], [ %conv, %if.else78 ], [ %result.7.lcssa, %sw.epilog.loopexit ]
  call void @llvm.dbg.value(metadata i64 %result.10, metadata !8622, metadata !DIExpression()), !dbg !8636
  %type118 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8734
  %10 = bitcast %union.tree_node** %type118 to %struct.tree_common**, !dbg !8734
  %11 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !8734
  %type120 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 2, !dbg !8734
  %12 = load %union.tree_node*, %union.tree_node** %type120, align 8, !dbg !8734
  %call121 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %12, i64 %result.10) #7, !dbg !8735
  br label %return

return:                                           ; preds = %land.lhs.true, %entry, %if.end, %sw.epilog
  %retval.0 = phi %union.tree_node* [ %call121, %sw.epilog ], [ null, %entry ], [ null, %land.lhs.true ], [ null, %if.end ], !dbg !8625
  ret %union.tree_node* %retval.0, !dbg !8736
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_signbit(i32 %loc, %union.tree_node* %arg, %union.tree_node* %type) unnamed_addr #5 !dbg !8737 {
entry:
  %c = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8739, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8740, metadata !DIExpression()), !dbg !8746
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !8741, metadata !DIExpression()), !dbg !8746
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8747
  %tobool = icmp eq i8 %call, 0, !dbg !8747
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8749

if.end:                                           ; preds = %entry
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8750
  %bf.load = load i64, i64* %0, align 8, !dbg !8750
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !8751
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !8751
  br i1 %cmp, label %land.lhs.true, label %if.end10, !dbg !8752

land.lhs.true:                                    ; preds = %if.end
  %bf.cast431 = and i64 %bf.load, 134217728, !dbg !8753
  %tobool5 = icmp eq i64 %bf.cast431, 0, !dbg !8753
  br i1 %tobool5, label %if.then6, label %if.end10, !dbg !8754

if.then6:                                         ; preds = %land.lhs.true
  %1 = bitcast %struct.real_value* %c to i8*, !dbg !8755
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8755
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8756
  %2 = bitcast i32* %real_cst_ptr to i8**, !dbg !8756
  %3 = load i8*, i8** %2, align 8, !dbg !8756
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* align 8 %3, i64 32, i1 false), !dbg !8756
  call void @llvm.dbg.value(metadata %struct.real_value* %c, metadata !8743, metadata !DIExpression(DW_OP_deref)), !dbg !8757
  %call7 = call zeroext i8 @real_isneg(%struct.real_value* nonnull %c) #7, !dbg !8758
  %tobool8 = icmp eq i8 %call7, 0, !dbg !8758
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8758
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8758
  %cond = select i1 %tobool8, %union.tree_node* %5, %union.tree_node* %4, !dbg !8758
  call void @llvm.dbg.value(metadata %union.tree_node* %cond, metadata !8742, metadata !DIExpression()), !dbg !8746
  %call9 = call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %cond) #7, !dbg !8759
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #6, !dbg !8760
  br label %cleanup

if.end10:                                         ; preds = %land.lhs.true, %if.end
  %call11 = tail call zeroext i8 @tree_expr_nonnegative_p(%union.tree_node* %arg) #7, !dbg !8761
  %tobool12 = icmp eq i8 %call11, 0, !dbg !8761
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !8763

if.then13:                                        ; preds = %if.end10
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8764
  %call14 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %6, %union.tree_node* %arg) #7, !dbg !8765
  br label %cleanup, !dbg !8766

if.end15:                                         ; preds = %if.end10
  %type16 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8767
  %7 = bitcast %union.tree_node** %type16 to i64**, !dbg !8767
  %8 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load18 = load i64, i64* %8, align 8, !dbg !8767
  %bf.cast202 = and i64 %bf.load18, 65535, !dbg !8767
  %cmp21 = icmp eq i64 %bf.cast202, 14, !dbg !8767
  br i1 %cmp21, label %cond.true23, label %cond.false27, !dbg !8767

cond.true23:                                      ; preds = %if.end15
  %.cast = bitcast i64* %8 to %union.tree_node*, !dbg !8767
  %call26 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !8767
  br label %cond.end34, !dbg !8767

cond.false27:                                     ; preds = %if.end15
  %type30 = bitcast i64* %8 to %struct.tree_type*, !dbg !8767
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i64 0, i32 6, !dbg !8767
  %bf.load31 = load i32, i32* %mode, align 4, !dbg !8767
  %bf.lshr32 = lshr i32 %bf.load31, 16, !dbg !8767
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !8767
  br label %cond.end34, !dbg !8767

cond.end34:                                       ; preds = %cond.false27, %cond.true23
  %cond35 = phi i32 [ %call26, %cond.true23 ], [ %bf.clear33, %cond.false27 ], !dbg !8767
  %idxprom = zext i32 %cond35 to i64, !dbg !8767
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !8767
  %9 = load i8, i8* %arrayidx, align 1, !dbg !8767
  %cmp37 = icmp eq i8 %9, 8, !dbg !8767
  br i1 %cmp37, label %land.lhs.true122, label %lor.lhs.false, !dbg !8767

lor.lhs.false:                                    ; preds = %cond.end34
  %10 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load42 = load i64, i64* %10, align 8, !dbg !8767
  %bf.cast443 = and i64 %bf.load42, 65535, !dbg !8767
  %cmp45 = icmp eq i64 %bf.cast443, 14, !dbg !8767
  br i1 %cmp45, label %cond.true47, label %cond.false51, !dbg !8767

cond.true47:                                      ; preds = %lor.lhs.false
  %.cast4 = bitcast i64* %10 to %union.tree_node*, !dbg !8767
  %call50 = tail call i32 @vector_type_mode(%union.tree_node* %.cast4) #7, !dbg !8767
  br label %cond.end59, !dbg !8767

cond.false51:                                     ; preds = %lor.lhs.false
  %type54 = bitcast i64* %10 to %struct.tree_type*, !dbg !8767
  %mode55 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type54, i64 0, i32 6, !dbg !8767
  %bf.load56 = load i32, i32* %mode55, align 4, !dbg !8767
  %bf.lshr57 = lshr i32 %bf.load56, 16, !dbg !8767
  %bf.clear58 = and i32 %bf.lshr57, 255, !dbg !8767
  br label %cond.end59, !dbg !8767

cond.end59:                                       ; preds = %cond.false51, %cond.true47
  %cond60 = phi i32 [ %call50, %cond.true47 ], [ %bf.clear58, %cond.false51 ], !dbg !8767
  %idxprom61 = zext i32 %cond60 to i64, !dbg !8767
  %arrayidx62 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom61, !dbg !8767
  %11 = load i8, i8* %arrayidx62, align 1, !dbg !8767
  %cmp64 = icmp eq i8 %11, 9, !dbg !8767
  br i1 %cmp64, label %land.lhs.true122, label %lor.lhs.false66, !dbg !8767

lor.lhs.false66:                                  ; preds = %cond.end59
  %12 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load70 = load i64, i64* %12, align 8, !dbg !8767
  %bf.cast725 = and i64 %bf.load70, 65535, !dbg !8767
  %cmp73 = icmp eq i64 %bf.cast725, 14, !dbg !8767
  br i1 %cmp73, label %cond.true75, label %cond.false79, !dbg !8767

cond.true75:                                      ; preds = %lor.lhs.false66
  %.cast6 = bitcast i64* %12 to %union.tree_node*, !dbg !8767
  %call78 = tail call i32 @vector_type_mode(%union.tree_node* %.cast6) #7, !dbg !8767
  br label %cond.end87, !dbg !8767

cond.false79:                                     ; preds = %lor.lhs.false66
  %type82 = bitcast i64* %12 to %struct.tree_type*, !dbg !8767
  %mode83 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type82, i64 0, i32 6, !dbg !8767
  %bf.load84 = load i32, i32* %mode83, align 4, !dbg !8767
  %bf.lshr85 = lshr i32 %bf.load84, 16, !dbg !8767
  %bf.clear86 = and i32 %bf.lshr85, 255, !dbg !8767
  br label %cond.end87, !dbg !8767

cond.end87:                                       ; preds = %cond.false79, %cond.true75
  %cond88 = phi i32 [ %call78, %cond.true75 ], [ %bf.clear86, %cond.false79 ], !dbg !8767
  %idxprom89 = zext i32 %cond88 to i64, !dbg !8767
  %arrayidx90 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom89, !dbg !8767
  %13 = load i8, i8* %arrayidx90, align 1, !dbg !8767
  %cmp92 = icmp eq i8 %13, 11, !dbg !8767
  br i1 %cmp92, label %land.lhs.true122, label %lor.lhs.false94, !dbg !8767

lor.lhs.false94:                                  ; preds = %cond.end87
  %14 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load98 = load i64, i64* %14, align 8, !dbg !8767
  %bf.cast1007 = and i64 %bf.load98, 65535, !dbg !8767
  %cmp101 = icmp eq i64 %bf.cast1007, 14, !dbg !8767
  br i1 %cmp101, label %cond.true103, label %cond.false107, !dbg !8767

cond.true103:                                     ; preds = %lor.lhs.false94
  %.cast8 = bitcast i64* %14 to %union.tree_node*, !dbg !8767
  %call106 = tail call i32 @vector_type_mode(%union.tree_node* %.cast8) #7, !dbg !8767
  br label %cond.end115, !dbg !8767

cond.false107:                                    ; preds = %lor.lhs.false94
  %type110 = bitcast i64* %14 to %struct.tree_type*, !dbg !8767
  %mode111 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type110, i64 0, i32 6, !dbg !8767
  %bf.load112 = load i32, i32* %mode111, align 4, !dbg !8767
  %bf.lshr113 = lshr i32 %bf.load112, 16, !dbg !8767
  %bf.clear114 = and i32 %bf.lshr113, 255, !dbg !8767
  br label %cond.end115, !dbg !8767

cond.end115:                                      ; preds = %cond.false107, %cond.true103
  %cond116 = phi i32 [ %call106, %cond.true103 ], [ %bf.clear114, %cond.false107 ], !dbg !8767
  %idxprom117 = zext i32 %cond116 to i64, !dbg !8767
  %arrayidx118 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom117, !dbg !8767
  %15 = load i8, i8* %arrayidx118, align 1, !dbg !8767
  %cmp120 = icmp eq i8 %15, 17, !dbg !8767
  br i1 %cmp120, label %land.lhs.true122, label %if.then457, !dbg !8767

land.lhs.true122:                                 ; preds = %cond.end115, %cond.end87, %cond.end59, %cond.end34
  %16 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load126 = load i64, i64* %16, align 8, !dbg !8767
  %bf.cast1289 = and i64 %bf.load126, 65535, !dbg !8767
  %cmp129 = icmp eq i64 %bf.cast1289, 14, !dbg !8767
  br i1 %cmp129, label %cond.true131, label %cond.false135, !dbg !8767

cond.true131:                                     ; preds = %land.lhs.true122
  %.cast10 = bitcast i64* %16 to %union.tree_node*, !dbg !8767
  %call134 = tail call i32 @vector_type_mode(%union.tree_node* %.cast10) #7, !dbg !8767
  br label %cond.end143, !dbg !8767

cond.false135:                                    ; preds = %land.lhs.true122
  %type138 = bitcast i64* %16 to %struct.tree_type*, !dbg !8767
  %mode139 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type138, i64 0, i32 6, !dbg !8767
  %bf.load140 = load i32, i32* %mode139, align 4, !dbg !8767
  %bf.lshr141 = lshr i32 %bf.load140, 16, !dbg !8767
  %bf.clear142 = and i32 %bf.lshr141, 255, !dbg !8767
  br label %cond.end143, !dbg !8767

cond.end143:                                      ; preds = %cond.false135, %cond.true131
  %cond144 = phi i32 [ %call134, %cond.true131 ], [ %bf.clear142, %cond.false135 ], !dbg !8767
  %idxprom145 = zext i32 %cond144 to i64, !dbg !8767
  %arrayidx146 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom145, !dbg !8767
  %17 = load i8, i8* %arrayidx146, align 1, !dbg !8767
  %cmp148 = icmp eq i8 %17, 8, !dbg !8767
  br i1 %cmp148, label %cond.true178, label %lor.lhs.false150, !dbg !8767

lor.lhs.false150:                                 ; preds = %cond.end143
  %18 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load154 = load i64, i64* %18, align 8, !dbg !8767
  %bf.cast15611 = and i64 %bf.load154, 65535, !dbg !8767
  %cmp157 = icmp eq i64 %bf.cast15611, 14, !dbg !8767
  br i1 %cmp157, label %cond.true159, label %cond.false163, !dbg !8767

cond.true159:                                     ; preds = %lor.lhs.false150
  %.cast12 = bitcast i64* %18 to %union.tree_node*, !dbg !8767
  %call162 = tail call i32 @vector_type_mode(%union.tree_node* %.cast12) #7, !dbg !8767
  br label %cond.end171, !dbg !8767

cond.false163:                                    ; preds = %lor.lhs.false150
  %type166 = bitcast i64* %18 to %struct.tree_type*, !dbg !8767
  %mode167 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type166, i64 0, i32 6, !dbg !8767
  %bf.load168 = load i32, i32* %mode167, align 4, !dbg !8767
  %bf.lshr169 = lshr i32 %bf.load168, 16, !dbg !8767
  %bf.clear170 = and i32 %bf.lshr169, 255, !dbg !8767
  br label %cond.end171, !dbg !8767

cond.end171:                                      ; preds = %cond.false163, %cond.true159
  %cond172 = phi i32 [ %call162, %cond.true159 ], [ %bf.clear170, %cond.false163 ], !dbg !8767
  %idxprom173 = zext i32 %cond172 to i64, !dbg !8767
  %arrayidx174 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom173, !dbg !8767
  %19 = load i8, i8* %arrayidx174, align 1, !dbg !8767
  %cmp176 = icmp eq i8 %19, 9, !dbg !8767
  br i1 %cmp176, label %cond.true178, label %cond.false201, !dbg !8767

cond.true178:                                     ; preds = %cond.end171, %cond.end143
  %20 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load182 = load i64, i64* %20, align 8, !dbg !8767
  %bf.cast18429 = and i64 %bf.load182, 65535, !dbg !8767
  %cmp185 = icmp eq i64 %bf.cast18429, 14, !dbg !8767
  br i1 %cmp185, label %cond.true187, label %cond.false191, !dbg !8767

cond.true187:                                     ; preds = %cond.true178
  %.cast30 = bitcast i64* %20 to %union.tree_node*, !dbg !8767
  %call190 = tail call i32 @vector_type_mode(%union.tree_node* %.cast30) #7, !dbg !8767
  br label %cond.end227, !dbg !8767

cond.false191:                                    ; preds = %cond.true178
  %type194 = bitcast i64* %20 to %struct.tree_type*, !dbg !8767
  %mode195 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type194, i64 0, i32 6, !dbg !8767
  %bf.load196 = load i32, i32* %mode195, align 4, !dbg !8767
  %bf.lshr197 = lshr i32 %bf.load196, 16, !dbg !8767
  %bf.clear198 = and i32 %bf.lshr197, 255, !dbg !8767
  br label %cond.end227, !dbg !8767

cond.false201:                                    ; preds = %cond.end171
  %21 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load205 = load i64, i64* %21, align 8, !dbg !8767
  %bf.cast20713 = and i64 %bf.load205, 65535, !dbg !8767
  %cmp208 = icmp eq i64 %bf.cast20713, 14, !dbg !8767
  br i1 %cmp208, label %cond.true210, label %cond.false214, !dbg !8767

cond.true210:                                     ; preds = %cond.false201
  %.cast14 = bitcast i64* %21 to %union.tree_node*, !dbg !8767
  %call213 = tail call i32 @vector_type_mode(%union.tree_node* %.cast14) #7, !dbg !8767
  br label %cond.end222, !dbg !8767

cond.false214:                                    ; preds = %cond.false201
  %type217 = bitcast i64* %21 to %struct.tree_type*, !dbg !8767
  %mode218 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type217, i64 0, i32 6, !dbg !8767
  %bf.load219 = load i32, i32* %mode218, align 4, !dbg !8767
  %bf.lshr220 = lshr i32 %bf.load219, 16, !dbg !8767
  %bf.clear221 = and i32 %bf.lshr220, 255, !dbg !8767
  br label %cond.end222, !dbg !8767

cond.end222:                                      ; preds = %cond.false214, %cond.true210
  %cond223 = phi i32 [ %call213, %cond.true210 ], [ %bf.clear221, %cond.false214 ], !dbg !8767
  %idxprom224 = zext i32 %cond223 to i64, !dbg !8767
  %arrayidx225 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom224, !dbg !8767
  %22 = load i8, i8* %arrayidx225, align 1, !dbg !8767
  %conv226 = zext i8 %22 to i32, !dbg !8767
  br label %cond.end227, !dbg !8767

cond.end227:                                      ; preds = %cond.true187, %cond.false191, %cond.end222
  %cond228 = phi i32 [ %conv226, %cond.end222 ], [ %call190, %cond.true187 ], [ %bf.clear198, %cond.false191 ], !dbg !8767
  %idxprom229 = zext i32 %cond228 to i64, !dbg !8767
  %arrayidx230 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom229, !dbg !8767
  %23 = load i8, i8* %arrayidx230, align 1, !dbg !8767
  %cmp232 = icmp eq i8 %23, 9, !dbg !8767
  %24 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load238 = load i64, i64* %24, align 8, !dbg !8767
  %bf.cast24015 = and i64 %bf.load238, 65535, !dbg !8767
  %cmp241 = icmp eq i64 %bf.cast24015, 14, !dbg !8767
  %.cast16 = bitcast i64* %24 to %union.tree_node*, !dbg !8767
  br i1 %cmp232, label %cond.true234, label %cond.false341, !dbg !8767

cond.true234:                                     ; preds = %cond.end227
  br i1 %cmp241, label %cond.true243, label %cond.false247, !dbg !8767

cond.true243:                                     ; preds = %cond.true234
  %call246 = tail call i32 @vector_type_mode(%union.tree_node* %.cast16) #7, !dbg !8767
  br label %cond.end255, !dbg !8767

cond.false247:                                    ; preds = %cond.true234
  %type250 = bitcast i64* %24 to %struct.tree_type*, !dbg !8767
  %mode251 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type250, i64 0, i32 6, !dbg !8767
  %bf.load252 = load i32, i32* %mode251, align 4, !dbg !8767
  %bf.lshr253 = lshr i32 %bf.load252, 16, !dbg !8767
  %bf.clear254 = and i32 %bf.lshr253, 255, !dbg !8767
  br label %cond.end255, !dbg !8767

cond.end255:                                      ; preds = %cond.false247, %cond.true243
  %cond256 = phi i32 [ %call246, %cond.true243 ], [ %bf.clear254, %cond.false247 ], !dbg !8767
  %idxprom257 = zext i32 %cond256 to i64, !dbg !8767
  %arrayidx258 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom257, !dbg !8767
  %25 = load i8, i8* %arrayidx258, align 1, !dbg !8767
  %cmp260 = icmp eq i8 %25, 8, !dbg !8767
  br i1 %cmp260, label %cond.true290, label %lor.lhs.false262, !dbg !8767

lor.lhs.false262:                                 ; preds = %cond.end255
  %26 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load266 = load i64, i64* %26, align 8, !dbg !8767
  %bf.cast26823 = and i64 %bf.load266, 65535, !dbg !8767
  %cmp269 = icmp eq i64 %bf.cast26823, 14, !dbg !8767
  br i1 %cmp269, label %cond.true271, label %cond.false275, !dbg !8767

cond.true271:                                     ; preds = %lor.lhs.false262
  %.cast24 = bitcast i64* %26 to %union.tree_node*, !dbg !8767
  %call274 = tail call i32 @vector_type_mode(%union.tree_node* %.cast24) #7, !dbg !8767
  br label %cond.end283, !dbg !8767

cond.false275:                                    ; preds = %lor.lhs.false262
  %type278 = bitcast i64* %26 to %struct.tree_type*, !dbg !8767
  %mode279 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type278, i64 0, i32 6, !dbg !8767
  %bf.load280 = load i32, i32* %mode279, align 4, !dbg !8767
  %bf.lshr281 = lshr i32 %bf.load280, 16, !dbg !8767
  %bf.clear282 = and i32 %bf.lshr281, 255, !dbg !8767
  br label %cond.end283, !dbg !8767

cond.end283:                                      ; preds = %cond.false275, %cond.true271
  %cond284 = phi i32 [ %call274, %cond.true271 ], [ %bf.clear282, %cond.false275 ], !dbg !8767
  %idxprom285 = zext i32 %cond284 to i64, !dbg !8767
  %arrayidx286 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom285, !dbg !8767
  %27 = load i8, i8* %arrayidx286, align 1, !dbg !8767
  %cmp288 = icmp eq i8 %27, 9, !dbg !8767
  br i1 %cmp288, label %cond.true290, label %cond.false313, !dbg !8767

cond.true290:                                     ; preds = %cond.end283, %cond.end255
  %28 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load294 = load i64, i64* %28, align 8, !dbg !8767
  %bf.cast29627 = and i64 %bf.load294, 65535, !dbg !8767
  %cmp297 = icmp eq i64 %bf.cast29627, 14, !dbg !8767
  br i1 %cmp297, label %cond.true299, label %cond.false303, !dbg !8767

cond.true299:                                     ; preds = %cond.true290
  %.cast28 = bitcast i64* %28 to %union.tree_node*, !dbg !8767
  %call302 = tail call i32 @vector_type_mode(%union.tree_node* %.cast28) #7, !dbg !8767
  br label %cond.end339, !dbg !8767

cond.false303:                                    ; preds = %cond.true290
  %type306 = bitcast i64* %28 to %struct.tree_type*, !dbg !8767
  %mode307 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type306, i64 0, i32 6, !dbg !8767
  %bf.load308 = load i32, i32* %mode307, align 4, !dbg !8767
  %bf.lshr309 = lshr i32 %bf.load308, 16, !dbg !8767
  %bf.clear310 = and i32 %bf.lshr309, 255, !dbg !8767
  br label %cond.end339, !dbg !8767

cond.false313:                                    ; preds = %cond.end283
  %29 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load317 = load i64, i64* %29, align 8, !dbg !8767
  %bf.cast31925 = and i64 %bf.load317, 65535, !dbg !8767
  %cmp320 = icmp eq i64 %bf.cast31925, 14, !dbg !8767
  br i1 %cmp320, label %cond.true322, label %cond.false326, !dbg !8767

cond.true322:                                     ; preds = %cond.false313
  %.cast26 = bitcast i64* %29 to %union.tree_node*, !dbg !8767
  %call325 = tail call i32 @vector_type_mode(%union.tree_node* %.cast26) #7, !dbg !8767
  br label %cond.end334, !dbg !8767

cond.false326:                                    ; preds = %cond.false313
  %type329 = bitcast i64* %29 to %struct.tree_type*, !dbg !8767
  %mode330 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type329, i64 0, i32 6, !dbg !8767
  %bf.load331 = load i32, i32* %mode330, align 4, !dbg !8767
  %bf.lshr332 = lshr i32 %bf.load331, 16, !dbg !8767
  %bf.clear333 = and i32 %bf.lshr332, 255, !dbg !8767
  br label %cond.end334, !dbg !8767

cond.end334:                                      ; preds = %cond.false326, %cond.true322
  %cond335 = phi i32 [ %call325, %cond.true322 ], [ %bf.clear333, %cond.false326 ], !dbg !8767
  %idxprom336 = zext i32 %cond335 to i64, !dbg !8767
  %arrayidx337 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom336, !dbg !8767
  %30 = load i8, i8* %arrayidx337, align 1, !dbg !8767
  %conv338 = zext i8 %30 to i32, !dbg !8767
  br label %cond.end339, !dbg !8767

cond.end339:                                      ; preds = %cond.true299, %cond.false303, %cond.end334
  %cond340 = phi i32 [ %conv338, %cond.end334 ], [ %call302, %cond.true299 ], [ %bf.clear310, %cond.false303 ], !dbg !8767
  br label %cond.end449, !dbg !8767

cond.false341:                                    ; preds = %cond.end227
  br i1 %cmp241, label %cond.true350, label %cond.false354, !dbg !8767

cond.true350:                                     ; preds = %cond.false341
  %call353 = tail call i32 @vector_type_mode(%union.tree_node* %.cast16) #7, !dbg !8767
  br label %cond.end362, !dbg !8767

cond.false354:                                    ; preds = %cond.false341
  %type357 = bitcast i64* %24 to %struct.tree_type*, !dbg !8767
  %mode358 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type357, i64 0, i32 6, !dbg !8767
  %bf.load359 = load i32, i32* %mode358, align 4, !dbg !8767
  %bf.lshr360 = lshr i32 %bf.load359, 16, !dbg !8767
  %bf.clear361 = and i32 %bf.lshr360, 255, !dbg !8767
  br label %cond.end362, !dbg !8767

cond.end362:                                      ; preds = %cond.false354, %cond.true350
  %cond363 = phi i32 [ %call353, %cond.true350 ], [ %bf.clear361, %cond.false354 ], !dbg !8767
  %idxprom364 = zext i32 %cond363 to i64, !dbg !8767
  %arrayidx365 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom364, !dbg !8767
  %31 = load i8, i8* %arrayidx365, align 1, !dbg !8767
  %cmp367 = icmp eq i8 %31, 8, !dbg !8767
  br i1 %cmp367, label %cond.true397, label %lor.lhs.false369, !dbg !8767

lor.lhs.false369:                                 ; preds = %cond.end362
  %32 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load373 = load i64, i64* %32, align 8, !dbg !8767
  %bf.cast37517 = and i64 %bf.load373, 65535, !dbg !8767
  %cmp376 = icmp eq i64 %bf.cast37517, 14, !dbg !8767
  br i1 %cmp376, label %cond.true378, label %cond.false382, !dbg !8767

cond.true378:                                     ; preds = %lor.lhs.false369
  %.cast18 = bitcast i64* %32 to %union.tree_node*, !dbg !8767
  %call381 = tail call i32 @vector_type_mode(%union.tree_node* %.cast18) #7, !dbg !8767
  br label %cond.end390, !dbg !8767

cond.false382:                                    ; preds = %lor.lhs.false369
  %type385 = bitcast i64* %32 to %struct.tree_type*, !dbg !8767
  %mode386 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type385, i64 0, i32 6, !dbg !8767
  %bf.load387 = load i32, i32* %mode386, align 4, !dbg !8767
  %bf.lshr388 = lshr i32 %bf.load387, 16, !dbg !8767
  %bf.clear389 = and i32 %bf.lshr388, 255, !dbg !8767
  br label %cond.end390, !dbg !8767

cond.end390:                                      ; preds = %cond.false382, %cond.true378
  %cond391 = phi i32 [ %call381, %cond.true378 ], [ %bf.clear389, %cond.false382 ], !dbg !8767
  %idxprom392 = zext i32 %cond391 to i64, !dbg !8767
  %arrayidx393 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom392, !dbg !8767
  %33 = load i8, i8* %arrayidx393, align 1, !dbg !8767
  %cmp395 = icmp eq i8 %33, 9, !dbg !8767
  br i1 %cmp395, label %cond.true397, label %cond.false420, !dbg !8767

cond.true397:                                     ; preds = %cond.end390, %cond.end362
  %34 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load401 = load i64, i64* %34, align 8, !dbg !8767
  %bf.cast40321 = and i64 %bf.load401, 65535, !dbg !8767
  %cmp404 = icmp eq i64 %bf.cast40321, 14, !dbg !8767
  br i1 %cmp404, label %cond.true406, label %cond.false410, !dbg !8767

cond.true406:                                     ; preds = %cond.true397
  %.cast22 = bitcast i64* %34 to %union.tree_node*, !dbg !8767
  %call409 = tail call i32 @vector_type_mode(%union.tree_node* %.cast22) #7, !dbg !8767
  br label %cond.end446, !dbg !8767

cond.false410:                                    ; preds = %cond.true397
  %type413 = bitcast i64* %34 to %struct.tree_type*, !dbg !8767
  %mode414 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type413, i64 0, i32 6, !dbg !8767
  %bf.load415 = load i32, i32* %mode414, align 4, !dbg !8767
  %bf.lshr416 = lshr i32 %bf.load415, 16, !dbg !8767
  %bf.clear417 = and i32 %bf.lshr416, 255, !dbg !8767
  br label %cond.end446, !dbg !8767

cond.false420:                                    ; preds = %cond.end390
  %35 = load i64*, i64** %7, align 8, !dbg !8767
  %bf.load424 = load i64, i64* %35, align 8, !dbg !8767
  %bf.cast42619 = and i64 %bf.load424, 65535, !dbg !8767
  %cmp427 = icmp eq i64 %bf.cast42619, 14, !dbg !8767
  br i1 %cmp427, label %cond.true429, label %cond.false433, !dbg !8767

cond.true429:                                     ; preds = %cond.false420
  %.cast20 = bitcast i64* %35 to %union.tree_node*, !dbg !8767
  %call432 = tail call i32 @vector_type_mode(%union.tree_node* %.cast20) #7, !dbg !8767
  br label %cond.end441, !dbg !8767

cond.false433:                                    ; preds = %cond.false420
  %type436 = bitcast i64* %35 to %struct.tree_type*, !dbg !8767
  %mode437 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type436, i64 0, i32 6, !dbg !8767
  %bf.load438 = load i32, i32* %mode437, align 4, !dbg !8767
  %bf.lshr439 = lshr i32 %bf.load438, 16, !dbg !8767
  %bf.clear440 = and i32 %bf.lshr439, 255, !dbg !8767
  br label %cond.end441, !dbg !8767

cond.end441:                                      ; preds = %cond.false433, %cond.true429
  %cond442 = phi i32 [ %call432, %cond.true429 ], [ %bf.clear440, %cond.false433 ], !dbg !8767
  %idxprom443 = zext i32 %cond442 to i64, !dbg !8767
  %arrayidx444 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom443, !dbg !8767
  %36 = load i8, i8* %arrayidx444, align 1, !dbg !8767
  %conv445 = zext i8 %36 to i32, !dbg !8767
  br label %cond.end446, !dbg !8767

cond.end446:                                      ; preds = %cond.true406, %cond.false410, %cond.end441
  %cond447 = phi i32 [ %conv445, %cond.end441 ], [ %call409, %cond.true406 ], [ %bf.clear417, %cond.false410 ], !dbg !8767
  br label %cond.end449, !dbg !8767

cond.end449:                                      ; preds = %cond.end446, %cond.end339
  %cond450.in = phi i32 [ %cond340, %cond.end339 ], [ %cond447, %cond.end446 ]
  %cond450 = add i32 %cond450.in, -38, !dbg !8767
  %idxprom451 = zext i32 %cond450 to i64, !dbg !8767
  %arrayidx452 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom451, !dbg !8767
  %37 = load %struct.real_format*, %struct.real_format** %arrayidx452, align 8, !dbg !8767
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %37, i64 0, i32 14, !dbg !8767
  %38 = load i8, i8* %has_signed_zero, align 1, !dbg !8767
  %tobool454 = icmp ne i8 %38, 0, !dbg !8767
  %39 = load i32, i32* @flag_signed_zeros, align 4, !dbg !8767
  %tobool456 = icmp ne i32 %39, 0, !dbg !8767
  %or.cond = and i1 %tobool454, %tobool456, !dbg !8767
  br i1 %or.cond, label %cleanup, label %if.then457, !dbg !8767

if.then457:                                       ; preds = %cond.end449, %cond.end115
  %40 = load %union.tree_node*, %union.tree_node** %type16, align 8, !dbg !8769
  %call460 = tail call %union.tree_node* @build_real(%union.tree_node* %40, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst0) #7, !dbg !8769
  %call461 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 97, %union.tree_node* %type, %union.tree_node* %arg, %union.tree_node* %call460) #7, !dbg !8769
  br label %cleanup, !dbg !8770

cleanup:                                          ; preds = %entry, %cond.end449, %if.then457, %if.then13, %if.then6
  %retval.0 = phi %union.tree_node* [ %call14, %if.then13 ], [ %call461, %if.then457 ], [ %call9, %if.then6 ], [ null, %entry ], [ null, %cond.end449 ], !dbg !8746
  ret %union.tree_node* %retval.0, !dbg !8771
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_significand(i32 %loc, %union.tree_node* %arg, %union.tree_node* %rettype) unnamed_addr #5 !dbg !8772 {
entry:
  %result = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8774, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8775, metadata !DIExpression()), !dbg !8786
  call void @llvm.dbg.value(metadata %union.tree_node* %rettype, metadata !8776, metadata !DIExpression()), !dbg !8786
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8787
  %tobool = icmp eq i8 %call, 0, !dbg !8787
  br i1 %tobool, label %return, label %if.end, !dbg !8789

if.end:                                           ; preds = %entry
  %call1 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %arg) #7, !dbg !8790
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8775, metadata !DIExpression()), !dbg !8786
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8791
  %bf.load = load i64, i64* %0, align 8, !dbg !8791
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !8792
  %cmp = icmp eq i64 %bf.cast3, 24, !dbg !8792
  br i1 %cmp, label %land.lhs.true, label %if.end86, !dbg !8793

land.lhs.true:                                    ; preds = %if.end
  %bf.cast54 = and i64 %bf.load, 134217728, !dbg !8794
  %tobool6 = icmp eq i64 %bf.cast54, 0, !dbg !8794
  br i1 %tobool6, label %if.then7, label %if.end86, !dbg !8795

if.then7:                                         ; preds = %land.lhs.true
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8796
  %1 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !8796
  %2 = load %struct.real_value*, %struct.real_value** %1, align 8, !dbg !8796
  call void @llvm.dbg.value(metadata %struct.real_value* %2, metadata !8777, metadata !DIExpression()), !dbg !8797
  %3 = getelementptr inbounds %struct.real_value, %struct.real_value* %2, i64 0, i32 0, !dbg !8798
  %bf.load8 = load i32, i32* %3, align 8, !dbg !8798
  %bf.clear9 = and i32 %bf.load8, 3, !dbg !8798
  %switch = icmp eq i32 %bf.clear9, 1, !dbg !8799
  br i1 %switch, label %sw.bb11, label %sw.bb, !dbg !8799

sw.bb:                                            ; preds = %if.then7
  %call10 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %rettype, %union.tree_node* %call1) #7, !dbg !8800
  br label %cleanup, !dbg !8801

sw.bb11:                                          ; preds = %if.then7
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8802
  %4 = bitcast %union.tree_node** %type to i64**, !dbg !8802
  %5 = load i64*, i64** %4, align 8, !dbg !8802
  %bf.load13 = load i64, i64* %5, align 8, !dbg !8802
  %bf.cast155 = and i64 %bf.load13, 65535, !dbg !8802
  %cmp16 = icmp eq i64 %bf.cast155, 14, !dbg !8802
  br i1 %cmp16, label %cond.true, label %cond.false, !dbg !8802

cond.true:                                        ; preds = %sw.bb11
  %.cast = bitcast i64* %5 to %union.tree_node*, !dbg !8802
  %call19 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !8802
  %.pre = load i64*, i64** %4, align 8, !dbg !8802
  %bf.load32.pre = load i64, i64* %.pre, align 8, !dbg !8802
  br label %cond.end, !dbg !8802

cond.false:                                       ; preds = %sw.bb11
  %type22 = bitcast i64* %5 to %struct.tree_type*, !dbg !8802
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type22, i64 0, i32 6, !dbg !8802
  %bf.load23 = load i32, i32* %mode, align 4, !dbg !8802
  %bf.lshr24 = lshr i32 %bf.load23, 16, !dbg !8802
  %bf.clear25 = and i32 %bf.lshr24, 255, !dbg !8802
  br label %cond.end, !dbg !8802

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load32 = phi i64 [ %bf.load32.pre, %cond.true ], [ %bf.load13, %cond.false ], !dbg !8802
  %6 = phi i64* [ %.pre, %cond.true ], [ %5, %cond.false ], !dbg !8802
  %cond = phi i32 [ %call19, %cond.true ], [ %bf.clear25, %cond.false ], !dbg !8802
  %idxprom = zext i32 %cond to i64, !dbg !8802
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !8802
  %7 = load i8, i8* %arrayidx, align 1, !dbg !8802
  %cmp26 = icmp eq i8 %7, 9, !dbg !8802
  %bf.cast346 = and i64 %bf.load32, 65535, !dbg !8802
  %cmp35 = icmp eq i64 %bf.cast346, 14, !dbg !8802
  %.cast7 = bitcast i64* %6 to %union.tree_node*, !dbg !8802
  br i1 %cmp26, label %cond.true28, label %cond.false51, !dbg !8802

cond.true28:                                      ; preds = %cond.end
  br i1 %cmp35, label %cond.true37, label %cond.false41, !dbg !8802

cond.true37:                                      ; preds = %cond.true28
  %call40 = tail call i32 @vector_type_mode(%union.tree_node* %.cast7) #7, !dbg !8802
  br label %cond.end49, !dbg !8802

cond.false41:                                     ; preds = %cond.true28
  %type44 = bitcast i64* %6 to %struct.tree_type*, !dbg !8802
  %mode45 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type44, i64 0, i32 6, !dbg !8802
  %bf.load46 = load i32, i32* %mode45, align 4, !dbg !8802
  %bf.lshr47 = lshr i32 %bf.load46, 16, !dbg !8802
  %bf.clear48 = and i32 %bf.lshr47, 255, !dbg !8802
  br label %cond.end49, !dbg !8802

cond.end49:                                       ; preds = %cond.false41, %cond.true37
  %cond50 = phi i32 [ %call40, %cond.true37 ], [ %bf.clear48, %cond.false41 ], !dbg !8802
  br label %cond.end75, !dbg !8802

cond.false51:                                     ; preds = %cond.end
  br i1 %cmp35, label %cond.true60, label %cond.false64, !dbg !8802

cond.true60:                                      ; preds = %cond.false51
  %call63 = tail call i32 @vector_type_mode(%union.tree_node* %.cast7) #7, !dbg !8802
  br label %cond.end72, !dbg !8802

cond.false64:                                     ; preds = %cond.false51
  %type67 = bitcast i64* %6 to %struct.tree_type*, !dbg !8802
  %mode68 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type67, i64 0, i32 6, !dbg !8802
  %bf.load69 = load i32, i32* %mode68, align 4, !dbg !8802
  %bf.lshr70 = lshr i32 %bf.load69, 16, !dbg !8802
  %bf.clear71 = and i32 %bf.lshr70, 255, !dbg !8802
  br label %cond.end72, !dbg !8802

cond.end72:                                       ; preds = %cond.false64, %cond.true60
  %cond73 = phi i32 [ %call63, %cond.true60 ], [ %bf.clear71, %cond.false64 ], !dbg !8802
  br label %cond.end75, !dbg !8802

cond.end75:                                       ; preds = %cond.end72, %cond.end49
  %cond76.in = phi i32 [ %cond50, %cond.end49 ], [ %cond73, %cond.end72 ]
  %cond76 = add i32 %cond76.in, -38, !dbg !8802
  %idxprom77 = zext i32 %cond76 to i64, !dbg !8802
  %arrayidx78 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom77, !dbg !8802
  %8 = load %struct.real_format*, %struct.real_format** %arrayidx78, align 8, !dbg !8802
  %b = getelementptr inbounds %struct.real_format, %struct.real_format* %8, i64 0, i32 2, !dbg !8803
  %9 = load i32, i32* %b, align 8, !dbg !8803
  %cmp79 = icmp eq i32 %9, 2, !dbg !8804
  br i1 %cmp79, label %if.then81, label %cleanup, !dbg !8805

if.then81:                                        ; preds = %cond.end75
  %10 = bitcast %struct.real_value* %result to i8*, !dbg !8806
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #6, !dbg !8806
  %11 = bitcast %struct.real_value* %2 to i8*, !dbg !8807
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 32, i1 false), !dbg !8807
  %12 = getelementptr inbounds %struct.real_value, %struct.real_value* %result, i64 0, i32 0, !dbg !8808
  %bf.load82 = load i32, i32* %12, align 8, !dbg !8808
  %bf.clear83 = and i32 %bf.load82, 63, !dbg !8808
  %bf.set = or i32 %bf.clear83, 64, !dbg !8808
  store i32 %bf.set, i32* %12, align 8, !dbg !8808
  call void @llvm.dbg.value(metadata %struct.real_value* %result, metadata !8782, metadata !DIExpression(DW_OP_deref)), !dbg !8809
  %call84 = tail call %union.tree_node* @build_real(%union.tree_node* %rettype, %struct.real_value* nonnull byval(%struct.real_value) align 8 %result) #7, !dbg !8810
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #6, !dbg !8811
  br label %cleanup

cleanup:                                          ; preds = %cond.end75, %if.then81, %sw.bb
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then81 ], [ false, %sw.bb ], [ true, %cond.end75 ]
  %retval.0 = phi %union.tree_node* [ %call84, %if.then81 ], [ %call10, %sw.bb ], [ undef, %cond.end75 ]
  br i1 %cleanup.dest.slot.0, label %if.end86, label %return

if.end86:                                         ; preds = %land.lhs.true, %cleanup, %if.end
  br label %return, !dbg !8812

return:                                           ; preds = %entry, %cleanup, %if.end86
  %retval.1 = phi %union.tree_node* [ null, %if.end86 ], [ %retval.0, %cleanup ], [ null, %entry ]
  ret %union.tree_node* %retval.1, !dbg !8813
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_logb(i32 %loc, %union.tree_node* %arg, %union.tree_node* %rettype) unnamed_addr #5 !dbg !8814 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8816, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8817, metadata !DIExpression()), !dbg !8822
  call void @llvm.dbg.value(metadata %union.tree_node* %rettype, metadata !8818, metadata !DIExpression()), !dbg !8822
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8823
  %tobool = icmp eq i8 %call, 0, !dbg !8823
  br i1 %tobool, label %return, label %if.end, !dbg !8825

if.end:                                           ; preds = %entry
  %call1 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %arg) #7, !dbg !8826
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !8817, metadata !DIExpression()), !dbg !8822
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8827
  %bf.load = load i64, i64* %0, align 8, !dbg !8827
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !8828
  %cmp = icmp eq i64 %bf.cast2, 24, !dbg !8828
  br i1 %cmp, label %land.lhs.true, label %if.end98, !dbg !8829

land.lhs.true:                                    ; preds = %if.end
  %bf.cast53 = and i64 %bf.load, 134217728, !dbg !8830
  %tobool6 = icmp eq i64 %bf.cast53, 0, !dbg !8830
  br i1 %tobool6, label %if.then7, label %if.end98, !dbg !8831

if.then7:                                         ; preds = %land.lhs.true
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8832
  %1 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !8832
  %2 = load %struct.real_value*, %struct.real_value** %1, align 8, !dbg !8832
  call void @llvm.dbg.value(metadata %struct.real_value* %2, metadata !8819, metadata !DIExpression()), !dbg !8833
  %3 = getelementptr inbounds %struct.real_value, %struct.real_value* %2, i64 0, i32 0, !dbg !8834
  %bf.load8 = load i32, i32* %3, align 8, !dbg !8834
  %bf.clear9 = and i32 %bf.load8, 3, !dbg !8834
  switch i32 %bf.clear9, label %sw.epilog1 [
    i32 3, label %sw.bb
    i32 2, label %sw.bb
    i32 0, label %cleanup
    i32 1, label %sw.bb19
  ], !dbg !8835

sw.bb:                                            ; preds = %if.then7, %if.then7
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %rettype, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8836
  %bf.load11 = load i64, i64* %4, align 8, !dbg !8836
  %bf.cast137 = and i64 %bf.load11, 65535, !dbg !8839
  %cmp14 = icmp eq i64 %bf.cast137, 9, !dbg !8839
  br i1 %cmp14, label %if.then15, label %cleanup, !dbg !8840

if.then15:                                        ; preds = %sw.bb
  %call16 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %rettype, %union.tree_node* %call1) #7, !dbg !8841
  br label %cleanup, !dbg !8842

sw.bb19:                                          ; preds = %if.then7
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8843
  %5 = bitcast %union.tree_node** %type to i64**, !dbg !8843
  %6 = load i64*, i64** %5, align 8, !dbg !8843
  %bf.load21 = load i64, i64* %6, align 8, !dbg !8843
  %bf.cast234 = and i64 %bf.load21, 65535, !dbg !8843
  %cmp24 = icmp eq i64 %bf.cast234, 14, !dbg !8843
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !8843

cond.true:                                        ; preds = %sw.bb19
  %.cast = bitcast i64* %6 to %union.tree_node*, !dbg !8843
  %call27 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !8843
  %.pre = load i64*, i64** %5, align 8, !dbg !8843
  %bf.load40.pre = load i64, i64* %.pre, align 8, !dbg !8843
  br label %cond.end, !dbg !8843

cond.false:                                       ; preds = %sw.bb19
  %type30 = bitcast i64* %6 to %struct.tree_type*, !dbg !8843
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type30, i64 0, i32 6, !dbg !8843
  %bf.load31 = load i32, i32* %mode, align 4, !dbg !8843
  %bf.lshr32 = lshr i32 %bf.load31, 16, !dbg !8843
  %bf.clear33 = and i32 %bf.lshr32, 255, !dbg !8843
  br label %cond.end, !dbg !8843

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load40 = phi i64 [ %bf.load40.pre, %cond.true ], [ %bf.load21, %cond.false ], !dbg !8843
  %7 = phi i64* [ %.pre, %cond.true ], [ %6, %cond.false ], !dbg !8843
  %cond = phi i32 [ %call27, %cond.true ], [ %bf.clear33, %cond.false ], !dbg !8843
  %idxprom = zext i32 %cond to i64, !dbg !8843
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !8843
  %8 = load i8, i8* %arrayidx, align 1, !dbg !8843
  %cmp34 = icmp eq i8 %8, 9, !dbg !8843
  %bf.cast425 = and i64 %bf.load40, 65535, !dbg !8843
  %cmp43 = icmp eq i64 %bf.cast425, 14, !dbg !8843
  %.cast6 = bitcast i64* %7 to %union.tree_node*, !dbg !8843
  br i1 %cmp34, label %cond.true36, label %cond.false59, !dbg !8843

cond.true36:                                      ; preds = %cond.end
  br i1 %cmp43, label %cond.true45, label %cond.false49, !dbg !8843

cond.true45:                                      ; preds = %cond.true36
  %call48 = tail call i32 @vector_type_mode(%union.tree_node* %.cast6) #7, !dbg !8843
  br label %cond.end57, !dbg !8843

cond.false49:                                     ; preds = %cond.true36
  %type52 = bitcast i64* %7 to %struct.tree_type*, !dbg !8843
  %mode53 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type52, i64 0, i32 6, !dbg !8843
  %bf.load54 = load i32, i32* %mode53, align 4, !dbg !8843
  %bf.lshr55 = lshr i32 %bf.load54, 16, !dbg !8843
  %bf.clear56 = and i32 %bf.lshr55, 255, !dbg !8843
  br label %cond.end57, !dbg !8843

cond.end57:                                       ; preds = %cond.false49, %cond.true45
  %cond58 = phi i32 [ %call48, %cond.true45 ], [ %bf.clear56, %cond.false49 ], !dbg !8843
  br label %cond.end83, !dbg !8843

cond.false59:                                     ; preds = %cond.end
  br i1 %cmp43, label %cond.true68, label %cond.false72, !dbg !8843

cond.true68:                                      ; preds = %cond.false59
  %call71 = tail call i32 @vector_type_mode(%union.tree_node* %.cast6) #7, !dbg !8843
  br label %cond.end80, !dbg !8843

cond.false72:                                     ; preds = %cond.false59
  %type75 = bitcast i64* %7 to %struct.tree_type*, !dbg !8843
  %mode76 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type75, i64 0, i32 6, !dbg !8843
  %bf.load77 = load i32, i32* %mode76, align 4, !dbg !8843
  %bf.lshr78 = lshr i32 %bf.load77, 16, !dbg !8843
  %bf.clear79 = and i32 %bf.lshr78, 255, !dbg !8843
  br label %cond.end80, !dbg !8843

cond.end80:                                       ; preds = %cond.false72, %cond.true68
  %cond81 = phi i32 [ %call71, %cond.true68 ], [ %bf.clear79, %cond.false72 ], !dbg !8843
  br label %cond.end83, !dbg !8843

cond.end83:                                       ; preds = %cond.end80, %cond.end57
  %cond84.in = phi i32 [ %cond58, %cond.end57 ], [ %cond81, %cond.end80 ]
  %cond84 = add i32 %cond84.in, -38, !dbg !8843
  %idxprom85 = zext i32 %cond84 to i64, !dbg !8843
  %arrayidx86 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom85, !dbg !8843
  %9 = load %struct.real_format*, %struct.real_format** %arrayidx86, align 8, !dbg !8843
  %b = getelementptr inbounds %struct.real_format, %struct.real_format* %9, i64 0, i32 2, !dbg !8845
  %10 = load i32, i32* %b, align 8, !dbg !8845
  %cmp87 = icmp eq i32 %10, 2, !dbg !8846
  br i1 %cmp87, label %if.then89, label %cleanup, !dbg !8847

if.then89:                                        ; preds = %cond.end83
  %bf.load90 = load i32, i32* %3, align 8, !dbg !8848
  %sub92 = ashr i32 %bf.load90, 6, !dbg !8848
  %sub93 = add nsw i32 %sub92, -1, !dbg !8849
  %conv94 = sext i32 %sub93 to i64, !dbg !8848
  %call95 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv94) #7, !dbg !8850
  %call96 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %rettype, %union.tree_node* %call95) #7, !dbg !8851
  br label %cleanup, !dbg !8852

sw.epilog1:                                       ; preds = %if.then7
  unreachable

cleanup:                                          ; preds = %cond.end83, %if.then7, %sw.bb, %if.then89, %if.then15
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then89 ], [ false, %if.then15 ], [ false, %sw.bb ], [ false, %if.then7 ], [ true, %cond.end83 ]
  %retval.0 = phi %union.tree_node* [ %call96, %if.then89 ], [ %call16, %if.then15 ], [ null, %sw.bb ], [ null, %if.then7 ], [ undef, %cond.end83 ]
  br i1 %cleanup.dest.slot.0, label %if.end98, label %return

if.end98:                                         ; preds = %land.lhs.true, %cleanup, %if.end
  br label %return, !dbg !8853

return:                                           ; preds = %entry, %cleanup, %if.end98
  %retval.1 = phi %union.tree_node* [ null, %if.end98 ], [ %retval.0, %cleanup ], [ null, %entry ]
  ret %union.tree_node* %retval.1, !dbg !8854
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_isascii(i32 %loc, %union.tree_node* %arg) unnamed_addr #5 !dbg !8855 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8859, metadata !DIExpression()), !dbg !8861
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8860, metadata !DIExpression()), !dbg !8861
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 8) #8, !dbg !8862
  %tobool = icmp eq i8 %call, 0, !dbg !8862
  br i1 %tobool, label %return, label %if.else, !dbg !8864

if.else:                                          ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8865
  %call1 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 -128) #7, !dbg !8865
  %call2 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 89, %union.tree_node* %0, %union.tree_node* %arg, %union.tree_node* %call1) #7, !dbg !8865
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !8860, metadata !DIExpression()), !dbg !8861
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8867
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8867
  %call3 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 101, %union.tree_node* %1, %union.tree_node* %call2, %union.tree_node* %2) #7, !dbg !8867
  br label %return, !dbg !8868

return:                                           ; preds = %entry, %if.else
  %retval.0 = phi %union.tree_node* [ %call3, %if.else ], [ null, %entry ], !dbg !8869
  ret %union.tree_node* %retval.0, !dbg !8870
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_toascii(i32 %loc, %union.tree_node* %arg) unnamed_addr #5 !dbg !8871 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8873, metadata !DIExpression()), !dbg !8875
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8874, metadata !DIExpression()), !dbg !8875
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 8) #8, !dbg !8876
  %tobool = icmp eq i8 %call, 0, !dbg !8876
  br i1 %tobool, label %return, label %if.end, !dbg !8878

if.end:                                           ; preds = %entry
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8879
  %call1 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 127) #7, !dbg !8879
  %call2 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 89, %union.tree_node* %0, %union.tree_node* %arg, %union.tree_node* %call1) #7, !dbg !8879
  br label %return, !dbg !8880

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi %union.tree_node* [ %call2, %if.end ], [ null, %entry ], !dbg !8875
  ret %union.tree_node* %retval.0, !dbg !8881
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_isdigit(i32 %loc, %union.tree_node* %arg) unnamed_addr #5 !dbg !8882 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8884, metadata !DIExpression()), !dbg !8889
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8885, metadata !DIExpression()), !dbg !8889
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 8) #8, !dbg !8890
  %tobool = icmp eq i8 %call, 0, !dbg !8890
  br i1 %tobool, label %return, label %if.else, !dbg !8891

if.else:                                          ; preds = %entry
  %0 = load i64 (i64)*, i64 (i64)** getelementptr inbounds (%struct.lang_hooks, %struct.lang_hooks* @lang_hooks, i64 0, i32 26), align 8, !dbg !8892
  %call1 = tail call i64 %0(i64 48) #7, !dbg !8893
  call void @llvm.dbg.value(metadata i64 %call1, metadata !8886, metadata !DIExpression()), !dbg !8894
  %cmp = icmp eq i64 %call1, 0, !dbg !8895
  br i1 %cmp, label %return, label %if.end, !dbg !8897

if.end:                                           ; preds = %if.else
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !8898
  %call3 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %1, %union.tree_node* %arg) #7, !dbg !8899
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !8885, metadata !DIExpression()), !dbg !8889
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !8900
  %call4 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %2, i64 %call1) #7, !dbg !8900
  %call5 = tail call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 64, %union.tree_node* %2, %union.tree_node* %call3, %union.tree_node* %call4) #7, !dbg !8900
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !8885, metadata !DIExpression()), !dbg !8889
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8901
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 6), align 16, !dbg !8901
  %call6 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %4, i64 9) #7, !dbg !8901
  %call7 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 98, %union.tree_node* %3, %union.tree_node* %call5, %union.tree_node* %call6) #7, !dbg !8901
  br label %return, !dbg !8902

return:                                           ; preds = %entry, %if.end, %if.else
  %retval.1 = phi %union.tree_node* [ null, %entry ], [ %call7, %if.end ], [ null, %if.else ], !dbg !8903
  ret %union.tree_node* %retval.1, !dbg !8904
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_classify(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg, i32 %builtin_index) unnamed_addr #5 !dbg !8905 {
entry:
  %r = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8909, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8910, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8911, metadata !DIExpression()), !dbg !8924
  call void @llvm.dbg.value(metadata i32 %builtin_index, metadata !8912, metadata !DIExpression()), !dbg !8924
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8925
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !8925
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !8925
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !8925
  %2 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !8925
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !8913, metadata !DIExpression()), !dbg !8924
  %3 = bitcast %struct.real_value* %r to i8*, !dbg !8926
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #6, !dbg !8926
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !8927
  %tobool = icmp eq i8 %call, 0, !dbg !8927
  br i1 %tobool, label %cleanup, label %if.end, !dbg !8929

if.end:                                           ; preds = %entry
  switch i32 %builtin_index, label %sw.default [
    i32 469, label %sw.bb
    i32 468, label %sw.bb454
    i32 467, label %sw.bb470
    i32 475, label %sw.bb1389
  ], !dbg !8930

sw.bb:                                            ; preds = %if.end
  %type5 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8931
  %4 = bitcast %union.tree_node** %type5 to i64**, !dbg !8931
  %5 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load = load i64, i64* %5, align 8, !dbg !8931
  %bf.cast96 = and i64 %bf.load, 65535, !dbg !8931
  %cmp = icmp eq i64 %bf.cast96, 14, !dbg !8931
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8931

cond.true:                                        ; preds = %sw.bb
  %.cast97 = bitcast i64* %5 to %union.tree_node*, !dbg !8931
  %call8 = tail call i32 @vector_type_mode(%union.tree_node* %.cast97) #7, !dbg !8931
  br label %cond.end, !dbg !8931

cond.false:                                       ; preds = %sw.bb
  %type11 = bitcast i64* %5 to %struct.tree_type*, !dbg !8931
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type11, i64 0, i32 6, !dbg !8931
  %bf.load12 = load i32, i32* %mode, align 4, !dbg !8931
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !8931
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !8931
  br label %cond.end, !dbg !8931

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call8, %cond.true ], [ %bf.clear13, %cond.false ], !dbg !8931
  %idxprom = zext i32 %cond to i64, !dbg !8931
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !8931
  %6 = load i8, i8* %arrayidx, align 1, !dbg !8931
  %cmp14 = icmp eq i8 %6, 8, !dbg !8931
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false, !dbg !8931

lor.lhs.false:                                    ; preds = %cond.end
  %7 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load19 = load i64, i64* %7, align 8, !dbg !8931
  %bf.cast2198 = and i64 %bf.load19, 65535, !dbg !8931
  %cmp22 = icmp eq i64 %bf.cast2198, 14, !dbg !8931
  br i1 %cmp22, label %cond.true24, label %cond.false28, !dbg !8931

cond.true24:                                      ; preds = %lor.lhs.false
  %.cast99 = bitcast i64* %7 to %union.tree_node*, !dbg !8931
  %call27 = tail call i32 @vector_type_mode(%union.tree_node* %.cast99) #7, !dbg !8931
  br label %cond.end36, !dbg !8931

cond.false28:                                     ; preds = %lor.lhs.false
  %type31 = bitcast i64* %7 to %struct.tree_type*, !dbg !8931
  %mode32 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type31, i64 0, i32 6, !dbg !8931
  %bf.load33 = load i32, i32* %mode32, align 4, !dbg !8931
  %bf.lshr34 = lshr i32 %bf.load33, 16, !dbg !8931
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !8931
  br label %cond.end36, !dbg !8931

cond.end36:                                       ; preds = %cond.false28, %cond.true24
  %cond37 = phi i32 [ %call27, %cond.true24 ], [ %bf.clear35, %cond.false28 ], !dbg !8931
  %idxprom38 = zext i32 %cond37 to i64, !dbg !8931
  %arrayidx39 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom38, !dbg !8931
  %8 = load i8, i8* %arrayidx39, align 1, !dbg !8931
  %cmp41 = icmp eq i8 %8, 9, !dbg !8931
  br i1 %cmp41, label %land.lhs.true, label %lor.lhs.false43, !dbg !8931

lor.lhs.false43:                                  ; preds = %cond.end36
  %9 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load47 = load i64, i64* %9, align 8, !dbg !8931
  %bf.cast49100 = and i64 %bf.load47, 65535, !dbg !8931
  %cmp50 = icmp eq i64 %bf.cast49100, 14, !dbg !8931
  br i1 %cmp50, label %cond.true52, label %cond.false56, !dbg !8931

cond.true52:                                      ; preds = %lor.lhs.false43
  %.cast101 = bitcast i64* %9 to %union.tree_node*, !dbg !8931
  %call55 = tail call i32 @vector_type_mode(%union.tree_node* %.cast101) #7, !dbg !8931
  br label %cond.end64, !dbg !8931

cond.false56:                                     ; preds = %lor.lhs.false43
  %type59 = bitcast i64* %9 to %struct.tree_type*, !dbg !8931
  %mode60 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type59, i64 0, i32 6, !dbg !8931
  %bf.load61 = load i32, i32* %mode60, align 4, !dbg !8931
  %bf.lshr62 = lshr i32 %bf.load61, 16, !dbg !8931
  %bf.clear63 = and i32 %bf.lshr62, 255, !dbg !8931
  br label %cond.end64, !dbg !8931

cond.end64:                                       ; preds = %cond.false56, %cond.true52
  %cond65 = phi i32 [ %call55, %cond.true52 ], [ %bf.clear63, %cond.false56 ], !dbg !8931
  %idxprom66 = zext i32 %cond65 to i64, !dbg !8931
  %arrayidx67 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom66, !dbg !8931
  %10 = load i8, i8* %arrayidx67, align 1, !dbg !8931
  %cmp69 = icmp eq i8 %10, 11, !dbg !8931
  br i1 %cmp69, label %land.lhs.true, label %lor.lhs.false71, !dbg !8931

lor.lhs.false71:                                  ; preds = %cond.end64
  %11 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load75 = load i64, i64* %11, align 8, !dbg !8931
  %bf.cast77102 = and i64 %bf.load75, 65535, !dbg !8931
  %cmp78 = icmp eq i64 %bf.cast77102, 14, !dbg !8931
  br i1 %cmp78, label %cond.true80, label %cond.false84, !dbg !8931

cond.true80:                                      ; preds = %lor.lhs.false71
  %.cast103 = bitcast i64* %11 to %union.tree_node*, !dbg !8931
  %call83 = tail call i32 @vector_type_mode(%union.tree_node* %.cast103) #7, !dbg !8931
  br label %cond.end92, !dbg !8931

cond.false84:                                     ; preds = %lor.lhs.false71
  %type87 = bitcast i64* %11 to %struct.tree_type*, !dbg !8931
  %mode88 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type87, i64 0, i32 6, !dbg !8931
  %bf.load89 = load i32, i32* %mode88, align 4, !dbg !8931
  %bf.lshr90 = lshr i32 %bf.load89, 16, !dbg !8931
  %bf.clear91 = and i32 %bf.lshr90, 255, !dbg !8931
  br label %cond.end92, !dbg !8931

cond.end92:                                       ; preds = %cond.false84, %cond.true80
  %cond93 = phi i32 [ %call83, %cond.true80 ], [ %bf.clear91, %cond.false84 ], !dbg !8931
  %idxprom94 = zext i32 %cond93 to i64, !dbg !8931
  %arrayidx95 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom94, !dbg !8931
  %12 = load i8, i8* %arrayidx95, align 1, !dbg !8931
  %cmp97 = icmp eq i8 %12, 17, !dbg !8931
  br i1 %cmp97, label %land.lhs.true, label %if.then433, !dbg !8931

land.lhs.true:                                    ; preds = %cond.end92, %cond.end64, %cond.end36, %cond.end
  %13 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load102 = load i64, i64* %13, align 8, !dbg !8931
  %bf.cast104104 = and i64 %bf.load102, 65535, !dbg !8931
  %cmp105 = icmp eq i64 %bf.cast104104, 14, !dbg !8931
  br i1 %cmp105, label %cond.true107, label %cond.false111, !dbg !8931

cond.true107:                                     ; preds = %land.lhs.true
  %.cast105 = bitcast i64* %13 to %union.tree_node*, !dbg !8931
  %call110 = tail call i32 @vector_type_mode(%union.tree_node* %.cast105) #7, !dbg !8931
  br label %cond.end119, !dbg !8931

cond.false111:                                    ; preds = %land.lhs.true
  %type114 = bitcast i64* %13 to %struct.tree_type*, !dbg !8931
  %mode115 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type114, i64 0, i32 6, !dbg !8931
  %bf.load116 = load i32, i32* %mode115, align 4, !dbg !8931
  %bf.lshr117 = lshr i32 %bf.load116, 16, !dbg !8931
  %bf.clear118 = and i32 %bf.lshr117, 255, !dbg !8931
  br label %cond.end119, !dbg !8931

cond.end119:                                      ; preds = %cond.false111, %cond.true107
  %cond120 = phi i32 [ %call110, %cond.true107 ], [ %bf.clear118, %cond.false111 ], !dbg !8931
  %idxprom121 = zext i32 %cond120 to i64, !dbg !8931
  %arrayidx122 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom121, !dbg !8931
  %14 = load i8, i8* %arrayidx122, align 1, !dbg !8931
  %cmp124 = icmp eq i8 %14, 8, !dbg !8931
  br i1 %cmp124, label %cond.true154, label %lor.lhs.false126, !dbg !8931

lor.lhs.false126:                                 ; preds = %cond.end119
  %15 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load130 = load i64, i64* %15, align 8, !dbg !8931
  %bf.cast132106 = and i64 %bf.load130, 65535, !dbg !8931
  %cmp133 = icmp eq i64 %bf.cast132106, 14, !dbg !8931
  br i1 %cmp133, label %cond.true135, label %cond.false139, !dbg !8931

cond.true135:                                     ; preds = %lor.lhs.false126
  %.cast107 = bitcast i64* %15 to %union.tree_node*, !dbg !8931
  %call138 = tail call i32 @vector_type_mode(%union.tree_node* %.cast107) #7, !dbg !8931
  br label %cond.end147, !dbg !8931

cond.false139:                                    ; preds = %lor.lhs.false126
  %type142 = bitcast i64* %15 to %struct.tree_type*, !dbg !8931
  %mode143 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type142, i64 0, i32 6, !dbg !8931
  %bf.load144 = load i32, i32* %mode143, align 4, !dbg !8931
  %bf.lshr145 = lshr i32 %bf.load144, 16, !dbg !8931
  %bf.clear146 = and i32 %bf.lshr145, 255, !dbg !8931
  br label %cond.end147, !dbg !8931

cond.end147:                                      ; preds = %cond.false139, %cond.true135
  %cond148 = phi i32 [ %call138, %cond.true135 ], [ %bf.clear146, %cond.false139 ], !dbg !8931
  %idxprom149 = zext i32 %cond148 to i64, !dbg !8931
  %arrayidx150 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom149, !dbg !8931
  %16 = load i8, i8* %arrayidx150, align 1, !dbg !8931
  %cmp152 = icmp eq i8 %16, 9, !dbg !8931
  br i1 %cmp152, label %cond.true154, label %cond.false177, !dbg !8931

cond.true154:                                     ; preds = %cond.end147, %cond.end119
  %17 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load158 = load i64, i64* %17, align 8, !dbg !8931
  %bf.cast160125 = and i64 %bf.load158, 65535, !dbg !8931
  %cmp161 = icmp eq i64 %bf.cast160125, 14, !dbg !8931
  br i1 %cmp161, label %cond.true163, label %cond.false167, !dbg !8931

cond.true163:                                     ; preds = %cond.true154
  %.cast126 = bitcast i64* %17 to %union.tree_node*, !dbg !8931
  %call166 = tail call i32 @vector_type_mode(%union.tree_node* %.cast126) #7, !dbg !8931
  br label %cond.end203, !dbg !8931

cond.false167:                                    ; preds = %cond.true154
  %type170 = bitcast i64* %17 to %struct.tree_type*, !dbg !8931
  %mode171 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type170, i64 0, i32 6, !dbg !8931
  %bf.load172 = load i32, i32* %mode171, align 4, !dbg !8931
  %bf.lshr173 = lshr i32 %bf.load172, 16, !dbg !8931
  %bf.clear174 = and i32 %bf.lshr173, 255, !dbg !8931
  br label %cond.end203, !dbg !8931

cond.false177:                                    ; preds = %cond.end147
  %18 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load181 = load i64, i64* %18, align 8, !dbg !8931
  %bf.cast183108 = and i64 %bf.load181, 65535, !dbg !8931
  %cmp184 = icmp eq i64 %bf.cast183108, 14, !dbg !8931
  br i1 %cmp184, label %cond.true186, label %cond.false190, !dbg !8931

cond.true186:                                     ; preds = %cond.false177
  %.cast109 = bitcast i64* %18 to %union.tree_node*, !dbg !8931
  %call189 = tail call i32 @vector_type_mode(%union.tree_node* %.cast109) #7, !dbg !8931
  br label %cond.end198, !dbg !8931

cond.false190:                                    ; preds = %cond.false177
  %type193 = bitcast i64* %18 to %struct.tree_type*, !dbg !8931
  %mode194 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type193, i64 0, i32 6, !dbg !8931
  %bf.load195 = load i32, i32* %mode194, align 4, !dbg !8931
  %bf.lshr196 = lshr i32 %bf.load195, 16, !dbg !8931
  %bf.clear197 = and i32 %bf.lshr196, 255, !dbg !8931
  br label %cond.end198, !dbg !8931

cond.end198:                                      ; preds = %cond.false190, %cond.true186
  %cond199 = phi i32 [ %call189, %cond.true186 ], [ %bf.clear197, %cond.false190 ], !dbg !8931
  %idxprom200 = zext i32 %cond199 to i64, !dbg !8931
  %arrayidx201 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom200, !dbg !8931
  %19 = load i8, i8* %arrayidx201, align 1, !dbg !8931
  %conv202 = zext i8 %19 to i32, !dbg !8931
  br label %cond.end203, !dbg !8931

cond.end203:                                      ; preds = %cond.true163, %cond.false167, %cond.end198
  %cond204 = phi i32 [ %conv202, %cond.end198 ], [ %call166, %cond.true163 ], [ %bf.clear174, %cond.false167 ], !dbg !8931
  %idxprom205 = zext i32 %cond204 to i64, !dbg !8931
  %arrayidx206 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom205, !dbg !8931
  %20 = load i8, i8* %arrayidx206, align 1, !dbg !8931
  %cmp208 = icmp eq i8 %20, 9, !dbg !8931
  %21 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load214 = load i64, i64* %21, align 8, !dbg !8931
  %bf.cast216110 = and i64 %bf.load214, 65535, !dbg !8931
  %cmp217 = icmp eq i64 %bf.cast216110, 14, !dbg !8931
  %.cast111 = bitcast i64* %21 to %union.tree_node*, !dbg !8931
  br i1 %cmp208, label %cond.true210, label %cond.false317, !dbg !8931

cond.true210:                                     ; preds = %cond.end203
  br i1 %cmp217, label %cond.true219, label %cond.false223, !dbg !8931

cond.true219:                                     ; preds = %cond.true210
  %call222 = tail call i32 @vector_type_mode(%union.tree_node* %.cast111) #7, !dbg !8931
  br label %cond.end231, !dbg !8931

cond.false223:                                    ; preds = %cond.true210
  %type226 = bitcast i64* %21 to %struct.tree_type*, !dbg !8931
  %mode227 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type226, i64 0, i32 6, !dbg !8931
  %bf.load228 = load i32, i32* %mode227, align 4, !dbg !8931
  %bf.lshr229 = lshr i32 %bf.load228, 16, !dbg !8931
  %bf.clear230 = and i32 %bf.lshr229, 255, !dbg !8931
  br label %cond.end231, !dbg !8931

cond.end231:                                      ; preds = %cond.false223, %cond.true219
  %cond232 = phi i32 [ %call222, %cond.true219 ], [ %bf.clear230, %cond.false223 ], !dbg !8931
  %idxprom233 = zext i32 %cond232 to i64, !dbg !8931
  %arrayidx234 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom233, !dbg !8931
  %22 = load i8, i8* %arrayidx234, align 1, !dbg !8931
  %cmp236 = icmp eq i8 %22, 8, !dbg !8931
  br i1 %cmp236, label %cond.true266, label %lor.lhs.false238, !dbg !8931

lor.lhs.false238:                                 ; preds = %cond.end231
  %23 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load242 = load i64, i64* %23, align 8, !dbg !8931
  %bf.cast244119 = and i64 %bf.load242, 65535, !dbg !8931
  %cmp245 = icmp eq i64 %bf.cast244119, 14, !dbg !8931
  br i1 %cmp245, label %cond.true247, label %cond.false251, !dbg !8931

cond.true247:                                     ; preds = %lor.lhs.false238
  %.cast120 = bitcast i64* %23 to %union.tree_node*, !dbg !8931
  %call250 = tail call i32 @vector_type_mode(%union.tree_node* %.cast120) #7, !dbg !8931
  br label %cond.end259, !dbg !8931

cond.false251:                                    ; preds = %lor.lhs.false238
  %type254 = bitcast i64* %23 to %struct.tree_type*, !dbg !8931
  %mode255 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type254, i64 0, i32 6, !dbg !8931
  %bf.load256 = load i32, i32* %mode255, align 4, !dbg !8931
  %bf.lshr257 = lshr i32 %bf.load256, 16, !dbg !8931
  %bf.clear258 = and i32 %bf.lshr257, 255, !dbg !8931
  br label %cond.end259, !dbg !8931

cond.end259:                                      ; preds = %cond.false251, %cond.true247
  %cond260 = phi i32 [ %call250, %cond.true247 ], [ %bf.clear258, %cond.false251 ], !dbg !8931
  %idxprom261 = zext i32 %cond260 to i64, !dbg !8931
  %arrayidx262 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom261, !dbg !8931
  %24 = load i8, i8* %arrayidx262, align 1, !dbg !8931
  %cmp264 = icmp eq i8 %24, 9, !dbg !8931
  br i1 %cmp264, label %cond.true266, label %cond.false289, !dbg !8931

cond.true266:                                     ; preds = %cond.end259, %cond.end231
  %25 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load270 = load i64, i64* %25, align 8, !dbg !8931
  %bf.cast272123 = and i64 %bf.load270, 65535, !dbg !8931
  %cmp273 = icmp eq i64 %bf.cast272123, 14, !dbg !8931
  br i1 %cmp273, label %cond.true275, label %cond.false279, !dbg !8931

cond.true275:                                     ; preds = %cond.true266
  %.cast124 = bitcast i64* %25 to %union.tree_node*, !dbg !8931
  %call278 = tail call i32 @vector_type_mode(%union.tree_node* %.cast124) #7, !dbg !8931
  br label %cond.end315, !dbg !8931

cond.false279:                                    ; preds = %cond.true266
  %type282 = bitcast i64* %25 to %struct.tree_type*, !dbg !8931
  %mode283 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type282, i64 0, i32 6, !dbg !8931
  %bf.load284 = load i32, i32* %mode283, align 4, !dbg !8931
  %bf.lshr285 = lshr i32 %bf.load284, 16, !dbg !8931
  %bf.clear286 = and i32 %bf.lshr285, 255, !dbg !8931
  br label %cond.end315, !dbg !8931

cond.false289:                                    ; preds = %cond.end259
  %26 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load293 = load i64, i64* %26, align 8, !dbg !8931
  %bf.cast295121 = and i64 %bf.load293, 65535, !dbg !8931
  %cmp296 = icmp eq i64 %bf.cast295121, 14, !dbg !8931
  br i1 %cmp296, label %cond.true298, label %cond.false302, !dbg !8931

cond.true298:                                     ; preds = %cond.false289
  %.cast122 = bitcast i64* %26 to %union.tree_node*, !dbg !8931
  %call301 = tail call i32 @vector_type_mode(%union.tree_node* %.cast122) #7, !dbg !8931
  br label %cond.end310, !dbg !8931

cond.false302:                                    ; preds = %cond.false289
  %type305 = bitcast i64* %26 to %struct.tree_type*, !dbg !8931
  %mode306 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type305, i64 0, i32 6, !dbg !8931
  %bf.load307 = load i32, i32* %mode306, align 4, !dbg !8931
  %bf.lshr308 = lshr i32 %bf.load307, 16, !dbg !8931
  %bf.clear309 = and i32 %bf.lshr308, 255, !dbg !8931
  br label %cond.end310, !dbg !8931

cond.end310:                                      ; preds = %cond.false302, %cond.true298
  %cond311 = phi i32 [ %call301, %cond.true298 ], [ %bf.clear309, %cond.false302 ], !dbg !8931
  %idxprom312 = zext i32 %cond311 to i64, !dbg !8931
  %arrayidx313 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom312, !dbg !8931
  %27 = load i8, i8* %arrayidx313, align 1, !dbg !8931
  %conv314 = zext i8 %27 to i32, !dbg !8931
  br label %cond.end315, !dbg !8931

cond.end315:                                      ; preds = %cond.true275, %cond.false279, %cond.end310
  %cond316 = phi i32 [ %conv314, %cond.end310 ], [ %call278, %cond.true275 ], [ %bf.clear286, %cond.false279 ], !dbg !8931
  br label %cond.end425, !dbg !8931

cond.false317:                                    ; preds = %cond.end203
  br i1 %cmp217, label %cond.true326, label %cond.false330, !dbg !8931

cond.true326:                                     ; preds = %cond.false317
  %call329 = tail call i32 @vector_type_mode(%union.tree_node* %.cast111) #7, !dbg !8931
  br label %cond.end338, !dbg !8931

cond.false330:                                    ; preds = %cond.false317
  %type333 = bitcast i64* %21 to %struct.tree_type*, !dbg !8931
  %mode334 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type333, i64 0, i32 6, !dbg !8931
  %bf.load335 = load i32, i32* %mode334, align 4, !dbg !8931
  %bf.lshr336 = lshr i32 %bf.load335, 16, !dbg !8931
  %bf.clear337 = and i32 %bf.lshr336, 255, !dbg !8931
  br label %cond.end338, !dbg !8931

cond.end338:                                      ; preds = %cond.false330, %cond.true326
  %cond339 = phi i32 [ %call329, %cond.true326 ], [ %bf.clear337, %cond.false330 ], !dbg !8931
  %idxprom340 = zext i32 %cond339 to i64, !dbg !8931
  %arrayidx341 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom340, !dbg !8931
  %28 = load i8, i8* %arrayidx341, align 1, !dbg !8931
  %cmp343 = icmp eq i8 %28, 8, !dbg !8931
  br i1 %cmp343, label %cond.true373, label %lor.lhs.false345, !dbg !8931

lor.lhs.false345:                                 ; preds = %cond.end338
  %29 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load349 = load i64, i64* %29, align 8, !dbg !8931
  %bf.cast351112 = and i64 %bf.load349, 65535, !dbg !8931
  %cmp352 = icmp eq i64 %bf.cast351112, 14, !dbg !8931
  br i1 %cmp352, label %cond.true354, label %cond.false358, !dbg !8931

cond.true354:                                     ; preds = %lor.lhs.false345
  %.cast113 = bitcast i64* %29 to %union.tree_node*, !dbg !8931
  %call357 = tail call i32 @vector_type_mode(%union.tree_node* %.cast113) #7, !dbg !8931
  br label %cond.end366, !dbg !8931

cond.false358:                                    ; preds = %lor.lhs.false345
  %type361 = bitcast i64* %29 to %struct.tree_type*, !dbg !8931
  %mode362 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type361, i64 0, i32 6, !dbg !8931
  %bf.load363 = load i32, i32* %mode362, align 4, !dbg !8931
  %bf.lshr364 = lshr i32 %bf.load363, 16, !dbg !8931
  %bf.clear365 = and i32 %bf.lshr364, 255, !dbg !8931
  br label %cond.end366, !dbg !8931

cond.end366:                                      ; preds = %cond.false358, %cond.true354
  %cond367 = phi i32 [ %call357, %cond.true354 ], [ %bf.clear365, %cond.false358 ], !dbg !8931
  %idxprom368 = zext i32 %cond367 to i64, !dbg !8931
  %arrayidx369 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom368, !dbg !8931
  %30 = load i8, i8* %arrayidx369, align 1, !dbg !8931
  %cmp371 = icmp eq i8 %30, 9, !dbg !8931
  br i1 %cmp371, label %cond.true373, label %cond.false396, !dbg !8931

cond.true373:                                     ; preds = %cond.end366, %cond.end338
  %31 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load377 = load i64, i64* %31, align 8, !dbg !8931
  %bf.cast379117 = and i64 %bf.load377, 65535, !dbg !8931
  %cmp380 = icmp eq i64 %bf.cast379117, 14, !dbg !8931
  br i1 %cmp380, label %cond.true382, label %cond.false386, !dbg !8931

cond.true382:                                     ; preds = %cond.true373
  %.cast118 = bitcast i64* %31 to %union.tree_node*, !dbg !8931
  %call385 = tail call i32 @vector_type_mode(%union.tree_node* %.cast118) #7, !dbg !8931
  br label %cond.end422, !dbg !8931

cond.false386:                                    ; preds = %cond.true373
  %type389 = bitcast i64* %31 to %struct.tree_type*, !dbg !8931
  %mode390 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type389, i64 0, i32 6, !dbg !8931
  %bf.load391 = load i32, i32* %mode390, align 4, !dbg !8931
  %bf.lshr392 = lshr i32 %bf.load391, 16, !dbg !8931
  %bf.clear393 = and i32 %bf.lshr392, 255, !dbg !8931
  br label %cond.end422, !dbg !8931

cond.false396:                                    ; preds = %cond.end366
  %32 = load i64*, i64** %4, align 8, !dbg !8931
  %bf.load400 = load i64, i64* %32, align 8, !dbg !8931
  %bf.cast402114 = and i64 %bf.load400, 65535, !dbg !8931
  %cmp403 = icmp eq i64 %bf.cast402114, 14, !dbg !8931
  br i1 %cmp403, label %cond.true405, label %cond.false409, !dbg !8931

cond.true405:                                     ; preds = %cond.false396
  %.cast115 = bitcast i64* %32 to %union.tree_node*, !dbg !8931
  %call408 = tail call i32 @vector_type_mode(%union.tree_node* %.cast115) #7, !dbg !8931
  br label %cond.end417, !dbg !8931

cond.false409:                                    ; preds = %cond.false396
  %type412 = bitcast i64* %32 to %struct.tree_type*, !dbg !8931
  %mode413 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type412, i64 0, i32 6, !dbg !8931
  %bf.load414 = load i32, i32* %mode413, align 4, !dbg !8931
  %bf.lshr415 = lshr i32 %bf.load414, 16, !dbg !8931
  %bf.clear416 = and i32 %bf.lshr415, 255, !dbg !8931
  br label %cond.end417, !dbg !8931

cond.end417:                                      ; preds = %cond.false409, %cond.true405
  %cond418 = phi i32 [ %call408, %cond.true405 ], [ %bf.clear416, %cond.false409 ], !dbg !8931
  %idxprom419 = zext i32 %cond418 to i64, !dbg !8931
  %arrayidx420 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom419, !dbg !8931
  %33 = load i8, i8* %arrayidx420, align 1, !dbg !8931
  %conv421 = zext i8 %33 to i32, !dbg !8931
  br label %cond.end422, !dbg !8931

cond.end422:                                      ; preds = %cond.true382, %cond.false386, %cond.end417
  %cond423 = phi i32 [ %conv421, %cond.end417 ], [ %call385, %cond.true382 ], [ %bf.clear393, %cond.false386 ], !dbg !8931
  br label %cond.end425, !dbg !8931

cond.end425:                                      ; preds = %cond.end422, %cond.end315
  %cond426.in = phi i32 [ %cond316, %cond.end315 ], [ %cond423, %cond.end422 ]
  %cond426 = add i32 %cond426.in, -38, !dbg !8931
  %idxprom427 = zext i32 %cond426 to i64, !dbg !8931
  %arrayidx428 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom427, !dbg !8931
  %34 = load %struct.real_format*, %struct.real_format** %arrayidx428, align 8, !dbg !8931
  %has_inf = getelementptr inbounds %struct.real_format, %struct.real_format* %34, i64 0, i32 12, !dbg !8931
  %35 = load i8, i8* %has_inf, align 1, !dbg !8931
  %tobool430 = icmp eq i8 %35, 0, !dbg !8931
  %36 = load i32, i32* @flag_finite_math_only, align 4, !dbg !8931
  %tobool432 = icmp ne i32 %36, 0, !dbg !8931
  %or.cond = or i1 %tobool430, %tobool432, !dbg !8931
  br i1 %or.cond, label %if.then433, label %if.end435, !dbg !8931

if.then433:                                       ; preds = %cond.end425, %cond.end92
  %37 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8933
  %call434 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %37, %union.tree_node* %arg) #7, !dbg !8934
  br label %cleanup, !dbg !8935

if.end435:                                        ; preds = %cond.end425
  %38 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8936
  %bf.load437 = load i64, i64* %38, align 8, !dbg !8936
  %bf.cast439116 = and i64 %bf.load437, 65535, !dbg !8938
  %cmp440 = icmp eq i64 %bf.cast439116, 24, !dbg !8938
  br i1 %cmp440, label %if.then442, label %cleanup, !dbg !8939

if.then442:                                       ; preds = %if.end435
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8940
  %39 = bitcast i32* %real_cst_ptr to i8**, !dbg !8940
  %40 = load i8*, i8** %39, align 8, !dbg !8940
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 %40, i64 32, i1 false), !dbg !8940
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8914, metadata !DIExpression(DW_OP_deref)), !dbg !8924
  %call443 = call zeroext i8 @real_isinf(%struct.real_value* nonnull %r) #7, !dbg !8942
  %tobool444 = icmp eq i8 %call443, 0, !dbg !8942
  br i1 %tobool444, label %if.else, label %if.then445, !dbg !8944

if.then445:                                       ; preds = %if.then442
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8914, metadata !DIExpression(DW_OP_deref)), !dbg !8924
  %call446 = call zeroext i8 @real_compare(i32 99, %struct.real_value* nonnull %r, %struct.real_value* nonnull @dconst0) #7, !dbg !8945
  %tobool448 = icmp eq i8 %call446, 0, !dbg !8945
  %41 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8945
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !8945
  %cond452 = select i1 %tobool448, %union.tree_node* %42, %union.tree_node* %41, !dbg !8945
  br label %cleanup, !dbg !8945

if.else:                                          ; preds = %if.then442
  %43 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8946
  br label %cleanup, !dbg !8947

sw.bb454:                                         ; preds = %if.end
  %type456 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8948
  %44 = load %union.tree_node*, %union.tree_node** %type456, align 8, !dbg !8948
  %call457 = tail call fastcc %union.tree_node* @mathfn_built_in_1(%union.tree_node* %44, i32 210, i8 zeroext 0) #8, !dbg !8949
  call void @llvm.dbg.value(metadata %union.tree_node* %call457, metadata !8915, metadata !DIExpression()), !dbg !8950
  %45 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 469), align 8, !dbg !8951
  call void @llvm.dbg.value(metadata %union.tree_node* %45, metadata !8918, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !8919, metadata !DIExpression()), !dbg !8950
  %call458 = tail call fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %arg) #8, !dbg !8952
  call void @llvm.dbg.value(metadata %union.tree_node* %call458, metadata !8911, metadata !DIExpression()), !dbg !8924
  %tobool459 = icmp ne %union.tree_node* %call457, null, !dbg !8953
  %tobool461 = icmp ne %union.tree_node* %45, null, !dbg !8954
  %or.cond1 = and i1 %tobool459, %tobool461, !dbg !8955
  br i1 %or.cond1, label %if.then462, label %cleanup, !dbg !8955

if.then462:                                       ; preds = %sw.bb454
  %call463 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %call457, i32 1, %union.tree_node* %call458) #8, !dbg !8956
  call void @llvm.dbg.value(metadata %union.tree_node* %call463, metadata !8920, metadata !DIExpression()), !dbg !8957
  %call464 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %45, i32 1, %union.tree_node* %call458) #8, !dbg !8958
  call void @llvm.dbg.value(metadata %union.tree_node* %call464, metadata !8923, metadata !DIExpression()), !dbg !8957
  %46 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8959
  %47 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8959
  %call465 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 102, %union.tree_node* %46, %union.tree_node* %call463, %union.tree_node* %47) #7, !dbg !8959
  call void @llvm.dbg.value(metadata %union.tree_node* %call465, metadata !8920, metadata !DIExpression()), !dbg !8957
  %48 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8960
  %49 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8960
  %call466 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 102, %union.tree_node* %48, %union.tree_node* %call464, %union.tree_node* %49) #7, !dbg !8960
  call void @llvm.dbg.value(metadata %union.tree_node* %call466, metadata !8923, metadata !DIExpression()), !dbg !8957
  %50 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8961
  %51 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !8961
  %52 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8961
  %call467 = tail call %union.tree_node* @fold_build3_stat_loc(i32 %loc, i32 56, %union.tree_node* %50, %union.tree_node* %call465, %union.tree_node* %51, %union.tree_node* %52) #7, !dbg !8961
  call void @llvm.dbg.value(metadata %union.tree_node* %call467, metadata !8919, metadata !DIExpression()), !dbg !8950
  %53 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !8962
  %54 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8962
  %call468 = tail call %union.tree_node* @fold_build3_stat_loc(i32 %loc, i32 56, %union.tree_node* %53, %union.tree_node* %call466, %union.tree_node* %call467, %union.tree_node* %54) #7, !dbg !8962
  call void @llvm.dbg.value(metadata %union.tree_node* %call468, metadata !8919, metadata !DIExpression()), !dbg !8950
  br label %cleanup, !dbg !8963

sw.bb470:                                         ; preds = %if.end
  %type472 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8964
  %55 = bitcast %union.tree_node** %type472 to i64**, !dbg !8964
  %56 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load474 = load i64, i64* %56, align 8, !dbg !8964
  %bf.cast47635 = and i64 %bf.load474, 65535, !dbg !8964
  %cmp477 = icmp eq i64 %bf.cast47635, 14, !dbg !8964
  br i1 %cmp477, label %cond.true479, label %cond.false483, !dbg !8964

cond.true479:                                     ; preds = %sw.bb470
  %.cast36 = bitcast i64* %56 to %union.tree_node*, !dbg !8964
  %call482 = tail call i32 @vector_type_mode(%union.tree_node* %.cast36) #7, !dbg !8964
  br label %cond.end491, !dbg !8964

cond.false483:                                    ; preds = %sw.bb470
  %type486 = bitcast i64* %56 to %struct.tree_type*, !dbg !8964
  %mode487 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type486, i64 0, i32 6, !dbg !8964
  %bf.load488 = load i32, i32* %mode487, align 4, !dbg !8964
  %bf.lshr489 = lshr i32 %bf.load488, 16, !dbg !8964
  %bf.clear490 = and i32 %bf.lshr489, 255, !dbg !8964
  br label %cond.end491, !dbg !8964

cond.end491:                                      ; preds = %cond.false483, %cond.true479
  %cond492 = phi i32 [ %call482, %cond.true479 ], [ %bf.clear490, %cond.false483 ], !dbg !8964
  %idxprom493 = zext i32 %cond492 to i64, !dbg !8964
  %arrayidx494 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom493, !dbg !8964
  %57 = load i8, i8* %arrayidx494, align 1, !dbg !8964
  %cmp496 = icmp eq i8 %57, 8, !dbg !8964
  br i1 %cmp496, label %land.lhs.true582, label %lor.lhs.false498, !dbg !8964

lor.lhs.false498:                                 ; preds = %cond.end491
  %58 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load502 = load i64, i64* %58, align 8, !dbg !8964
  %bf.cast50437 = and i64 %bf.load502, 65535, !dbg !8964
  %cmp505 = icmp eq i64 %bf.cast50437, 14, !dbg !8964
  br i1 %cmp505, label %cond.true507, label %cond.false511, !dbg !8964

cond.true507:                                     ; preds = %lor.lhs.false498
  %.cast38 = bitcast i64* %58 to %union.tree_node*, !dbg !8964
  %call510 = tail call i32 @vector_type_mode(%union.tree_node* %.cast38) #7, !dbg !8964
  br label %cond.end519, !dbg !8964

cond.false511:                                    ; preds = %lor.lhs.false498
  %type514 = bitcast i64* %58 to %struct.tree_type*, !dbg !8964
  %mode515 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type514, i64 0, i32 6, !dbg !8964
  %bf.load516 = load i32, i32* %mode515, align 4, !dbg !8964
  %bf.lshr517 = lshr i32 %bf.load516, 16, !dbg !8964
  %bf.clear518 = and i32 %bf.lshr517, 255, !dbg !8964
  br label %cond.end519, !dbg !8964

cond.end519:                                      ; preds = %cond.false511, %cond.true507
  %cond520 = phi i32 [ %call510, %cond.true507 ], [ %bf.clear518, %cond.false511 ], !dbg !8964
  %idxprom521 = zext i32 %cond520 to i64, !dbg !8964
  %arrayidx522 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom521, !dbg !8964
  %59 = load i8, i8* %arrayidx522, align 1, !dbg !8964
  %cmp524 = icmp eq i8 %59, 9, !dbg !8964
  br i1 %cmp524, label %land.lhs.true582, label %lor.lhs.false526, !dbg !8964

lor.lhs.false526:                                 ; preds = %cond.end519
  %60 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load530 = load i64, i64* %60, align 8, !dbg !8964
  %bf.cast53239 = and i64 %bf.load530, 65535, !dbg !8964
  %cmp533 = icmp eq i64 %bf.cast53239, 14, !dbg !8964
  br i1 %cmp533, label %cond.true535, label %cond.false539, !dbg !8964

cond.true535:                                     ; preds = %lor.lhs.false526
  %.cast40 = bitcast i64* %60 to %union.tree_node*, !dbg !8964
  %call538 = tail call i32 @vector_type_mode(%union.tree_node* %.cast40) #7, !dbg !8964
  br label %cond.end547, !dbg !8964

cond.false539:                                    ; preds = %lor.lhs.false526
  %type542 = bitcast i64* %60 to %struct.tree_type*, !dbg !8964
  %mode543 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type542, i64 0, i32 6, !dbg !8964
  %bf.load544 = load i32, i32* %mode543, align 4, !dbg !8964
  %bf.lshr545 = lshr i32 %bf.load544, 16, !dbg !8964
  %bf.clear546 = and i32 %bf.lshr545, 255, !dbg !8964
  br label %cond.end547, !dbg !8964

cond.end547:                                      ; preds = %cond.false539, %cond.true535
  %cond548 = phi i32 [ %call538, %cond.true535 ], [ %bf.clear546, %cond.false539 ], !dbg !8964
  %idxprom549 = zext i32 %cond548 to i64, !dbg !8964
  %arrayidx550 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom549, !dbg !8964
  %61 = load i8, i8* %arrayidx550, align 1, !dbg !8964
  %cmp552 = icmp eq i8 %61, 11, !dbg !8964
  br i1 %cmp552, label %land.lhs.true582, label %lor.lhs.false554, !dbg !8964

lor.lhs.false554:                                 ; preds = %cond.end547
  %62 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load558 = load i64, i64* %62, align 8, !dbg !8964
  %bf.cast56041 = and i64 %bf.load558, 65535, !dbg !8964
  %cmp561 = icmp eq i64 %bf.cast56041, 14, !dbg !8964
  br i1 %cmp561, label %cond.true563, label %cond.false567, !dbg !8964

cond.true563:                                     ; preds = %lor.lhs.false554
  %.cast42 = bitcast i64* %62 to %union.tree_node*, !dbg !8964
  %call566 = tail call i32 @vector_type_mode(%union.tree_node* %.cast42) #7, !dbg !8964
  br label %cond.end575, !dbg !8964

cond.false567:                                    ; preds = %lor.lhs.false554
  %type570 = bitcast i64* %62 to %struct.tree_type*, !dbg !8964
  %mode571 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type570, i64 0, i32 6, !dbg !8964
  %bf.load572 = load i32, i32* %mode571, align 4, !dbg !8964
  %bf.lshr573 = lshr i32 %bf.load572, 16, !dbg !8964
  %bf.clear574 = and i32 %bf.lshr573, 255, !dbg !8964
  br label %cond.end575, !dbg !8964

cond.end575:                                      ; preds = %cond.false567, %cond.true563
  %cond576 = phi i32 [ %call566, %cond.true563 ], [ %bf.clear574, %cond.false567 ], !dbg !8964
  %idxprom577 = zext i32 %cond576 to i64, !dbg !8964
  %arrayidx578 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom577, !dbg !8964
  %63 = load i8, i8* %arrayidx578, align 1, !dbg !8964
  %cmp580 = icmp eq i8 %63, 17, !dbg !8964
  br i1 %cmp580, label %land.lhs.true582, label %land.lhs.true919, !dbg !8964

land.lhs.true582:                                 ; preds = %cond.end575, %cond.end547, %cond.end519, %cond.end491
  %64 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load586 = load i64, i64* %64, align 8, !dbg !8964
  %bf.cast58874 = and i64 %bf.load586, 65535, !dbg !8964
  %cmp589 = icmp eq i64 %bf.cast58874, 14, !dbg !8964
  br i1 %cmp589, label %cond.true591, label %cond.false595, !dbg !8964

cond.true591:                                     ; preds = %land.lhs.true582
  %.cast75 = bitcast i64* %64 to %union.tree_node*, !dbg !8964
  %call594 = tail call i32 @vector_type_mode(%union.tree_node* %.cast75) #7, !dbg !8964
  br label %cond.end603, !dbg !8964

cond.false595:                                    ; preds = %land.lhs.true582
  %type598 = bitcast i64* %64 to %struct.tree_type*, !dbg !8964
  %mode599 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type598, i64 0, i32 6, !dbg !8964
  %bf.load600 = load i32, i32* %mode599, align 4, !dbg !8964
  %bf.lshr601 = lshr i32 %bf.load600, 16, !dbg !8964
  %bf.clear602 = and i32 %bf.lshr601, 255, !dbg !8964
  br label %cond.end603, !dbg !8964

cond.end603:                                      ; preds = %cond.false595, %cond.true591
  %cond604 = phi i32 [ %call594, %cond.true591 ], [ %bf.clear602, %cond.false595 ], !dbg !8964
  %idxprom605 = zext i32 %cond604 to i64, !dbg !8964
  %arrayidx606 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom605, !dbg !8964
  %65 = load i8, i8* %arrayidx606, align 1, !dbg !8964
  %cmp608 = icmp eq i8 %65, 8, !dbg !8964
  br i1 %cmp608, label %cond.true638, label %lor.lhs.false610, !dbg !8964

lor.lhs.false610:                                 ; preds = %cond.end603
  %66 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load614 = load i64, i64* %66, align 8, !dbg !8964
  %bf.cast61676 = and i64 %bf.load614, 65535, !dbg !8964
  %cmp617 = icmp eq i64 %bf.cast61676, 14, !dbg !8964
  br i1 %cmp617, label %cond.true619, label %cond.false623, !dbg !8964

cond.true619:                                     ; preds = %lor.lhs.false610
  %.cast77 = bitcast i64* %66 to %union.tree_node*, !dbg !8964
  %call622 = tail call i32 @vector_type_mode(%union.tree_node* %.cast77) #7, !dbg !8964
  br label %cond.end631, !dbg !8964

cond.false623:                                    ; preds = %lor.lhs.false610
  %type626 = bitcast i64* %66 to %struct.tree_type*, !dbg !8964
  %mode627 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type626, i64 0, i32 6, !dbg !8964
  %bf.load628 = load i32, i32* %mode627, align 4, !dbg !8964
  %bf.lshr629 = lshr i32 %bf.load628, 16, !dbg !8964
  %bf.clear630 = and i32 %bf.lshr629, 255, !dbg !8964
  br label %cond.end631, !dbg !8964

cond.end631:                                      ; preds = %cond.false623, %cond.true619
  %cond632 = phi i32 [ %call622, %cond.true619 ], [ %bf.clear630, %cond.false623 ], !dbg !8964
  %idxprom633 = zext i32 %cond632 to i64, !dbg !8964
  %arrayidx634 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom633, !dbg !8964
  %67 = load i8, i8* %arrayidx634, align 1, !dbg !8964
  %cmp636 = icmp eq i8 %67, 9, !dbg !8964
  br i1 %cmp636, label %cond.true638, label %cond.false661, !dbg !8964

cond.true638:                                     ; preds = %cond.end631, %cond.end603
  %68 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load642 = load i64, i64* %68, align 8, !dbg !8964
  %bf.cast64494 = and i64 %bf.load642, 65535, !dbg !8964
  %cmp645 = icmp eq i64 %bf.cast64494, 14, !dbg !8964
  br i1 %cmp645, label %cond.true647, label %cond.false651, !dbg !8964

cond.true647:                                     ; preds = %cond.true638
  %.cast95 = bitcast i64* %68 to %union.tree_node*, !dbg !8964
  %call650 = tail call i32 @vector_type_mode(%union.tree_node* %.cast95) #7, !dbg !8964
  br label %cond.end687, !dbg !8964

cond.false651:                                    ; preds = %cond.true638
  %type654 = bitcast i64* %68 to %struct.tree_type*, !dbg !8964
  %mode655 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type654, i64 0, i32 6, !dbg !8964
  %bf.load656 = load i32, i32* %mode655, align 4, !dbg !8964
  %bf.lshr657 = lshr i32 %bf.load656, 16, !dbg !8964
  %bf.clear658 = and i32 %bf.lshr657, 255, !dbg !8964
  br label %cond.end687, !dbg !8964

cond.false661:                                    ; preds = %cond.end631
  %69 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load665 = load i64, i64* %69, align 8, !dbg !8964
  %bf.cast66778 = and i64 %bf.load665, 65535, !dbg !8964
  %cmp668 = icmp eq i64 %bf.cast66778, 14, !dbg !8964
  br i1 %cmp668, label %cond.true670, label %cond.false674, !dbg !8964

cond.true670:                                     ; preds = %cond.false661
  %.cast79 = bitcast i64* %69 to %union.tree_node*, !dbg !8964
  %call673 = tail call i32 @vector_type_mode(%union.tree_node* %.cast79) #7, !dbg !8964
  br label %cond.end682, !dbg !8964

cond.false674:                                    ; preds = %cond.false661
  %type677 = bitcast i64* %69 to %struct.tree_type*, !dbg !8964
  %mode678 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type677, i64 0, i32 6, !dbg !8964
  %bf.load679 = load i32, i32* %mode678, align 4, !dbg !8964
  %bf.lshr680 = lshr i32 %bf.load679, 16, !dbg !8964
  %bf.clear681 = and i32 %bf.lshr680, 255, !dbg !8964
  br label %cond.end682, !dbg !8964

cond.end682:                                      ; preds = %cond.false674, %cond.true670
  %cond683 = phi i32 [ %call673, %cond.true670 ], [ %bf.clear681, %cond.false674 ], !dbg !8964
  %idxprom684 = zext i32 %cond683 to i64, !dbg !8964
  %arrayidx685 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom684, !dbg !8964
  %70 = load i8, i8* %arrayidx685, align 1, !dbg !8964
  %conv686 = zext i8 %70 to i32, !dbg !8964
  br label %cond.end687, !dbg !8964

cond.end687:                                      ; preds = %cond.true647, %cond.false651, %cond.end682
  %cond688 = phi i32 [ %conv686, %cond.end682 ], [ %call650, %cond.true647 ], [ %bf.clear658, %cond.false651 ], !dbg !8964
  %idxprom689 = zext i32 %cond688 to i64, !dbg !8964
  %arrayidx690 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom689, !dbg !8964
  %71 = load i8, i8* %arrayidx690, align 1, !dbg !8964
  %cmp692 = icmp eq i8 %71, 9, !dbg !8964
  %72 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load698 = load i64, i64* %72, align 8, !dbg !8964
  %bf.cast70080 = and i64 %bf.load698, 65535, !dbg !8964
  %cmp701 = icmp eq i64 %bf.cast70080, 14, !dbg !8964
  %.cast81 = bitcast i64* %72 to %union.tree_node*, !dbg !8964
  br i1 %cmp692, label %cond.true694, label %cond.false803, !dbg !8964

cond.true694:                                     ; preds = %cond.end687
  br i1 %cmp701, label %cond.true703, label %cond.false707, !dbg !8964

cond.true703:                                     ; preds = %cond.true694
  %call706 = tail call i32 @vector_type_mode(%union.tree_node* %.cast81) #7, !dbg !8964
  br label %cond.end715, !dbg !8964

cond.false707:                                    ; preds = %cond.true694
  %type710 = bitcast i64* %72 to %struct.tree_type*, !dbg !8964
  %mode711 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type710, i64 0, i32 6, !dbg !8964
  %bf.load712 = load i32, i32* %mode711, align 4, !dbg !8964
  %bf.lshr713 = lshr i32 %bf.load712, 16, !dbg !8964
  %bf.clear714 = and i32 %bf.lshr713, 255, !dbg !8964
  br label %cond.end715, !dbg !8964

cond.end715:                                      ; preds = %cond.false707, %cond.true703
  %cond716 = phi i32 [ %call706, %cond.true703 ], [ %bf.clear714, %cond.false707 ], !dbg !8964
  %idxprom717 = zext i32 %cond716 to i64, !dbg !8964
  %arrayidx718 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom717, !dbg !8964
  %73 = load i8, i8* %arrayidx718, align 1, !dbg !8964
  %cmp720 = icmp eq i8 %73, 8, !dbg !8964
  br i1 %cmp720, label %cond.true750, label %lor.lhs.false722, !dbg !8964

lor.lhs.false722:                                 ; preds = %cond.end715
  %74 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load726 = load i64, i64* %74, align 8, !dbg !8964
  %bf.cast72888 = and i64 %bf.load726, 65535, !dbg !8964
  %cmp729 = icmp eq i64 %bf.cast72888, 14, !dbg !8964
  br i1 %cmp729, label %cond.true731, label %cond.false735, !dbg !8964

cond.true731:                                     ; preds = %lor.lhs.false722
  %.cast89 = bitcast i64* %74 to %union.tree_node*, !dbg !8964
  %call734 = tail call i32 @vector_type_mode(%union.tree_node* %.cast89) #7, !dbg !8964
  br label %cond.end743, !dbg !8964

cond.false735:                                    ; preds = %lor.lhs.false722
  %type738 = bitcast i64* %74 to %struct.tree_type*, !dbg !8964
  %mode739 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type738, i64 0, i32 6, !dbg !8964
  %bf.load740 = load i32, i32* %mode739, align 4, !dbg !8964
  %bf.lshr741 = lshr i32 %bf.load740, 16, !dbg !8964
  %bf.clear742 = and i32 %bf.lshr741, 255, !dbg !8964
  br label %cond.end743, !dbg !8964

cond.end743:                                      ; preds = %cond.false735, %cond.true731
  %cond744 = phi i32 [ %call734, %cond.true731 ], [ %bf.clear742, %cond.false735 ], !dbg !8964
  %idxprom745 = zext i32 %cond744 to i64, !dbg !8964
  %arrayidx746 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom745, !dbg !8964
  %75 = load i8, i8* %arrayidx746, align 1, !dbg !8964
  %cmp748 = icmp eq i8 %75, 9, !dbg !8964
  br i1 %cmp748, label %cond.true750, label %cond.false773, !dbg !8964

cond.true750:                                     ; preds = %cond.end743, %cond.end715
  %76 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load754 = load i64, i64* %76, align 8, !dbg !8964
  %bf.cast75692 = and i64 %bf.load754, 65535, !dbg !8964
  %cmp757 = icmp eq i64 %bf.cast75692, 14, !dbg !8964
  br i1 %cmp757, label %cond.true759, label %cond.false763, !dbg !8964

cond.true759:                                     ; preds = %cond.true750
  %.cast93 = bitcast i64* %76 to %union.tree_node*, !dbg !8964
  %call762 = tail call i32 @vector_type_mode(%union.tree_node* %.cast93) #7, !dbg !8964
  br label %cond.end799, !dbg !8964

cond.false763:                                    ; preds = %cond.true750
  %type766 = bitcast i64* %76 to %struct.tree_type*, !dbg !8964
  %mode767 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type766, i64 0, i32 6, !dbg !8964
  %bf.load768 = load i32, i32* %mode767, align 4, !dbg !8964
  %bf.lshr769 = lshr i32 %bf.load768, 16, !dbg !8964
  %bf.clear770 = and i32 %bf.lshr769, 255, !dbg !8964
  br label %cond.end799, !dbg !8964

cond.false773:                                    ; preds = %cond.end743
  %77 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load777 = load i64, i64* %77, align 8, !dbg !8964
  %bf.cast77990 = and i64 %bf.load777, 65535, !dbg !8964
  %cmp780 = icmp eq i64 %bf.cast77990, 14, !dbg !8964
  br i1 %cmp780, label %cond.true782, label %cond.false786, !dbg !8964

cond.true782:                                     ; preds = %cond.false773
  %.cast91 = bitcast i64* %77 to %union.tree_node*, !dbg !8964
  %call785 = tail call i32 @vector_type_mode(%union.tree_node* %.cast91) #7, !dbg !8964
  br label %cond.end794, !dbg !8964

cond.false786:                                    ; preds = %cond.false773
  %type789 = bitcast i64* %77 to %struct.tree_type*, !dbg !8964
  %mode790 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type789, i64 0, i32 6, !dbg !8964
  %bf.load791 = load i32, i32* %mode790, align 4, !dbg !8964
  %bf.lshr792 = lshr i32 %bf.load791, 16, !dbg !8964
  %bf.clear793 = and i32 %bf.lshr792, 255, !dbg !8964
  br label %cond.end794, !dbg !8964

cond.end794:                                      ; preds = %cond.false786, %cond.true782
  %cond795 = phi i32 [ %call785, %cond.true782 ], [ %bf.clear793, %cond.false786 ], !dbg !8964
  %idxprom796 = zext i32 %cond795 to i64, !dbg !8964
  %arrayidx797 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom796, !dbg !8964
  %78 = load i8, i8* %arrayidx797, align 1, !dbg !8964
  %conv798 = zext i8 %78 to i32, !dbg !8964
  br label %cond.end799, !dbg !8964

cond.end799:                                      ; preds = %cond.true759, %cond.false763, %cond.end794
  %cond800 = phi i32 [ %conv798, %cond.end794 ], [ %call762, %cond.true759 ], [ %bf.clear770, %cond.false763 ], !dbg !8964
  br label %cond.end911, !dbg !8964

cond.false803:                                    ; preds = %cond.end687
  br i1 %cmp701, label %cond.true812, label %cond.false816, !dbg !8964

cond.true812:                                     ; preds = %cond.false803
  %call815 = tail call i32 @vector_type_mode(%union.tree_node* %.cast81) #7, !dbg !8964
  br label %cond.end824, !dbg !8964

cond.false816:                                    ; preds = %cond.false803
  %type819 = bitcast i64* %72 to %struct.tree_type*, !dbg !8964
  %mode820 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type819, i64 0, i32 6, !dbg !8964
  %bf.load821 = load i32, i32* %mode820, align 4, !dbg !8964
  %bf.lshr822 = lshr i32 %bf.load821, 16, !dbg !8964
  %bf.clear823 = and i32 %bf.lshr822, 255, !dbg !8964
  br label %cond.end824, !dbg !8964

cond.end824:                                      ; preds = %cond.false816, %cond.true812
  %cond825 = phi i32 [ %call815, %cond.true812 ], [ %bf.clear823, %cond.false816 ], !dbg !8964
  %idxprom826 = zext i32 %cond825 to i64, !dbg !8964
  %arrayidx827 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom826, !dbg !8964
  %79 = load i8, i8* %arrayidx827, align 1, !dbg !8964
  %cmp829 = icmp eq i8 %79, 8, !dbg !8964
  br i1 %cmp829, label %cond.true859, label %lor.lhs.false831, !dbg !8964

lor.lhs.false831:                                 ; preds = %cond.end824
  %80 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load835 = load i64, i64* %80, align 8, !dbg !8964
  %bf.cast83782 = and i64 %bf.load835, 65535, !dbg !8964
  %cmp838 = icmp eq i64 %bf.cast83782, 14, !dbg !8964
  br i1 %cmp838, label %cond.true840, label %cond.false844, !dbg !8964

cond.true840:                                     ; preds = %lor.lhs.false831
  %.cast83 = bitcast i64* %80 to %union.tree_node*, !dbg !8964
  %call843 = tail call i32 @vector_type_mode(%union.tree_node* %.cast83) #7, !dbg !8964
  br label %cond.end852, !dbg !8964

cond.false844:                                    ; preds = %lor.lhs.false831
  %type847 = bitcast i64* %80 to %struct.tree_type*, !dbg !8964
  %mode848 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type847, i64 0, i32 6, !dbg !8964
  %bf.load849 = load i32, i32* %mode848, align 4, !dbg !8964
  %bf.lshr850 = lshr i32 %bf.load849, 16, !dbg !8964
  %bf.clear851 = and i32 %bf.lshr850, 255, !dbg !8964
  br label %cond.end852, !dbg !8964

cond.end852:                                      ; preds = %cond.false844, %cond.true840
  %cond853 = phi i32 [ %call843, %cond.true840 ], [ %bf.clear851, %cond.false844 ], !dbg !8964
  %idxprom854 = zext i32 %cond853 to i64, !dbg !8964
  %arrayidx855 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom854, !dbg !8964
  %81 = load i8, i8* %arrayidx855, align 1, !dbg !8964
  %cmp857 = icmp eq i8 %81, 9, !dbg !8964
  br i1 %cmp857, label %cond.true859, label %cond.false882, !dbg !8964

cond.true859:                                     ; preds = %cond.end852, %cond.end824
  %82 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load863 = load i64, i64* %82, align 8, !dbg !8964
  %bf.cast86586 = and i64 %bf.load863, 65535, !dbg !8964
  %cmp866 = icmp eq i64 %bf.cast86586, 14, !dbg !8964
  br i1 %cmp866, label %cond.true868, label %cond.false872, !dbg !8964

cond.true868:                                     ; preds = %cond.true859
  %.cast87 = bitcast i64* %82 to %union.tree_node*, !dbg !8964
  %call871 = tail call i32 @vector_type_mode(%union.tree_node* %.cast87) #7, !dbg !8964
  br label %cond.end908, !dbg !8964

cond.false872:                                    ; preds = %cond.true859
  %type875 = bitcast i64* %82 to %struct.tree_type*, !dbg !8964
  %mode876 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type875, i64 0, i32 6, !dbg !8964
  %bf.load877 = load i32, i32* %mode876, align 4, !dbg !8964
  %bf.lshr878 = lshr i32 %bf.load877, 16, !dbg !8964
  %bf.clear879 = and i32 %bf.lshr878, 255, !dbg !8964
  br label %cond.end908, !dbg !8964

cond.false882:                                    ; preds = %cond.end852
  %83 = load i64*, i64** %55, align 8, !dbg !8964
  %bf.load886 = load i64, i64* %83, align 8, !dbg !8964
  %bf.cast88884 = and i64 %bf.load886, 65535, !dbg !8964
  %cmp889 = icmp eq i64 %bf.cast88884, 14, !dbg !8964
  br i1 %cmp889, label %cond.true891, label %cond.false895, !dbg !8964

cond.true891:                                     ; preds = %cond.false882
  %.cast85 = bitcast i64* %83 to %union.tree_node*, !dbg !8964
  %call894 = tail call i32 @vector_type_mode(%union.tree_node* %.cast85) #7, !dbg !8964
  br label %cond.end903, !dbg !8964

cond.false895:                                    ; preds = %cond.false882
  %type898 = bitcast i64* %83 to %struct.tree_type*, !dbg !8964
  %mode899 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type898, i64 0, i32 6, !dbg !8964
  %bf.load900 = load i32, i32* %mode899, align 4, !dbg !8964
  %bf.lshr901 = lshr i32 %bf.load900, 16, !dbg !8964
  %bf.clear902 = and i32 %bf.lshr901, 255, !dbg !8964
  br label %cond.end903, !dbg !8964

cond.end903:                                      ; preds = %cond.false895, %cond.true891
  %cond904 = phi i32 [ %call894, %cond.true891 ], [ %bf.clear902, %cond.false895 ], !dbg !8964
  %idxprom905 = zext i32 %cond904 to i64, !dbg !8964
  %arrayidx906 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom905, !dbg !8964
  %84 = load i8, i8* %arrayidx906, align 1, !dbg !8964
  %conv907 = zext i8 %84 to i32, !dbg !8964
  br label %cond.end908, !dbg !8964

cond.end908:                                      ; preds = %cond.true868, %cond.false872, %cond.end903
  %cond909 = phi i32 [ %conv907, %cond.end903 ], [ %call871, %cond.true868 ], [ %bf.clear879, %cond.false872 ], !dbg !8964
  br label %cond.end911, !dbg !8964

cond.end911:                                      ; preds = %cond.end908, %cond.end799
  %cond912.in = phi i32 [ %cond800, %cond.end799 ], [ %cond909, %cond.end908 ]
  %cond912 = add i32 %cond912.in, -38, !dbg !8964
  %idxprom913 = zext i32 %cond912 to i64, !dbg !8964
  %arrayidx914 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom913, !dbg !8964
  %85 = load %struct.real_format*, %struct.real_format** %arrayidx914, align 8, !dbg !8964
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %85, i64 0, i32 11, !dbg !8964
  %86 = load i8, i8* %has_nans, align 2, !dbg !8964
  %tobool916 = icmp eq i8 %86, 0, !dbg !8964
  %87 = load i32, i32* @flag_finite_math_only, align 4, !dbg !8964
  %tobool918 = icmp ne i32 %87, 0, !dbg !8964
  %or.cond2 = or i1 %tobool916, %tobool918, !dbg !8964
  br i1 %or.cond2, label %land.lhs.true919, label %if.end1371, !dbg !8964

land.lhs.true919:                                 ; preds = %cond.end911, %cond.end575
  %88 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load923 = load i64, i64* %88, align 8, !dbg !8966
  %bf.cast92543 = and i64 %bf.load923, 65535, !dbg !8966
  %cmp926 = icmp eq i64 %bf.cast92543, 14, !dbg !8966
  br i1 %cmp926, label %cond.true928, label %cond.false932, !dbg !8966

cond.true928:                                     ; preds = %land.lhs.true919
  %.cast44 = bitcast i64* %88 to %union.tree_node*, !dbg !8966
  %call931 = tail call i32 @vector_type_mode(%union.tree_node* %.cast44) #7, !dbg !8966
  br label %cond.end940, !dbg !8966

cond.false932:                                    ; preds = %land.lhs.true919
  %type935 = bitcast i64* %88 to %struct.tree_type*, !dbg !8966
  %mode936 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type935, i64 0, i32 6, !dbg !8966
  %bf.load937 = load i32, i32* %mode936, align 4, !dbg !8966
  %bf.lshr938 = lshr i32 %bf.load937, 16, !dbg !8966
  %bf.clear939 = and i32 %bf.lshr938, 255, !dbg !8966
  br label %cond.end940, !dbg !8966

cond.end940:                                      ; preds = %cond.false932, %cond.true928
  %cond941 = phi i32 [ %call931, %cond.true928 ], [ %bf.clear939, %cond.false932 ], !dbg !8966
  %idxprom942 = zext i32 %cond941 to i64, !dbg !8966
  %arrayidx943 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom942, !dbg !8966
  %89 = load i8, i8* %arrayidx943, align 1, !dbg !8966
  %cmp945 = icmp eq i8 %89, 8, !dbg !8966
  br i1 %cmp945, label %land.lhs.true1031, label %lor.lhs.false947, !dbg !8966

lor.lhs.false947:                                 ; preds = %cond.end940
  %90 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load951 = load i64, i64* %90, align 8, !dbg !8966
  %bf.cast95345 = and i64 %bf.load951, 65535, !dbg !8966
  %cmp954 = icmp eq i64 %bf.cast95345, 14, !dbg !8966
  br i1 %cmp954, label %cond.true956, label %cond.false960, !dbg !8966

cond.true956:                                     ; preds = %lor.lhs.false947
  %.cast46 = bitcast i64* %90 to %union.tree_node*, !dbg !8966
  %call959 = tail call i32 @vector_type_mode(%union.tree_node* %.cast46) #7, !dbg !8966
  br label %cond.end968, !dbg !8966

cond.false960:                                    ; preds = %lor.lhs.false947
  %type963 = bitcast i64* %90 to %struct.tree_type*, !dbg !8966
  %mode964 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type963, i64 0, i32 6, !dbg !8966
  %bf.load965 = load i32, i32* %mode964, align 4, !dbg !8966
  %bf.lshr966 = lshr i32 %bf.load965, 16, !dbg !8966
  %bf.clear967 = and i32 %bf.lshr966, 255, !dbg !8966
  br label %cond.end968, !dbg !8966

cond.end968:                                      ; preds = %cond.false960, %cond.true956
  %cond969 = phi i32 [ %call959, %cond.true956 ], [ %bf.clear967, %cond.false960 ], !dbg !8966
  %idxprom970 = zext i32 %cond969 to i64, !dbg !8966
  %arrayidx971 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom970, !dbg !8966
  %91 = load i8, i8* %arrayidx971, align 1, !dbg !8966
  %cmp973 = icmp eq i8 %91, 9, !dbg !8966
  br i1 %cmp973, label %land.lhs.true1031, label %lor.lhs.false975, !dbg !8966

lor.lhs.false975:                                 ; preds = %cond.end968
  %92 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load979 = load i64, i64* %92, align 8, !dbg !8966
  %bf.cast98147 = and i64 %bf.load979, 65535, !dbg !8966
  %cmp982 = icmp eq i64 %bf.cast98147, 14, !dbg !8966
  br i1 %cmp982, label %cond.true984, label %cond.false988, !dbg !8966

cond.true984:                                     ; preds = %lor.lhs.false975
  %.cast48 = bitcast i64* %92 to %union.tree_node*, !dbg !8966
  %call987 = tail call i32 @vector_type_mode(%union.tree_node* %.cast48) #7, !dbg !8966
  br label %cond.end996, !dbg !8966

cond.false988:                                    ; preds = %lor.lhs.false975
  %type991 = bitcast i64* %92 to %struct.tree_type*, !dbg !8966
  %mode992 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type991, i64 0, i32 6, !dbg !8966
  %bf.load993 = load i32, i32* %mode992, align 4, !dbg !8966
  %bf.lshr994 = lshr i32 %bf.load993, 16, !dbg !8966
  %bf.clear995 = and i32 %bf.lshr994, 255, !dbg !8966
  br label %cond.end996, !dbg !8966

cond.end996:                                      ; preds = %cond.false988, %cond.true984
  %cond997 = phi i32 [ %call987, %cond.true984 ], [ %bf.clear995, %cond.false988 ], !dbg !8966
  %idxprom998 = zext i32 %cond997 to i64, !dbg !8966
  %arrayidx999 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom998, !dbg !8966
  %93 = load i8, i8* %arrayidx999, align 1, !dbg !8966
  %cmp1001 = icmp eq i8 %93, 11, !dbg !8966
  br i1 %cmp1001, label %land.lhs.true1031, label %lor.lhs.false1003, !dbg !8966

lor.lhs.false1003:                                ; preds = %cond.end996
  %94 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1007 = load i64, i64* %94, align 8, !dbg !8966
  %bf.cast100949 = and i64 %bf.load1007, 65535, !dbg !8966
  %cmp1010 = icmp eq i64 %bf.cast100949, 14, !dbg !8966
  br i1 %cmp1010, label %cond.true1012, label %cond.false1016, !dbg !8966

cond.true1012:                                    ; preds = %lor.lhs.false1003
  %.cast50 = bitcast i64* %94 to %union.tree_node*, !dbg !8966
  %call1015 = tail call i32 @vector_type_mode(%union.tree_node* %.cast50) #7, !dbg !8966
  br label %cond.end1024, !dbg !8966

cond.false1016:                                   ; preds = %lor.lhs.false1003
  %type1019 = bitcast i64* %94 to %struct.tree_type*, !dbg !8966
  %mode1020 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1019, i64 0, i32 6, !dbg !8966
  %bf.load1021 = load i32, i32* %mode1020, align 4, !dbg !8966
  %bf.lshr1022 = lshr i32 %bf.load1021, 16, !dbg !8966
  %bf.clear1023 = and i32 %bf.lshr1022, 255, !dbg !8966
  br label %cond.end1024, !dbg !8966

cond.end1024:                                     ; preds = %cond.false1016, %cond.true1012
  %cond1025 = phi i32 [ %call1015, %cond.true1012 ], [ %bf.clear1023, %cond.false1016 ], !dbg !8966
  %idxprom1026 = zext i32 %cond1025 to i64, !dbg !8966
  %arrayidx1027 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1026, !dbg !8966
  %95 = load i8, i8* %arrayidx1027, align 1, !dbg !8966
  %cmp1029 = icmp eq i8 %95, 17, !dbg !8966
  br i1 %cmp1029, label %land.lhs.true1031, label %if.then1369, !dbg !8966

land.lhs.true1031:                                ; preds = %cond.end1024, %cond.end996, %cond.end968, %cond.end940
  %96 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1035 = load i64, i64* %96, align 8, !dbg !8966
  %bf.cast103751 = and i64 %bf.load1035, 65535, !dbg !8966
  %cmp1038 = icmp eq i64 %bf.cast103751, 14, !dbg !8966
  br i1 %cmp1038, label %cond.true1040, label %cond.false1044, !dbg !8966

cond.true1040:                                    ; preds = %land.lhs.true1031
  %.cast52 = bitcast i64* %96 to %union.tree_node*, !dbg !8966
  %call1043 = tail call i32 @vector_type_mode(%union.tree_node* %.cast52) #7, !dbg !8966
  br label %cond.end1052, !dbg !8966

cond.false1044:                                   ; preds = %land.lhs.true1031
  %type1047 = bitcast i64* %96 to %struct.tree_type*, !dbg !8966
  %mode1048 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1047, i64 0, i32 6, !dbg !8966
  %bf.load1049 = load i32, i32* %mode1048, align 4, !dbg !8966
  %bf.lshr1050 = lshr i32 %bf.load1049, 16, !dbg !8966
  %bf.clear1051 = and i32 %bf.lshr1050, 255, !dbg !8966
  br label %cond.end1052, !dbg !8966

cond.end1052:                                     ; preds = %cond.false1044, %cond.true1040
  %cond1053 = phi i32 [ %call1043, %cond.true1040 ], [ %bf.clear1051, %cond.false1044 ], !dbg !8966
  %idxprom1054 = zext i32 %cond1053 to i64, !dbg !8966
  %arrayidx1055 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1054, !dbg !8966
  %97 = load i8, i8* %arrayidx1055, align 1, !dbg !8966
  %cmp1057 = icmp eq i8 %97, 8, !dbg !8966
  br i1 %cmp1057, label %cond.true1087, label %lor.lhs.false1059, !dbg !8966

lor.lhs.false1059:                                ; preds = %cond.end1052
  %98 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1063 = load i64, i64* %98, align 8, !dbg !8966
  %bf.cast106553 = and i64 %bf.load1063, 65535, !dbg !8966
  %cmp1066 = icmp eq i64 %bf.cast106553, 14, !dbg !8966
  br i1 %cmp1066, label %cond.true1068, label %cond.false1072, !dbg !8966

cond.true1068:                                    ; preds = %lor.lhs.false1059
  %.cast54 = bitcast i64* %98 to %union.tree_node*, !dbg !8966
  %call1071 = tail call i32 @vector_type_mode(%union.tree_node* %.cast54) #7, !dbg !8966
  br label %cond.end1080, !dbg !8966

cond.false1072:                                   ; preds = %lor.lhs.false1059
  %type1075 = bitcast i64* %98 to %struct.tree_type*, !dbg !8966
  %mode1076 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1075, i64 0, i32 6, !dbg !8966
  %bf.load1077 = load i32, i32* %mode1076, align 4, !dbg !8966
  %bf.lshr1078 = lshr i32 %bf.load1077, 16, !dbg !8966
  %bf.clear1079 = and i32 %bf.lshr1078, 255, !dbg !8966
  br label %cond.end1080, !dbg !8966

cond.end1080:                                     ; preds = %cond.false1072, %cond.true1068
  %cond1081 = phi i32 [ %call1071, %cond.true1068 ], [ %bf.clear1079, %cond.false1072 ], !dbg !8966
  %idxprom1082 = zext i32 %cond1081 to i64, !dbg !8966
  %arrayidx1083 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1082, !dbg !8966
  %99 = load i8, i8* %arrayidx1083, align 1, !dbg !8966
  %cmp1085 = icmp eq i8 %99, 9, !dbg !8966
  br i1 %cmp1085, label %cond.true1087, label %cond.false1110, !dbg !8966

cond.true1087:                                    ; preds = %cond.end1080, %cond.end1052
  %100 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1091 = load i64, i64* %100, align 8, !dbg !8966
  %bf.cast109372 = and i64 %bf.load1091, 65535, !dbg !8966
  %cmp1094 = icmp eq i64 %bf.cast109372, 14, !dbg !8966
  br i1 %cmp1094, label %cond.true1096, label %cond.false1100, !dbg !8966

cond.true1096:                                    ; preds = %cond.true1087
  %.cast73 = bitcast i64* %100 to %union.tree_node*, !dbg !8966
  %call1099 = tail call i32 @vector_type_mode(%union.tree_node* %.cast73) #7, !dbg !8966
  br label %cond.end1136, !dbg !8966

cond.false1100:                                   ; preds = %cond.true1087
  %type1103 = bitcast i64* %100 to %struct.tree_type*, !dbg !8966
  %mode1104 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1103, i64 0, i32 6, !dbg !8966
  %bf.load1105 = load i32, i32* %mode1104, align 4, !dbg !8966
  %bf.lshr1106 = lshr i32 %bf.load1105, 16, !dbg !8966
  %bf.clear1107 = and i32 %bf.lshr1106, 255, !dbg !8966
  br label %cond.end1136, !dbg !8966

cond.false1110:                                   ; preds = %cond.end1080
  %101 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1114 = load i64, i64* %101, align 8, !dbg !8966
  %bf.cast111655 = and i64 %bf.load1114, 65535, !dbg !8966
  %cmp1117 = icmp eq i64 %bf.cast111655, 14, !dbg !8966
  br i1 %cmp1117, label %cond.true1119, label %cond.false1123, !dbg !8966

cond.true1119:                                    ; preds = %cond.false1110
  %.cast56 = bitcast i64* %101 to %union.tree_node*, !dbg !8966
  %call1122 = tail call i32 @vector_type_mode(%union.tree_node* %.cast56) #7, !dbg !8966
  br label %cond.end1131, !dbg !8966

cond.false1123:                                   ; preds = %cond.false1110
  %type1126 = bitcast i64* %101 to %struct.tree_type*, !dbg !8966
  %mode1127 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1126, i64 0, i32 6, !dbg !8966
  %bf.load1128 = load i32, i32* %mode1127, align 4, !dbg !8966
  %bf.lshr1129 = lshr i32 %bf.load1128, 16, !dbg !8966
  %bf.clear1130 = and i32 %bf.lshr1129, 255, !dbg !8966
  br label %cond.end1131, !dbg !8966

cond.end1131:                                     ; preds = %cond.false1123, %cond.true1119
  %cond1132 = phi i32 [ %call1122, %cond.true1119 ], [ %bf.clear1130, %cond.false1123 ], !dbg !8966
  %idxprom1133 = zext i32 %cond1132 to i64, !dbg !8966
  %arrayidx1134 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1133, !dbg !8966
  %102 = load i8, i8* %arrayidx1134, align 1, !dbg !8966
  %conv1135 = zext i8 %102 to i32, !dbg !8966
  br label %cond.end1136, !dbg !8966

cond.end1136:                                     ; preds = %cond.true1096, %cond.false1100, %cond.end1131
  %cond1137 = phi i32 [ %conv1135, %cond.end1131 ], [ %call1099, %cond.true1096 ], [ %bf.clear1107, %cond.false1100 ], !dbg !8966
  %idxprom1138 = zext i32 %cond1137 to i64, !dbg !8966
  %arrayidx1139 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1138, !dbg !8966
  %103 = load i8, i8* %arrayidx1139, align 1, !dbg !8966
  %cmp1141 = icmp eq i8 %103, 9, !dbg !8966
  %104 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1147 = load i64, i64* %104, align 8, !dbg !8966
  %bf.cast114957 = and i64 %bf.load1147, 65535, !dbg !8966
  %cmp1150 = icmp eq i64 %bf.cast114957, 14, !dbg !8966
  %.cast58 = bitcast i64* %104 to %union.tree_node*, !dbg !8966
  br i1 %cmp1141, label %cond.true1143, label %cond.false1252, !dbg !8966

cond.true1143:                                    ; preds = %cond.end1136
  br i1 %cmp1150, label %cond.true1152, label %cond.false1156, !dbg !8966

cond.true1152:                                    ; preds = %cond.true1143
  %call1155 = tail call i32 @vector_type_mode(%union.tree_node* %.cast58) #7, !dbg !8966
  br label %cond.end1164, !dbg !8966

cond.false1156:                                   ; preds = %cond.true1143
  %type1159 = bitcast i64* %104 to %struct.tree_type*, !dbg !8966
  %mode1160 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1159, i64 0, i32 6, !dbg !8966
  %bf.load1161 = load i32, i32* %mode1160, align 4, !dbg !8966
  %bf.lshr1162 = lshr i32 %bf.load1161, 16, !dbg !8966
  %bf.clear1163 = and i32 %bf.lshr1162, 255, !dbg !8966
  br label %cond.end1164, !dbg !8966

cond.end1164:                                     ; preds = %cond.false1156, %cond.true1152
  %cond1165 = phi i32 [ %call1155, %cond.true1152 ], [ %bf.clear1163, %cond.false1156 ], !dbg !8966
  %idxprom1166 = zext i32 %cond1165 to i64, !dbg !8966
  %arrayidx1167 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1166, !dbg !8966
  %105 = load i8, i8* %arrayidx1167, align 1, !dbg !8966
  %cmp1169 = icmp eq i8 %105, 8, !dbg !8966
  br i1 %cmp1169, label %cond.true1199, label %lor.lhs.false1171, !dbg !8966

lor.lhs.false1171:                                ; preds = %cond.end1164
  %106 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1175 = load i64, i64* %106, align 8, !dbg !8966
  %bf.cast117766 = and i64 %bf.load1175, 65535, !dbg !8966
  %cmp1178 = icmp eq i64 %bf.cast117766, 14, !dbg !8966
  br i1 %cmp1178, label %cond.true1180, label %cond.false1184, !dbg !8966

cond.true1180:                                    ; preds = %lor.lhs.false1171
  %.cast67 = bitcast i64* %106 to %union.tree_node*, !dbg !8966
  %call1183 = tail call i32 @vector_type_mode(%union.tree_node* %.cast67) #7, !dbg !8966
  br label %cond.end1192, !dbg !8966

cond.false1184:                                   ; preds = %lor.lhs.false1171
  %type1187 = bitcast i64* %106 to %struct.tree_type*, !dbg !8966
  %mode1188 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1187, i64 0, i32 6, !dbg !8966
  %bf.load1189 = load i32, i32* %mode1188, align 4, !dbg !8966
  %bf.lshr1190 = lshr i32 %bf.load1189, 16, !dbg !8966
  %bf.clear1191 = and i32 %bf.lshr1190, 255, !dbg !8966
  br label %cond.end1192, !dbg !8966

cond.end1192:                                     ; preds = %cond.false1184, %cond.true1180
  %cond1193 = phi i32 [ %call1183, %cond.true1180 ], [ %bf.clear1191, %cond.false1184 ], !dbg !8966
  %idxprom1194 = zext i32 %cond1193 to i64, !dbg !8966
  %arrayidx1195 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1194, !dbg !8966
  %107 = load i8, i8* %arrayidx1195, align 1, !dbg !8966
  %cmp1197 = icmp eq i8 %107, 9, !dbg !8966
  br i1 %cmp1197, label %cond.true1199, label %cond.false1222, !dbg !8966

cond.true1199:                                    ; preds = %cond.end1192, %cond.end1164
  %108 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1203 = load i64, i64* %108, align 8, !dbg !8966
  %bf.cast120570 = and i64 %bf.load1203, 65535, !dbg !8966
  %cmp1206 = icmp eq i64 %bf.cast120570, 14, !dbg !8966
  br i1 %cmp1206, label %cond.true1208, label %cond.false1212, !dbg !8966

cond.true1208:                                    ; preds = %cond.true1199
  %.cast71 = bitcast i64* %108 to %union.tree_node*, !dbg !8966
  %call1211 = tail call i32 @vector_type_mode(%union.tree_node* %.cast71) #7, !dbg !8966
  br label %cond.end1248, !dbg !8966

cond.false1212:                                   ; preds = %cond.true1199
  %type1215 = bitcast i64* %108 to %struct.tree_type*, !dbg !8966
  %mode1216 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1215, i64 0, i32 6, !dbg !8966
  %bf.load1217 = load i32, i32* %mode1216, align 4, !dbg !8966
  %bf.lshr1218 = lshr i32 %bf.load1217, 16, !dbg !8966
  %bf.clear1219 = and i32 %bf.lshr1218, 255, !dbg !8966
  br label %cond.end1248, !dbg !8966

cond.false1222:                                   ; preds = %cond.end1192
  %109 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1226 = load i64, i64* %109, align 8, !dbg !8966
  %bf.cast122868 = and i64 %bf.load1226, 65535, !dbg !8966
  %cmp1229 = icmp eq i64 %bf.cast122868, 14, !dbg !8966
  br i1 %cmp1229, label %cond.true1231, label %cond.false1235, !dbg !8966

cond.true1231:                                    ; preds = %cond.false1222
  %.cast69 = bitcast i64* %109 to %union.tree_node*, !dbg !8966
  %call1234 = tail call i32 @vector_type_mode(%union.tree_node* %.cast69) #7, !dbg !8966
  br label %cond.end1243, !dbg !8966

cond.false1235:                                   ; preds = %cond.false1222
  %type1238 = bitcast i64* %109 to %struct.tree_type*, !dbg !8966
  %mode1239 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1238, i64 0, i32 6, !dbg !8966
  %bf.load1240 = load i32, i32* %mode1239, align 4, !dbg !8966
  %bf.lshr1241 = lshr i32 %bf.load1240, 16, !dbg !8966
  %bf.clear1242 = and i32 %bf.lshr1241, 255, !dbg !8966
  br label %cond.end1243, !dbg !8966

cond.end1243:                                     ; preds = %cond.false1235, %cond.true1231
  %cond1244 = phi i32 [ %call1234, %cond.true1231 ], [ %bf.clear1242, %cond.false1235 ], !dbg !8966
  %idxprom1245 = zext i32 %cond1244 to i64, !dbg !8966
  %arrayidx1246 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1245, !dbg !8966
  %110 = load i8, i8* %arrayidx1246, align 1, !dbg !8966
  %conv1247 = zext i8 %110 to i32, !dbg !8966
  br label %cond.end1248, !dbg !8966

cond.end1248:                                     ; preds = %cond.true1208, %cond.false1212, %cond.end1243
  %cond1249 = phi i32 [ %conv1247, %cond.end1243 ], [ %call1211, %cond.true1208 ], [ %bf.clear1219, %cond.false1212 ], !dbg !8966
  br label %cond.end1360, !dbg !8966

cond.false1252:                                   ; preds = %cond.end1136
  br i1 %cmp1150, label %cond.true1261, label %cond.false1265, !dbg !8966

cond.true1261:                                    ; preds = %cond.false1252
  %call1264 = tail call i32 @vector_type_mode(%union.tree_node* %.cast58) #7, !dbg !8966
  br label %cond.end1273, !dbg !8966

cond.false1265:                                   ; preds = %cond.false1252
  %type1268 = bitcast i64* %104 to %struct.tree_type*, !dbg !8966
  %mode1269 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1268, i64 0, i32 6, !dbg !8966
  %bf.load1270 = load i32, i32* %mode1269, align 4, !dbg !8966
  %bf.lshr1271 = lshr i32 %bf.load1270, 16, !dbg !8966
  %bf.clear1272 = and i32 %bf.lshr1271, 255, !dbg !8966
  br label %cond.end1273, !dbg !8966

cond.end1273:                                     ; preds = %cond.false1265, %cond.true1261
  %cond1274 = phi i32 [ %call1264, %cond.true1261 ], [ %bf.clear1272, %cond.false1265 ], !dbg !8966
  %idxprom1275 = zext i32 %cond1274 to i64, !dbg !8966
  %arrayidx1276 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1275, !dbg !8966
  %111 = load i8, i8* %arrayidx1276, align 1, !dbg !8966
  %cmp1278 = icmp eq i8 %111, 8, !dbg !8966
  br i1 %cmp1278, label %cond.true1308, label %lor.lhs.false1280, !dbg !8966

lor.lhs.false1280:                                ; preds = %cond.end1273
  %112 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1284 = load i64, i64* %112, align 8, !dbg !8966
  %bf.cast128659 = and i64 %bf.load1284, 65535, !dbg !8966
  %cmp1287 = icmp eq i64 %bf.cast128659, 14, !dbg !8966
  br i1 %cmp1287, label %cond.true1289, label %cond.false1293, !dbg !8966

cond.true1289:                                    ; preds = %lor.lhs.false1280
  %.cast60 = bitcast i64* %112 to %union.tree_node*, !dbg !8966
  %call1292 = tail call i32 @vector_type_mode(%union.tree_node* %.cast60) #7, !dbg !8966
  br label %cond.end1301, !dbg !8966

cond.false1293:                                   ; preds = %lor.lhs.false1280
  %type1296 = bitcast i64* %112 to %struct.tree_type*, !dbg !8966
  %mode1297 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1296, i64 0, i32 6, !dbg !8966
  %bf.load1298 = load i32, i32* %mode1297, align 4, !dbg !8966
  %bf.lshr1299 = lshr i32 %bf.load1298, 16, !dbg !8966
  %bf.clear1300 = and i32 %bf.lshr1299, 255, !dbg !8966
  br label %cond.end1301, !dbg !8966

cond.end1301:                                     ; preds = %cond.false1293, %cond.true1289
  %cond1302 = phi i32 [ %call1292, %cond.true1289 ], [ %bf.clear1300, %cond.false1293 ], !dbg !8966
  %idxprom1303 = zext i32 %cond1302 to i64, !dbg !8966
  %arrayidx1304 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1303, !dbg !8966
  %113 = load i8, i8* %arrayidx1304, align 1, !dbg !8966
  %cmp1306 = icmp eq i8 %113, 9, !dbg !8966
  br i1 %cmp1306, label %cond.true1308, label %cond.false1331, !dbg !8966

cond.true1308:                                    ; preds = %cond.end1301, %cond.end1273
  %114 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1312 = load i64, i64* %114, align 8, !dbg !8966
  %bf.cast131464 = and i64 %bf.load1312, 65535, !dbg !8966
  %cmp1315 = icmp eq i64 %bf.cast131464, 14, !dbg !8966
  br i1 %cmp1315, label %cond.true1317, label %cond.false1321, !dbg !8966

cond.true1317:                                    ; preds = %cond.true1308
  %.cast65 = bitcast i64* %114 to %union.tree_node*, !dbg !8966
  %call1320 = tail call i32 @vector_type_mode(%union.tree_node* %.cast65) #7, !dbg !8966
  br label %cond.end1357, !dbg !8966

cond.false1321:                                   ; preds = %cond.true1308
  %type1324 = bitcast i64* %114 to %struct.tree_type*, !dbg !8966
  %mode1325 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1324, i64 0, i32 6, !dbg !8966
  %bf.load1326 = load i32, i32* %mode1325, align 4, !dbg !8966
  %bf.lshr1327 = lshr i32 %bf.load1326, 16, !dbg !8966
  %bf.clear1328 = and i32 %bf.lshr1327, 255, !dbg !8966
  br label %cond.end1357, !dbg !8966

cond.false1331:                                   ; preds = %cond.end1301
  %115 = load i64*, i64** %55, align 8, !dbg !8966
  %bf.load1335 = load i64, i64* %115, align 8, !dbg !8966
  %bf.cast133761 = and i64 %bf.load1335, 65535, !dbg !8966
  %cmp1338 = icmp eq i64 %bf.cast133761, 14, !dbg !8966
  br i1 %cmp1338, label %cond.true1340, label %cond.false1344, !dbg !8966

cond.true1340:                                    ; preds = %cond.false1331
  %.cast62 = bitcast i64* %115 to %union.tree_node*, !dbg !8966
  %call1343 = tail call i32 @vector_type_mode(%union.tree_node* %.cast62) #7, !dbg !8966
  br label %cond.end1352, !dbg !8966

cond.false1344:                                   ; preds = %cond.false1331
  %type1347 = bitcast i64* %115 to %struct.tree_type*, !dbg !8966
  %mode1348 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1347, i64 0, i32 6, !dbg !8966
  %bf.load1349 = load i32, i32* %mode1348, align 4, !dbg !8966
  %bf.lshr1350 = lshr i32 %bf.load1349, 16, !dbg !8966
  %bf.clear1351 = and i32 %bf.lshr1350, 255, !dbg !8966
  br label %cond.end1352, !dbg !8966

cond.end1352:                                     ; preds = %cond.false1344, %cond.true1340
  %cond1353 = phi i32 [ %call1343, %cond.true1340 ], [ %bf.clear1351, %cond.false1344 ], !dbg !8966
  %idxprom1354 = zext i32 %cond1353 to i64, !dbg !8966
  %arrayidx1355 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1354, !dbg !8966
  %116 = load i8, i8* %arrayidx1355, align 1, !dbg !8966
  %conv1356 = zext i8 %116 to i32, !dbg !8966
  br label %cond.end1357, !dbg !8966

cond.end1357:                                     ; preds = %cond.true1317, %cond.false1321, %cond.end1352
  %cond1358 = phi i32 [ %conv1356, %cond.end1352 ], [ %call1320, %cond.true1317 ], [ %bf.clear1328, %cond.false1321 ], !dbg !8966
  br label %cond.end1360, !dbg !8966

cond.end1360:                                     ; preds = %cond.end1357, %cond.end1248
  %cond1361.in = phi i32 [ %cond1249, %cond.end1248 ], [ %cond1358, %cond.end1357 ]
  %cond1361 = add i32 %cond1361.in, -38, !dbg !8966
  %idxprom1362 = zext i32 %cond1361 to i64, !dbg !8966
  %arrayidx1363 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1362, !dbg !8966
  %117 = load %struct.real_format*, %struct.real_format** %arrayidx1363, align 8, !dbg !8966
  %has_inf1364 = getelementptr inbounds %struct.real_format, %struct.real_format* %117, i64 0, i32 12, !dbg !8966
  %118 = load i8, i8* %has_inf1364, align 1, !dbg !8966
  %tobool1366 = icmp eq i8 %118, 0, !dbg !8966
  %119 = load i32, i32* @flag_finite_math_only, align 4, !dbg !8966
  %tobool1368 = icmp ne i32 %119, 0, !dbg !8966
  %or.cond3 = or i1 %tobool1366, %tobool1368, !dbg !8966
  br i1 %or.cond3, label %if.then1369, label %if.end1371, !dbg !8966

if.then1369:                                      ; preds = %cond.end1360, %cond.end1024
  %120 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8967
  %call1370 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %120, %union.tree_node* %arg) #7, !dbg !8968
  br label %cleanup, !dbg !8969

if.end1371:                                       ; preds = %cond.end1360, %cond.end911
  %121 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8970
  %bf.load1373 = load i64, i64* %121, align 8, !dbg !8970
  %bf.cast137563 = and i64 %bf.load1373, 65535, !dbg !8972
  %cmp1376 = icmp eq i64 %bf.cast137563, 24, !dbg !8972
  br i1 %cmp1376, label %if.then1378, label %cleanup, !dbg !8973

if.then1378:                                      ; preds = %if.end1371
  %real_cst_ptr1380 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8974
  %122 = bitcast i32* %real_cst_ptr1380 to i8**, !dbg !8974
  %123 = load i8*, i8** %122, align 8, !dbg !8974
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 %123, i64 32, i1 false), !dbg !8974
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8914, metadata !DIExpression(DW_OP_deref)), !dbg !8924
  %call1381 = call zeroext i8 @real_isfinite(%struct.real_value* nonnull %r) #7, !dbg !8976
  %tobool1383 = icmp eq i8 %call1381, 0, !dbg !8976
  %124 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8976
  %125 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8976
  %cond1387 = select i1 %tobool1383, %union.tree_node* %125, %union.tree_node* %124, !dbg !8976
  br label %cleanup, !dbg !8976

sw.bb1389:                                        ; preds = %if.end
  %type1391 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !8977
  %126 = bitcast %union.tree_node** %type1391 to i64**, !dbg !8977
  %127 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1393 = load i64, i64* %127, align 8, !dbg !8977
  %bf.cast13955 = and i64 %bf.load1393, 65535, !dbg !8977
  %cmp1396 = icmp eq i64 %bf.cast13955, 14, !dbg !8977
  br i1 %cmp1396, label %cond.true1398, label %cond.false1402, !dbg !8977

cond.true1398:                                    ; preds = %sw.bb1389
  %.cast = bitcast i64* %127 to %union.tree_node*, !dbg !8977
  %call1401 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !8977
  br label %cond.end1410, !dbg !8977

cond.false1402:                                   ; preds = %sw.bb1389
  %type1405 = bitcast i64* %127 to %struct.tree_type*, !dbg !8977
  %mode1406 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1405, i64 0, i32 6, !dbg !8977
  %bf.load1407 = load i32, i32* %mode1406, align 4, !dbg !8977
  %bf.lshr1408 = lshr i32 %bf.load1407, 16, !dbg !8977
  %bf.clear1409 = and i32 %bf.lshr1408, 255, !dbg !8977
  br label %cond.end1410, !dbg !8977

cond.end1410:                                     ; preds = %cond.false1402, %cond.true1398
  %cond1411 = phi i32 [ %call1401, %cond.true1398 ], [ %bf.clear1409, %cond.false1402 ], !dbg !8977
  %idxprom1412 = zext i32 %cond1411 to i64, !dbg !8977
  %arrayidx1413 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1412, !dbg !8977
  %128 = load i8, i8* %arrayidx1413, align 1, !dbg !8977
  %cmp1415 = icmp eq i8 %128, 8, !dbg !8977
  br i1 %cmp1415, label %land.lhs.true1501, label %lor.lhs.false1417, !dbg !8977

lor.lhs.false1417:                                ; preds = %cond.end1410
  %129 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1421 = load i64, i64* %129, align 8, !dbg !8977
  %bf.cast14236 = and i64 %bf.load1421, 65535, !dbg !8977
  %cmp1424 = icmp eq i64 %bf.cast14236, 14, !dbg !8977
  br i1 %cmp1424, label %cond.true1426, label %cond.false1430, !dbg !8977

cond.true1426:                                    ; preds = %lor.lhs.false1417
  %.cast7 = bitcast i64* %129 to %union.tree_node*, !dbg !8977
  %call1429 = tail call i32 @vector_type_mode(%union.tree_node* %.cast7) #7, !dbg !8977
  br label %cond.end1438, !dbg !8977

cond.false1430:                                   ; preds = %lor.lhs.false1417
  %type1433 = bitcast i64* %129 to %struct.tree_type*, !dbg !8977
  %mode1434 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1433, i64 0, i32 6, !dbg !8977
  %bf.load1435 = load i32, i32* %mode1434, align 4, !dbg !8977
  %bf.lshr1436 = lshr i32 %bf.load1435, 16, !dbg !8977
  %bf.clear1437 = and i32 %bf.lshr1436, 255, !dbg !8977
  br label %cond.end1438, !dbg !8977

cond.end1438:                                     ; preds = %cond.false1430, %cond.true1426
  %cond1439 = phi i32 [ %call1429, %cond.true1426 ], [ %bf.clear1437, %cond.false1430 ], !dbg !8977
  %idxprom1440 = zext i32 %cond1439 to i64, !dbg !8977
  %arrayidx1441 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1440, !dbg !8977
  %130 = load i8, i8* %arrayidx1441, align 1, !dbg !8977
  %cmp1443 = icmp eq i8 %130, 9, !dbg !8977
  br i1 %cmp1443, label %land.lhs.true1501, label %lor.lhs.false1445, !dbg !8977

lor.lhs.false1445:                                ; preds = %cond.end1438
  %131 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1449 = load i64, i64* %131, align 8, !dbg !8977
  %bf.cast14518 = and i64 %bf.load1449, 65535, !dbg !8977
  %cmp1452 = icmp eq i64 %bf.cast14518, 14, !dbg !8977
  br i1 %cmp1452, label %cond.true1454, label %cond.false1458, !dbg !8977

cond.true1454:                                    ; preds = %lor.lhs.false1445
  %.cast9 = bitcast i64* %131 to %union.tree_node*, !dbg !8977
  %call1457 = tail call i32 @vector_type_mode(%union.tree_node* %.cast9) #7, !dbg !8977
  br label %cond.end1466, !dbg !8977

cond.false1458:                                   ; preds = %lor.lhs.false1445
  %type1461 = bitcast i64* %131 to %struct.tree_type*, !dbg !8977
  %mode1462 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1461, i64 0, i32 6, !dbg !8977
  %bf.load1463 = load i32, i32* %mode1462, align 4, !dbg !8977
  %bf.lshr1464 = lshr i32 %bf.load1463, 16, !dbg !8977
  %bf.clear1465 = and i32 %bf.lshr1464, 255, !dbg !8977
  br label %cond.end1466, !dbg !8977

cond.end1466:                                     ; preds = %cond.false1458, %cond.true1454
  %cond1467 = phi i32 [ %call1457, %cond.true1454 ], [ %bf.clear1465, %cond.false1458 ], !dbg !8977
  %idxprom1468 = zext i32 %cond1467 to i64, !dbg !8977
  %arrayidx1469 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1468, !dbg !8977
  %132 = load i8, i8* %arrayidx1469, align 1, !dbg !8977
  %cmp1471 = icmp eq i8 %132, 11, !dbg !8977
  br i1 %cmp1471, label %land.lhs.true1501, label %lor.lhs.false1473, !dbg !8977

lor.lhs.false1473:                                ; preds = %cond.end1466
  %133 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1477 = load i64, i64* %133, align 8, !dbg !8977
  %bf.cast147910 = and i64 %bf.load1477, 65535, !dbg !8977
  %cmp1480 = icmp eq i64 %bf.cast147910, 14, !dbg !8977
  br i1 %cmp1480, label %cond.true1482, label %cond.false1486, !dbg !8977

cond.true1482:                                    ; preds = %lor.lhs.false1473
  %.cast11 = bitcast i64* %133 to %union.tree_node*, !dbg !8977
  %call1485 = tail call i32 @vector_type_mode(%union.tree_node* %.cast11) #7, !dbg !8977
  br label %cond.end1494, !dbg !8977

cond.false1486:                                   ; preds = %lor.lhs.false1473
  %type1489 = bitcast i64* %133 to %struct.tree_type*, !dbg !8977
  %mode1490 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1489, i64 0, i32 6, !dbg !8977
  %bf.load1491 = load i32, i32* %mode1490, align 4, !dbg !8977
  %bf.lshr1492 = lshr i32 %bf.load1491, 16, !dbg !8977
  %bf.clear1493 = and i32 %bf.lshr1492, 255, !dbg !8977
  br label %cond.end1494, !dbg !8977

cond.end1494:                                     ; preds = %cond.false1486, %cond.true1482
  %cond1495 = phi i32 [ %call1485, %cond.true1482 ], [ %bf.clear1493, %cond.false1486 ], !dbg !8977
  %idxprom1496 = zext i32 %cond1495 to i64, !dbg !8977
  %arrayidx1497 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1496, !dbg !8977
  %134 = load i8, i8* %arrayidx1497, align 1, !dbg !8977
  %cmp1499 = icmp eq i8 %134, 17, !dbg !8977
  br i1 %cmp1499, label %land.lhs.true1501, label %if.then1839, !dbg !8977

land.lhs.true1501:                                ; preds = %cond.end1494, %cond.end1466, %cond.end1438, %cond.end1410
  %135 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1505 = load i64, i64* %135, align 8, !dbg !8977
  %bf.cast150712 = and i64 %bf.load1505, 65535, !dbg !8977
  %cmp1508 = icmp eq i64 %bf.cast150712, 14, !dbg !8977
  br i1 %cmp1508, label %cond.true1510, label %cond.false1514, !dbg !8977

cond.true1510:                                    ; preds = %land.lhs.true1501
  %.cast13 = bitcast i64* %135 to %union.tree_node*, !dbg !8977
  %call1513 = tail call i32 @vector_type_mode(%union.tree_node* %.cast13) #7, !dbg !8977
  br label %cond.end1522, !dbg !8977

cond.false1514:                                   ; preds = %land.lhs.true1501
  %type1517 = bitcast i64* %135 to %struct.tree_type*, !dbg !8977
  %mode1518 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1517, i64 0, i32 6, !dbg !8977
  %bf.load1519 = load i32, i32* %mode1518, align 4, !dbg !8977
  %bf.lshr1520 = lshr i32 %bf.load1519, 16, !dbg !8977
  %bf.clear1521 = and i32 %bf.lshr1520, 255, !dbg !8977
  br label %cond.end1522, !dbg !8977

cond.end1522:                                     ; preds = %cond.false1514, %cond.true1510
  %cond1523 = phi i32 [ %call1513, %cond.true1510 ], [ %bf.clear1521, %cond.false1514 ], !dbg !8977
  %idxprom1524 = zext i32 %cond1523 to i64, !dbg !8977
  %arrayidx1525 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1524, !dbg !8977
  %136 = load i8, i8* %arrayidx1525, align 1, !dbg !8977
  %cmp1527 = icmp eq i8 %136, 8, !dbg !8977
  br i1 %cmp1527, label %cond.true1557, label %lor.lhs.false1529, !dbg !8977

lor.lhs.false1529:                                ; preds = %cond.end1522
  %137 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1533 = load i64, i64* %137, align 8, !dbg !8977
  %bf.cast153514 = and i64 %bf.load1533, 65535, !dbg !8977
  %cmp1536 = icmp eq i64 %bf.cast153514, 14, !dbg !8977
  br i1 %cmp1536, label %cond.true1538, label %cond.false1542, !dbg !8977

cond.true1538:                                    ; preds = %lor.lhs.false1529
  %.cast15 = bitcast i64* %137 to %union.tree_node*, !dbg !8977
  %call1541 = tail call i32 @vector_type_mode(%union.tree_node* %.cast15) #7, !dbg !8977
  br label %cond.end1550, !dbg !8977

cond.false1542:                                   ; preds = %lor.lhs.false1529
  %type1545 = bitcast i64* %137 to %struct.tree_type*, !dbg !8977
  %mode1546 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1545, i64 0, i32 6, !dbg !8977
  %bf.load1547 = load i32, i32* %mode1546, align 4, !dbg !8977
  %bf.lshr1548 = lshr i32 %bf.load1547, 16, !dbg !8977
  %bf.clear1549 = and i32 %bf.lshr1548, 255, !dbg !8977
  br label %cond.end1550, !dbg !8977

cond.end1550:                                     ; preds = %cond.false1542, %cond.true1538
  %cond1551 = phi i32 [ %call1541, %cond.true1538 ], [ %bf.clear1549, %cond.false1542 ], !dbg !8977
  %idxprom1552 = zext i32 %cond1551 to i64, !dbg !8977
  %arrayidx1553 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1552, !dbg !8977
  %138 = load i8, i8* %arrayidx1553, align 1, !dbg !8977
  %cmp1555 = icmp eq i8 %138, 9, !dbg !8977
  br i1 %cmp1555, label %cond.true1557, label %cond.false1580, !dbg !8977

cond.true1557:                                    ; preds = %cond.end1550, %cond.end1522
  %139 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1561 = load i64, i64* %139, align 8, !dbg !8977
  %bf.cast156333 = and i64 %bf.load1561, 65535, !dbg !8977
  %cmp1564 = icmp eq i64 %bf.cast156333, 14, !dbg !8977
  br i1 %cmp1564, label %cond.true1566, label %cond.false1570, !dbg !8977

cond.true1566:                                    ; preds = %cond.true1557
  %.cast34 = bitcast i64* %139 to %union.tree_node*, !dbg !8977
  %call1569 = tail call i32 @vector_type_mode(%union.tree_node* %.cast34) #7, !dbg !8977
  br label %cond.end1606, !dbg !8977

cond.false1570:                                   ; preds = %cond.true1557
  %type1573 = bitcast i64* %139 to %struct.tree_type*, !dbg !8977
  %mode1574 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1573, i64 0, i32 6, !dbg !8977
  %bf.load1575 = load i32, i32* %mode1574, align 4, !dbg !8977
  %bf.lshr1576 = lshr i32 %bf.load1575, 16, !dbg !8977
  %bf.clear1577 = and i32 %bf.lshr1576, 255, !dbg !8977
  br label %cond.end1606, !dbg !8977

cond.false1580:                                   ; preds = %cond.end1550
  %140 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1584 = load i64, i64* %140, align 8, !dbg !8977
  %bf.cast158616 = and i64 %bf.load1584, 65535, !dbg !8977
  %cmp1587 = icmp eq i64 %bf.cast158616, 14, !dbg !8977
  br i1 %cmp1587, label %cond.true1589, label %cond.false1593, !dbg !8977

cond.true1589:                                    ; preds = %cond.false1580
  %.cast17 = bitcast i64* %140 to %union.tree_node*, !dbg !8977
  %call1592 = tail call i32 @vector_type_mode(%union.tree_node* %.cast17) #7, !dbg !8977
  br label %cond.end1601, !dbg !8977

cond.false1593:                                   ; preds = %cond.false1580
  %type1596 = bitcast i64* %140 to %struct.tree_type*, !dbg !8977
  %mode1597 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1596, i64 0, i32 6, !dbg !8977
  %bf.load1598 = load i32, i32* %mode1597, align 4, !dbg !8977
  %bf.lshr1599 = lshr i32 %bf.load1598, 16, !dbg !8977
  %bf.clear1600 = and i32 %bf.lshr1599, 255, !dbg !8977
  br label %cond.end1601, !dbg !8977

cond.end1601:                                     ; preds = %cond.false1593, %cond.true1589
  %cond1602 = phi i32 [ %call1592, %cond.true1589 ], [ %bf.clear1600, %cond.false1593 ], !dbg !8977
  %idxprom1603 = zext i32 %cond1602 to i64, !dbg !8977
  %arrayidx1604 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1603, !dbg !8977
  %141 = load i8, i8* %arrayidx1604, align 1, !dbg !8977
  %conv1605 = zext i8 %141 to i32, !dbg !8977
  br label %cond.end1606, !dbg !8977

cond.end1606:                                     ; preds = %cond.true1566, %cond.false1570, %cond.end1601
  %cond1607 = phi i32 [ %conv1605, %cond.end1601 ], [ %call1569, %cond.true1566 ], [ %bf.clear1577, %cond.false1570 ], !dbg !8977
  %idxprom1608 = zext i32 %cond1607 to i64, !dbg !8977
  %arrayidx1609 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1608, !dbg !8977
  %142 = load i8, i8* %arrayidx1609, align 1, !dbg !8977
  %cmp1611 = icmp eq i8 %142, 9, !dbg !8977
  %143 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1617 = load i64, i64* %143, align 8, !dbg !8977
  %bf.cast161918 = and i64 %bf.load1617, 65535, !dbg !8977
  %cmp1620 = icmp eq i64 %bf.cast161918, 14, !dbg !8977
  %.cast19 = bitcast i64* %143 to %union.tree_node*, !dbg !8977
  br i1 %cmp1611, label %cond.true1613, label %cond.false1722, !dbg !8977

cond.true1613:                                    ; preds = %cond.end1606
  br i1 %cmp1620, label %cond.true1622, label %cond.false1626, !dbg !8977

cond.true1622:                                    ; preds = %cond.true1613
  %call1625 = tail call i32 @vector_type_mode(%union.tree_node* %.cast19) #7, !dbg !8977
  br label %cond.end1634, !dbg !8977

cond.false1626:                                   ; preds = %cond.true1613
  %type1629 = bitcast i64* %143 to %struct.tree_type*, !dbg !8977
  %mode1630 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1629, i64 0, i32 6, !dbg !8977
  %bf.load1631 = load i32, i32* %mode1630, align 4, !dbg !8977
  %bf.lshr1632 = lshr i32 %bf.load1631, 16, !dbg !8977
  %bf.clear1633 = and i32 %bf.lshr1632, 255, !dbg !8977
  br label %cond.end1634, !dbg !8977

cond.end1634:                                     ; preds = %cond.false1626, %cond.true1622
  %cond1635 = phi i32 [ %call1625, %cond.true1622 ], [ %bf.clear1633, %cond.false1626 ], !dbg !8977
  %idxprom1636 = zext i32 %cond1635 to i64, !dbg !8977
  %arrayidx1637 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1636, !dbg !8977
  %144 = load i8, i8* %arrayidx1637, align 1, !dbg !8977
  %cmp1639 = icmp eq i8 %144, 8, !dbg !8977
  br i1 %cmp1639, label %cond.true1669, label %lor.lhs.false1641, !dbg !8977

lor.lhs.false1641:                                ; preds = %cond.end1634
  %145 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1645 = load i64, i64* %145, align 8, !dbg !8977
  %bf.cast164727 = and i64 %bf.load1645, 65535, !dbg !8977
  %cmp1648 = icmp eq i64 %bf.cast164727, 14, !dbg !8977
  br i1 %cmp1648, label %cond.true1650, label %cond.false1654, !dbg !8977

cond.true1650:                                    ; preds = %lor.lhs.false1641
  %.cast28 = bitcast i64* %145 to %union.tree_node*, !dbg !8977
  %call1653 = tail call i32 @vector_type_mode(%union.tree_node* %.cast28) #7, !dbg !8977
  br label %cond.end1662, !dbg !8977

cond.false1654:                                   ; preds = %lor.lhs.false1641
  %type1657 = bitcast i64* %145 to %struct.tree_type*, !dbg !8977
  %mode1658 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1657, i64 0, i32 6, !dbg !8977
  %bf.load1659 = load i32, i32* %mode1658, align 4, !dbg !8977
  %bf.lshr1660 = lshr i32 %bf.load1659, 16, !dbg !8977
  %bf.clear1661 = and i32 %bf.lshr1660, 255, !dbg !8977
  br label %cond.end1662, !dbg !8977

cond.end1662:                                     ; preds = %cond.false1654, %cond.true1650
  %cond1663 = phi i32 [ %call1653, %cond.true1650 ], [ %bf.clear1661, %cond.false1654 ], !dbg !8977
  %idxprom1664 = zext i32 %cond1663 to i64, !dbg !8977
  %arrayidx1665 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1664, !dbg !8977
  %146 = load i8, i8* %arrayidx1665, align 1, !dbg !8977
  %cmp1667 = icmp eq i8 %146, 9, !dbg !8977
  br i1 %cmp1667, label %cond.true1669, label %cond.false1692, !dbg !8977

cond.true1669:                                    ; preds = %cond.end1662, %cond.end1634
  %147 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1673 = load i64, i64* %147, align 8, !dbg !8977
  %bf.cast167531 = and i64 %bf.load1673, 65535, !dbg !8977
  %cmp1676 = icmp eq i64 %bf.cast167531, 14, !dbg !8977
  br i1 %cmp1676, label %cond.true1678, label %cond.false1682, !dbg !8977

cond.true1678:                                    ; preds = %cond.true1669
  %.cast32 = bitcast i64* %147 to %union.tree_node*, !dbg !8977
  %call1681 = tail call i32 @vector_type_mode(%union.tree_node* %.cast32) #7, !dbg !8977
  br label %cond.end1718, !dbg !8977

cond.false1682:                                   ; preds = %cond.true1669
  %type1685 = bitcast i64* %147 to %struct.tree_type*, !dbg !8977
  %mode1686 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1685, i64 0, i32 6, !dbg !8977
  %bf.load1687 = load i32, i32* %mode1686, align 4, !dbg !8977
  %bf.lshr1688 = lshr i32 %bf.load1687, 16, !dbg !8977
  %bf.clear1689 = and i32 %bf.lshr1688, 255, !dbg !8977
  br label %cond.end1718, !dbg !8977

cond.false1692:                                   ; preds = %cond.end1662
  %148 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1696 = load i64, i64* %148, align 8, !dbg !8977
  %bf.cast169829 = and i64 %bf.load1696, 65535, !dbg !8977
  %cmp1699 = icmp eq i64 %bf.cast169829, 14, !dbg !8977
  br i1 %cmp1699, label %cond.true1701, label %cond.false1705, !dbg !8977

cond.true1701:                                    ; preds = %cond.false1692
  %.cast30 = bitcast i64* %148 to %union.tree_node*, !dbg !8977
  %call1704 = tail call i32 @vector_type_mode(%union.tree_node* %.cast30) #7, !dbg !8977
  br label %cond.end1713, !dbg !8977

cond.false1705:                                   ; preds = %cond.false1692
  %type1708 = bitcast i64* %148 to %struct.tree_type*, !dbg !8977
  %mode1709 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1708, i64 0, i32 6, !dbg !8977
  %bf.load1710 = load i32, i32* %mode1709, align 4, !dbg !8977
  %bf.lshr1711 = lshr i32 %bf.load1710, 16, !dbg !8977
  %bf.clear1712 = and i32 %bf.lshr1711, 255, !dbg !8977
  br label %cond.end1713, !dbg !8977

cond.end1713:                                     ; preds = %cond.false1705, %cond.true1701
  %cond1714 = phi i32 [ %call1704, %cond.true1701 ], [ %bf.clear1712, %cond.false1705 ], !dbg !8977
  %idxprom1715 = zext i32 %cond1714 to i64, !dbg !8977
  %arrayidx1716 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1715, !dbg !8977
  %149 = load i8, i8* %arrayidx1716, align 1, !dbg !8977
  %conv1717 = zext i8 %149 to i32, !dbg !8977
  br label %cond.end1718, !dbg !8977

cond.end1718:                                     ; preds = %cond.true1678, %cond.false1682, %cond.end1713
  %cond1719 = phi i32 [ %conv1717, %cond.end1713 ], [ %call1681, %cond.true1678 ], [ %bf.clear1689, %cond.false1682 ], !dbg !8977
  br label %cond.end1830, !dbg !8977

cond.false1722:                                   ; preds = %cond.end1606
  br i1 %cmp1620, label %cond.true1731, label %cond.false1735, !dbg !8977

cond.true1731:                                    ; preds = %cond.false1722
  %call1734 = tail call i32 @vector_type_mode(%union.tree_node* %.cast19) #7, !dbg !8977
  br label %cond.end1743, !dbg !8977

cond.false1735:                                   ; preds = %cond.false1722
  %type1738 = bitcast i64* %143 to %struct.tree_type*, !dbg !8977
  %mode1739 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1738, i64 0, i32 6, !dbg !8977
  %bf.load1740 = load i32, i32* %mode1739, align 4, !dbg !8977
  %bf.lshr1741 = lshr i32 %bf.load1740, 16, !dbg !8977
  %bf.clear1742 = and i32 %bf.lshr1741, 255, !dbg !8977
  br label %cond.end1743, !dbg !8977

cond.end1743:                                     ; preds = %cond.false1735, %cond.true1731
  %cond1744 = phi i32 [ %call1734, %cond.true1731 ], [ %bf.clear1742, %cond.false1735 ], !dbg !8977
  %idxprom1745 = zext i32 %cond1744 to i64, !dbg !8977
  %arrayidx1746 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1745, !dbg !8977
  %150 = load i8, i8* %arrayidx1746, align 1, !dbg !8977
  %cmp1748 = icmp eq i8 %150, 8, !dbg !8977
  br i1 %cmp1748, label %cond.true1778, label %lor.lhs.false1750, !dbg !8977

lor.lhs.false1750:                                ; preds = %cond.end1743
  %151 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1754 = load i64, i64* %151, align 8, !dbg !8977
  %bf.cast175620 = and i64 %bf.load1754, 65535, !dbg !8977
  %cmp1757 = icmp eq i64 %bf.cast175620, 14, !dbg !8977
  br i1 %cmp1757, label %cond.true1759, label %cond.false1763, !dbg !8977

cond.true1759:                                    ; preds = %lor.lhs.false1750
  %.cast21 = bitcast i64* %151 to %union.tree_node*, !dbg !8977
  %call1762 = tail call i32 @vector_type_mode(%union.tree_node* %.cast21) #7, !dbg !8977
  br label %cond.end1771, !dbg !8977

cond.false1763:                                   ; preds = %lor.lhs.false1750
  %type1766 = bitcast i64* %151 to %struct.tree_type*, !dbg !8977
  %mode1767 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1766, i64 0, i32 6, !dbg !8977
  %bf.load1768 = load i32, i32* %mode1767, align 4, !dbg !8977
  %bf.lshr1769 = lshr i32 %bf.load1768, 16, !dbg !8977
  %bf.clear1770 = and i32 %bf.lshr1769, 255, !dbg !8977
  br label %cond.end1771, !dbg !8977

cond.end1771:                                     ; preds = %cond.false1763, %cond.true1759
  %cond1772 = phi i32 [ %call1762, %cond.true1759 ], [ %bf.clear1770, %cond.false1763 ], !dbg !8977
  %idxprom1773 = zext i32 %cond1772 to i64, !dbg !8977
  %arrayidx1774 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1773, !dbg !8977
  %152 = load i8, i8* %arrayidx1774, align 1, !dbg !8977
  %cmp1776 = icmp eq i8 %152, 9, !dbg !8977
  br i1 %cmp1776, label %cond.true1778, label %cond.false1801, !dbg !8977

cond.true1778:                                    ; preds = %cond.end1771, %cond.end1743
  %153 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1782 = load i64, i64* %153, align 8, !dbg !8977
  %bf.cast178425 = and i64 %bf.load1782, 65535, !dbg !8977
  %cmp1785 = icmp eq i64 %bf.cast178425, 14, !dbg !8977
  br i1 %cmp1785, label %cond.true1787, label %cond.false1791, !dbg !8977

cond.true1787:                                    ; preds = %cond.true1778
  %.cast26 = bitcast i64* %153 to %union.tree_node*, !dbg !8977
  %call1790 = tail call i32 @vector_type_mode(%union.tree_node* %.cast26) #7, !dbg !8977
  br label %cond.end1827, !dbg !8977

cond.false1791:                                   ; preds = %cond.true1778
  %type1794 = bitcast i64* %153 to %struct.tree_type*, !dbg !8977
  %mode1795 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1794, i64 0, i32 6, !dbg !8977
  %bf.load1796 = load i32, i32* %mode1795, align 4, !dbg !8977
  %bf.lshr1797 = lshr i32 %bf.load1796, 16, !dbg !8977
  %bf.clear1798 = and i32 %bf.lshr1797, 255, !dbg !8977
  br label %cond.end1827, !dbg !8977

cond.false1801:                                   ; preds = %cond.end1771
  %154 = load i64*, i64** %126, align 8, !dbg !8977
  %bf.load1805 = load i64, i64* %154, align 8, !dbg !8977
  %bf.cast180722 = and i64 %bf.load1805, 65535, !dbg !8977
  %cmp1808 = icmp eq i64 %bf.cast180722, 14, !dbg !8977
  br i1 %cmp1808, label %cond.true1810, label %cond.false1814, !dbg !8977

cond.true1810:                                    ; preds = %cond.false1801
  %.cast23 = bitcast i64* %154 to %union.tree_node*, !dbg !8977
  %call1813 = tail call i32 @vector_type_mode(%union.tree_node* %.cast23) #7, !dbg !8977
  br label %cond.end1822, !dbg !8977

cond.false1814:                                   ; preds = %cond.false1801
  %type1817 = bitcast i64* %154 to %struct.tree_type*, !dbg !8977
  %mode1818 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type1817, i64 0, i32 6, !dbg !8977
  %bf.load1819 = load i32, i32* %mode1818, align 4, !dbg !8977
  %bf.lshr1820 = lshr i32 %bf.load1819, 16, !dbg !8977
  %bf.clear1821 = and i32 %bf.lshr1820, 255, !dbg !8977
  br label %cond.end1822, !dbg !8977

cond.end1822:                                     ; preds = %cond.false1814, %cond.true1810
  %cond1823 = phi i32 [ %call1813, %cond.true1810 ], [ %bf.clear1821, %cond.false1814 ], !dbg !8977
  %idxprom1824 = zext i32 %cond1823 to i64, !dbg !8977
  %arrayidx1825 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1824, !dbg !8977
  %155 = load i8, i8* %arrayidx1825, align 1, !dbg !8977
  %conv1826 = zext i8 %155 to i32, !dbg !8977
  br label %cond.end1827, !dbg !8977

cond.end1827:                                     ; preds = %cond.true1787, %cond.false1791, %cond.end1822
  %cond1828 = phi i32 [ %conv1826, %cond.end1822 ], [ %call1790, %cond.true1787 ], [ %bf.clear1798, %cond.false1791 ], !dbg !8977
  br label %cond.end1830, !dbg !8977

cond.end1830:                                     ; preds = %cond.end1827, %cond.end1718
  %cond1831.in = phi i32 [ %cond1719, %cond.end1718 ], [ %cond1828, %cond.end1827 ]
  %cond1831 = add i32 %cond1831.in, -38, !dbg !8977
  %idxprom1832 = zext i32 %cond1831 to i64, !dbg !8977
  %arrayidx1833 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1832, !dbg !8977
  %156 = load %struct.real_format*, %struct.real_format** %arrayidx1833, align 8, !dbg !8977
  %has_nans1834 = getelementptr inbounds %struct.real_format, %struct.real_format* %156, i64 0, i32 11, !dbg !8977
  %157 = load i8, i8* %has_nans1834, align 2, !dbg !8977
  %tobool1836 = icmp eq i8 %157, 0, !dbg !8977
  %158 = load i32, i32* @flag_finite_math_only, align 4, !dbg !8977
  %tobool1838 = icmp ne i32 %158, 0, !dbg !8977
  %or.cond4 = or i1 %tobool1836, %tobool1838, !dbg !8977
  br i1 %or.cond4, label %if.then1839, label %if.end1841, !dbg !8977

if.then1839:                                      ; preds = %cond.end1830, %cond.end1494
  %159 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8979
  %call1840 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %159, %union.tree_node* %arg) #7, !dbg !8980
  br label %cleanup, !dbg !8981

if.end1841:                                       ; preds = %cond.end1830
  %160 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !8982
  %bf.load1843 = load i64, i64* %160, align 8, !dbg !8982
  %bf.cast184524 = and i64 %bf.load1843, 65535, !dbg !8984
  %cmp1846 = icmp eq i64 %bf.cast184524, 24, !dbg !8984
  br i1 %cmp1846, label %if.then1848, label %if.end1858, !dbg !8985

if.then1848:                                      ; preds = %if.end1841
  %real_cst_ptr1850 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !8986
  %161 = bitcast i32* %real_cst_ptr1850 to i8**, !dbg !8986
  %162 = load i8*, i8** %161, align 8, !dbg !8986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 %162, i64 32, i1 false), !dbg !8986
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !8914, metadata !DIExpression(DW_OP_deref)), !dbg !8924
  %call1851 = call zeroext i8 @real_isnan(%struct.real_value* nonnull %r) #7, !dbg !8988
  %tobool1853 = icmp eq i8 %call1851, 0, !dbg !8988
  %163 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !8988
  %164 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !8988
  %cond1857 = select i1 %tobool1853, %union.tree_node* %164, %union.tree_node* %163, !dbg !8988
  br label %cleanup, !dbg !8988

if.end1858:                                       ; preds = %if.end1841
  %call1859 = tail call fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %arg) #8, !dbg !8989
  call void @llvm.dbg.value(metadata %union.tree_node* %call1859, metadata !8911, metadata !DIExpression()), !dbg !8924
  %call1860 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 103, %union.tree_node* %2, %union.tree_node* %call1859, %union.tree_node* %call1859) #7, !dbg !8990
  br label %cleanup, !dbg !8991

sw.default:                                       ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.724, i64 0, i64 0), i32 9559, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !8992
  br label %cleanup, !dbg !8993

cleanup:                                          ; preds = %entry, %if.then1848, %if.end1371, %if.then1378, %sw.bb454, %if.then462, %if.end435, %if.then445, %sw.default, %if.end1858, %if.then1839, %if.then1369, %if.else, %if.then433
  %retval.0 = phi %union.tree_node* [ null, %sw.default ], [ %call1840, %if.then1839 ], [ %call1860, %if.end1858 ], [ %call1370, %if.then1369 ], [ %call434, %if.then433 ], [ %43, %if.else ], [ null, %entry ], [ %cond452, %if.then445 ], [ null, %if.end435 ], [ %call468, %if.then462 ], [ null, %sw.bb454 ], [ %cond1387, %if.then1378 ], [ null, %if.end1371 ], [ %cond1857, %if.then1848 ], !dbg !8924
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #6, !dbg !8994
  ret %union.tree_node* %retval.0, !dbg !8994
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_interclass_mathfn(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg) unnamed_addr #5 !dbg !8995 {
entry:
  %r = alloca %struct.real_value, align 8
  %buf = alloca [128 x i8], align 16
  %r37 = alloca %struct.real_value, align 8
  %buf38 = alloca [128 x i8], align 16
  %rmax = alloca %struct.real_value, align 8
  %rmin = alloca %struct.real_value, align 8
  %buf64 = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %loc, metadata !8997, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !8998, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !8999, metadata !DIExpression()), !dbg !9022
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg, i32 9) #8, !dbg !9023
  %tobool = icmp eq i8 %call, 0, !dbg !9023
  br i1 %tobool, label %cleanup, label %if.end, !dbg !9025

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc i32 @interclass_mathfn_icode(%union.tree_node* %arg, %union.tree_node* %fndecl) #8, !dbg !9026
  %cmp = icmp eq i32 %call1, 2956, !dbg !9028
  br i1 %cmp, label %if.end3, label %cleanup, !dbg !9029

if.end3:                                          ; preds = %if.end
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9030
  %0 = bitcast %union.tree_node** %type to i64**, !dbg !9030
  %1 = load i64*, i64** %0, align 8, !dbg !9030
  %bf.load = load i64, i64* %1, align 8, !dbg !9030
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9030
  %cmp4 = icmp eq i64 %bf.cast1, 14, !dbg !9030
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !9030

cond.true:                                        ; preds = %if.end3
  %.cast = bitcast i64* %1 to %union.tree_node*, !dbg !9030
  %call7 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !9030
  br label %cond.end, !dbg !9030

cond.false:                                       ; preds = %if.end3
  %type10 = bitcast i64* %1 to %struct.tree_type*, !dbg !9030
  %mode11 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type10, i64 0, i32 6, !dbg !9030
  %bf.load12 = load i32, i32* %mode11, align 4, !dbg !9030
  %bf.lshr = lshr i32 %bf.load12, 16, !dbg !9030
  %bf.clear13 = and i32 %bf.lshr, 255, !dbg !9030
  br label %cond.end, !dbg !9030

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call7, %cond.true ], [ %bf.clear13, %cond.false ], !dbg !9030
  call void @llvm.dbg.value(metadata i32 %cond, metadata !9000, metadata !DIExpression()), !dbg !9022
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !9031
  %bf.load14 = load i32, i32* %function_code, align 8, !dbg !9031
  %bf.clear15 = and i32 %bf.load14, 2047, !dbg !9031
  switch i32 %bf.clear15, label %cleanup [
    i32 469, label %sw.bb
    i32 470, label %sw.bb
    i32 471, label %sw.bb
    i32 460, label %sw.bb33
    i32 461, label %sw.bb33
    i32 462, label %sw.bb33
    i32 467, label %sw.bb33
    i32 481, label %sw.bb59
  ], !dbg !9032

sw.bb:                                            ; preds = %cond.end, %cond.end, %cond.end
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 482), align 16, !dbg !9033
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !9001, metadata !DIExpression()), !dbg !9034
  %3 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9035
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !9004, metadata !DIExpression()), !dbg !9034
  %4 = bitcast %struct.real_value* %r to i8*, !dbg !9036
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #6, !dbg !9036
  %5 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !9037
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %5) #6, !dbg !9037
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !9006, metadata !DIExpression()), !dbg !9038
  %cond25 = add i32 %cond, -38, !dbg !9039
  %idxprom26 = zext i32 %cond25 to i64, !dbg !9039
  %arrayidx27 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom26, !dbg !9039
  %6 = load %struct.real_format*, %struct.real_format** %arrayidx27, align 8, !dbg !9039
  call void @get_max_float(%struct.real_format* %6, i8* nonnull %5, i64 128) #7, !dbg !9040
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !9005, metadata !DIExpression(DW_OP_deref)), !dbg !9034
  %call29 = call i32 @real_from_string(%struct.real_value* nonnull %r, i8* nonnull %5) #7, !dbg !9041
  %call30 = call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 82, %union.tree_node* %3, %union.tree_node* %arg) #7, !dbg !9042
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !9005, metadata !DIExpression(DW_OP_deref)), !dbg !9034
  %call31 = call %union.tree_node* @build_real(%union.tree_node* %3, %struct.real_value* nonnull byval(%struct.real_value) align 8 %r) #7, !dbg !9042
  %call32 = call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 0, %union.tree_node* %2, i32 2, %union.tree_node* %call30, %union.tree_node* %call31) #8, !dbg !9042
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %5) #6, !dbg !9043
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #6, !dbg !9043
  br label %cleanup

sw.bb33:                                          ; preds = %cond.end, %cond.end, %cond.end, %cond.end
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 485), align 8, !dbg !9044
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !9010, metadata !DIExpression()), !dbg !9045
  %8 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9046
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !9012, metadata !DIExpression()), !dbg !9045
  %9 = bitcast %struct.real_value* %r37 to i8*, !dbg !9047
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6, !dbg !9047
  %10 = getelementptr inbounds [128 x i8], [128 x i8]* %buf38, i64 0, i64 0, !dbg !9048
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #6, !dbg !9048
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf38, metadata !9014, metadata !DIExpression()), !dbg !9049
  %cond50 = add i32 %cond, -38, !dbg !9050
  %idxprom51 = zext i32 %cond50 to i64, !dbg !9050
  %arrayidx52 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom51, !dbg !9050
  %11 = load %struct.real_format*, %struct.real_format** %arrayidx52, align 8, !dbg !9050
  call void @get_max_float(%struct.real_format* %11, i8* nonnull %10, i64 128) #7, !dbg !9051
  call void @llvm.dbg.value(metadata %struct.real_value* %r37, metadata !9013, metadata !DIExpression(DW_OP_deref)), !dbg !9045
  %call55 = call i32 @real_from_string(%struct.real_value* nonnull %r37, i8* nonnull %10) #7, !dbg !9052
  %call56 = call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 82, %union.tree_node* %8, %union.tree_node* %arg) #7, !dbg !9053
  call void @llvm.dbg.value(metadata %struct.real_value* %r37, metadata !9013, metadata !DIExpression(DW_OP_deref)), !dbg !9045
  %call57 = call %union.tree_node* @build_real(%union.tree_node* %8, %struct.real_value* nonnull byval(%struct.real_value) align 8 %r37) #7, !dbg !9053
  %call58 = call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 0, %union.tree_node* %7, i32 2, %union.tree_node* %call56, %union.tree_node* %call57) #8, !dbg !9053
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #6, !dbg !9054
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6, !dbg !9054
  br label %cleanup

sw.bb59:                                          ; preds = %cond.end
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 485), align 8, !dbg !9055
  call void @llvm.dbg.value(metadata %union.tree_node* %12, metadata !9015, metadata !DIExpression()), !dbg !9056
  %13 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 483), align 8, !dbg !9057
  call void @llvm.dbg.value(metadata %union.tree_node* %13, metadata !9017, metadata !DIExpression()), !dbg !9056
  %14 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9058
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !9018, metadata !DIExpression()), !dbg !9056
  %15 = bitcast %struct.real_value* %rmax to i8*, !dbg !9059
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #6, !dbg !9059
  %16 = bitcast %struct.real_value* %rmin to i8*, !dbg !9059
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #6, !dbg !9059
  %17 = getelementptr inbounds [128 x i8], [128 x i8]* %buf64, i64 0, i64 0, !dbg !9060
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %17) #6, !dbg !9060
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf64, metadata !9021, metadata !DIExpression()), !dbg !9061
  %cond76 = add i32 %cond, -38, !dbg !9062
  %idxprom77 = zext i32 %cond76 to i64, !dbg !9062
  %arrayidx78 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom77, !dbg !9062
  %18 = load %struct.real_format*, %struct.real_format** %arrayidx78, align 8, !dbg !9062
  call void @get_max_float(%struct.real_format* %18, i8* nonnull %17, i64 128) #7, !dbg !9063
  call void @llvm.dbg.value(metadata %struct.real_value* %rmax, metadata !9019, metadata !DIExpression(DW_OP_deref)), !dbg !9056
  %call81 = call i32 @real_from_string(%struct.real_value* nonnull %rmax, i8* nonnull %17) #7, !dbg !9064
  %19 = load %struct.real_format*, %struct.real_format** %arrayidx78, align 8, !dbg !9065
  %emin = getelementptr inbounds %struct.real_format, %struct.real_format* %19, i64 0, i32 5, !dbg !9066
  %20 = load i32, i32* %emin, align 4, !dbg !9066
  %sub97 = add nsw i32 %20, -1, !dbg !9067
  %call98 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.739, i64 0, i64 0), i32 %sub97) #7, !dbg !9068
  call void @llvm.dbg.value(metadata %struct.real_value* %rmin, metadata !9020, metadata !DIExpression(DW_OP_deref)), !dbg !9056
  %call100 = call i32 @real_from_string(%struct.real_value* nonnull %rmin, i8* nonnull %17) #7, !dbg !9069
  %call101 = call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 82, %union.tree_node* %14, %union.tree_node* %arg) #7, !dbg !9070
  %call102 = call fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %call101) #8, !dbg !9071
  call void @llvm.dbg.value(metadata %union.tree_node* %call102, metadata !8999, metadata !DIExpression()), !dbg !9022
  call void @llvm.dbg.value(metadata %struct.real_value* %rmax, metadata !9019, metadata !DIExpression(DW_OP_deref)), !dbg !9056
  %call103 = call %union.tree_node* @build_real(%union.tree_node* %14, %struct.real_value* nonnull byval(%struct.real_value) align 8 %rmax) #7, !dbg !9072
  %call104 = call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 0, %union.tree_node* %12, i32 2, %union.tree_node* %call102, %union.tree_node* %call103) #8, !dbg !9072
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9073
  call void @llvm.dbg.value(metadata %struct.real_value* %rmin, metadata !9020, metadata !DIExpression(DW_OP_deref)), !dbg !9056
  %call105 = call %union.tree_node* @build_real(%union.tree_node* %14, %struct.real_value* nonnull byval(%struct.real_value) align 8 %rmin) #7, !dbg !9073
  %call106 = call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 0, %union.tree_node* %13, i32 2, %union.tree_node* %call102, %union.tree_node* %call105) #8, !dbg !9073
  %call107 = call %union.tree_node* @fold_build2_stat_loc(i32 0, i32 89, %union.tree_node* %21, %union.tree_node* %call104, %union.tree_node* %call106) #7, !dbg !9073
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %17) #6, !dbg !9074
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #6, !dbg !9074
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #6, !dbg !9074
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry, %cond.end, %sw.bb59, %sw.bb33, %sw.bb
  %retval.0 = phi %union.tree_node* [ %call107, %sw.bb59 ], [ %call58, %sw.bb33 ], [ %call32, %sw.bb ], [ null, %entry ], [ null, %if.end ], [ null, %cond.end ], !dbg !9022
  ret %union.tree_node* %retval.0, !dbg !9075
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_printf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %fmt, %union.tree_node* %arg, i8 zeroext %ignore, i32 %fcode) unnamed_addr #5 !dbg !9076 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9080, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !9081, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata %union.tree_node* %fmt, metadata !9082, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !9083, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !9084, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i32 %fcode, metadata !9085, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !9089, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata i8* null, metadata !9090, metadata !DIExpression()), !dbg !9100
  %tobool = icmp eq i8 %ignore, 0, !dbg !9101
  br i1 %tobool, label %cleanup145, label %if.end, !dbg !9103

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %fmt, i32 10) #8, !dbg !9104
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9104
  br i1 %tobool2, label %cleanup145, label %if.end4, !dbg !9106

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc i8* @c_getstr(%union.tree_node* %fmt) #8, !dbg !9107
  call void @llvm.dbg.value(metadata i8* %call5, metadata !9090, metadata !DIExpression()), !dbg !9100
  %cmp = icmp eq i8* %call5, null, !dbg !9108
  br i1 %cmp, label %cleanup145, label %if.end7, !dbg !9110

if.end7:                                          ; preds = %if.end4
  %cmp8 = icmp eq i32 %fcode, 366, !dbg !9111
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 368), align 16, !dbg !9113
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 370), align 16, !dbg !9113
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 367), align 8, !dbg !9113
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 369), align 8, !dbg !9113
  %fn_putchar.0 = select i1 %cmp8, %union.tree_node* %0, %union.tree_node* %2, !dbg !9113
  %fn_puts.0 = select i1 %cmp8, %union.tree_node* %1, %union.tree_node* %3, !dbg !9113
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_puts.0, metadata !9087, metadata !DIExpression()), !dbg !9100
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_putchar.0, metadata !9086, metadata !DIExpression()), !dbg !9100
  %call11 = tail call fastcc zeroext i8 @init_target_chars() #8, !dbg !9114
  %tobool12 = icmp eq i8 %call11, 0, !dbg !9114
  br i1 %tobool12, label %cleanup145, label %if.end14, !dbg !9116

if.end14:                                         ; preds = %if.end7
  %call15 = tail call i32 @strcmp(i8* nonnull %call5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !9117
  %cmp16 = icmp eq i32 %call15, 0, !dbg !9118
  br i1 %cmp16, label %if.then20, label %lor.lhs.false, !dbg !9119

lor.lhs.false:                                    ; preds = %if.end14
  %4 = load i64, i64* @target_percent, align 8, !dbg !9120
  %conv = trunc i64 %4 to i32, !dbg !9120
  %call17 = tail call i8* @strchr(i8* nonnull %call5, i32 %conv) #7, !dbg !9121
  %cmp18 = icmp eq i8* %call17, null, !dbg !9122
  br i1 %cmp18, label %if.then20, label %if.else96, !dbg !9123

if.then20:                                        ; preds = %lor.lhs.false, %if.end14
  %call21 = tail call i32 @strcmp(i8* nonnull %call5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !9124
  %cmp22 = icmp eq i32 %call21, 0, !dbg !9126
  br i1 %cmp22, label %if.then24, label %if.else43, !dbg !9127

if.then24:                                        ; preds = %if.then20
  switch i32 %fcode, label %if.end31 [
    i32 377, label %cleanup93
    i32 545, label %cleanup93
  ], !dbg !9128

if.end31:                                         ; preds = %if.then24
  %tobool32 = icmp eq %union.tree_node* %arg, null, !dbg !9131
  br i1 %tobool32, label %cleanup93, label %lor.lhs.false33, !dbg !9133

lor.lhs.false33:                                  ; preds = %if.end31
  %call34 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* nonnull %arg, i32 10) #8, !dbg !9134
  %tobool35 = icmp eq i8 %call34, 0, !dbg !9134
  br i1 %tobool35, label %cleanup93, label %if.end37, !dbg !9135

if.end37:                                         ; preds = %lor.lhs.false33
  %call38 = tail call fastcc i8* @c_getstr(%union.tree_node* nonnull %arg) #8, !dbg !9136
  call void @llvm.dbg.value(metadata i8* %call38, metadata !9091, metadata !DIExpression()), !dbg !9137
  %cmp39 = icmp eq i8* %call38, null, !dbg !9138
  br i1 %cmp39, label %cleanup93, label %if.end52, !dbg !9140

if.else43:                                        ; preds = %if.then20
  switch i32 %fcode, label %land.lhs.true48 [
    i32 377, label %if.end52
    i32 545, label %if.end52
  ], !dbg !9141

land.lhs.true48:                                  ; preds = %if.else43
  %tobool49 = icmp eq %union.tree_node* %arg, null, !dbg !9144
  br i1 %tobool49, label %if.end52, label %cleanup93, !dbg !9145

if.end52:                                         ; preds = %land.lhs.true48, %if.else43, %if.else43, %if.end37
  %str.0 = phi i8* [ %call38, %if.end37 ], [ %call5, %if.else43 ], [ %call5, %if.else43 ], [ %call5, %land.lhs.true48 ], !dbg !9146
  call void @llvm.dbg.value(metadata i8* %str.0, metadata !9091, metadata !DIExpression()), !dbg !9137
  %5 = load i8, i8* %str.0, align 1, !dbg !9147
  %cmp54 = icmp eq i8 %5, 0, !dbg !9149
  br i1 %cmp54, label %if.then56, label %if.end60, !dbg !9150

if.then56:                                        ; preds = %if.end52
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9151
  %6 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !9151
  %7 = load %struct.tree_common*, %struct.tree_common** %6, align 8, !dbg !9151
  %type58 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %7, i64 0, i32 2, !dbg !9151
  %8 = load %union.tree_node*, %union.tree_node** %type58, align 8, !dbg !9151
  %call59 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %8, i64 0) #7, !dbg !9152
  br label %cleanup93, !dbg !9153

if.end60:                                         ; preds = %if.end52
  %arrayidx61 = getelementptr inbounds i8, i8* %str.0, i64 1, !dbg !9154
  %9 = load i8, i8* %arrayidx61, align 1, !dbg !9154
  %cmp63 = icmp eq i8 %9, 0, !dbg !9155
  br i1 %cmp63, label %if.then65, label %if.else73, !dbg !9156

if.then65:                                        ; preds = %if.end60
  %conv67 = sext i8 %5 to i64, !dbg !9157
  %call68 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv67) #7, !dbg !9159
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !9088, metadata !DIExpression()), !dbg !9100
  %tobool69 = icmp eq %union.tree_node* %fn_putchar.0, null, !dbg !9160
  br i1 %tobool69, label %if.end92, label %if.then70, !dbg !9162

if.then70:                                        ; preds = %if.then65
  %call71 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %fn_putchar.0, i32 1, %union.tree_node* %call68) #8, !dbg !9163
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !9089, metadata !DIExpression()), !dbg !9100
  br label %if.end92, !dbg !9164

if.else73:                                        ; preds = %if.end60
  %call74 = tail call i64 @strlen(i8* %str.0) #7, !dbg !9165
  call void @llvm.dbg.value(metadata i64 %call74, metadata !9094, metadata !DIExpression()), !dbg !9166
  %sub = add i64 %call74, -1, !dbg !9167
  %arrayidx75 = getelementptr inbounds i8, i8* %str.0, i64 %sub, !dbg !9168
  %10 = load i8, i8* %arrayidx75, align 1, !dbg !9168
  %conv76 = zext i8 %10 to i64, !dbg !9169
  %11 = load i64, i64* @target_newline, align 8, !dbg !9170
  %cmp77 = icmp eq i64 %11, %conv76, !dbg !9171
  br i1 %cmp77, label %if.then79, label %cleanup, !dbg !9172

if.then79:                                        ; preds = %if.else73
  %12 = alloca i8, i64 %call74, align 16, !dbg !9173
  call void @llvm.dbg.value(metadata i8* %12, metadata !9097, metadata !DIExpression()), !dbg !9174
  %call81 = call i8* @memcpy(i8* nonnull %12, i8* %str.0, i64 %sub) #7, !dbg !9175
  %arrayidx83 = getelementptr inbounds i8, i8* %12, i64 %sub, !dbg !9176
  store i8 0, i8* %arrayidx83, align 1, !dbg !9177
  %conv84 = trunc i64 %call74 to i32, !dbg !9178
  %call85 = call %union.tree_node* @build_string_literal(i32 %conv84, i8* nonnull %12) #8, !dbg !9179
  call void @llvm.dbg.value(metadata %union.tree_node* %call85, metadata !9088, metadata !DIExpression()), !dbg !9100
  %tobool86 = icmp eq %union.tree_node* %fn_puts.0, null, !dbg !9180
  br i1 %tobool86, label %cleanup, label %if.then87, !dbg !9182

if.then87:                                        ; preds = %if.then79
  %call88 = call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %fn_puts.0, i32 1, %union.tree_node* %call85) #8, !dbg !9183
  call void @llvm.dbg.value(metadata %union.tree_node* %call88, metadata !9089, metadata !DIExpression()), !dbg !9100
  br label %cleanup, !dbg !9184

cleanup:                                          ; preds = %if.then79, %if.then87, %if.else73
  %call.2 = phi %union.tree_node* [ null, %if.else73 ], [ %call88, %if.then87 ], [ null, %if.then79 ], !dbg !9100
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.else73 ], [ 0, %if.then87 ], [ 0, %if.then79 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %call.2, metadata !9089, metadata !DIExpression()), !dbg !9100
  %cond = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond, label %if.end92, label %cleanup93

if.end92:                                         ; preds = %if.then65, %cleanup, %if.then70
  %call.3 = phi %union.tree_node* [ %call71, %if.then70 ], [ null, %if.then65 ], [ %call.2, %cleanup ], !dbg !9185
  call void @llvm.dbg.value(metadata %union.tree_node* %call.3, metadata !9089, metadata !DIExpression()), !dbg !9100
  br label %cleanup93, !dbg !9186

cleanup93:                                        ; preds = %lor.lhs.false33, %if.end31, %land.lhs.true48, %if.end37, %if.then24, %if.then24, %cleanup, %if.end92, %if.then56
  %call.4 = phi %union.tree_node* [ null, %if.then56 ], [ %call.3, %if.end92 ], [ %call.2, %cleanup ], [ null, %if.then24 ], [ null, %if.then24 ], [ null, %lor.lhs.false33 ], [ null, %if.end31 ], [ null, %if.end37 ], [ null, %land.lhs.true48 ], !dbg !9100
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then56 ], [ 0, %if.end92 ], [ %cleanup.dest.slot.0, %cleanup ], [ 1, %if.then24 ], [ 1, %if.then24 ], [ 1, %lor.lhs.false33 ], [ 1, %if.end31 ], [ 1, %if.end37 ], [ 1, %land.lhs.true48 ]
  %retval.2 = phi %union.tree_node* [ %call59, %if.then56 ], [ null, %if.end92 ], [ null, %cleanup ], [ null, %if.then24 ], [ null, %if.then24 ], [ null, %lor.lhs.false33 ], [ null, %if.end31 ], [ null, %if.end37 ], [ null, %land.lhs.true48 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %call.4, metadata !9089, metadata !DIExpression()), !dbg !9100
  %cond1 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond1, label %if.end136, label %cleanup145

if.else96:                                        ; preds = %lor.lhs.false
  switch i32 %fcode, label %if.else103 [
    i32 377, label %cleanup145
    i32 545, label %cleanup145
  ], !dbg !9187

if.else103:                                       ; preds = %if.else96
  %call104 = tail call i32 @strcmp(i8* nonnull %call5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @target_percent_s_newline, i64 0, i64 0)) #7, !dbg !9189
  %cmp105 = icmp eq i32 %call104, 0, !dbg !9191
  br i1 %cmp105, label %if.then107, label %if.else118, !dbg !9192

if.then107:                                       ; preds = %if.else103
  %tobool108 = icmp eq %union.tree_node* %arg, null, !dbg !9193
  br i1 %tobool108, label %cleanup145, label %lor.lhs.false109, !dbg !9196

lor.lhs.false109:                                 ; preds = %if.then107
  %call110 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* nonnull %arg, i32 10) #8, !dbg !9197
  %tobool111 = icmp eq i8 %call110, 0, !dbg !9197
  br i1 %tobool111, label %cleanup145, label %if.end113, !dbg !9198

if.end113:                                        ; preds = %lor.lhs.false109
  %tobool114 = icmp eq %union.tree_node* %fn_puts.0, null, !dbg !9199
  br i1 %tobool114, label %if.end136, label %if.then115, !dbg !9201

if.then115:                                       ; preds = %if.end113
  %call116 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %fn_puts.0, i32 1, %union.tree_node* nonnull %arg) #8, !dbg !9202
  call void @llvm.dbg.value(metadata %union.tree_node* %call116, metadata !9089, metadata !DIExpression()), !dbg !9100
  br label %if.end136, !dbg !9203

if.else118:                                       ; preds = %if.else103
  %call119 = tail call i32 @strcmp(i8* nonnull %call5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_c, i64 0, i64 0)) #7, !dbg !9204
  %cmp120 = icmp eq i32 %call119, 0, !dbg !9206
  br i1 %cmp120, label %if.then122, label %if.end136, !dbg !9207

if.then122:                                       ; preds = %if.else118
  %tobool123 = icmp eq %union.tree_node* %arg, null, !dbg !9208
  br i1 %tobool123, label %cleanup145, label %lor.lhs.false124, !dbg !9211

lor.lhs.false124:                                 ; preds = %if.then122
  %call125 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* nonnull %arg, i32 8) #8, !dbg !9212
  %tobool126 = icmp eq i8 %call125, 0, !dbg !9212
  br i1 %tobool126, label %cleanup145, label %if.end128, !dbg !9213

if.end128:                                        ; preds = %lor.lhs.false124
  %tobool129 = icmp eq %union.tree_node* %fn_putchar.0, null, !dbg !9214
  br i1 %tobool129, label %if.end136, label %if.then130, !dbg !9216

if.then130:                                       ; preds = %if.end128
  %call131 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %fn_putchar.0, i32 1, %union.tree_node* nonnull %arg) #8, !dbg !9217
  call void @llvm.dbg.value(metadata %union.tree_node* %call131, metadata !9089, metadata !DIExpression()), !dbg !9100
  br label %if.end136, !dbg !9218

if.end136:                                        ; preds = %if.end113, %if.end128, %if.else118, %if.then130, %if.then115, %cleanup93
  %call.9 = phi %union.tree_node* [ %call.4, %cleanup93 ], [ %call116, %if.then115 ], [ null, %if.end113 ], [ null, %if.else118 ], [ %call131, %if.then130 ], [ null, %if.end128 ], !dbg !9100
  call void @llvm.dbg.value(metadata %union.tree_node* %call.9, metadata !9089, metadata !DIExpression()), !dbg !9100
  %tobool137 = icmp eq %union.tree_node* %call.9, null, !dbg !9219
  br i1 %tobool137, label %cleanup145, label %if.end139, !dbg !9221

if.end139:                                        ; preds = %if.end136
  %type141 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9222
  %13 = bitcast %union.tree_node** %type141 to %struct.tree_common**, !dbg !9222
  %14 = load %struct.tree_common*, %struct.tree_common** %13, align 8, !dbg !9222
  %type143 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %14, i64 0, i32 2, !dbg !9222
  %15 = load %union.tree_node*, %union.tree_node** %type143, align 8, !dbg !9222
  %call144 = call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %15, %union.tree_node* nonnull %call.9) #7, !dbg !9223
  br label %cleanup145, !dbg !9224

cleanup145:                                       ; preds = %lor.lhs.false109, %if.then107, %lor.lhs.false124, %if.then122, %if.end136, %if.end7, %if.end, %entry, %if.else96, %if.else96, %if.end4, %cleanup93, %if.end139
  %retval.3 = phi %union.tree_node* [ %retval.2, %cleanup93 ], [ %call144, %if.end139 ], [ null, %entry ], [ null, %if.end ], [ null, %if.end4 ], [ null, %if.end7 ], [ null, %if.else96 ], [ null, %if.else96 ], [ null, %lor.lhs.false109 ], [ null, %if.then107 ], [ null, %lor.lhs.false124 ], [ null, %if.then122 ], [ null, %if.end136 ], !dbg !9100
  ret %union.tree_node* %retval.3, !dbg !9225
}

declare dso_local %union.tree_node* @fold_abs_const(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %exp) unnamed_addr #5 !dbg !9226 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !9228, metadata !DIExpression()), !dbg !9229
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9230
  %bf.load = load i64, i64* %0, align 8, !dbg !9230
  %bf.cast1 = and i64 %bf.load, 262144, !dbg !9232
  %cmp = icmp eq i64 %bf.cast1, 0, !dbg !9232
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9233

land.lhs.true:                                    ; preds = %entry
  %bf.cast42 = and i64 %bf.load, 65535, !dbg !9234
  %cmp5 = icmp eq i64 %bf.cast42, 34, !dbg !9234
  br i1 %cmp5, label %return, label %lor.lhs.false, !dbg !9235

lor.lhs.false:                                    ; preds = %land.lhs.true
  %cmp10 = icmp eq i64 %bf.cast42, 32, !dbg !9236
  br i1 %cmp10, label %land.lhs.true11, label %if.end, !dbg !9237

land.lhs.true11:                                  ; preds = %lor.lhs.false
  %bf.cast164 = and i64 %bf.load, 67108864, !dbg !9238
  %tobool = icmp eq i64 %bf.cast164, 0, !dbg !9238
  br i1 %tobool, label %return, label %if.end, !dbg !9239

if.end:                                           ; preds = %land.lhs.true11, %lor.lhs.false, %entry
  %call = tail call %union.tree_node* @save_expr(%union.tree_node* %exp) #7, !dbg !9240
  br label %return, !dbg !9241

return:                                           ; preds = %land.lhs.true11, %land.lhs.true, %if.end
  %retval.0 = phi %union.tree_node* [ %call, %if.end ], [ %exp, %land.lhs.true11 ], [ %exp, %land.lhs.true ], !dbg !9229
  ret %union.tree_node* %retval.0, !dbg !9242
}

declare dso_local %union.tree_node* @save_expr(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @real_nan(%struct.real_value*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare dso_local zeroext i8 @real_isnan(%struct.real_value*) local_unnamed_addr #2

declare dso_local void @real_floor(%struct.real_value*, i32, %struct.real_value*) local_unnamed_addr #2

declare dso_local zeroext i8 @tree_expr_nonnegative_p(%union.tree_node*) local_unnamed_addr #2

declare dso_local void @real_ceil(%struct.real_value*, i32, %struct.real_value*) local_unnamed_addr #2

declare dso_local void @real_trunc(%struct.real_value*, i32, %struct.real_value*) local_unnamed_addr #2

declare dso_local void @real_round(%struct.real_value*, i32, %struct.real_value*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %t) unnamed_addr #5 !dbg !9243 {
entry:
  br label %tailrecurse, !dbg !9249

tailrecurse:                                      ; preds = %tailrecurse.backedge, %entry
  %t.tr = phi %union.tree_node* [ %t, %entry ], [ %t.tr.be, %tailrecurse.backedge ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr, metadata !9245, metadata !DIExpression()), !dbg !9250
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9251
  %bf.load = load i64, i64* %0, align 8, !dbg !9251
  %1 = trunc i64 %bf.load to i16, !dbg !9251
  switch i16 %1, label %sw.epilog97.loopexit [
    i16 78, label %return.loopexit
    i16 82, label %sw.bb1
    i16 120, label %sw.bb1
    i16 52, label %sw.bb2
    i16 53, label %sw.bb2
    i16 58, label %sw.bb2
    i16 63, label %sw.bb7
    i16 64, label %sw.bb7
    i16 65, label %sw.bb7
    i16 80, label %sw.bb7
    i16 81, label %sw.bb7
    i16 56, label %sw.bb19
    i16 24, label %sw.bb36
    i16 116, label %sw.bb51
    i16 59, label %sw.bb76
  ], !dbg !9252

sw.bb1:                                           ; preds = %tailrecurse, %tailrecurse
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9253
  br label %tailrecurse.backedge, !dbg !9249

tailrecurse.backedge:                             ; preds = %sw.bb1, %sw.bb2
  %t.tr.be.in = phi %union.tree_node** [ %operands, %sw.bb1 ], [ %arrayidx5, %sw.bb2 ]
  %t.tr.be = load %union.tree_node*, %union.tree_node** %t.tr.be.in, align 8, !dbg !9254
  br label %tailrecurse, !dbg !9250

sw.bb2:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse
  %operands4 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9255
  %arrayidx5 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands4, i64 1, !dbg !9255
  br label %tailrecurse.backedge, !dbg !9256

sw.bb7:                                           ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  %t.tr.lcssa19 = phi %union.tree_node* [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ], [ %t.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa19, metadata !9245, metadata !DIExpression()), !dbg !9250
  %operands9 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9257
  %2 = load %union.tree_node*, %union.tree_node** %operands9, align 8, !dbg !9257
  %call11 = tail call fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %2) #8, !dbg !9258
  %tobool = icmp eq i8 %call11, 0, !dbg !9258
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !9259

land.rhs:                                         ; preds = %sw.bb7
  %arrayidx14 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands9, i64 1, !dbg !9260
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx14, align 8, !dbg !9260
  %call15 = tail call fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %3) #8, !dbg !9261
  %tobool17 = icmp ne i8 %call15, 0, !dbg !9259
  %phitmp5 = zext i1 %tobool17 to i8
  br label %land.end

land.end:                                         ; preds = %sw.bb7, %land.rhs
  %4 = phi i8 [ 0, %sw.bb7 ], [ %phitmp5, %land.rhs ]
  br label %return, !dbg !9262

sw.bb19:                                          ; preds = %tailrecurse
  %t.tr.lcssa20 = phi %union.tree_node* [ %t.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa20, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa20, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa20, metadata !9245, metadata !DIExpression()), !dbg !9250
  %operands21 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9263
  %arrayidx22 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands21, i64 1, !dbg !9263
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx22, align 8, !dbg !9263
  %call23 = tail call fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %5) #8, !dbg !9264
  %tobool25 = icmp eq i8 %call23, 0, !dbg !9264
  br i1 %tobool25, label %land.end33, label %land.rhs26, !dbg !9265

land.rhs26:                                       ; preds = %sw.bb19
  %arrayidx29 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands21, i64 2, !dbg !9266
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx29, align 8, !dbg !9266
  %call30 = tail call fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %6) #8, !dbg !9267
  %tobool32 = icmp ne i8 %call30, 0, !dbg !9265
  %phitmp4 = zext i1 %tobool32 to i8
  br label %land.end33

land.end33:                                       ; preds = %sw.bb19, %land.rhs26
  %7 = phi i8 [ 0, %sw.bb19 ], [ %phitmp4, %land.rhs26 ]
  br label %return, !dbg !9268

sw.bb36:                                          ; preds = %tailrecurse
  %t.tr.lcssa21 = phi %union.tree_node* [ %t.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa21, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa21, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa21, metadata !9245, metadata !DIExpression()), !dbg !9250
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9269
  %8 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !9269
  %9 = load %struct.real_value*, %struct.real_value** %8, align 8, !dbg !9269
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9270
  %10 = bitcast %union.tree_node** %type to i64**, !dbg !9270
  %11 = load i64*, i64** %10, align 8, !dbg !9270
  %bf.load38 = load i64, i64* %11, align 8, !dbg !9270
  %bf.cast403 = and i64 %bf.load38, 65535, !dbg !9270
  %cmp = icmp eq i64 %bf.cast403, 14, !dbg !9270
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9270

cond.true:                                        ; preds = %sw.bb36
  %.cast = bitcast i64* %11 to %union.tree_node*, !dbg !9270
  %call44 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !9270
  br label %cond.end, !dbg !9270

cond.false:                                       ; preds = %sw.bb36
  %type47 = bitcast i64* %11 to %struct.tree_type*, !dbg !9270
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type47, i64 0, i32 6, !dbg !9270
  %bf.load48 = load i32, i32* %mode, align 4, !dbg !9270
  %bf.lshr = lshr i32 %bf.load48, 16, !dbg !9270
  %bf.clear49 = and i32 %bf.lshr, 255, !dbg !9270
  br label %cond.end, !dbg !9270

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call44, %cond.true ], [ %bf.clear49, %cond.false ], !dbg !9270
  %call50 = tail call zeroext i8 @real_isinteger(%struct.real_value* %9, i32 %cond) #7, !dbg !9271
  br label %return, !dbg !9272

sw.bb51:                                          ; preds = %tailrecurse
  %t.tr.lcssa22 = phi %union.tree_node* [ %t.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa22, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa22, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa22, metadata !9245, metadata !DIExpression()), !dbg !9250
  %operands54 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9273
  %12 = bitcast %union.tree_node** %operands54 to %struct.tree_common**, !dbg !9273
  %13 = load %struct.tree_common*, %struct.tree_common** %12, align 8, !dbg !9273
  %type57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %13, i64 0, i32 2, !dbg !9273
  %14 = load %union.tree_node*, %union.tree_node** %type57, align 8, !dbg !9273
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !9246, metadata !DIExpression()), !dbg !9274
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9275
  %bf.load59 = load i64, i64* %15, align 8, !dbg !9275
  %bf.cast611 = and i64 %bf.load59, 65535, !dbg !9277
  %cmp62 = icmp eq i64 %bf.cast611, 8, !dbg !9277
  %16 = bitcast %struct.tree_common* %13 to %union.tree_node*, !dbg !9278
  br i1 %cmp62, label %cleanup, label %if.end, !dbg !9278

if.end:                                           ; preds = %sw.bb51
  %cmp68 = icmp eq i64 %bf.cast611, 9, !dbg !9279
  br i1 %cmp68, label %if.then70, label %cleanup, !dbg !9281

if.then70:                                        ; preds = %if.end
  %call74 = tail call fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %16) #8, !dbg !9282
  br label %cleanup, !dbg !9283

cleanup:                                          ; preds = %if.end, %sw.bb51, %if.then70
  %cleanup.dest.slot.0 = phi i1 [ true, %if.then70 ], [ true, %sw.bb51 ], [ false, %if.end ]
  %retval.0 = phi i8 [ %call74, %if.then70 ], [ 1, %sw.bb51 ], [ undef, %if.end ]
  br i1 %cleanup.dest.slot.0, label %return, label %sw.epilog97

sw.bb76:                                          ; preds = %tailrecurse
  %t.tr.lcssa23 = phi %union.tree_node* [ %t.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa23, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa23, metadata !9245, metadata !DIExpression()), !dbg !9250
  call void @llvm.dbg.value(metadata %union.tree_node* %t.tr.lcssa23, metadata !9245, metadata !DIExpression()), !dbg !9250
  %call77 = tail call i32 @builtin_mathfn_code(%union.tree_node* %t.tr.lcssa23) #8, !dbg !9284
  switch i32 %call77, label %sw.epilog97 [
    i32 24, label %return
    i32 25, label %return
    i32 26, label %return
    i32 63, label %return
    i32 64, label %return
    i32 65, label %return
    i32 171, label %return
    i32 172, label %return
    i32 173, label %return
    i32 195, label %return
    i32 196, label %return
    i32 197, label %return
    i32 198, label %return
    i32 199, label %return
    i32 200, label %return
    i32 240, label %return
    i32 241, label %return
    i32 242, label %return
    i32 72, label %sw.bb79
    i32 73, label %sw.bb79
    i32 74, label %sw.bb79
    i32 69, label %sw.bb79
    i32 70, label %sw.bb79
    i32 71, label %sw.bb79
  ], !dbg !9285

sw.bb79:                                          ; preds = %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76
  %operands81 = getelementptr inbounds %union.tree_node, %union.tree_node* %t.tr.lcssa23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !9286
  %arrayidx82 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands81, i64 3, !dbg !9286
  %17 = load %union.tree_node*, %union.tree_node** %arrayidx82, align 8, !dbg !9286
  %call83 = tail call fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %17) #8, !dbg !9288
  %tobool85 = icmp eq i8 %call83, 0, !dbg !9288
  br i1 %tobool85, label %land.end93, label %land.rhs86, !dbg !9289

land.rhs86:                                       ; preds = %sw.bb79
  %arrayidx89 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands81, i64 4, !dbg !9290
  %18 = load %union.tree_node*, %union.tree_node** %arrayidx89, align 8, !dbg !9290
  %call90 = tail call fastcc zeroext i8 @integer_valued_real_p(%union.tree_node* %18) #8, !dbg !9291
  %tobool92 = icmp ne i8 %call90, 0, !dbg !9289
  %phitmp = zext i1 %tobool92 to i8
  br label %land.end93

land.end93:                                       ; preds = %sw.bb79, %land.rhs86
  %19 = phi i8 [ 0, %sw.bb79 ], [ %phitmp, %land.rhs86 ]
  br label %return, !dbg !9292

sw.epilog97.loopexit:                             ; preds = %tailrecurse
  br label %sw.epilog97, !dbg !9293

sw.epilog97:                                      ; preds = %sw.epilog97.loopexit, %sw.bb76, %cleanup
  br label %return, !dbg !9293

return.loopexit:                                  ; preds = %tailrecurse
  br label %return, !dbg !9294

return:                                           ; preds = %return.loopexit, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %sw.bb76, %cleanup, %sw.epilog97, %land.end93, %cond.end, %land.end33, %land.end
  %retval.1 = phi i8 [ 0, %sw.epilog97 ], [ %19, %land.end93 ], [ %retval.0, %cleanup ], [ %call50, %cond.end ], [ %7, %land.end33 ], [ %4, %land.end ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %sw.bb76 ], [ 1, %return.loopexit ], !dbg !9250
  ret i8 %retval.1, !dbg !9294
}

declare dso_local %union.tree_node* @strip_float_extensions(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @real_isinteger(%struct.real_value*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @real_isfinite(%struct.real_value*) local_unnamed_addr #2

declare dso_local void @real_to_integer2(i64*, i64*, %struct.real_value*) local_unnamed_addr #2

declare dso_local i32 @fit_double_type(i64, i64, i64*, i64*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cst_wide(%union.tree_node*, i64, i64) local_unnamed_addr #2

declare dso_local i32 @exact_log2(i64) local_unnamed_addr #2

declare dso_local i32 @floor_log2(i64) local_unnamed_addr #2

declare dso_local zeroext i8 @real_isneg(%struct.real_value*) local_unnamed_addr #2

declare dso_local zeroext i8 @real_isinf(%struct.real_value*) local_unnamed_addr #2

declare dso_local zeroext i8 @real_compare(i32, %struct.real_value*, %struct.real_value*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_build3_stat_loc(i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @interclass_mathfn_icode(%union.tree_node* %arg, %union.tree_node* %fndecl) unnamed_addr #5 !dbg !9295 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !9299, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !9300, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata i8 0, metadata !9301, metadata !DIExpression()), !dbg !9323
  call void @llvm.dbg.value(metadata %struct.optab_d* null, metadata !9302, metadata !DIExpression()), !dbg !9323
  %function_code = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 5, !dbg !9324
  %bf.load = load i32, i32* %function_code, align 8, !dbg !9324
  %bf.clear = and i32 %bf.load, 2047, !dbg !9324
  switch i32 %bf.clear, label %sw.default [
    i32 93, label %sw.epilog
    i32 94, label %sw.epilog
    i32 95, label %sw.epilog
    i32 469, label %sw.bb1
    i32 470, label %sw.bb1
    i32 471, label %sw.bb1
    i32 481, label %sw.bb2
    i32 467, label %sw.bb2
    i32 460, label %sw.bb2
    i32 461, label %sw.bb2
    i32 462, label %sw.bb2
    i32 463, label %sw.bb2
    i32 464, label %sw.bb2
    i32 465, label %sw.bb2
    i32 472, label %sw.bb2
    i32 473, label %sw.bb2
    i32 474, label %sw.bb2
  ], !dbg !9325

sw.bb1:                                           ; preds = %entry, %entry, %entry
  call void @llvm.dbg.value(metadata %struct.optab_d* getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 104), metadata !9302, metadata !DIExpression()), !dbg !9323
  br label %sw.epilog, !dbg !9326

sw.bb2:                                           ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  br label %sw.epilog, !dbg !9328

sw.default:                                       ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.724, i64 0, i64 0), i32 2278, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !9329
  br label %sw.epilog, !dbg !9330

sw.epilog:                                        ; preds = %entry, %entry, %entry, %sw.default, %sw.bb2, %sw.bb1
  %errno_set.0 = phi i1 [ false, %sw.default ], [ false, %sw.bb2 ], [ false, %sw.bb1 ], [ true, %entry ], [ true, %entry ], [ true, %entry ]
  %builtin_optab.0 = phi %struct.optab_d* [ null, %sw.default ], [ null, %sw.bb2 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 104), %sw.bb1 ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 89), %entry ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 89), %entry ], [ getelementptr inbounds ([159 x %struct.optab_d], [159 x %struct.optab_d]* @optab_table, i64 0, i64 89), %entry ], !dbg !9323
  call void @llvm.dbg.value(metadata %struct.optab_d* %builtin_optab.0, metadata !9302, metadata !DIExpression()), !dbg !9323
  %0 = load i32, i32* @flag_errno_math, align 4, !dbg !9331
  %tobool = icmp ne i32 %0, 0, !dbg !9331
  %or.cond = and i1 %tobool, %errno_set.0, !dbg !9333
  br i1 %or.cond, label %cleanup, label %if.end, !dbg !9333

if.end:                                           ; preds = %sw.epilog
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %arg, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9334
  %1 = bitcast %union.tree_node** %type to i64**, !dbg !9334
  %2 = load i64*, i64** %1, align 8, !dbg !9334
  %bf.load4 = load i64, i64* %2, align 8, !dbg !9334
  %bf.cast1 = and i64 %bf.load4, 65535, !dbg !9334
  %cmp = icmp eq i64 %bf.cast1, 14, !dbg !9334
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9334

cond.true:                                        ; preds = %if.end
  %.cast = bitcast i64* %2 to %union.tree_node*, !dbg !9334
  %call = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !9334
  br label %cond.end, !dbg !9334

cond.false:                                       ; preds = %if.end
  %type11 = bitcast i64* %2 to %struct.tree_type*, !dbg !9334
  %mode12 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type11, i64 0, i32 6, !dbg !9334
  %bf.load13 = load i32, i32* %mode12, align 4, !dbg !9334
  %bf.lshr = lshr i32 %bf.load13, 16, !dbg !9334
  %bf.clear14 = and i32 %bf.lshr, 255, !dbg !9334
  br label %cond.end, !dbg !9334

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %bf.clear14, %cond.false ], !dbg !9334
  call void @llvm.dbg.value(metadata i32 %cond, metadata !9322, metadata !DIExpression()), !dbg !9323
  %tobool15 = icmp eq %struct.optab_d* %builtin_optab.0, null, !dbg !9335
  br i1 %tobool15, label %cleanup, label %if.then16, !dbg !9337

if.then16:                                        ; preds = %cond.end
  %idxprom = sext i32 %cond to i64, !dbg !9338
  %insn_code = getelementptr inbounds %struct.optab_d, %struct.optab_d* %builtin_optab.0, i64 0, i32 4, i64 %idxprom, i32 0, !dbg !9339
  %3 = load i32, i32* %insn_code, align 4, !dbg !9339
  br label %cleanup, !dbg !9340

cleanup:                                          ; preds = %cond.end, %sw.epilog, %if.then16
  %retval.0 = phi i32 [ %3, %if.then16 ], [ 2956, %sw.epilog ], [ 2956, %cond.end ], !dbg !9323
  ret i32 %retval.0, !dbg !9341
}

declare dso_local void @get_max_float(%struct.real_format*, i8*, i64) local_unnamed_addr #2

declare dso_local i32 @real_from_string(%struct.real_value*, i8*) local_unnamed_addr #2

declare dso_local i32 @sprintf(i8*, i8*, ...) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_hypot(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %type) unnamed_addr #5 !dbg !9342 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9344, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !9345, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !9346, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !9347, metadata !DIExpression()), !dbg !9349
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9348, metadata !DIExpression()), !dbg !9349
  ret %union.tree_node* undef, !dbg !9350
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_load_exponent(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %type, i8 zeroext %ldexp) unnamed_addr #5 !dbg !9351 {
entry:
  %initial_result = alloca %struct.real_value, align 8
  %trunc_result = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9353, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !9354, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !9355, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9356, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.value(metadata i8 %ldexp, metadata !9357, metadata !DIExpression()), !dbg !9371
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 9) #8, !dbg !9372
  %tobool = icmp eq i8 %call, 0, !dbg !9372
  br i1 %tobool, label %if.end264, label %land.lhs.true, !dbg !9373

land.lhs.true:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 8) #8, !dbg !9374
  %tobool3 = icmp eq i8 %call1, 0, !dbg !9374
  br i1 %tobool3, label %if.end264, label %if.then, !dbg !9375

if.then:                                          ; preds = %land.lhs.true
  %call4 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %arg0) #7, !dbg !9376
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !9354, metadata !DIExpression()), !dbg !9371
  %call5 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %arg1) #7, !dbg !9377
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !9355, metadata !DIExpression()), !dbg !9371
  %call6 = tail call i32 @real_zerop(%union.tree_node* %call4) #7, !dbg !9378
  %tobool7 = icmp eq i32 %call6, 0, !dbg !9378
  br i1 %tobool7, label %lor.lhs.false, label %if.then15, !dbg !9380

lor.lhs.false:                                    ; preds = %if.then
  %call8 = tail call i32 @integer_zerop(%union.tree_node* %call5) #7, !dbg !9381
  %tobool9 = icmp eq i32 %call8, 0, !dbg !9381
  br i1 %tobool9, label %lor.lhs.false10, label %if.then15, !dbg !9382

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9383
  %bf.load = load i64, i64* %0, align 8, !dbg !9383
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !9384
  %cmp = icmp eq i64 %bf.cast3, 24, !dbg !9384
  br i1 %cmp, label %land.lhs.true12, label %if.end, !dbg !9385

land.lhs.true12:                                  ; preds = %lor.lhs.false10
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9386
  %1 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !9386
  %2 = load %struct.real_value*, %struct.real_value** %1, align 8, !dbg !9386
  %call13 = tail call zeroext i8 @real_isfinite(%struct.real_value* %2) #7, !dbg !9387
  %tobool14 = icmp eq i8 %call13, 0, !dbg !9387
  br i1 %tobool14, label %if.then15, label %if.end, !dbg !9388

if.then15:                                        ; preds = %land.lhs.true12, %lor.lhs.false, %if.then
  %call16 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call4, %union.tree_node* %call5) #7, !dbg !9389
  br label %return, !dbg !9390

if.end:                                           ; preds = %land.lhs.true12, %lor.lhs.false10
  %tobool18 = icmp eq i8 %ldexp, 0, !dbg !9391
  br i1 %tobool18, label %lor.lhs.false19, label %land.lhs.true74, !dbg !9392

lor.lhs.false19:                                  ; preds = %if.end
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9393
  %bf.load21 = load i64, i64* %3, align 8, !dbg !9393
  %bf.cast234 = and i64 %bf.load21, 65535, !dbg !9393
  %cmp24 = icmp eq i64 %bf.cast234, 14, !dbg !9393
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !9393

cond.true:                                        ; preds = %lor.lhs.false19
  %call26 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9393
  %bf.load35.pre = load i64, i64* %3, align 8, !dbg !9393
  br label %cond.end, !dbg !9393

cond.false:                                       ; preds = %lor.lhs.false19
  %type27 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9393
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type27, i64 0, i32 6, !dbg !9393
  %bf.load28 = load i32, i32* %mode, align 4, !dbg !9393
  %bf.lshr = lshr i32 %bf.load28, 16, !dbg !9393
  %bf.clear29 = and i32 %bf.lshr, 255, !dbg !9393
  br label %cond.end, !dbg !9393

cond.end:                                         ; preds = %cond.false, %cond.true
  %bf.load35 = phi i64 [ %bf.load35.pre, %cond.true ], [ %bf.load21, %cond.false ], !dbg !9393
  %cond = phi i32 [ %call26, %cond.true ], [ %bf.clear29, %cond.false ], !dbg !9393
  %idxprom = zext i32 %cond to i64, !dbg !9393
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !9393
  %4 = load i8, i8* %arrayidx, align 1, !dbg !9393
  %cmp31 = icmp eq i8 %4, 9, !dbg !9393
  %bf.cast375 = and i64 %bf.load35, 65535, !dbg !9393
  %cmp38 = icmp eq i64 %bf.cast375, 14, !dbg !9393
  br i1 %cmp31, label %cond.true33, label %cond.false50, !dbg !9393

cond.true33:                                      ; preds = %cond.end
  br i1 %cmp38, label %cond.true40, label %cond.false42, !dbg !9393

cond.true40:                                      ; preds = %cond.true33
  %call41 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9393
  br label %cond.end48, !dbg !9393

cond.false42:                                     ; preds = %cond.true33
  %type43 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9393
  %mode44 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type43, i64 0, i32 6, !dbg !9393
  %bf.load45 = load i32, i32* %mode44, align 4, !dbg !9393
  %bf.lshr46 = lshr i32 %bf.load45, 16, !dbg !9393
  %bf.clear47 = and i32 %bf.lshr46, 255, !dbg !9393
  br label %cond.end48, !dbg !9393

cond.end48:                                       ; preds = %cond.false42, %cond.true40
  %cond49 = phi i32 [ %call41, %cond.true40 ], [ %bf.clear47, %cond.false42 ], !dbg !9393
  br label %cond.end68, !dbg !9393

cond.false50:                                     ; preds = %cond.end
  br i1 %cmp38, label %cond.true57, label %cond.false59, !dbg !9393

cond.true57:                                      ; preds = %cond.false50
  %call58 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9393
  br label %cond.end65, !dbg !9393

cond.false59:                                     ; preds = %cond.false50
  %type60 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9393
  %mode61 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type60, i64 0, i32 6, !dbg !9393
  %bf.load62 = load i32, i32* %mode61, align 4, !dbg !9393
  %bf.lshr63 = lshr i32 %bf.load62, 16, !dbg !9393
  %bf.clear64 = and i32 %bf.lshr63, 255, !dbg !9393
  br label %cond.end65, !dbg !9393

cond.end65:                                       ; preds = %cond.false59, %cond.true57
  %cond66 = phi i32 [ %call58, %cond.true57 ], [ %bf.clear64, %cond.false59 ], !dbg !9393
  br label %cond.end68, !dbg !9393

cond.end68:                                       ; preds = %cond.end65, %cond.end48
  %cond69.in = phi i32 [ %cond49, %cond.end48 ], [ %cond66, %cond.end65 ]
  %cond69 = add i32 %cond69.in, -38, !dbg !9393
  %idxprom70 = zext i32 %cond69 to i64, !dbg !9393
  %arrayidx71 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom70, !dbg !9393
  %5 = load %struct.real_format*, %struct.real_format** %arrayidx71, align 8, !dbg !9393
  %b = getelementptr inbounds %struct.real_format, %struct.real_format* %5, i64 0, i32 2, !dbg !9394
  %6 = load i32, i32* %b, align 8, !dbg !9394
  %cmp72 = icmp eq i32 %6, 2, !dbg !9395
  br i1 %cmp72, label %land.lhs.true74, label %if.end264, !dbg !9396

land.lhs.true74:                                  ; preds = %if.end, %cond.end68
  %bf.load76 = load i64, i64* %0, align 8, !dbg !9397
  %bf.cast786 = and i64 %bf.load76, 65535, !dbg !9398
  %cmp79 = icmp eq i64 %bf.cast786, 24, !dbg !9398
  br i1 %cmp79, label %land.lhs.true81, label %if.end264, !dbg !9399

land.lhs.true81:                                  ; preds = %land.lhs.true74
  %bf.cast867 = and i64 %bf.load76, 134217728, !dbg !9400
  %tobool87 = icmp eq i64 %bf.cast867, 0, !dbg !9400
  br i1 %tobool87, label %land.lhs.true88, label %if.end264, !dbg !9401

land.lhs.true88:                                  ; preds = %land.lhs.true81
  %call89 = tail call i32 @host_integerp(%union.tree_node* %call5, i32 0) #7, !dbg !9402
  %tobool90 = icmp eq i32 %call89, 0, !dbg !9402
  br i1 %tobool90, label %if.end264, label %if.then91, !dbg !9403

if.then91:                                        ; preds = %land.lhs.true88
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9404
  %bf.load93 = load i64, i64* %7, align 8, !dbg !9404
  %bf.cast958 = and i64 %bf.load93, 65535, !dbg !9404
  %cmp96 = icmp eq i64 %bf.cast958, 14, !dbg !9404
  br i1 %cmp96, label %cond.true98, label %cond.false100, !dbg !9404

cond.true98:                                      ; preds = %if.then91
  %call99 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9404
  %bf.load115.pre = load i64, i64* %7, align 8, !dbg !9404
  br label %cond.end106, !dbg !9404

cond.false100:                                    ; preds = %if.then91
  %type101 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9404
  %mode102 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type101, i64 0, i32 6, !dbg !9404
  %bf.load103 = load i32, i32* %mode102, align 4, !dbg !9404
  %bf.lshr104 = lshr i32 %bf.load103, 16, !dbg !9404
  %bf.clear105 = and i32 %bf.lshr104, 255, !dbg !9404
  br label %cond.end106, !dbg !9404

cond.end106:                                      ; preds = %cond.false100, %cond.true98
  %bf.load115 = phi i64 [ %bf.load115.pre, %cond.true98 ], [ %bf.load93, %cond.false100 ], !dbg !9404
  %cond107 = phi i32 [ %call99, %cond.true98 ], [ %bf.clear105, %cond.false100 ], !dbg !9404
  %idxprom108 = zext i32 %cond107 to i64, !dbg !9404
  %arrayidx109 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom108, !dbg !9404
  %8 = load i8, i8* %arrayidx109, align 1, !dbg !9404
  %cmp111 = icmp eq i8 %8, 9, !dbg !9404
  %bf.cast1179 = and i64 %bf.load115, 65535, !dbg !9404
  %cmp118 = icmp eq i64 %bf.cast1179, 14, !dbg !9404
  br i1 %cmp111, label %cond.true113, label %cond.false132, !dbg !9404

cond.true113:                                     ; preds = %cond.end106
  br i1 %cmp118, label %cond.true120, label %cond.false122, !dbg !9404

cond.true120:                                     ; preds = %cond.true113
  %call121 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9404
  br label %cond.end128, !dbg !9404

cond.false122:                                    ; preds = %cond.true113
  %type123 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9404
  %mode124 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type123, i64 0, i32 6, !dbg !9404
  %bf.load125 = load i32, i32* %mode124, align 4, !dbg !9404
  %bf.lshr126 = lshr i32 %bf.load125, 16, !dbg !9404
  %bf.clear127 = and i32 %bf.lshr126, 255, !dbg !9404
  br label %cond.end128, !dbg !9404

cond.end128:                                      ; preds = %cond.false122, %cond.true120
  %cond129 = phi i32 [ %call121, %cond.true120 ], [ %bf.clear127, %cond.false122 ], !dbg !9404
  br label %cond.end150, !dbg !9404

cond.false132:                                    ; preds = %cond.end106
  br i1 %cmp118, label %cond.true139, label %cond.false141, !dbg !9404

cond.true139:                                     ; preds = %cond.false132
  %call140 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9404
  br label %cond.end147, !dbg !9404

cond.false141:                                    ; preds = %cond.false132
  %type142 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9404
  %mode143 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type142, i64 0, i32 6, !dbg !9404
  %bf.load144 = load i32, i32* %mode143, align 4, !dbg !9404
  %bf.lshr145 = lshr i32 %bf.load144, 16, !dbg !9404
  %bf.clear146 = and i32 %bf.lshr145, 255, !dbg !9404
  br label %cond.end147, !dbg !9404

cond.end147:                                      ; preds = %cond.false141, %cond.true139
  %cond148 = phi i32 [ %call140, %cond.true139 ], [ %bf.clear146, %cond.false141 ], !dbg !9404
  br label %cond.end150, !dbg !9404

cond.end150:                                      ; preds = %cond.end147, %cond.end128
  %cond151.in = phi i32 [ %cond129, %cond.end128 ], [ %cond148, %cond.end147 ]
  %cond151 = add i32 %cond151.in, -38, !dbg !9404
  %idxprom152 = zext i32 %cond151 to i64, !dbg !9404
  %arrayidx153 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom152, !dbg !9404
  %9 = load %struct.real_format*, %struct.real_format** %arrayidx153, align 8, !dbg !9404
  %emax = getelementptr inbounds %struct.real_format, %struct.real_format* %9, i64 0, i32 6, !dbg !9405
  %10 = load i32, i32* %emax, align 8, !dbg !9405
  %bf.load155 = load i64, i64* %7, align 8, !dbg !9406
  %bf.cast15710 = and i64 %bf.load155, 65535, !dbg !9406
  %cmp158 = icmp eq i64 %bf.cast15710, 14, !dbg !9406
  br i1 %cmp158, label %cond.true160, label %cond.false162, !dbg !9406

cond.true160:                                     ; preds = %cond.end150
  %call161 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9406
  %bf.load177.pre = load i64, i64* %7, align 8, !dbg !9406
  br label %cond.end168, !dbg !9406

cond.false162:                                    ; preds = %cond.end150
  %type163 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9406
  %mode164 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type163, i64 0, i32 6, !dbg !9406
  %bf.load165 = load i32, i32* %mode164, align 4, !dbg !9406
  %bf.lshr166 = lshr i32 %bf.load165, 16, !dbg !9406
  %bf.clear167 = and i32 %bf.lshr166, 255, !dbg !9406
  br label %cond.end168, !dbg !9406

cond.end168:                                      ; preds = %cond.false162, %cond.true160
  %bf.load177 = phi i64 [ %bf.load177.pre, %cond.true160 ], [ %bf.load155, %cond.false162 ], !dbg !9406
  %cond169 = phi i32 [ %call161, %cond.true160 ], [ %bf.clear167, %cond.false162 ], !dbg !9406
  %idxprom170 = zext i32 %cond169 to i64, !dbg !9406
  %arrayidx171 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom170, !dbg !9406
  %11 = load i8, i8* %arrayidx171, align 1, !dbg !9406
  %cmp173 = icmp eq i8 %11, 9, !dbg !9406
  %bf.cast17911 = and i64 %bf.load177, 65535, !dbg !9406
  %cmp180 = icmp eq i64 %bf.cast17911, 14, !dbg !9406
  br i1 %cmp173, label %cond.true175, label %cond.false194, !dbg !9406

cond.true175:                                     ; preds = %cond.end168
  br i1 %cmp180, label %cond.true182, label %cond.false184, !dbg !9406

cond.true182:                                     ; preds = %cond.true175
  %call183 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9406
  br label %cond.end190, !dbg !9406

cond.false184:                                    ; preds = %cond.true175
  %type185 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9406
  %mode186 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type185, i64 0, i32 6, !dbg !9406
  %bf.load187 = load i32, i32* %mode186, align 4, !dbg !9406
  %bf.lshr188 = lshr i32 %bf.load187, 16, !dbg !9406
  %bf.clear189 = and i32 %bf.lshr188, 255, !dbg !9406
  br label %cond.end190, !dbg !9406

cond.end190:                                      ; preds = %cond.false184, %cond.true182
  %cond191 = phi i32 [ %call183, %cond.true182 ], [ %bf.clear189, %cond.false184 ], !dbg !9406
  br label %cond.end212, !dbg !9406

cond.false194:                                    ; preds = %cond.end168
  br i1 %cmp180, label %cond.true201, label %cond.false203, !dbg !9406

cond.true201:                                     ; preds = %cond.false194
  %call202 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9406
  br label %cond.end209, !dbg !9406

cond.false203:                                    ; preds = %cond.false194
  %type204 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9406
  %mode205 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type204, i64 0, i32 6, !dbg !9406
  %bf.load206 = load i32, i32* %mode205, align 4, !dbg !9406
  %bf.lshr207 = lshr i32 %bf.load206, 16, !dbg !9406
  %bf.clear208 = and i32 %bf.lshr207, 255, !dbg !9406
  br label %cond.end209, !dbg !9406

cond.end209:                                      ; preds = %cond.false203, %cond.true201
  %cond210 = phi i32 [ %call202, %cond.true201 ], [ %bf.clear208, %cond.false203 ], !dbg !9406
  br label %cond.end212, !dbg !9406

cond.end212:                                      ; preds = %cond.end209, %cond.end190
  %cond213.in = phi i32 [ %cond191, %cond.end190 ], [ %cond210, %cond.end209 ]
  %cond213 = add i32 %cond213.in, -38, !dbg !9406
  %idxprom214 = zext i32 %cond213 to i64, !dbg !9406
  %arrayidx215 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom214, !dbg !9406
  %12 = load %struct.real_format*, %struct.real_format** %arrayidx215, align 8, !dbg !9406
  %emin = getelementptr inbounds %struct.real_format, %struct.real_format* %12, i64 0, i32 5, !dbg !9407
  %13 = load i32, i32* %emin, align 4, !dbg !9407
  %sub216 = sub nsw i32 %10, %13, !dbg !9408
  %conv217 = sext i32 %sub216 to i64, !dbg !9404
  %call218 = tail call i64 @labs(i64 %conv217) #7, !dbg !9409
  %mul = shl nsw i64 %call218, 1, !dbg !9410
  call void @llvm.dbg.value(metadata i64 %mul, metadata !9358, metadata !DIExpression()), !dbg !9411
  %call219 = tail call i64 @tree_low_cst(%union.tree_node* %call5, i32 0) #7, !dbg !9412
  call void @llvm.dbg.value(metadata i64 %call219, metadata !9364, metadata !DIExpression()), !dbg !9411
  %sub220 = sub nsw i64 0, %mul, !dbg !9413
  %cmp221 = icmp sgt i64 %call219, %sub220, !dbg !9414
  %cmp224 = icmp slt i64 %call219, %mul, !dbg !9415
  %or.cond = and i1 %cmp221, %cmp224, !dbg !9416
  br i1 %or.cond, label %if.then226, label %if.end258, !dbg !9416

if.then226:                                       ; preds = %cond.end212
  %14 = bitcast %struct.real_value* %initial_result to i8*, !dbg !9417
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #6, !dbg !9417
  %real_cst_ptr228 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9418
  %15 = bitcast i32* %real_cst_ptr228 to %struct.real_value**, !dbg !9418
  %16 = load %struct.real_value*, %struct.real_value** %15, align 8, !dbg !9418
  %conv229 = trunc i64 %call219 to i32, !dbg !9419
  call void @llvm.dbg.value(metadata %struct.real_value* %initial_result, metadata !9365, metadata !DIExpression(DW_OP_deref)), !dbg !9420
  call void @real_ldexp(%struct.real_value* nonnull %initial_result, %struct.real_value* %16, i32 %conv229) #7, !dbg !9421
  call void @llvm.dbg.value(metadata %struct.real_value* %initial_result, metadata !9365, metadata !DIExpression(DW_OP_deref)), !dbg !9420
  %call230 = call zeroext i8 @real_isinf(%struct.real_value* nonnull %initial_result) #7, !dbg !9422
  %tobool231 = icmp eq i8 %call230, 0, !dbg !9422
  br i1 %tobool231, label %if.then232, label %if.end254, !dbg !9423

if.then232:                                       ; preds = %if.then226
  %17 = bitcast %struct.real_value* %trunc_result to i8*, !dbg !9424
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #6, !dbg !9424
  %bf.load234 = load i64, i64* %7, align 8, !dbg !9425
  %bf.cast23612 = and i64 %bf.load234, 65535, !dbg !9425
  %cmp237 = icmp eq i64 %bf.cast23612, 14, !dbg !9425
  br i1 %cmp237, label %cond.true239, label %cond.false241, !dbg !9425

cond.true239:                                     ; preds = %if.then232
  %call240 = call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !9425
  br label %cond.end247, !dbg !9425

cond.false241:                                    ; preds = %if.then232
  %type242 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !9425
  %mode243 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type242, i64 0, i32 6, !dbg !9425
  %bf.load244 = load i32, i32* %mode243, align 4, !dbg !9425
  %bf.lshr245 = lshr i32 %bf.load244, 16, !dbg !9425
  %bf.clear246 = and i32 %bf.lshr245, 255, !dbg !9425
  br label %cond.end247, !dbg !9425

cond.end247:                                      ; preds = %cond.false241, %cond.true239
  %cond248 = phi i32 [ %call240, %cond.true239 ], [ %bf.clear246, %cond.false241 ], !dbg !9425
  call void @llvm.dbg.value(metadata %struct.real_value* %initial_result, metadata !9365, metadata !DIExpression(DW_OP_deref)), !dbg !9420
  call void @llvm.dbg.value(metadata %struct.real_value* %trunc_result, metadata !9368, metadata !DIExpression(DW_OP_deref)), !dbg !9426
  call void @real_value_truncate(%struct.real_value* nonnull sret %trunc_result, i32 %cond248, %struct.real_value* nonnull byval(%struct.real_value) align 8 %initial_result) #7, !dbg !9427
  call void @llvm.dbg.value(metadata %struct.real_value* %initial_result, metadata !9365, metadata !DIExpression(DW_OP_deref)), !dbg !9420
  call void @llvm.dbg.value(metadata %struct.real_value* %trunc_result, metadata !9368, metadata !DIExpression(DW_OP_deref)), !dbg !9426
  %call249 = call zeroext i8 @real_compare(i32 101, %struct.real_value* nonnull %initial_result, %struct.real_value* nonnull %trunc_result) #7, !dbg !9428
  %tobool250 = icmp eq i8 %call249, 0, !dbg !9428
  br i1 %tobool250, label %cleanup, label %if.then251, !dbg !9430

if.then251:                                       ; preds = %cond.end247
  call void @llvm.dbg.value(metadata %struct.real_value* %trunc_result, metadata !9368, metadata !DIExpression(DW_OP_deref)), !dbg !9426
  %call252 = call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 %trunc_result) #7, !dbg !9431
  br label %cleanup, !dbg !9432

cleanup:                                          ; preds = %cond.end247, %if.then251
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then251 ], [ 0, %cond.end247 ]
  %retval.0 = phi %union.tree_node* [ %call252, %if.then251 ], [ undef, %cond.end247 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #6, !dbg !9433
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end254, label %cleanup255

if.end254:                                        ; preds = %if.then226, %cleanup
  %retval.1 = phi %union.tree_node* [ undef, %if.then226 ], [ %retval.0, %cleanup ]
  br label %cleanup255, !dbg !9434

cleanup255:                                       ; preds = %cleanup, %if.end254
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end254 ], [ %cleanup.dest.slot.0, %cleanup ]
  %retval.2 = phi %union.tree_node* [ %retval.1, %if.end254 ], [ %retval.0, %cleanup ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #6, !dbg !9434
  %cond2 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond2, label %if.end258, label %cleanup259

if.end258:                                        ; preds = %cleanup255, %cond.end212
  %retval.3 = phi %union.tree_node* [ undef, %cond.end212 ], [ %retval.2, %cleanup255 ]
  br label %cleanup259, !dbg !9435

cleanup259:                                       ; preds = %cleanup255, %if.end258
  %cleanup.dest.slot.2 = phi i32 [ %cleanup.dest.slot.1, %cleanup255 ], [ 0, %if.end258 ], !dbg !9436
  %retval.4 = phi %union.tree_node* [ %retval.2, %cleanup255 ], [ %retval.3, %if.end258 ]
  %switch = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %switch, label %if.end264, label %return

if.end264:                                        ; preds = %land.lhs.true88, %land.lhs.true81, %land.lhs.true, %entry, %cond.end68, %land.lhs.true74, %cleanup259
  br label %return, !dbg !9437

return:                                           ; preds = %cleanup259, %if.end264, %if.then15
  %retval.5 = phi %union.tree_node* [ %call16, %if.then15 ], [ null, %if.end264 ], [ %retval.4, %cleanup259 ]
  ret %union.tree_node* %retval.5, !dbg !9438
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_frexp(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %rettype) unnamed_addr #5 !dbg !9439 {
entry:
  %frac_rvt = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9441, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !9442, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !9443, metadata !DIExpression()), !dbg !9453
  call void @llvm.dbg.value(metadata %union.tree_node* %rettype, metadata !9444, metadata !DIExpression()), !dbg !9453
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 9) #8, !dbg !9454
  %tobool = icmp eq i8 %call, 0, !dbg !9454
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !9456

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 10) #8, !dbg !9457
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9457
  br i1 %tobool2, label %return, label %if.end, !dbg !9458

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %arg0) #7, !dbg !9459
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9442, metadata !DIExpression()), !dbg !9453
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9460
  %bf.load = load i64, i64* %0, align 8, !dbg !9460
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9462
  %cmp = icmp eq i64 %bf.cast2, 24, !dbg !9462
  br i1 %cmp, label %land.lhs.true, label %return, !dbg !9463

land.lhs.true:                                    ; preds = %if.end
  %bf.cast73 = and i64 %bf.load, 134217728, !dbg !9464
  %tobool8 = icmp eq i64 %bf.cast73, 0, !dbg !9464
  br i1 %tobool8, label %if.end10, label %return, !dbg !9465

if.end10:                                         ; preds = %land.lhs.true
  %call11 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %loc, %union.tree_node* %arg1) #7, !dbg !9466
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !9443, metadata !DIExpression()), !dbg !9453
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9467
  %1 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !9467
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !9467
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 16, !dbg !9467
  %3 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !9467
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9468
  %cmp13 = icmp eq %union.tree_node* %3, %4, !dbg !9469
  br i1 %cmp13, label %if.then14, label %return, !dbg !9470

if.then14:                                        ; preds = %if.end10
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9471
  %5 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !9471
  %6 = load %struct.real_value*, %struct.real_value** %5, align 8, !dbg !9471
  call void @llvm.dbg.value(metadata %struct.real_value* %6, metadata !9445, metadata !DIExpression()), !dbg !9472
  %7 = getelementptr inbounds %struct.real_value, %struct.real_value* %6, i64 0, i32 0, !dbg !9473
  %bf.load15 = load i32, i32* %7, align 8, !dbg !9473
  %bf.clear16 = and i32 %bf.load15, 3, !dbg !9473
  switch i32 %bf.clear16, label %sw.default1 [
    i32 0, label %sw.bb
    i32 3, label %sw.bb17
    i32 2, label %sw.bb17
    i32 1, label %sw.bb19
  ], !dbg !9474

sw.bb:                                            ; preds = %if.then14
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !9475
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !9449, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9448, metadata !DIExpression()), !dbg !9472
  br label %sw.epilog, !dbg !9476

sw.bb17:                                          ; preds = %if.then14, %if.then14
  %call18 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %rettype, %union.tree_node* %call3, %union.tree_node* %call11) #7, !dbg !9477
  br label %return, !dbg !9478

sw.bb19:                                          ; preds = %if.then14
  %9 = bitcast %struct.real_value* %frac_rvt to i8*, !dbg !9479
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6, !dbg !9479
  %10 = bitcast %struct.real_value* %6 to i8*, !dbg !9480
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 32, i1 false), !dbg !9480
  %11 = getelementptr inbounds %struct.real_value, %struct.real_value* %frac_rvt, i64 0, i32 0, !dbg !9481
  %bf.load20 = load i32, i32* %11, align 8, !dbg !9481
  %bf.clear21 = and i32 %bf.load20, 63, !dbg !9481
  store i32 %bf.clear21, i32* %11, align 8, !dbg !9481
  call void @llvm.dbg.value(metadata %struct.real_value* %frac_rvt, metadata !9450, metadata !DIExpression(DW_OP_deref)), !dbg !9482
  %call22 = tail call %union.tree_node* @build_real(%union.tree_node* %rettype, %struct.real_value* nonnull byval(%struct.real_value) align 8 %frac_rvt) #7, !dbg !9483
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !9448, metadata !DIExpression()), !dbg !9472
  %bf.load23 = load i32, i32* %7, align 8, !dbg !9484
  %sub = ashr i32 %bf.load23, 6, !dbg !9484
  %conv = sext i32 %sub to i64, !dbg !9484
  %call25 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv) #7, !dbg !9485
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !9449, metadata !DIExpression()), !dbg !9472
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6, !dbg !9486
  br label %sw.epilog, !dbg !9487

sw.default1:                                      ; preds = %if.then14
  unreachable

sw.epilog:                                        ; preds = %sw.bb19, %sw.bb
  %frac.0 = phi %union.tree_node* [ %call22, %sw.bb19 ], [ %call3, %sw.bb ]
  %exp.0 = phi %union.tree_node* [ %call25, %sw.bb19 ], [ %8, %sw.bb ]
  call void @llvm.dbg.value(metadata %union.tree_node* %exp.0, metadata !9449, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.value(metadata %union.tree_node* %frac.0, metadata !9448, metadata !DIExpression()), !dbg !9472
  %call26 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 53, %union.tree_node* %rettype, %union.tree_node* %call11, %union.tree_node* %exp.0) #7, !dbg !9488
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !9443, metadata !DIExpression()), !dbg !9453
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9489
  %bf.load28 = load i64, i64* %12, align 8, !dbg !9490
  %bf.set = or i64 %bf.load28, 65536, !dbg !9490
  store i64 %bf.set, i64* %12, align 8, !dbg !9490
  %call30 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 52, %union.tree_node* %rettype, %union.tree_node* %call26, %union.tree_node* %frac.0) #7, !dbg !9491
  br label %return, !dbg !9492

return:                                           ; preds = %land.lhs.true, %lor.lhs.false, %entry, %if.end10, %sw.bb17, %sw.epilog, %if.end
  %retval.1 = phi %union.tree_node* [ null, %lor.lhs.false ], [ null, %entry ], [ null, %land.lhs.true ], [ null, %if.end ], [ %call30, %sw.epilog ], [ %call18, %sw.bb17 ], [ null, %if.end10 ], !dbg !9453
  ret %union.tree_node* %retval.1, !dbg !9493
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_modf(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %rettype) unnamed_addr #5 !dbg !9494 {
entry:
  %trunc = alloca %struct.real_value, align 8
  %frac = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9496, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !9497, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !9498, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.value(metadata %union.tree_node* %rettype, metadata !9499, metadata !DIExpression()), !dbg !9505
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 9) #8, !dbg !9506
  %tobool = icmp eq i8 %call, 0, !dbg !9506
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !9508

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 10) #8, !dbg !9509
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9509
  br i1 %tobool2, label %return, label %if.end, !dbg !9510

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %arg0) #7, !dbg !9511
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !9497, metadata !DIExpression()), !dbg !9505
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9512
  %bf.load = load i64, i64* %0, align 8, !dbg !9512
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !9514
  %cmp = icmp eq i64 %bf.cast2, 24, !dbg !9514
  br i1 %cmp, label %land.lhs.true, label %return, !dbg !9515

land.lhs.true:                                    ; preds = %if.end
  %bf.cast73 = and i64 %bf.load, 134217728, !dbg !9516
  %tobool8 = icmp eq i64 %bf.cast73, 0, !dbg !9516
  br i1 %tobool8, label %if.end10, label %return, !dbg !9517

if.end10:                                         ; preds = %land.lhs.true
  %call11 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %loc, %union.tree_node* %arg1) #7, !dbg !9518
  call void @llvm.dbg.value(metadata %union.tree_node* %call11, metadata !9498, metadata !DIExpression()), !dbg !9505
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9519
  %1 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !9519
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !9519
  %main_variant = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 16, !dbg !9519
  %3 = load %union.tree_node*, %union.tree_node** %main_variant, align 8, !dbg !9519
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %rettype, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !9520
  %5 = load %union.tree_node*, %union.tree_node** %4, align 8, !dbg !9520
  %cmp15 = icmp eq %union.tree_node* %3, %5, !dbg !9521
  br i1 %cmp15, label %if.then16, label %return, !dbg !9522

if.then16:                                        ; preds = %if.end10
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !9523
  %6 = bitcast i32* %real_cst_ptr to %struct.real_value**, !dbg !9523
  %7 = load %struct.real_value*, %struct.real_value** %6, align 8, !dbg !9523
  call void @llvm.dbg.value(metadata %struct.real_value* %7, metadata !9500, metadata !DIExpression()), !dbg !9524
  %8 = bitcast %struct.real_value* %trunc to i8*, !dbg !9525
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6, !dbg !9525
  %9 = bitcast %struct.real_value* %frac to i8*, !dbg !9525
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6, !dbg !9525
  %10 = getelementptr inbounds %struct.real_value, %struct.real_value* %7, i64 0, i32 0, !dbg !9526
  %bf.load17 = load i32, i32* %10, align 8, !dbg !9526
  %bf.clear18 = and i32 %bf.load17, 3, !dbg !9526
  switch i32 %bf.clear18, label %sw.epilog1 [
    i32 3, label %sw.bb
    i32 0, label %sw.bb
    i32 2, label %sw.bb19
    i32 1, label %sw.bb25
  ], !dbg !9527

sw.bb:                                            ; preds = %if.then16, %if.then16
  %11 = bitcast %struct.real_value* %7 to i8*, !dbg !9528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %11, i64 32, i1 false), !dbg !9528
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %9, i64 32, i1 false), !dbg !9530
  br label %sw.epilog, !dbg !9531

sw.bb19:                                          ; preds = %if.then16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 bitcast (%struct.real_value* @dconst0 to i8*), i64 32, i1 false), !dbg !9532
  %bf.load20 = load i32, i32* %10, align 8, !dbg !9533
  %bf.clear22 = and i32 %bf.load20, 8, !dbg !9533
  %12 = getelementptr inbounds %struct.real_value, %struct.real_value* %frac, i64 0, i32 0, !dbg !9534
  %bf.load23 = load i32, i32* %12, align 8, !dbg !9535
  %bf.clear24 = and i32 %bf.load23, -9, !dbg !9535
  %bf.set = or i32 %bf.clear24, %bf.clear22, !dbg !9535
  store i32 %bf.set, i32* %12, align 8, !dbg !9535
  %13 = bitcast %struct.real_value* %7 to i8*, !dbg !9536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %13, i64 32, i1 false), !dbg !9536
  br label %sw.epilog, !dbg !9537

sw.bb25:                                          ; preds = %if.then16
  call void @llvm.dbg.value(metadata %struct.real_value* %trunc, metadata !9503, metadata !DIExpression(DW_OP_deref)), !dbg !9524
  call void @real_trunc(%struct.real_value* nonnull %trunc, i32 0, %struct.real_value* %7) #7, !dbg !9538
  call void @llvm.dbg.value(metadata %struct.real_value* %trunc, metadata !9503, metadata !DIExpression(DW_OP_deref)), !dbg !9524
  call void @llvm.dbg.value(metadata %struct.real_value* %frac, metadata !9504, metadata !DIExpression(DW_OP_deref)), !dbg !9524
  %call26 = call zeroext i8 @real_arithmetic(%struct.real_value* nonnull %frac, i32 64, %struct.real_value* %7, %struct.real_value* nonnull %trunc) #7, !dbg !9539
  %bf.load27 = load i32, i32* %10, align 8, !dbg !9540
  %bf.clear29 = and i32 %bf.load27, 8, !dbg !9540
  %tobool30 = icmp eq i32 %bf.clear29, 0, !dbg !9542
  br i1 %tobool30, label %sw.epilog, label %land.lhs.true31, !dbg !9543

land.lhs.true31:                                  ; preds = %sw.bb25
  %14 = getelementptr inbounds %struct.real_value, %struct.real_value* %frac, i64 0, i32 0, !dbg !9544
  %bf.load32 = load i32, i32* %14, align 8, !dbg !9544
  %bf.clear33 = and i32 %bf.load32, 3, !dbg !9544
  %cmp34 = icmp eq i32 %bf.clear33, 0, !dbg !9545
  br i1 %cmp34, label %if.then35, label %sw.epilog, !dbg !9546

if.then35:                                        ; preds = %land.lhs.true31
  %bf.clear42 = and i32 %bf.load32, -9, !dbg !9547
  %bf.set43 = or i32 %bf.clear42, %bf.clear29, !dbg !9547
  store i32 %bf.set43, i32* %14, align 8, !dbg !9547
  br label %sw.epilog, !dbg !9548

sw.epilog1:                                       ; preds = %if.then16
  unreachable

sw.epilog:                                        ; preds = %sw.bb25, %land.lhs.true31, %if.then35, %sw.bb19, %sw.bb
  call void @llvm.dbg.value(metadata %struct.real_value* %trunc, metadata !9503, metadata !DIExpression(DW_OP_deref)), !dbg !9524
  %call45 = call %union.tree_node* @build_real(%union.tree_node* %rettype, %struct.real_value* nonnull byval(%struct.real_value) align 8 %trunc) #7, !dbg !9549
  %call46 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 53, %union.tree_node* %rettype, %union.tree_node* %call11, %union.tree_node* %call45) #7, !dbg !9549
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !9498, metadata !DIExpression()), !dbg !9505
  %15 = getelementptr inbounds %union.tree_node, %union.tree_node* %call46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9550
  %bf.load48 = load i64, i64* %15, align 8, !dbg !9551
  %bf.set50 = or i64 %bf.load48, 65536, !dbg !9551
  store i64 %bf.set50, i64* %15, align 8, !dbg !9551
  call void @llvm.dbg.value(metadata %struct.real_value* %frac, metadata !9504, metadata !DIExpression(DW_OP_deref)), !dbg !9524
  %call51 = call %union.tree_node* @build_real(%union.tree_node* %rettype, %struct.real_value* nonnull byval(%struct.real_value) align 8 %frac) #7, !dbg !9552
  %call52 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 52, %union.tree_node* %rettype, %union.tree_node* %call46, %union.tree_node* %call51) #7, !dbg !9552
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6, !dbg !9553
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6, !dbg !9553
  br label %return

return:                                           ; preds = %land.lhs.true, %lor.lhs.false, %entry, %if.end10, %if.end, %sw.epilog
  %retval.0 = phi %union.tree_node* [ %call52, %sw.epilog ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %land.lhs.true ], [ null, %if.end ], [ null, %if.end10 ], !dbg !9505
  ret %union.tree_node* %retval.0, !dbg !9554
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_bzero(i32 %loc, %union.tree_node* %dest, %union.tree_node* %size, i8 zeroext %ignore) unnamed_addr #5 !dbg !9555 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9557, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !9558, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !9559, metadata !DIExpression()), !dbg !9561
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !9560, metadata !DIExpression()), !dbg !9561
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !9562
  %tobool = icmp eq i8 %call, 0, !dbg !9562
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !9564

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %size, i32 8) #8, !dbg !9565
  %tobool2 = icmp ne i8 %call1, 0, !dbg !9565
  %tobool3 = icmp ne i8 %ignore, 0, !dbg !9566
  %or.cond = and i1 %tobool2, %tobool3, !dbg !9568
  br i1 %or.cond, label %if.end5, label %return, !dbg !9568

if.end5:                                          ; preds = %lor.lhs.false
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !9569
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !9570
  %call6 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %1, %union.tree_node* %size) #7, !dbg !9571
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 38), align 16, !dbg !9572
  %call7 = tail call fastcc %union.tree_node* @fold_builtin_memset(i32 %loc, %union.tree_node* %dest, %union.tree_node* %0, %union.tree_node* %call6, %union.tree_node* %2, i8 zeroext %ignore) #8, !dbg !9573
  br label %return, !dbg !9574

return:                                           ; preds = %entry, %lor.lhs.false, %if.end5
  %retval.0 = phi %union.tree_node* [ %call7, %if.end5 ], [ null, %lor.lhs.false ], [ null, %entry ], !dbg !9561
  ret %union.tree_node* %retval.0, !dbg !9575
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strstr(i32 %loc, %union.tree_node* %s1, %union.tree_node* %s2, %union.tree_node* %type) unnamed_addr #5 !dbg !9576 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9578, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata %union.tree_node* %s1, metadata !9579, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata %union.tree_node* %s2, metadata !9580, metadata !DIExpression()), !dbg !9591
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9581, metadata !DIExpression()), !dbg !9591
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s1, i32 10) #8, !dbg !9592
  %tobool = icmp eq i8 %call, 0, !dbg !9592
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !9593

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s2, i32 10) #8, !dbg !9594
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9594
  br i1 %tobool2, label %return, label %if.else, !dbg !9595

if.else:                                          ; preds = %lor.lhs.false
  %call3 = tail call fastcc i8* @c_getstr(%union.tree_node* %s2) #8, !dbg !9596
  call void @llvm.dbg.value(metadata i8* %call3, metadata !9586, metadata !DIExpression()), !dbg !9597
  %cmp = icmp eq i8* %call3, null, !dbg !9598
  br i1 %cmp, label %return, label %if.end, !dbg !9600

if.end:                                           ; preds = %if.else
  %call5 = tail call fastcc i8* @c_getstr(%union.tree_node* %s1) #8, !dbg !9601
  call void @llvm.dbg.value(metadata i8* %call5, metadata !9585, metadata !DIExpression()), !dbg !9597
  %cmp6 = icmp eq i8* %call5, null, !dbg !9602
  br i1 %cmp6, label %if.end20, label %if.then7, !dbg !9603

if.then7:                                         ; preds = %if.end
  %call8 = tail call i8* @strstr(i8* nonnull %call5, i8* nonnull %call3) #7, !dbg !9604
  call void @llvm.dbg.value(metadata i8* %call8, metadata !9587, metadata !DIExpression()), !dbg !9605
  %cmp9 = icmp eq i8* %call8, null, !dbg !9606
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9605
  %0 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !9605
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !9608

if.then10:                                        ; preds = %if.then7
  %call12 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %0, i64 0) #7, !dbg !9609
  br label %return, !dbg !9610

if.end13:                                         ; preds = %if.then7
  %sub.ptr.lhs.cast = ptrtoint i8* %call8 to i64, !dbg !9611
  %sub.ptr.rhs.cast = ptrtoint i8* %call5 to i64, !dbg !9611
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9611
  %call16 = tail call %union.tree_node* @size_int_kind(i64 %sub.ptr.sub, i32 0) #7, !dbg !9611
  %call17 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %0, %union.tree_node* %s1, %union.tree_node* %call16) #7, !dbg !9611
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !9590, metadata !DIExpression()), !dbg !9605
  %call18 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call17) #7, !dbg !9612
  br label %return, !dbg !9613

if.end20:                                         ; preds = %if.end
  %1 = load i8, i8* %call3, align 1, !dbg !9614
  %cmp21 = icmp eq i8 %1, 0, !dbg !9616
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !9617

if.then23:                                        ; preds = %if.end20
  %call24 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %s1) #7, !dbg !9618
  br label %return, !dbg !9619

if.end25:                                         ; preds = %if.end20
  %arrayidx26 = getelementptr inbounds i8, i8* %call3, i64 1, !dbg !9620
  %2 = load i8, i8* %arrayidx26, align 1, !dbg !9620
  %cmp28 = icmp eq i8 %2, 0, !dbg !9622
  br i1 %cmp28, label %if.end31, label %return, !dbg !9623

if.end31:                                         ; preds = %if.end25
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 339), align 8, !dbg !9624
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !9582, metadata !DIExpression()), !dbg !9597
  %tobool32 = icmp eq %union.tree_node* %3, null, !dbg !9625
  br i1 %tobool32, label %return, label %if.end34, !dbg !9627

if.end34:                                         ; preds = %if.end31
  %conv36 = sext i8 %1 to i64, !dbg !9628
  %call37 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv36) #7, !dbg !9629
  %call38 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %3, i32 2, %union.tree_node* %s1, %union.tree_node* %call37) #8, !dbg !9630
  br label %return, !dbg !9631

return:                                           ; preds = %if.end31, %if.end25, %lor.lhs.false, %entry, %if.then23, %if.end34, %if.else, %if.end13, %if.then10
  %retval.2 = phi %union.tree_node* [ null, %lor.lhs.false ], [ null, %entry ], [ %call24, %if.then23 ], [ %call38, %if.end34 ], [ null, %if.else ], [ %call12, %if.then10 ], [ %call18, %if.end13 ], [ null, %if.end25 ], [ null, %if.end31 ], !dbg !9632
  ret %union.tree_node* %retval.2, !dbg !9633
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strcat(i32 %loc, %union.tree_node* %dst, %union.tree_node* %src) unnamed_addr #5 !dbg !9634 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9636, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata %union.tree_node* %dst, metadata !9637, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !9638, metadata !DIExpression()), !dbg !9651
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dst, i32 10) #8, !dbg !9652
  %tobool = icmp eq i8 %call, 0, !dbg !9652
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !9653

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !9654
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9654
  br i1 %tobool2, label %return, label %if.else, !dbg !9655

if.else:                                          ; preds = %lor.lhs.false
  %call3 = tail call fastcc i8* @c_getstr(%union.tree_node* %src) #8, !dbg !9656
  call void @llvm.dbg.value(metadata i8* %call3, metadata !9639, metadata !DIExpression()), !dbg !9657
  %tobool4 = icmp eq i8* %call3, null, !dbg !9658
  br i1 %tobool4, label %if.end, label %land.lhs.true, !dbg !9660

land.lhs.true:                                    ; preds = %if.else
  %0 = load i8, i8* %call3, align 1, !dbg !9661
  %cmp = icmp eq i8 %0, 0, !dbg !9662
  br i1 %cmp, label %return, label %if.end, !dbg !9663

if.end:                                           ; preds = %if.else, %land.lhs.true
  %call7 = tail call zeroext i8 @optimize_insn_for_speed_p() #7, !dbg !9664
  %tobool8 = icmp eq i8 %call7, 0, !dbg !9664
  br i1 %tobool8, label %return, label %if.then9, !dbg !9665

if.then9:                                         ; preds = %if.end
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 345), align 8, !dbg !9666
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !9646, metadata !DIExpression()), !dbg !9667
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 341), align 8, !dbg !9668
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !9647, metadata !DIExpression()), !dbg !9667
  %tobool11 = icmp ne %union.tree_node* %1, null, !dbg !9669
  %tobool13 = icmp ne %union.tree_node* %2, null, !dbg !9671
  %or.cond = and i1 %tobool11, %tobool13, !dbg !9672
  br i1 %or.cond, label %if.end15, label %return, !dbg !9672

if.end15:                                         ; preds = %if.then9
  %call16 = tail call %union.tree_node* @c_strlen(%union.tree_node* %src, i32 1) #8, !dbg !9673
  call void @llvm.dbg.value(metadata %union.tree_node* %call16, metadata !9648, metadata !DIExpression()), !dbg !9674
  %tobool17 = icmp eq %union.tree_node* %call16, null, !dbg !9675
  br i1 %tobool17, label %cleanup, label %lor.lhs.false18, !dbg !9677

lor.lhs.false18:                                  ; preds = %if.end15
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9678
  %bf.load = load i64, i64* %3, align 8, !dbg !9678
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !9678
  %tobool19 = icmp eq i64 %bf.cast1, 0, !dbg !9678
  br label %cleanup, !dbg !9679

cleanup:                                          ; preds = %if.end15, %lor.lhs.false18
  %cleanup.dest.slot.0 = phi i1 [ false, %if.end15 ], [ %tobool19, %lor.lhs.false18 ]
  br i1 %cleanup.dest.slot.0, label %cleanup.cont, label %return

cleanup.cont:                                     ; preds = %cleanup
  %call22 = tail call fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %dst) #8, !dbg !9680
  call void @llvm.dbg.value(metadata %union.tree_node* %call22, metadata !9637, metadata !DIExpression()), !dbg !9651
  %call23 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %1, i32 1, %union.tree_node* %call22) #8, !dbg !9681
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !9642, metadata !DIExpression()), !dbg !9667
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %call22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9682
  %4 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9682
  %call24 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %4, %union.tree_node* %call22, %union.tree_node* %call23) #7, !dbg !9682
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !9642, metadata !DIExpression()), !dbg !9667
  %call25 = tail call fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %call24) #8, !dbg !9683
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !9642, metadata !DIExpression()), !dbg !9667
  %call26 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %2, i32 2, %union.tree_node* %call25, %union.tree_node* %src) #8, !dbg !9684
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !9645, metadata !DIExpression()), !dbg !9667
  %5 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !9685
  %call29 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %5, %union.tree_node* %call26, %union.tree_node* %call22) #7, !dbg !9685
  br label %return, !dbg !9686

return:                                           ; preds = %if.end, %lor.lhs.false, %entry, %land.lhs.true, %if.then9, %cleanup, %cleanup.cont
  %retval.3 = phi %union.tree_node* [ null, %lor.lhs.false ], [ null, %entry ], [ %dst, %land.lhs.true ], [ null, %cleanup ], [ %call29, %cleanup.cont ], [ null, %if.then9 ], [ null, %if.end ], !dbg !9687
  ret %union.tree_node* %retval.3, !dbg !9688
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strspn(i32 %loc, %union.tree_node* %s1, %union.tree_node* %s2) unnamed_addr #5 !dbg !9689 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9691, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata %union.tree_node* %s1, metadata !9692, metadata !DIExpression()), !dbg !9702
  call void @llvm.dbg.value(metadata %union.tree_node* %s2, metadata !9693, metadata !DIExpression()), !dbg !9702
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s1, i32 10) #8, !dbg !9703
  %tobool = icmp eq i8 %call, 0, !dbg !9703
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !9704

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s2, i32 10) #8, !dbg !9705
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9705
  br i1 %tobool2, label %return, label %if.else, !dbg !9706

if.else:                                          ; preds = %lor.lhs.false
  %call3 = tail call fastcc i8* @c_getstr(%union.tree_node* %s1) #8, !dbg !9707
  call void @llvm.dbg.value(metadata i8* %call3, metadata !9694, metadata !DIExpression()), !dbg !9708
  %call4 = tail call fastcc i8* @c_getstr(%union.tree_node* %s2) #8, !dbg !9709
  call void @llvm.dbg.value(metadata i8* %call4, metadata !9697, metadata !DIExpression()), !dbg !9708
  %tobool5 = icmp ne i8* %call3, null, !dbg !9710
  %tobool6 = icmp ne i8* %call4, null, !dbg !9711
  %or.cond = and i1 %tobool5, %tobool6, !dbg !9712
  br i1 %or.cond, label %if.then7, label %if.end, !dbg !9712

if.then7:                                         ; preds = %if.else
  %call8 = tail call i64 @strspn(i8* nonnull %call3, i8* nonnull %call4) #7, !dbg !9713
  call void @llvm.dbg.value(metadata i64 %call8, metadata !9698, metadata !DIExpression()), !dbg !9714
  %call9 = tail call %union.tree_node* @size_int_kind(i64 %call8, i32 0) #7, !dbg !9715
  br label %return

if.end:                                           ; preds = %if.else
  %tobool10 = icmp eq i8* %call3, null, !dbg !9716
  br i1 %tobool10, label %lor.lhs.false13, label %land.lhs.true11, !dbg !9718

land.lhs.true11:                                  ; preds = %if.end
  %0 = load i8, i8* %call3, align 1, !dbg !9719
  %cmp = icmp eq i8 %0, 0, !dbg !9720
  br i1 %cmp, label %if.then19, label %lor.lhs.false13, !dbg !9721

lor.lhs.false13:                                  ; preds = %if.end, %land.lhs.true11
  %tobool14 = icmp eq i8* %call4, null, !dbg !9722
  br i1 %tobool14, label %return, label %land.lhs.true15, !dbg !9723

land.lhs.true15:                                  ; preds = %lor.lhs.false13
  %1 = load i8, i8* %call4, align 1, !dbg !9724
  %cmp17 = icmp eq i8 %1, 0, !dbg !9725
  br i1 %cmp17, label %if.then19, label %return, !dbg !9726

if.then19:                                        ; preds = %land.lhs.true15, %land.lhs.true11
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !9727
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !9728
  %call20 = tail call %union.tree_node* @omit_two_operands_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %3, %union.tree_node* %s1, %union.tree_node* %s2) #7, !dbg !9729
  br label %return, !dbg !9730

return:                                           ; preds = %lor.lhs.false13, %lor.lhs.false, %entry, %if.then7, %if.then19, %land.lhs.true15
  %retval.1 = phi %union.tree_node* [ null, %lor.lhs.false ], [ null, %entry ], [ %call9, %if.then7 ], [ %call20, %if.then19 ], [ null, %land.lhs.true15 ], [ null, %lor.lhs.false13 ], !dbg !9731
  ret %union.tree_node* %retval.1, !dbg !9732
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strcspn(i32 %loc, %union.tree_node* %s1, %union.tree_node* %s2) unnamed_addr #5 !dbg !9733 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9735, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata %union.tree_node* %s1, metadata !9736, metadata !DIExpression()), !dbg !9748
  call void @llvm.dbg.value(metadata %union.tree_node* %s2, metadata !9737, metadata !DIExpression()), !dbg !9748
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s1, i32 10) #8, !dbg !9749
  %tobool = icmp eq i8 %call, 0, !dbg !9749
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !9750

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s2, i32 10) #8, !dbg !9751
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9751
  br i1 %tobool2, label %return, label %if.else, !dbg !9752

if.else:                                          ; preds = %lor.lhs.false
  %call3 = tail call fastcc i8* @c_getstr(%union.tree_node* %s1) #8, !dbg !9753
  call void @llvm.dbg.value(metadata i8* %call3, metadata !9738, metadata !DIExpression()), !dbg !9754
  %call4 = tail call fastcc i8* @c_getstr(%union.tree_node* %s2) #8, !dbg !9755
  call void @llvm.dbg.value(metadata i8* %call4, metadata !9741, metadata !DIExpression()), !dbg !9754
  %tobool5 = icmp ne i8* %call3, null, !dbg !9756
  %tobool6 = icmp ne i8* %call4, null, !dbg !9757
  %or.cond = and i1 %tobool5, %tobool6, !dbg !9758
  br i1 %or.cond, label %if.then7, label %if.end, !dbg !9758

if.then7:                                         ; preds = %if.else
  %call8 = tail call i64 @strcspn(i8* nonnull %call3, i8* nonnull %call4) #7, !dbg !9759
  call void @llvm.dbg.value(metadata i64 %call8, metadata !9742, metadata !DIExpression()), !dbg !9760
  %call9 = tail call %union.tree_node* @size_int_kind(i64 %call8, i32 0) #7, !dbg !9761
  br label %return

if.end:                                           ; preds = %if.else
  %tobool10 = icmp eq i8* %call3, null, !dbg !9762
  br i1 %tobool10, label %if.end15, label %land.lhs.true11, !dbg !9764

land.lhs.true11:                                  ; preds = %if.end
  %0 = load i8, i8* %call3, align 1, !dbg !9765
  %cmp = icmp eq i8 %0, 0, !dbg !9766
  br i1 %cmp, label %if.then13, label %if.end15, !dbg !9767

if.then13:                                        ; preds = %land.lhs.true11
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !9768
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 17), align 8, !dbg !9770
  %call14 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %1, %union.tree_node* %2, %union.tree_node* %s2) #7, !dbg !9771
  br label %return, !dbg !9772

if.end15:                                         ; preds = %if.end, %land.lhs.true11
  %tobool16 = icmp eq i8* %call4, null, !dbg !9773
  br i1 %tobool16, label %return, label %land.lhs.true17, !dbg !9774

land.lhs.true17:                                  ; preds = %if.end15
  %3 = load i8, i8* %call4, align 1, !dbg !9775
  %cmp19 = icmp eq i8 %3, 0, !dbg !9776
  br i1 %cmp19, label %if.then21, label %return, !dbg !9777

if.then21:                                        ; preds = %land.lhs.true17
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 345), align 8, !dbg !9778
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !9745, metadata !DIExpression()), !dbg !9779
  %tobool22 = icmp eq %union.tree_node* %4, null, !dbg !9780
  br i1 %tobool22, label %return, label %if.end24, !dbg !9782

if.end24:                                         ; preds = %if.then21
  %call25 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %4, i32 1, %union.tree_node* %s1) #8, !dbg !9783
  br label %return, !dbg !9784

return:                                           ; preds = %if.then21, %if.end15, %lor.lhs.false, %entry, %if.then7, %if.then13, %if.end24, %land.lhs.true17
  %retval.2 = phi %union.tree_node* [ null, %lor.lhs.false ], [ null, %entry ], [ %call9, %if.then7 ], [ %call14, %if.then13 ], [ %call25, %if.end24 ], [ null, %if.then21 ], [ null, %land.lhs.true17 ], [ null, %if.end15 ], !dbg !9785
  ret %union.tree_node* %retval.2, !dbg !9786
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strchr(i32 %loc, %union.tree_node* %s1, %union.tree_node* %s2, %union.tree_node* %type) unnamed_addr #5 !dbg !9787 {
entry:
  %c = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9789, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata %union.tree_node* %s1, metadata !9790, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata %union.tree_node* %s2, metadata !9791, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9792, metadata !DIExpression()), !dbg !9801
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s1, i32 10) #8, !dbg !9802
  %tobool = icmp eq i8 %call, 0, !dbg !9802
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !9803

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s2, i32 8) #8, !dbg !9804
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9804
  br i1 %tobool2, label %return, label %if.else, !dbg !9805

if.else:                                          ; preds = %lor.lhs.false
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9806
  %bf.load = load i64, i64* %0, align 8, !dbg !9806
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9808
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !9808
  br i1 %cmp, label %if.end, label %return, !dbg !9809

if.end:                                           ; preds = %if.else
  %call4 = tail call fastcc i8* @c_getstr(%union.tree_node* %s1) #8, !dbg !9810
  call void @llvm.dbg.value(metadata i8* %call4, metadata !9793, metadata !DIExpression()), !dbg !9811
  %cmp5 = icmp eq i8* %call4, null, !dbg !9812
  br i1 %cmp5, label %return, label %if.then6, !dbg !9813

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %c, metadata !9796, metadata !DIExpression(DW_OP_deref)), !dbg !9814
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %c) #6, !dbg !9815
  call void @llvm.dbg.value(metadata i8* %c, metadata !9796, metadata !DIExpression(DW_OP_deref)), !dbg !9814
  %call7 = call fastcc i32 @target_char_cast(%union.tree_node* %s2, i8* nonnull %c) #8, !dbg !9816
  %tobool8 = icmp eq i32 %call7, 0, !dbg !9816
  br i1 %tobool8, label %if.end10, label %cleanup, !dbg !9818

if.end10:                                         ; preds = %if.then6
  %1 = load i8, i8* %c, align 1, !dbg !9819
  call void @llvm.dbg.value(metadata i8 %1, metadata !9796, metadata !DIExpression()), !dbg !9814
  %conv = sext i8 %1 to i32, !dbg !9819
  %call11 = call i8* @strchr(i8* nonnull %call4, i32 %conv) #7, !dbg !9820
  call void @llvm.dbg.value(metadata i8* %call11, metadata !9799, metadata !DIExpression()), !dbg !9814
  %cmp12 = icmp eq i8* %call11, null, !dbg !9821
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9814
  %2 = load %union.tree_node*, %union.tree_node** %type15, align 8, !dbg !9814
  br i1 %cmp12, label %if.then14, label %if.end17, !dbg !9823

if.then14:                                        ; preds = %if.end10
  %call16 = call %union.tree_node* @build_int_cst(%union.tree_node* %2, i64 0) #7, !dbg !9824
  br label %cleanup, !dbg !9825

if.end17:                                         ; preds = %if.end10
  %sub.ptr.lhs.cast = ptrtoint i8* %call11 to i64, !dbg !9826
  %sub.ptr.rhs.cast = ptrtoint i8* %call4 to i64, !dbg !9826
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9826
  %call20 = call %union.tree_node* @size_int_kind(i64 %sub.ptr.sub, i32 0) #7, !dbg !9826
  %call21 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %2, %union.tree_node* %s1, %union.tree_node* %call20) #7, !dbg !9826
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !9800, metadata !DIExpression()), !dbg !9814
  %call22 = call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call21) #7, !dbg !9827
  br label %cleanup, !dbg !9828

cleanup:                                          ; preds = %if.then6, %if.end17, %if.then14
  %retval.0 = phi %union.tree_node* [ %call16, %if.then14 ], [ %call22, %if.end17 ], [ null, %if.then6 ], !dbg !9814
  call void @llvm.dbg.value(metadata i8* %c, metadata !9796, metadata !DIExpression(DW_OP_deref)), !dbg !9814
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %c) #6, !dbg !9829
  br label %return

return:                                           ; preds = %if.end, %if.else, %lor.lhs.false, %entry, %cleanup
  %retval.2 = phi %union.tree_node* [ null, %lor.lhs.false ], [ null, %entry ], [ %retval.0, %cleanup ], [ null, %if.else ], [ null, %if.end ], !dbg !9830
  ret %union.tree_node* %retval.2, !dbg !9831
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strrchr(i32 %loc, %union.tree_node* %s1, %union.tree_node* %s2, %union.tree_node* %type) unnamed_addr #5 !dbg !9832 {
entry:
  %c = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9834, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata %union.tree_node* %s1, metadata !9835, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata %union.tree_node* %s2, metadata !9836, metadata !DIExpression()), !dbg !9847
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !9837, metadata !DIExpression()), !dbg !9847
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s1, i32 10) #8, !dbg !9848
  %tobool = icmp eq i8 %call, 0, !dbg !9848
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !9849

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s2, i32 8) #8, !dbg !9850
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9850
  br i1 %tobool2, label %return, label %if.else, !dbg !9851

if.else:                                          ; preds = %lor.lhs.false
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %s2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9852
  %bf.load = load i64, i64* %0, align 8, !dbg !9852
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9854
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !9854
  br i1 %cmp, label %if.end, label %return, !dbg !9855

if.end:                                           ; preds = %if.else
  %call4 = tail call fastcc i8* @c_getstr(%union.tree_node* %s1) #8, !dbg !9856
  call void @llvm.dbg.value(metadata i8* %call4, metadata !9841, metadata !DIExpression()), !dbg !9857
  %cmp5 = icmp eq i8* %call4, null, !dbg !9858
  br i1 %cmp5, label %if.end25, label %if.then6, !dbg !9859

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %c, metadata !9842, metadata !DIExpression(DW_OP_deref)), !dbg !9860
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %c) #6, !dbg !9861
  call void @llvm.dbg.value(metadata i8* %c, metadata !9842, metadata !DIExpression(DW_OP_deref)), !dbg !9860
  %call7 = call fastcc i32 @target_char_cast(%union.tree_node* %s2, i8* nonnull %c) #8, !dbg !9862
  %tobool8 = icmp eq i32 %call7, 0, !dbg !9862
  br i1 %tobool8, label %if.end10, label %cleanup, !dbg !9864

if.end10:                                         ; preds = %if.then6
  %1 = load i8, i8* %c, align 1, !dbg !9865
  call void @llvm.dbg.value(metadata i8 %1, metadata !9842, metadata !DIExpression()), !dbg !9860
  %conv = sext i8 %1 to i32, !dbg !9865
  %call11 = call i8* @strrchr(i8* nonnull %call4, i32 %conv) #7, !dbg !9866
  call void @llvm.dbg.value(metadata i8* %call11, metadata !9845, metadata !DIExpression()), !dbg !9860
  %cmp12 = icmp eq i8* %call11, null, !dbg !9867
  %type15 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9860
  %2 = load %union.tree_node*, %union.tree_node** %type15, align 8, !dbg !9860
  br i1 %cmp12, label %if.then14, label %if.end17, !dbg !9869

if.then14:                                        ; preds = %if.end10
  %call16 = call %union.tree_node* @build_int_cst(%union.tree_node* %2, i64 0) #7, !dbg !9870
  br label %cleanup, !dbg !9871

if.end17:                                         ; preds = %if.end10
  %sub.ptr.lhs.cast = ptrtoint i8* %call11 to i64, !dbg !9872
  %sub.ptr.rhs.cast = ptrtoint i8* %call4 to i64, !dbg !9872
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !9872
  %call20 = call %union.tree_node* @size_int_kind(i64 %sub.ptr.sub, i32 0) #7, !dbg !9872
  %call21 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %2, %union.tree_node* %s1, %union.tree_node* %call20) #7, !dbg !9872
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !9846, metadata !DIExpression()), !dbg !9860
  %call22 = call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call21) #7, !dbg !9873
  br label %cleanup, !dbg !9874

cleanup:                                          ; preds = %if.then6, %if.end17, %if.then14
  %retval.0 = phi %union.tree_node* [ %call16, %if.then14 ], [ %call22, %if.end17 ], [ null, %if.then6 ], !dbg !9860
  call void @llvm.dbg.value(metadata i8* %c, metadata !9842, metadata !DIExpression(DW_OP_deref)), !dbg !9860
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %c) #6, !dbg !9875
  br label %return

if.end25:                                         ; preds = %if.end
  %call26 = tail call i32 @integer_zerop(%union.tree_node* %s2) #7, !dbg !9876
  %tobool27 = icmp eq i32 %call26, 0, !dbg !9876
  br i1 %tobool27, label %return, label %if.end29, !dbg !9878

if.end29:                                         ; preds = %if.end25
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 339), align 8, !dbg !9879
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !9838, metadata !DIExpression()), !dbg !9857
  %tobool30 = icmp eq %union.tree_node* %3, null, !dbg !9880
  br i1 %tobool30, label %return, label %if.end32, !dbg !9882

if.end32:                                         ; preds = %if.end29
  %call33 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %3, i32 2, %union.tree_node* %s1, %union.tree_node* %s2) #8, !dbg !9883
  br label %return, !dbg !9884

return:                                           ; preds = %if.end29, %if.end25, %if.else, %lor.lhs.false, %entry, %cleanup, %if.end32
  %retval.2 = phi %union.tree_node* [ null, %lor.lhs.false ], [ null, %entry ], [ %retval.0, %cleanup ], [ %call33, %if.end32 ], [ null, %if.else ], [ null, %if.end25 ], [ null, %if.end29 ], !dbg !9885
  ret %union.tree_node* %retval.2, !dbg !9886
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_stpcpy(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %dest, %union.tree_node* %src) unnamed_addr #5 !dbg !9887 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9889, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !9890, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !9891, metadata !DIExpression()), !dbg !9898
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !9892, metadata !DIExpression()), !dbg !9898
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !9899
  %tobool = icmp eq i8 %call1, 0, !dbg !9899
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !9901

lor.lhs.false:                                    ; preds = %entry
  %call2 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !9902
  %tobool3 = icmp eq i8 %call2, 0, !dbg !9902
  br i1 %tobool3, label %cleanup, label %if.end, !dbg !9903

if.end:                                           ; preds = %lor.lhs.false
  %call4 = tail call %union.tree_node* @c_strlen(%union.tree_node* %src, i32 1) #8, !dbg !9904
  call void @llvm.dbg.value(metadata %union.tree_node* %call4, metadata !9894, metadata !DIExpression()), !dbg !9898
  %tobool5 = icmp eq %union.tree_node* %call4, null, !dbg !9905
  br i1 %tobool5, label %cleanup, label %lor.lhs.false6, !dbg !9907

lor.lhs.false6:                                   ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !9908
  %bf.load = load i64, i64* %0, align 8, !dbg !9908
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !9909
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !9909
  br i1 %cmp, label %if.end8, label %cleanup, !dbg !9910

if.end8:                                          ; preds = %lor.lhs.false6
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !9911
  %call9 = tail call zeroext i8 @optimize_function_for_size_p(%struct.function* %1) #7, !dbg !9913
  %tobool10 = icmp eq i8 %call9, 0, !dbg !9913
  br i1 %tobool10, label %if.end14, label %land.lhs.true, !dbg !9914

land.lhs.true:                                    ; preds = %if.end8
  %call11 = tail call i32 @integer_zerop(%union.tree_node* nonnull %call4) #7, !dbg !9915
  %tobool12 = icmp eq i32 %call11, 0, !dbg !9915
  br i1 %tobool12, label %cleanup, label %if.end14, !dbg !9916

if.end14:                                         ; preds = %land.lhs.true, %if.end8
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 330), align 16, !dbg !9917
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !9893, metadata !DIExpression()), !dbg !9898
  %tobool15 = icmp eq %union.tree_node* %2, null, !dbg !9918
  br i1 %tobool15, label %cleanup, label %if.end17, !dbg !9920

if.end17:                                         ; preds = %if.end14
  %call18 = tail call %union.tree_node* @size_int_kind(i64 1, i32 1) #7, !dbg !9921
  %call19 = tail call %union.tree_node* @size_binop_loc(i32 %loc, i32 63, %union.tree_node* nonnull %call4, %union.tree_node* %call18) #7, !dbg !9922
  call void @llvm.dbg.value(metadata %union.tree_node* %call19, metadata !9895, metadata !DIExpression()), !dbg !9898
  %call20 = tail call fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %dest) #8, !dbg !9923
  call void @llvm.dbg.value(metadata %union.tree_node* %call20, metadata !9891, metadata !DIExpression()), !dbg !9898
  %call21 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %2, i32 3, %union.tree_node* %call20, %union.tree_node* %src, %union.tree_node* %call19) #8, !dbg !9924
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !9896, metadata !DIExpression()), !dbg !9898
  %type22 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9925
  %3 = bitcast %union.tree_node** %type22 to %struct.tree_common**, !dbg !9925
  %4 = load %struct.tree_common*, %struct.tree_common** %3, align 8, !dbg !9925
  %type24 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !9925
  %5 = load %union.tree_node*, %union.tree_node** %type24, align 8, !dbg !9925
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !9897, metadata !DIExpression()), !dbg !9898
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !9926
  %call25 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %6, %union.tree_node* nonnull %call4) #7, !dbg !9927
  call void @llvm.dbg.value(metadata %union.tree_node* %call25, metadata !9894, metadata !DIExpression()), !dbg !9898
  %type27 = getelementptr inbounds %union.tree_node, %union.tree_node* %call20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !9928
  %7 = load %union.tree_node*, %union.tree_node** %type27, align 8, !dbg !9928
  %call28 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %7, %union.tree_node* %call20, %union.tree_node* %call25) #7, !dbg !9928
  call void @llvm.dbg.value(metadata %union.tree_node* %call28, metadata !9891, metadata !DIExpression()), !dbg !9898
  %call29 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %5, %union.tree_node* %call28) #7, !dbg !9929
  call void @llvm.dbg.value(metadata %union.tree_node* %call29, metadata !9891, metadata !DIExpression()), !dbg !9898
  %call30 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %5, %union.tree_node* %call29, %union.tree_node* %call21) #7, !dbg !9930
  call void @llvm.dbg.value(metadata %union.tree_node* %call30, metadata !9891, metadata !DIExpression()), !dbg !9898
  br label %cleanup, !dbg !9931

cleanup:                                          ; preds = %land.lhs.true, %if.end14, %lor.lhs.false6, %if.end, %lor.lhs.false, %entry, %if.end17
  %retval.0 = phi %union.tree_node* [ %call30, %if.end17 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %lor.lhs.false6 ], [ null, %if.end ], [ null, %land.lhs.true ], [ null, %if.end14 ], !dbg !9898
  ret %union.tree_node* %retval.0, !dbg !9932
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strcmp(i32 %loc, %union.tree_node* %arg1, %union.tree_node* %arg2) unnamed_addr #5 !dbg !9933 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !9935, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !9936, metadata !DIExpression()), !dbg !9952
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !9937, metadata !DIExpression()), !dbg !9952
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 10) #8, !dbg !9953
  %tobool = icmp eq i8 %call, 0, !dbg !9953
  br i1 %tobool, label %cleanup49, label %lor.lhs.false, !dbg !9955

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg2, i32 10) #8, !dbg !9956
  %tobool2 = icmp eq i8 %call1, 0, !dbg !9956
  br i1 %tobool2, label %cleanup49, label %if.end, !dbg !9957

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call i32 @operand_equal_p(%union.tree_node* %arg1, %union.tree_node* %arg2, i32 0) #7, !dbg !9958
  %tobool4 = icmp eq i32 %call3, 0, !dbg !9958
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !9960

if.then5:                                         ; preds = %if.end
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !9961
  br label %cleanup49, !dbg !9962

if.end6:                                          ; preds = %if.end
  %call7 = tail call fastcc i8* @c_getstr(%union.tree_node* %arg1) #8, !dbg !9963
  call void @llvm.dbg.value(metadata i8* %call7, metadata !9938, metadata !DIExpression()), !dbg !9952
  %call8 = tail call fastcc i8* @c_getstr(%union.tree_node* %arg2) #8, !dbg !9964
  call void @llvm.dbg.value(metadata i8* %call8, metadata !9939, metadata !DIExpression()), !dbg !9952
  %tobool9 = icmp ne i8* %call7, null, !dbg !9965
  %tobool10 = icmp ne i8* %call8, null, !dbg !9966
  %or.cond = and i1 %tobool9, %tobool10, !dbg !9967
  br i1 %or.cond, label %if.then11, label %if.end17, !dbg !9967

if.then11:                                        ; preds = %if.end6
  %call12 = tail call i32 @strcmp(i8* nonnull %call7, i8* nonnull %call8) #7, !dbg !9968
  call void @llvm.dbg.value(metadata i32 %call12, metadata !9940, metadata !DIExpression()), !dbg !9969
  %cmp = icmp slt i32 %call12, 0, !dbg !9970
  br i1 %cmp, label %if.then13, label %if.else, !dbg !9972

if.then13:                                        ; preds = %if.then11
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !9973
  br label %cleanup49, !dbg !9974

if.else:                                          ; preds = %if.then11
  %cmp14 = icmp eq i32 %call12, 0, !dbg !9975
  br i1 %cmp14, label %if.else16, label %if.then15, !dbg !9977

if.then15:                                        ; preds = %if.else
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !9978
  br label %cleanup49, !dbg !9979

if.else16:                                        ; preds = %if.else
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !9980
  br label %cleanup49, !dbg !9981

if.end17:                                         ; preds = %if.end6
  %tobool18 = icmp eq i8* %call8, null, !dbg !9982
  br i1 %tobool18, label %if.end30, label %land.lhs.true19, !dbg !9983

land.lhs.true19:                                  ; preds = %if.end17
  %4 = load i8, i8* %call8, align 1, !dbg !9984
  %cmp20 = icmp eq i8 %4, 0, !dbg !9985
  br i1 %cmp20, label %if.then22, label %if.end30, !dbg !9986

if.then22:                                        ; preds = %land.lhs.true19
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !9987
  %call23 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %5, i32 1) #7, !dbg !9987
  call void @llvm.dbg.value(metadata %union.tree_node* %call23, metadata !9943, metadata !DIExpression()), !dbg !9988
  %6 = load i32, i32* @ptr_mode, align 4, !dbg !9989
  %call24 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %call23, i32 %6, i8 zeroext 1) #7, !dbg !9990
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !9946, metadata !DIExpression()), !dbg !9988
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !9991
  %call25 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call24, %union.tree_node* %arg1) #7, !dbg !9992
  %call26 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %call23, %union.tree_node* %call25) #7, !dbg !9992
  %call27 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %7, %union.tree_node* %call26) #7, !dbg !9993
  br label %cleanup49

if.end30:                                         ; preds = %if.end17, %land.lhs.true19
  %tobool31 = icmp eq i8* %call7, null, !dbg !9994
  br i1 %tobool31, label %cleanup49, label %land.lhs.true32, !dbg !9995

land.lhs.true32:                                  ; preds = %if.end30
  %8 = load i8, i8* %call7, align 1, !dbg !9996
  %cmp34 = icmp eq i8 %8, 0, !dbg !9997
  br i1 %cmp34, label %if.then36, label %cleanup49, !dbg !9998

if.then36:                                        ; preds = %land.lhs.true32
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !9999
  %call38 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %9, i32 1) #7, !dbg !9999
  call void @llvm.dbg.value(metadata %union.tree_node* %call38, metadata !9947, metadata !DIExpression()), !dbg !10000
  %10 = load i32, i32* @ptr_mode, align 4, !dbg !10001
  %call40 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %call38, i32 %10, i8 zeroext 1) #7, !dbg !10002
  call void @llvm.dbg.value(metadata %union.tree_node* %call40, metadata !9950, metadata !DIExpression()), !dbg !10000
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !10003
  %call41 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call40, %union.tree_node* %arg2) #7, !dbg !10004
  %call42 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %call38, %union.tree_node* %call41) #7, !dbg !10004
  %call43 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %11, %union.tree_node* %call42) #7, !dbg !10005
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !9951, metadata !DIExpression()), !dbg !10000
  %12 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !10006
  %call44 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 79, %union.tree_node* %12, %union.tree_node* %call43) #7, !dbg !10006
  br label %cleanup49

cleanup49:                                        ; preds = %if.end30, %lor.lhs.false, %entry, %land.lhs.true32, %if.then13, %if.then15, %if.else16, %if.then36, %if.then22, %if.then5
  %retval.1 = phi %union.tree_node* [ %0, %if.then5 ], [ %call27, %if.then22 ], [ %call44, %if.then36 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %1, %if.then13 ], [ %2, %if.then15 ], [ %3, %if.else16 ], [ null, %land.lhs.true32 ], [ null, %if.end30 ], !dbg !9952
  ret %union.tree_node* %retval.1, !dbg !10007
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strpbrk(i32 %loc, %union.tree_node* %s1, %union.tree_node* %s2, %union.tree_node* %type) unnamed_addr #5 !dbg !10008 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10010, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %s1, metadata !10011, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %s2, metadata !10012, metadata !DIExpression()), !dbg !10023
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10013, metadata !DIExpression()), !dbg !10023
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s1, i32 10) #8, !dbg !10024
  %tobool = icmp eq i8 %call, 0, !dbg !10024
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !10025

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %s2, i32 10) #8, !dbg !10026
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10026
  br i1 %tobool2, label %return, label %if.else, !dbg !10027

if.else:                                          ; preds = %lor.lhs.false
  %call3 = tail call fastcc i8* @c_getstr(%union.tree_node* %s2) #8, !dbg !10028
  call void @llvm.dbg.value(metadata i8* %call3, metadata !10018, metadata !DIExpression()), !dbg !10029
  %cmp = icmp eq i8* %call3, null, !dbg !10030
  br i1 %cmp, label %return, label %if.end, !dbg !10032

if.end:                                           ; preds = %if.else
  %call5 = tail call fastcc i8* @c_getstr(%union.tree_node* %s1) #8, !dbg !10033
  call void @llvm.dbg.value(metadata i8* %call5, metadata !10017, metadata !DIExpression()), !dbg !10029
  %cmp6 = icmp eq i8* %call5, null, !dbg !10034
  br i1 %cmp6, label %if.end20, label %if.then7, !dbg !10035

if.then7:                                         ; preds = %if.end
  %call8 = tail call i8* @strpbrk(i8* nonnull %call5, i8* nonnull %call3) #7, !dbg !10036
  call void @llvm.dbg.value(metadata i8* %call8, metadata !10019, metadata !DIExpression()), !dbg !10037
  %cmp9 = icmp eq i8* %call8, null, !dbg !10038
  %type11 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10037
  %0 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !10037
  br i1 %cmp9, label %if.then10, label %if.end13, !dbg !10040

if.then10:                                        ; preds = %if.then7
  %call12 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %0, i64 0) #7, !dbg !10041
  br label %return, !dbg !10042

if.end13:                                         ; preds = %if.then7
  %sub.ptr.lhs.cast = ptrtoint i8* %call8 to i64, !dbg !10043
  %sub.ptr.rhs.cast = ptrtoint i8* %call5 to i64, !dbg !10043
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !10043
  %call16 = tail call %union.tree_node* @size_int_kind(i64 %sub.ptr.sub, i32 0) #7, !dbg !10043
  %call17 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %0, %union.tree_node* %s1, %union.tree_node* %call16) #7, !dbg !10043
  call void @llvm.dbg.value(metadata %union.tree_node* %call17, metadata !10022, metadata !DIExpression()), !dbg !10037
  %call18 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call17) #7, !dbg !10044
  br label %return, !dbg !10045

if.end20:                                         ; preds = %if.end
  %1 = load i8, i8* %call3, align 1, !dbg !10046
  %cmp21 = icmp eq i8 %1, 0, !dbg !10048
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !10049

if.then23:                                        ; preds = %if.end20
  %type25 = getelementptr inbounds %union.tree_node, %union.tree_node* %s1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10050
  %2 = load %union.tree_node*, %union.tree_node** %type25, align 8, !dbg !10050
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !10051
  %call26 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %3, %union.tree_node* %s1) #7, !dbg !10052
  br label %return, !dbg !10053

if.end27:                                         ; preds = %if.end20
  %arrayidx28 = getelementptr inbounds i8, i8* %call3, i64 1, !dbg !10054
  %4 = load i8, i8* %arrayidx28, align 1, !dbg !10054
  %cmp30 = icmp eq i8 %4, 0, !dbg !10056
  br i1 %cmp30, label %if.end33, label %return, !dbg !10057

if.end33:                                         ; preds = %if.end27
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 339), align 8, !dbg !10058
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !10014, metadata !DIExpression()), !dbg !10029
  %tobool34 = icmp eq %union.tree_node* %5, null, !dbg !10059
  br i1 %tobool34, label %return, label %if.end36, !dbg !10061

if.end36:                                         ; preds = %if.end33
  %conv38 = sext i8 %1 to i64, !dbg !10062
  %call39 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %conv38) #7, !dbg !10063
  %call40 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %5, i32 2, %union.tree_node* %s1, %union.tree_node* %call39) #8, !dbg !10064
  br label %return, !dbg !10065

return:                                           ; preds = %if.end33, %if.end27, %lor.lhs.false, %entry, %if.then23, %if.end36, %if.else, %if.end13, %if.then10
  %retval.2 = phi %union.tree_node* [ null, %lor.lhs.false ], [ null, %entry ], [ %call26, %if.then23 ], [ %call40, %if.end36 ], [ null, %if.else ], [ %call12, %if.then10 ], [ %call18, %if.end13 ], [ null, %if.end27 ], [ null, %if.end33 ], !dbg !10066
  ret %union.tree_node* %retval.2, !dbg !10067
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_expect(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1) unnamed_addr #5 !dbg !10068 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10070, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !10071, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !10072, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !10073, metadata !DIExpression()), !dbg !10080
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10081
  %bf.load = load i64, i64* %0, align 8, !dbg !10081
  %bf.cast = and i64 %bf.load, 65535, !dbg !10081
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %bf.cast, !dbg !10081
  %1 = load i32, i32* %arrayidx, align 4, !dbg !10081
  %cmp = icmp eq i32 %1, 5, !dbg !10081
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10083

land.lhs.true:                                    ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10084
  %arrayidx1 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 1, !dbg !10084
  %2 = bitcast %union.tree_node** %arrayidx1 to i64**, !dbg !10084
  %3 = load i64*, i64** %2, align 8, !dbg !10084
  %bf.load3 = load i64, i64* %3, align 8, !dbg !10084
  %bf.cast517 = and i64 %bf.load3, 65535, !dbg !10085
  %cmp6 = icmp eq i64 %bf.cast517, 23, !dbg !10085
  br i1 %cmp6, label %if.then, label %if.end, !dbg !10086

if.then:                                          ; preds = %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !10087
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10073, metadata !DIExpression()), !dbg !10080
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10088
  %bf.load11.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !10090
  br label %if.end, !dbg !10091

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %bf.load11 = phi i64 [ %bf.load11.pre, %if.then ], [ %bf.load, %land.lhs.true ], [ %bf.load, %entry ], !dbg !10090
  %inner.0 = phi %union.tree_node* [ %4, %if.then ], [ %arg0, %land.lhs.true ], [ %arg0, %entry ], !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0, metadata !10073, metadata !DIExpression()), !dbg !10080
  %bf.cast133 = and i64 %bf.load11, 65535, !dbg !10092
  %cmp14 = icmp eq i64 %bf.cast133, 59, !dbg !10092
  br i1 %cmp14, label %land.lhs.true15, label %if.end26, !dbg !10093

land.lhs.true15:                                  ; preds = %if.end
  %call = tail call %union.tree_node* @get_callee_fndecl(%union.tree_node* %inner.0) #7, !dbg !10094
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10074, metadata !DIExpression()), !dbg !10080
  %tobool = icmp eq %union.tree_node* %call, null, !dbg !10095
  br i1 %tobool, label %if.end26, label %land.lhs.true16, !dbg !10096

land.lhs.true16:                                  ; preds = %land.lhs.true15
  %built_in_class = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 5, !dbg !10097
  %bf.load17 = load i32, i32* %built_in_class, align 8, !dbg !10097
  %bf.clear18 = and i32 %bf.load17, 6144, !dbg !10097
  %cmp19 = icmp eq i32 %bf.clear18, 6144, !dbg !10098
  br i1 %cmp19, label %land.lhs.true20, label %if.end26, !dbg !10099

land.lhs.true20:                                  ; preds = %land.lhs.true16
  %bf.clear23 = and i32 %bf.load17, 2047, !dbg !10100
  %cmp24 = icmp eq i32 %bf.clear23, 446, !dbg !10101
  br i1 %cmp24, label %cleanup, label %if.end26, !dbg !10102

if.end26:                                         ; preds = %land.lhs.true15, %land.lhs.true20, %land.lhs.true16, %if.end
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !10073, metadata !DIExpression()), !dbg !10080
  br label %while.cond, !dbg !10103

while.cond:                                       ; preds = %while.body, %if.end26
  %inner.1 = phi %union.tree_node* [ %arg0, %if.end26 ], [ %14, %while.body ], !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1, metadata !10073, metadata !DIExpression()), !dbg !10080
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10104
  %bf.load28 = load i64, i64* %5, align 8, !dbg !10104
  %bf.cast304 = and i64 %bf.load28, 65535, !dbg !10105
  %cmp31 = icmp eq i64 %bf.cast304, 116, !dbg !10105
  br i1 %cmp31, label %land.lhs.true32, label %while.end, !dbg !10106

land.lhs.true32:                                  ; preds = %while.cond
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10107
  %6 = bitcast %union.tree_node** %type to i64**, !dbg !10107
  %7 = load i64*, i64** %6, align 8, !dbg !10107
  %bf.load34 = load i64, i64* %7, align 8, !dbg !10107
  %bf.cast3611 = and i64 %bf.load34, 65535, !dbg !10107
  %cmp37 = icmp eq i64 %bf.cast3611, 6, !dbg !10107
  br i1 %cmp37, label %land.rhs, label %lor.lhs.false, !dbg !10107

lor.lhs.false:                                    ; preds = %land.lhs.true32
  %8 = add nsw i64 %bf.cast3611, -7, !dbg !10107
  %9 = icmp ult i64 %8, 2, !dbg !10107
  br i1 %9, label %land.rhs, label %while.end, !dbg !10107

land.rhs:                                         ; preds = %lor.lhs.false, %land.lhs.true32
  %operands54 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10108
  %10 = bitcast %union.tree_node** %operands54 to %struct.tree_common**, !dbg !10108
  %11 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !10108
  %type57 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 2, !dbg !10108
  %12 = bitcast %union.tree_node** %type57 to i64**, !dbg !10108
  %13 = load i64*, i64** %12, align 8, !dbg !10108
  %bf.load59 = load i64, i64* %13, align 8, !dbg !10108
  %bf.cast6114 = and i64 %bf.load59, 65535, !dbg !10108
  %cmp62 = icmp eq i64 %bf.cast6114, 6, !dbg !10108
  %14 = bitcast %struct.tree_common* %11 to %union.tree_node*, !dbg !10108
  br i1 %cmp62, label %while.body, label %lor.lhs.false63, !dbg !10108

lor.lhs.false63:                                  ; preds = %land.rhs
  %15 = add nsw i64 %bf.cast6114, -7, !dbg !10108
  %16 = icmp ult i64 %15, 2, !dbg !10108
  br i1 %16, label %while.body, label %while.end, !dbg !10108

while.body:                                       ; preds = %land.rhs, %lor.lhs.false63
  call void @llvm.dbg.value(metadata %union.tree_node* %14, metadata !10073, metadata !DIExpression()), !dbg !10080
  br label %while.cond, !dbg !10103, !llvm.loop !10109

while.end:                                        ; preds = %lor.lhs.false63, %lor.lhs.false, %while.cond
  %inner.1.lcssa = phi %union.tree_node* [ %inner.1, %lor.lhs.false63 ], [ %inner.1, %lor.lhs.false ], [ %inner.1, %while.cond ], !dbg !10080
  %bf.load28.lcssa = phi i64 [ %bf.load28, %lor.lhs.false63 ], [ %bf.load28, %lor.lhs.false ], [ %bf.load28, %while.cond ], !dbg !10104
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1.lcssa, metadata !10073, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1.lcssa, metadata !10073, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1.lcssa, metadata !10073, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1.lcssa, metadata !10073, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1.lcssa, metadata !10073, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1.lcssa, metadata !10073, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1.lcssa, metadata !10073, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1.lcssa, metadata !10073, metadata !DIExpression()), !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.1.lcssa, metadata !10073, metadata !DIExpression()), !dbg !10080
  %17 = trunc i64 %bf.load28.lcssa to i32, !dbg !10111
  %bf.cast90 = and i32 %17, 65535, !dbg !10111
  call void @llvm.dbg.value(metadata i32 %bf.cast90, metadata !10075, metadata !DIExpression()), !dbg !10080
  %bf.cast90.off = add nsw i32 %bf.cast90, -91, !dbg !10112
  %switch = icmp ult i32 %bf.cast90.off, 2, !dbg !10112
  br i1 %switch, label %if.then94, label %if.end109, !dbg !10112

if.then94:                                        ; preds = %while.end
  %operands96 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.1.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10113
  %18 = load %union.tree_node*, %union.tree_node** %operands96, align 8, !dbg !10113
  call void @llvm.dbg.value(metadata %union.tree_node* %18, metadata !10076, metadata !DIExpression()), !dbg !10114
  %arrayidx100 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands96, i64 1, !dbg !10115
  %19 = load %union.tree_node*, %union.tree_node** %arrayidx100, align 8, !dbg !10115
  call void @llvm.dbg.value(metadata %union.tree_node* %19, metadata !10079, metadata !DIExpression()), !dbg !10114
  %call101 = tail call fastcc %union.tree_node* @build_builtin_expect_predicate(i32 %loc, %union.tree_node* %18, %union.tree_node* %arg1) #8, !dbg !10116
  call void @llvm.dbg.value(metadata %union.tree_node* %call101, metadata !10076, metadata !DIExpression()), !dbg !10114
  %call102 = tail call fastcc %union.tree_node* @build_builtin_expect_predicate(i32 %loc, %union.tree_node* %19, %union.tree_node* %arg1) #8, !dbg !10117
  call void @llvm.dbg.value(metadata %union.tree_node* %call102, metadata !10079, metadata !DIExpression()), !dbg !10114
  %type104 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.1.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10118
  %20 = load %union.tree_node*, %union.tree_node** %type104, align 8, !dbg !10118
  %call105 = tail call %union.tree_node* @build2_stat(i32 %bf.cast90, %union.tree_node* %20, %union.tree_node* %call101, %union.tree_node* %call102) #7, !dbg !10118
  call void @llvm.dbg.value(metadata %union.tree_node* %call105, metadata !10073, metadata !DIExpression()), !dbg !10080
  %type107 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10119
  %21 = load %union.tree_node*, %union.tree_node** %type107, align 8, !dbg !10119
  %call108 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %21, %union.tree_node* %call105) #7, !dbg !10120
  br label %cleanup

if.end109:                                        ; preds = %while.end
  %bf.load111 = load i64, i64* %0, align 8, !dbg !10121
  %bf.cast1145 = and i64 %bf.load111, 131072, !dbg !10121
  %tobool115 = icmp eq i64 %bf.cast1145, 0, !dbg !10121
  br i1 %tobool115, label %cleanup, label %if.end117, !dbg !10123

if.end117:                                        ; preds = %if.end109
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !10073, metadata !DIExpression()), !dbg !10080
  %call118 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %arg0) #7, !dbg !10124
  call void @llvm.dbg.value(metadata %union.tree_node* %call118, metadata !10073, metadata !DIExpression()), !dbg !10080
  %22 = getelementptr inbounds %union.tree_node, %union.tree_node* %call118, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10125
  %bf.load120 = load i64, i64* %22, align 8, !dbg !10125
  %bf.cast1226 = and i64 %bf.load120, 65535, !dbg !10127
  %cmp123 = icmp eq i64 %bf.cast1226, 121, !dbg !10127
  br i1 %cmp123, label %do.body.preheader, label %if.end158, !dbg !10128

do.body.preheader:                                ; preds = %if.end117
  br label %do.body, !dbg !10129

do.body:                                          ; preds = %do.body.backedge, %do.body.preheader
  %inner.2 = phi %union.tree_node* [ %call118, %do.body.preheader ], [ %23, %do.body.backedge ], !dbg !10080
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.2, metadata !10073, metadata !DIExpression()), !dbg !10080
  %operands126 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10131
  %23 = load %union.tree_node*, %union.tree_node** %operands126, align 8, !dbg !10131
  call void @llvm.dbg.value(metadata %union.tree_node* %23, metadata !10073, metadata !DIExpression()), !dbg !10080
  %24 = getelementptr inbounds %union.tree_node, %union.tree_node* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10133
  %bf.load129 = load i64, i64* %24, align 8, !dbg !10133
  %bf.cast1317 = and i64 %bf.load129, 65535, !dbg !10134
  %25 = or i64 %bf.cast1317, 4, !dbg !10129
  %26 = icmp eq i64 %25, 45, !dbg !10129
  br i1 %26, label %do.body.backedge, label %do.end, !dbg !10129

do.body.backedge:                                 ; preds = %do.body
  br label %do.body, !dbg !10080, !llvm.loop !10135

do.end:                                           ; preds = %do.body
  %.lcssa = phi %union.tree_node* [ %23, %do.body ], !dbg !10131
  %bf.cast1317.lcssa = phi i64 [ %bf.cast1317, %do.body ], !dbg !10134
  %cmp144 = icmp eq i64 %bf.cast1317.lcssa, 32, !dbg !10138
  br i1 %cmp144, label %land.lhs.true151, label %lor.lhs.false145, !dbg !10140

lor.lhs.false145:                                 ; preds = %do.end
  %cmp150 = icmp eq i64 %bf.cast1317.lcssa, 29, !dbg !10141
  br i1 %cmp150, label %land.lhs.true151, label %if.end158, !dbg !10142

land.lhs.true151:                                 ; preds = %lor.lhs.false145, %do.end
  %weak_flag = getelementptr inbounds %union.tree_node, %union.tree_node* %.lcssa, i64 0, i32 0, i32 0, i32 0, i32 4, !dbg !10143
  %27 = bitcast i24* %weak_flag to i32*, !dbg !10143
  %bf.load152 = load i32, i32* %27, align 8, !dbg !10143
  %28 = trunc i32 %bf.load152 to i8, !dbg !10143
  %tobool155 = icmp slt i8 %28, 0, !dbg !10143
  br i1 %tobool155, label %cleanup, label %if.end158, !dbg !10144

if.end158:                                        ; preds = %lor.lhs.false145, %land.lhs.true151, %if.end117
  br label %cleanup, !dbg !10145

cleanup:                                          ; preds = %if.end109, %land.lhs.true151, %land.lhs.true20, %if.end158, %if.then94
  %retval.0 = phi %union.tree_node* [ %call108, %if.then94 ], [ %arg0, %if.end158 ], [ %arg0, %land.lhs.true20 ], [ null, %if.end109 ], [ null, %land.lhs.true151 ], !dbg !10080
  ret %union.tree_node* %retval.0, !dbg !10146
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_pow(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %type) unnamed_addr #5 !dbg !10147 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10149, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !10150, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !10151, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !10152, metadata !DIExpression()), !dbg !10154
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10153, metadata !DIExpression()), !dbg !10154
  ret %union.tree_node* undef, !dbg !10155
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_powi(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %type) unnamed_addr #5 !dbg !10156 {
entry:
  %x = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10158, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !10159, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !10160, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !10161, metadata !DIExpression()), !dbg !10169
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10162, metadata !DIExpression()), !dbg !10169
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg0, i32 9) #8, !dbg !10170
  %tobool = icmp eq i8 %call, 0, !dbg !10170
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !10172

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 8) #8, !dbg !10173
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10173
  br i1 %tobool2, label %return, label %if.end, !dbg !10174

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call i32 @real_onep(%union.tree_node* %arg0) #7, !dbg !10175
  %tobool4 = icmp eq i32 %call3, 0, !dbg !10175
  br i1 %tobool4, label %if.end8, label %if.then5, !dbg !10177

if.then5:                                         ; preds = %if.end
  %call6 = tail call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst1) #7, !dbg !10178
  %call7 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call6, %union.tree_node* %arg1) #7, !dbg !10179
  br label %return, !dbg !10180

if.end8:                                          ; preds = %if.end
  %call9 = tail call i32 @host_integerp(%union.tree_node* %arg1, i32 0) #7, !dbg !10181
  %tobool10 = icmp eq i32 %call9, 0, !dbg !10181
  br i1 %tobool10, label %if.end45, label %if.then11, !dbg !10182

if.then11:                                        ; preds = %if.end8
  %int_cst12 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10183
  %low = bitcast i32* %int_cst12 to i64*, !dbg !10183
  %0 = load i64, i64* %low, align 8, !dbg !10183
  call void @llvm.dbg.value(metadata i64 %0, metadata !10163, metadata !DIExpression()), !dbg !10184
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10185
  %bf.load = load i64, i64* %1, align 8, !dbg !10185
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10186
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !10186
  br i1 %cmp, label %land.lhs.true, label %if.end31, !dbg !10187

land.lhs.true:                                    ; preds = %if.then11
  %bf.cast162 = and i64 %bf.load, 134217728, !dbg !10188
  %tobool17 = icmp eq i64 %bf.cast162, 0, !dbg !10188
  br i1 %tobool17, label %if.then18, label %if.end31, !dbg !10189

if.then18:                                        ; preds = %land.lhs.true
  %2 = bitcast %struct.real_value* %x to i8*, !dbg !10190
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #6, !dbg !10190
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10191
  %3 = bitcast i32* %real_cst_ptr to i8**, !dbg !10191
  %4 = load i8*, i8** %3, align 8, !dbg !10191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %4, i64 32, i1 false), !dbg !10191
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %type, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10192
  %bf.load20 = load i64, i64* %5, align 8, !dbg !10192
  %bf.cast223 = and i64 %bf.load20, 65535, !dbg !10192
  %cmp23 = icmp eq i64 %bf.cast223, 14, !dbg !10192
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !10192

cond.true:                                        ; preds = %if.then18
  %call24 = tail call i32 @vector_type_mode(%union.tree_node* %type) #7, !dbg !10192
  br label %cond.end, !dbg !10192

cond.false:                                       ; preds = %if.then18
  %type25 = bitcast %union.tree_node* %type to %struct.tree_type*, !dbg !10192
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type25, i64 0, i32 6, !dbg !10192
  %bf.load26 = load i32, i32* %mode, align 4, !dbg !10192
  %bf.lshr27 = lshr i32 %bf.load26, 16, !dbg !10192
  %bf.clear28 = and i32 %bf.lshr27, 255, !dbg !10192
  br label %cond.end, !dbg !10192

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call24, %cond.true ], [ %bf.clear28, %cond.false ], !dbg !10192
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !10166, metadata !DIExpression(DW_OP_deref)), !dbg !10193
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !10166, metadata !DIExpression(DW_OP_deref)), !dbg !10193
  %call29 = call zeroext i8 @real_powi(%struct.real_value* nonnull %x, i32 %cond, %struct.real_value* nonnull %x, i64 %0) #7, !dbg !10194
  call void @llvm.dbg.value(metadata %struct.real_value* %x, metadata !10166, metadata !DIExpression(DW_OP_deref)), !dbg !10193
  %call30 = call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 %x) #7, !dbg !10195
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #6, !dbg !10196
  br label %cleanup

if.end31:                                         ; preds = %land.lhs.true, %if.then11
  switch i64 %0, label %if.end44 [
    i64 0, label %if.then33
    i64 1, label %cleanup
    i64 -1, label %if.then41
  ], !dbg !10197

if.then33:                                        ; preds = %if.end31
  %call34 = tail call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst1) #7, !dbg !10198
  %call35 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call34, %union.tree_node* %arg0) #7, !dbg !10200
  br label %cleanup, !dbg !10201

if.then41:                                        ; preds = %if.end31
  %call42 = tail call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst1) #7, !dbg !10202
  %call43 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 75, %union.tree_node* %type, %union.tree_node* %call42, %union.tree_node* %arg0) #7, !dbg !10202
  br label %cleanup, !dbg !10204

if.end44:                                         ; preds = %if.end31
  br label %cleanup, !dbg !10205

cleanup:                                          ; preds = %if.end31, %if.end44, %if.then41, %if.then33, %cond.end
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then33 ], [ false, %if.then41 ], [ true, %if.end44 ], [ false, %cond.end ], [ false, %if.end31 ]
  %retval.0 = phi %union.tree_node* [ %call35, %if.then33 ], [ %call43, %if.then41 ], [ undef, %if.end44 ], [ %call30, %cond.end ], [ %arg0, %if.end31 ]
  br i1 %cleanup.dest.slot.0, label %if.end45, label %return

if.end45:                                         ; preds = %if.end8, %cleanup
  br label %return, !dbg !10206

return:                                           ; preds = %lor.lhs.false, %entry, %cleanup, %if.end45, %if.then5
  %retval.1 = phi %union.tree_node* [ %call7, %if.then5 ], [ %retval.0, %cleanup ], [ null, %if.end45 ], [ null, %lor.lhs.false ], [ null, %entry ], !dbg !10169
  ret %union.tree_node* %retval.1, !dbg !10207
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_copysign(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %type) unnamed_addr #5 !dbg !10208 {
entry:
  %c1 = alloca %struct.real_value, align 8
  %c2 = alloca %struct.real_value, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10210, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !10211, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !10212, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !10213, metadata !DIExpression()), !dbg !10220
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10214, metadata !DIExpression()), !dbg !10220
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 9) #8, !dbg !10221
  %tobool = icmp eq i8 %call, 0, !dbg !10221
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !10223

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg2, i32 9) #8, !dbg !10224
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10224
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !10225

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call i32 @operand_equal_p(%union.tree_node* %arg1, %union.tree_node* %arg2, i32 0) #7, !dbg !10226
  %tobool4 = icmp eq i32 %call3, 0, !dbg !10226
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !10228

if.then5:                                         ; preds = %if.end
  %call6 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %arg1) #7, !dbg !10229
  br label %cleanup, !dbg !10230

if.end7:                                          ; preds = %if.end
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10231
  %bf.load = load i64, i64* %0, align 8, !dbg !10231
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10232
  %cmp = icmp eq i64 %bf.cast1, 24, !dbg !10232
  br i1 %cmp, label %land.lhs.true, label %if.end30, !dbg !10233

land.lhs.true:                                    ; preds = %if.end7
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10234
  %bf.load9 = load i64, i64* %1, align 8, !dbg !10234
  %bf.cast112 = and i64 %bf.load9, 65535, !dbg !10235
  %cmp12 = icmp eq i64 %bf.cast112, 24, !dbg !10235
  br i1 %cmp12, label %land.lhs.true13, label %if.end30, !dbg !10236

land.lhs.true13:                                  ; preds = %land.lhs.true
  %bf.cast173 = and i64 %bf.load, 134217728, !dbg !10237
  %tobool18 = icmp eq i64 %bf.cast173, 0, !dbg !10237
  br i1 %tobool18, label %land.lhs.true19, label %if.end30, !dbg !10238

land.lhs.true19:                                  ; preds = %land.lhs.true13
  %bf.cast244 = and i64 %bf.load9, 134217728, !dbg !10239
  %tobool25 = icmp eq i64 %bf.cast244, 0, !dbg !10239
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !10240

if.then26:                                        ; preds = %land.lhs.true19
  %2 = bitcast %struct.real_value* %c1 to i8*, !dbg !10241
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #6, !dbg !10241
  %3 = bitcast %struct.real_value* %c2 to i8*, !dbg !10241
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #6, !dbg !10241
  %real_cst_ptr = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10242
  %4 = bitcast i32* %real_cst_ptr to i8**, !dbg !10242
  %5 = load i8*, i8** %4, align 8, !dbg !10242
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %5, i64 32, i1 false), !dbg !10242
  %real_cst_ptr28 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10243
  %6 = bitcast i32* %real_cst_ptr28 to i8**, !dbg !10243
  %7 = load i8*, i8** %6, align 8, !dbg !10243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 %7, i64 32, i1 false), !dbg !10243
  call void @llvm.dbg.value(metadata %struct.real_value* %c1, metadata !10216, metadata !DIExpression(DW_OP_deref)), !dbg !10244
  call void @llvm.dbg.value(metadata %struct.real_value* %c2, metadata !10219, metadata !DIExpression(DW_OP_deref)), !dbg !10244
  call void @real_copysign(%struct.real_value* nonnull %c1, %struct.real_value* nonnull %c2) #7, !dbg !10245
  call void @llvm.dbg.value(metadata %struct.real_value* %c1, metadata !10216, metadata !DIExpression(DW_OP_deref)), !dbg !10244
  %call29 = call %union.tree_node* @build_real(%union.tree_node* %type, %struct.real_value* nonnull byval(%struct.real_value) align 8 %c1) #7, !dbg !10246
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #6, !dbg !10247
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #6, !dbg !10247
  br label %cleanup

if.end30:                                         ; preds = %land.lhs.true19, %land.lhs.true13, %land.lhs.true, %if.end7
  %call31 = tail call zeroext i8 @tree_expr_nonnegative_p(%union.tree_node* %arg2) #7, !dbg !10248
  %tobool32 = icmp eq i8 %call31, 0, !dbg !10248
  br i1 %tobool32, label %if.end36, label %if.then33, !dbg !10250

if.then33:                                        ; preds = %if.end30
  %call34 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 82, %union.tree_node* %type, %union.tree_node* %arg1) #7, !dbg !10251
  %call35 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call34, %union.tree_node* %arg2) #7, !dbg !10252
  br label %cleanup, !dbg !10253

if.end36:                                         ; preds = %if.end30
  %call37 = tail call %union.tree_node* @fold_strip_sign_ops(%union.tree_node* %arg1) #7, !dbg !10254
  call void @llvm.dbg.value(metadata %union.tree_node* %call37, metadata !10215, metadata !DIExpression()), !dbg !10220
  %tobool38 = icmp eq %union.tree_node* %call37, null, !dbg !10255
  br i1 %tobool38, label %cleanup, label %if.then39, !dbg !10257

if.then39:                                        ; preds = %if.end36
  %call40 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* %fndecl, i32 2, %union.tree_node* nonnull %call37, %union.tree_node* %arg2) #8, !dbg !10258
  br label %cleanup, !dbg !10259

cleanup:                                          ; preds = %if.end36, %lor.lhs.false, %entry, %if.then39, %if.then33, %if.then26, %if.then5
  %retval.0 = phi %union.tree_node* [ %call6, %if.then5 ], [ %call35, %if.then33 ], [ %call40, %if.then39 ], [ %call29, %if.then26 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end36 ], !dbg !10220
  ret %union.tree_node* %retval.0, !dbg !10260
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_fmin_fmax(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %type, i8 zeroext %max) unnamed_addr #5 !dbg !10261 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10263, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !10264, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !10265, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10266, metadata !DIExpression()), !dbg !10268
  call void @llvm.dbg.value(metadata i8 %max, metadata !10267, metadata !DIExpression()), !dbg !10268
  ret %union.tree_node* undef, !dbg !10269
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_unordered_cmp(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %arg0, %union.tree_node* %arg1, i32 %unordered_code, i32 %ordered_code) unnamed_addr #5 !dbg !10270 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10274, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !10275, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !10276, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !10277, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i32 %unordered_code, metadata !10278, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata i32 %ordered_code, metadata !10279, metadata !DIExpression()), !dbg !10287
  %type1 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10288
  %0 = bitcast %union.tree_node** %type1 to %struct.tree_common**, !dbg !10288
  %1 = load %struct.tree_common*, %struct.tree_common** %0, align 8, !dbg !10288
  %type3 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %1, i64 0, i32 2, !dbg !10288
  %2 = load %union.tree_node*, %union.tree_node** %type3, align 8, !dbg !10288
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10280, metadata !DIExpression()), !dbg !10287
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10286, metadata !DIExpression()), !dbg !10287
  %type6 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10289
  %3 = load %union.tree_node*, %union.tree_node** %type6, align 8, !dbg !10289
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !10282, metadata !DIExpression()), !dbg !10287
  %type8 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10290
  %4 = load %union.tree_node*, %union.tree_node** %type8, align 8, !dbg !10290
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10283, metadata !DIExpression()), !dbg !10287
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10291
  %bf.load = load i64, i64* %5, align 8, !dbg !10291
  %6 = trunc i64 %bf.load to i32, !dbg !10291
  %bf.cast = and i32 %6, 65535, !dbg !10291
  call void @llvm.dbg.value(metadata i32 %bf.cast, metadata !10284, metadata !DIExpression()), !dbg !10287
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10292
  %bf.load10 = load i64, i64* %7, align 8, !dbg !10292
  %8 = trunc i64 %bf.load10 to i32, !dbg !10292
  %bf.cast12 = and i32 %8, 65535, !dbg !10292
  call void @llvm.dbg.value(metadata i32 %bf.cast12, metadata !10285, metadata !DIExpression()), !dbg !10287
  %cmp = icmp eq i32 %bf.cast, 9, !dbg !10293
  %cmp13 = icmp eq i32 %bf.cast12, 9, !dbg !10295
  %or.cond = and i1 %cmp, %cmp13, !dbg !10296
  br i1 %or.cond, label %if.then, label %if.else, !dbg !10296

if.then:                                          ; preds = %entry
  %type15 = bitcast %union.tree_node* %3 to %struct.tree_type*, !dbg !10297
  %precision = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type15, i64 0, i32 6, !dbg !10297
  %bf.load16 = load i32, i32* %precision, align 4, !dbg !10297
  %bf.clear17 = and i32 %bf.load16, 1023, !dbg !10297
  %type18 = bitcast %union.tree_node* %4 to %struct.tree_type*, !dbg !10298
  %precision19 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type18, i64 0, i32 6, !dbg !10298
  %bf.load20 = load i32, i32* %precision19, align 4, !dbg !10298
  %bf.clear21 = and i32 %bf.load20, 1023, !dbg !10298
  %cmp22 = icmp ult i32 %bf.clear17, %bf.clear21, !dbg !10299
  %. = select i1 %cmp22, %union.tree_node* %4, %union.tree_node* %3, !dbg !10297
  call void @llvm.dbg.value(metadata %union.tree_node* %., metadata !10286, metadata !DIExpression()), !dbg !10287
  br label %if.end33, !dbg !10300

if.else:                                          ; preds = %entry
  %cmp25 = icmp eq i32 %bf.cast12, 8, !dbg !10301
  %or.cond1 = and i1 %cmp, %cmp25, !dbg !10303
  br i1 %or.cond1, label %if.end33, label %if.else27, !dbg !10303

if.else27:                                        ; preds = %if.else
  %cmp28 = icmp eq i32 %bf.cast, 8, !dbg !10304
  %or.cond2 = and i1 %cmp28, %cmp13, !dbg !10306
  %cmp_type.0 = select i1 %or.cond2, %union.tree_node* %4, %union.tree_node* null, !dbg !10306
  br label %if.end33, !dbg !10306

if.end33:                                         ; preds = %if.else, %if.else27, %if.then
  %cmp_type.2 = phi %union.tree_node* [ %., %if.then ], [ %3, %if.else ], [ %cmp_type.0, %if.else27 ], !dbg !10307
  call void @llvm.dbg.value(metadata %union.tree_node* %cmp_type.2, metadata !10286, metadata !DIExpression()), !dbg !10287
  %call = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %cmp_type.2, %union.tree_node* %arg0) #7, !dbg !10308
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10276, metadata !DIExpression()), !dbg !10287
  %call34 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %cmp_type.2, %union.tree_node* %arg1) #7, !dbg !10309
  call void @llvm.dbg.value(metadata %union.tree_node* %call34, metadata !10277, metadata !DIExpression()), !dbg !10287
  %cmp35 = icmp eq i32 %unordered_code, 103, !dbg !10310
  %type38 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10287
  %9 = bitcast %union.tree_node** %type38 to i64**, !dbg !10287
  %10 = load i64*, i64** %9, align 8, !dbg !10287
  %bf.load40 = load i64, i64* %10, align 8, !dbg !10287
  %bf.cast425 = and i64 %bf.load40, 65535, !dbg !10287
  %cmp43 = icmp eq i64 %bf.cast425, 14, !dbg !10287
  %.cast = bitcast i64* %10 to %union.tree_node*, !dbg !10287
  br i1 %cmp35, label %if.then36, label %if.end479, !dbg !10312

if.then36:                                        ; preds = %if.end33
  br i1 %cmp43, label %cond.true44, label %cond.false48, !dbg !10313

cond.true44:                                      ; preds = %if.then36
  %call47 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !10313
  br label %cond.end54, !dbg !10313

cond.false48:                                     ; preds = %if.then36
  %type51 = bitcast i64* %10 to %struct.tree_type*, !dbg !10313
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type51, i64 0, i32 6, !dbg !10313
  %bf.load52 = load i32, i32* %mode, align 4, !dbg !10313
  %bf.lshr = lshr i32 %bf.load52, 16, !dbg !10313
  %bf.clear53 = and i32 %bf.lshr, 255, !dbg !10313
  br label %cond.end54, !dbg !10313

cond.end54:                                       ; preds = %cond.false48, %cond.true44
  %cond55 = phi i32 [ %call47, %cond.true44 ], [ %bf.clear53, %cond.false48 ], !dbg !10313
  %idxprom = zext i32 %cond55 to i64, !dbg !10313
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10313
  %11 = load i8, i8* %arrayidx, align 1, !dbg !10313
  %cmp56 = icmp eq i8 %11, 8, !dbg !10313
  br i1 %cmp56, label %land.lhs.true141, label %lor.lhs.false, !dbg !10313

lor.lhs.false:                                    ; preds = %cond.end54
  %12 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load61 = load i64, i64* %12, align 8, !dbg !10313
  %bf.cast6334 = and i64 %bf.load61, 65535, !dbg !10313
  %cmp64 = icmp eq i64 %bf.cast6334, 14, !dbg !10313
  br i1 %cmp64, label %cond.true66, label %cond.false70, !dbg !10313

cond.true66:                                      ; preds = %lor.lhs.false
  %.cast35 = bitcast i64* %12 to %union.tree_node*, !dbg !10313
  %call69 = tail call i32 @vector_type_mode(%union.tree_node* %.cast35) #7, !dbg !10313
  br label %cond.end78, !dbg !10313

cond.false70:                                     ; preds = %lor.lhs.false
  %type73 = bitcast i64* %12 to %struct.tree_type*, !dbg !10313
  %mode74 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type73, i64 0, i32 6, !dbg !10313
  %bf.load75 = load i32, i32* %mode74, align 4, !dbg !10313
  %bf.lshr76 = lshr i32 %bf.load75, 16, !dbg !10313
  %bf.clear77 = and i32 %bf.lshr76, 255, !dbg !10313
  br label %cond.end78, !dbg !10313

cond.end78:                                       ; preds = %cond.false70, %cond.true66
  %cond79 = phi i32 [ %call69, %cond.true66 ], [ %bf.clear77, %cond.false70 ], !dbg !10313
  %idxprom80 = zext i32 %cond79 to i64, !dbg !10313
  %arrayidx81 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom80, !dbg !10313
  %13 = load i8, i8* %arrayidx81, align 1, !dbg !10313
  %cmp83 = icmp eq i8 %13, 9, !dbg !10313
  br i1 %cmp83, label %land.lhs.true141, label %lor.lhs.false85, !dbg !10313

lor.lhs.false85:                                  ; preds = %cond.end78
  %14 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load89 = load i64, i64* %14, align 8, !dbg !10313
  %bf.cast9136 = and i64 %bf.load89, 65535, !dbg !10313
  %cmp92 = icmp eq i64 %bf.cast9136, 14, !dbg !10313
  br i1 %cmp92, label %cond.true94, label %cond.false98, !dbg !10313

cond.true94:                                      ; preds = %lor.lhs.false85
  %.cast37 = bitcast i64* %14 to %union.tree_node*, !dbg !10313
  %call97 = tail call i32 @vector_type_mode(%union.tree_node* %.cast37) #7, !dbg !10313
  br label %cond.end106, !dbg !10313

cond.false98:                                     ; preds = %lor.lhs.false85
  %type101 = bitcast i64* %14 to %struct.tree_type*, !dbg !10313
  %mode102 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type101, i64 0, i32 6, !dbg !10313
  %bf.load103 = load i32, i32* %mode102, align 4, !dbg !10313
  %bf.lshr104 = lshr i32 %bf.load103, 16, !dbg !10313
  %bf.clear105 = and i32 %bf.lshr104, 255, !dbg !10313
  br label %cond.end106, !dbg !10313

cond.end106:                                      ; preds = %cond.false98, %cond.true94
  %cond107 = phi i32 [ %call97, %cond.true94 ], [ %bf.clear105, %cond.false98 ], !dbg !10313
  %idxprom108 = zext i32 %cond107 to i64, !dbg !10313
  %arrayidx109 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom108, !dbg !10313
  %15 = load i8, i8* %arrayidx109, align 1, !dbg !10313
  %cmp111 = icmp eq i8 %15, 11, !dbg !10313
  br i1 %cmp111, label %land.lhs.true141, label %lor.lhs.false113, !dbg !10313

lor.lhs.false113:                                 ; preds = %cond.end106
  %16 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load117 = load i64, i64* %16, align 8, !dbg !10313
  %bf.cast11938 = and i64 %bf.load117, 65535, !dbg !10313
  %cmp120 = icmp eq i64 %bf.cast11938, 14, !dbg !10313
  br i1 %cmp120, label %cond.true122, label %cond.false126, !dbg !10313

cond.true122:                                     ; preds = %lor.lhs.false113
  %.cast39 = bitcast i64* %16 to %union.tree_node*, !dbg !10313
  %call125 = tail call i32 @vector_type_mode(%union.tree_node* %.cast39) #7, !dbg !10313
  br label %cond.end134, !dbg !10313

cond.false126:                                    ; preds = %lor.lhs.false113
  %type129 = bitcast i64* %16 to %struct.tree_type*, !dbg !10313
  %mode130 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type129, i64 0, i32 6, !dbg !10313
  %bf.load131 = load i32, i32* %mode130, align 4, !dbg !10313
  %bf.lshr132 = lshr i32 %bf.load131, 16, !dbg !10313
  %bf.clear133 = and i32 %bf.lshr132, 255, !dbg !10313
  br label %cond.end134, !dbg !10313

cond.end134:                                      ; preds = %cond.false126, %cond.true122
  %cond135 = phi i32 [ %call125, %cond.true122 ], [ %bf.clear133, %cond.false126 ], !dbg !10313
  %idxprom136 = zext i32 %cond135 to i64, !dbg !10313
  %arrayidx137 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom136, !dbg !10313
  %17 = load i8, i8* %arrayidx137, align 1, !dbg !10313
  %cmp139 = icmp eq i8 %17, 17, !dbg !10313
  br i1 %cmp139, label %land.lhs.true141, label %if.then475, !dbg !10313

land.lhs.true141:                                 ; preds = %cond.end134, %cond.end106, %cond.end78, %cond.end54
  %18 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load145 = load i64, i64* %18, align 8, !dbg !10313
  %bf.cast14740 = and i64 %bf.load145, 65535, !dbg !10313
  %cmp148 = icmp eq i64 %bf.cast14740, 14, !dbg !10313
  br i1 %cmp148, label %cond.true150, label %cond.false154, !dbg !10313

cond.true150:                                     ; preds = %land.lhs.true141
  %.cast41 = bitcast i64* %18 to %union.tree_node*, !dbg !10313
  %call153 = tail call i32 @vector_type_mode(%union.tree_node* %.cast41) #7, !dbg !10313
  br label %cond.end162, !dbg !10313

cond.false154:                                    ; preds = %land.lhs.true141
  %type157 = bitcast i64* %18 to %struct.tree_type*, !dbg !10313
  %mode158 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type157, i64 0, i32 6, !dbg !10313
  %bf.load159 = load i32, i32* %mode158, align 4, !dbg !10313
  %bf.lshr160 = lshr i32 %bf.load159, 16, !dbg !10313
  %bf.clear161 = and i32 %bf.lshr160, 255, !dbg !10313
  br label %cond.end162, !dbg !10313

cond.end162:                                      ; preds = %cond.false154, %cond.true150
  %cond163 = phi i32 [ %call153, %cond.true150 ], [ %bf.clear161, %cond.false154 ], !dbg !10313
  %idxprom164 = zext i32 %cond163 to i64, !dbg !10313
  %arrayidx165 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom164, !dbg !10313
  %19 = load i8, i8* %arrayidx165, align 1, !dbg !10313
  %cmp167 = icmp eq i8 %19, 8, !dbg !10313
  br i1 %cmp167, label %cond.true197, label %lor.lhs.false169, !dbg !10313

lor.lhs.false169:                                 ; preds = %cond.end162
  %20 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load173 = load i64, i64* %20, align 8, !dbg !10313
  %bf.cast17542 = and i64 %bf.load173, 65535, !dbg !10313
  %cmp176 = icmp eq i64 %bf.cast17542, 14, !dbg !10313
  br i1 %cmp176, label %cond.true178, label %cond.false182, !dbg !10313

cond.true178:                                     ; preds = %lor.lhs.false169
  %.cast43 = bitcast i64* %20 to %union.tree_node*, !dbg !10313
  %call181 = tail call i32 @vector_type_mode(%union.tree_node* %.cast43) #7, !dbg !10313
  br label %cond.end190, !dbg !10313

cond.false182:                                    ; preds = %lor.lhs.false169
  %type185 = bitcast i64* %20 to %struct.tree_type*, !dbg !10313
  %mode186 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type185, i64 0, i32 6, !dbg !10313
  %bf.load187 = load i32, i32* %mode186, align 4, !dbg !10313
  %bf.lshr188 = lshr i32 %bf.load187, 16, !dbg !10313
  %bf.clear189 = and i32 %bf.lshr188, 255, !dbg !10313
  br label %cond.end190, !dbg !10313

cond.end190:                                      ; preds = %cond.false182, %cond.true178
  %cond191 = phi i32 [ %call181, %cond.true178 ], [ %bf.clear189, %cond.false182 ], !dbg !10313
  %idxprom192 = zext i32 %cond191 to i64, !dbg !10313
  %arrayidx193 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom192, !dbg !10313
  %21 = load i8, i8* %arrayidx193, align 1, !dbg !10313
  %cmp195 = icmp eq i8 %21, 9, !dbg !10313
  br i1 %cmp195, label %cond.true197, label %cond.false220, !dbg !10313

cond.true197:                                     ; preds = %cond.end190, %cond.end162
  %22 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load201 = load i64, i64* %22, align 8, !dbg !10313
  %bf.cast20360 = and i64 %bf.load201, 65535, !dbg !10313
  %cmp204 = icmp eq i64 %bf.cast20360, 14, !dbg !10313
  br i1 %cmp204, label %cond.true206, label %cond.false210, !dbg !10313

cond.true206:                                     ; preds = %cond.true197
  %.cast61 = bitcast i64* %22 to %union.tree_node*, !dbg !10313
  %call209 = tail call i32 @vector_type_mode(%union.tree_node* %.cast61) #7, !dbg !10313
  br label %cond.end246, !dbg !10313

cond.false210:                                    ; preds = %cond.true197
  %type213 = bitcast i64* %22 to %struct.tree_type*, !dbg !10313
  %mode214 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type213, i64 0, i32 6, !dbg !10313
  %bf.load215 = load i32, i32* %mode214, align 4, !dbg !10313
  %bf.lshr216 = lshr i32 %bf.load215, 16, !dbg !10313
  %bf.clear217 = and i32 %bf.lshr216, 255, !dbg !10313
  br label %cond.end246, !dbg !10313

cond.false220:                                    ; preds = %cond.end190
  %23 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load224 = load i64, i64* %23, align 8, !dbg !10313
  %bf.cast22644 = and i64 %bf.load224, 65535, !dbg !10313
  %cmp227 = icmp eq i64 %bf.cast22644, 14, !dbg !10313
  br i1 %cmp227, label %cond.true229, label %cond.false233, !dbg !10313

cond.true229:                                     ; preds = %cond.false220
  %.cast45 = bitcast i64* %23 to %union.tree_node*, !dbg !10313
  %call232 = tail call i32 @vector_type_mode(%union.tree_node* %.cast45) #7, !dbg !10313
  br label %cond.end241, !dbg !10313

cond.false233:                                    ; preds = %cond.false220
  %type236 = bitcast i64* %23 to %struct.tree_type*, !dbg !10313
  %mode237 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type236, i64 0, i32 6, !dbg !10313
  %bf.load238 = load i32, i32* %mode237, align 4, !dbg !10313
  %bf.lshr239 = lshr i32 %bf.load238, 16, !dbg !10313
  %bf.clear240 = and i32 %bf.lshr239, 255, !dbg !10313
  br label %cond.end241, !dbg !10313

cond.end241:                                      ; preds = %cond.false233, %cond.true229
  %cond242 = phi i32 [ %call232, %cond.true229 ], [ %bf.clear240, %cond.false233 ], !dbg !10313
  %idxprom243 = zext i32 %cond242 to i64, !dbg !10313
  %arrayidx244 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom243, !dbg !10313
  %24 = load i8, i8* %arrayidx244, align 1, !dbg !10313
  %conv245 = zext i8 %24 to i32, !dbg !10313
  br label %cond.end246, !dbg !10313

cond.end246:                                      ; preds = %cond.true206, %cond.false210, %cond.end241
  %cond247 = phi i32 [ %conv245, %cond.end241 ], [ %call209, %cond.true206 ], [ %bf.clear217, %cond.false210 ], !dbg !10313
  %idxprom248 = zext i32 %cond247 to i64, !dbg !10313
  %arrayidx249 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom248, !dbg !10313
  %25 = load i8, i8* %arrayidx249, align 1, !dbg !10313
  %cmp251 = icmp eq i8 %25, 9, !dbg !10313
  %26 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load257 = load i64, i64* %26, align 8, !dbg !10313
  %bf.cast25946 = and i64 %bf.load257, 65535, !dbg !10313
  %cmp260 = icmp eq i64 %bf.cast25946, 14, !dbg !10313
  %.cast47 = bitcast i64* %26 to %union.tree_node*, !dbg !10313
  br i1 %cmp251, label %cond.true253, label %cond.false360, !dbg !10313

cond.true253:                                     ; preds = %cond.end246
  br i1 %cmp260, label %cond.true262, label %cond.false266, !dbg !10313

cond.true262:                                     ; preds = %cond.true253
  %call265 = tail call i32 @vector_type_mode(%union.tree_node* %.cast47) #7, !dbg !10313
  br label %cond.end274, !dbg !10313

cond.false266:                                    ; preds = %cond.true253
  %type269 = bitcast i64* %26 to %struct.tree_type*, !dbg !10313
  %mode270 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type269, i64 0, i32 6, !dbg !10313
  %bf.load271 = load i32, i32* %mode270, align 4, !dbg !10313
  %bf.lshr272 = lshr i32 %bf.load271, 16, !dbg !10313
  %bf.clear273 = and i32 %bf.lshr272, 255, !dbg !10313
  br label %cond.end274, !dbg !10313

cond.end274:                                      ; preds = %cond.false266, %cond.true262
  %cond275 = phi i32 [ %call265, %cond.true262 ], [ %bf.clear273, %cond.false266 ], !dbg !10313
  %idxprom276 = zext i32 %cond275 to i64, !dbg !10313
  %arrayidx277 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom276, !dbg !10313
  %27 = load i8, i8* %arrayidx277, align 1, !dbg !10313
  %cmp279 = icmp eq i8 %27, 8, !dbg !10313
  br i1 %cmp279, label %cond.true309, label %lor.lhs.false281, !dbg !10313

lor.lhs.false281:                                 ; preds = %cond.end274
  %28 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load285 = load i64, i64* %28, align 8, !dbg !10313
  %bf.cast28754 = and i64 %bf.load285, 65535, !dbg !10313
  %cmp288 = icmp eq i64 %bf.cast28754, 14, !dbg !10313
  br i1 %cmp288, label %cond.true290, label %cond.false294, !dbg !10313

cond.true290:                                     ; preds = %lor.lhs.false281
  %.cast55 = bitcast i64* %28 to %union.tree_node*, !dbg !10313
  %call293 = tail call i32 @vector_type_mode(%union.tree_node* %.cast55) #7, !dbg !10313
  br label %cond.end302, !dbg !10313

cond.false294:                                    ; preds = %lor.lhs.false281
  %type297 = bitcast i64* %28 to %struct.tree_type*, !dbg !10313
  %mode298 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type297, i64 0, i32 6, !dbg !10313
  %bf.load299 = load i32, i32* %mode298, align 4, !dbg !10313
  %bf.lshr300 = lshr i32 %bf.load299, 16, !dbg !10313
  %bf.clear301 = and i32 %bf.lshr300, 255, !dbg !10313
  br label %cond.end302, !dbg !10313

cond.end302:                                      ; preds = %cond.false294, %cond.true290
  %cond303 = phi i32 [ %call293, %cond.true290 ], [ %bf.clear301, %cond.false294 ], !dbg !10313
  %idxprom304 = zext i32 %cond303 to i64, !dbg !10313
  %arrayidx305 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom304, !dbg !10313
  %29 = load i8, i8* %arrayidx305, align 1, !dbg !10313
  %cmp307 = icmp eq i8 %29, 9, !dbg !10313
  br i1 %cmp307, label %cond.true309, label %cond.false332, !dbg !10313

cond.true309:                                     ; preds = %cond.end302, %cond.end274
  %30 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load313 = load i64, i64* %30, align 8, !dbg !10313
  %bf.cast31558 = and i64 %bf.load313, 65535, !dbg !10313
  %cmp316 = icmp eq i64 %bf.cast31558, 14, !dbg !10313
  br i1 %cmp316, label %cond.true318, label %cond.false322, !dbg !10313

cond.true318:                                     ; preds = %cond.true309
  %.cast59 = bitcast i64* %30 to %union.tree_node*, !dbg !10313
  %call321 = tail call i32 @vector_type_mode(%union.tree_node* %.cast59) #7, !dbg !10313
  br label %cond.end358, !dbg !10313

cond.false322:                                    ; preds = %cond.true309
  %type325 = bitcast i64* %30 to %struct.tree_type*, !dbg !10313
  %mode326 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type325, i64 0, i32 6, !dbg !10313
  %bf.load327 = load i32, i32* %mode326, align 4, !dbg !10313
  %bf.lshr328 = lshr i32 %bf.load327, 16, !dbg !10313
  %bf.clear329 = and i32 %bf.lshr328, 255, !dbg !10313
  br label %cond.end358, !dbg !10313

cond.false332:                                    ; preds = %cond.end302
  %31 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load336 = load i64, i64* %31, align 8, !dbg !10313
  %bf.cast33856 = and i64 %bf.load336, 65535, !dbg !10313
  %cmp339 = icmp eq i64 %bf.cast33856, 14, !dbg !10313
  br i1 %cmp339, label %cond.true341, label %cond.false345, !dbg !10313

cond.true341:                                     ; preds = %cond.false332
  %.cast57 = bitcast i64* %31 to %union.tree_node*, !dbg !10313
  %call344 = tail call i32 @vector_type_mode(%union.tree_node* %.cast57) #7, !dbg !10313
  br label %cond.end353, !dbg !10313

cond.false345:                                    ; preds = %cond.false332
  %type348 = bitcast i64* %31 to %struct.tree_type*, !dbg !10313
  %mode349 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type348, i64 0, i32 6, !dbg !10313
  %bf.load350 = load i32, i32* %mode349, align 4, !dbg !10313
  %bf.lshr351 = lshr i32 %bf.load350, 16, !dbg !10313
  %bf.clear352 = and i32 %bf.lshr351, 255, !dbg !10313
  br label %cond.end353, !dbg !10313

cond.end353:                                      ; preds = %cond.false345, %cond.true341
  %cond354 = phi i32 [ %call344, %cond.true341 ], [ %bf.clear352, %cond.false345 ], !dbg !10313
  %idxprom355 = zext i32 %cond354 to i64, !dbg !10313
  %arrayidx356 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom355, !dbg !10313
  %32 = load i8, i8* %arrayidx356, align 1, !dbg !10313
  %conv357 = zext i8 %32 to i32, !dbg !10313
  br label %cond.end358, !dbg !10313

cond.end358:                                      ; preds = %cond.true318, %cond.false322, %cond.end353
  %cond359 = phi i32 [ %conv357, %cond.end353 ], [ %call321, %cond.true318 ], [ %bf.clear329, %cond.false322 ], !dbg !10313
  br label %cond.end468, !dbg !10313

cond.false360:                                    ; preds = %cond.end246
  br i1 %cmp260, label %cond.true369, label %cond.false373, !dbg !10313

cond.true369:                                     ; preds = %cond.false360
  %call372 = tail call i32 @vector_type_mode(%union.tree_node* %.cast47) #7, !dbg !10313
  br label %cond.end381, !dbg !10313

cond.false373:                                    ; preds = %cond.false360
  %type376 = bitcast i64* %26 to %struct.tree_type*, !dbg !10313
  %mode377 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type376, i64 0, i32 6, !dbg !10313
  %bf.load378 = load i32, i32* %mode377, align 4, !dbg !10313
  %bf.lshr379 = lshr i32 %bf.load378, 16, !dbg !10313
  %bf.clear380 = and i32 %bf.lshr379, 255, !dbg !10313
  br label %cond.end381, !dbg !10313

cond.end381:                                      ; preds = %cond.false373, %cond.true369
  %cond382 = phi i32 [ %call372, %cond.true369 ], [ %bf.clear380, %cond.false373 ], !dbg !10313
  %idxprom383 = zext i32 %cond382 to i64, !dbg !10313
  %arrayidx384 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom383, !dbg !10313
  %33 = load i8, i8* %arrayidx384, align 1, !dbg !10313
  %cmp386 = icmp eq i8 %33, 8, !dbg !10313
  br i1 %cmp386, label %cond.true416, label %lor.lhs.false388, !dbg !10313

lor.lhs.false388:                                 ; preds = %cond.end381
  %34 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load392 = load i64, i64* %34, align 8, !dbg !10313
  %bf.cast39448 = and i64 %bf.load392, 65535, !dbg !10313
  %cmp395 = icmp eq i64 %bf.cast39448, 14, !dbg !10313
  br i1 %cmp395, label %cond.true397, label %cond.false401, !dbg !10313

cond.true397:                                     ; preds = %lor.lhs.false388
  %.cast49 = bitcast i64* %34 to %union.tree_node*, !dbg !10313
  %call400 = tail call i32 @vector_type_mode(%union.tree_node* %.cast49) #7, !dbg !10313
  br label %cond.end409, !dbg !10313

cond.false401:                                    ; preds = %lor.lhs.false388
  %type404 = bitcast i64* %34 to %struct.tree_type*, !dbg !10313
  %mode405 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type404, i64 0, i32 6, !dbg !10313
  %bf.load406 = load i32, i32* %mode405, align 4, !dbg !10313
  %bf.lshr407 = lshr i32 %bf.load406, 16, !dbg !10313
  %bf.clear408 = and i32 %bf.lshr407, 255, !dbg !10313
  br label %cond.end409, !dbg !10313

cond.end409:                                      ; preds = %cond.false401, %cond.true397
  %cond410 = phi i32 [ %call400, %cond.true397 ], [ %bf.clear408, %cond.false401 ], !dbg !10313
  %idxprom411 = zext i32 %cond410 to i64, !dbg !10313
  %arrayidx412 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom411, !dbg !10313
  %35 = load i8, i8* %arrayidx412, align 1, !dbg !10313
  %cmp414 = icmp eq i8 %35, 9, !dbg !10313
  br i1 %cmp414, label %cond.true416, label %cond.false439, !dbg !10313

cond.true416:                                     ; preds = %cond.end409, %cond.end381
  %36 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load420 = load i64, i64* %36, align 8, !dbg !10313
  %bf.cast42252 = and i64 %bf.load420, 65535, !dbg !10313
  %cmp423 = icmp eq i64 %bf.cast42252, 14, !dbg !10313
  br i1 %cmp423, label %cond.true425, label %cond.false429, !dbg !10313

cond.true425:                                     ; preds = %cond.true416
  %.cast53 = bitcast i64* %36 to %union.tree_node*, !dbg !10313
  %call428 = tail call i32 @vector_type_mode(%union.tree_node* %.cast53) #7, !dbg !10313
  br label %cond.end465, !dbg !10313

cond.false429:                                    ; preds = %cond.true416
  %type432 = bitcast i64* %36 to %struct.tree_type*, !dbg !10313
  %mode433 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type432, i64 0, i32 6, !dbg !10313
  %bf.load434 = load i32, i32* %mode433, align 4, !dbg !10313
  %bf.lshr435 = lshr i32 %bf.load434, 16, !dbg !10313
  %bf.clear436 = and i32 %bf.lshr435, 255, !dbg !10313
  br label %cond.end465, !dbg !10313

cond.false439:                                    ; preds = %cond.end409
  %37 = load i64*, i64** %9, align 8, !dbg !10313
  %bf.load443 = load i64, i64* %37, align 8, !dbg !10313
  %bf.cast44550 = and i64 %bf.load443, 65535, !dbg !10313
  %cmp446 = icmp eq i64 %bf.cast44550, 14, !dbg !10313
  br i1 %cmp446, label %cond.true448, label %cond.false452, !dbg !10313

cond.true448:                                     ; preds = %cond.false439
  %.cast51 = bitcast i64* %37 to %union.tree_node*, !dbg !10313
  %call451 = tail call i32 @vector_type_mode(%union.tree_node* %.cast51) #7, !dbg !10313
  br label %cond.end460, !dbg !10313

cond.false452:                                    ; preds = %cond.false439
  %type455 = bitcast i64* %37 to %struct.tree_type*, !dbg !10313
  %mode456 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type455, i64 0, i32 6, !dbg !10313
  %bf.load457 = load i32, i32* %mode456, align 4, !dbg !10313
  %bf.lshr458 = lshr i32 %bf.load457, 16, !dbg !10313
  %bf.clear459 = and i32 %bf.lshr458, 255, !dbg !10313
  br label %cond.end460, !dbg !10313

cond.end460:                                      ; preds = %cond.false452, %cond.true448
  %cond461 = phi i32 [ %call451, %cond.true448 ], [ %bf.clear459, %cond.false452 ], !dbg !10313
  %idxprom462 = zext i32 %cond461 to i64, !dbg !10313
  %arrayidx463 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom462, !dbg !10313
  %38 = load i8, i8* %arrayidx463, align 1, !dbg !10313
  %conv464 = zext i8 %38 to i32, !dbg !10313
  br label %cond.end465, !dbg !10313

cond.end465:                                      ; preds = %cond.true425, %cond.false429, %cond.end460
  %cond466 = phi i32 [ %conv464, %cond.end460 ], [ %call428, %cond.true425 ], [ %bf.clear436, %cond.false429 ], !dbg !10313
  br label %cond.end468, !dbg !10313

cond.end468:                                      ; preds = %cond.end465, %cond.end358
  %cond469.in = phi i32 [ %cond359, %cond.end358 ], [ %cond466, %cond.end465 ]
  %cond469 = add i32 %cond469.in, -38, !dbg !10313
  %idxprom470 = zext i32 %cond469 to i64, !dbg !10313
  %arrayidx471 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom470, !dbg !10313
  %39 = load %struct.real_format*, %struct.real_format** %arrayidx471, align 8, !dbg !10313
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %39, i64 0, i32 11, !dbg !10313
  %40 = load i8, i8* %has_nans, align 2, !dbg !10313
  %tobool = icmp eq i8 %40, 0, !dbg !10313
  %41 = load i32, i32* @flag_finite_math_only, align 4, !dbg !10313
  %tobool474 = icmp ne i32 %41, 0, !dbg !10313
  %or.cond3 = or i1 %tobool, %tobool474, !dbg !10313
  br i1 %or.cond3, label %if.then475, label %if.end477, !dbg !10313

if.then475:                                       ; preds = %cond.end468, %cond.end134
  %42 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !10316
  %call476 = tail call %union.tree_node* @omit_two_operands_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %42, %union.tree_node* %call, %union.tree_node* %call34) #7, !dbg !10317
  br label %cleanup, !dbg !10318

if.end477:                                        ; preds = %cond.end468
  %call478 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 103, %union.tree_node* %2, %union.tree_node* %call, %union.tree_node* %call34) #7, !dbg !10319
  br label %cleanup, !dbg !10320

if.end479:                                        ; preds = %if.end33
  br i1 %cmp43, label %cond.true488, label %cond.false492, !dbg !10321

cond.true488:                                     ; preds = %if.end479
  %call491 = tail call i32 @vector_type_mode(%union.tree_node* %.cast) #7, !dbg !10321
  br label %cond.end500, !dbg !10321

cond.false492:                                    ; preds = %if.end479
  %type495 = bitcast i64* %10 to %struct.tree_type*, !dbg !10321
  %mode496 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type495, i64 0, i32 6, !dbg !10321
  %bf.load497 = load i32, i32* %mode496, align 4, !dbg !10321
  %bf.lshr498 = lshr i32 %bf.load497, 16, !dbg !10321
  %bf.clear499 = and i32 %bf.lshr498, 255, !dbg !10321
  br label %cond.end500, !dbg !10321

cond.end500:                                      ; preds = %cond.false492, %cond.true488
  %cond501 = phi i32 [ %call491, %cond.true488 ], [ %bf.clear499, %cond.false492 ], !dbg !10321
  %idxprom502 = zext i32 %cond501 to i64, !dbg !10321
  %arrayidx503 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom502, !dbg !10321
  %43 = load i8, i8* %arrayidx503, align 1, !dbg !10321
  %cmp505 = icmp eq i8 %43, 8, !dbg !10321
  br i1 %cmp505, label %land.lhs.true591, label %lor.lhs.false507, !dbg !10321

lor.lhs.false507:                                 ; preds = %cond.end500
  %44 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load511 = load i64, i64* %44, align 8, !dbg !10321
  %bf.cast5136 = and i64 %bf.load511, 65535, !dbg !10321
  %cmp514 = icmp eq i64 %bf.cast5136, 14, !dbg !10321
  br i1 %cmp514, label %cond.true516, label %cond.false520, !dbg !10321

cond.true516:                                     ; preds = %lor.lhs.false507
  %.cast7 = bitcast i64* %44 to %union.tree_node*, !dbg !10321
  %call519 = tail call i32 @vector_type_mode(%union.tree_node* %.cast7) #7, !dbg !10321
  br label %cond.end528, !dbg !10321

cond.false520:                                    ; preds = %lor.lhs.false507
  %type523 = bitcast i64* %44 to %struct.tree_type*, !dbg !10321
  %mode524 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type523, i64 0, i32 6, !dbg !10321
  %bf.load525 = load i32, i32* %mode524, align 4, !dbg !10321
  %bf.lshr526 = lshr i32 %bf.load525, 16, !dbg !10321
  %bf.clear527 = and i32 %bf.lshr526, 255, !dbg !10321
  br label %cond.end528, !dbg !10321

cond.end528:                                      ; preds = %cond.false520, %cond.true516
  %cond529 = phi i32 [ %call519, %cond.true516 ], [ %bf.clear527, %cond.false520 ], !dbg !10321
  %idxprom530 = zext i32 %cond529 to i64, !dbg !10321
  %arrayidx531 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom530, !dbg !10321
  %45 = load i8, i8* %arrayidx531, align 1, !dbg !10321
  %cmp533 = icmp eq i8 %45, 9, !dbg !10321
  br i1 %cmp533, label %land.lhs.true591, label %lor.lhs.false535, !dbg !10321

lor.lhs.false535:                                 ; preds = %cond.end528
  %46 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load539 = load i64, i64* %46, align 8, !dbg !10321
  %bf.cast5418 = and i64 %bf.load539, 65535, !dbg !10321
  %cmp542 = icmp eq i64 %bf.cast5418, 14, !dbg !10321
  br i1 %cmp542, label %cond.true544, label %cond.false548, !dbg !10321

cond.true544:                                     ; preds = %lor.lhs.false535
  %.cast9 = bitcast i64* %46 to %union.tree_node*, !dbg !10321
  %call547 = tail call i32 @vector_type_mode(%union.tree_node* %.cast9) #7, !dbg !10321
  br label %cond.end556, !dbg !10321

cond.false548:                                    ; preds = %lor.lhs.false535
  %type551 = bitcast i64* %46 to %struct.tree_type*, !dbg !10321
  %mode552 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type551, i64 0, i32 6, !dbg !10321
  %bf.load553 = load i32, i32* %mode552, align 4, !dbg !10321
  %bf.lshr554 = lshr i32 %bf.load553, 16, !dbg !10321
  %bf.clear555 = and i32 %bf.lshr554, 255, !dbg !10321
  br label %cond.end556, !dbg !10321

cond.end556:                                      ; preds = %cond.false548, %cond.true544
  %cond557 = phi i32 [ %call547, %cond.true544 ], [ %bf.clear555, %cond.false548 ], !dbg !10321
  %idxprom558 = zext i32 %cond557 to i64, !dbg !10321
  %arrayidx559 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom558, !dbg !10321
  %47 = load i8, i8* %arrayidx559, align 1, !dbg !10321
  %cmp561 = icmp eq i8 %47, 11, !dbg !10321
  br i1 %cmp561, label %land.lhs.true591, label %lor.lhs.false563, !dbg !10321

lor.lhs.false563:                                 ; preds = %cond.end556
  %48 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load567 = load i64, i64* %48, align 8, !dbg !10321
  %bf.cast56910 = and i64 %bf.load567, 65535, !dbg !10321
  %cmp570 = icmp eq i64 %bf.cast56910, 14, !dbg !10321
  br i1 %cmp570, label %cond.true572, label %cond.false576, !dbg !10321

cond.true572:                                     ; preds = %lor.lhs.false563
  %.cast11 = bitcast i64* %48 to %union.tree_node*, !dbg !10321
  %call575 = tail call i32 @vector_type_mode(%union.tree_node* %.cast11) #7, !dbg !10321
  br label %cond.end584, !dbg !10321

cond.false576:                                    ; preds = %lor.lhs.false563
  %type579 = bitcast i64* %48 to %struct.tree_type*, !dbg !10321
  %mode580 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type579, i64 0, i32 6, !dbg !10321
  %bf.load581 = load i32, i32* %mode580, align 4, !dbg !10321
  %bf.lshr582 = lshr i32 %bf.load581, 16, !dbg !10321
  %bf.clear583 = and i32 %bf.lshr582, 255, !dbg !10321
  br label %cond.end584, !dbg !10321

cond.end584:                                      ; preds = %cond.false576, %cond.true572
  %cond585 = phi i32 [ %call575, %cond.true572 ], [ %bf.clear583, %cond.false576 ], !dbg !10321
  %idxprom586 = zext i32 %cond585 to i64, !dbg !10321
  %arrayidx587 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom586, !dbg !10321
  %49 = load i8, i8* %arrayidx587, align 1, !dbg !10321
  %cmp589 = icmp eq i8 %49, 17, !dbg !10321
  br i1 %cmp589, label %land.lhs.true591, label %cond.false930, !dbg !10321

land.lhs.true591:                                 ; preds = %cond.end584, %cond.end556, %cond.end528, %cond.end500
  %50 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load595 = load i64, i64* %50, align 8, !dbg !10321
  %bf.cast59712 = and i64 %bf.load595, 65535, !dbg !10321
  %cmp598 = icmp eq i64 %bf.cast59712, 14, !dbg !10321
  br i1 %cmp598, label %cond.true600, label %cond.false604, !dbg !10321

cond.true600:                                     ; preds = %land.lhs.true591
  %.cast13 = bitcast i64* %50 to %union.tree_node*, !dbg !10321
  %call603 = tail call i32 @vector_type_mode(%union.tree_node* %.cast13) #7, !dbg !10321
  br label %cond.end612, !dbg !10321

cond.false604:                                    ; preds = %land.lhs.true591
  %type607 = bitcast i64* %50 to %struct.tree_type*, !dbg !10321
  %mode608 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type607, i64 0, i32 6, !dbg !10321
  %bf.load609 = load i32, i32* %mode608, align 4, !dbg !10321
  %bf.lshr610 = lshr i32 %bf.load609, 16, !dbg !10321
  %bf.clear611 = and i32 %bf.lshr610, 255, !dbg !10321
  br label %cond.end612, !dbg !10321

cond.end612:                                      ; preds = %cond.false604, %cond.true600
  %cond613 = phi i32 [ %call603, %cond.true600 ], [ %bf.clear611, %cond.false604 ], !dbg !10321
  %idxprom614 = zext i32 %cond613 to i64, !dbg !10321
  %arrayidx615 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom614, !dbg !10321
  %51 = load i8, i8* %arrayidx615, align 1, !dbg !10321
  %cmp617 = icmp eq i8 %51, 8, !dbg !10321
  br i1 %cmp617, label %cond.true647, label %lor.lhs.false619, !dbg !10321

lor.lhs.false619:                                 ; preds = %cond.end612
  %52 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load623 = load i64, i64* %52, align 8, !dbg !10321
  %bf.cast62514 = and i64 %bf.load623, 65535, !dbg !10321
  %cmp626 = icmp eq i64 %bf.cast62514, 14, !dbg !10321
  br i1 %cmp626, label %cond.true628, label %cond.false632, !dbg !10321

cond.true628:                                     ; preds = %lor.lhs.false619
  %.cast15 = bitcast i64* %52 to %union.tree_node*, !dbg !10321
  %call631 = tail call i32 @vector_type_mode(%union.tree_node* %.cast15) #7, !dbg !10321
  br label %cond.end640, !dbg !10321

cond.false632:                                    ; preds = %lor.lhs.false619
  %type635 = bitcast i64* %52 to %struct.tree_type*, !dbg !10321
  %mode636 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type635, i64 0, i32 6, !dbg !10321
  %bf.load637 = load i32, i32* %mode636, align 4, !dbg !10321
  %bf.lshr638 = lshr i32 %bf.load637, 16, !dbg !10321
  %bf.clear639 = and i32 %bf.lshr638, 255, !dbg !10321
  br label %cond.end640, !dbg !10321

cond.end640:                                      ; preds = %cond.false632, %cond.true628
  %cond641 = phi i32 [ %call631, %cond.true628 ], [ %bf.clear639, %cond.false632 ], !dbg !10321
  %idxprom642 = zext i32 %cond641 to i64, !dbg !10321
  %arrayidx643 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom642, !dbg !10321
  %53 = load i8, i8* %arrayidx643, align 1, !dbg !10321
  %cmp645 = icmp eq i8 %53, 9, !dbg !10321
  br i1 %cmp645, label %cond.true647, label %cond.false670, !dbg !10321

cond.true647:                                     ; preds = %cond.end640, %cond.end612
  %54 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load651 = load i64, i64* %54, align 8, !dbg !10321
  %bf.cast65332 = and i64 %bf.load651, 65535, !dbg !10321
  %cmp654 = icmp eq i64 %bf.cast65332, 14, !dbg !10321
  br i1 %cmp654, label %cond.true656, label %cond.false660, !dbg !10321

cond.true656:                                     ; preds = %cond.true647
  %.cast33 = bitcast i64* %54 to %union.tree_node*, !dbg !10321
  %call659 = tail call i32 @vector_type_mode(%union.tree_node* %.cast33) #7, !dbg !10321
  br label %cond.end696, !dbg !10321

cond.false660:                                    ; preds = %cond.true647
  %type663 = bitcast i64* %54 to %struct.tree_type*, !dbg !10321
  %mode664 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type663, i64 0, i32 6, !dbg !10321
  %bf.load665 = load i32, i32* %mode664, align 4, !dbg !10321
  %bf.lshr666 = lshr i32 %bf.load665, 16, !dbg !10321
  %bf.clear667 = and i32 %bf.lshr666, 255, !dbg !10321
  br label %cond.end696, !dbg !10321

cond.false670:                                    ; preds = %cond.end640
  %55 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load674 = load i64, i64* %55, align 8, !dbg !10321
  %bf.cast67616 = and i64 %bf.load674, 65535, !dbg !10321
  %cmp677 = icmp eq i64 %bf.cast67616, 14, !dbg !10321
  br i1 %cmp677, label %cond.true679, label %cond.false683, !dbg !10321

cond.true679:                                     ; preds = %cond.false670
  %.cast17 = bitcast i64* %55 to %union.tree_node*, !dbg !10321
  %call682 = tail call i32 @vector_type_mode(%union.tree_node* %.cast17) #7, !dbg !10321
  br label %cond.end691, !dbg !10321

cond.false683:                                    ; preds = %cond.false670
  %type686 = bitcast i64* %55 to %struct.tree_type*, !dbg !10321
  %mode687 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type686, i64 0, i32 6, !dbg !10321
  %bf.load688 = load i32, i32* %mode687, align 4, !dbg !10321
  %bf.lshr689 = lshr i32 %bf.load688, 16, !dbg !10321
  %bf.clear690 = and i32 %bf.lshr689, 255, !dbg !10321
  br label %cond.end691, !dbg !10321

cond.end691:                                      ; preds = %cond.false683, %cond.true679
  %cond692 = phi i32 [ %call682, %cond.true679 ], [ %bf.clear690, %cond.false683 ], !dbg !10321
  %idxprom693 = zext i32 %cond692 to i64, !dbg !10321
  %arrayidx694 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom693, !dbg !10321
  %56 = load i8, i8* %arrayidx694, align 1, !dbg !10321
  %conv695 = zext i8 %56 to i32, !dbg !10321
  br label %cond.end696, !dbg !10321

cond.end696:                                      ; preds = %cond.true656, %cond.false660, %cond.end691
  %cond697 = phi i32 [ %conv695, %cond.end691 ], [ %call659, %cond.true656 ], [ %bf.clear667, %cond.false660 ], !dbg !10321
  %idxprom698 = zext i32 %cond697 to i64, !dbg !10321
  %arrayidx699 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom698, !dbg !10321
  %57 = load i8, i8* %arrayidx699, align 1, !dbg !10321
  %cmp701 = icmp eq i8 %57, 9, !dbg !10321
  %58 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load707 = load i64, i64* %58, align 8, !dbg !10321
  %bf.cast70918 = and i64 %bf.load707, 65535, !dbg !10321
  %cmp710 = icmp eq i64 %bf.cast70918, 14, !dbg !10321
  %.cast19 = bitcast i64* %58 to %union.tree_node*, !dbg !10321
  br i1 %cmp701, label %cond.true703, label %cond.false812, !dbg !10321

cond.true703:                                     ; preds = %cond.end696
  br i1 %cmp710, label %cond.true712, label %cond.false716, !dbg !10321

cond.true712:                                     ; preds = %cond.true703
  %call715 = tail call i32 @vector_type_mode(%union.tree_node* %.cast19) #7, !dbg !10321
  br label %cond.end724, !dbg !10321

cond.false716:                                    ; preds = %cond.true703
  %type719 = bitcast i64* %58 to %struct.tree_type*, !dbg !10321
  %mode720 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type719, i64 0, i32 6, !dbg !10321
  %bf.load721 = load i32, i32* %mode720, align 4, !dbg !10321
  %bf.lshr722 = lshr i32 %bf.load721, 16, !dbg !10321
  %bf.clear723 = and i32 %bf.lshr722, 255, !dbg !10321
  br label %cond.end724, !dbg !10321

cond.end724:                                      ; preds = %cond.false716, %cond.true712
  %cond725 = phi i32 [ %call715, %cond.true712 ], [ %bf.clear723, %cond.false716 ], !dbg !10321
  %idxprom726 = zext i32 %cond725 to i64, !dbg !10321
  %arrayidx727 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom726, !dbg !10321
  %59 = load i8, i8* %arrayidx727, align 1, !dbg !10321
  %cmp729 = icmp eq i8 %59, 8, !dbg !10321
  br i1 %cmp729, label %cond.true759, label %lor.lhs.false731, !dbg !10321

lor.lhs.false731:                                 ; preds = %cond.end724
  %60 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load735 = load i64, i64* %60, align 8, !dbg !10321
  %bf.cast73726 = and i64 %bf.load735, 65535, !dbg !10321
  %cmp738 = icmp eq i64 %bf.cast73726, 14, !dbg !10321
  br i1 %cmp738, label %cond.true740, label %cond.false744, !dbg !10321

cond.true740:                                     ; preds = %lor.lhs.false731
  %.cast27 = bitcast i64* %60 to %union.tree_node*, !dbg !10321
  %call743 = tail call i32 @vector_type_mode(%union.tree_node* %.cast27) #7, !dbg !10321
  br label %cond.end752, !dbg !10321

cond.false744:                                    ; preds = %lor.lhs.false731
  %type747 = bitcast i64* %60 to %struct.tree_type*, !dbg !10321
  %mode748 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type747, i64 0, i32 6, !dbg !10321
  %bf.load749 = load i32, i32* %mode748, align 4, !dbg !10321
  %bf.lshr750 = lshr i32 %bf.load749, 16, !dbg !10321
  %bf.clear751 = and i32 %bf.lshr750, 255, !dbg !10321
  br label %cond.end752, !dbg !10321

cond.end752:                                      ; preds = %cond.false744, %cond.true740
  %cond753 = phi i32 [ %call743, %cond.true740 ], [ %bf.clear751, %cond.false744 ], !dbg !10321
  %idxprom754 = zext i32 %cond753 to i64, !dbg !10321
  %arrayidx755 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom754, !dbg !10321
  %61 = load i8, i8* %arrayidx755, align 1, !dbg !10321
  %cmp757 = icmp eq i8 %61, 9, !dbg !10321
  br i1 %cmp757, label %cond.true759, label %cond.false782, !dbg !10321

cond.true759:                                     ; preds = %cond.end752, %cond.end724
  %62 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load763 = load i64, i64* %62, align 8, !dbg !10321
  %bf.cast76530 = and i64 %bf.load763, 65535, !dbg !10321
  %cmp766 = icmp eq i64 %bf.cast76530, 14, !dbg !10321
  br i1 %cmp766, label %cond.true768, label %cond.false772, !dbg !10321

cond.true768:                                     ; preds = %cond.true759
  %.cast31 = bitcast i64* %62 to %union.tree_node*, !dbg !10321
  %call771 = tail call i32 @vector_type_mode(%union.tree_node* %.cast31) #7, !dbg !10321
  br label %cond.end808, !dbg !10321

cond.false772:                                    ; preds = %cond.true759
  %type775 = bitcast i64* %62 to %struct.tree_type*, !dbg !10321
  %mode776 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type775, i64 0, i32 6, !dbg !10321
  %bf.load777 = load i32, i32* %mode776, align 4, !dbg !10321
  %bf.lshr778 = lshr i32 %bf.load777, 16, !dbg !10321
  %bf.clear779 = and i32 %bf.lshr778, 255, !dbg !10321
  br label %cond.end808, !dbg !10321

cond.false782:                                    ; preds = %cond.end752
  %63 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load786 = load i64, i64* %63, align 8, !dbg !10321
  %bf.cast78828 = and i64 %bf.load786, 65535, !dbg !10321
  %cmp789 = icmp eq i64 %bf.cast78828, 14, !dbg !10321
  br i1 %cmp789, label %cond.true791, label %cond.false795, !dbg !10321

cond.true791:                                     ; preds = %cond.false782
  %.cast29 = bitcast i64* %63 to %union.tree_node*, !dbg !10321
  %call794 = tail call i32 @vector_type_mode(%union.tree_node* %.cast29) #7, !dbg !10321
  br label %cond.end803, !dbg !10321

cond.false795:                                    ; preds = %cond.false782
  %type798 = bitcast i64* %63 to %struct.tree_type*, !dbg !10321
  %mode799 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type798, i64 0, i32 6, !dbg !10321
  %bf.load800 = load i32, i32* %mode799, align 4, !dbg !10321
  %bf.lshr801 = lshr i32 %bf.load800, 16, !dbg !10321
  %bf.clear802 = and i32 %bf.lshr801, 255, !dbg !10321
  br label %cond.end803, !dbg !10321

cond.end803:                                      ; preds = %cond.false795, %cond.true791
  %cond804 = phi i32 [ %call794, %cond.true791 ], [ %bf.clear802, %cond.false795 ], !dbg !10321
  %idxprom805 = zext i32 %cond804 to i64, !dbg !10321
  %arrayidx806 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom805, !dbg !10321
  %64 = load i8, i8* %arrayidx806, align 1, !dbg !10321
  %conv807 = zext i8 %64 to i32, !dbg !10321
  br label %cond.end808, !dbg !10321

cond.end808:                                      ; preds = %cond.true768, %cond.false772, %cond.end803
  %cond809 = phi i32 [ %conv807, %cond.end803 ], [ %call771, %cond.true768 ], [ %bf.clear779, %cond.false772 ], !dbg !10321
  br label %cond.end920, !dbg !10321

cond.false812:                                    ; preds = %cond.end696
  br i1 %cmp710, label %cond.true821, label %cond.false825, !dbg !10321

cond.true821:                                     ; preds = %cond.false812
  %call824 = tail call i32 @vector_type_mode(%union.tree_node* %.cast19) #7, !dbg !10321
  br label %cond.end833, !dbg !10321

cond.false825:                                    ; preds = %cond.false812
  %type828 = bitcast i64* %58 to %struct.tree_type*, !dbg !10321
  %mode829 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type828, i64 0, i32 6, !dbg !10321
  %bf.load830 = load i32, i32* %mode829, align 4, !dbg !10321
  %bf.lshr831 = lshr i32 %bf.load830, 16, !dbg !10321
  %bf.clear832 = and i32 %bf.lshr831, 255, !dbg !10321
  br label %cond.end833, !dbg !10321

cond.end833:                                      ; preds = %cond.false825, %cond.true821
  %cond834 = phi i32 [ %call824, %cond.true821 ], [ %bf.clear832, %cond.false825 ], !dbg !10321
  %idxprom835 = zext i32 %cond834 to i64, !dbg !10321
  %arrayidx836 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom835, !dbg !10321
  %65 = load i8, i8* %arrayidx836, align 1, !dbg !10321
  %cmp838 = icmp eq i8 %65, 8, !dbg !10321
  br i1 %cmp838, label %cond.true868, label %lor.lhs.false840, !dbg !10321

lor.lhs.false840:                                 ; preds = %cond.end833
  %66 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load844 = load i64, i64* %66, align 8, !dbg !10321
  %bf.cast84620 = and i64 %bf.load844, 65535, !dbg !10321
  %cmp847 = icmp eq i64 %bf.cast84620, 14, !dbg !10321
  br i1 %cmp847, label %cond.true849, label %cond.false853, !dbg !10321

cond.true849:                                     ; preds = %lor.lhs.false840
  %.cast21 = bitcast i64* %66 to %union.tree_node*, !dbg !10321
  %call852 = tail call i32 @vector_type_mode(%union.tree_node* %.cast21) #7, !dbg !10321
  br label %cond.end861, !dbg !10321

cond.false853:                                    ; preds = %lor.lhs.false840
  %type856 = bitcast i64* %66 to %struct.tree_type*, !dbg !10321
  %mode857 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type856, i64 0, i32 6, !dbg !10321
  %bf.load858 = load i32, i32* %mode857, align 4, !dbg !10321
  %bf.lshr859 = lshr i32 %bf.load858, 16, !dbg !10321
  %bf.clear860 = and i32 %bf.lshr859, 255, !dbg !10321
  br label %cond.end861, !dbg !10321

cond.end861:                                      ; preds = %cond.false853, %cond.true849
  %cond862 = phi i32 [ %call852, %cond.true849 ], [ %bf.clear860, %cond.false853 ], !dbg !10321
  %idxprom863 = zext i32 %cond862 to i64, !dbg !10321
  %arrayidx864 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom863, !dbg !10321
  %67 = load i8, i8* %arrayidx864, align 1, !dbg !10321
  %cmp866 = icmp eq i8 %67, 9, !dbg !10321
  br i1 %cmp866, label %cond.true868, label %cond.false891, !dbg !10321

cond.true868:                                     ; preds = %cond.end861, %cond.end833
  %68 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load872 = load i64, i64* %68, align 8, !dbg !10321
  %bf.cast87424 = and i64 %bf.load872, 65535, !dbg !10321
  %cmp875 = icmp eq i64 %bf.cast87424, 14, !dbg !10321
  br i1 %cmp875, label %cond.true877, label %cond.false881, !dbg !10321

cond.true877:                                     ; preds = %cond.true868
  %.cast25 = bitcast i64* %68 to %union.tree_node*, !dbg !10321
  %call880 = tail call i32 @vector_type_mode(%union.tree_node* %.cast25) #7, !dbg !10321
  br label %cond.end917, !dbg !10321

cond.false881:                                    ; preds = %cond.true868
  %type884 = bitcast i64* %68 to %struct.tree_type*, !dbg !10321
  %mode885 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type884, i64 0, i32 6, !dbg !10321
  %bf.load886 = load i32, i32* %mode885, align 4, !dbg !10321
  %bf.lshr887 = lshr i32 %bf.load886, 16, !dbg !10321
  %bf.clear888 = and i32 %bf.lshr887, 255, !dbg !10321
  br label %cond.end917, !dbg !10321

cond.false891:                                    ; preds = %cond.end861
  %69 = load i64*, i64** %9, align 8, !dbg !10321
  %bf.load895 = load i64, i64* %69, align 8, !dbg !10321
  %bf.cast89722 = and i64 %bf.load895, 65535, !dbg !10321
  %cmp898 = icmp eq i64 %bf.cast89722, 14, !dbg !10321
  br i1 %cmp898, label %cond.true900, label %cond.false904, !dbg !10321

cond.true900:                                     ; preds = %cond.false891
  %.cast23 = bitcast i64* %69 to %union.tree_node*, !dbg !10321
  %call903 = tail call i32 @vector_type_mode(%union.tree_node* %.cast23) #7, !dbg !10321
  br label %cond.end912, !dbg !10321

cond.false904:                                    ; preds = %cond.false891
  %type907 = bitcast i64* %69 to %struct.tree_type*, !dbg !10321
  %mode908 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type907, i64 0, i32 6, !dbg !10321
  %bf.load909 = load i32, i32* %mode908, align 4, !dbg !10321
  %bf.lshr910 = lshr i32 %bf.load909, 16, !dbg !10321
  %bf.clear911 = and i32 %bf.lshr910, 255, !dbg !10321
  br label %cond.end912, !dbg !10321

cond.end912:                                      ; preds = %cond.false904, %cond.true900
  %cond913 = phi i32 [ %call903, %cond.true900 ], [ %bf.clear911, %cond.false904 ], !dbg !10321
  %idxprom914 = zext i32 %cond913 to i64, !dbg !10321
  %arrayidx915 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom914, !dbg !10321
  %70 = load i8, i8* %arrayidx915, align 1, !dbg !10321
  %conv916 = zext i8 %70 to i32, !dbg !10321
  br label %cond.end917, !dbg !10321

cond.end917:                                      ; preds = %cond.true877, %cond.false881, %cond.end912
  %cond918 = phi i32 [ %conv916, %cond.end912 ], [ %call880, %cond.true877 ], [ %bf.clear888, %cond.false881 ], !dbg !10321
  br label %cond.end920, !dbg !10321

cond.end920:                                      ; preds = %cond.end917, %cond.end808
  %cond921.in = phi i32 [ %cond809, %cond.end808 ], [ %cond918, %cond.end917 ]
  %cond921 = add i32 %cond921.in, -38, !dbg !10321
  %idxprom922 = zext i32 %cond921 to i64, !dbg !10321
  %arrayidx923 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom922, !dbg !10321
  %71 = load %struct.real_format*, %struct.real_format** %arrayidx923, align 8, !dbg !10321
  %has_nans924 = getelementptr inbounds %struct.real_format, %struct.real_format* %71, i64 0, i32 11, !dbg !10321
  %72 = load i8, i8* %has_nans924, align 2, !dbg !10321
  %tobool926 = icmp eq i8 %72, 0, !dbg !10321
  %73 = load i32, i32* @flag_finite_math_only, align 4, !dbg !10321
  %tobool928 = icmp ne i32 %73, 0, !dbg !10321
  %or.cond4 = or i1 %tobool926, %tobool928, !dbg !10321
  br i1 %or.cond4, label %cond.false930, label %cond.end931, !dbg !10321

cond.false930:                                    ; preds = %cond.end920, %cond.end584
  br label %cond.end931, !dbg !10321

cond.end931:                                      ; preds = %cond.end920, %cond.false930
  %cond932 = phi i32 [ %ordered_code, %cond.false930 ], [ %unordered_code, %cond.end920 ], !dbg !10321
  call void @llvm.dbg.value(metadata i32 %cond932, metadata !10281, metadata !DIExpression()), !dbg !10287
  %call933 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 %cond932, %union.tree_node* %2, %union.tree_node* %call, %union.tree_node* %call34) #7, !dbg !10322
  %call934 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 96, %union.tree_node* %2, %union.tree_node* %call933) #7, !dbg !10322
  br label %cleanup, !dbg !10323

cleanup:                                          ; preds = %cond.end931, %if.end477, %if.then475
  %retval.0 = phi %union.tree_node* [ %call476, %if.then475 ], [ %call478, %if.end477 ], [ %call934, %cond.end931 ], !dbg !10287
  ret %union.tree_node* %retval.0, !dbg !10324
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_sprintf(i32 %loc, %union.tree_node* %dest, %union.tree_node* %fmt, %union.tree_node* %orig, i32 %ignored) unnamed_addr #5 !dbg !10325 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10329, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !10330, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata %union.tree_node* %fmt, metadata !10331, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata %union.tree_node* %orig, metadata !10332, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata i32 %ignored, metadata !10333, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata i8* null, metadata !10336, metadata !DIExpression()), !dbg !10343
  %call2 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !10344
  %tobool = icmp eq i8 %call2, 0, !dbg !10344
  br i1 %tobool, label %cleanup73, label %lor.lhs.false, !dbg !10346

lor.lhs.false:                                    ; preds = %entry
  %call3 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %fmt, i32 10) #8, !dbg !10347
  %tobool4 = icmp eq i8 %call3, 0, !dbg !10347
  br i1 %tobool4, label %cleanup73, label %if.end, !dbg !10348

if.end:                                           ; preds = %lor.lhs.false
  %tobool5 = icmp eq %union.tree_node* %orig, null, !dbg !10349
  br i1 %tobool5, label %if.end9, label %land.lhs.true, !dbg !10351

land.lhs.true:                                    ; preds = %if.end
  %call6 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* nonnull %orig, i32 10) #8, !dbg !10352
  %tobool7 = icmp eq i8 %call6, 0, !dbg !10352
  br i1 %tobool7, label %cleanup73, label %if.end9, !dbg !10353

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %call10 = tail call fastcc i8* @c_getstr(%union.tree_node* %fmt) #8, !dbg !10354
  call void @llvm.dbg.value(metadata i8* %call10, metadata !10336, metadata !DIExpression()), !dbg !10343
  %cmp = icmp eq i8* %call10, null, !dbg !10355
  br i1 %cmp, label %cleanup73, label %if.end12, !dbg !10357

if.end12:                                         ; preds = %if.end9
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10334, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10335, metadata !DIExpression()), !dbg !10343
  %call13 = tail call fastcc zeroext i8 @init_target_chars() #8, !dbg !10358
  %tobool14 = icmp eq i8 %call13, 0, !dbg !10358
  br i1 %tobool14, label %cleanup73, label %if.end16, !dbg !10360

if.end16:                                         ; preds = %if.end12
  %0 = load i64, i64* @target_percent, align 8, !dbg !10361
  %conv = trunc i64 %0 to i32, !dbg !10361
  %call17 = tail call i8* @strchr(i8* nonnull %call10, i32 %conv) #7, !dbg !10362
  %cmp18 = icmp eq i8* %call17, null, !dbg !10363
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !10364

if.then20:                                        ; preds = %if.end16
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 341), align 8, !dbg !10365
  call void @llvm.dbg.value(metadata %union.tree_node* %1, metadata !10337, metadata !DIExpression()), !dbg !10366
  %tobool21 = icmp eq %union.tree_node* %1, null, !dbg !10367
  %tobool24 = icmp ne %union.tree_node* %orig, null, !dbg !10369
  %or.cond2 = or i1 %tobool21, %tobool24, !dbg !10371
  br i1 %or.cond2, label %cleanup, label %if.end26, !dbg !10371

if.end26:                                         ; preds = %if.then20
  %call27 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* %1, i32 2, %union.tree_node* %dest, %union.tree_node* %fmt) #8, !dbg !10372
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !10334, metadata !DIExpression()), !dbg !10343
  %tobool28 = icmp eq i32 %ignored, 0, !dbg !10373
  br i1 %tobool28, label %if.then29, label %cleanup, !dbg !10375

if.then29:                                        ; preds = %if.end26
  %call30 = tail call i64 @strlen(i8* nonnull %call10) #7, !dbg !10376
  %call31 = tail call %union.tree_node* @build_int_cst(%union.tree_node* null, i64 %call30) #7, !dbg !10377
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !10335, metadata !DIExpression()), !dbg !10343
  br label %cleanup, !dbg !10378

cleanup:                                          ; preds = %if.end26, %if.then20, %if.then29
  %call.0 = phi %union.tree_node* [ null, %if.then20 ], [ %call27, %if.then29 ], [ %call27, %if.end26 ], !dbg !10343
  %retval1.1 = phi %union.tree_node* [ null, %if.then20 ], [ %call31, %if.then29 ], [ null, %if.end26 ], !dbg !10379
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then20 ], [ true, %if.then29 ], [ true, %if.end26 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %retval1.1, metadata !10335, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata %union.tree_node* %call.0, metadata !10334, metadata !DIExpression()), !dbg !10343
  br i1 %cleanup.dest.slot.0, label %if.end61, label %cleanup73

if.else:                                          ; preds = %if.end16
  %call35 = tail call i32 @strcmp(i8* nonnull %call10, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !10380
  %cmp36 = icmp eq i32 %call35, 0, !dbg !10381
  br i1 %cmp36, label %if.then38, label %if.end61, !dbg !10382

if.then38:                                        ; preds = %if.else
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 341), align 8, !dbg !10383
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10340, metadata !DIExpression()), !dbg !10384
  %tobool40 = icmp ne %union.tree_node* %2, null, !dbg !10385
  %tobool43 = icmp ne %union.tree_node* %orig, null, !dbg !10387
  %or.cond3 = and i1 %tobool40, %tobool43, !dbg !10389
  br i1 %or.cond3, label %if.end45, label %cleanup57, !dbg !10389

if.end45:                                         ; preds = %if.then38
  %tobool46 = icmp eq i32 %ignored, 0, !dbg !10390
  br i1 %tobool46, label %if.then47, label %if.end55, !dbg !10392

if.then47:                                        ; preds = %if.end45
  %call48 = tail call %union.tree_node* @c_strlen(%union.tree_node* nonnull %orig, i32 1) #8, !dbg !10393
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !10335, metadata !DIExpression()), !dbg !10343
  %tobool49 = icmp eq %union.tree_node* %call48, null, !dbg !10395
  br i1 %tobool49, label %cleanup57, label %lor.lhs.false50, !dbg !10397

lor.lhs.false50:                                  ; preds = %if.then47
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10398
  %bf.load = load i64, i64* %3, align 8, !dbg !10398
  %bf.cast4 = and i64 %bf.load, 65535, !dbg !10399
  %cmp51 = icmp eq i64 %bf.cast4, 23, !dbg !10399
  br i1 %cmp51, label %if.end55, label %cleanup57, !dbg !10400

if.end55:                                         ; preds = %lor.lhs.false50, %if.end45
  %retval1.2 = phi %union.tree_node* [ null, %if.end45 ], [ %call48, %lor.lhs.false50 ], !dbg !10343
  call void @llvm.dbg.value(metadata %union.tree_node* %retval1.2, metadata !10335, metadata !DIExpression()), !dbg !10343
  %call56 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %2, i32 2, %union.tree_node* %dest, %union.tree_node* nonnull %orig) #8, !dbg !10401
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !10334, metadata !DIExpression()), !dbg !10343
  br label %cleanup57, !dbg !10402

cleanup57:                                        ; preds = %lor.lhs.false50, %if.then47, %if.then38, %if.end55
  %call.1 = phi %union.tree_node* [ %call56, %if.end55 ], [ null, %if.then38 ], [ null, %lor.lhs.false50 ], [ null, %if.then47 ], !dbg !10343
  %retval1.3 = phi %union.tree_node* [ %retval1.2, %if.end55 ], [ null, %if.then38 ], [ %call48, %lor.lhs.false50 ], [ null, %if.then47 ], !dbg !10343
  %cleanup.dest.slot.1 = phi i1 [ true, %if.end55 ], [ false, %if.then38 ], [ false, %lor.lhs.false50 ], [ false, %if.then47 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %retval1.3, metadata !10335, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata %union.tree_node* %call.1, metadata !10334, metadata !DIExpression()), !dbg !10343
  br i1 %cleanup.dest.slot.1, label %if.end61, label %cleanup73

if.end61:                                         ; preds = %if.else, %cleanup57, %cleanup
  %call.3 = phi %union.tree_node* [ %call.0, %cleanup ], [ null, %if.else ], [ %call.1, %cleanup57 ], !dbg !10343
  %retval1.5 = phi %union.tree_node* [ %retval1.1, %cleanup ], [ null, %if.else ], [ %retval1.3, %cleanup57 ], !dbg !10379
  call void @llvm.dbg.value(metadata %union.tree_node* %retval1.5, metadata !10335, metadata !DIExpression()), !dbg !10343
  call void @llvm.dbg.value(metadata %union.tree_node* %call.3, metadata !10334, metadata !DIExpression()), !dbg !10343
  %tobool62 = icmp ne %union.tree_node* %call.3, null, !dbg !10403
  %tobool64 = icmp ne %union.tree_node* %retval1.5, null, !dbg !10405
  %or.cond = and i1 %tobool62, %tobool64, !dbg !10406
  br i1 %or.cond, label %if.then65, label %cleanup73, !dbg !10406

if.then65:                                        ; preds = %if.end61
  %4 = load %struct.tree_common*, %struct.tree_common** bitcast (%union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 373) to %struct.tree_common**), align 8, !dbg !10407
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %4, i64 0, i32 2, !dbg !10407
  %5 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !10407
  %6 = load %struct.tree_common*, %struct.tree_common** %5, align 8, !dbg !10407
  %type67 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %6, i64 0, i32 2, !dbg !10407
  %7 = load %union.tree_node*, %union.tree_node** %type67, align 8, !dbg !10407
  %call68 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %7, %union.tree_node* nonnull %retval1.5) #7, !dbg !10409
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !10335, metadata !DIExpression()), !dbg !10343
  %type70 = getelementptr inbounds %union.tree_node, %union.tree_node* %call68, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10410
  %8 = load %union.tree_node*, %union.tree_node** %type70, align 8, !dbg !10410
  %call71 = tail call %union.tree_node* @build2_stat(i32 52, %union.tree_node* %8, %union.tree_node* nonnull %call.3, %union.tree_node* %call68) #7, !dbg !10410
  br label %cleanup73, !dbg !10411

cleanup73:                                        ; preds = %land.lhs.true, %if.end12, %lor.lhs.false, %entry, %if.end61, %if.end9, %cleanup, %cleanup57, %if.then65
  %retval.2 = phi %union.tree_node* [ null, %cleanup ], [ %call71, %if.then65 ], [ null, %cleanup57 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %land.lhs.true ], [ null, %if.end9 ], [ null, %if.end12 ], [ %call.3, %if.end61 ]
  ret %union.tree_node* %retval.2, !dbg !10412
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_object_size(%union.tree_node* %ptr, %union.tree_node* %ost) unnamed_addr #5 !dbg !10413 {
entry:
  %low = alloca i64, align 8
  %high = alloca i64, align 8
  call void @llvm.dbg.value(metadata %union.tree_node* %ptr, metadata !10415, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata %union.tree_node* %ost, metadata !10416, metadata !DIExpression()), !dbg !10427
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10417, metadata !DIExpression()), !dbg !10427
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %ptr, i32 10) #8, !dbg !10428
  %tobool = icmp eq i8 %call, 0, !dbg !10428
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !10430

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %ost, i32 8) #8, !dbg !10431
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10431
  br i1 %tobool2, label %cleanup, label %if.end, !dbg !10432

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %ost) #7, !dbg !10433
  call void @llvm.dbg.value(metadata %union.tree_node* %call3, metadata !10416, metadata !DIExpression()), !dbg !10427
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10434
  %bf.load = load i64, i64* %0, align 8, !dbg !10434
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10436
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !10436
  br i1 %cmp, label %lor.lhs.false4, label %cleanup, !dbg !10437

lor.lhs.false4:                                   ; preds = %if.end
  %call5 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %call3) #7, !dbg !10438
  %cmp6 = icmp slt i32 %call5, 0, !dbg !10439
  br i1 %cmp6, label %cleanup, label %lor.lhs.false7, !dbg !10440

lor.lhs.false7:                                   ; preds = %lor.lhs.false4
  %call8 = tail call i32 @compare_tree_int(%union.tree_node* %call3, i64 3) #7, !dbg !10441
  %cmp9 = icmp sgt i32 %call8, 0, !dbg !10442
  br i1 %cmp9, label %cleanup, label %if.end11, !dbg !10443

if.end11:                                         ; preds = %lor.lhs.false7
  %call12 = tail call i64 @tree_low_cst(%union.tree_node* %call3, i32 0) #7, !dbg !10444
  %conv = trunc i64 %call12 to i32, !dbg !10444
  call void @llvm.dbg.value(metadata i32 %conv, metadata !10418, metadata !DIExpression()), !dbg !10427
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %ptr, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10445
  %bf.load14 = load i64, i64* %1, align 8, !dbg !10445
  %bf.cast162 = and i64 %bf.load14, 65536, !dbg !10445
  %tobool17 = icmp eq i64 %bf.cast162, 0, !dbg !10445
  br i1 %tobool17, label %if.end23, label %if.then18, !dbg !10447

if.then18:                                        ; preds = %if.end11
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !10448
  %cmp19 = icmp slt i32 %conv, 2, !dbg !10449
  %conv21 = sext i1 %cmp19 to i64, !dbg !10450
  %call22 = tail call %union.tree_node* @build_int_cst_type(%union.tree_node* %2, i64 %conv21) #7, !dbg !10451
  br label %cleanup, !dbg !10452

if.end23:                                         ; preds = %if.end11
  %bf.cast273 = and i64 %bf.load14, 65535, !dbg !10453
  %cmp28 = icmp eq i64 %bf.cast273, 121, !dbg !10453
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !10454

if.then30:                                        ; preds = %if.end23
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !10455
  %call31 = tail call i64 @compute_builtin_object_size(%union.tree_node* %ptr, i32 %conv) #7, !dbg !10456
  %call32 = tail call %union.tree_node* @build_int_cstu(%union.tree_node* %3, i64 %call31) #7, !dbg !10457
  call void @llvm.dbg.value(metadata %union.tree_node* %call32, metadata !10417, metadata !DIExpression()), !dbg !10427
  br label %if.end51, !dbg !10458

if.else:                                          ; preds = %if.end23
  %cmp37 = icmp eq i64 %bf.cast273, 141, !dbg !10459
  br i1 %cmp37, label %if.then39, label %if.end51, !dbg !10460

if.then39:                                        ; preds = %if.else
  %call40 = tail call i64 @compute_builtin_object_size(%union.tree_node* %ptr, i32 %conv) #7, !dbg !10461
  call void @llvm.dbg.value(metadata i64 %call40, metadata !10419, metadata !DIExpression()), !dbg !10462
  %cmp41 = icmp slt i32 %conv, 2, !dbg !10463
  %conv44 = sext i1 %cmp41 to i64, !dbg !10465
  %cmp45 = icmp eq i64 %call40, %conv44, !dbg !10466
  br i1 %cmp45, label %if.end51, label %if.then47, !dbg !10467

if.then47:                                        ; preds = %if.then39
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !10468
  %call48 = tail call %union.tree_node* @build_int_cstu(%union.tree_node* %4, i64 %call40) #7, !dbg !10469
  call void @llvm.dbg.value(metadata %union.tree_node* %call48, metadata !10417, metadata !DIExpression()), !dbg !10427
  br label %if.end51, !dbg !10470

if.end51:                                         ; preds = %if.then39, %if.else, %if.then47, %if.then30
  %ret.2 = phi %union.tree_node* [ %call32, %if.then30 ], [ null, %if.else ], [ %call48, %if.then47 ], [ null, %if.then39 ], !dbg !10471
  call void @llvm.dbg.value(metadata %union.tree_node* %ret.2, metadata !10417, metadata !DIExpression()), !dbg !10427
  %tobool52 = icmp eq %union.tree_node* %ret.2, null, !dbg !10472
  br i1 %tobool52, label %cleanup, label %if.then53, !dbg !10473

if.then53:                                        ; preds = %if.end51
  %5 = bitcast i64* %low to i8*, !dbg !10474
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !10474
  %int_cst54 = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10475
  %low55 = bitcast i32* %int_cst54 to i64*, !dbg !10475
  %6 = load i64, i64* %low55, align 8, !dbg !10475
  call void @llvm.dbg.value(metadata i64 %6, metadata !10423, metadata !DIExpression()), !dbg !10476
  store i64 %6, i64* %low, align 8, !dbg !10477
  %7 = bitcast i64* %high to i8*, !dbg !10478
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !10478
  %high58 = getelementptr inbounds i32, i32* %int_cst54, i64 2, !dbg !10479
  %8 = bitcast i32* %high58 to i64*, !dbg !10479
  %9 = load i64, i64* %8, align 8, !dbg !10479
  call void @llvm.dbg.value(metadata i64 %9, metadata !10426, metadata !DIExpression()), !dbg !10476
  store i64 %9, i64* %high, align 8, !dbg !10480
  call void @llvm.dbg.value(metadata i64 %6, metadata !10423, metadata !DIExpression()), !dbg !10476
  call void @llvm.dbg.value(metadata i64 %9, metadata !10426, metadata !DIExpression()), !dbg !10476
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %ret.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10481
  %10 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !10481
  call void @llvm.dbg.value(metadata i64* %low, metadata !10423, metadata !DIExpression(DW_OP_deref)), !dbg !10476
  call void @llvm.dbg.value(metadata i64* %high, metadata !10426, metadata !DIExpression(DW_OP_deref)), !dbg !10476
  %call59 = call i32 @fit_double_type(i64 %6, i64 %9, i64* nonnull %low, i64* nonnull %high, %union.tree_node* %10) #7, !dbg !10483
  %tobool60 = icmp eq i32 %call59, 0, !dbg !10483
  %spec.select = select i1 %tobool60, %union.tree_node* %ret.2, %union.tree_node* null, !dbg !10484
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !10417, metadata !DIExpression()), !dbg !10427
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !10485
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !10485
  br label %cleanup, !dbg !10486

cleanup:                                          ; preds = %if.end51, %if.end, %lor.lhs.false, %entry, %if.then53, %lor.lhs.false4, %lor.lhs.false7, %if.then18
  %retval.0 = phi %union.tree_node* [ %call22, %if.then18 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %lor.lhs.false7 ], [ null, %lor.lhs.false4 ], [ null, %if.end ], [ %spec.select, %if.then53 ], [ null, %if.end51 ], !dbg !10427
  ret %union.tree_node* %retval.0, !dbg !10487
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_fprintf(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %fp, %union.tree_node* %fmt, %union.tree_node* %arg, i8 zeroext %ignore, i32 %fcode) unnamed_addr #5 !dbg !10488 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10492, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !10493, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata %union.tree_node* %fp, metadata !10494, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata %union.tree_node* %fmt, metadata !10495, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata %union.tree_node* %arg, metadata !10496, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !10497, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i32 %fcode, metadata !10498, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10501, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata i8* null, metadata !10502, metadata !DIExpression()), !dbg !10503
  %tobool = icmp eq i8 %ignore, 0, !dbg !10504
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10506

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %fp, i32 10) #8, !dbg !10507
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10507
  br i1 %tobool2, label %cleanup, label %if.end4, !dbg !10509

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %fmt, i32 10) #8, !dbg !10510
  %tobool6 = icmp eq i8 %call5, 0, !dbg !10510
  br i1 %tobool6, label %cleanup, label %if.end8, !dbg !10512

if.end8:                                          ; preds = %if.end4
  %call9 = tail call fastcc i8* @c_getstr(%union.tree_node* %fmt) #8, !dbg !10513
  call void @llvm.dbg.value(metadata i8* %call9, metadata !10502, metadata !DIExpression()), !dbg !10503
  %cmp = icmp eq i8* %call9, null, !dbg !10514
  br i1 %cmp, label %cleanup, label %if.end11, !dbg !10516

if.end11:                                         ; preds = %if.end8
  %cmp12 = icmp eq i32 %fcode, 355, !dbg !10517
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 359), align 8, !dbg !10519
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 361), align 8, !dbg !10519
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 358), align 16, !dbg !10519
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 360), align 16, !dbg !10519
  %fn_fputc.0 = select i1 %cmp12, %union.tree_node* %0, %union.tree_node* %2, !dbg !10519
  %fn_fputs.0 = select i1 %cmp12, %union.tree_node* %1, %union.tree_node* %3, !dbg !10519
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_fputs.0, metadata !10500, metadata !DIExpression()), !dbg !10503
  call void @llvm.dbg.value(metadata %union.tree_node* %fn_fputc.0, metadata !10499, metadata !DIExpression()), !dbg !10503
  %call15 = tail call fastcc zeroext i8 @init_target_chars() #8, !dbg !10520
  %tobool16 = icmp eq i8 %call15, 0, !dbg !10520
  br i1 %tobool16, label %cleanup, label %if.end18, !dbg !10522

if.end18:                                         ; preds = %if.end11
  %4 = load i64, i64* @target_percent, align 8, !dbg !10523
  %conv = trunc i64 %4 to i32, !dbg !10523
  %call19 = tail call i8* @strchr(i8* nonnull %call9, i32 %conv) #7, !dbg !10525
  %cmp20 = icmp eq i8* %call19, null, !dbg !10526
  br i1 %cmp20, label %if.then22, label %if.else46, !dbg !10527

if.then22:                                        ; preds = %if.end18
  switch i32 %fcode, label %land.lhs.true27 [
    i32 375, label %if.end30
    i32 544, label %if.end30
  ], !dbg !10528

land.lhs.true27:                                  ; preds = %if.then22
  %tobool28 = icmp eq %union.tree_node* %arg, null, !dbg !10531
  br i1 %tobool28, label %if.end30, label %cleanup, !dbg !10532

if.end30:                                         ; preds = %land.lhs.true27, %if.then22, %if.then22
  %5 = load i8, i8* %call9, align 1, !dbg !10533
  %cmp32 = icmp eq i8 %5, 0, !dbg !10535
  br i1 %cmp32, label %if.then34, label %if.end41, !dbg !10536

if.then34:                                        ; preds = %if.end30
  %6 = getelementptr inbounds %union.tree_node, %union.tree_node* %fp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10537
  %bf.load = load i64, i64* %6, align 8, !dbg !10537
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !10537
  %tobool35 = icmp eq i64 %bf.cast1, 0, !dbg !10537
  br i1 %tobool35, label %if.end37, label %cleanup, !dbg !10540

if.end37:                                         ; preds = %if.then34
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10541
  %7 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !10541
  %8 = load %struct.tree_common*, %struct.tree_common** %7, align 8, !dbg !10541
  %type39 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %8, i64 0, i32 2, !dbg !10541
  %9 = load %union.tree_node*, %union.tree_node** %type39, align 8, !dbg !10541
  %call40 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %9, i64 0) #7, !dbg !10542
  br label %cleanup, !dbg !10543

if.end41:                                         ; preds = %if.end30
  %tobool42 = icmp eq %union.tree_node* %fn_fputs.0, null, !dbg !10544
  br i1 %tobool42, label %if.end85, label %if.then43, !dbg !10546

if.then43:                                        ; preds = %if.end41
  %call44 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %fn_fputs.0, i32 2, %union.tree_node* %fmt, %union.tree_node* %fp) #8, !dbg !10547
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !10501, metadata !DIExpression()), !dbg !10503
  br label %if.end85, !dbg !10548

if.else46:                                        ; preds = %if.end18
  switch i32 %fcode, label %if.else52 [
    i32 375, label %cleanup
    i32 544, label %cleanup
  ], !dbg !10549

if.else52:                                        ; preds = %if.else46
  %call53 = tail call i32 @strcmp(i8* nonnull %call9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !10551
  %cmp54 = icmp eq i32 %call53, 0, !dbg !10553
  br i1 %cmp54, label %if.then56, label %if.else67, !dbg !10554

if.then56:                                        ; preds = %if.else52
  %tobool57 = icmp eq %union.tree_node* %arg, null, !dbg !10555
  br i1 %tobool57, label %cleanup, label %lor.lhs.false58, !dbg !10558

lor.lhs.false58:                                  ; preds = %if.then56
  %call59 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* nonnull %arg, i32 10) #8, !dbg !10559
  %tobool60 = icmp eq i8 %call59, 0, !dbg !10559
  br i1 %tobool60, label %cleanup, label %if.end62, !dbg !10560

if.end62:                                         ; preds = %lor.lhs.false58
  %tobool63 = icmp eq %union.tree_node* %fn_fputs.0, null, !dbg !10561
  br i1 %tobool63, label %if.end85, label %if.then64, !dbg !10563

if.then64:                                        ; preds = %if.end62
  %call65 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %fn_fputs.0, i32 2, %union.tree_node* nonnull %arg, %union.tree_node* %fp) #8, !dbg !10564
  call void @llvm.dbg.value(metadata %union.tree_node* %call65, metadata !10501, metadata !DIExpression()), !dbg !10503
  br label %if.end85, !dbg !10565

if.else67:                                        ; preds = %if.else52
  %call68 = tail call i32 @strcmp(i8* nonnull %call9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_c, i64 0, i64 0)) #7, !dbg !10566
  %cmp69 = icmp eq i32 %call68, 0, !dbg !10568
  br i1 %cmp69, label %if.then71, label %if.end85, !dbg !10569

if.then71:                                        ; preds = %if.else67
  %tobool72 = icmp eq %union.tree_node* %arg, null, !dbg !10570
  br i1 %tobool72, label %cleanup, label %lor.lhs.false73, !dbg !10573

lor.lhs.false73:                                  ; preds = %if.then71
  %call74 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* nonnull %arg, i32 8) #8, !dbg !10574
  %tobool75 = icmp eq i8 %call74, 0, !dbg !10574
  br i1 %tobool75, label %cleanup, label %if.end77, !dbg !10575

if.end77:                                         ; preds = %lor.lhs.false73
  %tobool78 = icmp eq %union.tree_node* %fn_fputc.0, null, !dbg !10576
  br i1 %tobool78, label %if.end85, label %if.then79, !dbg !10578

if.then79:                                        ; preds = %if.end77
  %call80 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %fn_fputc.0, i32 2, %union.tree_node* nonnull %arg, %union.tree_node* %fp) #8, !dbg !10579
  call void @llvm.dbg.value(metadata %union.tree_node* %call80, metadata !10501, metadata !DIExpression()), !dbg !10503
  br label %if.end85, !dbg !10580

if.end85:                                         ; preds = %if.end41, %if.end62, %if.end77, %if.else67, %if.then79, %if.then64, %if.then43
  %call.5 = phi %union.tree_node* [ %call44, %if.then43 ], [ null, %if.end41 ], [ %call65, %if.then64 ], [ null, %if.end62 ], [ null, %if.else67 ], [ %call80, %if.then79 ], [ null, %if.end77 ], !dbg !10581
  call void @llvm.dbg.value(metadata %union.tree_node* %call.5, metadata !10501, metadata !DIExpression()), !dbg !10503
  %tobool86 = icmp eq %union.tree_node* %call.5, null, !dbg !10582
  br i1 %tobool86, label %cleanup, label %if.end88, !dbg !10584

if.end88:                                         ; preds = %if.end85
  %type90 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10585
  %10 = bitcast %union.tree_node** %type90 to %struct.tree_common**, !dbg !10585
  %11 = load %struct.tree_common*, %struct.tree_common** %10, align 8, !dbg !10585
  %type92 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %11, i64 0, i32 2, !dbg !10585
  %12 = load %union.tree_node*, %union.tree_node** %type92, align 8, !dbg !10585
  %call93 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %12, %union.tree_node* nonnull %call.5) #7, !dbg !10586
  br label %cleanup, !dbg !10587

cleanup:                                          ; preds = %land.lhs.true27, %if.then34, %lor.lhs.false58, %if.then56, %lor.lhs.false73, %if.then71, %if.end85, %if.end11, %if.end4, %if.end, %entry, %if.else46, %if.else46, %if.end8, %if.end88, %if.end37
  %retval.0 = phi %union.tree_node* [ %call40, %if.end37 ], [ %call93, %if.end88 ], [ null, %entry ], [ null, %if.end ], [ null, %if.end4 ], [ null, %if.end8 ], [ null, %if.end11 ], [ null, %land.lhs.true27 ], [ null, %if.then34 ], [ null, %if.else46 ], [ null, %if.else46 ], [ null, %lor.lhs.false58 ], [ null, %if.then56 ], [ null, %lor.lhs.false73 ], [ null, %if.then71 ], [ null, %if.end85 ], !dbg !10503
  ret %union.tree_node* %retval.0, !dbg !10588
}

declare dso_local i32 @real_zerop(%union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @labs(i64) local_unnamed_addr #2

declare dso_local void @real_ldexp(%struct.real_value*, %struct.real_value*, i32) local_unnamed_addr #2

declare dso_local void @real_value_truncate(%struct.real_value* sret, i32, %struct.real_value* byval(%struct.real_value) align 8) local_unnamed_addr #2

declare dso_local zeroext i8 @real_arithmetic(%struct.real_value*, i32, %struct.real_value*, %struct.real_value*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_memset(i32 %loc, %union.tree_node* %dest, %union.tree_node* %c, %union.tree_node* %len, %union.tree_node* %type, i8 zeroext %ignore) unnamed_addr #5 !dbg !10589 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10591, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !10592, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata %union.tree_node* %c, metadata !10593, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !10594, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10595, metadata !DIExpression()), !dbg !10602
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !10596, metadata !DIExpression()), !dbg !10602
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !10603
  %tobool = icmp eq i8 %call, 0, !dbg !10603
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !10605

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %c, i32 8) #8, !dbg !10606
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10606
  br i1 %tobool2, label %cleanup, label %lor.lhs.false3, !dbg !10607

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %len, i32 8) #8, !dbg !10608
  %tobool5 = icmp eq i8 %call4, 0, !dbg !10608
  br i1 %tobool5, label %cleanup, label %if.end, !dbg !10609

if.end:                                           ; preds = %lor.lhs.false3
  %call6 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !10610
  %tobool7 = icmp eq i32 %call6, 0, !dbg !10610
  br i1 %tobool7, label %cleanup, label %if.end9, !dbg !10612

if.end9:                                          ; preds = %if.end
  %call10 = tail call i32 @integer_zerop(%union.tree_node* %len) #7, !dbg !10613
  %tobool11 = icmp eq i32 %call10, 0, !dbg !10613
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !10615

if.then12:                                        ; preds = %if.end9
  %call13 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %dest, %union.tree_node* %c) #7, !dbg !10616
  br label %cleanup, !dbg !10617

if.end14:                                         ; preds = %if.end9
  %call15 = tail call i32 @host_integerp(%union.tree_node* %c, i32 1) #7, !dbg !10618
  %tobool16 = icmp eq i32 %call15, 0, !dbg !10618
  br i1 %tobool16, label %cleanup, label %lor.lhs.false17, !dbg !10620

lor.lhs.false17:                                  ; preds = %if.end14
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %dest, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10621
  %bf.load = load i64, i64* %0, align 8, !dbg !10621
  %bf.cast1 = and i64 %bf.load, 65536, !dbg !10621
  %tobool18 = icmp eq i64 %bf.cast1, 0, !dbg !10621
  br i1 %tobool18, label %if.end20, label %cleanup, !dbg !10622

if.end20:                                         ; preds = %lor.lhs.false17
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !10597, metadata !DIExpression()), !dbg !10602
  %call21 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %dest) #7, !dbg !10623
  call void @llvm.dbg.value(metadata %union.tree_node* %call21, metadata !10597, metadata !DIExpression()), !dbg !10602
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10624
  %bf.load23 = load i64, i64* %1, align 8, !dbg !10624
  %bf.cast252 = and i64 %bf.load23, 65535, !dbg !10626
  %cmp = icmp eq i64 %bf.cast252, 121, !dbg !10626
  br i1 %cmp, label %if.end27, label %cleanup, !dbg !10627

if.end27:                                         ; preds = %if.end20
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10628
  %2 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !10628
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10597, metadata !DIExpression()), !dbg !10602
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10629
  %bf.load29 = load i64, i64* %3, align 8, !dbg !10629
  %bf.cast323 = and i64 %bf.load29, 524288, !dbg !10629
  %tobool33 = icmp eq i64 %bf.cast323, 0, !dbg !10629
  br i1 %tobool33, label %if.end35, label %cleanup, !dbg !10631

if.end35:                                         ; preds = %if.end27
  %type36 = getelementptr inbounds %union.tree_node, %union.tree_node* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10632
  %4 = load %union.tree_node*, %union.tree_node** %type36, align 8, !dbg !10632
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10599, metadata !DIExpression()), !dbg !10602
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10633
  %bf.load38 = load i64, i64* %5, align 8, !dbg !10633
  %bf.cast404 = and i64 %bf.load38, 65535, !dbg !10635
  %cmp41 = icmp eq i64 %bf.cast404, 15, !dbg !10635
  br i1 %cmp41, label %if.then42, label %if.end45, !dbg !10636

if.then42:                                        ; preds = %if.end35
  %type44 = getelementptr inbounds %union.tree_node, %union.tree_node* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10637
  %6 = load %union.tree_node*, %union.tree_node** %type44, align 8, !dbg !10637
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !10599, metadata !DIExpression()), !dbg !10602
  %.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10638
  %bf.load47.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !10640
  %.pre = and i64 %bf.load47.pre, 65535, !dbg !10640
  br label %if.end45, !dbg !10641

if.end45:                                         ; preds = %if.then42, %if.end35
  %bf.cast495.pre-phi = phi i64 [ %.pre, %if.then42 ], [ %bf.cast404, %if.end35 ], !dbg !10640
  %etype.0 = phi %union.tree_node* [ %6, %if.then42 ], [ %4, %if.end35 ], !dbg !10602
  call void @llvm.dbg.value(metadata %union.tree_node* %etype.0, metadata !10599, metadata !DIExpression()), !dbg !10602
  %7 = getelementptr inbounds %union.tree_node, %union.tree_node* %etype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10640
  %cmp50 = icmp eq i64 %bf.cast495.pre-phi, 6, !dbg !10640
  br i1 %cmp50, label %if.end75, label %lor.lhs.false51, !dbg !10640

lor.lhs.false51:                                  ; preds = %if.end45
  %cmp56 = icmp eq i64 %bf.cast495.pre-phi, 7, !dbg !10640
  br i1 %cmp56, label %if.end75, label %lor.lhs.false57, !dbg !10640

lor.lhs.false57:                                  ; preds = %lor.lhs.false51
  %cmp62 = icmp eq i64 %bf.cast495.pre-phi, 8, !dbg !10640
  br i1 %cmp62, label %if.end75, label %land.lhs.true, !dbg !10642

land.lhs.true:                                    ; preds = %lor.lhs.false57
  %cmp67 = icmp eq i64 %bf.cast495.pre-phi, 10, !dbg !10643
  br i1 %cmp67, label %if.end75, label %lor.lhs.false68, !dbg !10643

lor.lhs.false68:                                  ; preds = %land.lhs.true
  %cmp73 = icmp eq i64 %bf.cast495.pre-phi, 12, !dbg !10643
  br i1 %cmp73, label %if.end75, label %cleanup, !dbg !10644

if.end75:                                         ; preds = %lor.lhs.false68, %land.lhs.true, %lor.lhs.false57, %lor.lhs.false51, %if.end45
  %call76 = tail call fastcc zeroext i8 @var_decl_component_p(%union.tree_node* %2) #8, !dbg !10645
  %tobool77 = icmp eq i8 %call76, 0, !dbg !10645
  br i1 %tobool77, label %cleanup, label %if.end79, !dbg !10647

if.end79:                                         ; preds = %if.end75
  %call80 = tail call i64 @tree_low_cst(%union.tree_node* %len, i32 1) #7, !dbg !10648
  call void @llvm.dbg.value(metadata i64 %call80, metadata !10600, metadata !DIExpression()), !dbg !10602
  %bf.load82 = load i64, i64* %7, align 8, !dbg !10649
  %bf.cast8410 = and i64 %bf.load82, 65535, !dbg !10649
  %cmp85 = icmp eq i64 %bf.cast8410, 14, !dbg !10649
  br i1 %cmp85, label %cond.true, label %cond.false, !dbg !10649

cond.true:                                        ; preds = %if.end79
  %call86 = tail call i32 @vector_type_mode(%union.tree_node* %etype.0) #7, !dbg !10649
  br label %cond.end, !dbg !10649

cond.false:                                       ; preds = %if.end79
  %type87 = bitcast %union.tree_node* %etype.0 to %struct.tree_type*, !dbg !10649
  %mode = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type87, i64 0, i32 6, !dbg !10649
  %bf.load88 = load i32, i32* %mode, align 4, !dbg !10649
  %bf.lshr89 = lshr i32 %bf.load88, 16, !dbg !10649
  %bf.clear90 = and i32 %bf.lshr89, 255, !dbg !10649
  br label %cond.end, !dbg !10649

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call86, %cond.true ], [ %bf.clear90, %cond.false ], !dbg !10649
  %idxprom = zext i32 %cond to i64, !dbg !10649
  %arrayidx91 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !10649
  %8 = load i8, i8* %arrayidx91, align 1, !dbg !10649
  %conv92 = zext i8 %8 to i64, !dbg !10649
  %cmp93 = icmp eq i64 %call80, %conv92, !dbg !10651
  br i1 %cmp93, label %lor.lhs.false95, label %cleanup, !dbg !10652

lor.lhs.false95:                                  ; preds = %cond.end
  %9 = load i32, i32* @ix86_isa_flags, align 4, !dbg !10653
  %and = and i32 %9, 32, !dbg !10653
  %cmp96 = icmp eq i32 %and, 0, !dbg !10653
  %cond98 = select i1 %cmp96, i32 128, i32 256, !dbg !10653
  %call99 = tail call i32 @get_pointer_alignment(%union.tree_node* %dest, i32 %cond98) #8, !dbg !10654
  %div = sdiv i32 %call99, 8, !dbg !10655
  %conv100 = trunc i64 %call80 to i32, !dbg !10656
  %cmp101 = icmp slt i32 %div, %conv100, !dbg !10657
  %cmp105 = icmp ugt i64 %call80, 8, !dbg !10658
  %or.cond = or i1 %cmp101, %cmp105, !dbg !10660
  br i1 %or.cond, label %cleanup, label %if.end108, !dbg !10660

if.end108:                                        ; preds = %lor.lhs.false95
  %call109 = tail call i32 @integer_zerop(%union.tree_node* %c) #7, !dbg !10661
  %tobool110 = icmp eq i32 %call109, 0, !dbg !10661
  br i1 %tobool110, label %if.else, label %if.end119, !dbg !10663

if.else:                                          ; preds = %if.end108
  %call112 = tail call i64 @tree_low_cst(%union.tree_node* %c, i32 1) #7, !dbg !10664
  call void @llvm.dbg.value(metadata i64 %call112, metadata !10601, metadata !DIExpression()), !dbg !10602
  %and113 = and i64 %call112, 255, !dbg !10666
  call void @llvm.dbg.value(metadata i64 %and113, metadata !10601, metadata !DIExpression()), !dbg !10602
  %shl = shl nuw nsw i64 %and113, 8, !dbg !10667
  %or = or i64 %and113, %shl, !dbg !10668
  call void @llvm.dbg.value(metadata i64 %or, metadata !10601, metadata !DIExpression()), !dbg !10602
  %shl114 = shl nuw nsw i64 %or, 16, !dbg !10669
  %or115 = or i64 %or, %shl114, !dbg !10670
  call void @llvm.dbg.value(metadata i64 %or115, metadata !10601, metadata !DIExpression()), !dbg !10602
  %shl116 = shl nuw i64 %or115, 32, !dbg !10671
  %or118 = or i64 %or115, %shl116, !dbg !10672
  call void @llvm.dbg.value(metadata i64 %or118, metadata !10601, metadata !DIExpression()), !dbg !10602
  br label %if.end119

if.end119:                                        ; preds = %if.end108, %if.else
  %cval.0 = phi i64 [ %or118, %if.else ], [ 0, %if.end108 ], !dbg !10673
  call void @llvm.dbg.value(metadata i64 %cval.0, metadata !10601, metadata !DIExpression()), !dbg !10602
  %call120 = tail call %union.tree_node* @build_int_cst_type(%union.tree_node* %etype.0, i64 %cval.0) #7, !dbg !10674
  call void @llvm.dbg.value(metadata %union.tree_node* %call120, metadata !10598, metadata !DIExpression()), !dbg !10602
  %call121 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %etype.0) #7, !dbg !10675
  %call122 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call121, %union.tree_node* %dest) #7, !dbg !10676
  %call123 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %loc, %union.tree_node* %call122) #7, !dbg !10677
  call void @llvm.dbg.value(metadata %union.tree_node* %call123, metadata !10597, metadata !DIExpression()), !dbg !10602
  %call124 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %etype.0, %union.tree_node* %call123, %union.tree_node* %call120) #7, !dbg !10678
  call void @llvm.dbg.value(metadata %union.tree_node* %call124, metadata !10598, metadata !DIExpression()), !dbg !10602
  %tobool125 = icmp eq i8 %ignore, 0, !dbg !10679
  br i1 %tobool125, label %if.end127, label %cleanup, !dbg !10681

if.end127:                                        ; preds = %if.end119
  %call128 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %dest, %union.tree_node* %call124) #7, !dbg !10682
  br label %cleanup, !dbg !10683

cleanup:                                          ; preds = %if.end119, %cond.end, %if.end75, %if.end27, %if.end20, %lor.lhs.false17, %if.end14, %if.end, %lor.lhs.false3, %lor.lhs.false, %entry, %lor.lhs.false95, %lor.lhs.false68, %if.end127, %if.then12
  %retval.0 = phi %union.tree_node* [ %call13, %if.then12 ], [ %call128, %if.end127 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end ], [ null, %lor.lhs.false17 ], [ null, %if.end14 ], [ null, %if.end20 ], [ null, %if.end27 ], [ null, %lor.lhs.false68 ], [ null, %if.end75 ], [ null, %lor.lhs.false95 ], [ null, %cond.end ], [ %call124, %if.end119 ], !dbg !10602
  ret %union.tree_node* %retval.0, !dbg !10684
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @var_decl_component_p(%union.tree_node* %var) unnamed_addr #5 !dbg !10685 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !10687, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata %union.tree_node* %var, metadata !10688, metadata !DIExpression()), !dbg !10689
  br label %while.cond, !dbg !10690

while.cond:                                       ; preds = %while.body, %entry
  %inner.0 = phi %union.tree_node* [ %var, %entry ], [ %0, %while.body ], !dbg !10689
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0, metadata !10688, metadata !DIExpression()), !dbg !10689
  %call = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* %inner.0) #8, !dbg !10691
  %tobool = icmp eq i8 %call, 0, !dbg !10690
  br i1 %tobool, label %while.end, label %while.body, !dbg !10690

while.body:                                       ; preds = %while.cond
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10692
  %0 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !10692
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10688, metadata !DIExpression()), !dbg !10689
  br label %while.cond, !dbg !10690, !llvm.loop !10693

while.end:                                        ; preds = %while.cond
  %inner.0.lcssa = phi %union.tree_node* [ %inner.0, %while.cond ], !dbg !10689
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !10688, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !10688, metadata !DIExpression()), !dbg !10689
  call void @llvm.dbg.value(metadata %union.tree_node* %inner.0.lcssa, metadata !10688, metadata !DIExpression()), !dbg !10689
  %1 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10694
  %bf.load = load i64, i64* %1, align 8, !dbg !10694
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !10694
  %cmp = icmp eq i64 %bf.cast1, 32, !dbg !10694
  br i1 %cmp, label %lor.end39, label %lor.lhs.false, !dbg !10694

lor.lhs.false:                                    ; preds = %while.end
  %cmp5 = icmp eq i64 %bf.cast1, 34, !dbg !10694
  br i1 %cmp5, label %lor.end39, label %lor.lhs.false6, !dbg !10694

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp11 = icmp eq i64 %bf.cast1, 36, !dbg !10694
  br i1 %cmp11, label %lor.end39, label %lor.rhs, !dbg !10694

lor.rhs:                                          ; preds = %lor.lhs.false6
  %cmp16 = icmp eq i64 %bf.cast1, 141, !dbg !10694
  br i1 %cmp16, label %land.rhs, label %lor.end39, !dbg !10694

land.rhs:                                         ; preds = %lor.rhs
  %var17 = getelementptr inbounds %union.tree_node, %union.tree_node* %inner.0.lcssa, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10694
  %2 = bitcast i32* %var17 to i64**, !dbg !10694
  %3 = load i64*, i64** %2, align 8, !dbg !10694
  %bf.load19 = load i64, i64* %3, align 8, !dbg !10694
  %bf.cast215 = and i64 %bf.load19, 65535, !dbg !10694
  %cmp22 = icmp eq i64 %bf.cast215, 32, !dbg !10694
  br i1 %cmp22, label %lor.end39, label %lor.lhs.false23, !dbg !10694

lor.lhs.false23:                                  ; preds = %land.rhs
  %cmp30 = icmp eq i64 %bf.cast215, 34, !dbg !10694
  br i1 %cmp30, label %lor.end39, label %lor.rhs31, !dbg !10694

lor.rhs31:                                        ; preds = %lor.lhs.false23
  %cmp38 = icmp eq i64 %bf.cast215, 36, !dbg !10694
  %phitmp = zext i1 %cmp38 to i8, !dbg !10694
  br label %lor.end39, !dbg !10694

lor.end39:                                        ; preds = %lor.rhs, %lor.rhs31, %lor.lhs.false23, %land.rhs, %lor.lhs.false6, %lor.lhs.false, %while.end
  %4 = phi i8 [ 1, %lor.lhs.false6 ], [ 1, %lor.lhs.false ], [ 1, %while.end ], [ 0, %lor.rhs ], [ 1, %lor.lhs.false23 ], [ 1, %land.rhs ], [ %phitmp, %lor.rhs31 ]
  ret i8 %4, !dbg !10695
}

declare dso_local %union.tree_node* @build_int_cst_type(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local i8* @strstr(i8*, i8*) local_unnamed_addr #2

declare dso_local zeroext i8 @optimize_insn_for_speed_p() local_unnamed_addr #2

declare dso_local i64 @strspn(i8*, i8*) local_unnamed_addr #2

declare dso_local %union.tree_node* @omit_two_operands_loc(i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local i64 @strcspn(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @target_char_cast(%union.tree_node* %cst, i8* %p) unnamed_addr #5 !dbg !10696 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %cst, metadata !10700, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata i8* %p, metadata !10701, metadata !DIExpression()), !dbg !10704
  %call = tail call i32 @host_integerp(%union.tree_node* %cst, i32 1) #7, !dbg !10705
  %tobool = icmp eq i32 %call, 0, !dbg !10705
  br i1 %tobool, label %cleanup, label %if.end, !dbg !10707

if.end:                                           ; preds = %entry
  %call1 = tail call i64 @tree_low_cst(%union.tree_node* %cst, i32 1) #7, !dbg !10708
  call void @llvm.dbg.value(metadata i64 %call1, metadata !10702, metadata !DIExpression()), !dbg !10704
  call void @llvm.dbg.value(metadata i64 %call1, metadata !10702, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10704
  call void @llvm.dbg.value(metadata i64 %call1, metadata !10703, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10704
  call void @llvm.dbg.value(metadata i64 %call1, metadata !10703, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10704
  call void @llvm.dbg.value(metadata i64 %call1, metadata !10702, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10704
  call void @llvm.dbg.value(metadata i64 %call1, metadata !10703, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10704
  call void @llvm.dbg.value(metadata i64 %call1, metadata !10703, metadata !DIExpression(DW_OP_constu, 255, DW_OP_and, DW_OP_stack_value)), !dbg !10704
  %conv = trunc i64 %call1 to i8, !dbg !10709
  store i8 %conv, i8* %p, align 1, !dbg !10710
  br label %cleanup, !dbg !10711

cleanup:                                          ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 0, %if.end ], [ 1, %entry ], !dbg !10704
  ret i32 %retval.0, !dbg !10712
}

declare dso_local i8* @strrchr(i8*, i32) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_pointer_type_for_mode(%union.tree_node*, i32, i8 zeroext) local_unnamed_addr #2

declare dso_local i8* @strpbrk(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @build_builtin_expect_predicate(i32 %loc, %union.tree_node* %pred, %union.tree_node* %expected) unnamed_addr #5 !dbg !10713 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10715, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata %union.tree_node* %pred, metadata !10716, metadata !DIExpression()), !dbg !10724
  call void @llvm.dbg.value(metadata %union.tree_node* %expected, metadata !10717, metadata !DIExpression()), !dbg !10724
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 446), align 16, !dbg !10725
  call void @llvm.dbg.value(metadata %union.tree_node* %0, metadata !10718, metadata !DIExpression()), !dbg !10724
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10726
  %1 = bitcast %union.tree_node** %type to %struct.tree_type**, !dbg !10726
  %2 = load %struct.tree_type*, %struct.tree_type** %1, align 8, !dbg !10726
  %values = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 1, !dbg !10726
  %3 = load %union.tree_node*, %union.tree_node** %values, align 8, !dbg !10726
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !10719, metadata !DIExpression()), !dbg !10724
  %type5 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %2, i64 0, i32 0, i32 2, !dbg !10727
  %4 = load %union.tree_node*, %union.tree_node** %type5, align 8, !dbg !10727
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !10723, metadata !DIExpression()), !dbg !10724
  %5 = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10728
  %6 = load %union.tree_node*, %union.tree_node** %5, align 8, !dbg !10728
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !10720, metadata !DIExpression()), !dbg !10724
  %chain = getelementptr inbounds %union.tree_node, %union.tree_node* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10729
  %7 = bitcast %union.tree_node** %chain to %struct.tree_list**, !dbg !10729
  %8 = load %struct.tree_list*, %struct.tree_list** %7, align 8, !dbg !10729
  %value8 = getelementptr inbounds %struct.tree_list, %struct.tree_list* %8, i64 0, i32 2, !dbg !10729
  %9 = load %union.tree_node*, %union.tree_node** %value8, align 8, !dbg !10729
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !10721, metadata !DIExpression()), !dbg !10724
  %call = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %6, %union.tree_node* %pred) #7, !dbg !10730
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !10716, metadata !DIExpression()), !dbg !10724
  %call9 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %9, %union.tree_node* %expected) #7, !dbg !10731
  call void @llvm.dbg.value(metadata %union.tree_node* %call9, metadata !10717, metadata !DIExpression()), !dbg !10724
  %call10 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* %0, i32 2, %union.tree_node* %call, %union.tree_node* %call9) #8, !dbg !10732
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !10722, metadata !DIExpression()), !dbg !10724
  %type12 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10733
  %10 = load %union.tree_node*, %union.tree_node** %type12, align 8, !dbg !10733
  %call13 = tail call %union.tree_node* @build_int_cst(%union.tree_node* %4, i64 0) #7, !dbg !10733
  %call14 = tail call %union.tree_node* @build2_stat(i32 102, %union.tree_node* %10, %union.tree_node* %call10, %union.tree_node* %call13) #7, !dbg !10733
  ret %union.tree_node* %call14, !dbg !10734
}

declare dso_local i32 @real_onep(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @real_powi(%struct.real_value*, i32, %struct.real_value*, i64) local_unnamed_addr #2

declare dso_local void @real_copysign(%struct.real_value*, %struct.real_value*) local_unnamed_addr #2

declare dso_local %union.tree_node* @fold_strip_sign_ops(%union.tree_node*) local_unnamed_addr #2

declare dso_local i32 @tree_int_cst_sgn(%union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @build_int_cstu(%union.tree_node*, i64) local_unnamed_addr #2

declare dso_local i64 @compute_builtin_object_size(%union.tree_node*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_sincos(i32 %loc, %union.tree_node* %arg0, %union.tree_node* %arg1, %union.tree_node* %arg2) unnamed_addr #5 !dbg !10735 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10737, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata %union.tree_node* %arg0, metadata !10738, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !10739, metadata !DIExpression()), !dbg !10741
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !10740, metadata !DIExpression()), !dbg !10741
  ret %union.tree_node* undef, !dbg !10742
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_memory_op(i32 %loc, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len, %union.tree_node* %type, i8 zeroext %ignore, i32 %endp) unnamed_addr #5 !dbg !10743 {
entry:
  %src_offset = alloca i64, align 8
  %dest_offset = alloca i64, align 8
  %size = alloca i64, align 8
  %maxsize = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %loc, metadata !10747, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !10748, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !10749, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !10750, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !10751, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata i8 %ignore, metadata !10752, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata i32 %endp, metadata !10753, metadata !DIExpression()), !dbg !10789
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !10790
  %tobool = icmp eq i8 %call, 0, !dbg !10790
  br i1 %tobool, label %cleanup753, label %lor.lhs.false, !dbg !10792

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !10793
  %tobool2 = icmp eq i8 %call1, 0, !dbg !10793
  br i1 %tobool2, label %cleanup753, label %lor.lhs.false3, !dbg !10794

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %len, i32 8) #8, !dbg !10795
  %tobool5 = icmp eq i8 %call4, 0, !dbg !10795
  br i1 %tobool5, label %cleanup753, label %if.end, !dbg !10796

if.end:                                           ; preds = %lor.lhs.false3
  %call6 = tail call i32 @integer_zerop(%union.tree_node* %len) #7, !dbg !10797
  %tobool7 = icmp eq i32 %call6, 0, !dbg !10797
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !10799

if.then8:                                         ; preds = %if.end
  %call9 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %dest, %union.tree_node* %src) #7, !dbg !10800
  br label %cleanup753, !dbg !10801

if.end10:                                         ; preds = %if.end
  %call11 = tail call i32 @operand_equal_p(%union.tree_node* %src, %union.tree_node* %dest, i32 0) #7, !dbg !10802
  %tobool12 = icmp eq i32 %call11, 0, !dbg !10802
  br i1 %tobool12, label %if.else, label %if.end720, !dbg !10803

if.else:                                          ; preds = %if.end10
  %cmp = icmp eq i32 %endp, 3, !dbg !10804
  br i1 %cmp, label %if.then14, label %if.end238, !dbg !10805

if.then14:                                        ; preds = %if.else
  %0 = load i32, i32* @ix86_isa_flags, align 4, !dbg !10806
  %and = and i32 %0, 32, !dbg !10806
  %cmp15 = icmp eq i32 %and, 0, !dbg !10806
  %cond = select i1 %cmp15, i32 128, i32 256, !dbg !10806
  %call16 = tail call i32 @get_pointer_alignment(%union.tree_node* %src, i32 %cond) #8, !dbg !10807
  call void @llvm.dbg.value(metadata i32 %call16, metadata !10761, metadata !DIExpression()), !dbg !10808
  %1 = load i32, i32* @ix86_isa_flags, align 4, !dbg !10809
  %and17 = and i32 %1, 32, !dbg !10809
  %cmp18 = icmp eq i32 %and17, 0, !dbg !10809
  %cond19 = select i1 %cmp18, i32 128, i32 256, !dbg !10809
  %call20 = tail call i32 @get_pointer_alignment(%union.tree_node* %dest, i32 %cond19) #8, !dbg !10810
  call void @llvm.dbg.value(metadata i32 %call20, metadata !10762, metadata !DIExpression()), !dbg !10808
  %tobool21 = icmp ne i32 %call20, 0, !dbg !10811
  %tobool23 = icmp ne i32 %call16, 0, !dbg !10813
  %or.cond = and i1 %tobool21, %tobool23, !dbg !10814
  br i1 %or.cond, label %if.end25, label %cleanup714, !dbg !10814

if.end25:                                         ; preds = %if.then14
  %call26 = tail call fastcc zeroext i8 @readonly_data_expr(%union.tree_node* %src) #8, !dbg !10815
  %tobool27 = icmp eq i8 %call26, 0, !dbg !10815
  br i1 %tobool27, label %lor.lhs.false28, label %if.then38, !dbg !10816

lor.lhs.false28:                                  ; preds = %if.end25
  %call29 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !10817
  %tobool30 = icmp eq i32 %call29, 0, !dbg !10817
  br i1 %tobool30, label %if.end43, label %land.lhs.true, !dbg !10818

land.lhs.true:                                    ; preds = %lor.lhs.false28
  %cmp31 = icmp slt i32 %call16, %call20, !dbg !10819
  %call16.call20 = select i1 %cmp31, i32 %call16, i32 %call20, !dbg !10819
  %div = sdiv i32 %call16.call20, 8, !dbg !10820
  %conv34 = sext i32 %div to i64, !dbg !10819
  %call35 = tail call i64 @tree_low_cst(%union.tree_node* %len, i32 1) #7, !dbg !10821
  %cmp36 = icmp sgt i64 %call35, %conv34, !dbg !10822
  br i1 %cmp36, label %if.end43, label %if.then38, !dbg !10823

if.then38:                                        ; preds = %land.lhs.true, %if.end25
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 330), align 16, !dbg !10824
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !10763, metadata !DIExpression()), !dbg !10825
  %tobool39 = icmp eq %union.tree_node* %2, null, !dbg !10826
  br i1 %tobool39, label %cleanup714, label %if.end41, !dbg !10828

if.end41:                                         ; preds = %if.then38
  %call42 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %2, i32 3, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len) #8, !dbg !10829
  br label %cleanup714, !dbg !10830

if.end43:                                         ; preds = %land.lhs.true, %lor.lhs.false28
  %call44 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %loc, %union.tree_node* %src) #7, !dbg !10831
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !10755, metadata !DIExpression()), !dbg !10789
  %call45 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %loc, %union.tree_node* %dest) #7, !dbg !10832
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !10754, metadata !DIExpression()), !dbg !10789
  %tobool46 = icmp eq %union.tree_node* %call44, null, !dbg !10833
  br i1 %tobool46, label %cleanup714, label %land.lhs.true47, !dbg !10834

land.lhs.true47:                                  ; preds = %if.end43
  %3 = getelementptr inbounds %union.tree_node, %union.tree_node* %call44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10835
  %bf.load = load i64, i64* %3, align 8, !dbg !10835
  %bf.cast39 = and i64 %bf.load, 524288, !dbg !10835
  %tobool48 = icmp eq i64 %bf.cast39, 0, !dbg !10835
  %tobool50 = icmp ne %union.tree_node* %call45, null, !dbg !10836
  %or.cond4 = and i1 %tobool48, %tobool50, !dbg !10837
  br i1 %or.cond4, label %land.lhs.true51, label %cleanup714, !dbg !10837

land.lhs.true51:                                  ; preds = %land.lhs.true47
  %4 = getelementptr inbounds %union.tree_node, %union.tree_node* %call45, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10838
  %bf.load53 = load i64, i64* %4, align 8, !dbg !10838
  %bf.cast5640 = and i64 %bf.load53, 524288, !dbg !10838
  %tobool57 = icmp eq i64 %bf.cast5640, 0, !dbg !10838
  br i1 %tobool57, label %if.then58, label %cleanup714, !dbg !10839

if.then58:                                        ; preds = %land.lhs.true51
  %5 = bitcast i64* %src_offset to i8*, !dbg !10840
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #6, !dbg !10840
  call void @llvm.dbg.value(metadata i64 0, metadata !10773, metadata !DIExpression()), !dbg !10841
  store i64 0, i64* %src_offset, align 8, !dbg !10842
  %6 = bitcast i64* %dest_offset to i8*, !dbg !10840
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6, !dbg !10840
  call void @llvm.dbg.value(metadata i64 0, metadata !10774, metadata !DIExpression()), !dbg !10841
  store i64 0, i64* %dest_offset, align 8, !dbg !10843
  %7 = bitcast i64* %size to i8*, !dbg !10844
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6, !dbg !10844
  call void @llvm.dbg.value(metadata i64 -1, metadata !10775, metadata !DIExpression()), !dbg !10841
  store i64 -1, i64* %size, align 8, !dbg !10845
  %8 = bitcast i64* %maxsize to i8*, !dbg !10846
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #6, !dbg !10846
  call void @llvm.dbg.value(metadata i64 -1, metadata !10776, metadata !DIExpression()), !dbg !10841
  store i64 -1, i64* %maxsize, align 8, !dbg !10847
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !10768, metadata !DIExpression()), !dbg !10841
  %call60 = tail call fastcc zeroext i8 @handled_component_p(%union.tree_node* nonnull %call44) #8, !dbg !10848
  %tobool61 = icmp eq i8 %call60, 0, !dbg !10848
  br i1 %tobool61, label %if.end64, label %if.then62, !dbg !10850

if.then62:                                        ; preds = %if.then58
  call void @llvm.dbg.value(metadata i64* %src_offset, metadata !10773, metadata !DIExpression(DW_OP_deref)), !dbg !10841
  call void @llvm.dbg.value(metadata i64* %size, metadata !10775, metadata !DIExpression(DW_OP_deref)), !dbg !10841
  call void @llvm.dbg.value(metadata i64* %maxsize, metadata !10776, metadata !DIExpression(DW_OP_deref)), !dbg !10841
  %call63 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* nonnull %call44, i64* nonnull %src_offset, i64* nonnull %size, i64* nonnull %maxsize) #7, !dbg !10851
  call void @llvm.dbg.value(metadata %union.tree_node* %call63, metadata !10768, metadata !DIExpression()), !dbg !10841
  br label %if.end64, !dbg !10852

if.end64:                                         ; preds = %if.then58, %if.then62
  %src_base.0 = phi %union.tree_node* [ %call63, %if.then62 ], [ %call44, %if.then58 ], !dbg !10841
  call void @llvm.dbg.value(metadata %union.tree_node* %src_base.0, metadata !10768, metadata !DIExpression()), !dbg !10841
  call void @llvm.dbg.value(metadata %union.tree_node* %call45, metadata !10771, metadata !DIExpression()), !dbg !10841
  %call65 = call fastcc zeroext i8 @handled_component_p(%union.tree_node* nonnull %call45) #8, !dbg !10853
  %tobool66 = icmp eq i8 %call65, 0, !dbg !10853
  br i1 %tobool66, label %if.end69, label %if.then67, !dbg !10855

if.then67:                                        ; preds = %if.end64
  call void @llvm.dbg.value(metadata i64* %dest_offset, metadata !10774, metadata !DIExpression(DW_OP_deref)), !dbg !10841
  call void @llvm.dbg.value(metadata i64* %size, metadata !10775, metadata !DIExpression(DW_OP_deref)), !dbg !10841
  call void @llvm.dbg.value(metadata i64* %maxsize, metadata !10776, metadata !DIExpression(DW_OP_deref)), !dbg !10841
  %call68 = call %union.tree_node* @get_ref_base_and_extent(%union.tree_node* nonnull %call45, i64* nonnull %dest_offset, i64* nonnull %size, i64* nonnull %maxsize) #7, !dbg !10856
  call void @llvm.dbg.value(metadata %union.tree_node* %call68, metadata !10771, metadata !DIExpression()), !dbg !10841
  br label %if.end69, !dbg !10857

if.end69:                                         ; preds = %if.end64, %if.then67
  %dest_base.0 = phi %union.tree_node* [ %call68, %if.then67 ], [ %call45, %if.end64 ], !dbg !10841
  call void @llvm.dbg.value(metadata %union.tree_node* %dest_base.0, metadata !10771, metadata !DIExpression()), !dbg !10841
  %call70 = call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !10858
  %tobool71 = icmp eq i32 %call70, 0, !dbg !10858
  br i1 %tobool71, label %if.else79, label %if.then72, !dbg !10860

if.then72:                                        ; preds = %if.end69
  %call73 = call i64 @tree_low_cst(%union.tree_node* %len, i32 1) #7, !dbg !10861
  call void @llvm.dbg.value(metadata i64 %call73, metadata !10776, metadata !DIExpression()), !dbg !10841
  store i64 %call73, i64* %maxsize, align 8, !dbg !10863
  call void @llvm.dbg.value(metadata i64 %call73, metadata !10776, metadata !DIExpression()), !dbg !10841
  %cmp74 = icmp sgt i64 %call73, 1152921504606846975, !dbg !10864
  br i1 %cmp74, label %if.then76, label %if.else77, !dbg !10866

if.then76:                                        ; preds = %if.then72
  call void @llvm.dbg.value(metadata i64 -1, metadata !10776, metadata !DIExpression()), !dbg !10841
  store i64 -1, i64* %maxsize, align 8, !dbg !10867
  br label %if.end80, !dbg !10868

if.else77:                                        ; preds = %if.then72
  call void @llvm.dbg.value(metadata i64 %call73, metadata !10776, metadata !DIExpression()), !dbg !10841
  %mul = shl nsw i64 %call73, 3, !dbg !10869
  call void @llvm.dbg.value(metadata i64 %mul, metadata !10776, metadata !DIExpression()), !dbg !10841
  store i64 %mul, i64* %maxsize, align 8, !dbg !10869
  br label %if.end80

if.else79:                                        ; preds = %if.end69
  call void @llvm.dbg.value(metadata i64 -1, metadata !10776, metadata !DIExpression()), !dbg !10841
  store i64 -1, i64* %maxsize, align 8, !dbg !10870
  br label %if.end80

if.end80:                                         ; preds = %if.then76, %if.else77, %if.else79
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %src_base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10871
  %bf.load82 = load i64, i64* %9, align 8, !dbg !10871
  %bf.cast8441 = and i64 %bf.load82, 65535, !dbg !10871
  %cmp85 = icmp eq i64 %bf.cast8441, 32, !dbg !10871
  br i1 %cmp85, label %land.lhs.true133, label %lor.lhs.false87, !dbg !10871

lor.lhs.false87:                                  ; preds = %if.end80
  %cmp92 = icmp eq i64 %bf.cast8441, 34, !dbg !10871
  br i1 %cmp92, label %land.lhs.true133, label %lor.lhs.false94, !dbg !10871

lor.lhs.false94:                                  ; preds = %lor.lhs.false87
  %cmp99 = icmp eq i64 %bf.cast8441, 36, !dbg !10871
  br i1 %cmp99, label %land.lhs.true133, label %lor.lhs.false101, !dbg !10871

lor.lhs.false101:                                 ; preds = %lor.lhs.false94
  %cmp106 = icmp eq i64 %bf.cast8441, 141, !dbg !10871
  br i1 %cmp106, label %land.lhs.true108, label %if.else197, !dbg !10871

land.lhs.true108:                                 ; preds = %lor.lhs.false101
  %var = getelementptr inbounds %union.tree_node, %union.tree_node* %src_base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10871
  %10 = bitcast i32* %var to i64**, !dbg !10871
  %11 = load i64*, i64** %10, align 8, !dbg !10871
  %bf.load110 = load i64, i64* %11, align 8, !dbg !10871
  %bf.cast11247 = and i64 %bf.load110, 65535, !dbg !10871
  %cmp113 = icmp eq i64 %bf.cast11247, 32, !dbg !10871
  br i1 %cmp113, label %land.lhs.true133, label %lor.lhs.false115, !dbg !10871

lor.lhs.false115:                                 ; preds = %land.lhs.true108
  %cmp122 = icmp eq i64 %bf.cast11247, 34, !dbg !10871
  br i1 %cmp122, label %land.lhs.true133, label %lor.lhs.false124, !dbg !10871

lor.lhs.false124:                                 ; preds = %lor.lhs.false115
  %cmp131 = icmp eq i64 %bf.cast11247, 36, !dbg !10871
  br i1 %cmp131, label %land.lhs.true133, label %if.else197, !dbg !10873

land.lhs.true133:                                 ; preds = %lor.lhs.false124, %lor.lhs.false115, %land.lhs.true108, %lor.lhs.false94, %lor.lhs.false87, %if.end80
  %12 = getelementptr inbounds %union.tree_node, %union.tree_node* %dest_base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10874
  %bf.load135 = load i64, i64* %12, align 8, !dbg !10874
  %bf.cast13750 = and i64 %bf.load135, 65535, !dbg !10874
  %cmp138 = icmp eq i64 %bf.cast13750, 32, !dbg !10874
  br i1 %cmp138, label %if.then188, label %lor.lhs.false140, !dbg !10874

lor.lhs.false140:                                 ; preds = %land.lhs.true133
  %cmp145 = icmp eq i64 %bf.cast13750, 34, !dbg !10874
  br i1 %cmp145, label %if.then188, label %lor.lhs.false147, !dbg !10874

lor.lhs.false147:                                 ; preds = %lor.lhs.false140
  %cmp152 = icmp eq i64 %bf.cast13750, 36, !dbg !10874
  br i1 %cmp152, label %if.then188, label %lor.lhs.false154, !dbg !10874

lor.lhs.false154:                                 ; preds = %lor.lhs.false147
  %cmp159 = icmp eq i64 %bf.cast13750, 141, !dbg !10874
  br i1 %cmp159, label %land.lhs.true161, label %if.else197, !dbg !10874

land.lhs.true161:                                 ; preds = %lor.lhs.false154
  %var163 = getelementptr inbounds %union.tree_node, %union.tree_node* %dest_base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, !dbg !10874
  %13 = bitcast i32* %var163 to i64**, !dbg !10874
  %14 = load i64*, i64** %13, align 8, !dbg !10874
  %bf.load165 = load i64, i64* %14, align 8, !dbg !10874
  %bf.cast16754 = and i64 %bf.load165, 65535, !dbg !10874
  %cmp168 = icmp eq i64 %bf.cast16754, 32, !dbg !10874
  br i1 %cmp168, label %if.then188, label %lor.lhs.false170, !dbg !10874

lor.lhs.false170:                                 ; preds = %land.lhs.true161
  %cmp177 = icmp eq i64 %bf.cast16754, 34, !dbg !10874
  br i1 %cmp177, label %if.then188, label %lor.lhs.false179, !dbg !10874

lor.lhs.false179:                                 ; preds = %lor.lhs.false170
  %cmp186 = icmp eq i64 %bf.cast16754, 36, !dbg !10874
  br i1 %cmp186, label %if.then188, label %if.else197, !dbg !10875

if.then188:                                       ; preds = %lor.lhs.false179, %lor.lhs.false170, %land.lhs.true161, %lor.lhs.false147, %lor.lhs.false140, %land.lhs.true133
  %call189 = call i32 @operand_equal_p(%union.tree_node* %src_base.0, %union.tree_node* %dest_base.0, i32 0) #7, !dbg !10876
  %tobool190 = icmp eq i32 %call189, 0, !dbg !10876
  br i1 %tobool190, label %if.end225, label %land.lhs.true191, !dbg !10879

land.lhs.true191:                                 ; preds = %if.then188
  %15 = load i64, i64* %src_offset, align 8, !dbg !10880
  call void @llvm.dbg.value(metadata i64 %15, metadata !10773, metadata !DIExpression()), !dbg !10841
  %16 = load i64, i64* %maxsize, align 8, !dbg !10881
  call void @llvm.dbg.value(metadata i64 %16, metadata !10776, metadata !DIExpression()), !dbg !10841
  %17 = load i64, i64* %dest_offset, align 8, !dbg !10882
  call void @llvm.dbg.value(metadata i64 %17, metadata !10774, metadata !DIExpression()), !dbg !10841
  call void @llvm.dbg.value(metadata i64 %16, metadata !10776, metadata !DIExpression()), !dbg !10841
  %call192 = call fastcc zeroext i8 @ranges_overlap_p(i64 %15, i64 %16, i64 %17, i64 %16) #8, !dbg !10883
  %tobool194 = icmp eq i8 %call192, 0, !dbg !10883
  br i1 %tobool194, label %if.end225, label %cleanup230, !dbg !10884

if.else197:                                       ; preds = %lor.lhs.false179, %lor.lhs.false154, %lor.lhs.false124, %lor.lhs.false101
  %cmp202 = icmp eq i64 %bf.cast8441, 47, !dbg !10885
  br i1 %cmp202, label %land.lhs.true204, label %cleanup230, !dbg !10887

land.lhs.true204:                                 ; preds = %if.else197
  %18 = getelementptr inbounds %union.tree_node, %union.tree_node* %dest_base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10888
  %bf.load206 = load i64, i64* %18, align 8, !dbg !10888
  %bf.cast20846 = and i64 %bf.load206, 65535, !dbg !10889
  %cmp209 = icmp eq i64 %bf.cast20846, 47, !dbg !10889
  br i1 %cmp209, label %if.then211, label %cleanup230, !dbg !10890

if.then211:                                       ; preds = %land.lhs.true204
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %src_base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10891
  %19 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !10891
  %operands213 = getelementptr inbounds %union.tree_node, %union.tree_node* %dest_base.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10894
  %20 = load %union.tree_node*, %union.tree_node** %operands213, align 8, !dbg !10894
  %call215 = call i32 @operand_equal_p(%union.tree_node* %19, %union.tree_node* %20, i32 0) #7, !dbg !10895
  %tobool216 = icmp eq i32 %call215, 0, !dbg !10895
  br i1 %tobool216, label %cleanup230, label %lor.lhs.false217, !dbg !10896

lor.lhs.false217:                                 ; preds = %if.then211
  %21 = load i64, i64* %src_offset, align 8, !dbg !10897
  call void @llvm.dbg.value(metadata i64 %21, metadata !10773, metadata !DIExpression()), !dbg !10841
  %22 = load i64, i64* %maxsize, align 8, !dbg !10898
  call void @llvm.dbg.value(metadata i64 %22, metadata !10776, metadata !DIExpression()), !dbg !10841
  %23 = load i64, i64* %dest_offset, align 8, !dbg !10899
  call void @llvm.dbg.value(metadata i64 %23, metadata !10774, metadata !DIExpression()), !dbg !10841
  call void @llvm.dbg.value(metadata i64 %22, metadata !10776, metadata !DIExpression()), !dbg !10841
  %call218 = call fastcc zeroext i8 @ranges_overlap_p(i64 %21, i64 %22, i64 %23, i64 %22) #8, !dbg !10900
  %tobool220 = icmp eq i8 %call218, 0, !dbg !10900
  br i1 %tobool220, label %if.end225, label %cleanup230, !dbg !10901

if.end225:                                        ; preds = %land.lhs.true191, %if.then188, %lor.lhs.false217
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 330), align 16, !dbg !10902
  call void @llvm.dbg.value(metadata %union.tree_node* %24, metadata !10772, metadata !DIExpression()), !dbg !10841
  %tobool226 = icmp eq %union.tree_node* %24, null, !dbg !10903
  br i1 %tobool226, label %cleanup230, label %if.end228, !dbg !10905

if.end228:                                        ; preds = %if.end225
  %call229 = call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %24, i32 3, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len) #8, !dbg !10906
  br label %cleanup230, !dbg !10907

cleanup230:                                       ; preds = %land.lhs.true191, %if.end225, %lor.lhs.false217, %if.then211, %if.else197, %land.lhs.true204, %if.end228
  %retval.1 = phi %union.tree_node* [ %call229, %if.end228 ], [ null, %land.lhs.true191 ], [ null, %lor.lhs.false217 ], [ null, %if.then211 ], [ null, %land.lhs.true204 ], [ null, %if.else197 ], [ null, %if.end225 ], !dbg !10841
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #6, !dbg !10908
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6, !dbg !10908
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6, !dbg !10908
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #6, !dbg !10908
  br label %cleanup714

if.end238:                                        ; preds = %if.else
  %call239 = tail call i32 @host_integerp(%union.tree_node* %len, i32 0) #7, !dbg !10909
  %tobool240 = icmp eq i32 %call239, 0, !dbg !10909
  br i1 %tobool240, label %cleanup714, label %if.end242, !dbg !10911

if.end242:                                        ; preds = %if.end238
  %call243 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %src) #7, !dbg !10912
  call void @llvm.dbg.value(metadata %union.tree_node* %call243, metadata !10749, metadata !DIExpression()), !dbg !10789
  %call244 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %dest) #7, !dbg !10913
  call void @llvm.dbg.value(metadata %union.tree_node* %call244, metadata !10748, metadata !DIExpression()), !dbg !10789
  %25 = getelementptr inbounds %union.tree_node, %union.tree_node* %call243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10914
  %bf.load246 = load i64, i64* %25, align 8, !dbg !10914
  %bf.cast2489 = and i64 %bf.load246, 65535, !dbg !10915
  %cmp249 = icmp eq i64 %bf.cast2489, 66, !dbg !10915
  br i1 %cmp249, label %if.then251, label %if.end265, !dbg !10916

if.then251:                                       ; preds = %if.end242
  %operands253 = getelementptr inbounds %union.tree_node, %union.tree_node* %call243, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10917
  %26 = load %union.tree_node*, %union.tree_node** %operands253, align 8, !dbg !10917
  call void @llvm.dbg.value(metadata %union.tree_node* %26, metadata !10777, metadata !DIExpression()), !dbg !10918
  %call255 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %26) #7, !dbg !10919
  call void @llvm.dbg.value(metadata %union.tree_node* %call255, metadata !10777, metadata !DIExpression()), !dbg !10918
  %27 = load %union.tree_node*, %union.tree_node** %operands253, align 8, !dbg !10920
  %cmp259 = icmp eq %union.tree_node* %call255, %27, !dbg !10922
  br i1 %cmp259, label %if.end265, label %if.then261, !dbg !10923

if.then261:                                       ; preds = %if.then251
  %type262 = getelementptr inbounds %union.tree_node, %union.tree_node* %call255, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10924
  %28 = load %union.tree_node*, %union.tree_node** %type262, align 8, !dbg !10924
  %call263 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %28, %union.tree_node* %call243) #7, !dbg !10924
  call void @llvm.dbg.value(metadata %union.tree_node* %call263, metadata !10749, metadata !DIExpression()), !dbg !10789
  br label %if.end265, !dbg !10925

if.end265:                                        ; preds = %if.then251, %if.then261, %if.end242
  %src.addr.1 = phi %union.tree_node* [ %call243, %if.end242 ], [ %call263, %if.then261 ], [ %call243, %if.then251 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %src.addr.1, metadata !10749, metadata !DIExpression()), !dbg !10789
  %29 = getelementptr inbounds %union.tree_node, %union.tree_node* %call244, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10926
  %bf.load267 = load i64, i64* %29, align 8, !dbg !10926
  %bf.cast26910 = and i64 %bf.load267, 65535, !dbg !10927
  %cmp270 = icmp eq i64 %bf.cast26910, 66, !dbg !10927
  br i1 %cmp270, label %if.then272, label %if.end288, !dbg !10928

if.then272:                                       ; preds = %if.end265
  %operands275 = getelementptr inbounds %union.tree_node, %union.tree_node* %call244, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10929
  %30 = load %union.tree_node*, %union.tree_node** %operands275, align 8, !dbg !10929
  call void @llvm.dbg.value(metadata %union.tree_node* %30, metadata !10780, metadata !DIExpression()), !dbg !10930
  %call277 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %30) #7, !dbg !10931
  call void @llvm.dbg.value(metadata %union.tree_node* %call277, metadata !10780, metadata !DIExpression()), !dbg !10930
  %31 = load %union.tree_node*, %union.tree_node** %operands275, align 8, !dbg !10932
  %cmp281 = icmp eq %union.tree_node* %call277, %31, !dbg !10934
  br i1 %cmp281, label %if.end288, label %if.then283, !dbg !10935

if.then283:                                       ; preds = %if.then272
  %type285 = getelementptr inbounds %union.tree_node, %union.tree_node* %call277, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10936
  %32 = load %union.tree_node*, %union.tree_node** %type285, align 8, !dbg !10936
  %call286 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %32, %union.tree_node* %call244) #7, !dbg !10936
  call void @llvm.dbg.value(metadata %union.tree_node* %call286, metadata !10748, metadata !DIExpression()), !dbg !10789
  br label %if.end288, !dbg !10937

if.end288:                                        ; preds = %if.then272, %if.then283, %if.end265
  %dest.addr.1 = phi %union.tree_node* [ %call244, %if.end265 ], [ %call286, %if.then283 ], [ %call244, %if.then272 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %dest.addr.1, metadata !10748, metadata !DIExpression()), !dbg !10789
  %type290 = getelementptr inbounds %union.tree_node, %union.tree_node* %src.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10938
  %33 = bitcast %union.tree_node** %type290 to %struct.tree_common**, !dbg !10938
  %34 = load %struct.tree_common*, %struct.tree_common** %33, align 8, !dbg !10938
  %type292 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %34, i64 0, i32 2, !dbg !10938
  %35 = load %union.tree_node*, %union.tree_node** %type292, align 8, !dbg !10938
  call void @llvm.dbg.value(metadata %union.tree_node* %35, metadata !10757, metadata !DIExpression()), !dbg !10808
  %tobool293 = icmp eq %union.tree_node* %35, null, !dbg !10939
  br i1 %tobool293, label %if.end311, label %land.lhs.true294, !dbg !10941

land.lhs.true294:                                 ; preds = %if.end288
  %36 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10942
  %bf.load296 = load i64, i64* %36, align 8, !dbg !10942
  %bf.cast29838 = and i64 %bf.load296, 65535, !dbg !10943
  %cmp299 = icmp eq i64 %bf.cast29838, 15, !dbg !10943
  br i1 %cmp299, label %land.lhs.true301, label %if.end311, !dbg !10944

land.lhs.true301:                                 ; preds = %land.lhs.true294
  %37 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10945
  %38 = load %union.tree_node*, %union.tree_node** %37, align 8, !dbg !10945
  %call303 = tail call i32 @tree_int_cst_equal(%union.tree_node* %38, %union.tree_node* %len) #7, !dbg !10946
  %tobool304 = icmp eq i32 %call303, 0, !dbg !10946
  br i1 %tobool304, label %if.then305, label %if.end311, !dbg !10947

if.then305:                                       ; preds = %land.lhs.true301
  %type307 = getelementptr inbounds %union.tree_node, %union.tree_node* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10948
  %39 = load %union.tree_node*, %union.tree_node** %type307, align 8, !dbg !10948
  call void @llvm.dbg.value(metadata %union.tree_node* %39, metadata !10757, metadata !DIExpression()), !dbg !10808
  %call308 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %src.addr.1) #7, !dbg !10950
  call void @llvm.dbg.value(metadata %union.tree_node* %call308, metadata !10749, metadata !DIExpression()), !dbg !10789
  %call309 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %39) #7, !dbg !10951
  %call310 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %call309, %union.tree_node* %call308) #7, !dbg !10951
  call void @llvm.dbg.value(metadata %union.tree_node* %call310, metadata !10749, metadata !DIExpression()), !dbg !10789
  br label %if.end311, !dbg !10952

if.end311:                                        ; preds = %land.lhs.true301, %if.end288, %if.then305, %land.lhs.true294
  %srctype.0 = phi %union.tree_node* [ %35, %land.lhs.true301 ], [ %39, %if.then305 ], [ %35, %land.lhs.true294 ], [ null, %if.end288 ], !dbg !10808
  %src.addr.2 = phi %union.tree_node* [ %src.addr.1, %land.lhs.true301 ], [ %call310, %if.then305 ], [ %src.addr.1, %land.lhs.true294 ], [ %src.addr.1, %if.end288 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %src.addr.2, metadata !10749, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %srctype.0, metadata !10757, metadata !DIExpression()), !dbg !10808
  %type313 = getelementptr inbounds %union.tree_node, %union.tree_node* %dest.addr.1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10953
  %40 = bitcast %union.tree_node** %type313 to %struct.tree_common**, !dbg !10953
  %41 = load %struct.tree_common*, %struct.tree_common** %40, align 8, !dbg !10953
  %type315 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %41, i64 0, i32 2, !dbg !10953
  %42 = load %union.tree_node*, %union.tree_node** %type315, align 8, !dbg !10953
  call void @llvm.dbg.value(metadata %union.tree_node* %42, metadata !10760, metadata !DIExpression()), !dbg !10808
  %tobool316 = icmp eq %union.tree_node* %42, null, !dbg !10954
  br i1 %tobool316, label %if.end335, label %land.lhs.true317, !dbg !10956

land.lhs.true317:                                 ; preds = %if.end311
  %43 = getelementptr inbounds %union.tree_node, %union.tree_node* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10957
  %bf.load319 = load i64, i64* %43, align 8, !dbg !10957
  %bf.cast32137 = and i64 %bf.load319, 65535, !dbg !10958
  %cmp322 = icmp eq i64 %bf.cast32137, 15, !dbg !10958
  br i1 %cmp322, label %land.lhs.true324, label %if.end335, !dbg !10959

land.lhs.true324:                                 ; preds = %land.lhs.true317
  %44 = getelementptr inbounds %union.tree_node, %union.tree_node* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10960
  %45 = load %union.tree_node*, %union.tree_node** %44, align 8, !dbg !10960
  %call327 = tail call i32 @tree_int_cst_equal(%union.tree_node* %45, %union.tree_node* %len) #7, !dbg !10961
  %tobool328 = icmp eq i32 %call327, 0, !dbg !10961
  br i1 %tobool328, label %if.then329, label %if.end335, !dbg !10962

if.then329:                                       ; preds = %land.lhs.true324
  %type331 = getelementptr inbounds %union.tree_node, %union.tree_node* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !10963
  %46 = load %union.tree_node*, %union.tree_node** %type331, align 8, !dbg !10963
  call void @llvm.dbg.value(metadata %union.tree_node* %46, metadata !10760, metadata !DIExpression()), !dbg !10808
  %call332 = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %dest.addr.1) #7, !dbg !10965
  call void @llvm.dbg.value(metadata %union.tree_node* %call332, metadata !10748, metadata !DIExpression()), !dbg !10789
  %call333 = tail call %union.tree_node* @build_pointer_type(%union.tree_node* %46) #7, !dbg !10966
  %call334 = tail call %union.tree_node* @build1_stat(i32 116, %union.tree_node* %call333, %union.tree_node* %call332) #7, !dbg !10966
  call void @llvm.dbg.value(metadata %union.tree_node* %call334, metadata !10748, metadata !DIExpression()), !dbg !10789
  br label %if.end335, !dbg !10967

if.end335:                                        ; preds = %land.lhs.true324, %if.end311, %if.then329, %land.lhs.true317
  %desttype.0 = phi %union.tree_node* [ %42, %land.lhs.true324 ], [ %46, %if.then329 ], [ %42, %land.lhs.true317 ], [ null, %if.end311 ], !dbg !10808
  %dest.addr.2 = phi %union.tree_node* [ %dest.addr.1, %land.lhs.true324 ], [ %call334, %if.then329 ], [ %dest.addr.1, %land.lhs.true317 ], [ %dest.addr.1, %if.end311 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %dest.addr.2, metadata !10748, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %desttype.0, metadata !10760, metadata !DIExpression()), !dbg !10808
  %tobool336 = icmp ne %union.tree_node* %srctype.0, null, !dbg !10968
  %tobool338 = icmp ne %union.tree_node* %desttype.0, null, !dbg !10970
  %or.cond5 = and i1 %tobool336, %tobool338, !dbg !10971
  br i1 %or.cond5, label %lor.lhs.false339, label %cleanup714, !dbg !10971

lor.lhs.false339:                                 ; preds = %if.end335
  %47 = getelementptr inbounds %union.tree_node, %union.tree_node* %srctype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10972
  %48 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !10972
  %tobool342 = icmp eq %union.tree_node* %48, null, !dbg !10972
  %49 = getelementptr inbounds %union.tree_node, %union.tree_node* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10973
  br i1 %tobool342, label %cleanup714, label %lor.lhs.false343, !dbg !10973

lor.lhs.false343:                                 ; preds = %lor.lhs.false339
  %50 = getelementptr inbounds %union.tree_node, %union.tree_node* %desttype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !10974
  %51 = load %union.tree_node*, %union.tree_node** %50, align 8, !dbg !10974
  %tobool346 = icmp eq %union.tree_node* %51, null, !dbg !10974
  %52 = getelementptr inbounds %union.tree_node, %union.tree_node* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10975
  br i1 %tobool346, label %cleanup714, label %lor.lhs.false347, !dbg !10975

lor.lhs.false347:                                 ; preds = %lor.lhs.false343
  %bf.load351 = load i64, i64* %49, align 8, !dbg !10976
  %bf.cast35311 = and i64 %bf.load351, 65535, !dbg !10977
  %cmp354 = icmp eq i64 %bf.cast35311, 23, !dbg !10977
  br i1 %cmp354, label %lor.lhs.false356, label %cleanup714, !dbg !10978

lor.lhs.false356:                                 ; preds = %lor.lhs.false347
  %bf.load360 = load i64, i64* %52, align 8, !dbg !10979
  %bf.cast36212 = and i64 %bf.load360, 65535, !dbg !10980
  %cmp363 = icmp eq i64 %bf.cast36212, 23, !dbg !10980
  br i1 %cmp363, label %lor.lhs.false365, label %cleanup714, !dbg !10981

lor.lhs.false365:                                 ; preds = %lor.lhs.false356
  %53 = getelementptr inbounds %union.tree_node, %union.tree_node* %srctype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10982
  %bf.load367 = load i64, i64* %53, align 8, !dbg !10982
  %bf.cast37013 = and i64 %bf.load367, 524288, !dbg !10982
  %tobool371 = icmp eq i64 %bf.cast37013, 0, !dbg !10982
  br i1 %tobool371, label %lor.lhs.false372, label %cleanup714, !dbg !10983

lor.lhs.false372:                                 ; preds = %lor.lhs.false365
  %54 = getelementptr inbounds %union.tree_node, %union.tree_node* %desttype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !10984
  %bf.load374 = load i64, i64* %54, align 8, !dbg !10984
  %bf.cast37714 = and i64 %bf.load374, 524288, !dbg !10984
  %tobool378 = icmp eq i64 %bf.cast37714, 0, !dbg !10984
  br i1 %tobool378, label %if.end380, label %cleanup714, !dbg !10985

if.end380:                                        ; preds = %lor.lhs.false372
  %55 = load i32, i32* @ix86_isa_flags, align 4, !dbg !10986
  %and381 = and i32 %55, 32, !dbg !10986
  %cmp382 = icmp eq i32 %and381, 0, !dbg !10986
  %cond384 = select i1 %cmp382, i32 128, i32 256, !dbg !10986
  %call385 = tail call i32 @get_pointer_alignment(%union.tree_node* %src.addr.2, i32 %cond384) #8, !dbg !10987
  call void @llvm.dbg.value(metadata i32 %call385, metadata !10761, metadata !DIExpression()), !dbg !10808
  %56 = load i32, i32* @ix86_isa_flags, align 4, !dbg !10988
  %and386 = and i32 %56, 32, !dbg !10988
  %cmp387 = icmp eq i32 %and386, 0, !dbg !10988
  %cond389 = select i1 %cmp387, i32 128, i32 256, !dbg !10988
  %call390 = tail call i32 @get_pointer_alignment(%union.tree_node* %dest.addr.2, i32 %cond389) #8, !dbg !10989
  call void @llvm.dbg.value(metadata i32 %call390, metadata !10762, metadata !DIExpression()), !dbg !10808
  %57 = getelementptr inbounds %union.tree_node, %union.tree_node* %desttype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10990
  %58 = load i32, i32* %57, align 8, !dbg !10990
  %cmp392 = icmp slt i32 %call390, %58, !dbg !10992
  br i1 %cmp392, label %cleanup714, label %lor.lhs.false394, !dbg !10993

lor.lhs.false394:                                 ; preds = %if.end380
  %59 = getelementptr inbounds %union.tree_node, %union.tree_node* %srctype.0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !10994
  %60 = load i32, i32* %59, align 8, !dbg !10994
  %cmp397 = icmp slt i32 %call385, %60, !dbg !10995
  br i1 %cmp397, label %cleanup714, label %if.end400, !dbg !10996

if.end400:                                        ; preds = %lor.lhs.false394
  %tobool401 = icmp eq i8 %ignore, 0, !dbg !10997
  br i1 %tobool401, label %if.then402, label %if.end404, !dbg !10999

if.then402:                                       ; preds = %if.end400
  %call403 = tail call fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %dest.addr.2) #8, !dbg !11000
  call void @llvm.dbg.value(metadata %union.tree_node* %call403, metadata !10748, metadata !DIExpression()), !dbg !10789
  br label %if.end404, !dbg !11001

if.end404:                                        ; preds = %if.end400, %if.then402
  %dest.addr.3 = phi %union.tree_node* [ %dest.addr.2, %if.end400 ], [ %call403, %if.then402 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %dest.addr.3, metadata !10748, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10755, metadata !DIExpression()), !dbg !10789
  %61 = load %union.tree_node*, %union.tree_node** %47, align 8, !dbg !11002
  %call407 = tail call i32 @tree_int_cst_equal(%union.tree_node* %61, %union.tree_node* %len) #7, !dbg !11004
  %tobool408 = icmp eq i32 %call407, 0, !dbg !11004
  br i1 %tobool408, label %if.end430, label %if.then409, !dbg !11005

if.then409:                                       ; preds = %if.end404
  %call410 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %loc, %union.tree_node* %src.addr.2) #7, !dbg !11006
  call void @llvm.dbg.value(metadata %union.tree_node* %call410, metadata !10755, metadata !DIExpression()), !dbg !10789
  %62 = getelementptr inbounds %union.tree_node, %union.tree_node* %call410, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11008
  %bf.load412 = load i64, i64* %62, align 8, !dbg !11008
  %bf.cast41536 = and i64 %bf.load412, 524288, !dbg !11008
  %tobool416 = icmp eq i64 %bf.cast41536, 0, !dbg !11008
  br i1 %tobool416, label %if.else418, label %cleanup714, !dbg !11010

if.else418:                                       ; preds = %if.then409
  %call419 = tail call %union.tree_node* @tree_expr_size(%union.tree_node* %call410) #7, !dbg !11011
  %call420 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call419, %union.tree_node* %len) #7, !dbg !11013
  %tobool421 = icmp eq i32 %call420, 0, !dbg !11013
  br i1 %tobool421, label %if.end430, label %if.else423, !dbg !11014

if.else423:                                       ; preds = %if.else418
  %call424 = tail call fastcc zeroext i8 @var_decl_component_p(%union.tree_node* %call410) #8, !dbg !11015
  %tobool425 = icmp eq i8 %call424, 0, !dbg !11015
  %spec.select = select i1 %tobool425, %union.tree_node* null, %union.tree_node* %call410, !dbg !11017
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select, metadata !10755, metadata !DIExpression()), !dbg !10789
  br label %if.end430

if.end430:                                        ; preds = %if.else418, %if.end404, %if.else423
  %srcvar.2 = phi %union.tree_node* [ null, %if.end404 ], [ %spec.select, %if.else423 ], [ null, %if.else418 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %srcvar.2, metadata !10755, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !10754, metadata !DIExpression()), !dbg !10789
  %63 = load %union.tree_node*, %union.tree_node** %50, align 8, !dbg !11018
  %call433 = tail call i32 @tree_int_cst_equal(%union.tree_node* %63, %union.tree_node* %len) #7, !dbg !11020
  %tobool434 = icmp eq i32 %call433, 0, !dbg !11020
  br i1 %tobool434, label %if.end456, label %if.then435, !dbg !11021

if.then435:                                       ; preds = %if.end430
  %call436 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %loc, %union.tree_node* %dest.addr.3) #7, !dbg !11022
  call void @llvm.dbg.value(metadata %union.tree_node* %call436, metadata !10754, metadata !DIExpression()), !dbg !10789
  %64 = getelementptr inbounds %union.tree_node, %union.tree_node* %call436, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11024
  %bf.load438 = load i64, i64* %64, align 8, !dbg !11024
  %bf.cast44135 = and i64 %bf.load438, 524288, !dbg !11024
  %tobool442 = icmp eq i64 %bf.cast44135, 0, !dbg !11024
  br i1 %tobool442, label %if.else444, label %cleanup714, !dbg !11026

if.else444:                                       ; preds = %if.then435
  %call445 = tail call %union.tree_node* @tree_expr_size(%union.tree_node* %call436) #7, !dbg !11027
  %call446 = tail call i32 @tree_int_cst_equal(%union.tree_node* %call445, %union.tree_node* %len) #7, !dbg !11029
  %tobool447 = icmp eq i32 %call446, 0, !dbg !11029
  br i1 %tobool447, label %if.end456, label %if.else449, !dbg !11030

if.else449:                                       ; preds = %if.else444
  %call450 = tail call fastcc zeroext i8 @var_decl_component_p(%union.tree_node* %call436) #8, !dbg !11031
  %tobool451 = icmp eq i8 %call450, 0, !dbg !11031
  %spec.select6 = select i1 %tobool451, %union.tree_node* null, %union.tree_node* %call436, !dbg !11033
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select6, metadata !10754, metadata !DIExpression()), !dbg !10789
  br label %if.end456

if.end456:                                        ; preds = %if.else444, %if.end430, %if.else449
  %destvar.2 = phi %union.tree_node* [ null, %if.end430 ], [ %spec.select6, %if.else449 ], [ null, %if.else444 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %destvar.2, metadata !10754, metadata !DIExpression()), !dbg !10789
  %cmp457 = icmp eq %union.tree_node* %srcvar.2, null, !dbg !11034
  %cmp460 = icmp eq %union.tree_node* %destvar.2, null, !dbg !11036
  %or.cond7 = and i1 %cmp457, %cmp460, !dbg !11037
  br i1 %or.cond7, label %cleanup714, label %if.end463, !dbg !11037

if.end463:                                        ; preds = %if.end456
  br i1 %cmp457, label %if.then466, label %if.else529, !dbg !11038

if.then466:                                       ; preds = %if.end463
  %type468 = getelementptr inbounds %union.tree_node, %union.tree_node* %destvar.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11039
  %65 = bitcast %union.tree_node** %type468 to i64**, !dbg !11039
  %66 = load i64*, i64** %65, align 8, !dbg !11039
  %bf.load470 = load i64, i64* %66, align 8, !dbg !11039
  %bf.cast47330 = and i64 %bf.load470, 262144, !dbg !11039
  %tobool474 = icmp eq i64 %bf.cast47330, 0, !dbg !11039
  br i1 %tobool474, label %if.end476, label %cleanup528, !dbg !11041

if.end476:                                        ; preds = %if.then466
  %call477 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* nonnull %desttype.0, i32 0) #7, !dbg !11042
  call void @llvm.dbg.value(metadata %union.tree_node* %call477, metadata !10757, metadata !DIExpression()), !dbg !10808
  %67 = getelementptr inbounds %union.tree_node, %union.tree_node* %call477, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11043
  %68 = load i32, i32* %67, align 8, !dbg !11043
  %cmp480 = icmp slt i32 %call385, %68, !dbg !11045
  br i1 %cmp480, label %if.then482, label %if.end524, !dbg !11046

if.then482:                                       ; preds = %if.end476
  %69 = getelementptr inbounds %union.tree_node, %union.tree_node* %call477, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11047
  %bf.load484 = load i64, i64* %69, align 8, !dbg !11047
  %bf.cast48631 = and i64 %bf.load484, 65535, !dbg !11047
  %cmp487 = icmp eq i64 %bf.cast48631, 15, !dbg !11047
  br i1 %cmp487, label %cleanup528, label %lor.lhs.false489, !dbg !11047

lor.lhs.false489:                                 ; preds = %if.then482
  %cmp494 = icmp eq i64 %bf.cast48631, 16, !dbg !11047
  br i1 %cmp494, label %cleanup528, label %lor.lhs.false496, !dbg !11047

lor.lhs.false496:                                 ; preds = %lor.lhs.false489
  %cmp501 = icmp eq i64 %bf.cast48631, 17, !dbg !11047
  br i1 %cmp501, label %cleanup528, label %lor.lhs.false503, !dbg !11047

lor.lhs.false503:                                 ; preds = %lor.lhs.false496
  %cmp508 = icmp eq i64 %bf.cast48631, 18, !dbg !11047
  br i1 %cmp508, label %cleanup528, label %if.end511, !dbg !11050

if.end511:                                        ; preds = %lor.lhs.false503
  %call512 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %call477) #7, !dbg !11051
  call void @llvm.dbg.value(metadata %union.tree_node* %call512, metadata !10757, metadata !DIExpression()), !dbg !10808
  %70 = getelementptr inbounds %union.tree_node, %union.tree_node* %call512, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11052
  store i32 %call385, i32* %70, align 8, !dbg !11053
  %71 = getelementptr inbounds %union.tree_node, %union.tree_node* %call512, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11054
  %bf.load517 = load i64, i64* %71, align 8, !dbg !11055
  %bf.set523 = or i64 %bf.load517, 6597069766656, !dbg !11056
  store i64 %bf.set523, i64* %71, align 8, !dbg !11056
  br label %if.end524, !dbg !11057

if.end524:                                        ; preds = %if.end511, %if.end476
  %srctype.1 = phi %union.tree_node* [ %call512, %if.end511 ], [ %call477, %if.end476 ], !dbg !11058
  call void @llvm.dbg.value(metadata %union.tree_node* %srctype.1, metadata !10757, metadata !DIExpression()), !dbg !10808
  %72 = load i32, i32* @ptr_mode, align 4, !dbg !11059
  %call525 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %srctype.1, i32 %72, i8 zeroext 1) #7, !dbg !11060
  call void @llvm.dbg.value(metadata %union.tree_node* %call525, metadata !10783, metadata !DIExpression()), !dbg !11058
  %call526 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call525, %union.tree_node* %src.addr.2) #7, !dbg !11061
  call void @llvm.dbg.value(metadata %union.tree_node* %call526, metadata !10749, metadata !DIExpression()), !dbg !10789
  %call527 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %loc, %union.tree_node* %call526) #7, !dbg !11062
  call void @llvm.dbg.value(metadata %union.tree_node* %call527, metadata !10755, metadata !DIExpression()), !dbg !10789
  br label %cleanup528, !dbg !11063

cleanup528:                                       ; preds = %if.then466, %if.then482, %lor.lhs.false489, %lor.lhs.false496, %lor.lhs.false503, %if.end524
  %srctype.2 = phi %union.tree_node* [ %srctype.1, %if.end524 ], [ %srctype.0, %if.then466 ], [ %call477, %lor.lhs.false503 ], [ %call477, %lor.lhs.false496 ], [ %call477, %lor.lhs.false489 ], [ %call477, %if.then482 ], !dbg !10808
  %cleanup.dest.slot.2 = phi i32 [ 0, %if.end524 ], [ 1, %if.then466 ], [ 1, %lor.lhs.false503 ], [ 1, %lor.lhs.false496 ], [ 1, %lor.lhs.false489 ], [ 1, %if.then482 ]
  %srcvar.3 = phi %union.tree_node* [ %call527, %if.end524 ], [ null, %if.then466 ], [ null, %lor.lhs.false503 ], [ null, %lor.lhs.false496 ], [ null, %lor.lhs.false489 ], [ null, %if.then482 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %srcvar.3, metadata !10755, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %srctype.2, metadata !10757, metadata !DIExpression()), !dbg !10808
  %cond3 = icmp eq i32 %cleanup.dest.slot.2, 0
  br i1 %cond3, label %if.end599, label %cleanup714

if.else529:                                       ; preds = %if.end463
  br i1 %cmp460, label %if.then532, label %if.end599, !dbg !11064

if.then532:                                       ; preds = %if.else529
  %type534 = getelementptr inbounds %union.tree_node, %union.tree_node* %srcvar.2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11065
  %73 = bitcast %union.tree_node** %type534 to i64**, !dbg !11065
  %74 = load i64*, i64** %73, align 8, !dbg !11065
  %bf.load536 = load i64, i64* %74, align 8, !dbg !11065
  %bf.cast53925 = and i64 %bf.load536, 262144, !dbg !11065
  %tobool540 = icmp eq i64 %bf.cast53925, 0, !dbg !11065
  br i1 %tobool540, label %if.end542, label %cleanup595, !dbg !11067

if.end542:                                        ; preds = %if.then532
  %call543 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* nonnull %srctype.0, i32 0) #7, !dbg !11068
  call void @llvm.dbg.value(metadata %union.tree_node* %call543, metadata !10760, metadata !DIExpression()), !dbg !10808
  %75 = getelementptr inbounds %union.tree_node, %union.tree_node* %call543, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11069
  %76 = load i32, i32* %75, align 8, !dbg !11069
  %cmp546 = icmp slt i32 %call390, %76, !dbg !11071
  br i1 %cmp546, label %if.then548, label %if.end591, !dbg !11072

if.then548:                                       ; preds = %if.end542
  %77 = getelementptr inbounds %union.tree_node, %union.tree_node* %call543, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11073
  %bf.load550 = load i64, i64* %77, align 8, !dbg !11073
  %bf.cast55226 = and i64 %bf.load550, 65535, !dbg !11073
  %cmp553 = icmp eq i64 %bf.cast55226, 15, !dbg !11073
  br i1 %cmp553, label %cleanup595, label %lor.lhs.false555, !dbg !11073

lor.lhs.false555:                                 ; preds = %if.then548
  %cmp560 = icmp eq i64 %bf.cast55226, 16, !dbg !11073
  br i1 %cmp560, label %cleanup595, label %lor.lhs.false562, !dbg !11073

lor.lhs.false562:                                 ; preds = %lor.lhs.false555
  %cmp567 = icmp eq i64 %bf.cast55226, 17, !dbg !11073
  br i1 %cmp567, label %cleanup595, label %lor.lhs.false569, !dbg !11073

lor.lhs.false569:                                 ; preds = %lor.lhs.false562
  %cmp574 = icmp eq i64 %bf.cast55226, 18, !dbg !11073
  br i1 %cmp574, label %cleanup595, label %if.end577, !dbg !11076

if.end577:                                        ; preds = %lor.lhs.false569
  %call578 = tail call %union.tree_node* @build_variant_type_copy(%union.tree_node* %call543) #7, !dbg !11077
  call void @llvm.dbg.value(metadata %union.tree_node* %call578, metadata !10760, metadata !DIExpression()), !dbg !10808
  %78 = getelementptr inbounds %union.tree_node, %union.tree_node* %call578, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, !dbg !11078
  store i32 %call390, i32* %78, align 8, !dbg !11079
  %79 = getelementptr inbounds %union.tree_node, %union.tree_node* %call578, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11080
  %bf.load583 = load i64, i64* %79, align 8, !dbg !11081
  %bf.set590 = or i64 %bf.load583, 6597069766656, !dbg !11082
  store i64 %bf.set590, i64* %79, align 8, !dbg !11082
  br label %if.end591, !dbg !11083

if.end591:                                        ; preds = %if.end577, %if.end542
  %desttype.1 = phi %union.tree_node* [ %call578, %if.end577 ], [ %call543, %if.end542 ], !dbg !11084
  call void @llvm.dbg.value(metadata %union.tree_node* %desttype.1, metadata !10760, metadata !DIExpression()), !dbg !10808
  %80 = load i32, i32* @ptr_mode, align 4, !dbg !11085
  %call592 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %desttype.1, i32 %80, i8 zeroext 1) #7, !dbg !11086
  call void @llvm.dbg.value(metadata %union.tree_node* %call592, metadata !10786, metadata !DIExpression()), !dbg !11084
  %call593 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call592, %union.tree_node* %dest.addr.3) #7, !dbg !11087
  call void @llvm.dbg.value(metadata %union.tree_node* %call593, metadata !10748, metadata !DIExpression()), !dbg !10789
  %call594 = tail call %union.tree_node* @build_fold_indirect_ref_loc(i32 %loc, %union.tree_node* %call593) #7, !dbg !11088
  call void @llvm.dbg.value(metadata %union.tree_node* %call594, metadata !10754, metadata !DIExpression()), !dbg !10789
  br label %cleanup595, !dbg !11089

cleanup595:                                       ; preds = %if.then532, %if.then548, %lor.lhs.false555, %lor.lhs.false562, %lor.lhs.false569, %if.end591
  %desttype.2 = phi %union.tree_node* [ %desttype.1, %if.end591 ], [ %desttype.0, %if.then532 ], [ %call543, %lor.lhs.false569 ], [ %call543, %lor.lhs.false562 ], [ %call543, %lor.lhs.false555 ], [ %call543, %if.then548 ], !dbg !10808
  %cleanup.dest.slot.3 = phi i32 [ 0, %if.end591 ], [ 1, %if.then532 ], [ 1, %lor.lhs.false569 ], [ 1, %lor.lhs.false562 ], [ 1, %lor.lhs.false555 ], [ 1, %if.then548 ]
  %destvar.3 = phi %union.tree_node* [ %call594, %if.end591 ], [ null, %if.then532 ], [ null, %lor.lhs.false569 ], [ null, %lor.lhs.false562 ], [ null, %lor.lhs.false555 ], [ null, %if.then548 ], !dbg !10808
  %dest.addr.4 = phi %union.tree_node* [ %call593, %if.end591 ], [ %dest.addr.3, %if.then532 ], [ %dest.addr.3, %lor.lhs.false569 ], [ %dest.addr.3, %lor.lhs.false562 ], [ %dest.addr.3, %lor.lhs.false555 ], [ %dest.addr.3, %if.then548 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %dest.addr.4, metadata !10748, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %destvar.3, metadata !10754, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %desttype.2, metadata !10760, metadata !DIExpression()), !dbg !10808
  %cond2 = icmp eq i32 %cleanup.dest.slot.3, 0
  br i1 %cond2, label %if.end599, label %cleanup714

if.end599:                                        ; preds = %if.else529, %cleanup595, %cleanup528
  %desttype.4 = phi %union.tree_node* [ %desttype.0, %cleanup528 ], [ %desttype.0, %if.else529 ], [ %desttype.2, %cleanup595 ], !dbg !11090
  %srctype.3 = phi %union.tree_node* [ %srctype.2, %cleanup528 ], [ %srctype.0, %if.else529 ], [ %srctype.0, %cleanup595 ], !dbg !11091
  %srcvar.4 = phi %union.tree_node* [ %srcvar.3, %cleanup528 ], [ %srcvar.2, %if.else529 ], [ %srcvar.2, %cleanup595 ], !dbg !11092
  %destvar.5 = phi %union.tree_node* [ %destvar.2, %cleanup528 ], [ %destvar.2, %if.else529 ], [ %destvar.3, %cleanup595 ], !dbg !11093
  %dest.addr.6 = phi %union.tree_node* [ %dest.addr.3, %cleanup528 ], [ %dest.addr.3, %if.else529 ], [ %dest.addr.4, %cleanup595 ], !dbg !11094
  call void @llvm.dbg.value(metadata %union.tree_node* %dest.addr.6, metadata !10748, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %destvar.5, metadata !10754, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %srcvar.4, metadata !10755, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %srctype.3, metadata !10757, metadata !DIExpression()), !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %desttype.4, metadata !10760, metadata !DIExpression()), !dbg !10808
  %cmp600 = icmp eq %union.tree_node* %srctype.3, %desttype.4, !dbg !11095
  br i1 %cmp600, label %if.end710, label %lor.lhs.false602, !dbg !11097

lor.lhs.false602:                                 ; preds = %if.end599
  %81 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !11098
  %call603 = tail call fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %81) #8, !dbg !11099
  %tobool605 = icmp eq i8 %call603, 0, !dbg !11099
  br i1 %tobool605, label %if.else611, label %land.lhs.true606, !dbg !11100

land.lhs.true606:                                 ; preds = %lor.lhs.false602
  %call607 = tail call zeroext i8 @useless_type_conversion_p(%union.tree_node* %desttype.4, %union.tree_node* %srctype.3) #7, !dbg !11101
  %tobool609 = icmp eq i8 %call607, 0, !dbg !11101
  br i1 %tobool609, label %if.else611, label %if.end710, !dbg !11102

if.else611:                                       ; preds = %land.lhs.true606, %lor.lhs.false602
  %type613 = getelementptr inbounds %union.tree_node, %union.tree_node* %srcvar.4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11103
  %82 = bitcast %union.tree_node** %type613 to i64**, !dbg !11103
  %83 = load i64*, i64** %82, align 8, !dbg !11103
  %bf.load615 = load i64, i64* %83, align 8, !dbg !11103
  %bf.cast61715 = and i64 %bf.load615, 65535, !dbg !11103
  %cmp618 = icmp eq i64 %bf.cast61715, 6, !dbg !11103
  br i1 %cmp618, label %land.lhs.true656, label %lor.lhs.false620, !dbg !11103

lor.lhs.false620:                                 ; preds = %if.else611
  %cmp627 = icmp eq i64 %bf.cast61715, 7, !dbg !11103
  br i1 %cmp627, label %land.lhs.true656, label %lor.lhs.false629, !dbg !11103

lor.lhs.false629:                                 ; preds = %lor.lhs.false620
  %cmp636 = icmp eq i64 %bf.cast61715, 8, !dbg !11103
  br i1 %cmp636, label %land.lhs.true656, label %lor.lhs.false638, !dbg !11105

lor.lhs.false638:                                 ; preds = %lor.lhs.false629
  %cmp645 = icmp eq i64 %bf.cast61715, 10, !dbg !11106
  br i1 %cmp645, label %land.lhs.true656, label %lor.lhs.false647, !dbg !11106

lor.lhs.false647:                                 ; preds = %lor.lhs.false638
  %cmp654 = icmp eq i64 %bf.cast61715, 12, !dbg !11106
  br i1 %cmp654, label %land.lhs.true656, label %lor.lhs.false647.if.else705_crit_edge, !dbg !11107

lor.lhs.false647.if.else705_crit_edge:            ; preds = %lor.lhs.false647
  %type707.phi.trans.insert = getelementptr inbounds %union.tree_node, %union.tree_node* %destvar.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11108
  %.pre = load %union.tree_node*, %union.tree_node** %type707.phi.trans.insert, align 8, !dbg !11109
  br label %if.else705, !dbg !11107

land.lhs.true656:                                 ; preds = %lor.lhs.false647, %lor.lhs.false638, %lor.lhs.false629, %lor.lhs.false620, %if.else611
  %type658 = getelementptr inbounds %union.tree_node, %union.tree_node* %destvar.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11110
  %84 = bitcast %union.tree_node** %type658 to i64**, !dbg !11110
  %85 = load i64*, i64** %84, align 8, !dbg !11110
  %bf.load660 = load i64, i64* %85, align 8, !dbg !11110
  %bf.cast66220 = and i64 %bf.load660, 65535, !dbg !11110
  %cmp663 = icmp eq i64 %bf.cast66220, 6, !dbg !11110
  %86 = bitcast i64* %85 to %union.tree_node*, !dbg !11110
  br i1 %cmp663, label %if.then701, label %lor.lhs.false665, !dbg !11110

lor.lhs.false665:                                 ; preds = %land.lhs.true656
  %cmp672 = icmp eq i64 %bf.cast66220, 7, !dbg !11110
  br i1 %cmp672, label %if.then701, label %lor.lhs.false674, !dbg !11110

lor.lhs.false674:                                 ; preds = %lor.lhs.false665
  %cmp681 = icmp eq i64 %bf.cast66220, 8, !dbg !11110
  br i1 %cmp681, label %if.then701, label %lor.lhs.false683, !dbg !11111

lor.lhs.false683:                                 ; preds = %lor.lhs.false674
  %cmp690 = icmp eq i64 %bf.cast66220, 10, !dbg !11112
  br i1 %cmp690, label %if.then701, label %lor.lhs.false692, !dbg !11112

lor.lhs.false692:                                 ; preds = %lor.lhs.false683
  %cmp699 = icmp eq i64 %bf.cast66220, 12, !dbg !11112
  br i1 %cmp699, label %if.then701, label %if.else705, !dbg !11113

if.then701:                                       ; preds = %lor.lhs.false692, %lor.lhs.false683, %lor.lhs.false674, %lor.lhs.false665, %land.lhs.true656
  %call704 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %86, %union.tree_node* %srcvar.4) #7, !dbg !11114
  call void @llvm.dbg.value(metadata %union.tree_node* %call704, metadata !10756, metadata !DIExpression()), !dbg !10789
  br label %if.end710, !dbg !11115

if.else705:                                       ; preds = %lor.lhs.false647.if.else705_crit_edge, %lor.lhs.false692
  %87 = phi %union.tree_node* [ %.pre, %lor.lhs.false647.if.else705_crit_edge ], [ %86, %lor.lhs.false692 ], !dbg !11109
  %call708 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 118, %union.tree_node* %87, %union.tree_node* %srcvar.4) #7, !dbg !11109
  call void @llvm.dbg.value(metadata %union.tree_node* %call708, metadata !10756, metadata !DIExpression()), !dbg !10789
  br label %if.end710

if.end710:                                        ; preds = %land.lhs.true606, %if.then701, %if.else705, %if.end599
  %expr.1 = phi %union.tree_node* [ %srcvar.4, %land.lhs.true606 ], [ %srcvar.4, %if.end599 ], [ %call704, %if.then701 ], [ %call708, %if.else705 ], !dbg !11116
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.1, metadata !10756, metadata !DIExpression()), !dbg !10789
  %type712 = getelementptr inbounds %union.tree_node, %union.tree_node* %destvar.5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11117
  %88 = load %union.tree_node*, %union.tree_node** %type712, align 8, !dbg !11117
  %call713 = tail call %union.tree_node* @build2_stat(i32 53, %union.tree_node* %88, %union.tree_node* %destvar.5, %union.tree_node* %expr.1) #7, !dbg !11117
  call void @llvm.dbg.value(metadata %union.tree_node* %call713, metadata !10756, metadata !DIExpression()), !dbg !10789
  br label %cleanup714, !dbg !11118

cleanup714:                                       ; preds = %if.then38, %land.lhs.true51, %if.end43, %if.then409, %if.then435, %lor.lhs.false372, %lor.lhs.false365, %lor.lhs.false356, %lor.lhs.false347, %lor.lhs.false343, %lor.lhs.false339, %if.end238, %if.end456, %if.end380, %lor.lhs.false394, %if.end335, %land.lhs.true47, %if.end41, %if.then14, %cleanup528, %cleanup595, %if.end710, %cleanup230
  %cleanup.dest.slot.4 = phi i32 [ 1, %cleanup230 ], [ %cleanup.dest.slot.2, %cleanup528 ], [ 0, %if.end710 ], [ %cleanup.dest.slot.3, %cleanup595 ], [ 1, %if.then14 ], [ 1, %if.then38 ], [ 1, %if.end41 ], [ 1, %land.lhs.true47 ], [ 1, %land.lhs.true51 ], [ 1, %if.end43 ], [ 1, %if.end238 ], [ 1, %lor.lhs.false372 ], [ 1, %lor.lhs.false365 ], [ 1, %lor.lhs.false356 ], [ 1, %lor.lhs.false347 ], [ 1, %lor.lhs.false343 ], [ 1, %lor.lhs.false339 ], [ 1, %if.end335 ], [ 1, %lor.lhs.false394 ], [ 1, %if.end380 ], [ 1, %if.then409 ], [ 1, %if.then435 ], [ 1, %if.end456 ]
  %expr.2 = phi %union.tree_node* [ undef, %cleanup230 ], [ undef, %cleanup528 ], [ %call713, %if.end710 ], [ undef, %cleanup595 ], [ undef, %if.then14 ], [ undef, %if.then38 ], [ undef, %if.end41 ], [ undef, %land.lhs.true47 ], [ undef, %land.lhs.true51 ], [ undef, %if.end43 ], [ undef, %if.end238 ], [ undef, %lor.lhs.false372 ], [ undef, %lor.lhs.false365 ], [ undef, %lor.lhs.false356 ], [ undef, %lor.lhs.false347 ], [ undef, %lor.lhs.false343 ], [ undef, %lor.lhs.false339 ], [ undef, %if.end335 ], [ undef, %lor.lhs.false394 ], [ undef, %if.end380 ], [ undef, %if.then409 ], [ undef, %if.then435 ], [ undef, %if.end456 ]
  %dest.addr.7 = phi %union.tree_node* [ %dest, %cleanup230 ], [ %dest.addr.3, %cleanup528 ], [ %dest.addr.6, %if.end710 ], [ %dest.addr.4, %cleanup595 ], [ %dest, %if.then14 ], [ %dest, %if.then38 ], [ %dest, %if.end41 ], [ %dest, %land.lhs.true47 ], [ %dest, %land.lhs.true51 ], [ %dest, %if.end43 ], [ %dest, %if.end238 ], [ %dest.addr.2, %lor.lhs.false372 ], [ %dest.addr.2, %lor.lhs.false365 ], [ %dest.addr.2, %lor.lhs.false356 ], [ %dest.addr.2, %lor.lhs.false347 ], [ %dest.addr.2, %lor.lhs.false343 ], [ %dest.addr.2, %lor.lhs.false339 ], [ %dest.addr.2, %if.end335 ], [ %dest.addr.2, %lor.lhs.false394 ], [ %dest.addr.2, %if.end380 ], [ %dest.addr.3, %if.then409 ], [ %dest.addr.3, %if.then435 ], [ %dest.addr.3, %if.end456 ]
  %retval.6 = phi %union.tree_node* [ %retval.1, %cleanup230 ], [ null, %cleanup528 ], [ null, %if.end710 ], [ null, %cleanup595 ], [ null, %if.then14 ], [ null, %if.then38 ], [ %call42, %if.end41 ], [ null, %land.lhs.true47 ], [ null, %land.lhs.true51 ], [ null, %if.end43 ], [ null, %if.end238 ], [ null, %lor.lhs.false372 ], [ null, %lor.lhs.false365 ], [ null, %lor.lhs.false356 ], [ null, %lor.lhs.false347 ], [ null, %lor.lhs.false343 ], [ null, %lor.lhs.false339 ], [ null, %if.end335 ], [ null, %lor.lhs.false394 ], [ null, %if.end380 ], [ null, %if.then409 ], [ null, %if.then435 ], [ null, %if.end456 ], !dbg !10808
  call void @llvm.dbg.value(metadata %union.tree_node* %dest.addr.7, metadata !10748, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.2, metadata !10756, metadata !DIExpression()), !dbg !10789
  %cond1 = icmp eq i32 %cleanup.dest.slot.4, 0
  br i1 %cond1, label %if.end720, label %cleanup753

if.end720:                                        ; preds = %if.end10, %cleanup714
  %expr.3 = phi %union.tree_node* [ %len, %if.end10 ], [ %expr.2, %cleanup714 ]
  %dest.addr.8 = phi %union.tree_node* [ %dest, %if.end10 ], [ %dest.addr.7, %cleanup714 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %dest.addr.8, metadata !10748, metadata !DIExpression()), !dbg !10789
  call void @llvm.dbg.value(metadata %union.tree_node* %expr.3, metadata !10756, metadata !DIExpression()), !dbg !10789
  %tobool721 = icmp eq i8 %ignore, 0, !dbg !11119
  br i1 %tobool721, label %if.end723, label %cleanup753, !dbg !11121

if.end723:                                        ; preds = %if.end720
  switch i32 %endp, label %if.end731 [
    i32 0, label %if.then729
    i32 3, label %if.then729
  ], !dbg !11122

if.then729:                                       ; preds = %if.end723, %if.end723
  %call730 = call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %dest.addr.8, %union.tree_node* %expr.3) #7, !dbg !11124
  br label %cleanup753, !dbg !11125

if.end731:                                        ; preds = %if.end723
  %cmp732 = icmp eq %union.tree_node* %expr.3, %len, !dbg !11126
  %spec.select8 = select i1 %cmp732, %union.tree_node* null, %union.tree_node* %expr.3, !dbg !11128
  call void @llvm.dbg.value(metadata %union.tree_node* %spec.select8, metadata !10756, metadata !DIExpression()), !dbg !10789
  %cmp736 = icmp eq i32 %endp, 2, !dbg !11129
  br i1 %cmp736, label %if.then738, label %if.end743, !dbg !11131

if.then738:                                       ; preds = %if.end731
  %type740 = getelementptr inbounds %union.tree_node, %union.tree_node* %len, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11132
  %89 = load %union.tree_node*, %union.tree_node** %type740, align 8, !dbg !11132
  %call741 = call %union.tree_node* @size_int_kind(i64 1, i32 1) #7, !dbg !11132
  %call742 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 64, %union.tree_node* %89, %union.tree_node* %len, %union.tree_node* %call741) #7, !dbg !11132
  call void @llvm.dbg.value(metadata %union.tree_node* %call742, metadata !10750, metadata !DIExpression()), !dbg !10789
  br label %if.end743, !dbg !11133

if.end743:                                        ; preds = %if.then738, %if.end731
  %len.addr.0 = phi %union.tree_node* [ %call742, %if.then738 ], [ %len, %if.end731 ]
  call void @llvm.dbg.value(metadata %union.tree_node* %len.addr.0, metadata !10750, metadata !DIExpression()), !dbg !10789
  %90 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([4 x %union.tree_node*], [4 x %union.tree_node*]* @sizetype_tab, i64 0, i64 0), align 16, !dbg !11134
  %call744 = call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %90, %union.tree_node* %len.addr.0) #7, !dbg !11135
  call void @llvm.dbg.value(metadata %union.tree_node* %call744, metadata !10750, metadata !DIExpression()), !dbg !10789
  %type746 = getelementptr inbounds %union.tree_node, %union.tree_node* %dest.addr.8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11136
  %91 = load %union.tree_node*, %union.tree_node** %type746, align 8, !dbg !11136
  %call747 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %91, %union.tree_node* %dest.addr.8, %union.tree_node* %call744) #7, !dbg !11136
  call void @llvm.dbg.value(metadata %union.tree_node* %call747, metadata !10748, metadata !DIExpression()), !dbg !10789
  %call748 = call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call747) #7, !dbg !11137
  call void @llvm.dbg.value(metadata %union.tree_node* %call748, metadata !10748, metadata !DIExpression()), !dbg !10789
  %tobool749 = icmp eq %union.tree_node* %spec.select8, null, !dbg !11138
  br i1 %tobool749, label %cleanup753, label %if.then750, !dbg !11140

if.then750:                                       ; preds = %if.end743
  %call751 = call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call748, %union.tree_node* nonnull %spec.select8) #7, !dbg !11141
  call void @llvm.dbg.value(metadata %union.tree_node* %call751, metadata !10748, metadata !DIExpression()), !dbg !10789
  br label %cleanup753, !dbg !11142

cleanup753:                                       ; preds = %if.end743, %if.end720, %lor.lhs.false3, %lor.lhs.false, %entry, %if.then750, %cleanup714, %if.then729, %if.then8
  %retval.7 = phi %union.tree_node* [ %call9, %if.then8 ], [ %call730, %if.then729 ], [ %retval.6, %cleanup714 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %expr.3, %if.end720 ], [ %call751, %if.then750 ], [ %call748, %if.end743 ], !dbg !10789
  ret %union.tree_node* %retval.7, !dbg !11143
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strncat(i32 %loc, %union.tree_node* %dst, %union.tree_node* %src, %union.tree_node* %len) unnamed_addr #5 !dbg !11144 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11146, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata %union.tree_node* %dst, metadata !11147, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !11148, metadata !DIExpression()), !dbg !11156
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !11149, metadata !DIExpression()), !dbg !11156
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dst, i32 10) #8, !dbg !11157
  %tobool = icmp eq i8 %call, 0, !dbg !11157
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !11158

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !11159
  %tobool2 = icmp eq i8 %call1, 0, !dbg !11159
  br i1 %tobool2, label %return, label %lor.lhs.false3, !dbg !11160

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %len, i32 8) #8, !dbg !11161
  %tobool5 = icmp eq i8 %call4, 0, !dbg !11161
  br i1 %tobool5, label %return, label %if.else, !dbg !11162

if.else:                                          ; preds = %lor.lhs.false3
  %call6 = tail call fastcc i8* @c_getstr(%union.tree_node* %src) #8, !dbg !11163
  call void @llvm.dbg.value(metadata i8* %call6, metadata !11150, metadata !DIExpression()), !dbg !11164
  %call7 = tail call i32 @integer_zerop(%union.tree_node* %len) #7, !dbg !11165
  %tobool8 = icmp eq i32 %call7, 0, !dbg !11165
  br i1 %tobool8, label %lor.lhs.false9, label %if.then12, !dbg !11167

lor.lhs.false9:                                   ; preds = %if.else
  %tobool10 = icmp eq i8* %call6, null, !dbg !11168
  br i1 %tobool10, label %if.end, label %land.lhs.true, !dbg !11169

land.lhs.true:                                    ; preds = %lor.lhs.false9
  %0 = load i8, i8* %call6, align 1, !dbg !11170
  %cmp = icmp eq i8 %0, 0, !dbg !11171
  br i1 %cmp, label %if.then12, label %if.end, !dbg !11172

if.then12:                                        ; preds = %if.else, %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %dst, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11173
  %1 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !11173
  %call13 = tail call %union.tree_node* @omit_two_operands_loc(i32 %loc, %union.tree_node* %1, %union.tree_node* %dst, %union.tree_node* %src, %union.tree_node* %len) #7, !dbg !11174
  br label %return, !dbg !11175

if.end:                                           ; preds = %lor.lhs.false9, %land.lhs.true
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %len, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11176
  %bf.load = load i64, i64* %2, align 8, !dbg !11176
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11177
  %cmp14 = icmp eq i64 %bf.cast1, 23, !dbg !11177
  %tobool17 = icmp ne i8* %call6, null, !dbg !11178
  %or.cond = and i1 %cmp14, %tobool17, !dbg !11179
  br i1 %or.cond, label %land.lhs.true18, label %return, !dbg !11179

land.lhs.true18:                                  ; preds = %if.end
  %call19 = tail call i64 @strlen(i8* nonnull %call6) #7, !dbg !11180
  %call20 = tail call i32 @compare_tree_int(%union.tree_node* %len, i64 %call19) #7, !dbg !11181
  %cmp21 = icmp sgt i32 %call20, -1, !dbg !11182
  br i1 %cmp21, label %if.then23, label %return, !dbg !11183

if.then23:                                        ; preds = %land.lhs.true18
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @implicit_built_in_decls, i64 0, i64 338), align 16, !dbg !11184
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !11153, metadata !DIExpression()), !dbg !11185
  %tobool24 = icmp eq %union.tree_node* %3, null, !dbg !11186
  br i1 %tobool24, label %return, label %if.end26, !dbg !11188

if.end26:                                         ; preds = %if.then23
  %call27 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %3, i32 2, %union.tree_node* %dst, %union.tree_node* %src) #8, !dbg !11189
  br label %return, !dbg !11190

return:                                           ; preds = %if.then23, %lor.lhs.false3, %lor.lhs.false, %entry, %if.then12, %if.end26, %land.lhs.true18, %if.end
  %retval.2 = phi %union.tree_node* [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %call13, %if.then12 ], [ %call27, %if.end26 ], [ null, %if.then23 ], [ null, %land.lhs.true18 ], [ null, %if.end ], !dbg !11191
  ret %union.tree_node* %retval.2, !dbg !11192
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strncmp(i32 %loc, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %len) unnamed_addr #5 !dbg !11193 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11195, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !11196, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !11197, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !11198, metadata !DIExpression()), !dbg !11219
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 10) #8, !dbg !11220
  %tobool = icmp eq i8 %call, 0, !dbg !11220
  br i1 %tobool, label %cleanup103, label %lor.lhs.false, !dbg !11222

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg2, i32 10) #8, !dbg !11223
  %tobool2 = icmp eq i8 %call1, 0, !dbg !11223
  br i1 %tobool2, label %cleanup103, label %lor.lhs.false3, !dbg !11224

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %len, i32 8) #8, !dbg !11225
  %tobool5 = icmp eq i8 %call4, 0, !dbg !11225
  br i1 %tobool5, label %cleanup103, label %if.end, !dbg !11226

if.end:                                           ; preds = %lor.lhs.false3
  %call6 = tail call i32 @integer_zerop(%union.tree_node* %len) #7, !dbg !11227
  %tobool7 = icmp eq i32 %call6, 0, !dbg !11227
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !11229

if.then8:                                         ; preds = %if.end
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11230
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !11231
  %call9 = tail call %union.tree_node* @omit_two_operands_loc(i32 %loc, %union.tree_node* %0, %union.tree_node* %1, %union.tree_node* %arg1, %union.tree_node* %arg2) #7, !dbg !11232
  br label %cleanup103, !dbg !11233

if.end10:                                         ; preds = %if.end
  %call11 = tail call i32 @operand_equal_p(%union.tree_node* %arg1, %union.tree_node* %arg2, i32 0) #7, !dbg !11234
  %tobool12 = icmp eq i32 %call11, 0, !dbg !11234
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !11236

if.then13:                                        ; preds = %if.end10
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11237
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !11238
  %call14 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %3, %union.tree_node* %len) #7, !dbg !11239
  br label %cleanup103, !dbg !11240

if.end15:                                         ; preds = %if.end10
  %call16 = tail call fastcc i8* @c_getstr(%union.tree_node* %arg1) #8, !dbg !11241
  call void @llvm.dbg.value(metadata i8* %call16, metadata !11199, metadata !DIExpression()), !dbg !11219
  %call17 = tail call fastcc i8* @c_getstr(%union.tree_node* %arg2) #8, !dbg !11242
  call void @llvm.dbg.value(metadata i8* %call17, metadata !11200, metadata !DIExpression()), !dbg !11219
  %call18 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !11243
  %tobool19 = icmp ne i32 %call18, 0, !dbg !11243
  %tobool20 = icmp ne i8* %call16, null, !dbg !11244
  %or.cond = and i1 %tobool19, %tobool20, !dbg !11245
  %tobool22 = icmp ne i8* %call17, null, !dbg !11246
  %or.cond1 = and i1 %or.cond, %tobool22, !dbg !11245
  br i1 %or.cond1, label %if.then23, label %if.end30, !dbg !11245

if.then23:                                        ; preds = %if.end15
  %call24 = tail call i64 @tree_low_cst(%union.tree_node* %len, i32 1) #7, !dbg !11247
  %call25 = tail call i32 @strncmp(i8* nonnull %call16, i8* nonnull %call17, i64 %call24) #7, !dbg !11248
  call void @llvm.dbg.value(metadata i32 %call25, metadata !11201, metadata !DIExpression()), !dbg !11249
  %cmp = icmp sgt i32 %call25, 0, !dbg !11250
  br i1 %cmp, label %if.then26, label %if.else, !dbg !11252

if.then26:                                        ; preds = %if.then23
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !11253
  br label %cleanup103, !dbg !11254

if.else:                                          ; preds = %if.then23
  %cmp27 = icmp slt i32 %call25, 0, !dbg !11255
  br i1 %cmp27, label %if.then28, label %if.else29, !dbg !11257

if.then28:                                        ; preds = %if.else
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !11258
  br label %cleanup103, !dbg !11259

if.else29:                                        ; preds = %if.else
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !11260
  br label %cleanup103, !dbg !11261

if.end30:                                         ; preds = %if.end15
  %tobool31 = icmp eq i8* %call17, null, !dbg !11262
  br i1 %tobool31, label %if.end50, label %land.lhs.true32, !dbg !11263

land.lhs.true32:                                  ; preds = %if.end30
  %7 = load i8, i8* %call17, align 1, !dbg !11264
  %cmp33 = icmp eq i8 %7, 0, !dbg !11265
  br i1 %cmp33, label %land.lhs.true35, label %if.end50, !dbg !11266

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %8 = getelementptr inbounds %union.tree_node, %union.tree_node* %len, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11267
  %bf.load = load i64, i64* %8, align 8, !dbg !11267
  %bf.cast3 = and i64 %bf.load, 65535, !dbg !11268
  %cmp36 = icmp eq i64 %bf.cast3, 23, !dbg !11268
  br i1 %cmp36, label %land.lhs.true38, label %if.end50, !dbg !11269

land.lhs.true38:                                  ; preds = %land.lhs.true35
  %call39 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %len) #7, !dbg !11270
  %cmp40 = icmp eq i32 %call39, 1, !dbg !11271
  br i1 %cmp40, label %if.then42, label %if.end50, !dbg !11272

if.then42:                                        ; preds = %land.lhs.true38
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !11273
  %call43 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %9, i32 1) #7, !dbg !11273
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !11204, metadata !DIExpression()), !dbg !11274
  %10 = load i32, i32* @ptr_mode, align 4, !dbg !11275
  %call44 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %call43, i32 %10, i8 zeroext 1) #7, !dbg !11276
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !11207, metadata !DIExpression()), !dbg !11274
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11277
  %call45 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call44, %union.tree_node* %arg1) #7, !dbg !11278
  %call46 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %call43, %union.tree_node* %call45) #7, !dbg !11278
  %call47 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %11, %union.tree_node* %call46) #7, !dbg !11279
  br label %cleanup103

if.end50:                                         ; preds = %if.end30, %land.lhs.true38, %land.lhs.true35, %land.lhs.true32
  %tobool51 = icmp eq i8* %call16, null, !dbg !11280
  br i1 %tobool51, label %if.end79, label %land.lhs.true52, !dbg !11281

land.lhs.true52:                                  ; preds = %if.end50
  %12 = load i8, i8* %call16, align 1, !dbg !11282
  %cmp54 = icmp eq i8 %12, 0, !dbg !11283
  br i1 %cmp54, label %land.lhs.true56, label %if.end79, !dbg !11284

land.lhs.true56:                                  ; preds = %land.lhs.true52
  %13 = getelementptr inbounds %union.tree_node, %union.tree_node* %len, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11285
  %bf.load58 = load i64, i64* %13, align 8, !dbg !11285
  %bf.cast602 = and i64 %bf.load58, 65535, !dbg !11286
  %cmp61 = icmp eq i64 %bf.cast602, 23, !dbg !11286
  br i1 %cmp61, label %land.lhs.true63, label %if.end79, !dbg !11287

land.lhs.true63:                                  ; preds = %land.lhs.true56
  %call64 = tail call i32 @tree_int_cst_sgn(%union.tree_node* %len) #7, !dbg !11288
  %cmp65 = icmp eq i32 %call64, 1, !dbg !11289
  br i1 %cmp65, label %if.then67, label %if.end79, !dbg !11290

if.then67:                                        ; preds = %land.lhs.true63
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !11291
  %call69 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %14, i32 1) #7, !dbg !11291
  call void @llvm.dbg.value(metadata %union.tree_node* %call69, metadata !11208, metadata !DIExpression()), !dbg !11292
  %15 = load i32, i32* @ptr_mode, align 4, !dbg !11293
  %call71 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %call69, i32 %15, i8 zeroext 1) #7, !dbg !11294
  call void @llvm.dbg.value(metadata %union.tree_node* %call71, metadata !11211, metadata !DIExpression()), !dbg !11292
  %16 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11295
  %call72 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call71, %union.tree_node* %arg2) #7, !dbg !11296
  %call73 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %call69, %union.tree_node* %call72) #7, !dbg !11296
  %call74 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %16, %union.tree_node* %call73) #7, !dbg !11297
  call void @llvm.dbg.value(metadata %union.tree_node* %call74, metadata !11212, metadata !DIExpression()), !dbg !11292
  %17 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11298
  %call75 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 79, %union.tree_node* %17, %union.tree_node* %call74) #7, !dbg !11298
  br label %cleanup103

if.end79:                                         ; preds = %if.end50, %land.lhs.true63, %land.lhs.true56, %land.lhs.true52
  %call80 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !11299
  %tobool81 = icmp eq i32 %call80, 0, !dbg !11299
  br i1 %tobool81, label %cleanup103, label %land.lhs.true82, !dbg !11300

land.lhs.true82:                                  ; preds = %if.end79
  %call83 = tail call i64 @tree_low_cst(%union.tree_node* %len, i32 1) #7, !dbg !11301
  %cmp84 = icmp eq i64 %call83, 1, !dbg !11302
  br i1 %cmp84, label %if.then86, label %cleanup103, !dbg !11303

if.then86:                                        ; preds = %land.lhs.true82
  %18 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !11304
  %call88 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %18, i32 1) #7, !dbg !11304
  call void @llvm.dbg.value(metadata %union.tree_node* %call88, metadata !11213, metadata !DIExpression()), !dbg !11305
  %19 = load i32, i32* @ptr_mode, align 4, !dbg !11306
  %call90 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %call88, i32 %19, i8 zeroext 1) #7, !dbg !11307
  call void @llvm.dbg.value(metadata %union.tree_node* %call90, metadata !11216, metadata !DIExpression()), !dbg !11305
  %20 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11308
  %call91 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call90, %union.tree_node* %arg1) #7, !dbg !11309
  %call92 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %call88, %union.tree_node* %call91) #7, !dbg !11309
  %call93 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %20, %union.tree_node* %call92) #7, !dbg !11310
  call void @llvm.dbg.value(metadata %union.tree_node* %call93, metadata !11217, metadata !DIExpression()), !dbg !11305
  %21 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11311
  %call94 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call90, %union.tree_node* %arg2) #7, !dbg !11312
  %call95 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %call88, %union.tree_node* %call94) #7, !dbg !11312
  %call96 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %21, %union.tree_node* %call95) #7, !dbg !11313
  call void @llvm.dbg.value(metadata %union.tree_node* %call96, metadata !11218, metadata !DIExpression()), !dbg !11305
  %22 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11314
  %call97 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 64, %union.tree_node* %22, %union.tree_node* %call93, %union.tree_node* %call96) #7, !dbg !11314
  br label %cleanup103

cleanup103:                                       ; preds = %if.end79, %lor.lhs.false3, %lor.lhs.false, %entry, %land.lhs.true82, %if.then26, %if.then28, %if.else29, %if.then86, %if.then67, %if.then42, %if.then13, %if.then8
  %retval.1 = phi %union.tree_node* [ %call9, %if.then8 ], [ %call14, %if.then13 ], [ %call47, %if.then42 ], [ %call75, %if.then67 ], [ %call97, %if.then86 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %4, %if.then26 ], [ %5, %if.then28 ], [ %6, %if.else29 ], [ null, %land.lhs.true82 ], [ null, %if.end79 ], !dbg !11219
  ret %union.tree_node* %retval.1, !dbg !11315
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_memchr(i32 %loc, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %len, %union.tree_node* %type) unnamed_addr #5 !dbg !11316 {
entry:
  %c = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11318, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !11319, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !11320, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !11321, metadata !DIExpression()), !dbg !11331
  call void @llvm.dbg.value(metadata %union.tree_node* %type, metadata !11322, metadata !DIExpression()), !dbg !11331
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 10) #8, !dbg !11332
  %tobool = icmp eq i8 %call, 0, !dbg !11332
  br i1 %tobool, label %return, label %lor.lhs.false, !dbg !11333

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg2, i32 8) #8, !dbg !11334
  %tobool2 = icmp eq i8 %call1, 0, !dbg !11334
  br i1 %tobool2, label %return, label %lor.lhs.false3, !dbg !11335

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %len, i32 8) #8, !dbg !11336
  %tobool5 = icmp eq i8 %call4, 0, !dbg !11336
  br i1 %tobool5, label %return, label %if.else, !dbg !11337

if.else:                                          ; preds = %lor.lhs.false3
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11338
  %bf.load = load i64, i64* %0, align 8, !dbg !11338
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11340
  %cmp = icmp eq i64 %bf.cast1, 23, !dbg !11340
  br i1 %cmp, label %lor.lhs.false6, label %return, !dbg !11341

lor.lhs.false6:                                   ; preds = %if.else
  %call7 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !11342
  %tobool8 = icmp eq i32 %call7, 0, !dbg !11342
  br i1 %tobool8, label %return, label %if.end, !dbg !11343

if.end:                                           ; preds = %lor.lhs.false6
  %call10 = tail call fastcc i8* @c_getstr(%union.tree_node* %arg1) #8, !dbg !11344
  call void @llvm.dbg.value(metadata i8* %call10, metadata !11323, metadata !DIExpression()), !dbg !11345
  %tobool11 = icmp eq i8* %call10, null, !dbg !11346
  br i1 %tobool11, label %return, label %land.lhs.true, !dbg !11347

land.lhs.true:                                    ; preds = %if.end
  %call12 = tail call i64 @strlen(i8* nonnull %call10) #7, !dbg !11348
  %add = add i64 %call12, 1, !dbg !11349
  %call13 = tail call i32 @compare_tree_int(%union.tree_node* %len, i64 %add) #7, !dbg !11350
  %cmp14 = icmp slt i32 %call13, 1, !dbg !11351
  br i1 %cmp14, label %if.then15, label %return, !dbg !11352

if.then15:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata i8* %c, metadata !11326, metadata !DIExpression(DW_OP_deref)), !dbg !11353
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %c) #6, !dbg !11354
  call void @llvm.dbg.value(metadata i8* %c, metadata !11326, metadata !DIExpression(DW_OP_deref)), !dbg !11353
  %call16 = call fastcc i32 @target_char_cast(%union.tree_node* %arg2, i8* nonnull %c) #8, !dbg !11355
  %tobool17 = icmp eq i32 %call16, 0, !dbg !11355
  br i1 %tobool17, label %if.end19, label %cleanup, !dbg !11357

if.end19:                                         ; preds = %if.then15
  %1 = load i8, i8* %c, align 1, !dbg !11358
  call void @llvm.dbg.value(metadata i8 %1, metadata !11326, metadata !DIExpression()), !dbg !11353
  %conv = sext i8 %1 to i32, !dbg !11358
  %call20 = call i64 @tree_low_cst(%union.tree_node* %len, i32 1) #7, !dbg !11359
  %call21 = call i8* @memchr(i8* nonnull %call10, i32 %conv, i64 %call20) #7, !dbg !11360
  call void @llvm.dbg.value(metadata i8* %call21, metadata !11329, metadata !DIExpression()), !dbg !11353
  %cmp22 = icmp eq i8* %call21, null, !dbg !11361
  %type25 = getelementptr inbounds %union.tree_node, %union.tree_node* %arg1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11353
  %2 = load %union.tree_node*, %union.tree_node** %type25, align 8, !dbg !11353
  br i1 %cmp22, label %if.then24, label %if.end27, !dbg !11363

if.then24:                                        ; preds = %if.end19
  %call26 = call %union.tree_node* @build_int_cst(%union.tree_node* %2, i64 0) #7, !dbg !11364
  br label %cleanup, !dbg !11365

if.end27:                                         ; preds = %if.end19
  %sub.ptr.lhs.cast = ptrtoint i8* %call21 to i64, !dbg !11366
  %sub.ptr.rhs.cast = ptrtoint i8* %call10 to i64, !dbg !11366
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !11366
  %call30 = call %union.tree_node* @size_int_kind(i64 %sub.ptr.sub, i32 0) #7, !dbg !11366
  %call31 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 66, %union.tree_node* %2, %union.tree_node* %arg1, %union.tree_node* %call30) #7, !dbg !11366
  call void @llvm.dbg.value(metadata %union.tree_node* %call31, metadata !11330, metadata !DIExpression()), !dbg !11353
  %call32 = call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %type, %union.tree_node* %call31) #7, !dbg !11367
  br label %cleanup, !dbg !11368

cleanup:                                          ; preds = %if.then15, %if.end27, %if.then24
  %retval.0 = phi %union.tree_node* [ %call26, %if.then24 ], [ %call32, %if.end27 ], [ null, %if.then15 ], !dbg !11353
  call void @llvm.dbg.value(metadata i8* %c, metadata !11326, metadata !DIExpression(DW_OP_deref)), !dbg !11353
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %c) #6, !dbg !11369
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false6, %if.else, %lor.lhs.false3, %lor.lhs.false, %entry, %cleanup, %land.lhs.true
  %retval.2 = phi %union.tree_node* [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %retval.0, %cleanup ], [ null, %lor.lhs.false6 ], [ null, %if.else ], [ null, %land.lhs.true ], [ null, %if.end ], !dbg !11370
  ret %union.tree_node* %retval.2, !dbg !11371
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_memcmp(i32 %loc, %union.tree_node* %arg1, %union.tree_node* %arg2, %union.tree_node* %len) unnamed_addr #5 !dbg !11372 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11374, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.value(metadata %union.tree_node* %arg1, metadata !11375, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.value(metadata %union.tree_node* %arg2, metadata !11376, metadata !DIExpression()), !dbg !11389
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !11377, metadata !DIExpression()), !dbg !11389
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg1, i32 10) #8, !dbg !11390
  %tobool = icmp eq i8 %call, 0, !dbg !11390
  br i1 %tobool, label %cleanup60, label %lor.lhs.false, !dbg !11392

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %arg2, i32 10) #8, !dbg !11393
  %tobool2 = icmp eq i8 %call1, 0, !dbg !11393
  br i1 %tobool2, label %cleanup60, label %lor.lhs.false3, !dbg !11394

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %len, i32 8) #8, !dbg !11395
  %tobool5 = icmp eq i8 %call4, 0, !dbg !11395
  br i1 %tobool5, label %cleanup60, label %if.end, !dbg !11396

if.end:                                           ; preds = %lor.lhs.false3
  %call6 = tail call i32 @integer_zerop(%union.tree_node* %len) #7, !dbg !11397
  %tobool7 = icmp eq i32 %call6, 0, !dbg !11397
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !11399

if.then8:                                         ; preds = %if.end
  %0 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11400
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !11401
  %call9 = tail call %union.tree_node* @omit_two_operands_loc(i32 %loc, %union.tree_node* %0, %union.tree_node* %1, %union.tree_node* %arg1, %union.tree_node* %arg2) #7, !dbg !11402
  br label %cleanup60, !dbg !11403

if.end10:                                         ; preds = %if.end
  %call11 = tail call i32 @operand_equal_p(%union.tree_node* %arg1, %union.tree_node* %arg2, i32 0) #7, !dbg !11404
  %tobool12 = icmp eq i32 %call11, 0, !dbg !11404
  br i1 %tobool12, label %if.end15, label %if.then13, !dbg !11406

if.then13:                                        ; preds = %if.end10
  %2 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11407
  %3 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !11408
  %call14 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %2, %union.tree_node* %3, %union.tree_node* %len) #7, !dbg !11409
  br label %cleanup60, !dbg !11410

if.end15:                                         ; preds = %if.end10
  %call16 = tail call fastcc i8* @c_getstr(%union.tree_node* %arg1) #8, !dbg !11411
  call void @llvm.dbg.value(metadata i8* %call16, metadata !11378, metadata !DIExpression()), !dbg !11389
  %call17 = tail call fastcc i8* @c_getstr(%union.tree_node* %arg2) #8, !dbg !11412
  call void @llvm.dbg.value(metadata i8* %call17, metadata !11379, metadata !DIExpression()), !dbg !11389
  %call18 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !11413
  %tobool19 = icmp ne i32 %call18, 0, !dbg !11413
  %tobool20 = icmp ne i8* %call16, null, !dbg !11414
  %or.cond = and i1 %tobool19, %tobool20, !dbg !11415
  %tobool22 = icmp ne i8* %call17, null, !dbg !11416
  %or.cond1 = and i1 %or.cond, %tobool22, !dbg !11415
  br i1 %or.cond1, label %land.lhs.true23, label %if.end39, !dbg !11415

land.lhs.true23:                                  ; preds = %if.end15
  %call24 = tail call i64 @strlen(i8* nonnull %call16) #7, !dbg !11417
  %add = add i64 %call24, 1, !dbg !11418
  %call25 = tail call i32 @compare_tree_int(%union.tree_node* %len, i64 %add) #7, !dbg !11419
  %cmp = icmp slt i32 %call25, 1, !dbg !11420
  br i1 %cmp, label %land.lhs.true26, label %if.end39, !dbg !11421

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %call27 = tail call i64 @strlen(i8* nonnull %call17) #7, !dbg !11422
  %add28 = add i64 %call27, 1, !dbg !11423
  %call29 = tail call i32 @compare_tree_int(%union.tree_node* %len, i64 %add28) #7, !dbg !11424
  %cmp30 = icmp slt i32 %call29, 1, !dbg !11425
  br i1 %cmp30, label %if.then31, label %if.end39, !dbg !11426

if.then31:                                        ; preds = %land.lhs.true26
  %call32 = tail call i64 @tree_low_cst(%union.tree_node* %len, i32 1) #7, !dbg !11427
  %call33 = tail call i32 @memcmp(i8* nonnull %call16, i8* nonnull %call17, i64 %call32) #7, !dbg !11428
  call void @llvm.dbg.value(metadata i32 %call33, metadata !11380, metadata !DIExpression()), !dbg !11429
  %cmp34 = icmp sgt i32 %call33, 0, !dbg !11430
  br i1 %cmp34, label %if.then35, label %if.else, !dbg !11432

if.then35:                                        ; preds = %if.then31
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 14), align 16, !dbg !11433
  br label %cleanup60, !dbg !11434

if.else:                                          ; preds = %if.then31
  %cmp36 = icmp slt i32 %call33, 0, !dbg !11435
  br i1 %cmp36, label %if.then37, label %if.else38, !dbg !11437

if.then37:                                        ; preds = %if.else
  %5 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 15), align 8, !dbg !11438
  br label %cleanup60, !dbg !11439

if.else38:                                        ; preds = %if.else
  %6 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 13), align 8, !dbg !11440
  br label %cleanup60, !dbg !11441

if.end39:                                         ; preds = %land.lhs.true26, %land.lhs.true23, %if.end15
  %call40 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !11442
  %tobool41 = icmp eq i32 %call40, 0, !dbg !11442
  br i1 %tobool41, label %cleanup60, label %land.lhs.true42, !dbg !11443

land.lhs.true42:                                  ; preds = %if.end39
  %call43 = tail call i64 @tree_low_cst(%union.tree_node* %len, i32 1) #7, !dbg !11444
  %cmp44 = icmp eq i64 %call43, 1, !dbg !11445
  br i1 %cmp44, label %if.then45, label %cleanup60, !dbg !11446

if.then45:                                        ; preds = %land.lhs.true42
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 2), align 16, !dbg !11447
  %call46 = tail call %union.tree_node* @build_qualified_type(%union.tree_node* %7, i32 1) #7, !dbg !11447
  call void @llvm.dbg.value(metadata %union.tree_node* %call46, metadata !11383, metadata !DIExpression()), !dbg !11448
  %8 = load i32, i32* @ptr_mode, align 4, !dbg !11449
  %call47 = tail call %union.tree_node* @build_pointer_type_for_mode(%union.tree_node* %call46, i32 %8, i8 zeroext 1) #7, !dbg !11450
  call void @llvm.dbg.value(metadata %union.tree_node* %call47, metadata !11386, metadata !DIExpression()), !dbg !11448
  %9 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11451
  %call48 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call47, %union.tree_node* %arg1) #7, !dbg !11452
  %call49 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %call46, %union.tree_node* %call48) #7, !dbg !11452
  %call50 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %9, %union.tree_node* %call49) #7, !dbg !11453
  call void @llvm.dbg.value(metadata %union.tree_node* %call50, metadata !11387, metadata !DIExpression()), !dbg !11448
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11454
  %call51 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %call47, %union.tree_node* %arg2) #7, !dbg !11455
  %call52 = tail call %union.tree_node* @build1_stat(i32 47, %union.tree_node* %call46, %union.tree_node* %call51) #7, !dbg !11455
  %call53 = tail call %union.tree_node* @fold_convert_loc(i32 %loc, %union.tree_node* %10, %union.tree_node* %call52) #7, !dbg !11456
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !11388, metadata !DIExpression()), !dbg !11448
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11457
  %call54 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 64, %union.tree_node* %11, %union.tree_node* %call50, %union.tree_node* %call53) #7, !dbg !11457
  br label %cleanup60

cleanup60:                                        ; preds = %if.end39, %lor.lhs.false3, %lor.lhs.false, %entry, %land.lhs.true42, %if.then35, %if.then37, %if.else38, %if.then45, %if.then13, %if.then8
  %retval.1 = phi %union.tree_node* [ %call9, %if.then8 ], [ %call14, %if.then13 ], [ %call54, %if.then45 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ %4, %if.then35 ], [ %5, %if.then37 ], [ %6, %if.else38 ], [ null, %land.lhs.true42 ], [ null, %if.end39 ], !dbg !11389
  ret %union.tree_node* %retval.1, !dbg !11458
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strcat_chk(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %size) unnamed_addr #5 !dbg !11459 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11461, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !11462, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !11463, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !11464, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !11465, metadata !DIExpression()), !dbg !11468
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !11469
  %tobool = icmp eq i8 %call, 0, !dbg !11469
  br i1 %tobool, label %cleanup, label %lor.lhs.false, !dbg !11471

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !11472
  %tobool2 = icmp eq i8 %call1, 0, !dbg !11472
  br i1 %tobool2, label %cleanup, label %lor.lhs.false3, !dbg !11473

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %size, i32 8) #8, !dbg !11474
  %tobool5 = icmp eq i8 %call4, 0, !dbg !11474
  br i1 %tobool5, label %cleanup, label %if.end, !dbg !11475

if.end:                                           ; preds = %lor.lhs.false3
  %call6 = tail call fastcc i8* @c_getstr(%union.tree_node* %src) #8, !dbg !11476
  call void @llvm.dbg.value(metadata i8* %call6, metadata !11467, metadata !DIExpression()), !dbg !11468
  %tobool7 = icmp eq i8* %call6, null, !dbg !11477
  br i1 %tobool7, label %if.end13, label %land.lhs.true, !dbg !11479

land.lhs.true:                                    ; preds = %if.end
  %0 = load i8, i8* %call6, align 1, !dbg !11480
  %cmp = icmp eq i8 %0, 0, !dbg !11481
  br i1 %cmp, label %if.then9, label %if.end13, !dbg !11482

if.then9:                                         ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11483
  %1 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !11483
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !11483
  %type11 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !11483
  %3 = load %union.tree_node*, %union.tree_node** %type11, align 8, !dbg !11483
  %call12 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %3, %union.tree_node* %dest, %union.tree_node* %src) #7, !dbg !11484
  br label %cleanup, !dbg !11485

if.end13:                                         ; preds = %if.end, %land.lhs.true
  %call14 = tail call i32 @host_integerp(%union.tree_node* %size, i32 1) #7, !dbg !11486
  %tobool15 = icmp eq i32 %call14, 0, !dbg !11486
  br i1 %tobool15, label %cleanup, label %lor.lhs.false16, !dbg !11488

lor.lhs.false16:                                  ; preds = %if.end13
  %call17 = tail call i32 @integer_all_onesp(%union.tree_node* %size) #7, !dbg !11489
  %tobool18 = icmp eq i32 %call17, 0, !dbg !11489
  br i1 %tobool18, label %cleanup, label %if.end20, !dbg !11490

if.end20:                                         ; preds = %lor.lhs.false16
  %4 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 338), align 16, !dbg !11491
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !11466, metadata !DIExpression()), !dbg !11468
  %tobool21 = icmp eq %union.tree_node* %4, null, !dbg !11492
  br i1 %tobool21, label %cleanup, label %if.end23, !dbg !11494

if.end23:                                         ; preds = %if.end20
  %call24 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %4, i32 2, %union.tree_node* %dest, %union.tree_node* %src) #8, !dbg !11495
  br label %cleanup, !dbg !11496

cleanup:                                          ; preds = %if.end20, %lor.lhs.false16, %if.end13, %lor.lhs.false3, %lor.lhs.false, %entry, %if.end23, %if.then9
  %retval.0 = phi %union.tree_node* [ %call12, %if.then9 ], [ %call24, %if.end23 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %lor.lhs.false16 ], [ null, %if.end13 ], [ null, %if.end20 ], !dbg !11468
  ret %union.tree_node* %retval.0, !dbg !11497
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @readonly_data_expr(%union.tree_node* %exp) unnamed_addr #5 !dbg !11498 {
entry:
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !11500, metadata !DIExpression()), !dbg !11501
  %call = tail call %union.tree_node* @tree_strip_nop_conversions(%union.tree_node* %exp) #7, !dbg !11502
  call void @llvm.dbg.value(metadata %union.tree_node* %call, metadata !11500, metadata !DIExpression()), !dbg !11501
  %0 = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11503
  %bf.load = load i64, i64* %0, align 8, !dbg !11503
  %bf.cast1 = and i64 %bf.load, 65535, !dbg !11505
  %cmp = icmp eq i64 %bf.cast1, 121, !dbg !11505
  br i1 %cmp, label %if.end, label %return, !dbg !11506

if.end:                                           ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %call, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11507
  %1 = load %union.tree_node*, %union.tree_node** %operands, align 8, !dbg !11507
  %call2 = tail call %union.tree_node* @get_base_address(%union.tree_node* %1) #7, !dbg !11508
  call void @llvm.dbg.value(metadata %union.tree_node* %call2, metadata !11500, metadata !DIExpression()), !dbg !11501
  %tobool = icmp eq %union.tree_node* %call2, null, !dbg !11509
  br i1 %tobool, label %return, label %if.end4, !dbg !11511

if.end4:                                          ; preds = %if.end
  %2 = getelementptr inbounds %union.tree_node, %union.tree_node* %call2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11512
  %bf.load6 = load i64, i64* %2, align 8, !dbg !11512
  %bf.cast82 = and i64 %bf.load6, 65535, !dbg !11514
  %cmp9 = icmp eq i64 %bf.cast82, 28, !dbg !11514
  br i1 %cmp9, label %if.then26, label %lor.lhs.false, !dbg !11515

lor.lhs.false:                                    ; preds = %if.end4
  %cmp14 = icmp eq i64 %bf.cast82, 51, !dbg !11516
  br i1 %cmp14, label %if.then26, label %lor.lhs.false15, !dbg !11517

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %cmp20 = icmp eq i64 %bf.cast82, 32, !dbg !11518
  br i1 %cmp20, label %land.lhs.true, label %return, !dbg !11519

land.lhs.true:                                    ; preds = %lor.lhs.false15
  %bf.cast245 = and i64 %bf.load6, 67108864, !dbg !11520
  %tobool25 = icmp eq i64 %bf.cast245, 0, !dbg !11520
  br i1 %tobool25, label %return, label %if.then26, !dbg !11521

if.then26:                                        ; preds = %land.lhs.true, %lor.lhs.false, %if.end4
  %call27 = tail call zeroext i8 @decl_readonly_section(%union.tree_node* nonnull %call2, i32 0) #7, !dbg !11522
  br label %return, !dbg !11523

return:                                           ; preds = %land.lhs.true, %if.end, %entry, %lor.lhs.false15, %if.then26
  %retval.0 = phi i8 [ %call27, %if.then26 ], [ 0, %entry ], [ 0, %if.end ], [ 0, %land.lhs.true ], [ 0, %lor.lhs.false15 ], !dbg !11501
  ret i8 %retval.0, !dbg !11524
}

declare dso_local %union.tree_node* @get_ref_base_and_extent(%union.tree_node*, i64*, i64*, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ranges_overlap_p(i64 %pos1, i64 %size1, i64 %pos2, i64 %size2) unnamed_addr #0 !dbg !11525 {
entry:
  call void @llvm.dbg.value(metadata i64 %pos1, metadata !11530, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i64 %size1, metadata !11531, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i64 %pos2, metadata !11532, metadata !DIExpression()), !dbg !11534
  call void @llvm.dbg.value(metadata i64 %size2, metadata !11533, metadata !DIExpression()), !dbg !11534
  %cmp = icmp ult i64 %pos1, %pos2, !dbg !11535
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !11537

land.lhs.true:                                    ; preds = %entry
  %cmp1 = icmp eq i64 %size2, -1, !dbg !11538
  %add = add i64 %pos2, %size2, !dbg !11539
  %cmp2 = icmp ugt i64 %add, %pos1, !dbg !11540
  %or.cond = or i1 %cmp1, %cmp2, !dbg !11541
  br i1 %or.cond, label %return, label %if.end, !dbg !11541

if.end:                                           ; preds = %entry, %land.lhs.true
  %cmp3 = icmp ult i64 %pos2, %pos1, !dbg !11542
  br i1 %cmp3, label %if.end10, label %land.lhs.true4, !dbg !11544

land.lhs.true4:                                   ; preds = %if.end
  %cmp5 = icmp eq i64 %size1, -1, !dbg !11545
  %add7 = add i64 %pos1, %size1, !dbg !11546
  %cmp8 = icmp ugt i64 %add7, %pos2, !dbg !11547
  %or.cond1 = or i1 %cmp5, %cmp8, !dbg !11548
  br i1 %or.cond1, label %return, label %if.end10, !dbg !11548

if.end10:                                         ; preds = %if.end, %land.lhs.true4
  br label %return, !dbg !11549

return:                                           ; preds = %land.lhs.true4, %land.lhs.true, %if.end10
  %retval.0 = phi i8 [ 0, %if.end10 ], [ 1, %land.lhs.true ], [ 1, %land.lhs.true4 ], !dbg !11534
  ret i8 %retval.0, !dbg !11550
}

declare dso_local %union.tree_node* @tree_expr_size(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_in_ssa_p(%struct.function* %fun) unnamed_addr #0 !dbg !11551 {
entry:
  call void @llvm.dbg.value(metadata %struct.function* %fun, metadata !11557, metadata !DIExpression()), !dbg !11558
  %tobool = icmp eq %struct.function* %fun, null, !dbg !11559
  br i1 %tobool, label %land.end, label %land.lhs.true, !dbg !11560

land.lhs.true:                                    ; preds = %entry
  %gimple_df = getelementptr inbounds %struct.function, %struct.function* %fun, i64 0, i32 3, !dbg !11561
  %0 = load %struct.gimple_df*, %struct.gimple_df** %gimple_df, align 8, !dbg !11561
  %tobool1 = icmp eq %struct.gimple_df* %0, null, !dbg !11562
  br i1 %tobool1, label %land.end, label %land.rhs, !dbg !11563

land.rhs:                                         ; preds = %land.lhs.true
  %in_ssa_p = getelementptr inbounds %struct.gimple_df, %struct.gimple_df* %0, i64 0, i32 10, !dbg !11564
  %bf.load = load i8, i8* %in_ssa_p, align 8, !dbg !11564
  %bf.clear = and i8 %bf.load, 1, !dbg !11564
  br label %land.end

land.end:                                         ; preds = %land.lhs.true, %entry, %land.rhs
  %1 = phi i8 [ 0, %land.lhs.true ], [ 0, %entry ], [ %bf.clear, %land.rhs ]
  ret i8 %1, !dbg !11565
}

declare dso_local zeroext i8 @useless_type_conversion_p(%union.tree_node*, %union.tree_node*) local_unnamed_addr #2

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) local_unnamed_addr #2

declare dso_local zeroext i8 @decl_readonly_section(%union.tree_node*, i32) local_unnamed_addr #2

declare dso_local i8* @memchr(i8*, i32, i64) local_unnamed_addr #2

declare dso_local i32 @memcmp(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_strncat_chk(i32 %loc, %union.tree_node* %fndecl, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len, %union.tree_node* %size) unnamed_addr #5 !dbg !11566 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11568, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata %union.tree_node* %fndecl, metadata !11569, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata %union.tree_node* %dest, metadata !11570, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata %union.tree_node* %src, metadata !11571, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata %union.tree_node* %len, metadata !11572, metadata !DIExpression()), !dbg !11579
  call void @llvm.dbg.value(metadata %union.tree_node* %size, metadata !11573, metadata !DIExpression()), !dbg !11579
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %dest, i32 10) #8, !dbg !11580
  %tobool = icmp eq i8 %call, 0, !dbg !11580
  br i1 %tobool, label %cleanup55, label %lor.lhs.false, !dbg !11582

lor.lhs.false:                                    ; preds = %entry
  %call1 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %src, i32 10) #8, !dbg !11583
  %tobool2 = icmp eq i8 %call1, 0, !dbg !11583
  br i1 %tobool2, label %cleanup55, label %lor.lhs.false3, !dbg !11584

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %size, i32 8) #8, !dbg !11585
  %tobool5 = icmp eq i8 %call4, 0, !dbg !11585
  br i1 %tobool5, label %cleanup55, label %lor.lhs.false6, !dbg !11586

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %call7 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %size, i32 8) #8, !dbg !11587
  %tobool8 = icmp eq i8 %call7, 0, !dbg !11587
  br i1 %tobool8, label %cleanup55, label %if.end, !dbg !11588

if.end:                                           ; preds = %lor.lhs.false6
  %call9 = tail call fastcc i8* @c_getstr(%union.tree_node* %src) #8, !dbg !11589
  call void @llvm.dbg.value(metadata i8* %call9, metadata !11575, metadata !DIExpression()), !dbg !11579
  %tobool10 = icmp eq i8* %call9, null, !dbg !11590
  br i1 %tobool10, label %if.else, label %land.lhs.true, !dbg !11592

land.lhs.true:                                    ; preds = %if.end
  %0 = load i8, i8* %call9, align 1, !dbg !11593
  %cmp = icmp eq i8 %0, 0, !dbg !11594
  br i1 %cmp, label %if.then12, label %if.else, !dbg !11595

if.then12:                                        ; preds = %land.lhs.true
  %type = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11596
  %1 = bitcast %union.tree_node** %type to %struct.tree_common**, !dbg !11596
  %2 = load %struct.tree_common*, %struct.tree_common** %1, align 8, !dbg !11596
  %type14 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %2, i64 0, i32 2, !dbg !11596
  %3 = load %union.tree_node*, %union.tree_node** %type14, align 8, !dbg !11596
  %call15 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %3, %union.tree_node* %dest, %union.tree_node* %len) #7, !dbg !11597
  br label %cleanup55, !dbg !11598

if.else:                                          ; preds = %if.end, %land.lhs.true
  %call16 = tail call i32 @integer_zerop(%union.tree_node* %len) #7, !dbg !11599
  %tobool17 = icmp eq i32 %call16, 0, !dbg !11599
  br i1 %tobool17, label %if.end25, label %if.then18, !dbg !11601

if.then18:                                        ; preds = %if.else
  %type20 = getelementptr inbounds %union.tree_node, %union.tree_node* %fndecl, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11602
  %4 = bitcast %union.tree_node** %type20 to %struct.tree_common**, !dbg !11602
  %5 = load %struct.tree_common*, %struct.tree_common** %4, align 8, !dbg !11602
  %type22 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %5, i64 0, i32 2, !dbg !11602
  %6 = load %union.tree_node*, %union.tree_node** %type22, align 8, !dbg !11602
  %call23 = tail call %union.tree_node* @omit_one_operand_loc(i32 %loc, %union.tree_node* %6, %union.tree_node* %dest, %union.tree_node* %src) #7, !dbg !11603
  br label %cleanup55, !dbg !11604

if.end25:                                         ; preds = %if.else
  %call26 = tail call i32 @host_integerp(%union.tree_node* %size, i32 1) #7, !dbg !11605
  %tobool27 = icmp eq i32 %call26, 0, !dbg !11605
  br i1 %tobool27, label %cleanup55, label %if.end29, !dbg !11607

if.end29:                                         ; preds = %if.end25
  %call30 = tail call i32 @integer_all_onesp(%union.tree_node* %size) #7, !dbg !11608
  %tobool31 = icmp eq i32 %call30, 0, !dbg !11608
  br i1 %tobool31, label %if.then32, label %if.end50, !dbg !11609

if.then32:                                        ; preds = %if.end29
  %call33 = tail call %union.tree_node* @c_strlen(%union.tree_node* %src, i32 1) #8, !dbg !11610
  call void @llvm.dbg.value(metadata %union.tree_node* %call33, metadata !11576, metadata !DIExpression()), !dbg !11611
  %tobool34 = icmp eq %union.tree_node* %call33, null, !dbg !11612
  br i1 %tobool34, label %cleanup55, label %land.lhs.true35, !dbg !11614

land.lhs.true35:                                  ; preds = %if.then32
  %call36 = tail call i32 @host_integerp(%union.tree_node* nonnull %call33, i32 1) #7, !dbg !11615
  %tobool37 = icmp eq i32 %call36, 0, !dbg !11615
  br i1 %tobool37, label %cleanup55, label %land.lhs.true38, !dbg !11616

land.lhs.true38:                                  ; preds = %land.lhs.true35
  %call39 = tail call i32 @host_integerp(%union.tree_node* %len, i32 1) #7, !dbg !11617
  %tobool40 = icmp eq i32 %call39, 0, !dbg !11617
  br i1 %tobool40, label %cleanup55, label %land.lhs.true41, !dbg !11618

land.lhs.true41:                                  ; preds = %land.lhs.true38
  %call42 = tail call i32 @tree_int_cst_lt(%union.tree_node* %len, %union.tree_node* nonnull %call33) #7, !dbg !11619
  %tobool43 = icmp eq i32 %call42, 0, !dbg !11619
  br i1 %tobool43, label %if.then44, label %cleanup55, !dbg !11620

if.then44:                                        ; preds = %land.lhs.true41
  %7 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 534), align 16, !dbg !11621
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11574, metadata !DIExpression()), !dbg !11579
  %tobool45 = icmp eq %union.tree_node* %7, null, !dbg !11623
  br i1 %tobool45, label %cleanup55, label %if.end47, !dbg !11625

if.end47:                                         ; preds = %if.then44
  %call48 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %7, i32 3, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %size) #8, !dbg !11626
  br label %cleanup55, !dbg !11627

if.end50:                                         ; preds = %if.end29
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 347), align 8, !dbg !11628
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !11574, metadata !DIExpression()), !dbg !11579
  %tobool51 = icmp eq %union.tree_node* %8, null, !dbg !11629
  br i1 %tobool51, label %cleanup55, label %if.end53, !dbg !11631

if.end53:                                         ; preds = %if.end50
  %call54 = tail call %union.tree_node* (i32, %union.tree_node*, i32, ...) @build_call_expr_loc(i32 %loc, %union.tree_node* nonnull %8, i32 3, %union.tree_node* %dest, %union.tree_node* %src, %union.tree_node* %len) #8, !dbg !11632
  br label %cleanup55, !dbg !11633

cleanup55:                                        ; preds = %if.end50, %if.then44, %land.lhs.true41, %land.lhs.true38, %land.lhs.true35, %if.then32, %if.end25, %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry, %if.end47, %if.end53, %if.then18, %if.then12
  %retval.1 = phi %union.tree_node* [ %call15, %if.then12 ], [ %call23, %if.then18 ], [ %call54, %if.end53 ], [ null, %lor.lhs.false6 ], [ null, %lor.lhs.false3 ], [ null, %lor.lhs.false ], [ null, %entry ], [ null, %if.end25 ], [ %call48, %if.end47 ], [ null, %if.then44 ], [ null, %land.lhs.true41 ], [ null, %land.lhs.true38 ], [ null, %land.lhs.true35 ], [ null, %if.then32 ], [ null, %if.end50 ], !dbg !11579
  ret %union.tree_node* %retval.1, !dbg !11634
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_sprintf_chk(i32 %loc, %union.tree_node* %exp, i32 %fcode) unnamed_addr #5 !dbg !11635 {
entry:
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11639, metadata !DIExpression()), !dbg !11656
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !11640, metadata !DIExpression()), !dbg !11656
  call void @llvm.dbg.value(metadata i32 %fcode, metadata !11641, metadata !DIExpression()), !dbg !11656
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11657
  %0 = bitcast %union.tree_node** %operands to %struct.tree_int_cst**, !dbg !11657
  %1 = load %struct.tree_int_cst*, %struct.tree_int_cst** %0, align 8, !dbg !11657
  %low = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %1, i64 0, i32 1, i32 0, !dbg !11657
  %2 = load i64, i64* %low, align 8, !dbg !11657
  %conv = trunc i64 %2 to i32, !dbg !11657
  %sub = add nsw i32 %conv, -3, !dbg !11657
  call void @llvm.dbg.value(metadata i32 %sub, metadata !11649, metadata !DIExpression()), !dbg !11656
  %cmp = icmp slt i32 %sub, 4, !dbg !11658
  br i1 %cmp, label %cleanup, label %if.end, !dbg !11660

if.end:                                           ; preds = %entry
  %arrayidx6 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !11661
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx6, align 8, !dbg !11661
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !11642, metadata !DIExpression()), !dbg !11656
  %call = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %3, i32 10) #8, !dbg !11662
  %tobool = icmp eq i8 %call, 0, !dbg !11662
  br i1 %tobool, label %cleanup, label %if.end8, !dbg !11664

if.end8:                                          ; preds = %if.end
  %arrayidx11 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !11665
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx11, align 8, !dbg !11665
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !11647, metadata !DIExpression()), !dbg !11656
  %call12 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %4, i32 8) #8, !dbg !11666
  %tobool13 = icmp eq i8 %call12, 0, !dbg !11666
  br i1 %tobool13, label %cleanup, label %if.end15, !dbg !11668

if.end15:                                         ; preds = %if.end8
  %arrayidx18 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 5, !dbg !11669
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx18, align 8, !dbg !11669
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !11643, metadata !DIExpression()), !dbg !11656
  %call19 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %5, i32 8) #8, !dbg !11670
  %tobool20 = icmp eq i8 %call19, 0, !dbg !11670
  br i1 %tobool20, label %cleanup, label %if.end22, !dbg !11672

if.end22:                                         ; preds = %if.end15
  %arrayidx25 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 6, !dbg !11673
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx25, align 8, !dbg !11673
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !11646, metadata !DIExpression()), !dbg !11656
  %call26 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %6, i32 10) #8, !dbg !11674
  %tobool27 = icmp eq i8 %call26, 0, !dbg !11674
  br i1 %tobool27, label %cleanup, label %if.end29, !dbg !11676

if.end29:                                         ; preds = %if.end22
  %call30 = tail call i32 @host_integerp(%union.tree_node* %5, i32 1) #7, !dbg !11677
  %tobool31 = icmp eq i32 %call30, 0, !dbg !11677
  br i1 %tobool31, label %cleanup, label %if.end33, !dbg !11679

if.end33:                                         ; preds = %if.end29
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11644, metadata !DIExpression()), !dbg !11656
  %call34 = tail call fastcc zeroext i8 @init_target_chars() #8, !dbg !11680
  %tobool35 = icmp eq i8 %call34, 0, !dbg !11680
  br i1 %tobool35, label %cleanup, label %if.end37, !dbg !11682

if.end37:                                         ; preds = %if.end33
  %call38 = tail call fastcc i8* @c_getstr(%union.tree_node* %6) #8, !dbg !11683
  call void @llvm.dbg.value(metadata i8* %call38, metadata !11648, metadata !DIExpression()), !dbg !11656
  %cmp39 = icmp eq i8* %call38, null, !dbg !11684
  br i1 %cmp39, label %if.end81, label %if.then41, !dbg !11685

if.then41:                                        ; preds = %if.end37
  %7 = load i64, i64* @target_percent, align 8, !dbg !11686
  %conv42 = trunc i64 %7 to i32, !dbg !11686
  %call43 = tail call i8* @strchr(i8* nonnull %call38, i32 %conv42) #7, !dbg !11687
  %cmp44 = icmp eq i8* %call43, null, !dbg !11688
  br i1 %cmp44, label %if.then46, label %if.else, !dbg !11689

if.then46:                                        ; preds = %if.then41
  %cmp47 = icmp ne i32 %fcode, 539, !dbg !11690
  %cmp49 = icmp eq i32 %sub, 4, !dbg !11693
  %or.cond = or i1 %cmp47, %cmp49, !dbg !11694
  br i1 %or.cond, label %if.then51, label %if.end81, !dbg !11694

if.then51:                                        ; preds = %if.then46
  %8 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !11695
  %call52 = tail call i64 @strlen(i8* nonnull %call38) #7, !dbg !11696
  %call53 = tail call %union.tree_node* @build_int_cstu(%union.tree_node* %8, i64 %call52) #7, !dbg !11697
  call void @llvm.dbg.value(metadata %union.tree_node* %call53, metadata !11644, metadata !DIExpression()), !dbg !11656
  br label %if.end81, !dbg !11698

if.else:                                          ; preds = %if.then41
  %cmp55 = icmp eq i32 %fcode, 539, !dbg !11699
  br i1 %cmp55, label %land.lhs.true, label %if.end81, !dbg !11700

land.lhs.true:                                    ; preds = %if.else
  %call57 = tail call i32 @strcmp(i8* nonnull %call38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !11701
  %cmp58 = icmp eq i32 %call57, 0, !dbg !11702
  %cmp61 = icmp eq i32 %sub, 5, !dbg !11703
  %or.cond1 = and i1 %cmp58, %cmp61, !dbg !11705
  br i1 %or.cond1, label %if.then63, label %if.end81, !dbg !11705

if.then63:                                        ; preds = %land.lhs.true
  %arrayidx66 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 7, !dbg !11706
  %9 = load %union.tree_node*, %union.tree_node** %arrayidx66, align 8, !dbg !11706
  call void @llvm.dbg.value(metadata %union.tree_node* %9, metadata !11650, metadata !DIExpression()), !dbg !11708
  %call67 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %9, i32 10) #8, !dbg !11709
  %tobool68 = icmp eq i8 %call67, 0, !dbg !11709
  br i1 %tobool68, label %if.end81, label %if.then69, !dbg !11711

if.then69:                                        ; preds = %if.then63
  %call70 = tail call %union.tree_node* @c_strlen(%union.tree_node* %9, i32 1) #8, !dbg !11712
  call void @llvm.dbg.value(metadata %union.tree_node* %call70, metadata !11644, metadata !DIExpression()), !dbg !11656
  %tobool71 = icmp eq %union.tree_node* %call70, null, !dbg !11714
  br i1 %tobool71, label %if.then75, label %lor.lhs.false72, !dbg !11716

lor.lhs.false72:                                  ; preds = %if.then69
  %call73 = tail call i32 @host_integerp(%union.tree_node* nonnull %call70, i32 1) #7, !dbg !11717
  %tobool74 = icmp eq i32 %call73, 0, !dbg !11717
  br i1 %tobool74, label %if.then75, label %if.end81, !dbg !11718

if.then75:                                        ; preds = %lor.lhs.false72, %if.then69
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11644, metadata !DIExpression()), !dbg !11656
  br label %if.end81, !dbg !11719

if.end81:                                         ; preds = %lor.lhs.false72, %if.then63, %if.end37, %if.then46, %if.then51, %if.then75, %land.lhs.true, %if.else
  %len.6 = phi %union.tree_node* [ null, %if.end37 ], [ %call53, %if.then51 ], [ null, %if.then46 ], [ null, %land.lhs.true ], [ null, %if.else ], [ null, %if.then63 ], [ %call70, %lor.lhs.false72 ], [ null, %if.then75 ], !dbg !11656
  call void @llvm.dbg.value(metadata %union.tree_node* %len.6, metadata !11644, metadata !DIExpression()), !dbg !11656
  %call82 = tail call i32 @integer_all_onesp(%union.tree_node* %5) #7, !dbg !11720
  %tobool83 = icmp eq i32 %call82, 0, !dbg !11720
  br i1 %tobool83, label %if.then84, label %if.end91, !dbg !11722

if.then84:                                        ; preds = %if.end81
  %tobool85 = icmp eq %union.tree_node* %len.6, null, !dbg !11723
  br i1 %tobool85, label %cleanup, label %lor.lhs.false86, !dbg !11726

lor.lhs.false86:                                  ; preds = %if.then84
  %call87 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %len.6, %union.tree_node* %5) #7, !dbg !11727
  %tobool88 = icmp eq i32 %call87, 0, !dbg !11727
  br i1 %tobool88, label %cleanup, label %if.end91, !dbg !11728

if.end91:                                         ; preds = %lor.lhs.false86, %if.end81
  %call92 = tail call i32 @integer_zerop(%union.tree_node* %4) #7, !dbg !11729
  %tobool93 = icmp eq i32 %call92, 0, !dbg !11729
  br i1 %tobool93, label %if.then94, label %if.end108, !dbg !11731

if.then94:                                        ; preds = %if.end91
  br i1 %cmp39, label %cleanup, label %if.end98, !dbg !11732

if.end98:                                         ; preds = %if.then94
  %10 = load i64, i64* @target_percent, align 8, !dbg !11734
  %conv99 = trunc i64 %10 to i32, !dbg !11734
  %call100 = tail call i8* @strchr(i8* nonnull %call38, i32 %conv99) #7, !dbg !11736
  %cmp101 = icmp eq i8* %call100, null, !dbg !11737
  br i1 %cmp101, label %if.end108, label %land.lhs.true103, !dbg !11738

land.lhs.true103:                                 ; preds = %if.end98
  %call104 = tail call i32 @strcmp(i8* nonnull %call38, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !11739
  %tobool105 = icmp eq i32 %call104, 0, !dbg !11739
  br i1 %tobool105, label %if.end108, label %cleanup, !dbg !11740

if.end108:                                        ; preds = %land.lhs.true103, %if.end98, %if.end91
  %cmp109 = icmp eq i32 %fcode, 541, !dbg !11741
  %cond = select i1 %cmp109, i64 380, i64 373, !dbg !11742
  %arrayidx111 = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %cond, !dbg !11743
  %11 = load %union.tree_node*, %union.tree_node** %arrayidx111, align 8, !dbg !11743
  call void @llvm.dbg.value(metadata %union.tree_node* %11, metadata !11645, metadata !DIExpression()), !dbg !11656
  %tobool112 = icmp eq %union.tree_node* %11, null, !dbg !11744
  br i1 %tobool112, label %cleanup, label %if.end114, !dbg !11746

if.end114:                                        ; preds = %if.end108
  %call115 = tail call %union.tree_node* (i32, %union.tree_node*, i32, %union.tree_node*, i32, ...) @rewrite_call_expr(i32 %loc, %union.tree_node* %exp, i32 4, %union.tree_node* nonnull %11, i32 2, %union.tree_node* %3, %union.tree_node* %6) #8, !dbg !11747
  br label %cleanup, !dbg !11748

cleanup:                                          ; preds = %land.lhs.true103, %if.end108, %lor.lhs.false86, %if.then84, %if.end33, %if.end29, %if.end22, %if.end15, %if.end8, %if.end, %if.then94, %entry, %if.end114
  %retval.0 = phi %union.tree_node* [ %call115, %if.end114 ], [ null, %entry ], [ null, %if.end ], [ null, %if.end8 ], [ null, %if.end15 ], [ null, %if.end22 ], [ null, %if.end29 ], [ null, %if.end33 ], [ null, %lor.lhs.false86 ], [ null, %if.then84 ], [ null, %if.then94 ], [ null, %land.lhs.true103 ], [ null, %if.end108 ], !dbg !11656
  ret %union.tree_node* %retval.0, !dbg !11749
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @fold_builtin_fpclassify(i32 %loc, %union.tree_node* %exp) unnamed_addr #5 !dbg !11750 {
entry:
  %r = alloca %struct.real_value, align 8
  %buf = alloca [128 x i8], align 16
  call void @llvm.dbg.value(metadata i32 %loc, metadata !11752, metadata !DIExpression()), !dbg !11766
  call void @llvm.dbg.value(metadata %union.tree_node* %exp, metadata !11753, metadata !DIExpression()), !dbg !11766
  %0 = bitcast %struct.real_value* %r to i8*, !dbg !11767
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #6, !dbg !11767
  %1 = getelementptr inbounds [128 x i8], [128 x i8]* %buf, i64 0, i64 0, !dbg !11768
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %1) #6, !dbg !11768
  call void @llvm.dbg.declare(metadata [128 x i8]* %buf, metadata !11765, metadata !DIExpression()), !dbg !11769
  %call = tail call zeroext i8 (%union.tree_node*, ...) @validate_arglist(%union.tree_node* %exp, i32 8, i32 8, i32 8, i32 8, i32 8, i32 9, i32 19) #8, !dbg !11770
  %tobool = icmp eq i8 %call, 0, !dbg !11770
  br i1 %tobool, label %cleanup, label %if.end, !dbg !11772

if.end:                                           ; preds = %entry
  %operands = getelementptr inbounds %union.tree_node, %union.tree_node* %exp, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 4, !dbg !11773
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 3, !dbg !11773
  %2 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11773
  call void @llvm.dbg.value(metadata %union.tree_node* %2, metadata !11754, metadata !DIExpression()), !dbg !11766
  %arrayidx4 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 4, !dbg !11774
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx4, align 8, !dbg !11774
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !11755, metadata !DIExpression()), !dbg !11766
  %arrayidx7 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 5, !dbg !11775
  %4 = load %union.tree_node*, %union.tree_node** %arrayidx7, align 8, !dbg !11775
  call void @llvm.dbg.value(metadata %union.tree_node* %4, metadata !11756, metadata !DIExpression()), !dbg !11766
  %arrayidx10 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 6, !dbg !11776
  %5 = load %union.tree_node*, %union.tree_node** %arrayidx10, align 8, !dbg !11776
  call void @llvm.dbg.value(metadata %union.tree_node* %5, metadata !11757, metadata !DIExpression()), !dbg !11766
  %arrayidx13 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 7, !dbg !11777
  %6 = load %union.tree_node*, %union.tree_node** %arrayidx13, align 8, !dbg !11777
  call void @llvm.dbg.value(metadata %union.tree_node* %6, metadata !11758, metadata !DIExpression()), !dbg !11766
  %arrayidx16 = getelementptr inbounds %union.tree_node*, %union.tree_node** %operands, i64 8, !dbg !11778
  %7 = load %union.tree_node*, %union.tree_node** %arrayidx16, align 8, !dbg !11778
  call void @llvm.dbg.value(metadata %union.tree_node* %7, metadata !11759, metadata !DIExpression()), !dbg !11766
  %type17 = getelementptr inbounds %union.tree_node, %union.tree_node* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2, !dbg !11779
  %8 = load %union.tree_node*, %union.tree_node** %type17, align 8, !dbg !11779
  call void @llvm.dbg.value(metadata %union.tree_node* %8, metadata !11760, metadata !DIExpression()), !dbg !11766
  %9 = getelementptr inbounds %union.tree_node, %union.tree_node* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, !dbg !11780
  %bf.load = load i64, i64* %9, align 8, !dbg !11780
  %bf.cast2 = and i64 %bf.load, 65535, !dbg !11780
  %cmp = icmp eq i64 %bf.cast2, 14, !dbg !11780
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !11780

cond.true:                                        ; preds = %if.end
  %call18 = tail call i32 @vector_type_mode(%union.tree_node* %8) #7, !dbg !11780
  br label %cond.end, !dbg !11780

cond.false:                                       ; preds = %if.end
  %type19 = bitcast %union.tree_node* %8 to %struct.tree_type*, !dbg !11780
  %mode20 = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type19, i64 0, i32 6, !dbg !11780
  %bf.load21 = load i32, i32* %mode20, align 4, !dbg !11780
  %bf.lshr = lshr i32 %bf.load21, 16, !dbg !11780
  %bf.clear22 = and i32 %bf.lshr, 255, !dbg !11780
  br label %cond.end, !dbg !11780

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call18, %cond.true ], [ %bf.clear22, %cond.false ], !dbg !11780
  call void @llvm.dbg.value(metadata i32 %cond, metadata !11763, metadata !DIExpression()), !dbg !11766
  %call23 = tail call %union.tree_node* @fold_build1_stat_loc(i32 %loc, i32 82, %union.tree_node* %8, %union.tree_node* %7) #7, !dbg !11781
  %call24 = tail call fastcc %union.tree_node* @builtin_save_expr(%union.tree_node* %call23) #8, !dbg !11782
  call void @llvm.dbg.value(metadata %union.tree_node* %call24, metadata !11759, metadata !DIExpression()), !dbg !11766
  %10 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11783
  %call25 = tail call %union.tree_node* @build_real(%union.tree_node* %8, %struct.real_value* nonnull byval(%struct.real_value) align 8 @dconst0) #7, !dbg !11783
  %call26 = tail call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 101, %union.tree_node* %10, %union.tree_node* %call24, %union.tree_node* %call25) #7, !dbg !11783
  call void @llvm.dbg.value(metadata %union.tree_node* %call26, metadata !11762, metadata !DIExpression()), !dbg !11766
  %11 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11784
  %call27 = tail call %union.tree_node* @fold_build3_stat_loc(i32 %loc, i32 56, %union.tree_node* %11, %union.tree_node* %call26, %union.tree_node* %6, %union.tree_node* %5) #7, !dbg !11784
  call void @llvm.dbg.value(metadata %union.tree_node* %call27, metadata !11761, metadata !DIExpression()), !dbg !11766
  %cond35 = add i32 %cond, -38, !dbg !11785
  %idxprom36 = zext i32 %cond35 to i64, !dbg !11785
  %arrayidx37 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom36, !dbg !11785
  %12 = load %struct.real_format*, %struct.real_format** %arrayidx37, align 8, !dbg !11785
  %emin = getelementptr inbounds %struct.real_format, %struct.real_format* %12, i64 0, i32 5, !dbg !11786
  %13 = load i32, i32* %emin, align 4, !dbg !11786
  %sub38 = add nsw i32 %13, -1, !dbg !11787
  %call39 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.739, i64 0, i64 0), i32 %sub38) #7, !dbg !11788
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !11764, metadata !DIExpression(DW_OP_deref)), !dbg !11766
  %call41 = call i32 @real_from_string(%struct.real_value* nonnull %r, i8* nonnull %1) #7, !dbg !11789
  %14 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11790
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !11764, metadata !DIExpression(DW_OP_deref)), !dbg !11766
  %call42 = call %union.tree_node* @build_real(%union.tree_node* %8, %struct.real_value* nonnull byval(%struct.real_value) align 8 %r) #7, !dbg !11790
  %call43 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 100, %union.tree_node* %14, %union.tree_node* %call24, %union.tree_node* %call42) #7, !dbg !11790
  call void @llvm.dbg.value(metadata %union.tree_node* %call43, metadata !11762, metadata !DIExpression()), !dbg !11766
  %15 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11791
  %call44 = call %union.tree_node* @fold_build3_stat_loc(i32 %loc, i32 56, %union.tree_node* %15, %union.tree_node* %call43, %union.tree_node* %4, %union.tree_node* %call27) #7, !dbg !11791
  call void @llvm.dbg.value(metadata %union.tree_node* %call44, metadata !11761, metadata !DIExpression()), !dbg !11766
  %idxprom45 = zext i32 %cond to i64, !dbg !11792
  %arrayidx46 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom45, !dbg !11792
  %16 = load i8, i8* %arrayidx46, align 1, !dbg !11792
  %cmp48 = icmp eq i8 %16, 8, !dbg !11792
  br i1 %cmp48, label %land.lhs.true, label %lor.lhs.false, !dbg !11792

lor.lhs.false:                                    ; preds = %cond.end
  %cmp53 = icmp eq i8 %16, 9, !dbg !11792
  br i1 %cmp53, label %land.lhs.true, label %lor.lhs.false55, !dbg !11792

lor.lhs.false55:                                  ; preds = %lor.lhs.false
  %cmp59 = icmp eq i8 %16, 11, !dbg !11792
  br i1 %cmp59, label %land.lhs.true, label %lor.lhs.false61, !dbg !11792

lor.lhs.false61:                                  ; preds = %lor.lhs.false55
  %cmp65 = icmp eq i8 %16, 17, !dbg !11792
  br i1 %cmp65, label %land.lhs.true, label %if.end143, !dbg !11792

land.lhs.true:                                    ; preds = %lor.lhs.false61, %lor.lhs.false55, %lor.lhs.false, %cond.end
  br i1 %cmp48, label %cond.end83, label %lor.lhs.false72, !dbg !11792

lor.lhs.false72:                                  ; preds = %land.lhs.true
  %cmp76 = icmp eq i8 %16, 9, !dbg !11792
  br i1 %cmp76, label %cond.end83, label %cond.false79, !dbg !11792

cond.false79:                                     ; preds = %lor.lhs.false72
  %arrayidx81 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom45, !dbg !11792
  %17 = load i8, i8* %arrayidx81, align 1, !dbg !11792
  %.pre = zext i8 %17 to i64, !dbg !11792
  %arrayidx86.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre, !dbg !11794
  %.pre3 = load i8, i8* %arrayidx86.phi.trans.insert, align 1, !dbg !11792
  %phitmp6 = icmp eq i8 %.pre3, 9, !dbg !11792
  br label %cond.end83, !dbg !11792

cond.end83:                                       ; preds = %land.lhs.true, %lor.lhs.false72, %cond.false79
  %18 = phi i1 [ false, %land.lhs.true ], [ true, %lor.lhs.false72 ], [ %phitmp6, %cond.false79 ]
  br i1 %18, label %cond.true90, label %cond.false111, !dbg !11792

cond.true90:                                      ; preds = %cond.end83
  br i1 %cmp48, label %cond.end107, label %lor.lhs.false96, !dbg !11792

lor.lhs.false96:                                  ; preds = %cond.true90
  %cmp100 = icmp eq i8 %16, 9, !dbg !11792
  br i1 %cmp100, label %cond.end107, label %cond.false103, !dbg !11792

cond.false103:                                    ; preds = %lor.lhs.false96
  %arrayidx105 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom45, !dbg !11792
  %19 = load i8, i8* %arrayidx105, align 1, !dbg !11792
  %conv106 = zext i8 %19 to i32, !dbg !11792
  br label %cond.end107, !dbg !11792

cond.end107:                                      ; preds = %cond.true90, %lor.lhs.false96, %cond.false103
  %cond108 = phi i32 [ %conv106, %cond.false103 ], [ %cond, %lor.lhs.false96 ], [ %cond, %cond.true90 ], !dbg !11792
  br label %cond.end131, !dbg !11792

cond.false111:                                    ; preds = %cond.end83
  br i1 %cmp48, label %cond.end128, label %lor.lhs.false117, !dbg !11792

lor.lhs.false117:                                 ; preds = %cond.false111
  %cmp121 = icmp eq i8 %16, 9, !dbg !11792
  br i1 %cmp121, label %cond.end128, label %cond.false124, !dbg !11792

cond.false124:                                    ; preds = %lor.lhs.false117
  %arrayidx126 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom45, !dbg !11792
  %20 = load i8, i8* %arrayidx126, align 1, !dbg !11792
  %conv127 = zext i8 %20 to i32, !dbg !11792
  br label %cond.end128, !dbg !11792

cond.end128:                                      ; preds = %cond.false111, %lor.lhs.false117, %cond.false124
  %cond129 = phi i32 [ %conv127, %cond.false124 ], [ %cond, %lor.lhs.false117 ], [ %cond, %cond.false111 ], !dbg !11792
  br label %cond.end131, !dbg !11792

cond.end131:                                      ; preds = %cond.end128, %cond.end107
  %cond132.in = phi i32 [ %cond108, %cond.end107 ], [ %cond129, %cond.end128 ]
  %cond132 = add i32 %cond132.in, -38, !dbg !11792
  %idxprom133 = zext i32 %cond132 to i64, !dbg !11792
  %arrayidx134 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom133, !dbg !11792
  %21 = load %struct.real_format*, %struct.real_format** %arrayidx134, align 8, !dbg !11792
  %has_inf = getelementptr inbounds %struct.real_format, %struct.real_format* %21, i64 0, i32 12, !dbg !11792
  %22 = load i8, i8* %has_inf, align 1, !dbg !11792
  %tobool136 = icmp eq i8 %22, 0, !dbg !11792
  %23 = load i32, i32* @flag_finite_math_only, align 4, !dbg !11792
  %tobool138 = icmp ne i32 %23, 0, !dbg !11792
  %or.cond = or i1 %tobool136, %tobool138, !dbg !11792
  br i1 %or.cond, label %if.end143, label %if.then139, !dbg !11792

if.then139:                                       ; preds = %cond.end131
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !11764, metadata !DIExpression(DW_OP_deref)), !dbg !11766
  call void @real_inf(%struct.real_value* nonnull %r) #7, !dbg !11795
  %24 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11797
  call void @llvm.dbg.value(metadata %struct.real_value* %r, metadata !11764, metadata !DIExpression(DW_OP_deref)), !dbg !11766
  %call140 = call %union.tree_node* @build_real(%union.tree_node* %8, %struct.real_value* nonnull byval(%struct.real_value) align 8 %r) #7, !dbg !11797
  %call141 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 101, %union.tree_node* %24, %union.tree_node* %call24, %union.tree_node* %call140) #7, !dbg !11797
  call void @llvm.dbg.value(metadata %union.tree_node* %call141, metadata !11762, metadata !DIExpression()), !dbg !11766
  %25 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11798
  %call142 = call %union.tree_node* @fold_build3_stat_loc(i32 %loc, i32 56, %union.tree_node* %25, %union.tree_node* %call141, %union.tree_node* %3, %union.tree_node* %call44) #7, !dbg !11798
  call void @llvm.dbg.value(metadata %union.tree_node* %call142, metadata !11761, metadata !DIExpression()), !dbg !11766
  br label %if.end143, !dbg !11799

if.end143:                                        ; preds = %cond.end131, %if.then139, %lor.lhs.false61
  %res.0 = phi %union.tree_node* [ %call142, %if.then139 ], [ %call44, %cond.end131 ], [ %call44, %lor.lhs.false61 ], !dbg !11766
  call void @llvm.dbg.value(metadata %union.tree_node* %res.0, metadata !11761, metadata !DIExpression()), !dbg !11766
  br i1 %cmp48, label %land.lhs.true167, label %lor.lhs.false149, !dbg !11800

lor.lhs.false149:                                 ; preds = %if.end143
  %cmp153 = icmp eq i8 %16, 9, !dbg !11800
  br i1 %cmp153, label %land.lhs.true167, label %lor.lhs.false155, !dbg !11800

lor.lhs.false155:                                 ; preds = %lor.lhs.false149
  %cmp159 = icmp eq i8 %16, 11, !dbg !11800
  br i1 %cmp159, label %land.lhs.true167, label %lor.lhs.false161, !dbg !11800

lor.lhs.false161:                                 ; preds = %lor.lhs.false155
  %cmp165 = icmp eq i8 %16, 17, !dbg !11800
  br i1 %cmp165, label %land.lhs.true167, label %cleanup, !dbg !11800

land.lhs.true167:                                 ; preds = %lor.lhs.false161, %lor.lhs.false155, %lor.lhs.false149, %if.end143
  br i1 %cmp48, label %cond.end184, label %lor.lhs.false173, !dbg !11800

lor.lhs.false173:                                 ; preds = %land.lhs.true167
  %cmp177 = icmp eq i8 %16, 9, !dbg !11800
  br i1 %cmp177, label %cond.end184, label %cond.false180, !dbg !11800

cond.false180:                                    ; preds = %lor.lhs.false173
  %arrayidx182 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom45, !dbg !11800
  %26 = load i8, i8* %arrayidx182, align 1, !dbg !11800
  %.pre4 = zext i8 %26 to i64, !dbg !11800
  %arrayidx187.phi.trans.insert = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %.pre4, !dbg !11802
  %.pre5 = load i8, i8* %arrayidx187.phi.trans.insert, align 1, !dbg !11800
  %phitmp = icmp eq i8 %.pre5, 9, !dbg !11800
  br label %cond.end184, !dbg !11800

cond.end184:                                      ; preds = %land.lhs.true167, %lor.lhs.false173, %cond.false180
  %27 = phi i1 [ false, %land.lhs.true167 ], [ true, %lor.lhs.false173 ], [ %phitmp, %cond.false180 ]
  br i1 %27, label %cond.true191, label %cond.false212, !dbg !11800

cond.true191:                                     ; preds = %cond.end184
  br i1 %cmp48, label %cond.end208, label %lor.lhs.false197, !dbg !11800

lor.lhs.false197:                                 ; preds = %cond.true191
  %cmp201 = icmp eq i8 %16, 9, !dbg !11800
  br i1 %cmp201, label %cond.end208, label %cond.false204, !dbg !11800

cond.false204:                                    ; preds = %lor.lhs.false197
  %arrayidx206 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom45, !dbg !11800
  %28 = load i8, i8* %arrayidx206, align 1, !dbg !11800
  %conv207 = zext i8 %28 to i32, !dbg !11800
  br label %cond.end208, !dbg !11800

cond.end208:                                      ; preds = %cond.true191, %lor.lhs.false197, %cond.false204
  %cond209 = phi i32 [ %conv207, %cond.false204 ], [ %cond, %lor.lhs.false197 ], [ %cond, %cond.true191 ], !dbg !11800
  br label %cond.end232, !dbg !11800

cond.false212:                                    ; preds = %cond.end184
  br i1 %cmp48, label %cond.end229, label %lor.lhs.false218, !dbg !11800

lor.lhs.false218:                                 ; preds = %cond.false212
  %cmp222 = icmp eq i8 %16, 9, !dbg !11800
  br i1 %cmp222, label %cond.end229, label %cond.false225, !dbg !11800

cond.false225:                                    ; preds = %lor.lhs.false218
  %arrayidx227 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom45, !dbg !11800
  %29 = load i8, i8* %arrayidx227, align 1, !dbg !11800
  %conv228 = zext i8 %29 to i32, !dbg !11800
  br label %cond.end229, !dbg !11800

cond.end229:                                      ; preds = %cond.false212, %lor.lhs.false218, %cond.false225
  %cond230 = phi i32 [ %conv228, %cond.false225 ], [ %cond, %lor.lhs.false218 ], [ %cond, %cond.false212 ], !dbg !11800
  br label %cond.end232, !dbg !11800

cond.end232:                                      ; preds = %cond.end229, %cond.end208
  %cond233.in = phi i32 [ %cond209, %cond.end208 ], [ %cond230, %cond.end229 ]
  %cond233 = add i32 %cond233.in, -38, !dbg !11800
  %idxprom234 = zext i32 %cond233 to i64, !dbg !11800
  %arrayidx235 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom234, !dbg !11800
  %30 = load %struct.real_format*, %struct.real_format** %arrayidx235, align 8, !dbg !11800
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %30, i64 0, i32 11, !dbg !11800
  %31 = load i8, i8* %has_nans, align 2, !dbg !11800
  %tobool237 = icmp eq i8 %31, 0, !dbg !11800
  %32 = load i32, i32* @flag_finite_math_only, align 4, !dbg !11800
  %tobool239 = icmp ne i32 %32, 0, !dbg !11800
  %or.cond1 = or i1 %tobool237, %tobool239, !dbg !11800
  br i1 %or.cond1, label %cleanup, label %if.then240, !dbg !11800

if.then240:                                       ; preds = %cond.end232
  %33 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11803
  %call241 = call %union.tree_node* @fold_build2_stat_loc(i32 %loc, i32 104, %union.tree_node* %33, %union.tree_node* %call24, %union.tree_node* %call24) #7, !dbg !11803
  call void @llvm.dbg.value(metadata %union.tree_node* %call241, metadata !11762, metadata !DIExpression()), !dbg !11766
  %34 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([11 x %union.tree_node*], [11 x %union.tree_node*]* @integer_types, i64 0, i64 5), align 8, !dbg !11805
  %call242 = call %union.tree_node* @fold_build3_stat_loc(i32 %loc, i32 56, %union.tree_node* %34, %union.tree_node* %call241, %union.tree_node* %res.0, %union.tree_node* %2) #7, !dbg !11805
  call void @llvm.dbg.value(metadata %union.tree_node* %call242, metadata !11761, metadata !DIExpression()), !dbg !11766
  br label %cleanup, !dbg !11806

cleanup:                                          ; preds = %entry, %lor.lhs.false161, %if.then240, %cond.end232
  %retval.0 = phi %union.tree_node* [ null, %entry ], [ %call242, %if.then240 ], [ %res.0, %cond.end232 ], [ %res.0, %lor.lhs.false161 ], !dbg !11766
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %1) #6, !dbg !11807
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #6, !dbg !11807
  ret %union.tree_node* %retval.0, !dbg !11807
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_num_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11808 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11810, metadata !DIExpression()), !dbg !11811
  %num_ops = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %gs, i64 0, i32 0, i32 0, i32 3, !dbg !11812
  %0 = load i32, i32* %num_ops, align 4, !dbg !11812
  ret i32 %0, !dbg !11813
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 %i) unnamed_addr #0 !dbg !11814 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11816, metadata !DIExpression()), !dbg !11818
  call void @llvm.dbg.value(metadata i32 %i, metadata !11817, metadata !DIExpression()), !dbg !11818
  %call = tail call fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %gs) #8, !dbg !11819
  %tobool = icmp eq i8 %call, 0, !dbg !11819
  br i1 %tobool, label %return, label %if.then, !dbg !11821

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) #8, !dbg !11822
  %idxprom = zext i32 %i to i64, !dbg !11822
  %arrayidx = getelementptr inbounds %union.tree_node*, %union.tree_node** %call1, i64 %idxprom, !dbg !11822
  %0 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11822
  br label %return, !dbg !11824

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %union.tree_node* [ %0, %if.then ], [ null, %entry ], !dbg !11825
  ret %union.tree_node* %retval.0, !dbg !11826
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @gimple_has_ops(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !11827 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !11829, metadata !DIExpression()), !dbg !11830
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !11831
  %cmp = icmp eq i32 %call, 0, !dbg !11832
  br i1 %cmp, label %land.end, label %land.rhs, !dbg !11833

land.rhs:                                         ; preds = %entry
  %call1 = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %g) #8, !dbg !11834
  %cmp2 = icmp ult i32 %call1, 10, !dbg !11835
  %phitmp = zext i1 %cmp2 to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %0 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %0, !dbg !11836
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node** @gimple_ops(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11837 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11841, metadata !DIExpression()), !dbg !11843
  %call = tail call fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) #8, !dbg !11844
  %idxprom = zext i32 %call to i64, !dbg !11845
  %arrayidx = getelementptr inbounds [0 x i64], [0 x i64]* @gimple_ops_offset_, i64 0, i64 %idxprom, !dbg !11845
  %0 = load i64, i64* %arrayidx, align 8, !dbg !11845
  call void @llvm.dbg.value(metadata i64 %0, metadata !11842, metadata !DIExpression()), !dbg !11843
  %cmp = icmp eq i64 %0, 0, !dbg !11846
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !11846

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.740, i64 0, i64 0), i32 1622, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.725, i64 0, i64 0)) #7, !dbg !11846
  br label %cond.end, !dbg !11846

cond.end:                                         ; preds = %entry, %cond.true
  %1 = bitcast %union.gimple_statement_d* %gs to i8*, !dbg !11847
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %0, !dbg !11848
  %2 = bitcast i8* %add.ptr to %union.tree_node**, !dbg !11849
  ret %union.tree_node** %2, !dbg !11850
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_code(%union.gimple_statement_d* %g) unnamed_addr #0 !dbg !11851 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %g, metadata !11855, metadata !DIExpression()), !dbg !11856
  %0 = getelementptr inbounds %union.gimple_statement_d, %union.gimple_statement_d* %g, i64 0, i32 0, i32 0, i32 0, !dbg !11857
  %bf.load = load i32, i32* %0, align 8, !dbg !11857
  %bf.clear = and i32 %bf.load, 255, !dbg !11857
  ret i32 %bf.clear, !dbg !11858
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gimple_statement_structure(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11859 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11863, metadata !DIExpression()), !dbg !11864
  %call = tail call fastcc i32 @gimple_code(%union.gimple_statement_d* %gs) #8, !dbg !11865
  %call1 = tail call fastcc i32 @gss_for_code(i32 %call) #8, !dbg !11866
  ret i32 %call1, !dbg !11867
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @gss_for_code(i32 %code) unnamed_addr #0 !dbg !11868 {
entry:
  call void @llvm.dbg.value(metadata i32 %code, metadata !11872, metadata !DIExpression()), !dbg !11873
  %idxprom = zext i32 %code to i64, !dbg !11874
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @gss_for_code_, i64 0, i64 %idxprom, !dbg !11874
  %0 = load i32, i32* %arrayidx, align 4, !dbg !11874
  ret i32 %0, !dbg !11875
}

declare dso_local %union.tree_node* @fold(%union.tree_node*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.tree_node* @gimple_call_fn(%union.gimple_statement_d* %gs) unnamed_addr #0 !dbg !11876 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %gs, metadata !11878, metadata !DIExpression()), !dbg !11879
  %call = tail call fastcc %union.tree_node* @gimple_op(%union.gimple_statement_d* %gs, i32 1) #8, !dbg !11880
  ret %union.tree_node* %call, !dbg !11881
}

; Function Attrs: nounwind uwtable
define internal fastcc %union.tree_node* @gimple_fold_builtin_sprintf_chk(%union.gimple_statement_d* %stmt, i32 %fcode) unnamed_addr #5 !dbg !11882 {
entry:
  call void @llvm.dbg.value(metadata %union.gimple_statement_d* %stmt, metadata !11886, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.value(metadata i32 %fcode, metadata !11887, metadata !DIExpression()), !dbg !11902
  %call = tail call fastcc i32 @gimple_call_num_args(%union.gimple_statement_d* %stmt) #8, !dbg !11903
  call void @llvm.dbg.value(metadata i32 %call, metadata !11895, metadata !DIExpression()), !dbg !11902
  %cmp = icmp slt i32 %call, 4, !dbg !11904
  br i1 %cmp, label %cleanup, label %if.end, !dbg !11906

if.end:                                           ; preds = %entry
  %call1 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 0) #8, !dbg !11907
  call void @llvm.dbg.value(metadata %union.tree_node* %call1, metadata !11888, metadata !DIExpression()), !dbg !11902
  %call2 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call1, i32 10) #8, !dbg !11908
  %tobool = icmp eq i8 %call2, 0, !dbg !11908
  br i1 %tobool, label %cleanup, label %if.end4, !dbg !11910

if.end4:                                          ; preds = %if.end
  %call5 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 1) #8, !dbg !11911
  call void @llvm.dbg.value(metadata %union.tree_node* %call5, metadata !11893, metadata !DIExpression()), !dbg !11902
  %call6 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call5, i32 8) #8, !dbg !11912
  %tobool7 = icmp eq i8 %call6, 0, !dbg !11912
  br i1 %tobool7, label %cleanup, label %if.end9, !dbg !11914

if.end9:                                          ; preds = %if.end4
  %call10 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 2) #8, !dbg !11915
  call void @llvm.dbg.value(metadata %union.tree_node* %call10, metadata !11889, metadata !DIExpression()), !dbg !11902
  %call11 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call10, i32 8) #8, !dbg !11916
  %tobool12 = icmp eq i8 %call11, 0, !dbg !11916
  br i1 %tobool12, label %cleanup, label %if.end14, !dbg !11918

if.end14:                                         ; preds = %if.end9
  %call15 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 3) #8, !dbg !11919
  call void @llvm.dbg.value(metadata %union.tree_node* %call15, metadata !11892, metadata !DIExpression()), !dbg !11902
  %call16 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call15, i32 10) #8, !dbg !11920
  %tobool17 = icmp eq i8 %call16, 0, !dbg !11920
  br i1 %tobool17, label %cleanup, label %if.end19, !dbg !11922

if.end19:                                         ; preds = %if.end14
  %call20 = tail call i32 @host_integerp(%union.tree_node* %call10, i32 1) #7, !dbg !11923
  %tobool21 = icmp eq i32 %call20, 0, !dbg !11923
  br i1 %tobool21, label %cleanup, label %if.end23, !dbg !11925

if.end23:                                         ; preds = %if.end19
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11890, metadata !DIExpression()), !dbg !11902
  %call24 = tail call fastcc zeroext i8 @init_target_chars() #8, !dbg !11926
  %tobool25 = icmp eq i8 %call24, 0, !dbg !11926
  br i1 %tobool25, label %cleanup, label %if.end27, !dbg !11928

if.end27:                                         ; preds = %if.end23
  %call28 = tail call fastcc i8* @c_getstr(%union.tree_node* %call15) #8, !dbg !11929
  call void @llvm.dbg.value(metadata i8* %call28, metadata !11894, metadata !DIExpression()), !dbg !11902
  %cmp29 = icmp eq i8* %call28, null, !dbg !11930
  br i1 %cmp29, label %if.end67, label %if.then30, !dbg !11931

if.then30:                                        ; preds = %if.end27
  %0 = load i64, i64* @target_percent, align 8, !dbg !11932
  %conv = trunc i64 %0 to i32, !dbg !11932
  %call31 = tail call i8* @strchr(i8* nonnull %call28, i32 %conv) #7, !dbg !11933
  %cmp32 = icmp eq i8* %call31, null, !dbg !11934
  br i1 %cmp32, label %if.then34, label %if.else, !dbg !11935

if.then34:                                        ; preds = %if.then30
  %cmp35 = icmp ne i32 %fcode, 539, !dbg !11936
  %cmp37 = icmp eq i32 %call, 4, !dbg !11939
  %or.cond = or i1 %cmp35, %cmp37, !dbg !11940
  br i1 %or.cond, label %if.then39, label %if.end67, !dbg !11940

if.then39:                                        ; preds = %if.then34
  %1 = load %union.tree_node*, %union.tree_node** getelementptr inbounds ([131 x %union.tree_node*], [131 x %union.tree_node*]* @global_trees, i64 0, i64 41), align 8, !dbg !11941
  %call40 = tail call i64 @strlen(i8* nonnull %call28) #7, !dbg !11942
  %call41 = tail call %union.tree_node* @build_int_cstu(%union.tree_node* %1, i64 %call40) #7, !dbg !11943
  call void @llvm.dbg.value(metadata %union.tree_node* %call41, metadata !11890, metadata !DIExpression()), !dbg !11902
  br label %if.end67, !dbg !11944

if.else:                                          ; preds = %if.then30
  %cmp43 = icmp eq i32 %fcode, 539, !dbg !11945
  br i1 %cmp43, label %land.lhs.true, label %if.end67, !dbg !11946

land.lhs.true:                                    ; preds = %if.else
  %call45 = tail call i32 @strcmp(i8* nonnull %call28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !11947
  %cmp46 = icmp eq i32 %call45, 0, !dbg !11948
  %cmp49 = icmp eq i32 %call, 5, !dbg !11949
  %or.cond1 = and i1 %cmp46, %cmp49, !dbg !11951
  br i1 %or.cond1, label %if.then51, label %if.end67, !dbg !11951

if.then51:                                        ; preds = %land.lhs.true
  %call52 = tail call fastcc %union.tree_node* @gimple_call_arg(%union.gimple_statement_d* %stmt, i32 4) #8, !dbg !11952
  call void @llvm.dbg.value(metadata %union.tree_node* %call52, metadata !11896, metadata !DIExpression()), !dbg !11954
  %call53 = tail call fastcc zeroext i8 @validate_arg(%union.tree_node* %call52, i32 10) #8, !dbg !11955
  %tobool54 = icmp eq i8 %call53, 0, !dbg !11955
  br i1 %tobool54, label %if.end67, label %if.then55, !dbg !11957

if.then55:                                        ; preds = %if.then51
  %call56 = tail call %union.tree_node* @c_strlen(%union.tree_node* %call52, i32 1) #8, !dbg !11958
  call void @llvm.dbg.value(metadata %union.tree_node* %call56, metadata !11890, metadata !DIExpression()), !dbg !11902
  %tobool57 = icmp eq %union.tree_node* %call56, null, !dbg !11960
  br i1 %tobool57, label %if.then61, label %lor.lhs.false58, !dbg !11962

lor.lhs.false58:                                  ; preds = %if.then55
  %call59 = tail call i32 @host_integerp(%union.tree_node* nonnull %call56, i32 1) #7, !dbg !11963
  %tobool60 = icmp eq i32 %call59, 0, !dbg !11963
  br i1 %tobool60, label %if.then61, label %if.end67, !dbg !11964

if.then61:                                        ; preds = %lor.lhs.false58, %if.then55
  call void @llvm.dbg.value(metadata %union.tree_node* null, metadata !11890, metadata !DIExpression()), !dbg !11902
  br label %if.end67, !dbg !11965

if.end67:                                         ; preds = %lor.lhs.false58, %if.then51, %if.end27, %if.then34, %if.then39, %if.then61, %land.lhs.true, %if.else
  %len.6 = phi %union.tree_node* [ null, %if.end27 ], [ %call41, %if.then39 ], [ null, %if.then34 ], [ null, %land.lhs.true ], [ null, %if.else ], [ null, %if.then51 ], [ %call56, %lor.lhs.false58 ], [ null, %if.then61 ], !dbg !11902
  call void @llvm.dbg.value(metadata %union.tree_node* %len.6, metadata !11890, metadata !DIExpression()), !dbg !11902
  %call68 = tail call i32 @integer_all_onesp(%union.tree_node* %call10) #7, !dbg !11966
  %tobool69 = icmp eq i32 %call68, 0, !dbg !11966
  br i1 %tobool69, label %if.then70, label %if.end77, !dbg !11968

if.then70:                                        ; preds = %if.end67
  %tobool71 = icmp eq %union.tree_node* %len.6, null, !dbg !11969
  br i1 %tobool71, label %cleanup, label %lor.lhs.false72, !dbg !11972

lor.lhs.false72:                                  ; preds = %if.then70
  %call73 = tail call i32 @tree_int_cst_lt(%union.tree_node* nonnull %len.6, %union.tree_node* %call10) #7, !dbg !11973
  %tobool74 = icmp eq i32 %call73, 0, !dbg !11973
  br i1 %tobool74, label %cleanup, label %if.end77, !dbg !11974

if.end77:                                         ; preds = %lor.lhs.false72, %if.end67
  %call78 = tail call i32 @integer_zerop(%union.tree_node* %call5) #7, !dbg !11975
  %tobool79 = icmp eq i32 %call78, 0, !dbg !11975
  br i1 %tobool79, label %if.then80, label %if.end94, !dbg !11977

if.then80:                                        ; preds = %if.end77
  br i1 %cmp29, label %cleanup, label %if.end84, !dbg !11978

if.end84:                                         ; preds = %if.then80
  %2 = load i64, i64* @target_percent, align 8, !dbg !11980
  %conv85 = trunc i64 %2 to i32, !dbg !11980
  %call86 = tail call i8* @strchr(i8* nonnull %call28, i32 %conv85) #7, !dbg !11982
  %cmp87 = icmp eq i8* %call86, null, !dbg !11983
  br i1 %cmp87, label %if.end94, label %land.lhs.true89, !dbg !11984

land.lhs.true89:                                  ; preds = %if.end84
  %call90 = tail call i32 @strcmp(i8* nonnull %call28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @target_percent_s, i64 0, i64 0)) #7, !dbg !11985
  %tobool91 = icmp eq i32 %call90, 0, !dbg !11985
  br i1 %tobool91, label %if.end94, label %cleanup, !dbg !11986

if.end94:                                         ; preds = %land.lhs.true89, %if.end84, %if.end77
  %cmp95 = icmp eq i32 %fcode, 541, !dbg !11987
  %cond = select i1 %cmp95, i64 380, i64 373, !dbg !11988
  %arrayidx = getelementptr inbounds [721 x %union.tree_node*], [721 x %union.tree_node*]* @built_in_decls, i64 0, i64 %cond, !dbg !11989
  %3 = load %union.tree_node*, %union.tree_node** %arrayidx, align 8, !dbg !11989
  call void @llvm.dbg.value(metadata %union.tree_node* %3, metadata !11891, metadata !DIExpression()), !dbg !11902
  %tobool97 = icmp eq %union.tree_node* %3, null, !dbg !11990
  br i1 %tobool97, label %cleanup, label %if.end99, !dbg !11992

if.end99:                                         ; preds = %if.end94
  %call100 = tail call %union.tree_node* (%union.gimple_statement_d*, i32, %union.tree_node*, i32, ...) @gimple_rewrite_call_expr(%union.gimple_statement_d* %stmt, i32 4, %union.tree_node* nonnull %3, i32 2, %union.tree_node* %call1, %union.tree_node* %call15) #8, !dbg !11993
  br label %cleanup, !dbg !11994

cleanup:                                          ; preds = %land.lhs.true89, %if.end94, %lor.lhs.false72, %if.then70, %if.end23, %if.end19, %if.end14, %if.end9, %if.end4, %if.end, %if.then80, %entry, %if.end99
  %retval.0 = phi %union.tree_node* [ %call100, %if.end99 ], [ null, %entry ], [ null, %if.end ], [ null, %if.end4 ], [ null, %if.end9 ], [ null, %if.end14 ], [ null, %if.end19 ], [ null, %if.end23 ], [ null, %lor.lhs.false72 ], [ null, %if.then70 ], [ null, %if.then80 ], [ null, %land.lhs.true89 ], [ null, %if.end94 ], !dbg !11902
  ret %union.tree_node* %retval.0, !dbg !11995
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nobuiltin nounwind }
attributes #8 = { nobuiltin }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!4383, !4384, !4385}
!llvm.ident = !{!4386}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "built_in_class_names", scope: !2, file: !3, line: 66, type: !4379, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !2864, globals: !4302, nameTableKind: None)
!3 = !DIFile(filename: "builtins.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !329, !336, !342, !347, !352, !370, !377, !384, !527, !1247, !1255, !1277, !1287, !1308, !2800, !2838}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !135, line: 39, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328}
!137 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!141 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!142 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!143 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!144 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!145 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!146 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!147 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!148 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!149 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!150 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!151 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!152 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!153 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!154 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!155 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!156 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!157 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!158 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!159 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!160 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!161 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!162 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!163 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!164 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!165 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!166 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!167 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!168 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!169 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!170 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!171 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!172 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!173 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!174 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!175 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!176 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!177 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!178 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!179 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!180 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!181 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!182 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!183 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!184 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!185 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!186 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!187 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!188 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!189 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!190 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!191 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!192 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!193 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!194 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!195 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!196 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!197 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!198 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!199 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!200 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!201 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!202 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!203 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!204 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!205 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!206 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!207 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!208 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!209 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!210 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!211 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!212 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!213 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!214 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!215 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!216 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!217 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!218 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!219 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!220 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!221 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!222 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!223 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!224 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!226 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!228 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!229 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!230 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!231 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!232 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!233 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!234 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!235 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!236 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!237 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!238 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!239 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!240 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!241 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!242 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!243 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!244 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!245 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!246 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!247 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!248 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!249 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!250 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!251 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!252 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!253 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!254 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!255 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!256 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!257 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!258 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!259 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!260 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!261 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!262 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!263 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!264 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!265 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!266 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!267 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!268 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!269 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!270 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!271 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!272 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!273 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!274 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!275 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!276 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!277 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!278 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!279 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!280 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!281 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!282 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!283 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!284 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!285 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!286 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!287 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!288 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!289 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!290 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!291 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!292 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!293 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!294 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!295 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!296 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!297 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!298 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!299 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!300 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!301 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!302 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!303 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!304 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!305 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!306 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!307 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!308 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!309 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!310 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!311 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!312 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!313 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!314 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!315 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!316 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!317 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!318 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!319 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!320 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!321 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!322 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!323 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!324 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!325 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!326 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!327 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!328 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!329 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !330, line: 30, baseType: !7, size: 32, elements: !331)
!330 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!331 = !{!332, !333, !334, !335}
!332 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!333 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!334 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!335 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!336 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !337, line: 363, baseType: !7, size: 32, elements: !338)
!337 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!338 = !{!339, !340, !341}
!339 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!340 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!341 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !337, line: 355, baseType: !7, size: 32, elements: !343)
!343 = !{!344, !345, !346}
!344 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !348, line: 474, baseType: !7, size: 32, elements: !349)
!348 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!349 = !{!350, !351}
!350 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!351 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!352 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !135, line: 280, baseType: !7, size: 32, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!354 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!356 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!357 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!369 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !135, line: 1817, baseType: !7, size: 32, elements: !371)
!371 = !{!372, !373, !374, !375, !376}
!372 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!373 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!374 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!375 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!376 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !135, line: 1805, baseType: !7, size: 32, elements: !378)
!378 = !{!379, !380, !381, !382, !383}
!379 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!380 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!381 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!382 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!383 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !385, line: 45, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526}
!387 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!419 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!421 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!422 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!423 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!424 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!425 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!426 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!427 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!428 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!429 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!430 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!431 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!432 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!433 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!434 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!435 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!436 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!437 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!438 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!439 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!440 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!441 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!442 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!443 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!444 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!445 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!446 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!447 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!448 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!449 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!450 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!451 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!452 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!453 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!454 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!455 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!456 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!457 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!458 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!459 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!460 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!461 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!462 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!463 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!464 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!465 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!466 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!467 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!468 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!469 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!470 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!471 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!472 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!473 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!474 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!475 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!476 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!477 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!478 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!479 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!480 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!481 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!482 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!483 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!484 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!485 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!486 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!487 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!488 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!489 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!490 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!491 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!492 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!493 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!494 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!495 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!496 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!497 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!498 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!499 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!500 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!501 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!502 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!503 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!504 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!505 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!506 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!507 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!508 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!509 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!510 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!511 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!512 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!513 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!514 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!515 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!517 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!518 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!519 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!520 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!521 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!522 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!523 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!524 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!525 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!526 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!527 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "built_in_function", file: !135, line: 220, baseType: !7, size: 32, elements: !528)
!528 = !{!529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246}
!529 = !DIEnumerator(name: "BUILT_IN_ACOS", value: 0, isUnsigned: true)
!530 = !DIEnumerator(name: "BUILT_IN_ACOSF", value: 1, isUnsigned: true)
!531 = !DIEnumerator(name: "BUILT_IN_ACOSH", value: 2, isUnsigned: true)
!532 = !DIEnumerator(name: "BUILT_IN_ACOSHF", value: 3, isUnsigned: true)
!533 = !DIEnumerator(name: "BUILT_IN_ACOSHL", value: 4, isUnsigned: true)
!534 = !DIEnumerator(name: "BUILT_IN_ACOSL", value: 5, isUnsigned: true)
!535 = !DIEnumerator(name: "BUILT_IN_ASIN", value: 6, isUnsigned: true)
!536 = !DIEnumerator(name: "BUILT_IN_ASINF", value: 7, isUnsigned: true)
!537 = !DIEnumerator(name: "BUILT_IN_ASINH", value: 8, isUnsigned: true)
!538 = !DIEnumerator(name: "BUILT_IN_ASINHF", value: 9, isUnsigned: true)
!539 = !DIEnumerator(name: "BUILT_IN_ASINHL", value: 10, isUnsigned: true)
!540 = !DIEnumerator(name: "BUILT_IN_ASINL", value: 11, isUnsigned: true)
!541 = !DIEnumerator(name: "BUILT_IN_ATAN", value: 12, isUnsigned: true)
!542 = !DIEnumerator(name: "BUILT_IN_ATAN2", value: 13, isUnsigned: true)
!543 = !DIEnumerator(name: "BUILT_IN_ATAN2F", value: 14, isUnsigned: true)
!544 = !DIEnumerator(name: "BUILT_IN_ATAN2L", value: 15, isUnsigned: true)
!545 = !DIEnumerator(name: "BUILT_IN_ATANF", value: 16, isUnsigned: true)
!546 = !DIEnumerator(name: "BUILT_IN_ATANH", value: 17, isUnsigned: true)
!547 = !DIEnumerator(name: "BUILT_IN_ATANHF", value: 18, isUnsigned: true)
!548 = !DIEnumerator(name: "BUILT_IN_ATANHL", value: 19, isUnsigned: true)
!549 = !DIEnumerator(name: "BUILT_IN_ATANL", value: 20, isUnsigned: true)
!550 = !DIEnumerator(name: "BUILT_IN_CBRT", value: 21, isUnsigned: true)
!551 = !DIEnumerator(name: "BUILT_IN_CBRTF", value: 22, isUnsigned: true)
!552 = !DIEnumerator(name: "BUILT_IN_CBRTL", value: 23, isUnsigned: true)
!553 = !DIEnumerator(name: "BUILT_IN_CEIL", value: 24, isUnsigned: true)
!554 = !DIEnumerator(name: "BUILT_IN_CEILF", value: 25, isUnsigned: true)
!555 = !DIEnumerator(name: "BUILT_IN_CEILL", value: 26, isUnsigned: true)
!556 = !DIEnumerator(name: "BUILT_IN_COPYSIGN", value: 27, isUnsigned: true)
!557 = !DIEnumerator(name: "BUILT_IN_COPYSIGNF", value: 28, isUnsigned: true)
!558 = !DIEnumerator(name: "BUILT_IN_COPYSIGNL", value: 29, isUnsigned: true)
!559 = !DIEnumerator(name: "BUILT_IN_COS", value: 30, isUnsigned: true)
!560 = !DIEnumerator(name: "BUILT_IN_COSF", value: 31, isUnsigned: true)
!561 = !DIEnumerator(name: "BUILT_IN_COSH", value: 32, isUnsigned: true)
!562 = !DIEnumerator(name: "BUILT_IN_COSHF", value: 33, isUnsigned: true)
!563 = !DIEnumerator(name: "BUILT_IN_COSHL", value: 34, isUnsigned: true)
!564 = !DIEnumerator(name: "BUILT_IN_COSL", value: 35, isUnsigned: true)
!565 = !DIEnumerator(name: "BUILT_IN_DREM", value: 36, isUnsigned: true)
!566 = !DIEnumerator(name: "BUILT_IN_DREMF", value: 37, isUnsigned: true)
!567 = !DIEnumerator(name: "BUILT_IN_DREML", value: 38, isUnsigned: true)
!568 = !DIEnumerator(name: "BUILT_IN_ERF", value: 39, isUnsigned: true)
!569 = !DIEnumerator(name: "BUILT_IN_ERFC", value: 40, isUnsigned: true)
!570 = !DIEnumerator(name: "BUILT_IN_ERFCF", value: 41, isUnsigned: true)
!571 = !DIEnumerator(name: "BUILT_IN_ERFCL", value: 42, isUnsigned: true)
!572 = !DIEnumerator(name: "BUILT_IN_ERFF", value: 43, isUnsigned: true)
!573 = !DIEnumerator(name: "BUILT_IN_ERFL", value: 44, isUnsigned: true)
!574 = !DIEnumerator(name: "BUILT_IN_EXP", value: 45, isUnsigned: true)
!575 = !DIEnumerator(name: "BUILT_IN_EXP10", value: 46, isUnsigned: true)
!576 = !DIEnumerator(name: "BUILT_IN_EXP10F", value: 47, isUnsigned: true)
!577 = !DIEnumerator(name: "BUILT_IN_EXP10L", value: 48, isUnsigned: true)
!578 = !DIEnumerator(name: "BUILT_IN_EXP2", value: 49, isUnsigned: true)
!579 = !DIEnumerator(name: "BUILT_IN_EXP2F", value: 50, isUnsigned: true)
!580 = !DIEnumerator(name: "BUILT_IN_EXP2L", value: 51, isUnsigned: true)
!581 = !DIEnumerator(name: "BUILT_IN_EXPF", value: 52, isUnsigned: true)
!582 = !DIEnumerator(name: "BUILT_IN_EXPL", value: 53, isUnsigned: true)
!583 = !DIEnumerator(name: "BUILT_IN_EXPM1", value: 54, isUnsigned: true)
!584 = !DIEnumerator(name: "BUILT_IN_EXPM1F", value: 55, isUnsigned: true)
!585 = !DIEnumerator(name: "BUILT_IN_EXPM1L", value: 56, isUnsigned: true)
!586 = !DIEnumerator(name: "BUILT_IN_FABS", value: 57, isUnsigned: true)
!587 = !DIEnumerator(name: "BUILT_IN_FABSF", value: 58, isUnsigned: true)
!588 = !DIEnumerator(name: "BUILT_IN_FABSL", value: 59, isUnsigned: true)
!589 = !DIEnumerator(name: "BUILT_IN_FDIM", value: 60, isUnsigned: true)
!590 = !DIEnumerator(name: "BUILT_IN_FDIMF", value: 61, isUnsigned: true)
!591 = !DIEnumerator(name: "BUILT_IN_FDIML", value: 62, isUnsigned: true)
!592 = !DIEnumerator(name: "BUILT_IN_FLOOR", value: 63, isUnsigned: true)
!593 = !DIEnumerator(name: "BUILT_IN_FLOORF", value: 64, isUnsigned: true)
!594 = !DIEnumerator(name: "BUILT_IN_FLOORL", value: 65, isUnsigned: true)
!595 = !DIEnumerator(name: "BUILT_IN_FMA", value: 66, isUnsigned: true)
!596 = !DIEnumerator(name: "BUILT_IN_FMAF", value: 67, isUnsigned: true)
!597 = !DIEnumerator(name: "BUILT_IN_FMAL", value: 68, isUnsigned: true)
!598 = !DIEnumerator(name: "BUILT_IN_FMAX", value: 69, isUnsigned: true)
!599 = !DIEnumerator(name: "BUILT_IN_FMAXF", value: 70, isUnsigned: true)
!600 = !DIEnumerator(name: "BUILT_IN_FMAXL", value: 71, isUnsigned: true)
!601 = !DIEnumerator(name: "BUILT_IN_FMIN", value: 72, isUnsigned: true)
!602 = !DIEnumerator(name: "BUILT_IN_FMINF", value: 73, isUnsigned: true)
!603 = !DIEnumerator(name: "BUILT_IN_FMINL", value: 74, isUnsigned: true)
!604 = !DIEnumerator(name: "BUILT_IN_FMOD", value: 75, isUnsigned: true)
!605 = !DIEnumerator(name: "BUILT_IN_FMODF", value: 76, isUnsigned: true)
!606 = !DIEnumerator(name: "BUILT_IN_FMODL", value: 77, isUnsigned: true)
!607 = !DIEnumerator(name: "BUILT_IN_FREXP", value: 78, isUnsigned: true)
!608 = !DIEnumerator(name: "BUILT_IN_FREXPF", value: 79, isUnsigned: true)
!609 = !DIEnumerator(name: "BUILT_IN_FREXPL", value: 80, isUnsigned: true)
!610 = !DIEnumerator(name: "BUILT_IN_GAMMA", value: 81, isUnsigned: true)
!611 = !DIEnumerator(name: "BUILT_IN_GAMMAF", value: 82, isUnsigned: true)
!612 = !DIEnumerator(name: "BUILT_IN_GAMMAL", value: 83, isUnsigned: true)
!613 = !DIEnumerator(name: "BUILT_IN_GAMMA_R", value: 84, isUnsigned: true)
!614 = !DIEnumerator(name: "BUILT_IN_GAMMAF_R", value: 85, isUnsigned: true)
!615 = !DIEnumerator(name: "BUILT_IN_GAMMAL_R", value: 86, isUnsigned: true)
!616 = !DIEnumerator(name: "BUILT_IN_HUGE_VAL", value: 87, isUnsigned: true)
!617 = !DIEnumerator(name: "BUILT_IN_HUGE_VALF", value: 88, isUnsigned: true)
!618 = !DIEnumerator(name: "BUILT_IN_HUGE_VALL", value: 89, isUnsigned: true)
!619 = !DIEnumerator(name: "BUILT_IN_HYPOT", value: 90, isUnsigned: true)
!620 = !DIEnumerator(name: "BUILT_IN_HYPOTF", value: 91, isUnsigned: true)
!621 = !DIEnumerator(name: "BUILT_IN_HYPOTL", value: 92, isUnsigned: true)
!622 = !DIEnumerator(name: "BUILT_IN_ILOGB", value: 93, isUnsigned: true)
!623 = !DIEnumerator(name: "BUILT_IN_ILOGBF", value: 94, isUnsigned: true)
!624 = !DIEnumerator(name: "BUILT_IN_ILOGBL", value: 95, isUnsigned: true)
!625 = !DIEnumerator(name: "BUILT_IN_INF", value: 96, isUnsigned: true)
!626 = !DIEnumerator(name: "BUILT_IN_INFF", value: 97, isUnsigned: true)
!627 = !DIEnumerator(name: "BUILT_IN_INFL", value: 98, isUnsigned: true)
!628 = !DIEnumerator(name: "BUILT_IN_INFD32", value: 99, isUnsigned: true)
!629 = !DIEnumerator(name: "BUILT_IN_INFD64", value: 100, isUnsigned: true)
!630 = !DIEnumerator(name: "BUILT_IN_INFD128", value: 101, isUnsigned: true)
!631 = !DIEnumerator(name: "BUILT_IN_J0", value: 102, isUnsigned: true)
!632 = !DIEnumerator(name: "BUILT_IN_J0F", value: 103, isUnsigned: true)
!633 = !DIEnumerator(name: "BUILT_IN_J0L", value: 104, isUnsigned: true)
!634 = !DIEnumerator(name: "BUILT_IN_J1", value: 105, isUnsigned: true)
!635 = !DIEnumerator(name: "BUILT_IN_J1F", value: 106, isUnsigned: true)
!636 = !DIEnumerator(name: "BUILT_IN_J1L", value: 107, isUnsigned: true)
!637 = !DIEnumerator(name: "BUILT_IN_JN", value: 108, isUnsigned: true)
!638 = !DIEnumerator(name: "BUILT_IN_JNF", value: 109, isUnsigned: true)
!639 = !DIEnumerator(name: "BUILT_IN_JNL", value: 110, isUnsigned: true)
!640 = !DIEnumerator(name: "BUILT_IN_LCEIL", value: 111, isUnsigned: true)
!641 = !DIEnumerator(name: "BUILT_IN_LCEILF", value: 112, isUnsigned: true)
!642 = !DIEnumerator(name: "BUILT_IN_LCEILL", value: 113, isUnsigned: true)
!643 = !DIEnumerator(name: "BUILT_IN_LDEXP", value: 114, isUnsigned: true)
!644 = !DIEnumerator(name: "BUILT_IN_LDEXPF", value: 115, isUnsigned: true)
!645 = !DIEnumerator(name: "BUILT_IN_LDEXPL", value: 116, isUnsigned: true)
!646 = !DIEnumerator(name: "BUILT_IN_LFLOOR", value: 117, isUnsigned: true)
!647 = !DIEnumerator(name: "BUILT_IN_LFLOORF", value: 118, isUnsigned: true)
!648 = !DIEnumerator(name: "BUILT_IN_LFLOORL", value: 119, isUnsigned: true)
!649 = !DIEnumerator(name: "BUILT_IN_LGAMMA", value: 120, isUnsigned: true)
!650 = !DIEnumerator(name: "BUILT_IN_LGAMMAF", value: 121, isUnsigned: true)
!651 = !DIEnumerator(name: "BUILT_IN_LGAMMAL", value: 122, isUnsigned: true)
!652 = !DIEnumerator(name: "BUILT_IN_LGAMMA_R", value: 123, isUnsigned: true)
!653 = !DIEnumerator(name: "BUILT_IN_LGAMMAF_R", value: 124, isUnsigned: true)
!654 = !DIEnumerator(name: "BUILT_IN_LGAMMAL_R", value: 125, isUnsigned: true)
!655 = !DIEnumerator(name: "BUILT_IN_LLCEIL", value: 126, isUnsigned: true)
!656 = !DIEnumerator(name: "BUILT_IN_LLCEILF", value: 127, isUnsigned: true)
!657 = !DIEnumerator(name: "BUILT_IN_LLCEILL", value: 128, isUnsigned: true)
!658 = !DIEnumerator(name: "BUILT_IN_LLFLOOR", value: 129, isUnsigned: true)
!659 = !DIEnumerator(name: "BUILT_IN_LLFLOORF", value: 130, isUnsigned: true)
!660 = !DIEnumerator(name: "BUILT_IN_LLFLOORL", value: 131, isUnsigned: true)
!661 = !DIEnumerator(name: "BUILT_IN_LLRINT", value: 132, isUnsigned: true)
!662 = !DIEnumerator(name: "BUILT_IN_LLRINTF", value: 133, isUnsigned: true)
!663 = !DIEnumerator(name: "BUILT_IN_LLRINTL", value: 134, isUnsigned: true)
!664 = !DIEnumerator(name: "BUILT_IN_LLROUND", value: 135, isUnsigned: true)
!665 = !DIEnumerator(name: "BUILT_IN_LLROUNDF", value: 136, isUnsigned: true)
!666 = !DIEnumerator(name: "BUILT_IN_LLROUNDL", value: 137, isUnsigned: true)
!667 = !DIEnumerator(name: "BUILT_IN_LOG", value: 138, isUnsigned: true)
!668 = !DIEnumerator(name: "BUILT_IN_LOG10", value: 139, isUnsigned: true)
!669 = !DIEnumerator(name: "BUILT_IN_LOG10F", value: 140, isUnsigned: true)
!670 = !DIEnumerator(name: "BUILT_IN_LOG10L", value: 141, isUnsigned: true)
!671 = !DIEnumerator(name: "BUILT_IN_LOG1P", value: 142, isUnsigned: true)
!672 = !DIEnumerator(name: "BUILT_IN_LOG1PF", value: 143, isUnsigned: true)
!673 = !DIEnumerator(name: "BUILT_IN_LOG1PL", value: 144, isUnsigned: true)
!674 = !DIEnumerator(name: "BUILT_IN_LOG2", value: 145, isUnsigned: true)
!675 = !DIEnumerator(name: "BUILT_IN_LOG2F", value: 146, isUnsigned: true)
!676 = !DIEnumerator(name: "BUILT_IN_LOG2L", value: 147, isUnsigned: true)
!677 = !DIEnumerator(name: "BUILT_IN_LOGB", value: 148, isUnsigned: true)
!678 = !DIEnumerator(name: "BUILT_IN_LOGBF", value: 149, isUnsigned: true)
!679 = !DIEnumerator(name: "BUILT_IN_LOGBL", value: 150, isUnsigned: true)
!680 = !DIEnumerator(name: "BUILT_IN_LOGF", value: 151, isUnsigned: true)
!681 = !DIEnumerator(name: "BUILT_IN_LOGL", value: 152, isUnsigned: true)
!682 = !DIEnumerator(name: "BUILT_IN_LRINT", value: 153, isUnsigned: true)
!683 = !DIEnumerator(name: "BUILT_IN_LRINTF", value: 154, isUnsigned: true)
!684 = !DIEnumerator(name: "BUILT_IN_LRINTL", value: 155, isUnsigned: true)
!685 = !DIEnumerator(name: "BUILT_IN_LROUND", value: 156, isUnsigned: true)
!686 = !DIEnumerator(name: "BUILT_IN_LROUNDF", value: 157, isUnsigned: true)
!687 = !DIEnumerator(name: "BUILT_IN_LROUNDL", value: 158, isUnsigned: true)
!688 = !DIEnumerator(name: "BUILT_IN_MODF", value: 159, isUnsigned: true)
!689 = !DIEnumerator(name: "BUILT_IN_MODFF", value: 160, isUnsigned: true)
!690 = !DIEnumerator(name: "BUILT_IN_MODFL", value: 161, isUnsigned: true)
!691 = !DIEnumerator(name: "BUILT_IN_NAN", value: 162, isUnsigned: true)
!692 = !DIEnumerator(name: "BUILT_IN_NANF", value: 163, isUnsigned: true)
!693 = !DIEnumerator(name: "BUILT_IN_NANL", value: 164, isUnsigned: true)
!694 = !DIEnumerator(name: "BUILT_IN_NAND32", value: 165, isUnsigned: true)
!695 = !DIEnumerator(name: "BUILT_IN_NAND64", value: 166, isUnsigned: true)
!696 = !DIEnumerator(name: "BUILT_IN_NAND128", value: 167, isUnsigned: true)
!697 = !DIEnumerator(name: "BUILT_IN_NANS", value: 168, isUnsigned: true)
!698 = !DIEnumerator(name: "BUILT_IN_NANSF", value: 169, isUnsigned: true)
!699 = !DIEnumerator(name: "BUILT_IN_NANSL", value: 170, isUnsigned: true)
!700 = !DIEnumerator(name: "BUILT_IN_NEARBYINT", value: 171, isUnsigned: true)
!701 = !DIEnumerator(name: "BUILT_IN_NEARBYINTF", value: 172, isUnsigned: true)
!702 = !DIEnumerator(name: "BUILT_IN_NEARBYINTL", value: 173, isUnsigned: true)
!703 = !DIEnumerator(name: "BUILT_IN_NEXTAFTER", value: 174, isUnsigned: true)
!704 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERF", value: 175, isUnsigned: true)
!705 = !DIEnumerator(name: "BUILT_IN_NEXTAFTERL", value: 176, isUnsigned: true)
!706 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARD", value: 177, isUnsigned: true)
!707 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDF", value: 178, isUnsigned: true)
!708 = !DIEnumerator(name: "BUILT_IN_NEXTTOWARDL", value: 179, isUnsigned: true)
!709 = !DIEnumerator(name: "BUILT_IN_POW", value: 180, isUnsigned: true)
!710 = !DIEnumerator(name: "BUILT_IN_POW10", value: 181, isUnsigned: true)
!711 = !DIEnumerator(name: "BUILT_IN_POW10F", value: 182, isUnsigned: true)
!712 = !DIEnumerator(name: "BUILT_IN_POW10L", value: 183, isUnsigned: true)
!713 = !DIEnumerator(name: "BUILT_IN_POWF", value: 184, isUnsigned: true)
!714 = !DIEnumerator(name: "BUILT_IN_POWI", value: 185, isUnsigned: true)
!715 = !DIEnumerator(name: "BUILT_IN_POWIF", value: 186, isUnsigned: true)
!716 = !DIEnumerator(name: "BUILT_IN_POWIL", value: 187, isUnsigned: true)
!717 = !DIEnumerator(name: "BUILT_IN_POWL", value: 188, isUnsigned: true)
!718 = !DIEnumerator(name: "BUILT_IN_REMAINDER", value: 189, isUnsigned: true)
!719 = !DIEnumerator(name: "BUILT_IN_REMAINDERF", value: 190, isUnsigned: true)
!720 = !DIEnumerator(name: "BUILT_IN_REMAINDERL", value: 191, isUnsigned: true)
!721 = !DIEnumerator(name: "BUILT_IN_REMQUO", value: 192, isUnsigned: true)
!722 = !DIEnumerator(name: "BUILT_IN_REMQUOF", value: 193, isUnsigned: true)
!723 = !DIEnumerator(name: "BUILT_IN_REMQUOL", value: 194, isUnsigned: true)
!724 = !DIEnumerator(name: "BUILT_IN_RINT", value: 195, isUnsigned: true)
!725 = !DIEnumerator(name: "BUILT_IN_RINTF", value: 196, isUnsigned: true)
!726 = !DIEnumerator(name: "BUILT_IN_RINTL", value: 197, isUnsigned: true)
!727 = !DIEnumerator(name: "BUILT_IN_ROUND", value: 198, isUnsigned: true)
!728 = !DIEnumerator(name: "BUILT_IN_ROUNDF", value: 199, isUnsigned: true)
!729 = !DIEnumerator(name: "BUILT_IN_ROUNDL", value: 200, isUnsigned: true)
!730 = !DIEnumerator(name: "BUILT_IN_SCALB", value: 201, isUnsigned: true)
!731 = !DIEnumerator(name: "BUILT_IN_SCALBF", value: 202, isUnsigned: true)
!732 = !DIEnumerator(name: "BUILT_IN_SCALBL", value: 203, isUnsigned: true)
!733 = !DIEnumerator(name: "BUILT_IN_SCALBLN", value: 204, isUnsigned: true)
!734 = !DIEnumerator(name: "BUILT_IN_SCALBLNF", value: 205, isUnsigned: true)
!735 = !DIEnumerator(name: "BUILT_IN_SCALBLNL", value: 206, isUnsigned: true)
!736 = !DIEnumerator(name: "BUILT_IN_SCALBN", value: 207, isUnsigned: true)
!737 = !DIEnumerator(name: "BUILT_IN_SCALBNF", value: 208, isUnsigned: true)
!738 = !DIEnumerator(name: "BUILT_IN_SCALBNL", value: 209, isUnsigned: true)
!739 = !DIEnumerator(name: "BUILT_IN_SIGNBIT", value: 210, isUnsigned: true)
!740 = !DIEnumerator(name: "BUILT_IN_SIGNBITF", value: 211, isUnsigned: true)
!741 = !DIEnumerator(name: "BUILT_IN_SIGNBITL", value: 212, isUnsigned: true)
!742 = !DIEnumerator(name: "BUILT_IN_SIGNBITD32", value: 213, isUnsigned: true)
!743 = !DIEnumerator(name: "BUILT_IN_SIGNBITD64", value: 214, isUnsigned: true)
!744 = !DIEnumerator(name: "BUILT_IN_SIGNBITD128", value: 215, isUnsigned: true)
!745 = !DIEnumerator(name: "BUILT_IN_SIGNIFICAND", value: 216, isUnsigned: true)
!746 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDF", value: 217, isUnsigned: true)
!747 = !DIEnumerator(name: "BUILT_IN_SIGNIFICANDL", value: 218, isUnsigned: true)
!748 = !DIEnumerator(name: "BUILT_IN_SIN", value: 219, isUnsigned: true)
!749 = !DIEnumerator(name: "BUILT_IN_SINCOS", value: 220, isUnsigned: true)
!750 = !DIEnumerator(name: "BUILT_IN_SINCOSF", value: 221, isUnsigned: true)
!751 = !DIEnumerator(name: "BUILT_IN_SINCOSL", value: 222, isUnsigned: true)
!752 = !DIEnumerator(name: "BUILT_IN_SINF", value: 223, isUnsigned: true)
!753 = !DIEnumerator(name: "BUILT_IN_SINH", value: 224, isUnsigned: true)
!754 = !DIEnumerator(name: "BUILT_IN_SINHF", value: 225, isUnsigned: true)
!755 = !DIEnumerator(name: "BUILT_IN_SINHL", value: 226, isUnsigned: true)
!756 = !DIEnumerator(name: "BUILT_IN_SINL", value: 227, isUnsigned: true)
!757 = !DIEnumerator(name: "BUILT_IN_SQRT", value: 228, isUnsigned: true)
!758 = !DIEnumerator(name: "BUILT_IN_SQRTF", value: 229, isUnsigned: true)
!759 = !DIEnumerator(name: "BUILT_IN_SQRTL", value: 230, isUnsigned: true)
!760 = !DIEnumerator(name: "BUILT_IN_TAN", value: 231, isUnsigned: true)
!761 = !DIEnumerator(name: "BUILT_IN_TANF", value: 232, isUnsigned: true)
!762 = !DIEnumerator(name: "BUILT_IN_TANH", value: 233, isUnsigned: true)
!763 = !DIEnumerator(name: "BUILT_IN_TANHF", value: 234, isUnsigned: true)
!764 = !DIEnumerator(name: "BUILT_IN_TANHL", value: 235, isUnsigned: true)
!765 = !DIEnumerator(name: "BUILT_IN_TANL", value: 236, isUnsigned: true)
!766 = !DIEnumerator(name: "BUILT_IN_TGAMMA", value: 237, isUnsigned: true)
!767 = !DIEnumerator(name: "BUILT_IN_TGAMMAF", value: 238, isUnsigned: true)
!768 = !DIEnumerator(name: "BUILT_IN_TGAMMAL", value: 239, isUnsigned: true)
!769 = !DIEnumerator(name: "BUILT_IN_TRUNC", value: 240, isUnsigned: true)
!770 = !DIEnumerator(name: "BUILT_IN_TRUNCF", value: 241, isUnsigned: true)
!771 = !DIEnumerator(name: "BUILT_IN_TRUNCL", value: 242, isUnsigned: true)
!772 = !DIEnumerator(name: "BUILT_IN_Y0", value: 243, isUnsigned: true)
!773 = !DIEnumerator(name: "BUILT_IN_Y0F", value: 244, isUnsigned: true)
!774 = !DIEnumerator(name: "BUILT_IN_Y0L", value: 245, isUnsigned: true)
!775 = !DIEnumerator(name: "BUILT_IN_Y1", value: 246, isUnsigned: true)
!776 = !DIEnumerator(name: "BUILT_IN_Y1F", value: 247, isUnsigned: true)
!777 = !DIEnumerator(name: "BUILT_IN_Y1L", value: 248, isUnsigned: true)
!778 = !DIEnumerator(name: "BUILT_IN_YN", value: 249, isUnsigned: true)
!779 = !DIEnumerator(name: "BUILT_IN_YNF", value: 250, isUnsigned: true)
!780 = !DIEnumerator(name: "BUILT_IN_YNL", value: 251, isUnsigned: true)
!781 = !DIEnumerator(name: "BUILT_IN_CABS", value: 252, isUnsigned: true)
!782 = !DIEnumerator(name: "BUILT_IN_CABSF", value: 253, isUnsigned: true)
!783 = !DIEnumerator(name: "BUILT_IN_CABSL", value: 254, isUnsigned: true)
!784 = !DIEnumerator(name: "BUILT_IN_CACOS", value: 255, isUnsigned: true)
!785 = !DIEnumerator(name: "BUILT_IN_CACOSF", value: 256, isUnsigned: true)
!786 = !DIEnumerator(name: "BUILT_IN_CACOSH", value: 257, isUnsigned: true)
!787 = !DIEnumerator(name: "BUILT_IN_CACOSHF", value: 258, isUnsigned: true)
!788 = !DIEnumerator(name: "BUILT_IN_CACOSHL", value: 259, isUnsigned: true)
!789 = !DIEnumerator(name: "BUILT_IN_CACOSL", value: 260, isUnsigned: true)
!790 = !DIEnumerator(name: "BUILT_IN_CARG", value: 261, isUnsigned: true)
!791 = !DIEnumerator(name: "BUILT_IN_CARGF", value: 262, isUnsigned: true)
!792 = !DIEnumerator(name: "BUILT_IN_CARGL", value: 263, isUnsigned: true)
!793 = !DIEnumerator(name: "BUILT_IN_CASIN", value: 264, isUnsigned: true)
!794 = !DIEnumerator(name: "BUILT_IN_CASINF", value: 265, isUnsigned: true)
!795 = !DIEnumerator(name: "BUILT_IN_CASINH", value: 266, isUnsigned: true)
!796 = !DIEnumerator(name: "BUILT_IN_CASINHF", value: 267, isUnsigned: true)
!797 = !DIEnumerator(name: "BUILT_IN_CASINHL", value: 268, isUnsigned: true)
!798 = !DIEnumerator(name: "BUILT_IN_CASINL", value: 269, isUnsigned: true)
!799 = !DIEnumerator(name: "BUILT_IN_CATAN", value: 270, isUnsigned: true)
!800 = !DIEnumerator(name: "BUILT_IN_CATANF", value: 271, isUnsigned: true)
!801 = !DIEnumerator(name: "BUILT_IN_CATANH", value: 272, isUnsigned: true)
!802 = !DIEnumerator(name: "BUILT_IN_CATANHF", value: 273, isUnsigned: true)
!803 = !DIEnumerator(name: "BUILT_IN_CATANHL", value: 274, isUnsigned: true)
!804 = !DIEnumerator(name: "BUILT_IN_CATANL", value: 275, isUnsigned: true)
!805 = !DIEnumerator(name: "BUILT_IN_CCOS", value: 276, isUnsigned: true)
!806 = !DIEnumerator(name: "BUILT_IN_CCOSF", value: 277, isUnsigned: true)
!807 = !DIEnumerator(name: "BUILT_IN_CCOSH", value: 278, isUnsigned: true)
!808 = !DIEnumerator(name: "BUILT_IN_CCOSHF", value: 279, isUnsigned: true)
!809 = !DIEnumerator(name: "BUILT_IN_CCOSHL", value: 280, isUnsigned: true)
!810 = !DIEnumerator(name: "BUILT_IN_CCOSL", value: 281, isUnsigned: true)
!811 = !DIEnumerator(name: "BUILT_IN_CEXP", value: 282, isUnsigned: true)
!812 = !DIEnumerator(name: "BUILT_IN_CEXPF", value: 283, isUnsigned: true)
!813 = !DIEnumerator(name: "BUILT_IN_CEXPL", value: 284, isUnsigned: true)
!814 = !DIEnumerator(name: "BUILT_IN_CEXPI", value: 285, isUnsigned: true)
!815 = !DIEnumerator(name: "BUILT_IN_CEXPIF", value: 286, isUnsigned: true)
!816 = !DIEnumerator(name: "BUILT_IN_CEXPIL", value: 287, isUnsigned: true)
!817 = !DIEnumerator(name: "BUILT_IN_CIMAG", value: 288, isUnsigned: true)
!818 = !DIEnumerator(name: "BUILT_IN_CIMAGF", value: 289, isUnsigned: true)
!819 = !DIEnumerator(name: "BUILT_IN_CIMAGL", value: 290, isUnsigned: true)
!820 = !DIEnumerator(name: "BUILT_IN_CLOG", value: 291, isUnsigned: true)
!821 = !DIEnumerator(name: "BUILT_IN_CLOGF", value: 292, isUnsigned: true)
!822 = !DIEnumerator(name: "BUILT_IN_CLOGL", value: 293, isUnsigned: true)
!823 = !DIEnumerator(name: "BUILT_IN_CLOG10", value: 294, isUnsigned: true)
!824 = !DIEnumerator(name: "BUILT_IN_CLOG10F", value: 295, isUnsigned: true)
!825 = !DIEnumerator(name: "BUILT_IN_CLOG10L", value: 296, isUnsigned: true)
!826 = !DIEnumerator(name: "BUILT_IN_CONJ", value: 297, isUnsigned: true)
!827 = !DIEnumerator(name: "BUILT_IN_CONJF", value: 298, isUnsigned: true)
!828 = !DIEnumerator(name: "BUILT_IN_CONJL", value: 299, isUnsigned: true)
!829 = !DIEnumerator(name: "BUILT_IN_CPOW", value: 300, isUnsigned: true)
!830 = !DIEnumerator(name: "BUILT_IN_CPOWF", value: 301, isUnsigned: true)
!831 = !DIEnumerator(name: "BUILT_IN_CPOWL", value: 302, isUnsigned: true)
!832 = !DIEnumerator(name: "BUILT_IN_CPROJ", value: 303, isUnsigned: true)
!833 = !DIEnumerator(name: "BUILT_IN_CPROJF", value: 304, isUnsigned: true)
!834 = !DIEnumerator(name: "BUILT_IN_CPROJL", value: 305, isUnsigned: true)
!835 = !DIEnumerator(name: "BUILT_IN_CREAL", value: 306, isUnsigned: true)
!836 = !DIEnumerator(name: "BUILT_IN_CREALF", value: 307, isUnsigned: true)
!837 = !DIEnumerator(name: "BUILT_IN_CREALL", value: 308, isUnsigned: true)
!838 = !DIEnumerator(name: "BUILT_IN_CSIN", value: 309, isUnsigned: true)
!839 = !DIEnumerator(name: "BUILT_IN_CSINF", value: 310, isUnsigned: true)
!840 = !DIEnumerator(name: "BUILT_IN_CSINH", value: 311, isUnsigned: true)
!841 = !DIEnumerator(name: "BUILT_IN_CSINHF", value: 312, isUnsigned: true)
!842 = !DIEnumerator(name: "BUILT_IN_CSINHL", value: 313, isUnsigned: true)
!843 = !DIEnumerator(name: "BUILT_IN_CSINL", value: 314, isUnsigned: true)
!844 = !DIEnumerator(name: "BUILT_IN_CSQRT", value: 315, isUnsigned: true)
!845 = !DIEnumerator(name: "BUILT_IN_CSQRTF", value: 316, isUnsigned: true)
!846 = !DIEnumerator(name: "BUILT_IN_CSQRTL", value: 317, isUnsigned: true)
!847 = !DIEnumerator(name: "BUILT_IN_CTAN", value: 318, isUnsigned: true)
!848 = !DIEnumerator(name: "BUILT_IN_CTANF", value: 319, isUnsigned: true)
!849 = !DIEnumerator(name: "BUILT_IN_CTANH", value: 320, isUnsigned: true)
!850 = !DIEnumerator(name: "BUILT_IN_CTANHF", value: 321, isUnsigned: true)
!851 = !DIEnumerator(name: "BUILT_IN_CTANHL", value: 322, isUnsigned: true)
!852 = !DIEnumerator(name: "BUILT_IN_CTANL", value: 323, isUnsigned: true)
!853 = !DIEnumerator(name: "BUILT_IN_BCMP", value: 324, isUnsigned: true)
!854 = !DIEnumerator(name: "BUILT_IN_BCOPY", value: 325, isUnsigned: true)
!855 = !DIEnumerator(name: "BUILT_IN_BZERO", value: 326, isUnsigned: true)
!856 = !DIEnumerator(name: "BUILT_IN_INDEX", value: 327, isUnsigned: true)
!857 = !DIEnumerator(name: "BUILT_IN_MEMCHR", value: 328, isUnsigned: true)
!858 = !DIEnumerator(name: "BUILT_IN_MEMCMP", value: 329, isUnsigned: true)
!859 = !DIEnumerator(name: "BUILT_IN_MEMCPY", value: 330, isUnsigned: true)
!860 = !DIEnumerator(name: "BUILT_IN_MEMMOVE", value: 331, isUnsigned: true)
!861 = !DIEnumerator(name: "BUILT_IN_MEMPCPY", value: 332, isUnsigned: true)
!862 = !DIEnumerator(name: "BUILT_IN_MEMSET", value: 333, isUnsigned: true)
!863 = !DIEnumerator(name: "BUILT_IN_RINDEX", value: 334, isUnsigned: true)
!864 = !DIEnumerator(name: "BUILT_IN_STPCPY", value: 335, isUnsigned: true)
!865 = !DIEnumerator(name: "BUILT_IN_STPNCPY", value: 336, isUnsigned: true)
!866 = !DIEnumerator(name: "BUILT_IN_STRCASECMP", value: 337, isUnsigned: true)
!867 = !DIEnumerator(name: "BUILT_IN_STRCAT", value: 338, isUnsigned: true)
!868 = !DIEnumerator(name: "BUILT_IN_STRCHR", value: 339, isUnsigned: true)
!869 = !DIEnumerator(name: "BUILT_IN_STRCMP", value: 340, isUnsigned: true)
!870 = !DIEnumerator(name: "BUILT_IN_STRCPY", value: 341, isUnsigned: true)
!871 = !DIEnumerator(name: "BUILT_IN_STRCSPN", value: 342, isUnsigned: true)
!872 = !DIEnumerator(name: "BUILT_IN_STRDUP", value: 343, isUnsigned: true)
!873 = !DIEnumerator(name: "BUILT_IN_STRNDUP", value: 344, isUnsigned: true)
!874 = !DIEnumerator(name: "BUILT_IN_STRLEN", value: 345, isUnsigned: true)
!875 = !DIEnumerator(name: "BUILT_IN_STRNCASECMP", value: 346, isUnsigned: true)
!876 = !DIEnumerator(name: "BUILT_IN_STRNCAT", value: 347, isUnsigned: true)
!877 = !DIEnumerator(name: "BUILT_IN_STRNCMP", value: 348, isUnsigned: true)
!878 = !DIEnumerator(name: "BUILT_IN_STRNCPY", value: 349, isUnsigned: true)
!879 = !DIEnumerator(name: "BUILT_IN_STRPBRK", value: 350, isUnsigned: true)
!880 = !DIEnumerator(name: "BUILT_IN_STRRCHR", value: 351, isUnsigned: true)
!881 = !DIEnumerator(name: "BUILT_IN_STRSPN", value: 352, isUnsigned: true)
!882 = !DIEnumerator(name: "BUILT_IN_STRSTR", value: 353, isUnsigned: true)
!883 = !DIEnumerator(name: "BUILT_IN_FPRINTF", value: 354, isUnsigned: true)
!884 = !DIEnumerator(name: "BUILT_IN_FPRINTF_UNLOCKED", value: 355, isUnsigned: true)
!885 = !DIEnumerator(name: "BUILT_IN_PUTC", value: 356, isUnsigned: true)
!886 = !DIEnumerator(name: "BUILT_IN_PUTC_UNLOCKED", value: 357, isUnsigned: true)
!887 = !DIEnumerator(name: "BUILT_IN_FPUTC", value: 358, isUnsigned: true)
!888 = !DIEnumerator(name: "BUILT_IN_FPUTC_UNLOCKED", value: 359, isUnsigned: true)
!889 = !DIEnumerator(name: "BUILT_IN_FPUTS", value: 360, isUnsigned: true)
!890 = !DIEnumerator(name: "BUILT_IN_FPUTS_UNLOCKED", value: 361, isUnsigned: true)
!891 = !DIEnumerator(name: "BUILT_IN_FSCANF", value: 362, isUnsigned: true)
!892 = !DIEnumerator(name: "BUILT_IN_FWRITE", value: 363, isUnsigned: true)
!893 = !DIEnumerator(name: "BUILT_IN_FWRITE_UNLOCKED", value: 364, isUnsigned: true)
!894 = !DIEnumerator(name: "BUILT_IN_PRINTF", value: 365, isUnsigned: true)
!895 = !DIEnumerator(name: "BUILT_IN_PRINTF_UNLOCKED", value: 366, isUnsigned: true)
!896 = !DIEnumerator(name: "BUILT_IN_PUTCHAR", value: 367, isUnsigned: true)
!897 = !DIEnumerator(name: "BUILT_IN_PUTCHAR_UNLOCKED", value: 368, isUnsigned: true)
!898 = !DIEnumerator(name: "BUILT_IN_PUTS", value: 369, isUnsigned: true)
!899 = !DIEnumerator(name: "BUILT_IN_PUTS_UNLOCKED", value: 370, isUnsigned: true)
!900 = !DIEnumerator(name: "BUILT_IN_SCANF", value: 371, isUnsigned: true)
!901 = !DIEnumerator(name: "BUILT_IN_SNPRINTF", value: 372, isUnsigned: true)
!902 = !DIEnumerator(name: "BUILT_IN_SPRINTF", value: 373, isUnsigned: true)
!903 = !DIEnumerator(name: "BUILT_IN_SSCANF", value: 374, isUnsigned: true)
!904 = !DIEnumerator(name: "BUILT_IN_VFPRINTF", value: 375, isUnsigned: true)
!905 = !DIEnumerator(name: "BUILT_IN_VFSCANF", value: 376, isUnsigned: true)
!906 = !DIEnumerator(name: "BUILT_IN_VPRINTF", value: 377, isUnsigned: true)
!907 = !DIEnumerator(name: "BUILT_IN_VSCANF", value: 378, isUnsigned: true)
!908 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF", value: 379, isUnsigned: true)
!909 = !DIEnumerator(name: "BUILT_IN_VSPRINTF", value: 380, isUnsigned: true)
!910 = !DIEnumerator(name: "BUILT_IN_VSSCANF", value: 381, isUnsigned: true)
!911 = !DIEnumerator(name: "BUILT_IN_ISALNUM", value: 382, isUnsigned: true)
!912 = !DIEnumerator(name: "BUILT_IN_ISALPHA", value: 383, isUnsigned: true)
!913 = !DIEnumerator(name: "BUILT_IN_ISASCII", value: 384, isUnsigned: true)
!914 = !DIEnumerator(name: "BUILT_IN_ISBLANK", value: 385, isUnsigned: true)
!915 = !DIEnumerator(name: "BUILT_IN_ISCNTRL", value: 386, isUnsigned: true)
!916 = !DIEnumerator(name: "BUILT_IN_ISDIGIT", value: 387, isUnsigned: true)
!917 = !DIEnumerator(name: "BUILT_IN_ISGRAPH", value: 388, isUnsigned: true)
!918 = !DIEnumerator(name: "BUILT_IN_ISLOWER", value: 389, isUnsigned: true)
!919 = !DIEnumerator(name: "BUILT_IN_ISPRINT", value: 390, isUnsigned: true)
!920 = !DIEnumerator(name: "BUILT_IN_ISPUNCT", value: 391, isUnsigned: true)
!921 = !DIEnumerator(name: "BUILT_IN_ISSPACE", value: 392, isUnsigned: true)
!922 = !DIEnumerator(name: "BUILT_IN_ISUPPER", value: 393, isUnsigned: true)
!923 = !DIEnumerator(name: "BUILT_IN_ISXDIGIT", value: 394, isUnsigned: true)
!924 = !DIEnumerator(name: "BUILT_IN_TOASCII", value: 395, isUnsigned: true)
!925 = !DIEnumerator(name: "BUILT_IN_TOLOWER", value: 396, isUnsigned: true)
!926 = !DIEnumerator(name: "BUILT_IN_TOUPPER", value: 397, isUnsigned: true)
!927 = !DIEnumerator(name: "BUILT_IN_ISWALNUM", value: 398, isUnsigned: true)
!928 = !DIEnumerator(name: "BUILT_IN_ISWALPHA", value: 399, isUnsigned: true)
!929 = !DIEnumerator(name: "BUILT_IN_ISWBLANK", value: 400, isUnsigned: true)
!930 = !DIEnumerator(name: "BUILT_IN_ISWCNTRL", value: 401, isUnsigned: true)
!931 = !DIEnumerator(name: "BUILT_IN_ISWDIGIT", value: 402, isUnsigned: true)
!932 = !DIEnumerator(name: "BUILT_IN_ISWGRAPH", value: 403, isUnsigned: true)
!933 = !DIEnumerator(name: "BUILT_IN_ISWLOWER", value: 404, isUnsigned: true)
!934 = !DIEnumerator(name: "BUILT_IN_ISWPRINT", value: 405, isUnsigned: true)
!935 = !DIEnumerator(name: "BUILT_IN_ISWPUNCT", value: 406, isUnsigned: true)
!936 = !DIEnumerator(name: "BUILT_IN_ISWSPACE", value: 407, isUnsigned: true)
!937 = !DIEnumerator(name: "BUILT_IN_ISWUPPER", value: 408, isUnsigned: true)
!938 = !DIEnumerator(name: "BUILT_IN_ISWXDIGIT", value: 409, isUnsigned: true)
!939 = !DIEnumerator(name: "BUILT_IN_TOWLOWER", value: 410, isUnsigned: true)
!940 = !DIEnumerator(name: "BUILT_IN_TOWUPPER", value: 411, isUnsigned: true)
!941 = !DIEnumerator(name: "BUILT_IN_ABORT", value: 412, isUnsigned: true)
!942 = !DIEnumerator(name: "BUILT_IN_ABS", value: 413, isUnsigned: true)
!943 = !DIEnumerator(name: "BUILT_IN_AGGREGATE_INCOMING_ADDRESS", value: 414, isUnsigned: true)
!944 = !DIEnumerator(name: "BUILT_IN_ALLOCA", value: 415, isUnsigned: true)
!945 = !DIEnumerator(name: "BUILT_IN_APPLY", value: 416, isUnsigned: true)
!946 = !DIEnumerator(name: "BUILT_IN_APPLY_ARGS", value: 417, isUnsigned: true)
!947 = !DIEnumerator(name: "BUILT_IN_ARGS_INFO", value: 418, isUnsigned: true)
!948 = !DIEnumerator(name: "BUILT_IN_BSWAP32", value: 419, isUnsigned: true)
!949 = !DIEnumerator(name: "BUILT_IN_BSWAP64", value: 420, isUnsigned: true)
!950 = !DIEnumerator(name: "BUILT_IN_CLEAR_CACHE", value: 421, isUnsigned: true)
!951 = !DIEnumerator(name: "BUILT_IN_CALLOC", value: 422, isUnsigned: true)
!952 = !DIEnumerator(name: "BUILT_IN_CLASSIFY_TYPE", value: 423, isUnsigned: true)
!953 = !DIEnumerator(name: "BUILT_IN_CLZ", value: 424, isUnsigned: true)
!954 = !DIEnumerator(name: "BUILT_IN_CLZIMAX", value: 425, isUnsigned: true)
!955 = !DIEnumerator(name: "BUILT_IN_CLZL", value: 426, isUnsigned: true)
!956 = !DIEnumerator(name: "BUILT_IN_CLZLL", value: 427, isUnsigned: true)
!957 = !DIEnumerator(name: "BUILT_IN_CONSTANT_P", value: 428, isUnsigned: true)
!958 = !DIEnumerator(name: "BUILT_IN_CTZ", value: 429, isUnsigned: true)
!959 = !DIEnumerator(name: "BUILT_IN_CTZIMAX", value: 430, isUnsigned: true)
!960 = !DIEnumerator(name: "BUILT_IN_CTZL", value: 431, isUnsigned: true)
!961 = !DIEnumerator(name: "BUILT_IN_CTZLL", value: 432, isUnsigned: true)
!962 = !DIEnumerator(name: "BUILT_IN_DCGETTEXT", value: 433, isUnsigned: true)
!963 = !DIEnumerator(name: "BUILT_IN_DGETTEXT", value: 434, isUnsigned: true)
!964 = !DIEnumerator(name: "BUILT_IN_DWARF_CFA", value: 435, isUnsigned: true)
!965 = !DIEnumerator(name: "BUILT_IN_DWARF_SP_COLUMN", value: 436, isUnsigned: true)
!966 = !DIEnumerator(name: "BUILT_IN_EH_RETURN", value: 437, isUnsigned: true)
!967 = !DIEnumerator(name: "BUILT_IN_EH_RETURN_DATA_REGNO", value: 438, isUnsigned: true)
!968 = !DIEnumerator(name: "BUILT_IN_EXECL", value: 439, isUnsigned: true)
!969 = !DIEnumerator(name: "BUILT_IN_EXECLP", value: 440, isUnsigned: true)
!970 = !DIEnumerator(name: "BUILT_IN_EXECLE", value: 441, isUnsigned: true)
!971 = !DIEnumerator(name: "BUILT_IN_EXECV", value: 442, isUnsigned: true)
!972 = !DIEnumerator(name: "BUILT_IN_EXECVP", value: 443, isUnsigned: true)
!973 = !DIEnumerator(name: "BUILT_IN_EXECVE", value: 444, isUnsigned: true)
!974 = !DIEnumerator(name: "BUILT_IN_EXIT", value: 445, isUnsigned: true)
!975 = !DIEnumerator(name: "BUILT_IN_EXPECT", value: 446, isUnsigned: true)
!976 = !DIEnumerator(name: "BUILT_IN_EXTEND_POINTER", value: 447, isUnsigned: true)
!977 = !DIEnumerator(name: "BUILT_IN_EXTRACT_RETURN_ADDR", value: 448, isUnsigned: true)
!978 = !DIEnumerator(name: "BUILT_IN_FFS", value: 449, isUnsigned: true)
!979 = !DIEnumerator(name: "BUILT_IN_FFSIMAX", value: 450, isUnsigned: true)
!980 = !DIEnumerator(name: "BUILT_IN_FFSL", value: 451, isUnsigned: true)
!981 = !DIEnumerator(name: "BUILT_IN_FFSLL", value: 452, isUnsigned: true)
!982 = !DIEnumerator(name: "BUILT_IN_FORK", value: 453, isUnsigned: true)
!983 = !DIEnumerator(name: "BUILT_IN_FRAME_ADDRESS", value: 454, isUnsigned: true)
!984 = !DIEnumerator(name: "BUILT_IN_FREE", value: 455, isUnsigned: true)
!985 = !DIEnumerator(name: "BUILT_IN_FROB_RETURN_ADDR", value: 456, isUnsigned: true)
!986 = !DIEnumerator(name: "BUILT_IN_GETTEXT", value: 457, isUnsigned: true)
!987 = !DIEnumerator(name: "BUILT_IN_IMAXABS", value: 458, isUnsigned: true)
!988 = !DIEnumerator(name: "BUILT_IN_INIT_DWARF_REG_SIZES", value: 459, isUnsigned: true)
!989 = !DIEnumerator(name: "BUILT_IN_FINITE", value: 460, isUnsigned: true)
!990 = !DIEnumerator(name: "BUILT_IN_FINITEF", value: 461, isUnsigned: true)
!991 = !DIEnumerator(name: "BUILT_IN_FINITEL", value: 462, isUnsigned: true)
!992 = !DIEnumerator(name: "BUILT_IN_FINITED32", value: 463, isUnsigned: true)
!993 = !DIEnumerator(name: "BUILT_IN_FINITED64", value: 464, isUnsigned: true)
!994 = !DIEnumerator(name: "BUILT_IN_FINITED128", value: 465, isUnsigned: true)
!995 = !DIEnumerator(name: "BUILT_IN_FPCLASSIFY", value: 466, isUnsigned: true)
!996 = !DIEnumerator(name: "BUILT_IN_ISFINITE", value: 467, isUnsigned: true)
!997 = !DIEnumerator(name: "BUILT_IN_ISINF_SIGN", value: 468, isUnsigned: true)
!998 = !DIEnumerator(name: "BUILT_IN_ISINF", value: 469, isUnsigned: true)
!999 = !DIEnumerator(name: "BUILT_IN_ISINFF", value: 470, isUnsigned: true)
!1000 = !DIEnumerator(name: "BUILT_IN_ISINFL", value: 471, isUnsigned: true)
!1001 = !DIEnumerator(name: "BUILT_IN_ISINFD32", value: 472, isUnsigned: true)
!1002 = !DIEnumerator(name: "BUILT_IN_ISINFD64", value: 473, isUnsigned: true)
!1003 = !DIEnumerator(name: "BUILT_IN_ISINFD128", value: 474, isUnsigned: true)
!1004 = !DIEnumerator(name: "BUILT_IN_ISNAN", value: 475, isUnsigned: true)
!1005 = !DIEnumerator(name: "BUILT_IN_ISNANF", value: 476, isUnsigned: true)
!1006 = !DIEnumerator(name: "BUILT_IN_ISNANL", value: 477, isUnsigned: true)
!1007 = !DIEnumerator(name: "BUILT_IN_ISNAND32", value: 478, isUnsigned: true)
!1008 = !DIEnumerator(name: "BUILT_IN_ISNAND64", value: 479, isUnsigned: true)
!1009 = !DIEnumerator(name: "BUILT_IN_ISNAND128", value: 480, isUnsigned: true)
!1010 = !DIEnumerator(name: "BUILT_IN_ISNORMAL", value: 481, isUnsigned: true)
!1011 = !DIEnumerator(name: "BUILT_IN_ISGREATER", value: 482, isUnsigned: true)
!1012 = !DIEnumerator(name: "BUILT_IN_ISGREATEREQUAL", value: 483, isUnsigned: true)
!1013 = !DIEnumerator(name: "BUILT_IN_ISLESS", value: 484, isUnsigned: true)
!1014 = !DIEnumerator(name: "BUILT_IN_ISLESSEQUAL", value: 485, isUnsigned: true)
!1015 = !DIEnumerator(name: "BUILT_IN_ISLESSGREATER", value: 486, isUnsigned: true)
!1016 = !DIEnumerator(name: "BUILT_IN_ISUNORDERED", value: 487, isUnsigned: true)
!1017 = !DIEnumerator(name: "BUILT_IN_LABS", value: 488, isUnsigned: true)
!1018 = !DIEnumerator(name: "BUILT_IN_LLABS", value: 489, isUnsigned: true)
!1019 = !DIEnumerator(name: "BUILT_IN_LONGJMP", value: 490, isUnsigned: true)
!1020 = !DIEnumerator(name: "BUILT_IN_MALLOC", value: 491, isUnsigned: true)
!1021 = !DIEnumerator(name: "BUILT_IN_NEXT_ARG", value: 492, isUnsigned: true)
!1022 = !DIEnumerator(name: "BUILT_IN_PARITY", value: 493, isUnsigned: true)
!1023 = !DIEnumerator(name: "BUILT_IN_PARITYIMAX", value: 494, isUnsigned: true)
!1024 = !DIEnumerator(name: "BUILT_IN_PARITYL", value: 495, isUnsigned: true)
!1025 = !DIEnumerator(name: "BUILT_IN_PARITYLL", value: 496, isUnsigned: true)
!1026 = !DIEnumerator(name: "BUILT_IN_POPCOUNT", value: 497, isUnsigned: true)
!1027 = !DIEnumerator(name: "BUILT_IN_POPCOUNTIMAX", value: 498, isUnsigned: true)
!1028 = !DIEnumerator(name: "BUILT_IN_POPCOUNTL", value: 499, isUnsigned: true)
!1029 = !DIEnumerator(name: "BUILT_IN_POPCOUNTLL", value: 500, isUnsigned: true)
!1030 = !DIEnumerator(name: "BUILT_IN_PREFETCH", value: 501, isUnsigned: true)
!1031 = !DIEnumerator(name: "BUILT_IN_REALLOC", value: 502, isUnsigned: true)
!1032 = !DIEnumerator(name: "BUILT_IN_RETURN", value: 503, isUnsigned: true)
!1033 = !DIEnumerator(name: "BUILT_IN_RETURN_ADDRESS", value: 504, isUnsigned: true)
!1034 = !DIEnumerator(name: "BUILT_IN_SAVEREGS", value: 505, isUnsigned: true)
!1035 = !DIEnumerator(name: "BUILT_IN_SETJMP", value: 506, isUnsigned: true)
!1036 = !DIEnumerator(name: "BUILT_IN_STRFMON", value: 507, isUnsigned: true)
!1037 = !DIEnumerator(name: "BUILT_IN_STRFTIME", value: 508, isUnsigned: true)
!1038 = !DIEnumerator(name: "BUILT_IN_TRAP", value: 509, isUnsigned: true)
!1039 = !DIEnumerator(name: "BUILT_IN_UNREACHABLE", value: 510, isUnsigned: true)
!1040 = !DIEnumerator(name: "BUILT_IN_UNWIND_INIT", value: 511, isUnsigned: true)
!1041 = !DIEnumerator(name: "BUILT_IN_UPDATE_SETJMP_BUF", value: 512, isUnsigned: true)
!1042 = !DIEnumerator(name: "BUILT_IN_VA_COPY", value: 513, isUnsigned: true)
!1043 = !DIEnumerator(name: "BUILT_IN_VA_END", value: 514, isUnsigned: true)
!1044 = !DIEnumerator(name: "BUILT_IN_VA_START", value: 515, isUnsigned: true)
!1045 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK", value: 516, isUnsigned: true)
!1046 = !DIEnumerator(name: "BUILT_IN_VA_ARG_PACK_LEN", value: 517, isUnsigned: true)
!1047 = !DIEnumerator(name: "BUILT_IN__EXIT", value: 518, isUnsigned: true)
!1048 = !DIEnumerator(name: "BUILT_IN__EXIT2", value: 519, isUnsigned: true)
!1049 = !DIEnumerator(name: "BUILT_IN_INIT_TRAMPOLINE", value: 520, isUnsigned: true)
!1050 = !DIEnumerator(name: "BUILT_IN_ADJUST_TRAMPOLINE", value: 521, isUnsigned: true)
!1051 = !DIEnumerator(name: "BUILT_IN_NONLOCAL_GOTO", value: 522, isUnsigned: true)
!1052 = !DIEnumerator(name: "BUILT_IN_SETJMP_SETUP", value: 523, isUnsigned: true)
!1053 = !DIEnumerator(name: "BUILT_IN_SETJMP_DISPATCHER", value: 524, isUnsigned: true)
!1054 = !DIEnumerator(name: "BUILT_IN_SETJMP_RECEIVER", value: 525, isUnsigned: true)
!1055 = !DIEnumerator(name: "BUILT_IN_STACK_SAVE", value: 526, isUnsigned: true)
!1056 = !DIEnumerator(name: "BUILT_IN_STACK_RESTORE", value: 527, isUnsigned: true)
!1057 = !DIEnumerator(name: "BUILT_IN_OBJECT_SIZE", value: 528, isUnsigned: true)
!1058 = !DIEnumerator(name: "BUILT_IN_MEMCPY_CHK", value: 529, isUnsigned: true)
!1059 = !DIEnumerator(name: "BUILT_IN_MEMMOVE_CHK", value: 530, isUnsigned: true)
!1060 = !DIEnumerator(name: "BUILT_IN_MEMPCPY_CHK", value: 531, isUnsigned: true)
!1061 = !DIEnumerator(name: "BUILT_IN_MEMSET_CHK", value: 532, isUnsigned: true)
!1062 = !DIEnumerator(name: "BUILT_IN_STPCPY_CHK", value: 533, isUnsigned: true)
!1063 = !DIEnumerator(name: "BUILT_IN_STRCAT_CHK", value: 534, isUnsigned: true)
!1064 = !DIEnumerator(name: "BUILT_IN_STRCPY_CHK", value: 535, isUnsigned: true)
!1065 = !DIEnumerator(name: "BUILT_IN_STRNCAT_CHK", value: 536, isUnsigned: true)
!1066 = !DIEnumerator(name: "BUILT_IN_STRNCPY_CHK", value: 537, isUnsigned: true)
!1067 = !DIEnumerator(name: "BUILT_IN_SNPRINTF_CHK", value: 538, isUnsigned: true)
!1068 = !DIEnumerator(name: "BUILT_IN_SPRINTF_CHK", value: 539, isUnsigned: true)
!1069 = !DIEnumerator(name: "BUILT_IN_VSNPRINTF_CHK", value: 540, isUnsigned: true)
!1070 = !DIEnumerator(name: "BUILT_IN_VSPRINTF_CHK", value: 541, isUnsigned: true)
!1071 = !DIEnumerator(name: "BUILT_IN_FPRINTF_CHK", value: 542, isUnsigned: true)
!1072 = !DIEnumerator(name: "BUILT_IN_PRINTF_CHK", value: 543, isUnsigned: true)
!1073 = !DIEnumerator(name: "BUILT_IN_VFPRINTF_CHK", value: 544, isUnsigned: true)
!1074 = !DIEnumerator(name: "BUILT_IN_VPRINTF_CHK", value: 545, isUnsigned: true)
!1075 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_ENTER", value: 546, isUnsigned: true)
!1076 = !DIEnumerator(name: "BUILT_IN_PROFILE_FUNC_EXIT", value: 547, isUnsigned: true)
!1077 = !DIEnumerator(name: "BUILT_IN_EMUTLS_GET_ADDRESS", value: 548, isUnsigned: true)
!1078 = !DIEnumerator(name: "BUILT_IN_EMUTLS_REGISTER_COMMON", value: 549, isUnsigned: true)
!1079 = !DIEnumerator(name: "BUILT_IN_UNWIND_RESUME", value: 550, isUnsigned: true)
!1080 = !DIEnumerator(name: "BUILT_IN_CXA_END_CLEANUP", value: 551, isUnsigned: true)
!1081 = !DIEnumerator(name: "BUILT_IN_EH_POINTER", value: 552, isUnsigned: true)
!1082 = !DIEnumerator(name: "BUILT_IN_EH_FILTER", value: 553, isUnsigned: true)
!1083 = !DIEnumerator(name: "BUILT_IN_EH_COPY_VALUES", value: 554, isUnsigned: true)
!1084 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_N", value: 555, isUnsigned: true)
!1085 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_1", value: 556, isUnsigned: true)
!1086 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_2", value: 557, isUnsigned: true)
!1087 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_4", value: 558, isUnsigned: true)
!1088 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_8", value: 559, isUnsigned: true)
!1089 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_ADD_16", value: 560, isUnsigned: true)
!1090 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_N", value: 561, isUnsigned: true)
!1091 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_1", value: 562, isUnsigned: true)
!1092 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_2", value: 563, isUnsigned: true)
!1093 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_4", value: 564, isUnsigned: true)
!1094 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_8", value: 565, isUnsigned: true)
!1095 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_SUB_16", value: 566, isUnsigned: true)
!1096 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_N", value: 567, isUnsigned: true)
!1097 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_1", value: 568, isUnsigned: true)
!1098 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_2", value: 569, isUnsigned: true)
!1099 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_4", value: 570, isUnsigned: true)
!1100 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_8", value: 571, isUnsigned: true)
!1101 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_OR_16", value: 572, isUnsigned: true)
!1102 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_N", value: 573, isUnsigned: true)
!1103 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_1", value: 574, isUnsigned: true)
!1104 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_2", value: 575, isUnsigned: true)
!1105 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_4", value: 576, isUnsigned: true)
!1106 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_8", value: 577, isUnsigned: true)
!1107 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_AND_16", value: 578, isUnsigned: true)
!1108 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_N", value: 579, isUnsigned: true)
!1109 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_1", value: 580, isUnsigned: true)
!1110 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_2", value: 581, isUnsigned: true)
!1111 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_4", value: 582, isUnsigned: true)
!1112 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_8", value: 583, isUnsigned: true)
!1113 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_XOR_16", value: 584, isUnsigned: true)
!1114 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_N", value: 585, isUnsigned: true)
!1115 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_1", value: 586, isUnsigned: true)
!1116 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_2", value: 587, isUnsigned: true)
!1117 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_4", value: 588, isUnsigned: true)
!1118 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_8", value: 589, isUnsigned: true)
!1119 = !DIEnumerator(name: "BUILT_IN_FETCH_AND_NAND_16", value: 590, isUnsigned: true)
!1120 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_N", value: 591, isUnsigned: true)
!1121 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_1", value: 592, isUnsigned: true)
!1122 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_2", value: 593, isUnsigned: true)
!1123 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_4", value: 594, isUnsigned: true)
!1124 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_8", value: 595, isUnsigned: true)
!1125 = !DIEnumerator(name: "BUILT_IN_ADD_AND_FETCH_16", value: 596, isUnsigned: true)
!1126 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_N", value: 597, isUnsigned: true)
!1127 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_1", value: 598, isUnsigned: true)
!1128 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_2", value: 599, isUnsigned: true)
!1129 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_4", value: 600, isUnsigned: true)
!1130 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_8", value: 601, isUnsigned: true)
!1131 = !DIEnumerator(name: "BUILT_IN_SUB_AND_FETCH_16", value: 602, isUnsigned: true)
!1132 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_N", value: 603, isUnsigned: true)
!1133 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_1", value: 604, isUnsigned: true)
!1134 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_2", value: 605, isUnsigned: true)
!1135 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_4", value: 606, isUnsigned: true)
!1136 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_8", value: 607, isUnsigned: true)
!1137 = !DIEnumerator(name: "BUILT_IN_OR_AND_FETCH_16", value: 608, isUnsigned: true)
!1138 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_N", value: 609, isUnsigned: true)
!1139 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_1", value: 610, isUnsigned: true)
!1140 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_2", value: 611, isUnsigned: true)
!1141 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_4", value: 612, isUnsigned: true)
!1142 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_8", value: 613, isUnsigned: true)
!1143 = !DIEnumerator(name: "BUILT_IN_AND_AND_FETCH_16", value: 614, isUnsigned: true)
!1144 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_N", value: 615, isUnsigned: true)
!1145 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_1", value: 616, isUnsigned: true)
!1146 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_2", value: 617, isUnsigned: true)
!1147 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_4", value: 618, isUnsigned: true)
!1148 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_8", value: 619, isUnsigned: true)
!1149 = !DIEnumerator(name: "BUILT_IN_XOR_AND_FETCH_16", value: 620, isUnsigned: true)
!1150 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_N", value: 621, isUnsigned: true)
!1151 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_1", value: 622, isUnsigned: true)
!1152 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_2", value: 623, isUnsigned: true)
!1153 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_4", value: 624, isUnsigned: true)
!1154 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_8", value: 625, isUnsigned: true)
!1155 = !DIEnumerator(name: "BUILT_IN_NAND_AND_FETCH_16", value: 626, isUnsigned: true)
!1156 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_N", value: 627, isUnsigned: true)
!1157 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_1", value: 628, isUnsigned: true)
!1158 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_2", value: 629, isUnsigned: true)
!1159 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_4", value: 630, isUnsigned: true)
!1160 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_8", value: 631, isUnsigned: true)
!1161 = !DIEnumerator(name: "BUILT_IN_BOOL_COMPARE_AND_SWAP_16", value: 632, isUnsigned: true)
!1162 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_N", value: 633, isUnsigned: true)
!1163 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_1", value: 634, isUnsigned: true)
!1164 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_2", value: 635, isUnsigned: true)
!1165 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_4", value: 636, isUnsigned: true)
!1166 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_8", value: 637, isUnsigned: true)
!1167 = !DIEnumerator(name: "BUILT_IN_VAL_COMPARE_AND_SWAP_16", value: 638, isUnsigned: true)
!1168 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_N", value: 639, isUnsigned: true)
!1169 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_1", value: 640, isUnsigned: true)
!1170 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_2", value: 641, isUnsigned: true)
!1171 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_4", value: 642, isUnsigned: true)
!1172 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_8", value: 643, isUnsigned: true)
!1173 = !DIEnumerator(name: "BUILT_IN_LOCK_TEST_AND_SET_16", value: 644, isUnsigned: true)
!1174 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_N", value: 645, isUnsigned: true)
!1175 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_1", value: 646, isUnsigned: true)
!1176 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_2", value: 647, isUnsigned: true)
!1177 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_4", value: 648, isUnsigned: true)
!1178 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_8", value: 649, isUnsigned: true)
!1179 = !DIEnumerator(name: "BUILT_IN_LOCK_RELEASE_16", value: 650, isUnsigned: true)
!1180 = !DIEnumerator(name: "BUILT_IN_SYNCHRONIZE", value: 651, isUnsigned: true)
!1181 = !DIEnumerator(name: "BUILT_IN_OMP_GET_THREAD_NUM", value: 652, isUnsigned: true)
!1182 = !DIEnumerator(name: "BUILT_IN_OMP_GET_NUM_THREADS", value: 653, isUnsigned: true)
!1183 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_START", value: 654, isUnsigned: true)
!1184 = !DIEnumerator(name: "BUILT_IN_GOMP_ATOMIC_END", value: 655, isUnsigned: true)
!1185 = !DIEnumerator(name: "BUILT_IN_GOMP_BARRIER", value: 656, isUnsigned: true)
!1186 = !DIEnumerator(name: "BUILT_IN_GOMP_TASKWAIT", value: 657, isUnsigned: true)
!1187 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_START", value: 658, isUnsigned: true)
!1188 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_END", value: 659, isUnsigned: true)
!1189 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_START", value: 660, isUnsigned: true)
!1190 = !DIEnumerator(name: "BUILT_IN_GOMP_CRITICAL_NAME_END", value: 661, isUnsigned: true)
!1191 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_START", value: 662, isUnsigned: true)
!1192 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_START", value: 663, isUnsigned: true)
!1193 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_START", value: 664, isUnsigned: true)
!1194 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_START", value: 665, isUnsigned: true)
!1195 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START", value: 666, isUnsigned: true)
!1196 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_START", value: 667, isUnsigned: true)
!1197 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_START", value: 668, isUnsigned: true)
!1198 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_START", value: 669, isUnsigned: true)
!1199 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_STATIC_NEXT", value: 670, isUnsigned: true)
!1200 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_DYNAMIC_NEXT", value: 671, isUnsigned: true)
!1201 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_GUIDED_NEXT", value: 672, isUnsigned: true)
!1202 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_RUNTIME_NEXT", value: 673, isUnsigned: true)
!1203 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_STATIC_NEXT", value: 674, isUnsigned: true)
!1204 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_NEXT", value: 675, isUnsigned: true)
!1205 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_NEXT", value: 676, isUnsigned: true)
!1206 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_NEXT", value: 677, isUnsigned: true)
!1207 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_START", value: 678, isUnsigned: true)
!1208 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_START", value: 679, isUnsigned: true)
!1209 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_START", value: 680, isUnsigned: true)
!1210 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_START", value: 681, isUnsigned: true)
!1211 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START", value: 682, isUnsigned: true)
!1212 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_START", value: 683, isUnsigned: true)
!1213 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_START", value: 684, isUnsigned: true)
!1214 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_START", value: 685, isUnsigned: true)
!1215 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_STATIC_NEXT", value: 686, isUnsigned: true)
!1216 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_NEXT", value: 687, isUnsigned: true)
!1217 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_GUIDED_NEXT", value: 688, isUnsigned: true)
!1218 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_RUNTIME_NEXT", value: 689, isUnsigned: true)
!1219 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_NEXT", value: 690, isUnsigned: true)
!1220 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_NEXT", value: 691, isUnsigned: true)
!1221 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_NEXT", value: 692, isUnsigned: true)
!1222 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_NEXT", value: 693, isUnsigned: true)
!1223 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_STATIC_START", value: 694, isUnsigned: true)
!1224 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_DYNAMIC_START", value: 695, isUnsigned: true)
!1225 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_GUIDED_START", value: 696, isUnsigned: true)
!1226 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_LOOP_RUNTIME_START", value: 697, isUnsigned: true)
!1227 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END", value: 698, isUnsigned: true)
!1228 = !DIEnumerator(name: "BUILT_IN_GOMP_LOOP_END_NOWAIT", value: 699, isUnsigned: true)
!1229 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_START", value: 700, isUnsigned: true)
!1230 = !DIEnumerator(name: "BUILT_IN_GOMP_ORDERED_END", value: 701, isUnsigned: true)
!1231 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_START", value: 702, isUnsigned: true)
!1232 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_END", value: 703, isUnsigned: true)
!1233 = !DIEnumerator(name: "BUILT_IN_GOMP_TASK", value: 704, isUnsigned: true)
!1234 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_START", value: 705, isUnsigned: true)
!1235 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_NEXT", value: 706, isUnsigned: true)
!1236 = !DIEnumerator(name: "BUILT_IN_GOMP_PARALLEL_SECTIONS_START", value: 707, isUnsigned: true)
!1237 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END", value: 708, isUnsigned: true)
!1238 = !DIEnumerator(name: "BUILT_IN_GOMP_SECTIONS_END_NOWAIT", value: 709, isUnsigned: true)
!1239 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_START", value: 710, isUnsigned: true)
!1240 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_START", value: 711, isUnsigned: true)
!1241 = !DIEnumerator(name: "BUILT_IN_GOMP_SINGLE_COPY_END", value: 712, isUnsigned: true)
!1242 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MIN", value: 713, isUnsigned: true)
!1243 = !DIEnumerator(name: "BUILT_IN_COMPLEX_MUL_MAX", value: 716, isUnsigned: true)
!1244 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MIN", value: 717, isUnsigned: true)
!1245 = !DIEnumerator(name: "BUILT_IN_COMPLEX_DIV_MAX", value: 720, isUnsigned: true)
!1246 = !DIEnumerator(name: "END_BUILTINS", value: 721, isUnsigned: true)
!1247 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimplify_status", file: !1248, line: 973, baseType: !1249, size: 32, elements: !1250)
!1248 = !DIFile(filename: "./gimple.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1249 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1250 = !{!1251, !1252, !1253, !1254}
!1251 = !DIEnumerator(name: "GS_ERROR", value: -2)
!1252 = !DIEnumerator(name: "GS_UNHANDLED", value: -1)
!1253 = !DIEnumerator(name: "GS_OK", value: 0)
!1254 = !DIEnumerator(name: "GS_ALL_DONE", value: 1)
!1255 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !1256, line: 36, baseType: !7, size: 32, elements: !1257)
!1256 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1257 = !{!1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276}
!1258 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!1259 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!1260 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!1261 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!1262 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!1263 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!1264 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!1265 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!1266 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!1267 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!1268 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!1269 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!1270 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!1271 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!1272 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!1273 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!1274 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!1275 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!1276 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!1277 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "expand_modifier", file: !1278, line: 52, baseType: !7, size: 32, elements: !1279)
!1278 = !DIFile(filename: "./expr.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1279 = !{!1280, !1281, !1282, !1283, !1284, !1285, !1286}
!1280 = !DIEnumerator(name: "EXPAND_NORMAL", value: 0, isUnsigned: true)
!1281 = !DIEnumerator(name: "EXPAND_STACK_PARM", value: 1, isUnsigned: true)
!1282 = !DIEnumerator(name: "EXPAND_SUM", value: 2, isUnsigned: true)
!1283 = !DIEnumerator(name: "EXPAND_CONST_ADDRESS", value: 3, isUnsigned: true)
!1284 = !DIEnumerator(name: "EXPAND_INITIALIZER", value: 4, isUnsigned: true)
!1285 = !DIEnumerator(name: "EXPAND_WRITE", value: 5, isUnsigned: true)
!1286 = !DIEnumerator(name: "EXPAND_MEMORY", value: 6, isUnsigned: true)
!1287 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "type_class", file: !1288, line: 30, baseType: !1249, size: 32, elements: !1289)
!1288 = !DIFile(filename: "./typeclass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1289 = !{!1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307}
!1290 = !DIEnumerator(name: "no_type_class", value: -1)
!1291 = !DIEnumerator(name: "void_type_class", value: 0)
!1292 = !DIEnumerator(name: "integer_type_class", value: 1)
!1293 = !DIEnumerator(name: "char_type_class", value: 2)
!1294 = !DIEnumerator(name: "enumeral_type_class", value: 3)
!1295 = !DIEnumerator(name: "boolean_type_class", value: 4)
!1296 = !DIEnumerator(name: "pointer_type_class", value: 5)
!1297 = !DIEnumerator(name: "reference_type_class", value: 6)
!1298 = !DIEnumerator(name: "offset_type_class", value: 7)
!1299 = !DIEnumerator(name: "real_type_class", value: 8)
!1300 = !DIEnumerator(name: "complex_type_class", value: 9)
!1301 = !DIEnumerator(name: "function_type_class", value: 10)
!1302 = !DIEnumerator(name: "method_type_class", value: 11)
!1303 = !DIEnumerator(name: "record_type_class", value: 12)
!1304 = !DIEnumerator(name: "union_type_class", value: 13)
!1305 = !DIEnumerator(name: "array_type_class", value: 14)
!1306 = !DIEnumerator(name: "string_type_class", value: 15)
!1307 = !DIEnumerator(name: "lang_type_class", value: 16)
!1308 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_code", file: !1309, line: 7, baseType: !7, size: 32, elements: !1310)
!1309 = !DIFile(filename: "./insn-codes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1310 = !{!1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1562, !1563, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2142, !2143, !2144, !2145, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2178, !2179, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!1311 = !DIEnumerator(name: "CODE_FOR_x86_fnstsw_1", value: 30, isUnsigned: true)
!1312 = !DIEnumerator(name: "CODE_FOR_x86_sahf_1", value: 31, isUnsigned: true)
!1313 = !DIEnumerator(name: "CODE_FOR_popsi1", value: 41, isUnsigned: true)
!1314 = !DIEnumerator(name: "CODE_FOR_movsi_insv_1", value: 63, isUnsigned: true)
!1315 = !DIEnumerator(name: "CODE_FOR_swapxf", value: 83, isUnsigned: true)
!1316 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2_and", value: 84, isUnsigned: true)
!1317 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2_32", value: 92, isUnsigned: true)
!1318 = !DIEnumerator(name: "CODE_FOR_extendhisi2", value: 94, isUnsigned: true)
!1319 = !DIEnumerator(name: "CODE_FOR_extendqihi2", value: 95, isUnsigned: true)
!1320 = !DIEnumerator(name: "CODE_FOR_extendqisi2", value: 96, isUnsigned: true)
!1321 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop", value: 110, isUnsigned: true)
!1322 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop", value: 111, isUnsigned: true)
!1323 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi_sse", value: 116, isUnsigned: true)
!1324 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi_sse", value: 117, isUnsigned: true)
!1325 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_fisttp_i387_1", value: 118, isUnsigned: true)
!1326 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_fisttp_i387_1", value: 119, isUnsigned: true)
!1327 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_fisttp_i387_1", value: 120, isUnsigned: true)
!1328 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp", value: 121, isUnsigned: true)
!1329 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp", value: 122, isUnsigned: true)
!1330 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp", value: 123, isUnsigned: true)
!1331 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_fisttp_with_temp", value: 124, isUnsigned: true)
!1332 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_fisttp_with_temp", value: 125, isUnsigned: true)
!1333 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_fisttp_with_temp", value: 126, isUnsigned: true)
!1334 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387", value: 130, isUnsigned: true)
!1335 = !DIEnumerator(name: "CODE_FOR_fix_truncdi_i387_with_temp", value: 131, isUnsigned: true)
!1336 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387", value: 132, isUnsigned: true)
!1337 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387", value: 133, isUnsigned: true)
!1338 = !DIEnumerator(name: "CODE_FOR_fix_trunchi_i387_with_temp", value: 134, isUnsigned: true)
!1339 = !DIEnumerator(name: "CODE_FOR_fix_truncsi_i387_with_temp", value: 135, isUnsigned: true)
!1340 = !DIEnumerator(name: "CODE_FOR_x86_fnstcw_1", value: 136, isUnsigned: true)
!1341 = !DIEnumerator(name: "CODE_FOR_x86_fldcw_1", value: 137, isUnsigned: true)
!1342 = !DIEnumerator(name: "CODE_FOR_floatdisf2_i387_with_xmm", value: 185, isUnsigned: true)
!1343 = !DIEnumerator(name: "CODE_FOR_floatdidf2_i387_with_xmm", value: 186, isUnsigned: true)
!1344 = !DIEnumerator(name: "CODE_FOR_floatdixf2_i387_with_xmm", value: 187, isUnsigned: true)
!1345 = !DIEnumerator(name: "CODE_FOR_addqi3_cc", value: 195, isUnsigned: true)
!1346 = !DIEnumerator(name: "CODE_FOR_addqi_ext_1", value: 219, isUnsigned: true)
!1347 = !DIEnumerator(name: "CODE_FOR_divqi3", value: 271, isUnsigned: true)
!1348 = !DIEnumerator(name: "CODE_FOR_udivqi3", value: 272, isUnsigned: true)
!1349 = !DIEnumerator(name: "CODE_FOR_andqi_ext_0", value: 298, isUnsigned: true)
!1350 = !DIEnumerator(name: "CODE_FOR_copysignsf3_const", value: 367, isUnsigned: true)
!1351 = !DIEnumerator(name: "CODE_FOR_copysigndf3_const", value: 368, isUnsigned: true)
!1352 = !DIEnumerator(name: "CODE_FOR_copysigntf3_const", value: 369, isUnsigned: true)
!1353 = !DIEnumerator(name: "CODE_FOR_copysignsf3_var", value: 370, isUnsigned: true)
!1354 = !DIEnumerator(name: "CODE_FOR_copysigndf3_var", value: 371, isUnsigned: true)
!1355 = !DIEnumerator(name: "CODE_FOR_copysigntf3_var", value: 372, isUnsigned: true)
!1356 = !DIEnumerator(name: "CODE_FOR_x86_shld", value: 382, isUnsigned: true)
!1357 = !DIEnumerator(name: "CODE_FOR_x86_shrd", value: 395, isUnsigned: true)
!1358 = !DIEnumerator(name: "CODE_FOR_ix86_rotldi3", value: 438, isUnsigned: true)
!1359 = !DIEnumerator(name: "CODE_FOR_ix86_rotrdi3", value: 447, isUnsigned: true)
!1360 = !DIEnumerator(name: "CODE_FOR_jump", value: 478, isUnsigned: true)
!1361 = !DIEnumerator(name: "CODE_FOR_blockage", value: 487, isUnsigned: true)
!1362 = !DIEnumerator(name: "CODE_FOR_prologue_use", value: 489, isUnsigned: true)
!1363 = !DIEnumerator(name: "CODE_FOR_return_internal", value: 490, isUnsigned: true)
!1364 = !DIEnumerator(name: "CODE_FOR_return_internal_long", value: 491, isUnsigned: true)
!1365 = !DIEnumerator(name: "CODE_FOR_return_pop_internal", value: 492, isUnsigned: true)
!1366 = !DIEnumerator(name: "CODE_FOR_return_indirect_internal", value: 493, isUnsigned: true)
!1367 = !DIEnumerator(name: "CODE_FOR_nop", value: 494, isUnsigned: true)
!1368 = !DIEnumerator(name: "CODE_FOR_vswapmov", value: 495, isUnsigned: true)
!1369 = !DIEnumerator(name: "CODE_FOR_pad", value: 496, isUnsigned: true)
!1370 = !DIEnumerator(name: "CODE_FOR_set_got", value: 497, isUnsigned: true)
!1371 = !DIEnumerator(name: "CODE_FOR_set_got_labelled", value: 498, isUnsigned: true)
!1372 = !DIEnumerator(name: "CODE_FOR_eh_return_internal", value: 499, isUnsigned: true)
!1373 = !DIEnumerator(name: "CODE_FOR_leave", value: 500, isUnsigned: true)
!1374 = !DIEnumerator(name: "CODE_FOR_ctzsi2", value: 503, isUnsigned: true)
!1375 = !DIEnumerator(name: "CODE_FOR_clzsi2_abm", value: 504, isUnsigned: true)
!1376 = !DIEnumerator(name: "CODE_FOR_bsr", value: 505, isUnsigned: true)
!1377 = !DIEnumerator(name: "CODE_FOR_popcounthi2", value: 506, isUnsigned: true)
!1378 = !DIEnumerator(name: "CODE_FOR_popcountsi2", value: 507, isUnsigned: true)
!1379 = !DIEnumerator(name: "CODE_FOR_bswaphi_lowpart", value: 514, isUnsigned: true)
!1380 = !DIEnumerator(name: "CODE_FOR_clzhi2_abm", value: 515, isUnsigned: true)
!1381 = !DIEnumerator(name: "CODE_FOR_paritydi2_cmp", value: 517, isUnsigned: true)
!1382 = !DIEnumerator(name: "CODE_FOR_paritysi2_cmp", value: 518, isUnsigned: true)
!1383 = !DIEnumerator(name: "CODE_FOR_truncxfsf2_i387_noop_unspec", value: 573, isUnsigned: true)
!1384 = !DIEnumerator(name: "CODE_FOR_truncxfdf2_i387_noop_unspec", value: 574, isUnsigned: true)
!1385 = !DIEnumerator(name: "CODE_FOR_sqrtxf2", value: 575, isUnsigned: true)
!1386 = !DIEnumerator(name: "CODE_FOR_sqrt_extendsfxf2_i387", value: 576, isUnsigned: true)
!1387 = !DIEnumerator(name: "CODE_FOR_sqrt_extenddfxf2_i387", value: 577, isUnsigned: true)
!1388 = !DIEnumerator(name: "CODE_FOR_fpremxf4_i387", value: 581, isUnsigned: true)
!1389 = !DIEnumerator(name: "CODE_FOR_fprem1xf4_i387", value: 582, isUnsigned: true)
!1390 = !DIEnumerator(name: "CODE_FOR_sincosxf3", value: 589, isUnsigned: true)
!1391 = !DIEnumerator(name: "CODE_FOR_sincos_extendsfxf3_i387", value: 590, isUnsigned: true)
!1392 = !DIEnumerator(name: "CODE_FOR_sincos_extenddfxf3_i387", value: 591, isUnsigned: true)
!1393 = !DIEnumerator(name: "CODE_FOR_fptanxf4_i387", value: 592, isUnsigned: true)
!1394 = !DIEnumerator(name: "CODE_FOR_fptan_extendsfxf4_i387", value: 593, isUnsigned: true)
!1395 = !DIEnumerator(name: "CODE_FOR_fptan_extenddfxf4_i387", value: 594, isUnsigned: true)
!1396 = !DIEnumerator(name: "CODE_FOR_fpatan_extendsfxf3_i387", value: 596, isUnsigned: true)
!1397 = !DIEnumerator(name: "CODE_FOR_fpatan_extenddfxf3_i387", value: 597, isUnsigned: true)
!1398 = !DIEnumerator(name: "CODE_FOR_fyl2xxf3_i387", value: 598, isUnsigned: true)
!1399 = !DIEnumerator(name: "CODE_FOR_fyl2x_extendsfxf3_i387", value: 599, isUnsigned: true)
!1400 = !DIEnumerator(name: "CODE_FOR_fyl2x_extenddfxf3_i387", value: 600, isUnsigned: true)
!1401 = !DIEnumerator(name: "CODE_FOR_fyl2xp1xf3_i387", value: 601, isUnsigned: true)
!1402 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extendsfxf3_i387", value: 602, isUnsigned: true)
!1403 = !DIEnumerator(name: "CODE_FOR_fyl2xp1_extenddfxf3_i387", value: 603, isUnsigned: true)
!1404 = !DIEnumerator(name: "CODE_FOR_fxtractxf3_i387", value: 604, isUnsigned: true)
!1405 = !DIEnumerator(name: "CODE_FOR_fxtract_extendsfxf3_i387", value: 605, isUnsigned: true)
!1406 = !DIEnumerator(name: "CODE_FOR_fxtract_extenddfxf3_i387", value: 606, isUnsigned: true)
!1407 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsf2", value: 609, isUnsigned: true)
!1408 = !DIEnumerator(name: "CODE_FOR_sse4_1_rounddf2", value: 610, isUnsigned: true)
!1409 = !DIEnumerator(name: "CODE_FOR_rintxf2", value: 611, isUnsigned: true)
!1410 = !DIEnumerator(name: "CODE_FOR_fistdi2", value: 613, isUnsigned: true)
!1411 = !DIEnumerator(name: "CODE_FOR_fistdi2_with_temp", value: 614, isUnsigned: true)
!1412 = !DIEnumerator(name: "CODE_FOR_fisthi2", value: 617, isUnsigned: true)
!1413 = !DIEnumerator(name: "CODE_FOR_fistsi2", value: 618, isUnsigned: true)
!1414 = !DIEnumerator(name: "CODE_FOR_fisthi2_with_temp", value: 619, isUnsigned: true)
!1415 = !DIEnumerator(name: "CODE_FOR_fistsi2_with_temp", value: 620, isUnsigned: true)
!1416 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor", value: 621, isUnsigned: true)
!1417 = !DIEnumerator(name: "CODE_FOR_frndintxf2_floor_i387", value: 622, isUnsigned: true)
!1418 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor", value: 626, isUnsigned: true)
!1419 = !DIEnumerator(name: "CODE_FOR_fistdi2_floor_with_temp", value: 627, isUnsigned: true)
!1420 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor", value: 628, isUnsigned: true)
!1421 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor", value: 629, isUnsigned: true)
!1422 = !DIEnumerator(name: "CODE_FOR_fisthi2_floor_with_temp", value: 630, isUnsigned: true)
!1423 = !DIEnumerator(name: "CODE_FOR_fistsi2_floor_with_temp", value: 631, isUnsigned: true)
!1424 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil", value: 632, isUnsigned: true)
!1425 = !DIEnumerator(name: "CODE_FOR_frndintxf2_ceil_i387", value: 633, isUnsigned: true)
!1426 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil", value: 637, isUnsigned: true)
!1427 = !DIEnumerator(name: "CODE_FOR_fistdi2_ceil_with_temp", value: 638, isUnsigned: true)
!1428 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil", value: 639, isUnsigned: true)
!1429 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil", value: 640, isUnsigned: true)
!1430 = !DIEnumerator(name: "CODE_FOR_fisthi2_ceil_with_temp", value: 641, isUnsigned: true)
!1431 = !DIEnumerator(name: "CODE_FOR_fistsi2_ceil_with_temp", value: 642, isUnsigned: true)
!1432 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc", value: 643, isUnsigned: true)
!1433 = !DIEnumerator(name: "CODE_FOR_frndintxf2_trunc_i387", value: 644, isUnsigned: true)
!1434 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm", value: 645, isUnsigned: true)
!1435 = !DIEnumerator(name: "CODE_FOR_frndintxf2_mask_pm_i387", value: 646, isUnsigned: true)
!1436 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387", value: 647, isUnsigned: true)
!1437 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387", value: 648, isUnsigned: true)
!1438 = !DIEnumerator(name: "CODE_FOR_fxamxf2_i387", value: 649, isUnsigned: true)
!1439 = !DIEnumerator(name: "CODE_FOR_fxamsf2_i387_with_temp", value: 650, isUnsigned: true)
!1440 = !DIEnumerator(name: "CODE_FOR_fxamdf2_i387_with_temp", value: 651, isUnsigned: true)
!1441 = !DIEnumerator(name: "CODE_FOR_cld", value: 652, isUnsigned: true)
!1442 = !DIEnumerator(name: "CODE_FOR_smaxsf3", value: 681, isUnsigned: true)
!1443 = !DIEnumerator(name: "CODE_FOR_sminsf3", value: 682, isUnsigned: true)
!1444 = !DIEnumerator(name: "CODE_FOR_smaxdf3", value: 683, isUnsigned: true)
!1445 = !DIEnumerator(name: "CODE_FOR_smindf3", value: 684, isUnsigned: true)
!1446 = !DIEnumerator(name: "CODE_FOR_pro_epilogue_adjust_stack_1", value: 693, isUnsigned: true)
!1447 = !DIEnumerator(name: "CODE_FOR_allocate_stack_worker_32", value: 694, isUnsigned: true)
!1448 = !DIEnumerator(name: "CODE_FOR_trap", value: 701, isUnsigned: true)
!1449 = !DIEnumerator(name: "CODE_FOR_stack_protect_set_si", value: 704, isUnsigned: true)
!1450 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_set_si", value: 705, isUnsigned: true)
!1451 = !DIEnumerator(name: "CODE_FOR_stack_protect_test_si", value: 706, isUnsigned: true)
!1452 = !DIEnumerator(name: "CODE_FOR_stack_tls_protect_test_si", value: 707, isUnsigned: true)
!1453 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32qi", value: 708, isUnsigned: true)
!1454 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32hi", value: 709, isUnsigned: true)
!1455 = !DIEnumerator(name: "CODE_FOR_sse4_2_crc32si", value: 710, isUnsigned: true)
!1456 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcbsi", value: 715, isUnsigned: true)
!1457 = !DIEnumerator(name: "CODE_FOR_sse_movntdi", value: 728, isUnsigned: true)
!1458 = !DIEnumerator(name: "CODE_FOR_mmx_rcpv2sf2", value: 736, isUnsigned: true)
!1459 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit1v2sf3", value: 737, isUnsigned: true)
!1460 = !DIEnumerator(name: "CODE_FOR_mmx_rcpit2v2sf3", value: 738, isUnsigned: true)
!1461 = !DIEnumerator(name: "CODE_FOR_mmx_rsqrtv2sf2", value: 739, isUnsigned: true)
!1462 = !DIEnumerator(name: "CODE_FOR_mmx_rsqit1v2sf3", value: 740, isUnsigned: true)
!1463 = !DIEnumerator(name: "CODE_FOR_mmx_haddv2sf3", value: 741, isUnsigned: true)
!1464 = !DIEnumerator(name: "CODE_FOR_mmx_hsubv2sf3", value: 742, isUnsigned: true)
!1465 = !DIEnumerator(name: "CODE_FOR_mmx_addsubv2sf3", value: 743, isUnsigned: true)
!1466 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2sf3", value: 745, isUnsigned: true)
!1467 = !DIEnumerator(name: "CODE_FOR_mmx_gev2sf3", value: 746, isUnsigned: true)
!1468 = !DIEnumerator(name: "CODE_FOR_mmx_pf2id", value: 747, isUnsigned: true)
!1469 = !DIEnumerator(name: "CODE_FOR_mmx_pf2iw", value: 748, isUnsigned: true)
!1470 = !DIEnumerator(name: "CODE_FOR_mmx_pi2fw", value: 749, isUnsigned: true)
!1471 = !DIEnumerator(name: "CODE_FOR_mmx_floatv2si2", value: 750, isUnsigned: true)
!1472 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2sf2", value: 751, isUnsigned: true)
!1473 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv4hi3", value: 782, isUnsigned: true)
!1474 = !DIEnumerator(name: "CODE_FOR_mmx_ashrv2si3", value: 783, isUnsigned: true)
!1475 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv4hi3", value: 784, isUnsigned: true)
!1476 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv2si3", value: 785, isUnsigned: true)
!1477 = !DIEnumerator(name: "CODE_FOR_mmx_lshrv1di3", value: 786, isUnsigned: true)
!1478 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv4hi3", value: 787, isUnsigned: true)
!1479 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv2si3", value: 788, isUnsigned: true)
!1480 = !DIEnumerator(name: "CODE_FOR_mmx_ashlv1di3", value: 789, isUnsigned: true)
!1481 = !DIEnumerator(name: "CODE_FOR_mmx_gtv8qi3", value: 793, isUnsigned: true)
!1482 = !DIEnumerator(name: "CODE_FOR_mmx_gtv4hi3", value: 794, isUnsigned: true)
!1483 = !DIEnumerator(name: "CODE_FOR_mmx_gtv2si3", value: 795, isUnsigned: true)
!1484 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv8qi3", value: 796, isUnsigned: true)
!1485 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv4hi3", value: 797, isUnsigned: true)
!1486 = !DIEnumerator(name: "CODE_FOR_mmx_andnotv2si3", value: 798, isUnsigned: true)
!1487 = !DIEnumerator(name: "CODE_FOR_mmx_packsswb", value: 808, isUnsigned: true)
!1488 = !DIEnumerator(name: "CODE_FOR_mmx_packssdw", value: 809, isUnsigned: true)
!1489 = !DIEnumerator(name: "CODE_FOR_mmx_packuswb", value: 810, isUnsigned: true)
!1490 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhbw", value: 811, isUnsigned: true)
!1491 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklbw", value: 812, isUnsigned: true)
!1492 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhwd", value: 813, isUnsigned: true)
!1493 = !DIEnumerator(name: "CODE_FOR_mmx_punpcklwd", value: 814, isUnsigned: true)
!1494 = !DIEnumerator(name: "CODE_FOR_mmx_punpckhdq", value: 815, isUnsigned: true)
!1495 = !DIEnumerator(name: "CODE_FOR_mmx_punpckldq", value: 816, isUnsigned: true)
!1496 = !DIEnumerator(name: "CODE_FOR_mmx_pextrw", value: 818, isUnsigned: true)
!1497 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw_1", value: 819, isUnsigned: true)
!1498 = !DIEnumerator(name: "CODE_FOR_mmx_pswapdv2si2", value: 820, isUnsigned: true)
!1499 = !DIEnumerator(name: "CODE_FOR_mmx_psadbw", value: 828, isUnsigned: true)
!1500 = !DIEnumerator(name: "CODE_FOR_mmx_pmovmskb", value: 829, isUnsigned: true)
!1501 = !DIEnumerator(name: "CODE_FOR_movdi_to_sse", value: 853, isUnsigned: true)
!1502 = !DIEnumerator(name: "CODE_FOR_avx_movups", value: 854, isUnsigned: true)
!1503 = !DIEnumerator(name: "CODE_FOR_avx_movupd", value: 855, isUnsigned: true)
!1504 = !DIEnumerator(name: "CODE_FOR_avx_movups256", value: 856, isUnsigned: true)
!1505 = !DIEnumerator(name: "CODE_FOR_avx_movupd256", value: 857, isUnsigned: true)
!1506 = !DIEnumerator(name: "CODE_FOR_sse2_movq128", value: 858, isUnsigned: true)
!1507 = !DIEnumerator(name: "CODE_FOR_sse_movups", value: 859, isUnsigned: true)
!1508 = !DIEnumerator(name: "CODE_FOR_sse2_movupd", value: 860, isUnsigned: true)
!1509 = !DIEnumerator(name: "CODE_FOR_avx_movdqu256", value: 861, isUnsigned: true)
!1510 = !DIEnumerator(name: "CODE_FOR_avx_movdqu", value: 862, isUnsigned: true)
!1511 = !DIEnumerator(name: "CODE_FOR_sse2_movdqu", value: 863, isUnsigned: true)
!1512 = !DIEnumerator(name: "CODE_FOR_avx_movntv4sf", value: 864, isUnsigned: true)
!1513 = !DIEnumerator(name: "CODE_FOR_avx_movntv2df", value: 865, isUnsigned: true)
!1514 = !DIEnumerator(name: "CODE_FOR_avx_movntv8sf", value: 866, isUnsigned: true)
!1515 = !DIEnumerator(name: "CODE_FOR_avx_movntv4df", value: 867, isUnsigned: true)
!1516 = !DIEnumerator(name: "CODE_FOR_sse_movntv4sf", value: 868, isUnsigned: true)
!1517 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2df", value: 869, isUnsigned: true)
!1518 = !DIEnumerator(name: "CODE_FOR_avx_movntv4di", value: 870, isUnsigned: true)
!1519 = !DIEnumerator(name: "CODE_FOR_avx_movntv2di", value: 871, isUnsigned: true)
!1520 = !DIEnumerator(name: "CODE_FOR_sse2_movntv2di", value: 872, isUnsigned: true)
!1521 = !DIEnumerator(name: "CODE_FOR_sse2_movntsi", value: 873, isUnsigned: true)
!1522 = !DIEnumerator(name: "CODE_FOR_avx_lddqu256", value: 874, isUnsigned: true)
!1523 = !DIEnumerator(name: "CODE_FOR_avx_lddqu", value: 875, isUnsigned: true)
!1524 = !DIEnumerator(name: "CODE_FOR_sse3_lddqu", value: 876, isUnsigned: true)
!1525 = !DIEnumerator(name: "CODE_FOR_sse_vmaddv4sf3", value: 893, isUnsigned: true)
!1526 = !DIEnumerator(name: "CODE_FOR_sse_vmsubv4sf3", value: 894, isUnsigned: true)
!1527 = !DIEnumerator(name: "CODE_FOR_sse2_vmaddv2df3", value: 895, isUnsigned: true)
!1528 = !DIEnumerator(name: "CODE_FOR_sse2_vmsubv2df3", value: 896, isUnsigned: true)
!1529 = !DIEnumerator(name: "CODE_FOR_sse_vmmulv4sf3", value: 905, isUnsigned: true)
!1530 = !DIEnumerator(name: "CODE_FOR_sse2_vmmulv2df3", value: 906, isUnsigned: true)
!1531 = !DIEnumerator(name: "CODE_FOR_avx_divv4sf3", value: 907, isUnsigned: true)
!1532 = !DIEnumerator(name: "CODE_FOR_avx_divv2df3", value: 908, isUnsigned: true)
!1533 = !DIEnumerator(name: "CODE_FOR_avx_divv8sf3", value: 909, isUnsigned: true)
!1534 = !DIEnumerator(name: "CODE_FOR_avx_divv4df3", value: 910, isUnsigned: true)
!1535 = !DIEnumerator(name: "CODE_FOR_sse_divv4sf3", value: 913, isUnsigned: true)
!1536 = !DIEnumerator(name: "CODE_FOR_sse2_divv2df3", value: 914, isUnsigned: true)
!1537 = !DIEnumerator(name: "CODE_FOR_sse_vmdivv4sf3", value: 917, isUnsigned: true)
!1538 = !DIEnumerator(name: "CODE_FOR_sse2_vmdivv2df3", value: 918, isUnsigned: true)
!1539 = !DIEnumerator(name: "CODE_FOR_avx_rcpv8sf2", value: 919, isUnsigned: true)
!1540 = !DIEnumerator(name: "CODE_FOR_sse_rcpv4sf2", value: 920, isUnsigned: true)
!1541 = !DIEnumerator(name: "CODE_FOR_sse_vmrcpv4sf2", value: 922, isUnsigned: true)
!1542 = !DIEnumerator(name: "CODE_FOR_avx_sqrtv8sf2", value: 923, isUnsigned: true)
!1543 = !DIEnumerator(name: "CODE_FOR_sse_sqrtv4sf2", value: 924, isUnsigned: true)
!1544 = !DIEnumerator(name: "CODE_FOR_sqrtv4df2", value: 925, isUnsigned: true)
!1545 = !DIEnumerator(name: "CODE_FOR_sqrtv2df2", value: 926, isUnsigned: true)
!1546 = !DIEnumerator(name: "CODE_FOR_sse_vmsqrtv4sf2", value: 929, isUnsigned: true)
!1547 = !DIEnumerator(name: "CODE_FOR_sse2_vmsqrtv2df2", value: 930, isUnsigned: true)
!1548 = !DIEnumerator(name: "CODE_FOR_avx_rsqrtv8sf2", value: 931, isUnsigned: true)
!1549 = !DIEnumerator(name: "CODE_FOR_sse_rsqrtv4sf2", value: 932, isUnsigned: true)
!1550 = !DIEnumerator(name: "CODE_FOR_sse_vmrsqrtv4sf2", value: 934, isUnsigned: true)
!1551 = !DIEnumerator(name: "CODE_FOR_sse_vmsmaxv4sf3", value: 963, isUnsigned: true)
!1552 = !DIEnumerator(name: "CODE_FOR_sse_vmsminv4sf3", value: 964, isUnsigned: true)
!1553 = !DIEnumerator(name: "CODE_FOR_sse2_vmsmaxv2df3", value: 965, isUnsigned: true)
!1554 = !DIEnumerator(name: "CODE_FOR_sse2_vmsminv2df3", value: 966, isUnsigned: true)
!1555 = !DIEnumerator(name: "CODE_FOR_avx_addsubv8sf3", value: 979, isUnsigned: true)
!1556 = !DIEnumerator(name: "CODE_FOR_avx_addsubv4df3", value: 980, isUnsigned: true)
!1557 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv4sf3", value: 982, isUnsigned: true)
!1558 = !DIEnumerator(name: "CODE_FOR_sse3_addsubv2df3", value: 984, isUnsigned: true)
!1559 = !DIEnumerator(name: "CODE_FOR_avx_haddv4df3", value: 985, isUnsigned: true)
!1560 = !DIEnumerator(name: "CODE_FOR_avx_hsubv4df3", value: 986, isUnsigned: true)
!1561 = !DIEnumerator(name: "CODE_FOR_avx_haddv8sf3", value: 987, isUnsigned: true)
!1562 = !DIEnumerator(name: "CODE_FOR_avx_hsubv8sf3", value: 988, isUnsigned: true)
!1563 = !DIEnumerator(name: "CODE_FOR_sse3_haddv4sf3", value: 991, isUnsigned: true)
!1564 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv4sf3", value: 992, isUnsigned: true)
!1565 = !DIEnumerator(name: "CODE_FOR_sse3_haddv2df3", value: 995, isUnsigned: true)
!1566 = !DIEnumerator(name: "CODE_FOR_sse3_hsubv2df3", value: 996, isUnsigned: true)
!1567 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv4sf3", value: 997, isUnsigned: true)
!1568 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv2df3", value: 998, isUnsigned: true)
!1569 = !DIEnumerator(name: "CODE_FOR_avx_cmppsv8sf3", value: 999, isUnsigned: true)
!1570 = !DIEnumerator(name: "CODE_FOR_avx_cmppdv4df3", value: 1000, isUnsigned: true)
!1571 = !DIEnumerator(name: "CODE_FOR_avx_cmpssv4sf3", value: 1001, isUnsigned: true)
!1572 = !DIEnumerator(name: "CODE_FOR_avx_cmpsdv2df3", value: 1002, isUnsigned: true)
!1573 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpsf3", value: 1007, isUnsigned: true)
!1574 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpdf3", value: 1008, isUnsigned: true)
!1575 = !DIEnumerator(name: "CODE_FOR_sse_maskcmpv4sf3", value: 1009, isUnsigned: true)
!1576 = !DIEnumerator(name: "CODE_FOR_sse2_maskcmpv2df3", value: 1010, isUnsigned: true)
!1577 = !DIEnumerator(name: "CODE_FOR_sse_vmmaskcmpv4sf3", value: 1011, isUnsigned: true)
!1578 = !DIEnumerator(name: "CODE_FOR_sse2_vmmaskcmpv2df3", value: 1012, isUnsigned: true)
!1579 = !DIEnumerator(name: "CODE_FOR_sse_comi", value: 1013, isUnsigned: true)
!1580 = !DIEnumerator(name: "CODE_FOR_sse2_comi", value: 1014, isUnsigned: true)
!1581 = !DIEnumerator(name: "CODE_FOR_sse_ucomi", value: 1015, isUnsigned: true)
!1582 = !DIEnumerator(name: "CODE_FOR_sse2_ucomi", value: 1016, isUnsigned: true)
!1583 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4sf3", value: 1017, isUnsigned: true)
!1584 = !DIEnumerator(name: "CODE_FOR_avx_andnotv2df3", value: 1018, isUnsigned: true)
!1585 = !DIEnumerator(name: "CODE_FOR_avx_andnotv8sf3", value: 1019, isUnsigned: true)
!1586 = !DIEnumerator(name: "CODE_FOR_avx_andnotv4df3", value: 1020, isUnsigned: true)
!1587 = !DIEnumerator(name: "CODE_FOR_sse_andnotv4sf3", value: 1021, isUnsigned: true)
!1588 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2df3", value: 1022, isUnsigned: true)
!1589 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv8sf4256", value: 1057, isUnsigned: true)
!1590 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4df4256", value: 1058, isUnsigned: true)
!1591 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv8sf4256", value: 1059, isUnsigned: true)
!1592 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4df4256", value: 1060, isUnsigned: true)
!1593 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv8sf4256", value: 1061, isUnsigned: true)
!1594 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4df4256", value: 1062, isUnsigned: true)
!1595 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv8sf4256", value: 1063, isUnsigned: true)
!1596 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4df4256", value: 1064, isUnsigned: true)
!1597 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsf4", value: 1065, isUnsigned: true)
!1598 = !DIEnumerator(name: "CODE_FOR_fma4_fmadddf4", value: 1066, isUnsigned: true)
!1599 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv4sf4", value: 1067, isUnsigned: true)
!1600 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddv2df4", value: 1068, isUnsigned: true)
!1601 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv4sf4", value: 1069, isUnsigned: true)
!1602 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmaddv2df4", value: 1070, isUnsigned: true)
!1603 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubsf4", value: 1071, isUnsigned: true)
!1604 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubdf4", value: 1072, isUnsigned: true)
!1605 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv4sf4", value: 1073, isUnsigned: true)
!1606 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubv2df4", value: 1074, isUnsigned: true)
!1607 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv4sf4", value: 1075, isUnsigned: true)
!1608 = !DIEnumerator(name: "CODE_FOR_fma4_vmfmsubv2df4", value: 1076, isUnsigned: true)
!1609 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddsf4", value: 1077, isUnsigned: true)
!1610 = !DIEnumerator(name: "CODE_FOR_fma4_fnmadddf4", value: 1078, isUnsigned: true)
!1611 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv4sf4", value: 1079, isUnsigned: true)
!1612 = !DIEnumerator(name: "CODE_FOR_fma4_fnmaddv2df4", value: 1080, isUnsigned: true)
!1613 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv4sf4", value: 1081, isUnsigned: true)
!1614 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmaddv2df4", value: 1082, isUnsigned: true)
!1615 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubsf4", value: 1083, isUnsigned: true)
!1616 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubdf4", value: 1084, isUnsigned: true)
!1617 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv4sf4", value: 1085, isUnsigned: true)
!1618 = !DIEnumerator(name: "CODE_FOR_fma4_fnmsubv2df4", value: 1086, isUnsigned: true)
!1619 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv4sf4", value: 1087, isUnsigned: true)
!1620 = !DIEnumerator(name: "CODE_FOR_fma4_vmfnmsubv2df4", value: 1088, isUnsigned: true)
!1621 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv8sf4256", value: 1089, isUnsigned: true)
!1622 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4df4256", value: 1090, isUnsigned: true)
!1623 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv8sf4256", value: 1091, isUnsigned: true)
!1624 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4df4256", value: 1092, isUnsigned: true)
!1625 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv8sf4256", value: 1093, isUnsigned: true)
!1626 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4df4256", value: 1094, isUnsigned: true)
!1627 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv8sf4256", value: 1095, isUnsigned: true)
!1628 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4df4256", value: 1096, isUnsigned: true)
!1629 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv4sf4", value: 1097, isUnsigned: true)
!1630 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddv2df4", value: 1098, isUnsigned: true)
!1631 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv4sf4", value: 1099, isUnsigned: true)
!1632 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubv2df4", value: 1100, isUnsigned: true)
!1633 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv4sf4", value: 1101, isUnsigned: true)
!1634 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmaddv2df4", value: 1102, isUnsigned: true)
!1635 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv4sf4", value: 1103, isUnsigned: true)
!1636 = !DIEnumerator(name: "CODE_FOR_fma4i_fnmsubv2df4", value: 1104, isUnsigned: true)
!1637 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv4sf4", value: 1105, isUnsigned: true)
!1638 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmaddv2df4", value: 1106, isUnsigned: true)
!1639 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv4sf4", value: 1107, isUnsigned: true)
!1640 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfmsubv2df4", value: 1108, isUnsigned: true)
!1641 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv4sf4", value: 1109, isUnsigned: true)
!1642 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmaddv2df4", value: 1110, isUnsigned: true)
!1643 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv4sf4", value: 1111, isUnsigned: true)
!1644 = !DIEnumerator(name: "CODE_FOR_fma4i_vmfnmsubv2df4", value: 1112, isUnsigned: true)
!1645 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv8sf4", value: 1113, isUnsigned: true)
!1646 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4df4", value: 1114, isUnsigned: true)
!1647 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv4sf4", value: 1115, isUnsigned: true)
!1648 = !DIEnumerator(name: "CODE_FOR_fma4_fmaddsubv2df4", value: 1116, isUnsigned: true)
!1649 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv8sf4", value: 1117, isUnsigned: true)
!1650 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4df4", value: 1118, isUnsigned: true)
!1651 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv4sf4", value: 1119, isUnsigned: true)
!1652 = !DIEnumerator(name: "CODE_FOR_fma4_fmsubaddv2df4", value: 1120, isUnsigned: true)
!1653 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv8sf4", value: 1121, isUnsigned: true)
!1654 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4df4", value: 1122, isUnsigned: true)
!1655 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv4sf4", value: 1123, isUnsigned: true)
!1656 = !DIEnumerator(name: "CODE_FOR_fma4i_fmaddsubv2df4", value: 1124, isUnsigned: true)
!1657 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv8sf4", value: 1125, isUnsigned: true)
!1658 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4df4", value: 1126, isUnsigned: true)
!1659 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv4sf4", value: 1127, isUnsigned: true)
!1660 = !DIEnumerator(name: "CODE_FOR_fma4i_fmsubaddv2df4", value: 1128, isUnsigned: true)
!1661 = !DIEnumerator(name: "CODE_FOR_sse_cvtpi2ps", value: 1129, isUnsigned: true)
!1662 = !DIEnumerator(name: "CODE_FOR_sse_cvtps2pi", value: 1130, isUnsigned: true)
!1663 = !DIEnumerator(name: "CODE_FOR_sse_cvttps2pi", value: 1131, isUnsigned: true)
!1664 = !DIEnumerator(name: "CODE_FOR_sse_cvtsi2ss", value: 1133, isUnsigned: true)
!1665 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si", value: 1134, isUnsigned: true)
!1666 = !DIEnumerator(name: "CODE_FOR_sse_cvtss2si_2", value: 1135, isUnsigned: true)
!1667 = !DIEnumerator(name: "CODE_FOR_sse_cvttss2si", value: 1136, isUnsigned: true)
!1668 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps", value: 1137, isUnsigned: true)
!1669 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2ps256", value: 1138, isUnsigned: true)
!1670 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2ps", value: 1139, isUnsigned: true)
!1671 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq", value: 1140, isUnsigned: true)
!1672 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2dq256", value: 1141, isUnsigned: true)
!1673 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2dq", value: 1142, isUnsigned: true)
!1674 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq", value: 1143, isUnsigned: true)
!1675 = !DIEnumerator(name: "CODE_FOR_avx_cvttps2dq256", value: 1144, isUnsigned: true)
!1676 = !DIEnumerator(name: "CODE_FOR_sse2_cvttps2dq", value: 1145, isUnsigned: true)
!1677 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpi2pd", value: 1146, isUnsigned: true)
!1678 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2pi", value: 1147, isUnsigned: true)
!1679 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2pi", value: 1148, isUnsigned: true)
!1680 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsi2sd", value: 1150, isUnsigned: true)
!1681 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si", value: 1151, isUnsigned: true)
!1682 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2si_2", value: 1152, isUnsigned: true)
!1683 = !DIEnumerator(name: "CODE_FOR_sse2_cvttsd2si", value: 1153, isUnsigned: true)
!1684 = !DIEnumerator(name: "CODE_FOR_avx_cvtdq2pd256", value: 1154, isUnsigned: true)
!1685 = !DIEnumerator(name: "CODE_FOR_sse2_cvtdq2pd", value: 1155, isUnsigned: true)
!1686 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2dq256", value: 1156, isUnsigned: true)
!1687 = !DIEnumerator(name: "CODE_FOR_avx_cvttpd2dq256", value: 1158, isUnsigned: true)
!1688 = !DIEnumerator(name: "CODE_FOR_sse2_cvtsd2ss", value: 1161, isUnsigned: true)
!1689 = !DIEnumerator(name: "CODE_FOR_sse2_cvtss2sd", value: 1163, isUnsigned: true)
!1690 = !DIEnumerator(name: "CODE_FOR_avx_cvtpd2ps256", value: 1164, isUnsigned: true)
!1691 = !DIEnumerator(name: "CODE_FOR_avx_cvtps2pd256", value: 1166, isUnsigned: true)
!1692 = !DIEnumerator(name: "CODE_FOR_sse2_cvtps2pd", value: 1167, isUnsigned: true)
!1693 = !DIEnumerator(name: "CODE_FOR_sse_movhlps", value: 1169, isUnsigned: true)
!1694 = !DIEnumerator(name: "CODE_FOR_sse_movlhps", value: 1171, isUnsigned: true)
!1695 = !DIEnumerator(name: "CODE_FOR_avx_unpckhps256", value: 1172, isUnsigned: true)
!1696 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4sf", value: 1174, isUnsigned: true)
!1697 = !DIEnumerator(name: "CODE_FOR_avx_unpcklps256", value: 1175, isUnsigned: true)
!1698 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4sf", value: 1177, isUnsigned: true)
!1699 = !DIEnumerator(name: "CODE_FOR_avx_movshdup256", value: 1178, isUnsigned: true)
!1700 = !DIEnumerator(name: "CODE_FOR_sse3_movshdup", value: 1179, isUnsigned: true)
!1701 = !DIEnumerator(name: "CODE_FOR_avx_movsldup256", value: 1180, isUnsigned: true)
!1702 = !DIEnumerator(name: "CODE_FOR_sse3_movsldup", value: 1181, isUnsigned: true)
!1703 = !DIEnumerator(name: "CODE_FOR_avx_shufps256_1", value: 1182, isUnsigned: true)
!1704 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4sf", value: 1185, isUnsigned: true)
!1705 = !DIEnumerator(name: "CODE_FOR_sse_shufps_v4si", value: 1186, isUnsigned: true)
!1706 = !DIEnumerator(name: "CODE_FOR_sse_storehps", value: 1187, isUnsigned: true)
!1707 = !DIEnumerator(name: "CODE_FOR_sse_loadhps", value: 1189, isUnsigned: true)
!1708 = !DIEnumerator(name: "CODE_FOR_sse_storelps", value: 1191, isUnsigned: true)
!1709 = !DIEnumerator(name: "CODE_FOR_sse_loadlps", value: 1193, isUnsigned: true)
!1710 = !DIEnumerator(name: "CODE_FOR_sse_movss", value: 1195, isUnsigned: true)
!1711 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf_0", value: 1209, isUnsigned: true)
!1712 = !DIEnumerator(name: "CODE_FOR_vec_setv4si_0", value: 1210, isUnsigned: true)
!1713 = !DIEnumerator(name: "CODE_FOR_sse4_1_insertps", value: 1214, isUnsigned: true)
!1714 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4di", value: 1216, isUnsigned: true)
!1715 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v4df", value: 1217, isUnsigned: true)
!1716 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4di", value: 1218, isUnsigned: true)
!1717 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v4df", value: 1219, isUnsigned: true)
!1718 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8si", value: 1220, isUnsigned: true)
!1719 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v8sf", value: 1221, isUnsigned: true)
!1720 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8si", value: 1222, isUnsigned: true)
!1721 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v8sf", value: 1223, isUnsigned: true)
!1722 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v16hi", value: 1224, isUnsigned: true)
!1723 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v16hi", value: 1225, isUnsigned: true)
!1724 = !DIEnumerator(name: "CODE_FOR_vec_extract_lo_v32qi", value: 1226, isUnsigned: true)
!1725 = !DIEnumerator(name: "CODE_FOR_vec_extract_hi_v32qi", value: 1227, isUnsigned: true)
!1726 = !DIEnumerator(name: "CODE_FOR_avx_unpckhpd256", value: 1230, isUnsigned: true)
!1727 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256_1", value: 1238, isUnsigned: true)
!1728 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2di", value: 1240, isUnsigned: true)
!1729 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2di", value: 1242, isUnsigned: true)
!1730 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2df", value: 1245, isUnsigned: true)
!1731 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd_v2di", value: 1246, isUnsigned: true)
!1732 = !DIEnumerator(name: "CODE_FOR_sse2_storehpd", value: 1248, isUnsigned: true)
!1733 = !DIEnumerator(name: "CODE_FOR_sse2_storelpd", value: 1249, isUnsigned: true)
!1734 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd", value: 1251, isUnsigned: true)
!1735 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd", value: 1253, isUnsigned: true)
!1736 = !DIEnumerator(name: "CODE_FOR_sse2_movsd", value: 1257, isUnsigned: true)
!1737 = !DIEnumerator(name: "CODE_FOR_vec_dupv2df", value: 1259, isUnsigned: true)
!1738 = !DIEnumerator(name: "CODE_FOR_mulv16qi3", value: 1295, isUnsigned: true)
!1739 = !DIEnumerator(name: "CODE_FOR_mulv2di3", value: 1311, isUnsigned: true)
!1740 = !DIEnumerator(name: "CODE_FOR_ashrv8hi3", value: 1314, isUnsigned: true)
!1741 = !DIEnumerator(name: "CODE_FOR_ashrv4si3", value: 1315, isUnsigned: true)
!1742 = !DIEnumerator(name: "CODE_FOR_sse2_lshrv1ti3", value: 1320, isUnsigned: true)
!1743 = !DIEnumerator(name: "CODE_FOR_lshrv8hi3", value: 1321, isUnsigned: true)
!1744 = !DIEnumerator(name: "CODE_FOR_lshrv4si3", value: 1322, isUnsigned: true)
!1745 = !DIEnumerator(name: "CODE_FOR_lshrv2di3", value: 1323, isUnsigned: true)
!1746 = !DIEnumerator(name: "CODE_FOR_sse2_ashlv1ti3", value: 1328, isUnsigned: true)
!1747 = !DIEnumerator(name: "CODE_FOR_ashlv8hi3", value: 1329, isUnsigned: true)
!1748 = !DIEnumerator(name: "CODE_FOR_ashlv4si3", value: 1330, isUnsigned: true)
!1749 = !DIEnumerator(name: "CODE_FOR_ashlv2di3", value: 1331, isUnsigned: true)
!1750 = !DIEnumerator(name: "CODE_FOR_sse2_gtv16qi3", value: 1368, isUnsigned: true)
!1751 = !DIEnumerator(name: "CODE_FOR_sse2_gtv8hi3", value: 1369, isUnsigned: true)
!1752 = !DIEnumerator(name: "CODE_FOR_sse2_gtv4si3", value: 1370, isUnsigned: true)
!1753 = !DIEnumerator(name: "CODE_FOR_sse4_2_gtv2di3", value: 1371, isUnsigned: true)
!1754 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv16qi3", value: 1384, isUnsigned: true)
!1755 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv8hi3", value: 1385, isUnsigned: true)
!1756 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv4si3", value: 1386, isUnsigned: true)
!1757 = !DIEnumerator(name: "CODE_FOR_sse2_andnotv2di3", value: 1387, isUnsigned: true)
!1758 = !DIEnumerator(name: "CODE_FOR_sse2_packsswb", value: 1441, isUnsigned: true)
!1759 = !DIEnumerator(name: "CODE_FOR_sse2_packssdw", value: 1443, isUnsigned: true)
!1760 = !DIEnumerator(name: "CODE_FOR_sse2_packuswb", value: 1445, isUnsigned: true)
!1761 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv16qi", value: 1447, isUnsigned: true)
!1762 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv16qi", value: 1449, isUnsigned: true)
!1763 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv8hi", value: 1451, isUnsigned: true)
!1764 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv8hi", value: 1453, isUnsigned: true)
!1765 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv4si", value: 1455, isUnsigned: true)
!1766 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv4si", value: 1457, isUnsigned: true)
!1767 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd_1", value: 1469, isUnsigned: true)
!1768 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw_1", value: 1470, isUnsigned: true)
!1769 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw_1", value: 1471, isUnsigned: true)
!1770 = !DIEnumerator(name: "CODE_FOR_sse2_loadld", value: 1473, isUnsigned: true)
!1771 = !DIEnumerator(name: "CODE_FOR_sse2_stored", value: 1474, isUnsigned: true)
!1772 = !DIEnumerator(name: "CODE_FOR_vec_concatv2di", value: 1492, isUnsigned: true)
!1773 = !DIEnumerator(name: "CODE_FOR_sse2_psadbw", value: 1498, isUnsigned: true)
!1774 = !DIEnumerator(name: "CODE_FOR_avx_movmskps256", value: 1499, isUnsigned: true)
!1775 = !DIEnumerator(name: "CODE_FOR_avx_movmskpd256", value: 1500, isUnsigned: true)
!1776 = !DIEnumerator(name: "CODE_FOR_sse_movmskps", value: 1501, isUnsigned: true)
!1777 = !DIEnumerator(name: "CODE_FOR_sse2_movmskpd", value: 1502, isUnsigned: true)
!1778 = !DIEnumerator(name: "CODE_FOR_sse2_pmovmskb", value: 1503, isUnsigned: true)
!1779 = !DIEnumerator(name: "CODE_FOR_sse_ldmxcsr", value: 1505, isUnsigned: true)
!1780 = !DIEnumerator(name: "CODE_FOR_sse_stmxcsr", value: 1506, isUnsigned: true)
!1781 = !DIEnumerator(name: "CODE_FOR_sse2_clflush", value: 1508, isUnsigned: true)
!1782 = !DIEnumerator(name: "CODE_FOR_sse3_mwait", value: 1511, isUnsigned: true)
!1783 = !DIEnumerator(name: "CODE_FOR_sse3_monitor", value: 1512, isUnsigned: true)
!1784 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv8hi3", value: 1514, isUnsigned: true)
!1785 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddwv4hi3", value: 1515, isUnsigned: true)
!1786 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv4si3", value: 1517, isUnsigned: true)
!1787 = !DIEnumerator(name: "CODE_FOR_ssse3_phadddv2si3", value: 1518, isUnsigned: true)
!1788 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv8hi3", value: 1520, isUnsigned: true)
!1789 = !DIEnumerator(name: "CODE_FOR_ssse3_phaddswv4hi3", value: 1521, isUnsigned: true)
!1790 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv8hi3", value: 1523, isUnsigned: true)
!1791 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubwv4hi3", value: 1524, isUnsigned: true)
!1792 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv4si3", value: 1526, isUnsigned: true)
!1793 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubdv2si3", value: 1527, isUnsigned: true)
!1794 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv8hi3", value: 1529, isUnsigned: true)
!1795 = !DIEnumerator(name: "CODE_FOR_ssse3_phsubswv4hi3", value: 1530, isUnsigned: true)
!1796 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw128", value: 1532, isUnsigned: true)
!1797 = !DIEnumerator(name: "CODE_FOR_ssse3_pmaddubsw", value: 1533, isUnsigned: true)
!1798 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv16qi3", value: 1538, isUnsigned: true)
!1799 = !DIEnumerator(name: "CODE_FOR_ssse3_pshufbv8qi3", value: 1539, isUnsigned: true)
!1800 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv16qi3", value: 1543, isUnsigned: true)
!1801 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8hi3", value: 1544, isUnsigned: true)
!1802 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4si3", value: 1545, isUnsigned: true)
!1803 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv8qi3", value: 1546, isUnsigned: true)
!1804 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv4hi3", value: 1547, isUnsigned: true)
!1805 = !DIEnumerator(name: "CODE_FOR_ssse3_psignv2si3", value: 1548, isUnsigned: true)
!1806 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrti", value: 1550, isUnsigned: true)
!1807 = !DIEnumerator(name: "CODE_FOR_ssse3_palignrdi", value: 1551, isUnsigned: true)
!1808 = !DIEnumerator(name: "CODE_FOR_absv16qi2", value: 1552, isUnsigned: true)
!1809 = !DIEnumerator(name: "CODE_FOR_absv8hi2", value: 1553, isUnsigned: true)
!1810 = !DIEnumerator(name: "CODE_FOR_absv4si2", value: 1554, isUnsigned: true)
!1811 = !DIEnumerator(name: "CODE_FOR_absv8qi2", value: 1555, isUnsigned: true)
!1812 = !DIEnumerator(name: "CODE_FOR_absv4hi2", value: 1556, isUnsigned: true)
!1813 = !DIEnumerator(name: "CODE_FOR_absv2si2", value: 1557, isUnsigned: true)
!1814 = !DIEnumerator(name: "CODE_FOR_sse4a_movntsf", value: 1558, isUnsigned: true)
!1815 = !DIEnumerator(name: "CODE_FOR_sse4a_movntdf", value: 1559, isUnsigned: true)
!1816 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv4sf", value: 1560, isUnsigned: true)
!1817 = !DIEnumerator(name: "CODE_FOR_sse4a_vmmovntv2df", value: 1561, isUnsigned: true)
!1818 = !DIEnumerator(name: "CODE_FOR_sse4a_extrqi", value: 1562, isUnsigned: true)
!1819 = !DIEnumerator(name: "CODE_FOR_sse4a_extrq", value: 1563, isUnsigned: true)
!1820 = !DIEnumerator(name: "CODE_FOR_sse4a_insertqi", value: 1564, isUnsigned: true)
!1821 = !DIEnumerator(name: "CODE_FOR_sse4a_insertq", value: 1565, isUnsigned: true)
!1822 = !DIEnumerator(name: "CODE_FOR_avx_blendps", value: 1566, isUnsigned: true)
!1823 = !DIEnumerator(name: "CODE_FOR_avx_blendpd", value: 1567, isUnsigned: true)
!1824 = !DIEnumerator(name: "CODE_FOR_avx_blendps256", value: 1568, isUnsigned: true)
!1825 = !DIEnumerator(name: "CODE_FOR_avx_blendpd256", value: 1569, isUnsigned: true)
!1826 = !DIEnumerator(name: "CODE_FOR_avx_blendvps", value: 1570, isUnsigned: true)
!1827 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd", value: 1571, isUnsigned: true)
!1828 = !DIEnumerator(name: "CODE_FOR_avx_blendvps256", value: 1572, isUnsigned: true)
!1829 = !DIEnumerator(name: "CODE_FOR_avx_blendvpd256", value: 1573, isUnsigned: true)
!1830 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendps", value: 1574, isUnsigned: true)
!1831 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendpd", value: 1575, isUnsigned: true)
!1832 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvps", value: 1576, isUnsigned: true)
!1833 = !DIEnumerator(name: "CODE_FOR_sse4_1_blendvpd", value: 1577, isUnsigned: true)
!1834 = !DIEnumerator(name: "CODE_FOR_avx_dpps", value: 1578, isUnsigned: true)
!1835 = !DIEnumerator(name: "CODE_FOR_avx_dppd", value: 1579, isUnsigned: true)
!1836 = !DIEnumerator(name: "CODE_FOR_avx_dpps256", value: 1580, isUnsigned: true)
!1837 = !DIEnumerator(name: "CODE_FOR_avx_dppd256", value: 1581, isUnsigned: true)
!1838 = !DIEnumerator(name: "CODE_FOR_sse4_1_dpps", value: 1582, isUnsigned: true)
!1839 = !DIEnumerator(name: "CODE_FOR_sse4_1_dppd", value: 1583, isUnsigned: true)
!1840 = !DIEnumerator(name: "CODE_FOR_sse4_1_movntdqa", value: 1584, isUnsigned: true)
!1841 = !DIEnumerator(name: "CODE_FOR_sse4_1_mpsadbw", value: 1586, isUnsigned: true)
!1842 = !DIEnumerator(name: "CODE_FOR_sse4_1_packusdw", value: 1588, isUnsigned: true)
!1843 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendvb", value: 1590, isUnsigned: true)
!1844 = !DIEnumerator(name: "CODE_FOR_sse4_1_pblendw", value: 1592, isUnsigned: true)
!1845 = !DIEnumerator(name: "CODE_FOR_sse4_1_phminposuw", value: 1593, isUnsigned: true)
!1846 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv8qiv8hi2", value: 1594, isUnsigned: true)
!1847 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4qiv4si2", value: 1596, isUnsigned: true)
!1848 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2qiv2di2", value: 1598, isUnsigned: true)
!1849 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv4hiv4si2", value: 1600, isUnsigned: true)
!1850 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2hiv2di2", value: 1602, isUnsigned: true)
!1851 = !DIEnumerator(name: "CODE_FOR_sse4_1_extendv2siv2di2", value: 1604, isUnsigned: true)
!1852 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv8qiv8hi2", value: 1606, isUnsigned: true)
!1853 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4qiv4si2", value: 1608, isUnsigned: true)
!1854 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2qiv2di2", value: 1610, isUnsigned: true)
!1855 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv4hiv4si2", value: 1612, isUnsigned: true)
!1856 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2hiv2di2", value: 1614, isUnsigned: true)
!1857 = !DIEnumerator(name: "CODE_FOR_sse4_1_zero_extendv2siv2di2", value: 1616, isUnsigned: true)
!1858 = !DIEnumerator(name: "CODE_FOR_avx_vtestps", value: 1618, isUnsigned: true)
!1859 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd", value: 1619, isUnsigned: true)
!1860 = !DIEnumerator(name: "CODE_FOR_avx_vtestps256", value: 1620, isUnsigned: true)
!1861 = !DIEnumerator(name: "CODE_FOR_avx_vtestpd256", value: 1621, isUnsigned: true)
!1862 = !DIEnumerator(name: "CODE_FOR_avx_ptest256", value: 1622, isUnsigned: true)
!1863 = !DIEnumerator(name: "CODE_FOR_sse4_1_ptest", value: 1623, isUnsigned: true)
!1864 = !DIEnumerator(name: "CODE_FOR_avx_roundps256", value: 1624, isUnsigned: true)
!1865 = !DIEnumerator(name: "CODE_FOR_avx_roundpd256", value: 1625, isUnsigned: true)
!1866 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundps", value: 1626, isUnsigned: true)
!1867 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundpd", value: 1627, isUnsigned: true)
!1868 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundss", value: 1630, isUnsigned: true)
!1869 = !DIEnumerator(name: "CODE_FOR_sse4_1_roundsd", value: 1631, isUnsigned: true)
!1870 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr", value: 1632, isUnsigned: true)
!1871 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestri", value: 1633, isUnsigned: true)
!1872 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestrm", value: 1634, isUnsigned: true)
!1873 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpestr_cconly", value: 1635, isUnsigned: true)
!1874 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr", value: 1636, isUnsigned: true)
!1875 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistri", value: 1637, isUnsigned: true)
!1876 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistrm", value: 1638, isUnsigned: true)
!1877 = !DIEnumerator(name: "CODE_FOR_sse4_2_pcmpistr_cconly", value: 1639, isUnsigned: true)
!1878 = !DIEnumerator(name: "CODE_FOR_xop_pmacsww", value: 1640, isUnsigned: true)
!1879 = !DIEnumerator(name: "CODE_FOR_xop_pmacssww", value: 1641, isUnsigned: true)
!1880 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdd", value: 1642, isUnsigned: true)
!1881 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdd", value: 1643, isUnsigned: true)
!1882 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdql", value: 1644, isUnsigned: true)
!1883 = !DIEnumerator(name: "CODE_FOR_xop_pmacssdqh", value: 1645, isUnsigned: true)
!1884 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdql", value: 1646, isUnsigned: true)
!1885 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_low", value: 1647, isUnsigned: true)
!1886 = !DIEnumerator(name: "CODE_FOR_xop_pmacsdqh", value: 1648, isUnsigned: true)
!1887 = !DIEnumerator(name: "CODE_FOR_xop_mulv2div2di3_high", value: 1649, isUnsigned: true)
!1888 = !DIEnumerator(name: "CODE_FOR_xop_pmacsswd", value: 1650, isUnsigned: true)
!1889 = !DIEnumerator(name: "CODE_FOR_xop_pmacswd", value: 1651, isUnsigned: true)
!1890 = !DIEnumerator(name: "CODE_FOR_xop_pmadcsswd", value: 1652, isUnsigned: true)
!1891 = !DIEnumerator(name: "CODE_FOR_xop_pmadcswd", value: 1653, isUnsigned: true)
!1892 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16qi", value: 1654, isUnsigned: true)
!1893 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8hi", value: 1655, isUnsigned: true)
!1894 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4si", value: 1656, isUnsigned: true)
!1895 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2di", value: 1657, isUnsigned: true)
!1896 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4sf", value: 1658, isUnsigned: true)
!1897 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v2df", value: 1659, isUnsigned: true)
!1898 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v32qi256", value: 1660, isUnsigned: true)
!1899 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v16hi256", value: 1661, isUnsigned: true)
!1900 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8si256", value: 1662, isUnsigned: true)
!1901 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4di256", value: 1663, isUnsigned: true)
!1902 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v8sf256", value: 1664, isUnsigned: true)
!1903 = !DIEnumerator(name: "CODE_FOR_xop_pcmov_v4df256", value: 1665, isUnsigned: true)
!1904 = !DIEnumerator(name: "CODE_FOR_xop_phaddbw", value: 1666, isUnsigned: true)
!1905 = !DIEnumerator(name: "CODE_FOR_xop_phaddbd", value: 1667, isUnsigned: true)
!1906 = !DIEnumerator(name: "CODE_FOR_xop_phaddbq", value: 1668, isUnsigned: true)
!1907 = !DIEnumerator(name: "CODE_FOR_xop_phaddwd", value: 1669, isUnsigned: true)
!1908 = !DIEnumerator(name: "CODE_FOR_xop_phaddwq", value: 1670, isUnsigned: true)
!1909 = !DIEnumerator(name: "CODE_FOR_xop_phadddq", value: 1671, isUnsigned: true)
!1910 = !DIEnumerator(name: "CODE_FOR_xop_phaddubw", value: 1672, isUnsigned: true)
!1911 = !DIEnumerator(name: "CODE_FOR_xop_phaddubd", value: 1673, isUnsigned: true)
!1912 = !DIEnumerator(name: "CODE_FOR_xop_phaddubq", value: 1674, isUnsigned: true)
!1913 = !DIEnumerator(name: "CODE_FOR_xop_phadduwd", value: 1675, isUnsigned: true)
!1914 = !DIEnumerator(name: "CODE_FOR_xop_phadduwq", value: 1676, isUnsigned: true)
!1915 = !DIEnumerator(name: "CODE_FOR_xop_phaddudq", value: 1677, isUnsigned: true)
!1916 = !DIEnumerator(name: "CODE_FOR_xop_phsubbw", value: 1678, isUnsigned: true)
!1917 = !DIEnumerator(name: "CODE_FOR_xop_phsubwd", value: 1679, isUnsigned: true)
!1918 = !DIEnumerator(name: "CODE_FOR_xop_phsubdq", value: 1680, isUnsigned: true)
!1919 = !DIEnumerator(name: "CODE_FOR_xop_pperm", value: 1681, isUnsigned: true)
!1920 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v2di_v4si", value: 1682, isUnsigned: true)
!1921 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v4si_v8hi", value: 1683, isUnsigned: true)
!1922 = !DIEnumerator(name: "CODE_FOR_xop_pperm_pack_v8hi_v16qi", value: 1684, isUnsigned: true)
!1923 = !DIEnumerator(name: "CODE_FOR_xop_rotlv16qi3", value: 1685, isUnsigned: true)
!1924 = !DIEnumerator(name: "CODE_FOR_xop_rotlv8hi3", value: 1686, isUnsigned: true)
!1925 = !DIEnumerator(name: "CODE_FOR_xop_rotlv4si3", value: 1687, isUnsigned: true)
!1926 = !DIEnumerator(name: "CODE_FOR_xop_rotlv2di3", value: 1688, isUnsigned: true)
!1927 = !DIEnumerator(name: "CODE_FOR_xop_rotrv16qi3", value: 1689, isUnsigned: true)
!1928 = !DIEnumerator(name: "CODE_FOR_xop_rotrv8hi3", value: 1690, isUnsigned: true)
!1929 = !DIEnumerator(name: "CODE_FOR_xop_rotrv4si3", value: 1691, isUnsigned: true)
!1930 = !DIEnumerator(name: "CODE_FOR_xop_rotrv2di3", value: 1692, isUnsigned: true)
!1931 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv16qi3", value: 1693, isUnsigned: true)
!1932 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv8hi3", value: 1694, isUnsigned: true)
!1933 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv4si3", value: 1695, isUnsigned: true)
!1934 = !DIEnumerator(name: "CODE_FOR_xop_vrotlv2di3", value: 1696, isUnsigned: true)
!1935 = !DIEnumerator(name: "CODE_FOR_xop_ashlv16qi3", value: 1697, isUnsigned: true)
!1936 = !DIEnumerator(name: "CODE_FOR_xop_ashlv8hi3", value: 1698, isUnsigned: true)
!1937 = !DIEnumerator(name: "CODE_FOR_xop_ashlv4si3", value: 1699, isUnsigned: true)
!1938 = !DIEnumerator(name: "CODE_FOR_xop_ashlv2di3", value: 1700, isUnsigned: true)
!1939 = !DIEnumerator(name: "CODE_FOR_xop_lshlv16qi3", value: 1701, isUnsigned: true)
!1940 = !DIEnumerator(name: "CODE_FOR_xop_lshlv8hi3", value: 1702, isUnsigned: true)
!1941 = !DIEnumerator(name: "CODE_FOR_xop_lshlv4si3", value: 1703, isUnsigned: true)
!1942 = !DIEnumerator(name: "CODE_FOR_xop_lshlv2di3", value: 1704, isUnsigned: true)
!1943 = !DIEnumerator(name: "CODE_FOR_xop_frczv4sf2", value: 1705, isUnsigned: true)
!1944 = !DIEnumerator(name: "CODE_FOR_xop_frczv2df2", value: 1706, isUnsigned: true)
!1945 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv4sf2", value: 1707, isUnsigned: true)
!1946 = !DIEnumerator(name: "CODE_FOR_xop_vmfrczv2df2", value: 1708, isUnsigned: true)
!1947 = !DIEnumerator(name: "CODE_FOR_xop_frczv8sf2256", value: 1709, isUnsigned: true)
!1948 = !DIEnumerator(name: "CODE_FOR_xop_frczv4df2256", value: 1710, isUnsigned: true)
!1949 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv16qi3", value: 1711, isUnsigned: true)
!1950 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv8hi3", value: 1712, isUnsigned: true)
!1951 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv4si3", value: 1713, isUnsigned: true)
!1952 = !DIEnumerator(name: "CODE_FOR_xop_maskcmpv2di3", value: 1714, isUnsigned: true)
!1953 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv16qi3", value: 1715, isUnsigned: true)
!1954 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv8hi3", value: 1716, isUnsigned: true)
!1955 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv4si3", value: 1717, isUnsigned: true)
!1956 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_unsv2di3", value: 1718, isUnsigned: true)
!1957 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v16qi3", value: 1719, isUnsigned: true)
!1958 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v8hi3", value: 1720, isUnsigned: true)
!1959 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v4si3", value: 1721, isUnsigned: true)
!1960 = !DIEnumerator(name: "CODE_FOR_xop_maskcmp_uns2v2di3", value: 1722, isUnsigned: true)
!1961 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv16qi3", value: 1723, isUnsigned: true)
!1962 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv8hi3", value: 1724, isUnsigned: true)
!1963 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv4si3", value: 1725, isUnsigned: true)
!1964 = !DIEnumerator(name: "CODE_FOR_xop_pcom_tfv2di3", value: 1726, isUnsigned: true)
!1965 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4sf3", value: 1727, isUnsigned: true)
!1966 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v2df3", value: 1728, isUnsigned: true)
!1967 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v8sf3", value: 1729, isUnsigned: true)
!1968 = !DIEnumerator(name: "CODE_FOR_xop_vpermil2v4df3", value: 1730, isUnsigned: true)
!1969 = !DIEnumerator(name: "CODE_FOR_aesenc", value: 1732, isUnsigned: true)
!1970 = !DIEnumerator(name: "CODE_FOR_aesenclast", value: 1734, isUnsigned: true)
!1971 = !DIEnumerator(name: "CODE_FOR_aesdec", value: 1736, isUnsigned: true)
!1972 = !DIEnumerator(name: "CODE_FOR_aesdeclast", value: 1738, isUnsigned: true)
!1973 = !DIEnumerator(name: "CODE_FOR_aesimc", value: 1739, isUnsigned: true)
!1974 = !DIEnumerator(name: "CODE_FOR_aeskeygenassist", value: 1740, isUnsigned: true)
!1975 = !DIEnumerator(name: "CODE_FOR_pclmulqdq", value: 1742, isUnsigned: true)
!1976 = !DIEnumerator(name: "CODE_FOR_vec_dupv8si", value: 1745, isUnsigned: true)
!1977 = !DIEnumerator(name: "CODE_FOR_vec_dupv8sf", value: 1746, isUnsigned: true)
!1978 = !DIEnumerator(name: "CODE_FOR_vec_dupv4di", value: 1747, isUnsigned: true)
!1979 = !DIEnumerator(name: "CODE_FOR_vec_dupv4df", value: 1748, isUnsigned: true)
!1980 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v32qi", value: 1749, isUnsigned: true)
!1981 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v16hi", value: 1750, isUnsigned: true)
!1982 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8si", value: 1751, isUnsigned: true)
!1983 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4di", value: 1752, isUnsigned: true)
!1984 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v8sf", value: 1753, isUnsigned: true)
!1985 = !DIEnumerator(name: "CODE_FOR_avx_vbroadcastf128_v4df", value: 1754, isUnsigned: true)
!1986 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4sf3", value: 1762, isUnsigned: true)
!1987 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv2df3", value: 1763, isUnsigned: true)
!1988 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv8sf3", value: 1764, isUnsigned: true)
!1989 = !DIEnumerator(name: "CODE_FOR_avx_vpermilvarv4df3", value: 1765, isUnsigned: true)
!1990 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4di", value: 1772, isUnsigned: true)
!1991 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v4df", value: 1773, isUnsigned: true)
!1992 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4di", value: 1774, isUnsigned: true)
!1993 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v4df", value: 1775, isUnsigned: true)
!1994 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8si", value: 1776, isUnsigned: true)
!1995 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v8sf", value: 1777, isUnsigned: true)
!1996 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8si", value: 1778, isUnsigned: true)
!1997 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v8sf", value: 1779, isUnsigned: true)
!1998 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v16hi", value: 1780, isUnsigned: true)
!1999 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v16hi", value: 1781, isUnsigned: true)
!2000 = !DIEnumerator(name: "CODE_FOR_vec_set_lo_v32qi", value: 1782, isUnsigned: true)
!2001 = !DIEnumerator(name: "CODE_FOR_vec_set_hi_v32qi", value: 1783, isUnsigned: true)
!2002 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps", value: 1784, isUnsigned: true)
!2003 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd", value: 1785, isUnsigned: true)
!2004 = !DIEnumerator(name: "CODE_FOR_avx_maskloadps256", value: 1786, isUnsigned: true)
!2005 = !DIEnumerator(name: "CODE_FOR_avx_maskloadpd256", value: 1787, isUnsigned: true)
!2006 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps", value: 1788, isUnsigned: true)
!2007 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd", value: 1789, isUnsigned: true)
!2008 = !DIEnumerator(name: "CODE_FOR_avx_maskstoreps256", value: 1790, isUnsigned: true)
!2009 = !DIEnumerator(name: "CODE_FOR_avx_maskstorepd256", value: 1791, isUnsigned: true)
!2010 = !DIEnumerator(name: "CODE_FOR_avx_si256_si", value: 1792, isUnsigned: true)
!2011 = !DIEnumerator(name: "CODE_FOR_avx_ps256_ps", value: 1793, isUnsigned: true)
!2012 = !DIEnumerator(name: "CODE_FOR_avx_pd256_pd", value: 1794, isUnsigned: true)
!2013 = !DIEnumerator(name: "CODE_FOR_avx_si_si256", value: 1795, isUnsigned: true)
!2014 = !DIEnumerator(name: "CODE_FOR_avx_ps_ps256", value: 1796, isUnsigned: true)
!2015 = !DIEnumerator(name: "CODE_FOR_avx_pd_pd256", value: 1797, isUnsigned: true)
!2016 = !DIEnumerator(name: "CODE_FOR_memory_barrier_nosse", value: 1804, isUnsigned: true)
!2017 = !DIEnumerator(name: "CODE_FOR_sync_double_compare_and_swapdi", value: 1808, isUnsigned: true)
!2018 = !DIEnumerator(name: "CODE_FOR_sync_old_addqi", value: 1810, isUnsigned: true)
!2019 = !DIEnumerator(name: "CODE_FOR_sync_old_addhi", value: 1811, isUnsigned: true)
!2020 = !DIEnumerator(name: "CODE_FOR_sync_old_addsi", value: 1812, isUnsigned: true)
!2021 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setqi", value: 1813, isUnsigned: true)
!2022 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_sethi", value: 1814, isUnsigned: true)
!2023 = !DIEnumerator(name: "CODE_FOR_sync_lock_test_and_setsi", value: 1815, isUnsigned: true)
!2024 = !DIEnumerator(name: "CODE_FOR_sync_addqi", value: 1816, isUnsigned: true)
!2025 = !DIEnumerator(name: "CODE_FOR_sync_addhi", value: 1817, isUnsigned: true)
!2026 = !DIEnumerator(name: "CODE_FOR_sync_addsi", value: 1818, isUnsigned: true)
!2027 = !DIEnumerator(name: "CODE_FOR_sync_subqi", value: 1819, isUnsigned: true)
!2028 = !DIEnumerator(name: "CODE_FOR_sync_subhi", value: 1820, isUnsigned: true)
!2029 = !DIEnumerator(name: "CODE_FOR_sync_subsi", value: 1821, isUnsigned: true)
!2030 = !DIEnumerator(name: "CODE_FOR_sync_andqi", value: 1822, isUnsigned: true)
!2031 = !DIEnumerator(name: "CODE_FOR_sync_iorqi", value: 1823, isUnsigned: true)
!2032 = !DIEnumerator(name: "CODE_FOR_sync_xorqi", value: 1824, isUnsigned: true)
!2033 = !DIEnumerator(name: "CODE_FOR_sync_andhi", value: 1825, isUnsigned: true)
!2034 = !DIEnumerator(name: "CODE_FOR_sync_iorhi", value: 1826, isUnsigned: true)
!2035 = !DIEnumerator(name: "CODE_FOR_sync_xorhi", value: 1827, isUnsigned: true)
!2036 = !DIEnumerator(name: "CODE_FOR_sync_andsi", value: 1828, isUnsigned: true)
!2037 = !DIEnumerator(name: "CODE_FOR_sync_iorsi", value: 1829, isUnsigned: true)
!2038 = !DIEnumerator(name: "CODE_FOR_sync_xorsi", value: 1830, isUnsigned: true)
!2039 = !DIEnumerator(name: "CODE_FOR_cbranchqi4", value: 1831, isUnsigned: true)
!2040 = !DIEnumerator(name: "CODE_FOR_cbranchhi4", value: 1832, isUnsigned: true)
!2041 = !DIEnumerator(name: "CODE_FOR_cbranchsi4", value: 1833, isUnsigned: true)
!2042 = !DIEnumerator(name: "CODE_FOR_cbranchdi4", value: 1834, isUnsigned: true)
!2043 = !DIEnumerator(name: "CODE_FOR_cstoreqi4", value: 1835, isUnsigned: true)
!2044 = !DIEnumerator(name: "CODE_FOR_cstorehi4", value: 1836, isUnsigned: true)
!2045 = !DIEnumerator(name: "CODE_FOR_cstoresi4", value: 1837, isUnsigned: true)
!2046 = !DIEnumerator(name: "CODE_FOR_cmpsi_1", value: 1838, isUnsigned: true)
!2047 = !DIEnumerator(name: "CODE_FOR_cmpqi_ext_3", value: 1839, isUnsigned: true)
!2048 = !DIEnumerator(name: "CODE_FOR_cbranchxf4", value: 1840, isUnsigned: true)
!2049 = !DIEnumerator(name: "CODE_FOR_cstorexf4", value: 1841, isUnsigned: true)
!2050 = !DIEnumerator(name: "CODE_FOR_cbranchsf4", value: 1842, isUnsigned: true)
!2051 = !DIEnumerator(name: "CODE_FOR_cbranchdf4", value: 1843, isUnsigned: true)
!2052 = !DIEnumerator(name: "CODE_FOR_cstoresf4", value: 1844, isUnsigned: true)
!2053 = !DIEnumerator(name: "CODE_FOR_cstoredf4", value: 1845, isUnsigned: true)
!2054 = !DIEnumerator(name: "CODE_FOR_cbranchcc4", value: 1846, isUnsigned: true)
!2055 = !DIEnumerator(name: "CODE_FOR_cstorecc4", value: 1847, isUnsigned: true)
!2056 = !DIEnumerator(name: "CODE_FOR_movsi", value: 1855, isUnsigned: true)
!2057 = !DIEnumerator(name: "CODE_FOR_movhi", value: 1856, isUnsigned: true)
!2058 = !DIEnumerator(name: "CODE_FOR_movstricthi", value: 1857, isUnsigned: true)
!2059 = !DIEnumerator(name: "CODE_FOR_movqi", value: 1858, isUnsigned: true)
!2060 = !DIEnumerator(name: "CODE_FOR_movstrictqi", value: 1859, isUnsigned: true)
!2061 = !DIEnumerator(name: "CODE_FOR_movdi", value: 1860, isUnsigned: true)
!2062 = !DIEnumerator(name: "CODE_FOR_movoi", value: 1863, isUnsigned: true)
!2063 = !DIEnumerator(name: "CODE_FOR_movti", value: 1864, isUnsigned: true)
!2064 = !DIEnumerator(name: "CODE_FOR_movcdi", value: 1866, isUnsigned: true)
!2065 = !DIEnumerator(name: "CODE_FOR_movsf", value: 1867, isUnsigned: true)
!2066 = !DIEnumerator(name: "CODE_FOR_movdf", value: 1870, isUnsigned: true)
!2067 = !DIEnumerator(name: "CODE_FOR_movxf", value: 1874, isUnsigned: true)
!2068 = !DIEnumerator(name: "CODE_FOR_movtf", value: 1877, isUnsigned: true)
!2069 = !DIEnumerator(name: "CODE_FOR_zero_extendhisi2", value: 1887, isUnsigned: true)
!2070 = !DIEnumerator(name: "CODE_FOR_zero_extendqihi2", value: 1889, isUnsigned: true)
!2071 = !DIEnumerator(name: "CODE_FOR_zero_extendqisi2", value: 1893, isUnsigned: true)
!2072 = !DIEnumerator(name: "CODE_FOR_zero_extendsidi2", value: 1897, isUnsigned: true)
!2073 = !DIEnumerator(name: "CODE_FOR_extendsidi2", value: 1900, isUnsigned: true)
!2074 = !DIEnumerator(name: "CODE_FOR_extendsfdf2", value: 1907, isUnsigned: true)
!2075 = !DIEnumerator(name: "CODE_FOR_extendsfxf2", value: 1909, isUnsigned: true)
!2076 = !DIEnumerator(name: "CODE_FOR_extenddfxf2", value: 1910, isUnsigned: true)
!2077 = !DIEnumerator(name: "CODE_FOR_truncdfsf2", value: 1911, isUnsigned: true)
!2078 = !DIEnumerator(name: "CODE_FOR_truncdfsf2_with_temp", value: 1913, isUnsigned: true)
!2079 = !DIEnumerator(name: "CODE_FOR_truncxfsf2", value: 1915, isUnsigned: true)
!2080 = !DIEnumerator(name: "CODE_FOR_truncxfdf2", value: 1916, isUnsigned: true)
!2081 = !DIEnumerator(name: "CODE_FOR_fix_truncxfdi2", value: 1921, isUnsigned: true)
!2082 = !DIEnumerator(name: "CODE_FOR_fix_truncsfdi2", value: 1922, isUnsigned: true)
!2083 = !DIEnumerator(name: "CODE_FOR_fix_truncdfdi2", value: 1923, isUnsigned: true)
!2084 = !DIEnumerator(name: "CODE_FOR_fix_truncxfsi2", value: 1924, isUnsigned: true)
!2085 = !DIEnumerator(name: "CODE_FOR_fix_truncsfsi2", value: 1925, isUnsigned: true)
!2086 = !DIEnumerator(name: "CODE_FOR_fix_truncdfsi2", value: 1926, isUnsigned: true)
!2087 = !DIEnumerator(name: "CODE_FOR_fix_truncsfhi2", value: 1927, isUnsigned: true)
!2088 = !DIEnumerator(name: "CODE_FOR_fix_truncdfhi2", value: 1928, isUnsigned: true)
!2089 = !DIEnumerator(name: "CODE_FOR_fix_truncxfhi2", value: 1929, isUnsigned: true)
!2090 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfsi2", value: 1930, isUnsigned: true)
!2091 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfsi2", value: 1931, isUnsigned: true)
!2092 = !DIEnumerator(name: "CODE_FOR_fixuns_truncsfhi2", value: 1934, isUnsigned: true)
!2093 = !DIEnumerator(name: "CODE_FOR_fixuns_truncdfhi2", value: 1935, isUnsigned: true)
!2094 = !DIEnumerator(name: "CODE_FOR_floathisf2", value: 1962, isUnsigned: true)
!2095 = !DIEnumerator(name: "CODE_FOR_floathidf2", value: 1963, isUnsigned: true)
!2096 = !DIEnumerator(name: "CODE_FOR_floathixf2", value: 1964, isUnsigned: true)
!2097 = !DIEnumerator(name: "CODE_FOR_floatsisf2", value: 1974, isUnsigned: true)
!2098 = !DIEnumerator(name: "CODE_FOR_floatdisf2", value: 1975, isUnsigned: true)
!2099 = !DIEnumerator(name: "CODE_FOR_floatsidf2", value: 1976, isUnsigned: true)
!2100 = !DIEnumerator(name: "CODE_FOR_floatdidf2", value: 1977, isUnsigned: true)
!2101 = !DIEnumerator(name: "CODE_FOR_floatsixf2", value: 1978, isUnsigned: true)
!2102 = !DIEnumerator(name: "CODE_FOR_floatdixf2", value: 1979, isUnsigned: true)
!2103 = !DIEnumerator(name: "CODE_FOR_floatunssisf2", value: 2028, isUnsigned: true)
!2104 = !DIEnumerator(name: "CODE_FOR_floatunssidf2", value: 2029, isUnsigned: true)
!2105 = !DIEnumerator(name: "CODE_FOR_floatunssixf2", value: 2030, isUnsigned: true)
!2106 = !DIEnumerator(name: "CODE_FOR_addqi3", value: 2031, isUnsigned: true)
!2107 = !DIEnumerator(name: "CODE_FOR_addhi3", value: 2032, isUnsigned: true)
!2108 = !DIEnumerator(name: "CODE_FOR_addsi3", value: 2033, isUnsigned: true)
!2109 = !DIEnumerator(name: "CODE_FOR_adddi3", value: 2034, isUnsigned: true)
!2110 = !DIEnumerator(name: "CODE_FOR_subqi3", value: 2040, isUnsigned: true)
!2111 = !DIEnumerator(name: "CODE_FOR_subhi3", value: 2041, isUnsigned: true)
!2112 = !DIEnumerator(name: "CODE_FOR_subsi3", value: 2042, isUnsigned: true)
!2113 = !DIEnumerator(name: "CODE_FOR_subdi3", value: 2043, isUnsigned: true)
!2114 = !DIEnumerator(name: "CODE_FOR_addqi3_carry", value: 2045, isUnsigned: true)
!2115 = !DIEnumerator(name: "CODE_FOR_subqi3_carry", value: 2046, isUnsigned: true)
!2116 = !DIEnumerator(name: "CODE_FOR_addhi3_carry", value: 2047, isUnsigned: true)
!2117 = !DIEnumerator(name: "CODE_FOR_subhi3_carry", value: 2048, isUnsigned: true)
!2118 = !DIEnumerator(name: "CODE_FOR_addsi3_carry", value: 2049, isUnsigned: true)
!2119 = !DIEnumerator(name: "CODE_FOR_subsi3_carry", value: 2050, isUnsigned: true)
!2120 = !DIEnumerator(name: "CODE_FOR_adddi3_carry", value: 2051, isUnsigned: true)
!2121 = !DIEnumerator(name: "CODE_FOR_subdi3_carry", value: 2052, isUnsigned: true)
!2122 = !DIEnumerator(name: "CODE_FOR_addxf3", value: 2053, isUnsigned: true)
!2123 = !DIEnumerator(name: "CODE_FOR_subxf3", value: 2054, isUnsigned: true)
!2124 = !DIEnumerator(name: "CODE_FOR_addsf3", value: 2055, isUnsigned: true)
!2125 = !DIEnumerator(name: "CODE_FOR_subsf3", value: 2056, isUnsigned: true)
!2126 = !DIEnumerator(name: "CODE_FOR_adddf3", value: 2057, isUnsigned: true)
!2127 = !DIEnumerator(name: "CODE_FOR_subdf3", value: 2058, isUnsigned: true)
!2128 = !DIEnumerator(name: "CODE_FOR_mulhi3", value: 2059, isUnsigned: true)
!2129 = !DIEnumerator(name: "CODE_FOR_mulsi3", value: 2060, isUnsigned: true)
!2130 = !DIEnumerator(name: "CODE_FOR_mulqi3", value: 2061, isUnsigned: true)
!2131 = !DIEnumerator(name: "CODE_FOR_mulsidi3", value: 2062, isUnsigned: true)
!2132 = !DIEnumerator(name: "CODE_FOR_umulsidi3", value: 2063, isUnsigned: true)
!2133 = !DIEnumerator(name: "CODE_FOR_mulqihi3", value: 2064, isUnsigned: true)
!2134 = !DIEnumerator(name: "CODE_FOR_umulqihi3", value: 2065, isUnsigned: true)
!2135 = !DIEnumerator(name: "CODE_FOR_smulsi3_highpart", value: 2066, isUnsigned: true)
!2136 = !DIEnumerator(name: "CODE_FOR_umulsi3_highpart", value: 2067, isUnsigned: true)
!2137 = !DIEnumerator(name: "CODE_FOR_mulxf3", value: 2068, isUnsigned: true)
!2138 = !DIEnumerator(name: "CODE_FOR_mulsf3", value: 2069, isUnsigned: true)
!2139 = !DIEnumerator(name: "CODE_FOR_muldf3", value: 2070, isUnsigned: true)
!2140 = !DIEnumerator(name: "CODE_FOR_divxf3", value: 2071, isUnsigned: true)
!2141 = !DIEnumerator(name: "CODE_FOR_divdf3", value: 2072, isUnsigned: true)
!2142 = !DIEnumerator(name: "CODE_FOR_divsf3", value: 2073, isUnsigned: true)
!2143 = !DIEnumerator(name: "CODE_FOR_divmodhi4", value: 2074, isUnsigned: true)
!2144 = !DIEnumerator(name: "CODE_FOR_divmodsi4", value: 2075, isUnsigned: true)
!2145 = !DIEnumerator(name: "CODE_FOR_udivmodhi4", value: 2078, isUnsigned: true)
!2146 = !DIEnumerator(name: "CODE_FOR_udivmodsi4", value: 2079, isUnsigned: true)
!2147 = !DIEnumerator(name: "CODE_FOR_testsi_ccno_1", value: 2082, isUnsigned: true)
!2148 = !DIEnumerator(name: "CODE_FOR_testqi_ccz_1", value: 2083, isUnsigned: true)
!2149 = !DIEnumerator(name: "CODE_FOR_testqi_ext_ccno_0", value: 2084, isUnsigned: true)
!2150 = !DIEnumerator(name: "CODE_FOR_andqi3", value: 2088, isUnsigned: true)
!2151 = !DIEnumerator(name: "CODE_FOR_andhi3", value: 2089, isUnsigned: true)
!2152 = !DIEnumerator(name: "CODE_FOR_andsi3", value: 2090, isUnsigned: true)
!2153 = !DIEnumerator(name: "CODE_FOR_iorqi3", value: 2096, isUnsigned: true)
!2154 = !DIEnumerator(name: "CODE_FOR_xorqi3", value: 2097, isUnsigned: true)
!2155 = !DIEnumerator(name: "CODE_FOR_iorhi3", value: 2098, isUnsigned: true)
!2156 = !DIEnumerator(name: "CODE_FOR_xorhi3", value: 2099, isUnsigned: true)
!2157 = !DIEnumerator(name: "CODE_FOR_iorsi3", value: 2100, isUnsigned: true)
!2158 = !DIEnumerator(name: "CODE_FOR_xorsi3", value: 2101, isUnsigned: true)
!2159 = !DIEnumerator(name: "CODE_FOR_xorqi_cc_ext_1", value: 2106, isUnsigned: true)
!2160 = !DIEnumerator(name: "CODE_FOR_negqi2", value: 2107, isUnsigned: true)
!2161 = !DIEnumerator(name: "CODE_FOR_neghi2", value: 2108, isUnsigned: true)
!2162 = !DIEnumerator(name: "CODE_FOR_negsi2", value: 2109, isUnsigned: true)
!2163 = !DIEnumerator(name: "CODE_FOR_negdi2", value: 2110, isUnsigned: true)
!2164 = !DIEnumerator(name: "CODE_FOR_abssf2", value: 2112, isUnsigned: true)
!2165 = !DIEnumerator(name: "CODE_FOR_negsf2", value: 2113, isUnsigned: true)
!2166 = !DIEnumerator(name: "CODE_FOR_absdf2", value: 2114, isUnsigned: true)
!2167 = !DIEnumerator(name: "CODE_FOR_negdf2", value: 2115, isUnsigned: true)
!2168 = !DIEnumerator(name: "CODE_FOR_absxf2", value: 2116, isUnsigned: true)
!2169 = !DIEnumerator(name: "CODE_FOR_negxf2", value: 2117, isUnsigned: true)
!2170 = !DIEnumerator(name: "CODE_FOR_abstf2", value: 2118, isUnsigned: true)
!2171 = !DIEnumerator(name: "CODE_FOR_negtf2", value: 2119, isUnsigned: true)
!2172 = !DIEnumerator(name: "CODE_FOR_copysignsf3", value: 2125, isUnsigned: true)
!2173 = !DIEnumerator(name: "CODE_FOR_copysigndf3", value: 2126, isUnsigned: true)
!2174 = !DIEnumerator(name: "CODE_FOR_copysigntf3", value: 2127, isUnsigned: true)
!2175 = !DIEnumerator(name: "CODE_FOR_one_cmplqi2", value: 2134, isUnsigned: true)
!2176 = !DIEnumerator(name: "CODE_FOR_one_cmplhi2", value: 2135, isUnsigned: true)
!2177 = !DIEnumerator(name: "CODE_FOR_one_cmplsi2", value: 2136, isUnsigned: true)
!2178 = !DIEnumerator(name: "CODE_FOR_ashldi3", value: 2142, isUnsigned: true)
!2179 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_1", value: 2145, isUnsigned: true)
!2180 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_2", value: 2146, isUnsigned: true)
!2181 = !DIEnumerator(name: "CODE_FOR_ashlsi3", value: 2147, isUnsigned: true)
!2182 = !DIEnumerator(name: "CODE_FOR_ashlhi3", value: 2150, isUnsigned: true)
!2183 = !DIEnumerator(name: "CODE_FOR_ashlqi3", value: 2151, isUnsigned: true)
!2184 = !DIEnumerator(name: "CODE_FOR_ashrdi3", value: 2152, isUnsigned: true)
!2185 = !DIEnumerator(name: "CODE_FOR_x86_64_shift_adj_3", value: 2153, isUnsigned: true)
!2186 = !DIEnumerator(name: "CODE_FOR_x86_shift_adj_3", value: 2156, isUnsigned: true)
!2187 = !DIEnumerator(name: "CODE_FOR_ashrsi3_31", value: 2157, isUnsigned: true)
!2188 = !DIEnumerator(name: "CODE_FOR_ashrsi3", value: 2158, isUnsigned: true)
!2189 = !DIEnumerator(name: "CODE_FOR_ashrhi3", value: 2159, isUnsigned: true)
!2190 = !DIEnumerator(name: "CODE_FOR_ashrqi3", value: 2160, isUnsigned: true)
!2191 = !DIEnumerator(name: "CODE_FOR_lshrdi3", value: 2161, isUnsigned: true)
!2192 = !DIEnumerator(name: "CODE_FOR_lshrsi3", value: 2164, isUnsigned: true)
!2193 = !DIEnumerator(name: "CODE_FOR_lshrhi3", value: 2165, isUnsigned: true)
!2194 = !DIEnumerator(name: "CODE_FOR_lshrqi3", value: 2166, isUnsigned: true)
!2195 = !DIEnumerator(name: "CODE_FOR_rotldi3", value: 2167, isUnsigned: true)
!2196 = !DIEnumerator(name: "CODE_FOR_rotlsi3", value: 2169, isUnsigned: true)
!2197 = !DIEnumerator(name: "CODE_FOR_rotlhi3", value: 2170, isUnsigned: true)
!2198 = !DIEnumerator(name: "CODE_FOR_rotlqi3", value: 2172, isUnsigned: true)
!2199 = !DIEnumerator(name: "CODE_FOR_rotrdi3", value: 2173, isUnsigned: true)
!2200 = !DIEnumerator(name: "CODE_FOR_rotrsi3", value: 2175, isUnsigned: true)
!2201 = !DIEnumerator(name: "CODE_FOR_rotrhi3", value: 2176, isUnsigned: true)
!2202 = !DIEnumerator(name: "CODE_FOR_rotrqi3", value: 2178, isUnsigned: true)
!2203 = !DIEnumerator(name: "CODE_FOR_extv", value: 2179, isUnsigned: true)
!2204 = !DIEnumerator(name: "CODE_FOR_extzv", value: 2180, isUnsigned: true)
!2205 = !DIEnumerator(name: "CODE_FOR_insv", value: 2181, isUnsigned: true)
!2206 = !DIEnumerator(name: "CODE_FOR_indirect_jump", value: 2200, isUnsigned: true)
!2207 = !DIEnumerator(name: "CODE_FOR_tablejump", value: 2201, isUnsigned: true)
!2208 = !DIEnumerator(name: "CODE_FOR_call_pop", value: 2204, isUnsigned: true)
!2209 = !DIEnumerator(name: "CODE_FOR_call", value: 2205, isUnsigned: true)
!2210 = !DIEnumerator(name: "CODE_FOR_sibcall", value: 2206, isUnsigned: true)
!2211 = !DIEnumerator(name: "CODE_FOR_call_value_pop", value: 2207, isUnsigned: true)
!2212 = !DIEnumerator(name: "CODE_FOR_call_value", value: 2208, isUnsigned: true)
!2213 = !DIEnumerator(name: "CODE_FOR_sibcall_value", value: 2209, isUnsigned: true)
!2214 = !DIEnumerator(name: "CODE_FOR_untyped_call", value: 2210, isUnsigned: true)
!2215 = !DIEnumerator(name: "CODE_FOR_memory_blockage", value: 2211, isUnsigned: true)
!2216 = !DIEnumerator(name: "CODE_FOR_return", value: 2212, isUnsigned: true)
!2217 = !DIEnumerator(name: "CODE_FOR_prologue", value: 2213, isUnsigned: true)
!2218 = !DIEnumerator(name: "CODE_FOR_epilogue", value: 2214, isUnsigned: true)
!2219 = !DIEnumerator(name: "CODE_FOR_sibcall_epilogue", value: 2215, isUnsigned: true)
!2220 = !DIEnumerator(name: "CODE_FOR_eh_return", value: 2216, isUnsigned: true)
!2221 = !DIEnumerator(name: "CODE_FOR_ffssi2", value: 2218, isUnsigned: true)
!2222 = !DIEnumerator(name: "CODE_FOR_ffs_cmove", value: 2219, isUnsigned: true)
!2223 = !DIEnumerator(name: "CODE_FOR_clzsi2", value: 2221, isUnsigned: true)
!2224 = !DIEnumerator(name: "CODE_FOR_bswapsi2", value: 2222, isUnsigned: true)
!2225 = !DIEnumerator(name: "CODE_FOR_clzhi2", value: 2223, isUnsigned: true)
!2226 = !DIEnumerator(name: "CODE_FOR_paritydi2", value: 2224, isUnsigned: true)
!2227 = !DIEnumerator(name: "CODE_FOR_paritysi2", value: 2226, isUnsigned: true)
!2228 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_32", value: 2228, isUnsigned: true)
!2229 = !DIEnumerator(name: "CODE_FOR_tls_global_dynamic_64", value: 2229, isUnsigned: true)
!2230 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_32", value: 2230, isUnsigned: true)
!2231 = !DIEnumerator(name: "CODE_FOR_tls_local_dynamic_base_64", value: 2231, isUnsigned: true)
!2232 = !DIEnumerator(name: "CODE_FOR_tls_dynamic_gnu2_32", value: 2233, isUnsigned: true)
!2233 = !DIEnumerator(name: "CODE_FOR_rsqrtsf2", value: 2240, isUnsigned: true)
!2234 = !DIEnumerator(name: "CODE_FOR_sqrtsf2", value: 2241, isUnsigned: true)
!2235 = !DIEnumerator(name: "CODE_FOR_sqrtdf2", value: 2242, isUnsigned: true)
!2236 = !DIEnumerator(name: "CODE_FOR_fmodxf3", value: 2243, isUnsigned: true)
!2237 = !DIEnumerator(name: "CODE_FOR_fmodsf3", value: 2244, isUnsigned: true)
!2238 = !DIEnumerator(name: "CODE_FOR_fmoddf3", value: 2245, isUnsigned: true)
!2239 = !DIEnumerator(name: "CODE_FOR_remainderxf3", value: 2246, isUnsigned: true)
!2240 = !DIEnumerator(name: "CODE_FOR_remaindersf3", value: 2247, isUnsigned: true)
!2241 = !DIEnumerator(name: "CODE_FOR_remainderdf3", value: 2248, isUnsigned: true)
!2242 = !DIEnumerator(name: "CODE_FOR_sincossf3", value: 2255, isUnsigned: true)
!2243 = !DIEnumerator(name: "CODE_FOR_sincosdf3", value: 2256, isUnsigned: true)
!2244 = !DIEnumerator(name: "CODE_FOR_tanxf2", value: 2257, isUnsigned: true)
!2245 = !DIEnumerator(name: "CODE_FOR_tansf2", value: 2258, isUnsigned: true)
!2246 = !DIEnumerator(name: "CODE_FOR_tandf2", value: 2259, isUnsigned: true)
!2247 = !DIEnumerator(name: "CODE_FOR_atan2xf3", value: 2260, isUnsigned: true)
!2248 = !DIEnumerator(name: "CODE_FOR_atan2sf3", value: 2261, isUnsigned: true)
!2249 = !DIEnumerator(name: "CODE_FOR_atan2df3", value: 2262, isUnsigned: true)
!2250 = !DIEnumerator(name: "CODE_FOR_atanxf2", value: 2263, isUnsigned: true)
!2251 = !DIEnumerator(name: "CODE_FOR_atansf2", value: 2264, isUnsigned: true)
!2252 = !DIEnumerator(name: "CODE_FOR_atandf2", value: 2265, isUnsigned: true)
!2253 = !DIEnumerator(name: "CODE_FOR_asinxf2", value: 2266, isUnsigned: true)
!2254 = !DIEnumerator(name: "CODE_FOR_asinsf2", value: 2267, isUnsigned: true)
!2255 = !DIEnumerator(name: "CODE_FOR_asindf2", value: 2268, isUnsigned: true)
!2256 = !DIEnumerator(name: "CODE_FOR_acosxf2", value: 2269, isUnsigned: true)
!2257 = !DIEnumerator(name: "CODE_FOR_acossf2", value: 2270, isUnsigned: true)
!2258 = !DIEnumerator(name: "CODE_FOR_acosdf2", value: 2271, isUnsigned: true)
!2259 = !DIEnumerator(name: "CODE_FOR_logxf2", value: 2272, isUnsigned: true)
!2260 = !DIEnumerator(name: "CODE_FOR_logsf2", value: 2273, isUnsigned: true)
!2261 = !DIEnumerator(name: "CODE_FOR_logdf2", value: 2274, isUnsigned: true)
!2262 = !DIEnumerator(name: "CODE_FOR_log10xf2", value: 2275, isUnsigned: true)
!2263 = !DIEnumerator(name: "CODE_FOR_log10sf2", value: 2276, isUnsigned: true)
!2264 = !DIEnumerator(name: "CODE_FOR_log10df2", value: 2277, isUnsigned: true)
!2265 = !DIEnumerator(name: "CODE_FOR_log2xf2", value: 2278, isUnsigned: true)
!2266 = !DIEnumerator(name: "CODE_FOR_log2sf2", value: 2279, isUnsigned: true)
!2267 = !DIEnumerator(name: "CODE_FOR_log2df2", value: 2280, isUnsigned: true)
!2268 = !DIEnumerator(name: "CODE_FOR_log1pxf2", value: 2281, isUnsigned: true)
!2269 = !DIEnumerator(name: "CODE_FOR_log1psf2", value: 2282, isUnsigned: true)
!2270 = !DIEnumerator(name: "CODE_FOR_log1pdf2", value: 2283, isUnsigned: true)
!2271 = !DIEnumerator(name: "CODE_FOR_logbxf2", value: 2284, isUnsigned: true)
!2272 = !DIEnumerator(name: "CODE_FOR_logbsf2", value: 2285, isUnsigned: true)
!2273 = !DIEnumerator(name: "CODE_FOR_logbdf2", value: 2286, isUnsigned: true)
!2274 = !DIEnumerator(name: "CODE_FOR_ilogbxf2", value: 2287, isUnsigned: true)
!2275 = !DIEnumerator(name: "CODE_FOR_ilogbsf2", value: 2288, isUnsigned: true)
!2276 = !DIEnumerator(name: "CODE_FOR_ilogbdf2", value: 2289, isUnsigned: true)
!2277 = !DIEnumerator(name: "CODE_FOR_expNcorexf3", value: 2290, isUnsigned: true)
!2278 = !DIEnumerator(name: "CODE_FOR_expxf2", value: 2291, isUnsigned: true)
!2279 = !DIEnumerator(name: "CODE_FOR_expsf2", value: 2292, isUnsigned: true)
!2280 = !DIEnumerator(name: "CODE_FOR_expdf2", value: 2293, isUnsigned: true)
!2281 = !DIEnumerator(name: "CODE_FOR_exp10xf2", value: 2294, isUnsigned: true)
!2282 = !DIEnumerator(name: "CODE_FOR_exp10sf2", value: 2295, isUnsigned: true)
!2283 = !DIEnumerator(name: "CODE_FOR_exp10df2", value: 2296, isUnsigned: true)
!2284 = !DIEnumerator(name: "CODE_FOR_exp2xf2", value: 2297, isUnsigned: true)
!2285 = !DIEnumerator(name: "CODE_FOR_exp2sf2", value: 2298, isUnsigned: true)
!2286 = !DIEnumerator(name: "CODE_FOR_exp2df2", value: 2299, isUnsigned: true)
!2287 = !DIEnumerator(name: "CODE_FOR_expm1xf2", value: 2300, isUnsigned: true)
!2288 = !DIEnumerator(name: "CODE_FOR_expm1sf2", value: 2301, isUnsigned: true)
!2289 = !DIEnumerator(name: "CODE_FOR_expm1df2", value: 2302, isUnsigned: true)
!2290 = !DIEnumerator(name: "CODE_FOR_ldexpxf3", value: 2303, isUnsigned: true)
!2291 = !DIEnumerator(name: "CODE_FOR_ldexpsf3", value: 2304, isUnsigned: true)
!2292 = !DIEnumerator(name: "CODE_FOR_ldexpdf3", value: 2305, isUnsigned: true)
!2293 = !DIEnumerator(name: "CODE_FOR_scalbxf3", value: 2306, isUnsigned: true)
!2294 = !DIEnumerator(name: "CODE_FOR_scalbsf3", value: 2307, isUnsigned: true)
!2295 = !DIEnumerator(name: "CODE_FOR_scalbdf3", value: 2308, isUnsigned: true)
!2296 = !DIEnumerator(name: "CODE_FOR_significandxf2", value: 2309, isUnsigned: true)
!2297 = !DIEnumerator(name: "CODE_FOR_significandsf2", value: 2310, isUnsigned: true)
!2298 = !DIEnumerator(name: "CODE_FOR_significanddf2", value: 2311, isUnsigned: true)
!2299 = !DIEnumerator(name: "CODE_FOR_rintsf2", value: 2312, isUnsigned: true)
!2300 = !DIEnumerator(name: "CODE_FOR_rintdf2", value: 2313, isUnsigned: true)
!2301 = !DIEnumerator(name: "CODE_FOR_roundsf2", value: 2314, isUnsigned: true)
!2302 = !DIEnumerator(name: "CODE_FOR_rounddf2", value: 2315, isUnsigned: true)
!2303 = !DIEnumerator(name: "CODE_FOR_lrintxfhi2", value: 2325, isUnsigned: true)
!2304 = !DIEnumerator(name: "CODE_FOR_lrintxfsi2", value: 2326, isUnsigned: true)
!2305 = !DIEnumerator(name: "CODE_FOR_lrintxfdi2", value: 2327, isUnsigned: true)
!2306 = !DIEnumerator(name: "CODE_FOR_lrintsfsi2", value: 2328, isUnsigned: true)
!2307 = !DIEnumerator(name: "CODE_FOR_lrintdfsi2", value: 2329, isUnsigned: true)
!2308 = !DIEnumerator(name: "CODE_FOR_lroundsfsi2", value: 2330, isUnsigned: true)
!2309 = !DIEnumerator(name: "CODE_FOR_lrounddfsi2", value: 2331, isUnsigned: true)
!2310 = !DIEnumerator(name: "CODE_FOR_floorxf2", value: 2333, isUnsigned: true)
!2311 = !DIEnumerator(name: "CODE_FOR_floorsf2", value: 2334, isUnsigned: true)
!2312 = !DIEnumerator(name: "CODE_FOR_floordf2", value: 2335, isUnsigned: true)
!2313 = !DIEnumerator(name: "CODE_FOR_lfloorxfhi2", value: 2345, isUnsigned: true)
!2314 = !DIEnumerator(name: "CODE_FOR_lfloorxfsi2", value: 2346, isUnsigned: true)
!2315 = !DIEnumerator(name: "CODE_FOR_lfloorxfdi2", value: 2347, isUnsigned: true)
!2316 = !DIEnumerator(name: "CODE_FOR_lfloorsfsi2", value: 2348, isUnsigned: true)
!2317 = !DIEnumerator(name: "CODE_FOR_lfloordfsi2", value: 2349, isUnsigned: true)
!2318 = !DIEnumerator(name: "CODE_FOR_ceilxf2", value: 2351, isUnsigned: true)
!2319 = !DIEnumerator(name: "CODE_FOR_ceilsf2", value: 2352, isUnsigned: true)
!2320 = !DIEnumerator(name: "CODE_FOR_ceildf2", value: 2353, isUnsigned: true)
!2321 = !DIEnumerator(name: "CODE_FOR_lceilxfhi2", value: 2363, isUnsigned: true)
!2322 = !DIEnumerator(name: "CODE_FOR_lceilxfsi2", value: 2364, isUnsigned: true)
!2323 = !DIEnumerator(name: "CODE_FOR_lceilxfdi2", value: 2365, isUnsigned: true)
!2324 = !DIEnumerator(name: "CODE_FOR_lceilsfsi2", value: 2366, isUnsigned: true)
!2325 = !DIEnumerator(name: "CODE_FOR_lceildfsi2", value: 2367, isUnsigned: true)
!2326 = !DIEnumerator(name: "CODE_FOR_btruncxf2", value: 2369, isUnsigned: true)
!2327 = !DIEnumerator(name: "CODE_FOR_btruncsf2", value: 2370, isUnsigned: true)
!2328 = !DIEnumerator(name: "CODE_FOR_btruncdf2", value: 2371, isUnsigned: true)
!2329 = !DIEnumerator(name: "CODE_FOR_nearbyintxf2", value: 2373, isUnsigned: true)
!2330 = !DIEnumerator(name: "CODE_FOR_nearbyintsf2", value: 2374, isUnsigned: true)
!2331 = !DIEnumerator(name: "CODE_FOR_nearbyintdf2", value: 2375, isUnsigned: true)
!2332 = !DIEnumerator(name: "CODE_FOR_isinfxf2", value: 2378, isUnsigned: true)
!2333 = !DIEnumerator(name: "CODE_FOR_isinfsf2", value: 2379, isUnsigned: true)
!2334 = !DIEnumerator(name: "CODE_FOR_isinfdf2", value: 2380, isUnsigned: true)
!2335 = !DIEnumerator(name: "CODE_FOR_signbitsf2", value: 2381, isUnsigned: true)
!2336 = !DIEnumerator(name: "CODE_FOR_signbitdf2", value: 2382, isUnsigned: true)
!2337 = !DIEnumerator(name: "CODE_FOR_signbitxf2", value: 2383, isUnsigned: true)
!2338 = !DIEnumerator(name: "CODE_FOR_movmemsi", value: 2384, isUnsigned: true)
!2339 = !DIEnumerator(name: "CODE_FOR_strmov", value: 2385, isUnsigned: true)
!2340 = !DIEnumerator(name: "CODE_FOR_strmov_singleop", value: 2386, isUnsigned: true)
!2341 = !DIEnumerator(name: "CODE_FOR_rep_mov", value: 2387, isUnsigned: true)
!2342 = !DIEnumerator(name: "CODE_FOR_setmemsi", value: 2388, isUnsigned: true)
!2343 = !DIEnumerator(name: "CODE_FOR_strset", value: 2389, isUnsigned: true)
!2344 = !DIEnumerator(name: "CODE_FOR_strset_singleop", value: 2390, isUnsigned: true)
!2345 = !DIEnumerator(name: "CODE_FOR_rep_stos", value: 2391, isUnsigned: true)
!2346 = !DIEnumerator(name: "CODE_FOR_cmpstrnsi", value: 2392, isUnsigned: true)
!2347 = !DIEnumerator(name: "CODE_FOR_cmpintqi", value: 2393, isUnsigned: true)
!2348 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_nz_1", value: 2394, isUnsigned: true)
!2349 = !DIEnumerator(name: "CODE_FOR_cmpstrnqi_1", value: 2395, isUnsigned: true)
!2350 = !DIEnumerator(name: "CODE_FOR_strlensi", value: 2396, isUnsigned: true)
!2351 = !DIEnumerator(name: "CODE_FOR_strlendi", value: 2397, isUnsigned: true)
!2352 = !DIEnumerator(name: "CODE_FOR_strlenqi_1", value: 2398, isUnsigned: true)
!2353 = !DIEnumerator(name: "CODE_FOR_movqicc", value: 2401, isUnsigned: true)
!2354 = !DIEnumerator(name: "CODE_FOR_movhicc", value: 2402, isUnsigned: true)
!2355 = !DIEnumerator(name: "CODE_FOR_movsicc", value: 2403, isUnsigned: true)
!2356 = !DIEnumerator(name: "CODE_FOR_x86_movsicc_0_m1", value: 2404, isUnsigned: true)
!2357 = !DIEnumerator(name: "CODE_FOR_movsfcc", value: 2406, isUnsigned: true)
!2358 = !DIEnumerator(name: "CODE_FOR_movdfcc", value: 2407, isUnsigned: true)
!2359 = !DIEnumerator(name: "CODE_FOR_movxfcc", value: 2408, isUnsigned: true)
!2360 = !DIEnumerator(name: "CODE_FOR_addqicc", value: 2411, isUnsigned: true)
!2361 = !DIEnumerator(name: "CODE_FOR_addhicc", value: 2412, isUnsigned: true)
!2362 = !DIEnumerator(name: "CODE_FOR_addsicc", value: 2413, isUnsigned: true)
!2363 = !DIEnumerator(name: "CODE_FOR_allocate_stack", value: 2414, isUnsigned: true)
!2364 = !DIEnumerator(name: "CODE_FOR_probe_stack", value: 2415, isUnsigned: true)
!2365 = !DIEnumerator(name: "CODE_FOR_builtin_setjmp_receiver", value: 2416, isUnsigned: true)
!2366 = !DIEnumerator(name: "CODE_FOR_prefetch", value: 2486, isUnsigned: true)
!2367 = !DIEnumerator(name: "CODE_FOR_stack_protect_set", value: 2487, isUnsigned: true)
!2368 = !DIEnumerator(name: "CODE_FOR_stack_protect_test", value: 2488, isUnsigned: true)
!2369 = !DIEnumerator(name: "CODE_FOR_rdpmc", value: 2489, isUnsigned: true)
!2370 = !DIEnumerator(name: "CODE_FOR_rdtsc", value: 2490, isUnsigned: true)
!2371 = !DIEnumerator(name: "CODE_FOR_rdtscp", value: 2491, isUnsigned: true)
!2372 = !DIEnumerator(name: "CODE_FOR_lwp_llwpcb", value: 2492, isUnsigned: true)
!2373 = !DIEnumerator(name: "CODE_FOR_lwp_slwpcb", value: 2493, isUnsigned: true)
!2374 = !DIEnumerator(name: "CODE_FOR_lwp_lwpvalsi3", value: 2494, isUnsigned: true)
!2375 = !DIEnumerator(name: "CODE_FOR_lwp_lwpinssi3", value: 2495, isUnsigned: true)
!2376 = !DIEnumerator(name: "CODE_FOR_movv8qi", value: 2496, isUnsigned: true)
!2377 = !DIEnumerator(name: "CODE_FOR_movv4hi", value: 2497, isUnsigned: true)
!2378 = !DIEnumerator(name: "CODE_FOR_movv2si", value: 2498, isUnsigned: true)
!2379 = !DIEnumerator(name: "CODE_FOR_movv1di", value: 2499, isUnsigned: true)
!2380 = !DIEnumerator(name: "CODE_FOR_movv2sf", value: 2500, isUnsigned: true)
!2381 = !DIEnumerator(name: "CODE_FOR_pushv8qi1", value: 2506, isUnsigned: true)
!2382 = !DIEnumerator(name: "CODE_FOR_pushv4hi1", value: 2507, isUnsigned: true)
!2383 = !DIEnumerator(name: "CODE_FOR_pushv2si1", value: 2508, isUnsigned: true)
!2384 = !DIEnumerator(name: "CODE_FOR_pushv1di1", value: 2509, isUnsigned: true)
!2385 = !DIEnumerator(name: "CODE_FOR_pushv2sf1", value: 2510, isUnsigned: true)
!2386 = !DIEnumerator(name: "CODE_FOR_movmisalignv8qi", value: 2511, isUnsigned: true)
!2387 = !DIEnumerator(name: "CODE_FOR_movmisalignv4hi", value: 2512, isUnsigned: true)
!2388 = !DIEnumerator(name: "CODE_FOR_movmisalignv2si", value: 2513, isUnsigned: true)
!2389 = !DIEnumerator(name: "CODE_FOR_movmisalignv1di", value: 2514, isUnsigned: true)
!2390 = !DIEnumerator(name: "CODE_FOR_movmisalignv2sf", value: 2515, isUnsigned: true)
!2391 = !DIEnumerator(name: "CODE_FOR_mmx_addv2sf3", value: 2516, isUnsigned: true)
!2392 = !DIEnumerator(name: "CODE_FOR_mmx_subv2sf3", value: 2517, isUnsigned: true)
!2393 = !DIEnumerator(name: "CODE_FOR_mmx_subrv2sf3", value: 2518, isUnsigned: true)
!2394 = !DIEnumerator(name: "CODE_FOR_mmx_mulv2sf3", value: 2519, isUnsigned: true)
!2395 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv2sf3", value: 2520, isUnsigned: true)
!2396 = !DIEnumerator(name: "CODE_FOR_mmx_sminv2sf3", value: 2521, isUnsigned: true)
!2397 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2sf3", value: 2522, isUnsigned: true)
!2398 = !DIEnumerator(name: "CODE_FOR_vec_setv2sf", value: 2523, isUnsigned: true)
!2399 = !DIEnumerator(name: "CODE_FOR_vec_extractv2sf", value: 2526, isUnsigned: true)
!2400 = !DIEnumerator(name: "CODE_FOR_vec_initv2sf", value: 2527, isUnsigned: true)
!2401 = !DIEnumerator(name: "CODE_FOR_mmx_addv8qi3", value: 2528, isUnsigned: true)
!2402 = !DIEnumerator(name: "CODE_FOR_mmx_subv8qi3", value: 2529, isUnsigned: true)
!2403 = !DIEnumerator(name: "CODE_FOR_mmx_addv4hi3", value: 2530, isUnsigned: true)
!2404 = !DIEnumerator(name: "CODE_FOR_mmx_subv4hi3", value: 2531, isUnsigned: true)
!2405 = !DIEnumerator(name: "CODE_FOR_mmx_addv2si3", value: 2532, isUnsigned: true)
!2406 = !DIEnumerator(name: "CODE_FOR_mmx_subv2si3", value: 2533, isUnsigned: true)
!2407 = !DIEnumerator(name: "CODE_FOR_mmx_addv1di3", value: 2534, isUnsigned: true)
!2408 = !DIEnumerator(name: "CODE_FOR_mmx_subv1di3", value: 2535, isUnsigned: true)
!2409 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv8qi3", value: 2536, isUnsigned: true)
!2410 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv8qi3", value: 2537, isUnsigned: true)
!2411 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv8qi3", value: 2538, isUnsigned: true)
!2412 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv8qi3", value: 2539, isUnsigned: true)
!2413 = !DIEnumerator(name: "CODE_FOR_mmx_ssaddv4hi3", value: 2540, isUnsigned: true)
!2414 = !DIEnumerator(name: "CODE_FOR_mmx_usaddv4hi3", value: 2541, isUnsigned: true)
!2415 = !DIEnumerator(name: "CODE_FOR_mmx_sssubv4hi3", value: 2542, isUnsigned: true)
!2416 = !DIEnumerator(name: "CODE_FOR_mmx_ussubv4hi3", value: 2543, isUnsigned: true)
!2417 = !DIEnumerator(name: "CODE_FOR_mmx_mulv4hi3", value: 2544, isUnsigned: true)
!2418 = !DIEnumerator(name: "CODE_FOR_mmx_smulv4hi3_highpart", value: 2545, isUnsigned: true)
!2419 = !DIEnumerator(name: "CODE_FOR_mmx_umulv4hi3_highpart", value: 2546, isUnsigned: true)
!2420 = !DIEnumerator(name: "CODE_FOR_mmx_pmaddwd", value: 2547, isUnsigned: true)
!2421 = !DIEnumerator(name: "CODE_FOR_mmx_pmulhrwv4hi3", value: 2548, isUnsigned: true)
!2422 = !DIEnumerator(name: "CODE_FOR_sse2_umulv1siv1di3", value: 2549, isUnsigned: true)
!2423 = !DIEnumerator(name: "CODE_FOR_mmx_smaxv4hi3", value: 2550, isUnsigned: true)
!2424 = !DIEnumerator(name: "CODE_FOR_mmx_sminv4hi3", value: 2551, isUnsigned: true)
!2425 = !DIEnumerator(name: "CODE_FOR_mmx_umaxv8qi3", value: 2552, isUnsigned: true)
!2426 = !DIEnumerator(name: "CODE_FOR_mmx_uminv8qi3", value: 2553, isUnsigned: true)
!2427 = !DIEnumerator(name: "CODE_FOR_mmx_eqv8qi3", value: 2554, isUnsigned: true)
!2428 = !DIEnumerator(name: "CODE_FOR_mmx_eqv4hi3", value: 2555, isUnsigned: true)
!2429 = !DIEnumerator(name: "CODE_FOR_mmx_eqv2si3", value: 2556, isUnsigned: true)
!2430 = !DIEnumerator(name: "CODE_FOR_mmx_andv8qi3", value: 2557, isUnsigned: true)
!2431 = !DIEnumerator(name: "CODE_FOR_mmx_iorv8qi3", value: 2558, isUnsigned: true)
!2432 = !DIEnumerator(name: "CODE_FOR_mmx_xorv8qi3", value: 2559, isUnsigned: true)
!2433 = !DIEnumerator(name: "CODE_FOR_mmx_andv4hi3", value: 2560, isUnsigned: true)
!2434 = !DIEnumerator(name: "CODE_FOR_mmx_iorv4hi3", value: 2561, isUnsigned: true)
!2435 = !DIEnumerator(name: "CODE_FOR_mmx_xorv4hi3", value: 2562, isUnsigned: true)
!2436 = !DIEnumerator(name: "CODE_FOR_mmx_andv2si3", value: 2563, isUnsigned: true)
!2437 = !DIEnumerator(name: "CODE_FOR_mmx_iorv2si3", value: 2564, isUnsigned: true)
!2438 = !DIEnumerator(name: "CODE_FOR_mmx_xorv2si3", value: 2565, isUnsigned: true)
!2439 = !DIEnumerator(name: "CODE_FOR_mmx_pinsrw", value: 2566, isUnsigned: true)
!2440 = !DIEnumerator(name: "CODE_FOR_mmx_pshufw", value: 2567, isUnsigned: true)
!2441 = !DIEnumerator(name: "CODE_FOR_vec_setv2si", value: 2568, isUnsigned: true)
!2442 = !DIEnumerator(name: "CODE_FOR_vec_extractv2si", value: 2571, isUnsigned: true)
!2443 = !DIEnumerator(name: "CODE_FOR_vec_initv2si", value: 2572, isUnsigned: true)
!2444 = !DIEnumerator(name: "CODE_FOR_vec_setv4hi", value: 2573, isUnsigned: true)
!2445 = !DIEnumerator(name: "CODE_FOR_vec_extractv4hi", value: 2574, isUnsigned: true)
!2446 = !DIEnumerator(name: "CODE_FOR_vec_initv4hi", value: 2575, isUnsigned: true)
!2447 = !DIEnumerator(name: "CODE_FOR_vec_setv8qi", value: 2576, isUnsigned: true)
!2448 = !DIEnumerator(name: "CODE_FOR_vec_extractv8qi", value: 2577, isUnsigned: true)
!2449 = !DIEnumerator(name: "CODE_FOR_vec_initv8qi", value: 2578, isUnsigned: true)
!2450 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv8qi3", value: 2579, isUnsigned: true)
!2451 = !DIEnumerator(name: "CODE_FOR_mmx_uavgv4hi3", value: 2580, isUnsigned: true)
!2452 = !DIEnumerator(name: "CODE_FOR_mmx_maskmovq", value: 2581, isUnsigned: true)
!2453 = !DIEnumerator(name: "CODE_FOR_mmx_emms", value: 2582, isUnsigned: true)
!2454 = !DIEnumerator(name: "CODE_FOR_mmx_femms", value: 2583, isUnsigned: true)
!2455 = !DIEnumerator(name: "CODE_FOR_movv32qi", value: 2584, isUnsigned: true)
!2456 = !DIEnumerator(name: "CODE_FOR_movv16hi", value: 2585, isUnsigned: true)
!2457 = !DIEnumerator(name: "CODE_FOR_movv8si", value: 2586, isUnsigned: true)
!2458 = !DIEnumerator(name: "CODE_FOR_movv4di", value: 2587, isUnsigned: true)
!2459 = !DIEnumerator(name: "CODE_FOR_movv8sf", value: 2588, isUnsigned: true)
!2460 = !DIEnumerator(name: "CODE_FOR_movv4df", value: 2589, isUnsigned: true)
!2461 = !DIEnumerator(name: "CODE_FOR_movv16qi", value: 2590, isUnsigned: true)
!2462 = !DIEnumerator(name: "CODE_FOR_movv8hi", value: 2591, isUnsigned: true)
!2463 = !DIEnumerator(name: "CODE_FOR_movv4si", value: 2592, isUnsigned: true)
!2464 = !DIEnumerator(name: "CODE_FOR_movv2di", value: 2593, isUnsigned: true)
!2465 = !DIEnumerator(name: "CODE_FOR_movv1ti", value: 2594, isUnsigned: true)
!2466 = !DIEnumerator(name: "CODE_FOR_movv4sf", value: 2595, isUnsigned: true)
!2467 = !DIEnumerator(name: "CODE_FOR_movv2df", value: 2596, isUnsigned: true)
!2468 = !DIEnumerator(name: "CODE_FOR_pushv32qi1", value: 2600, isUnsigned: true)
!2469 = !DIEnumerator(name: "CODE_FOR_pushv16hi1", value: 2601, isUnsigned: true)
!2470 = !DIEnumerator(name: "CODE_FOR_pushv8si1", value: 2602, isUnsigned: true)
!2471 = !DIEnumerator(name: "CODE_FOR_pushv4di1", value: 2603, isUnsigned: true)
!2472 = !DIEnumerator(name: "CODE_FOR_pushv8sf1", value: 2604, isUnsigned: true)
!2473 = !DIEnumerator(name: "CODE_FOR_pushv4df1", value: 2605, isUnsigned: true)
!2474 = !DIEnumerator(name: "CODE_FOR_pushv16qi1", value: 2606, isUnsigned: true)
!2475 = !DIEnumerator(name: "CODE_FOR_pushv8hi1", value: 2607, isUnsigned: true)
!2476 = !DIEnumerator(name: "CODE_FOR_pushv4si1", value: 2608, isUnsigned: true)
!2477 = !DIEnumerator(name: "CODE_FOR_pushv2di1", value: 2609, isUnsigned: true)
!2478 = !DIEnumerator(name: "CODE_FOR_pushv1ti1", value: 2610, isUnsigned: true)
!2479 = !DIEnumerator(name: "CODE_FOR_pushv4sf1", value: 2611, isUnsigned: true)
!2480 = !DIEnumerator(name: "CODE_FOR_pushv2df1", value: 2612, isUnsigned: true)
!2481 = !DIEnumerator(name: "CODE_FOR_movmisalignv32qi", value: 2613, isUnsigned: true)
!2482 = !DIEnumerator(name: "CODE_FOR_movmisalignv16hi", value: 2614, isUnsigned: true)
!2483 = !DIEnumerator(name: "CODE_FOR_movmisalignv8si", value: 2615, isUnsigned: true)
!2484 = !DIEnumerator(name: "CODE_FOR_movmisalignv4di", value: 2616, isUnsigned: true)
!2485 = !DIEnumerator(name: "CODE_FOR_movmisalignv8sf", value: 2617, isUnsigned: true)
!2486 = !DIEnumerator(name: "CODE_FOR_movmisalignv4df", value: 2618, isUnsigned: true)
!2487 = !DIEnumerator(name: "CODE_FOR_movmisalignv16qi", value: 2619, isUnsigned: true)
!2488 = !DIEnumerator(name: "CODE_FOR_movmisalignv8hi", value: 2620, isUnsigned: true)
!2489 = !DIEnumerator(name: "CODE_FOR_movmisalignv4si", value: 2621, isUnsigned: true)
!2490 = !DIEnumerator(name: "CODE_FOR_movmisalignv2di", value: 2622, isUnsigned: true)
!2491 = !DIEnumerator(name: "CODE_FOR_movmisalignv1ti", value: 2623, isUnsigned: true)
!2492 = !DIEnumerator(name: "CODE_FOR_movmisalignv4sf", value: 2624, isUnsigned: true)
!2493 = !DIEnumerator(name: "CODE_FOR_movmisalignv2df", value: 2625, isUnsigned: true)
!2494 = !DIEnumerator(name: "CODE_FOR_storentv4sf", value: 2626, isUnsigned: true)
!2495 = !DIEnumerator(name: "CODE_FOR_storentv2df", value: 2627, isUnsigned: true)
!2496 = !DIEnumerator(name: "CODE_FOR_storentsf", value: 2628, isUnsigned: true)
!2497 = !DIEnumerator(name: "CODE_FOR_storentdf", value: 2629, isUnsigned: true)
!2498 = !DIEnumerator(name: "CODE_FOR_storentv2di", value: 2630, isUnsigned: true)
!2499 = !DIEnumerator(name: "CODE_FOR_storentsi", value: 2631, isUnsigned: true)
!2500 = !DIEnumerator(name: "CODE_FOR_absv4sf2", value: 2632, isUnsigned: true)
!2501 = !DIEnumerator(name: "CODE_FOR_negv4sf2", value: 2633, isUnsigned: true)
!2502 = !DIEnumerator(name: "CODE_FOR_absv2df2", value: 2634, isUnsigned: true)
!2503 = !DIEnumerator(name: "CODE_FOR_negv2df2", value: 2635, isUnsigned: true)
!2504 = !DIEnumerator(name: "CODE_FOR_addv8sf3", value: 2636, isUnsigned: true)
!2505 = !DIEnumerator(name: "CODE_FOR_subv8sf3", value: 2637, isUnsigned: true)
!2506 = !DIEnumerator(name: "CODE_FOR_addv4df3", value: 2638, isUnsigned: true)
!2507 = !DIEnumerator(name: "CODE_FOR_subv4df3", value: 2639, isUnsigned: true)
!2508 = !DIEnumerator(name: "CODE_FOR_addv4sf3", value: 2640, isUnsigned: true)
!2509 = !DIEnumerator(name: "CODE_FOR_subv4sf3", value: 2641, isUnsigned: true)
!2510 = !DIEnumerator(name: "CODE_FOR_addv2df3", value: 2642, isUnsigned: true)
!2511 = !DIEnumerator(name: "CODE_FOR_subv2df3", value: 2643, isUnsigned: true)
!2512 = !DIEnumerator(name: "CODE_FOR_mulv8sf3", value: 2644, isUnsigned: true)
!2513 = !DIEnumerator(name: "CODE_FOR_mulv4df3", value: 2645, isUnsigned: true)
!2514 = !DIEnumerator(name: "CODE_FOR_mulv4sf3", value: 2646, isUnsigned: true)
!2515 = !DIEnumerator(name: "CODE_FOR_mulv2df3", value: 2647, isUnsigned: true)
!2516 = !DIEnumerator(name: "CODE_FOR_divv8sf3", value: 2648, isUnsigned: true)
!2517 = !DIEnumerator(name: "CODE_FOR_divv4df3", value: 2649, isUnsigned: true)
!2518 = !DIEnumerator(name: "CODE_FOR_divv4sf3", value: 2650, isUnsigned: true)
!2519 = !DIEnumerator(name: "CODE_FOR_divv2df3", value: 2651, isUnsigned: true)
!2520 = !DIEnumerator(name: "CODE_FOR_sqrtv8sf2", value: 2652, isUnsigned: true)
!2521 = !DIEnumerator(name: "CODE_FOR_sqrtv4sf2", value: 2653, isUnsigned: true)
!2522 = !DIEnumerator(name: "CODE_FOR_rsqrtv8sf2", value: 2654, isUnsigned: true)
!2523 = !DIEnumerator(name: "CODE_FOR_rsqrtv4sf2", value: 2655, isUnsigned: true)
!2524 = !DIEnumerator(name: "CODE_FOR_smaxv8sf3", value: 2656, isUnsigned: true)
!2525 = !DIEnumerator(name: "CODE_FOR_sminv8sf3", value: 2657, isUnsigned: true)
!2526 = !DIEnumerator(name: "CODE_FOR_smaxv4df3", value: 2658, isUnsigned: true)
!2527 = !DIEnumerator(name: "CODE_FOR_sminv4df3", value: 2659, isUnsigned: true)
!2528 = !DIEnumerator(name: "CODE_FOR_smaxv4sf3", value: 2660, isUnsigned: true)
!2529 = !DIEnumerator(name: "CODE_FOR_sminv4sf3", value: 2661, isUnsigned: true)
!2530 = !DIEnumerator(name: "CODE_FOR_smaxv2df3", value: 2662, isUnsigned: true)
!2531 = !DIEnumerator(name: "CODE_FOR_sminv2df3", value: 2663, isUnsigned: true)
!2532 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v4sf", value: 2664, isUnsigned: true)
!2533 = !DIEnumerator(name: "CODE_FOR_reduc_splus_v2df", value: 2665, isUnsigned: true)
!2534 = !DIEnumerator(name: "CODE_FOR_reduc_smax_v4sf", value: 2666, isUnsigned: true)
!2535 = !DIEnumerator(name: "CODE_FOR_reduc_smin_v4sf", value: 2667, isUnsigned: true)
!2536 = !DIEnumerator(name: "CODE_FOR_vcondv4sf", value: 2668, isUnsigned: true)
!2537 = !DIEnumerator(name: "CODE_FOR_vcondv2df", value: 2669, isUnsigned: true)
!2538 = !DIEnumerator(name: "CODE_FOR_andv8sf3", value: 2670, isUnsigned: true)
!2539 = !DIEnumerator(name: "CODE_FOR_iorv8sf3", value: 2671, isUnsigned: true)
!2540 = !DIEnumerator(name: "CODE_FOR_xorv8sf3", value: 2672, isUnsigned: true)
!2541 = !DIEnumerator(name: "CODE_FOR_andv4df3", value: 2673, isUnsigned: true)
!2542 = !DIEnumerator(name: "CODE_FOR_iorv4df3", value: 2674, isUnsigned: true)
!2543 = !DIEnumerator(name: "CODE_FOR_xorv4df3", value: 2675, isUnsigned: true)
!2544 = !DIEnumerator(name: "CODE_FOR_andv4sf3", value: 2676, isUnsigned: true)
!2545 = !DIEnumerator(name: "CODE_FOR_iorv4sf3", value: 2677, isUnsigned: true)
!2546 = !DIEnumerator(name: "CODE_FOR_xorv4sf3", value: 2678, isUnsigned: true)
!2547 = !DIEnumerator(name: "CODE_FOR_andv2df3", value: 2679, isUnsigned: true)
!2548 = !DIEnumerator(name: "CODE_FOR_iorv2df3", value: 2680, isUnsigned: true)
!2549 = !DIEnumerator(name: "CODE_FOR_xorv2df3", value: 2681, isUnsigned: true)
!2550 = !DIEnumerator(name: "CODE_FOR_copysignv4sf3", value: 2682, isUnsigned: true)
!2551 = !DIEnumerator(name: "CODE_FOR_copysignv2df3", value: 2683, isUnsigned: true)
!2552 = !DIEnumerator(name: "CODE_FOR_sse2_cvtudq2ps", value: 2684, isUnsigned: true)
!2553 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2dq", value: 2685, isUnsigned: true)
!2554 = !DIEnumerator(name: "CODE_FOR_sse2_cvttpd2dq", value: 2686, isUnsigned: true)
!2555 = !DIEnumerator(name: "CODE_FOR_sse2_cvtpd2ps", value: 2687, isUnsigned: true)
!2556 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4sf", value: 2688, isUnsigned: true)
!2557 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4sf", value: 2689, isUnsigned: true)
!2558 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v8hi", value: 2690, isUnsigned: true)
!2559 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v8hi", value: 2691, isUnsigned: true)
!2560 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v8hi", value: 2692, isUnsigned: true)
!2561 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v8hi", value: 2693, isUnsigned: true)
!2562 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_hi_v4si", value: 2694, isUnsigned: true)
!2563 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_float_lo_v4si", value: 2695, isUnsigned: true)
!2564 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_hi_v4si", value: 2696, isUnsigned: true)
!2565 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_float_lo_v4si", value: 2697, isUnsigned: true)
!2566 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2df", value: 2698, isUnsigned: true)
!2567 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_trunc_v2df", value: 2699, isUnsigned: true)
!2568 = !DIEnumerator(name: "CODE_FOR_vec_pack_sfix_v2df", value: 2700, isUnsigned: true)
!2569 = !DIEnumerator(name: "CODE_FOR_sse_movhlps_exp", value: 2701, isUnsigned: true)
!2570 = !DIEnumerator(name: "CODE_FOR_sse_movlhps_exp", value: 2702, isUnsigned: true)
!2571 = !DIEnumerator(name: "CODE_FOR_avx_shufps256", value: 2703, isUnsigned: true)
!2572 = !DIEnumerator(name: "CODE_FOR_sse_shufps", value: 2704, isUnsigned: true)
!2573 = !DIEnumerator(name: "CODE_FOR_sse_loadhps_exp", value: 2705, isUnsigned: true)
!2574 = !DIEnumerator(name: "CODE_FOR_sse_loadlps_exp", value: 2706, isUnsigned: true)
!2575 = !DIEnumerator(name: "CODE_FOR_vec_dupv4sf", value: 2707, isUnsigned: true)
!2576 = !DIEnumerator(name: "CODE_FOR_vec_initv16qi", value: 2708, isUnsigned: true)
!2577 = !DIEnumerator(name: "CODE_FOR_vec_initv8hi", value: 2709, isUnsigned: true)
!2578 = !DIEnumerator(name: "CODE_FOR_vec_initv4si", value: 2710, isUnsigned: true)
!2579 = !DIEnumerator(name: "CODE_FOR_vec_initv2di", value: 2711, isUnsigned: true)
!2580 = !DIEnumerator(name: "CODE_FOR_vec_initv4sf", value: 2712, isUnsigned: true)
!2581 = !DIEnumerator(name: "CODE_FOR_vec_initv2df", value: 2713, isUnsigned: true)
!2582 = !DIEnumerator(name: "CODE_FOR_vec_setv16qi", value: 2715, isUnsigned: true)
!2583 = !DIEnumerator(name: "CODE_FOR_vec_setv8hi", value: 2716, isUnsigned: true)
!2584 = !DIEnumerator(name: "CODE_FOR_vec_setv4si", value: 2717, isUnsigned: true)
!2585 = !DIEnumerator(name: "CODE_FOR_vec_setv2di", value: 2718, isUnsigned: true)
!2586 = !DIEnumerator(name: "CODE_FOR_vec_setv4sf", value: 2719, isUnsigned: true)
!2587 = !DIEnumerator(name: "CODE_FOR_vec_setv2df", value: 2720, isUnsigned: true)
!2588 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v32qi", value: 2722, isUnsigned: true)
!2589 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v16hi", value: 2723, isUnsigned: true)
!2590 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8si", value: 2724, isUnsigned: true)
!2591 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4di", value: 2725, isUnsigned: true)
!2592 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v8sf", value: 2726, isUnsigned: true)
!2593 = !DIEnumerator(name: "CODE_FOR_avx_vextractf128v4df", value: 2727, isUnsigned: true)
!2594 = !DIEnumerator(name: "CODE_FOR_vec_extractv16qi", value: 2729, isUnsigned: true)
!2595 = !DIEnumerator(name: "CODE_FOR_vec_extractv8hi", value: 2730, isUnsigned: true)
!2596 = !DIEnumerator(name: "CODE_FOR_vec_extractv4si", value: 2731, isUnsigned: true)
!2597 = !DIEnumerator(name: "CODE_FOR_vec_extractv2di", value: 2732, isUnsigned: true)
!2598 = !DIEnumerator(name: "CODE_FOR_vec_extractv4sf", value: 2733, isUnsigned: true)
!2599 = !DIEnumerator(name: "CODE_FOR_vec_extractv2df", value: 2734, isUnsigned: true)
!2600 = !DIEnumerator(name: "CODE_FOR_vec_interleave_highv2df", value: 2735, isUnsigned: true)
!2601 = !DIEnumerator(name: "CODE_FOR_avx_movddup256", value: 2736, isUnsigned: true)
!2602 = !DIEnumerator(name: "CODE_FOR_avx_unpcklpd256", value: 2737, isUnsigned: true)
!2603 = !DIEnumerator(name: "CODE_FOR_vec_interleave_lowv2df", value: 2738, isUnsigned: true)
!2604 = !DIEnumerator(name: "CODE_FOR_avx_shufpd256", value: 2741, isUnsigned: true)
!2605 = !DIEnumerator(name: "CODE_FOR_sse2_shufpd", value: 2742, isUnsigned: true)
!2606 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4sf", value: 2743, isUnsigned: true)
!2607 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2df", value: 2744, isUnsigned: true)
!2608 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv2di", value: 2745, isUnsigned: true)
!2609 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4si", value: 2746, isUnsigned: true)
!2610 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8hi", value: 2747, isUnsigned: true)
!2611 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv16qi", value: 2748, isUnsigned: true)
!2612 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv4df", value: 2749, isUnsigned: true)
!2613 = !DIEnumerator(name: "CODE_FOR_vec_extract_evenv8sf", value: 2750, isUnsigned: true)
!2614 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4sf", value: 2751, isUnsigned: true)
!2615 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2df", value: 2752, isUnsigned: true)
!2616 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv2di", value: 2753, isUnsigned: true)
!2617 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4si", value: 2754, isUnsigned: true)
!2618 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8hi", value: 2755, isUnsigned: true)
!2619 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv16qi", value: 2756, isUnsigned: true)
!2620 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv4df", value: 2757, isUnsigned: true)
!2621 = !DIEnumerator(name: "CODE_FOR_vec_extract_oddv8sf", value: 2758, isUnsigned: true)
!2622 = !DIEnumerator(name: "CODE_FOR_sse2_loadhpd_exp", value: 2761, isUnsigned: true)
!2623 = !DIEnumerator(name: "CODE_FOR_sse2_loadlpd_exp", value: 2763, isUnsigned: true)
!2624 = !DIEnumerator(name: "CODE_FOR_negv16qi2", value: 2765, isUnsigned: true)
!2625 = !DIEnumerator(name: "CODE_FOR_negv8hi2", value: 2766, isUnsigned: true)
!2626 = !DIEnumerator(name: "CODE_FOR_negv4si2", value: 2767, isUnsigned: true)
!2627 = !DIEnumerator(name: "CODE_FOR_negv2di2", value: 2768, isUnsigned: true)
!2628 = !DIEnumerator(name: "CODE_FOR_addv16qi3", value: 2769, isUnsigned: true)
!2629 = !DIEnumerator(name: "CODE_FOR_subv16qi3", value: 2770, isUnsigned: true)
!2630 = !DIEnumerator(name: "CODE_FOR_addv8hi3", value: 2771, isUnsigned: true)
!2631 = !DIEnumerator(name: "CODE_FOR_subv8hi3", value: 2772, isUnsigned: true)
!2632 = !DIEnumerator(name: "CODE_FOR_addv4si3", value: 2773, isUnsigned: true)
!2633 = !DIEnumerator(name: "CODE_FOR_subv4si3", value: 2774, isUnsigned: true)
!2634 = !DIEnumerator(name: "CODE_FOR_addv2di3", value: 2775, isUnsigned: true)
!2635 = !DIEnumerator(name: "CODE_FOR_subv2di3", value: 2776, isUnsigned: true)
!2636 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv16qi3", value: 2777, isUnsigned: true)
!2637 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv16qi3", value: 2778, isUnsigned: true)
!2638 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv16qi3", value: 2779, isUnsigned: true)
!2639 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv16qi3", value: 2780, isUnsigned: true)
!2640 = !DIEnumerator(name: "CODE_FOR_sse2_ssaddv8hi3", value: 2781, isUnsigned: true)
!2641 = !DIEnumerator(name: "CODE_FOR_sse2_usaddv8hi3", value: 2782, isUnsigned: true)
!2642 = !DIEnumerator(name: "CODE_FOR_sse2_sssubv8hi3", value: 2783, isUnsigned: true)
!2643 = !DIEnumerator(name: "CODE_FOR_sse2_ussubv8hi3", value: 2784, isUnsigned: true)
!2644 = !DIEnumerator(name: "CODE_FOR_mulv8hi3", value: 2786, isUnsigned: true)
!2645 = !DIEnumerator(name: "CODE_FOR_smulv8hi3_highpart", value: 2787, isUnsigned: true)
!2646 = !DIEnumerator(name: "CODE_FOR_umulv8hi3_highpart", value: 2788, isUnsigned: true)
!2647 = !DIEnumerator(name: "CODE_FOR_sse2_umulv2siv2di3", value: 2789, isUnsigned: true)
!2648 = !DIEnumerator(name: "CODE_FOR_sse4_1_mulv2siv2di3", value: 2790, isUnsigned: true)
!2649 = !DIEnumerator(name: "CODE_FOR_sse2_pmaddwd", value: 2791, isUnsigned: true)
!2650 = !DIEnumerator(name: "CODE_FOR_mulv4si3", value: 2792, isUnsigned: true)
!2651 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v8hi", value: 2795, isUnsigned: true)
!2652 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v8hi", value: 2796, isUnsigned: true)
!2653 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v8hi", value: 2797, isUnsigned: true)
!2654 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v8hi", value: 2798, isUnsigned: true)
!2655 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_hi_v4si", value: 2799, isUnsigned: true)
!2656 = !DIEnumerator(name: "CODE_FOR_vec_widen_smult_lo_v4si", value: 2800, isUnsigned: true)
!2657 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_hi_v4si", value: 2801, isUnsigned: true)
!2658 = !DIEnumerator(name: "CODE_FOR_vec_widen_umult_lo_v4si", value: 2802, isUnsigned: true)
!2659 = !DIEnumerator(name: "CODE_FOR_sdot_prodv8hi", value: 2803, isUnsigned: true)
!2660 = !DIEnumerator(name: "CODE_FOR_udot_prodv4si", value: 2804, isUnsigned: true)
!2661 = !DIEnumerator(name: "CODE_FOR_vec_shl_v16qi", value: 2805, isUnsigned: true)
!2662 = !DIEnumerator(name: "CODE_FOR_vec_shl_v8hi", value: 2806, isUnsigned: true)
!2663 = !DIEnumerator(name: "CODE_FOR_vec_shl_v4si", value: 2807, isUnsigned: true)
!2664 = !DIEnumerator(name: "CODE_FOR_vec_shl_v2di", value: 2808, isUnsigned: true)
!2665 = !DIEnumerator(name: "CODE_FOR_vec_shr_v16qi", value: 2809, isUnsigned: true)
!2666 = !DIEnumerator(name: "CODE_FOR_vec_shr_v8hi", value: 2810, isUnsigned: true)
!2667 = !DIEnumerator(name: "CODE_FOR_vec_shr_v4si", value: 2811, isUnsigned: true)
!2668 = !DIEnumerator(name: "CODE_FOR_vec_shr_v2di", value: 2812, isUnsigned: true)
!2669 = !DIEnumerator(name: "CODE_FOR_umaxv16qi3", value: 2813, isUnsigned: true)
!2670 = !DIEnumerator(name: "CODE_FOR_uminv16qi3", value: 2814, isUnsigned: true)
!2671 = !DIEnumerator(name: "CODE_FOR_smaxv8hi3", value: 2815, isUnsigned: true)
!2672 = !DIEnumerator(name: "CODE_FOR_sminv8hi3", value: 2816, isUnsigned: true)
!2673 = !DIEnumerator(name: "CODE_FOR_umaxv8hi3", value: 2817, isUnsigned: true)
!2674 = !DIEnumerator(name: "CODE_FOR_smaxv16qi3", value: 2818, isUnsigned: true)
!2675 = !DIEnumerator(name: "CODE_FOR_smaxv4si3", value: 2819, isUnsigned: true)
!2676 = !DIEnumerator(name: "CODE_FOR_smaxv2di3", value: 2820, isUnsigned: true)
!2677 = !DIEnumerator(name: "CODE_FOR_umaxv4si3", value: 2821, isUnsigned: true)
!2678 = !DIEnumerator(name: "CODE_FOR_umaxv2di3", value: 2822, isUnsigned: true)
!2679 = !DIEnumerator(name: "CODE_FOR_sminv16qi3", value: 2823, isUnsigned: true)
!2680 = !DIEnumerator(name: "CODE_FOR_sminv4si3", value: 2824, isUnsigned: true)
!2681 = !DIEnumerator(name: "CODE_FOR_sminv2di3", value: 2825, isUnsigned: true)
!2682 = !DIEnumerator(name: "CODE_FOR_uminv8hi3", value: 2826, isUnsigned: true)
!2683 = !DIEnumerator(name: "CODE_FOR_uminv4si3", value: 2827, isUnsigned: true)
!2684 = !DIEnumerator(name: "CODE_FOR_uminv2di3", value: 2828, isUnsigned: true)
!2685 = !DIEnumerator(name: "CODE_FOR_sse2_eqv16qi3", value: 2829, isUnsigned: true)
!2686 = !DIEnumerator(name: "CODE_FOR_sse2_eqv8hi3", value: 2830, isUnsigned: true)
!2687 = !DIEnumerator(name: "CODE_FOR_sse2_eqv4si3", value: 2831, isUnsigned: true)
!2688 = !DIEnumerator(name: "CODE_FOR_sse4_1_eqv2di3", value: 2832, isUnsigned: true)
!2689 = !DIEnumerator(name: "CODE_FOR_vcondv16qi", value: 2833, isUnsigned: true)
!2690 = !DIEnumerator(name: "CODE_FOR_vcondv8hi", value: 2834, isUnsigned: true)
!2691 = !DIEnumerator(name: "CODE_FOR_vcondv4si", value: 2835, isUnsigned: true)
!2692 = !DIEnumerator(name: "CODE_FOR_vcondv2di", value: 2836, isUnsigned: true)
!2693 = !DIEnumerator(name: "CODE_FOR_vconduv16qi", value: 2837, isUnsigned: true)
!2694 = !DIEnumerator(name: "CODE_FOR_vconduv8hi", value: 2838, isUnsigned: true)
!2695 = !DIEnumerator(name: "CODE_FOR_vconduv4si", value: 2839, isUnsigned: true)
!2696 = !DIEnumerator(name: "CODE_FOR_vconduv2di", value: 2840, isUnsigned: true)
!2697 = !DIEnumerator(name: "CODE_FOR_one_cmplv16qi2", value: 2841, isUnsigned: true)
!2698 = !DIEnumerator(name: "CODE_FOR_one_cmplv8hi2", value: 2842, isUnsigned: true)
!2699 = !DIEnumerator(name: "CODE_FOR_one_cmplv4si2", value: 2843, isUnsigned: true)
!2700 = !DIEnumerator(name: "CODE_FOR_one_cmplv2di2", value: 2844, isUnsigned: true)
!2701 = !DIEnumerator(name: "CODE_FOR_andv16qi3", value: 2845, isUnsigned: true)
!2702 = !DIEnumerator(name: "CODE_FOR_iorv16qi3", value: 2846, isUnsigned: true)
!2703 = !DIEnumerator(name: "CODE_FOR_xorv16qi3", value: 2847, isUnsigned: true)
!2704 = !DIEnumerator(name: "CODE_FOR_andv8hi3", value: 2848, isUnsigned: true)
!2705 = !DIEnumerator(name: "CODE_FOR_iorv8hi3", value: 2849, isUnsigned: true)
!2706 = !DIEnumerator(name: "CODE_FOR_xorv8hi3", value: 2850, isUnsigned: true)
!2707 = !DIEnumerator(name: "CODE_FOR_andv4si3", value: 2851, isUnsigned: true)
!2708 = !DIEnumerator(name: "CODE_FOR_iorv4si3", value: 2852, isUnsigned: true)
!2709 = !DIEnumerator(name: "CODE_FOR_xorv4si3", value: 2853, isUnsigned: true)
!2710 = !DIEnumerator(name: "CODE_FOR_andv2di3", value: 2854, isUnsigned: true)
!2711 = !DIEnumerator(name: "CODE_FOR_iorv2di3", value: 2855, isUnsigned: true)
!2712 = !DIEnumerator(name: "CODE_FOR_xorv2di3", value: 2856, isUnsigned: true)
!2713 = !DIEnumerator(name: "CODE_FOR_andtf3", value: 2857, isUnsigned: true)
!2714 = !DIEnumerator(name: "CODE_FOR_iortf3", value: 2858, isUnsigned: true)
!2715 = !DIEnumerator(name: "CODE_FOR_xortf3", value: 2859, isUnsigned: true)
!2716 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v8hi", value: 2860, isUnsigned: true)
!2717 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v4si", value: 2861, isUnsigned: true)
!2718 = !DIEnumerator(name: "CODE_FOR_vec_pack_trunc_v2di", value: 2862, isUnsigned: true)
!2719 = !DIEnumerator(name: "CODE_FOR_sse2_pshufd", value: 2863, isUnsigned: true)
!2720 = !DIEnumerator(name: "CODE_FOR_sse2_pshuflw", value: 2864, isUnsigned: true)
!2721 = !DIEnumerator(name: "CODE_FOR_sse2_pshufhw", value: 2865, isUnsigned: true)
!2722 = !DIEnumerator(name: "CODE_FOR_sse2_loadd", value: 2866, isUnsigned: true)
!2723 = !DIEnumerator(name: "CODE_FOR_sse_storeq", value: 2869, isUnsigned: true)
!2724 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v16qi", value: 2871, isUnsigned: true)
!2725 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v16qi", value: 2872, isUnsigned: true)
!2726 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v16qi", value: 2873, isUnsigned: true)
!2727 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v16qi", value: 2874, isUnsigned: true)
!2728 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v8hi", value: 2875, isUnsigned: true)
!2729 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v8hi", value: 2876, isUnsigned: true)
!2730 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v8hi", value: 2877, isUnsigned: true)
!2731 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v8hi", value: 2878, isUnsigned: true)
!2732 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_hi_v4si", value: 2879, isUnsigned: true)
!2733 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_hi_v4si", value: 2880, isUnsigned: true)
!2734 = !DIEnumerator(name: "CODE_FOR_vec_unpacku_lo_v4si", value: 2881, isUnsigned: true)
!2735 = !DIEnumerator(name: "CODE_FOR_vec_unpacks_lo_v4si", value: 2882, isUnsigned: true)
!2736 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv16qi3", value: 2883, isUnsigned: true)
!2737 = !DIEnumerator(name: "CODE_FOR_sse2_uavgv8hi3", value: 2884, isUnsigned: true)
!2738 = !DIEnumerator(name: "CODE_FOR_sse2_maskmovdqu", value: 2885, isUnsigned: true)
!2739 = !DIEnumerator(name: "CODE_FOR_sse_sfence", value: 2886, isUnsigned: true)
!2740 = !DIEnumerator(name: "CODE_FOR_sse2_mfence", value: 2887, isUnsigned: true)
!2741 = !DIEnumerator(name: "CODE_FOR_sse2_lfence", value: 2888, isUnsigned: true)
!2742 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv8hi3", value: 2889, isUnsigned: true)
!2743 = !DIEnumerator(name: "CODE_FOR_ssse3_pmulhrswv4hi3", value: 2890, isUnsigned: true)
!2744 = !DIEnumerator(name: "CODE_FOR_rotlv16qi3", value: 2895, isUnsigned: true)
!2745 = !DIEnumerator(name: "CODE_FOR_rotlv8hi3", value: 2896, isUnsigned: true)
!2746 = !DIEnumerator(name: "CODE_FOR_rotlv4si3", value: 2897, isUnsigned: true)
!2747 = !DIEnumerator(name: "CODE_FOR_rotlv2di3", value: 2898, isUnsigned: true)
!2748 = !DIEnumerator(name: "CODE_FOR_rotrv16qi3", value: 2899, isUnsigned: true)
!2749 = !DIEnumerator(name: "CODE_FOR_rotrv8hi3", value: 2900, isUnsigned: true)
!2750 = !DIEnumerator(name: "CODE_FOR_rotrv4si3", value: 2901, isUnsigned: true)
!2751 = !DIEnumerator(name: "CODE_FOR_rotrv2di3", value: 2902, isUnsigned: true)
!2752 = !DIEnumerator(name: "CODE_FOR_vrotrv16qi3", value: 2903, isUnsigned: true)
!2753 = !DIEnumerator(name: "CODE_FOR_vrotrv8hi3", value: 2904, isUnsigned: true)
!2754 = !DIEnumerator(name: "CODE_FOR_vrotrv4si3", value: 2905, isUnsigned: true)
!2755 = !DIEnumerator(name: "CODE_FOR_vrotrv2di3", value: 2906, isUnsigned: true)
!2756 = !DIEnumerator(name: "CODE_FOR_vrotlv16qi3", value: 2907, isUnsigned: true)
!2757 = !DIEnumerator(name: "CODE_FOR_vrotlv8hi3", value: 2908, isUnsigned: true)
!2758 = !DIEnumerator(name: "CODE_FOR_vrotlv4si3", value: 2909, isUnsigned: true)
!2759 = !DIEnumerator(name: "CODE_FOR_vrotlv2di3", value: 2910, isUnsigned: true)
!2760 = !DIEnumerator(name: "CODE_FOR_vlshrv16qi3", value: 2911, isUnsigned: true)
!2761 = !DIEnumerator(name: "CODE_FOR_vlshrv8hi3", value: 2912, isUnsigned: true)
!2762 = !DIEnumerator(name: "CODE_FOR_vlshrv4si3", value: 2913, isUnsigned: true)
!2763 = !DIEnumerator(name: "CODE_FOR_vashrv16qi3", value: 2914, isUnsigned: true)
!2764 = !DIEnumerator(name: "CODE_FOR_vashrv8hi3", value: 2915, isUnsigned: true)
!2765 = !DIEnumerator(name: "CODE_FOR_vashrv4si3", value: 2916, isUnsigned: true)
!2766 = !DIEnumerator(name: "CODE_FOR_vashlv16qi3", value: 2917, isUnsigned: true)
!2767 = !DIEnumerator(name: "CODE_FOR_vashlv8hi3", value: 2918, isUnsigned: true)
!2768 = !DIEnumerator(name: "CODE_FOR_vashlv4si3", value: 2919, isUnsigned: true)
!2769 = !DIEnumerator(name: "CODE_FOR_ashlv16qi3", value: 2920, isUnsigned: true)
!2770 = !DIEnumerator(name: "CODE_FOR_lshlv16qi3", value: 2921, isUnsigned: true)
!2771 = !DIEnumerator(name: "CODE_FOR_ashrv16qi3", value: 2922, isUnsigned: true)
!2772 = !DIEnumerator(name: "CODE_FOR_ashrv2di3", value: 2923, isUnsigned: true)
!2773 = !DIEnumerator(name: "CODE_FOR_avx_vzeroall", value: 2924, isUnsigned: true)
!2774 = !DIEnumerator(name: "CODE_FOR_avx_vzeroupper", value: 2925, isUnsigned: true)
!2775 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv2df", value: 2932, isUnsigned: true)
!2776 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4df", value: 2933, isUnsigned: true)
!2777 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv4sf", value: 2934, isUnsigned: true)
!2778 = !DIEnumerator(name: "CODE_FOR_avx_vpermilv8sf", value: 2935, isUnsigned: true)
!2779 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8si3", value: 2936, isUnsigned: true)
!2780 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v8sf3", value: 2937, isUnsigned: true)
!2781 = !DIEnumerator(name: "CODE_FOR_avx_vperm2f128v4df3", value: 2938, isUnsigned: true)
!2782 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v32qi", value: 2939, isUnsigned: true)
!2783 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v16hi", value: 2940, isUnsigned: true)
!2784 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8si", value: 2941, isUnsigned: true)
!2785 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4di", value: 2942, isUnsigned: true)
!2786 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v8sf", value: 2943, isUnsigned: true)
!2787 = !DIEnumerator(name: "CODE_FOR_avx_vinsertf128v4df", value: 2944, isUnsigned: true)
!2788 = !DIEnumerator(name: "CODE_FOR_vec_initv32qi", value: 2945, isUnsigned: true)
!2789 = !DIEnumerator(name: "CODE_FOR_vec_initv16hi", value: 2946, isUnsigned: true)
!2790 = !DIEnumerator(name: "CODE_FOR_vec_initv8si", value: 2947, isUnsigned: true)
!2791 = !DIEnumerator(name: "CODE_FOR_vec_initv4di", value: 2948, isUnsigned: true)
!2792 = !DIEnumerator(name: "CODE_FOR_vec_initv8sf", value: 2949, isUnsigned: true)
!2793 = !DIEnumerator(name: "CODE_FOR_vec_initv4df", value: 2950, isUnsigned: true)
!2794 = !DIEnumerator(name: "CODE_FOR_memory_barrier", value: 2951, isUnsigned: true)
!2795 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapqi", value: 2952, isUnsigned: true)
!2796 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swaphi", value: 2953, isUnsigned: true)
!2797 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapsi", value: 2954, isUnsigned: true)
!2798 = !DIEnumerator(name: "CODE_FOR_sync_compare_and_swapdi", value: 2955, isUnsigned: true)
!2799 = !DIEnumerator(name: "CODE_FOR_nothing", value: 2956, isUnsigned: true)
!2800 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_code", file: !1248, line: 51, baseType: !7, size: 32, elements: !2801)
!2801 = !{!2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837}
!2802 = !DIEnumerator(name: "GIMPLE_ERROR_MARK", value: 0, isUnsigned: true)
!2803 = !DIEnumerator(name: "GIMPLE_COND", value: 1, isUnsigned: true)
!2804 = !DIEnumerator(name: "GIMPLE_DEBUG", value: 2, isUnsigned: true)
!2805 = !DIEnumerator(name: "GIMPLE_GOTO", value: 3, isUnsigned: true)
!2806 = !DIEnumerator(name: "GIMPLE_LABEL", value: 4, isUnsigned: true)
!2807 = !DIEnumerator(name: "GIMPLE_SWITCH", value: 5, isUnsigned: true)
!2808 = !DIEnumerator(name: "GIMPLE_ASSIGN", value: 6, isUnsigned: true)
!2809 = !DIEnumerator(name: "GIMPLE_ASM", value: 7, isUnsigned: true)
!2810 = !DIEnumerator(name: "GIMPLE_CALL", value: 8, isUnsigned: true)
!2811 = !DIEnumerator(name: "GIMPLE_RETURN", value: 9, isUnsigned: true)
!2812 = !DIEnumerator(name: "GIMPLE_BIND", value: 10, isUnsigned: true)
!2813 = !DIEnumerator(name: "GIMPLE_CATCH", value: 11, isUnsigned: true)
!2814 = !DIEnumerator(name: "GIMPLE_EH_FILTER", value: 12, isUnsigned: true)
!2815 = !DIEnumerator(name: "GIMPLE_EH_MUST_NOT_THROW", value: 13, isUnsigned: true)
!2816 = !DIEnumerator(name: "GIMPLE_RESX", value: 14, isUnsigned: true)
!2817 = !DIEnumerator(name: "GIMPLE_EH_DISPATCH", value: 15, isUnsigned: true)
!2818 = !DIEnumerator(name: "GIMPLE_PHI", value: 16, isUnsigned: true)
!2819 = !DIEnumerator(name: "GIMPLE_TRY", value: 17, isUnsigned: true)
!2820 = !DIEnumerator(name: "GIMPLE_NOP", value: 18, isUnsigned: true)
!2821 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_LOAD", value: 19, isUnsigned: true)
!2822 = !DIEnumerator(name: "GIMPLE_OMP_ATOMIC_STORE", value: 20, isUnsigned: true)
!2823 = !DIEnumerator(name: "GIMPLE_OMP_CONTINUE", value: 21, isUnsigned: true)
!2824 = !DIEnumerator(name: "GIMPLE_OMP_CRITICAL", value: 22, isUnsigned: true)
!2825 = !DIEnumerator(name: "GIMPLE_OMP_FOR", value: 23, isUnsigned: true)
!2826 = !DIEnumerator(name: "GIMPLE_OMP_MASTER", value: 24, isUnsigned: true)
!2827 = !DIEnumerator(name: "GIMPLE_OMP_ORDERED", value: 25, isUnsigned: true)
!2828 = !DIEnumerator(name: "GIMPLE_OMP_PARALLEL", value: 26, isUnsigned: true)
!2829 = !DIEnumerator(name: "GIMPLE_OMP_TASK", value: 27, isUnsigned: true)
!2830 = !DIEnumerator(name: "GIMPLE_OMP_RETURN", value: 28, isUnsigned: true)
!2831 = !DIEnumerator(name: "GIMPLE_OMP_SECTION", value: 29, isUnsigned: true)
!2832 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS", value: 30, isUnsigned: true)
!2833 = !DIEnumerator(name: "GIMPLE_OMP_SECTIONS_SWITCH", value: 31, isUnsigned: true)
!2834 = !DIEnumerator(name: "GIMPLE_OMP_SINGLE", value: 32, isUnsigned: true)
!2835 = !DIEnumerator(name: "GIMPLE_PREDICT", value: 33, isUnsigned: true)
!2836 = !DIEnumerator(name: "GIMPLE_WITH_CLEANUP_EXPR", value: 34, isUnsigned: true)
!2837 = !DIEnumerator(name: "LAST_AND_UNUSED_GIMPLE_CODE", value: 35, isUnsigned: true)
!2838 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gimple_statement_structure_enum", file: !1248, line: 727, baseType: !7, size: 32, elements: !2839)
!2839 = !{!2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863}
!2840 = !DIEnumerator(name: "GSS_BASE", value: 0, isUnsigned: true)
!2841 = !DIEnumerator(name: "GSS_WITH_OPS", value: 1, isUnsigned: true)
!2842 = !DIEnumerator(name: "GSS_WITH_MEM_OPS_BASE", value: 2, isUnsigned: true)
!2843 = !DIEnumerator(name: "GSS_WITH_MEM_OPS", value: 3, isUnsigned: true)
!2844 = !DIEnumerator(name: "GSS_ASM", value: 4, isUnsigned: true)
!2845 = !DIEnumerator(name: "GSS_BIND", value: 5, isUnsigned: true)
!2846 = !DIEnumerator(name: "GSS_PHI", value: 6, isUnsigned: true)
!2847 = !DIEnumerator(name: "GSS_TRY", value: 7, isUnsigned: true)
!2848 = !DIEnumerator(name: "GSS_CATCH", value: 8, isUnsigned: true)
!2849 = !DIEnumerator(name: "GSS_EH_FILTER", value: 9, isUnsigned: true)
!2850 = !DIEnumerator(name: "GSS_EH_MNT", value: 10, isUnsigned: true)
!2851 = !DIEnumerator(name: "GSS_EH_CTRL", value: 11, isUnsigned: true)
!2852 = !DIEnumerator(name: "GSS_WCE", value: 12, isUnsigned: true)
!2853 = !DIEnumerator(name: "GSS_OMP", value: 13, isUnsigned: true)
!2854 = !DIEnumerator(name: "GSS_OMP_CRITICAL", value: 14, isUnsigned: true)
!2855 = !DIEnumerator(name: "GSS_OMP_FOR", value: 15, isUnsigned: true)
!2856 = !DIEnumerator(name: "GSS_OMP_PARALLEL", value: 16, isUnsigned: true)
!2857 = !DIEnumerator(name: "GSS_OMP_TASK", value: 17, isUnsigned: true)
!2858 = !DIEnumerator(name: "GSS_OMP_SECTIONS", value: 18, isUnsigned: true)
!2859 = !DIEnumerator(name: "GSS_OMP_SINGLE", value: 19, isUnsigned: true)
!2860 = !DIEnumerator(name: "GSS_OMP_CONTINUE", value: 20, isUnsigned: true)
!2861 = !DIEnumerator(name: "GSS_OMP_ATOMIC_LOAD", value: 21, isUnsigned: true)
!2862 = !DIEnumerator(name: "GSS_OMP_ATOMIC_STORE", value: 22, isUnsigned: true)
!2863 = !DIEnumerator(name: "LAST_GSS_ENUM", value: 23, isUnsigned: true)
!2864 = !{!2865, !2866, !1249, !2867, !2870, !2871, !134, !7, !2873, !4297, !3000, !2914, !3048, !4299, !384, !2927, !2868, !3231, !1255, !5, !2929, !3197, !4300}
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2872, size: 64)
!2872 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2869)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !135, line: 3371, size: 1792, elements: !2875)
!2875 = !{!2876, !2909, !2917, !2930, !2949, !2960, !2965, !2974, !2980, !2993, !3005, !3043, !3534, !3562, !3579, !3580, !3585, !3594, !3600, !3605, !3609, !3613, !3948, !3995, !4001, !4007, !4014, !4027, !4041, !4058, !4070, !4092, !4107, !4279}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2874, file: !135, line: 3372, baseType: !2877, size: 64)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !135, line: 360, size: 64, elements: !2878)
!2878 = !{!2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2877, file: !135, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !2877, file: !135, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !2877, file: !135, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !2877, file: !135, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !2877, file: !135, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !2877, file: !135, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !2877, file: !135, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !2877, file: !135, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !2877, file: !135, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !2877, file: !135, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !2877, file: !135, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !2877, file: !135, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !2877, file: !135, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !2877, file: !135, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !2877, file: !135, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !2877, file: !135, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !2877, file: !135, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !2877, file: !135, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2877, file: !135, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2877, file: !135, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2877, file: !135, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2877, file: !135, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2877, file: !135, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2877, file: !135, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2877, file: !135, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2877, file: !135, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !2877, file: !135, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !2877, file: !135, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !2877, file: !135, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !2877, file: !135, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2874, file: !135, line: 3373, baseType: !2910, size: 192)
!2910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !135, line: 402, size: 192, elements: !2911)
!2911 = !{!2912, !2913, !2916}
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2910, file: !135, line: 403, baseType: !2877, size: 64)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !2910, file: !135, line: 404, baseType: !2914, size: 64, offset: 64)
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !2915, line: 56, baseType: !2873)
!2915 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2910, file: !135, line: 405, baseType: !2914, size: 64, offset: 128)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2874, file: !135, line: 3374, baseType: !2918, size: 320)
!2918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !135, line: 1384, size: 320, elements: !2919)
!2919 = !{!2920, !2921}
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2918, file: !135, line: 1385, baseType: !2910, size: 192)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !2918, file: !135, line: 1386, baseType: !2922, size: 128, offset: 192)
!2922 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !2923, line: 58, baseType: !2924)
!2923 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2924 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2923, line: 54, size: 128, elements: !2925)
!2925 = !{!2926, !2928}
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !2924, file: !2923, line: 56, baseType: !2927, size: 64)
!2927 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !2924, file: !2923, line: 57, baseType: !2929, size: 64, offset: 64)
!2929 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !2874, file: !135, line: 3375, baseType: !2931, size: 256)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !135, line: 1397, size: 256, elements: !2932)
!2932 = !{!2933, !2934}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2931, file: !135, line: 1398, baseType: !2910, size: 192)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !2931, file: !135, line: 1399, baseType: !2935, size: 64, offset: 192)
!2935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2936, size: 64)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !2937, line: 52, size: 256, elements: !2938)
!2937 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2938 = !{!2939, !2940, !2941, !2942, !2943, !2944, !2945}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2936, file: !2937, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !2936, file: !2937, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !2936, file: !2937, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !2936, file: !2937, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2936, file: !2937, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !2936, file: !2937, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2936, file: !2937, line: 62, baseType: !2946, size: 192, offset: 64)
!2946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2927, size: 192, elements: !2947)
!2947 = !{!2948}
!2948 = !DISubrange(count: 3)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !2874, file: !135, line: 3376, baseType: !2950, size: 256)
!2950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !135, line: 1408, size: 256, elements: !2951)
!2951 = !{!2952, !2953}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2950, file: !135, line: 1409, baseType: !2910, size: 192)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !2950, file: !135, line: 1410, baseType: !2954, size: 64, offset: 192)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !2956, line: 27, size: 192, elements: !2957)
!2956 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2957 = !{!2958, !2959}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2955, file: !2956, line: 29, baseType: !2922, size: 128)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2955, file: !2956, line: 30, baseType: !5, size: 32, offset: 128)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !2874, file: !135, line: 3377, baseType: !2961, size: 256)
!2961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !135, line: 1437, size: 256, elements: !2962)
!2962 = !{!2963, !2964}
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2961, file: !135, line: 1438, baseType: !2910, size: 192)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !2961, file: !135, line: 1439, baseType: !2914, size: 64, offset: 192)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !2874, file: !135, line: 3378, baseType: !2966, size: 256)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !135, line: 1418, size: 256, elements: !2967)
!2967 = !{!2968, !2969, !2970}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2966, file: !135, line: 1419, baseType: !2910, size: 192)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2966, file: !135, line: 1420, baseType: !1249, size: 32, offset: 192)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2966, file: !135, line: 1421, baseType: !2971, size: 8, offset: 224)
!2971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2869, size: 8, elements: !2972)
!2972 = !{!2973}
!2973 = !DISubrange(count: 1)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !2874, file: !135, line: 3379, baseType: !2975, size: 320)
!2975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !135, line: 1428, size: 320, elements: !2976)
!2976 = !{!2977, !2978, !2979}
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2975, file: !135, line: 1429, baseType: !2910, size: 192)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !2975, file: !135, line: 1430, baseType: !2914, size: 64, offset: 192)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !2975, file: !135, line: 1431, baseType: !2914, size: 64, offset: 256)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !2874, file: !135, line: 3380, baseType: !2981, size: 320)
!2981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !135, line: 1460, size: 320, elements: !2982)
!2982 = !{!2983, !2984}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2981, file: !135, line: 1461, baseType: !2910, size: 192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2981, file: !135, line: 1462, baseType: !2985, size: 128, offset: 192)
!2985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !2986, line: 31, size: 128, elements: !2987)
!2986 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2987 = !{!2988, !2991, !2992}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !2985, file: !2986, line: 32, baseType: !2989, size: 64)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 64)
!2990 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2866)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2985, file: !2986, line: 33, baseType: !7, size: 32, offset: 64)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !2985, file: !2986, line: 34, baseType: !7, size: 32, offset: 96)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !2874, file: !135, line: 3381, baseType: !2994, size: 384)
!2994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !135, line: 2507, size: 384, elements: !2995)
!2995 = !{!2996, !2997, !3002, !3003, !3004}
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2994, file: !135, line: 2508, baseType: !2910, size: 192)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2994, file: !135, line: 2509, baseType: !2998, size: 32, offset: 192)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !2999, line: 58, baseType: !3000)
!2999 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3000 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !3001, line: 44, baseType: !7)
!3001 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2994, file: !135, line: 2510, baseType: !7, size: 32, offset: 224)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2994, file: !135, line: 2511, baseType: !2914, size: 64, offset: 256)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2994, file: !135, line: 2512, baseType: !2914, size: 64, offset: 320)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !2874, file: !135, line: 3382, baseType: !3006, size: 896)
!3006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !135, line: 2652, size: 896, elements: !3007)
!3007 = !{!3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3016, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3027, !3028, !3029, !3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3006, file: !135, line: 2653, baseType: !2994, size: 384)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3006, file: !135, line: 2654, baseType: !2914, size: 64, offset: 384)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3006, file: !135, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !3006, file: !135, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !3006, file: !135, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !3006, file: !135, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !3006, file: !135, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !3006, file: !135, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !3006, file: !135, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !3006, file: !135, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !3006, file: !135, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !3006, file: !135, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !3006, file: !135, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !3006, file: !135, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !3006, file: !135, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !3006, file: !135, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !3006, file: !135, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !3006, file: !135, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !3006, file: !135, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !3006, file: !135, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !3006, file: !135, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!3029 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !3006, file: !135, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !3006, file: !135, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !3006, file: !135, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !3006, file: !135, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !3006, file: !135, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !3006, file: !135, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3006, file: !135, line: 2703, baseType: !7, size: 32, offset: 512)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !3006, file: !135, line: 2705, baseType: !2914, size: 64, offset: 576)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !3006, file: !135, line: 2706, baseType: !2914, size: 64, offset: 640)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !3006, file: !135, line: 2707, baseType: !2914, size: 64, offset: 704)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !3006, file: !135, line: 2708, baseType: !2914, size: 64, offset: 768)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !3006, file: !135, line: 2711, baseType: !3041, size: 64, offset: 832)
!3041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3042, size: 64)
!3042 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !135, line: 2711, flags: DIFlagFwdDecl)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !2874, file: !135, line: 3383, baseType: !3044, size: 960)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !135, line: 2756, size: 960, elements: !3045)
!3045 = !{!3046, !3047}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3044, file: !135, line: 2757, baseType: !3006, size: 896)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !3044, file: !135, line: 2758, baseType: !3048, size: 64, offset: 896)
!3048 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !2915, line: 50, baseType: !3049)
!3049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3050, size: 64)
!3050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !385, line: 240, size: 384, elements: !3051)
!3051 = !{!3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062}
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3050, file: !385, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3050, file: !385, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !3050, file: !385, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !3050, file: !385, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !3050, file: !385, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !3050, file: !385, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !3050, file: !385, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !3050, file: !385, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !3050, file: !385, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !3050, file: !385, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !3050, file: !385, line: 321, baseType: !3063, size: 320, offset: 64)
!3063 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !385, line: 315, size: 320, elements: !3064)
!3064 = !{!3065, !3467, !3469, !3532, !3533}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !3063, file: !385, line: 316, baseType: !3066, size: 64)
!3066 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3067, size: 64, elements: !2972)
!3067 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !385, line: 183, baseType: !3068)
!3068 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !385, line: 166, size: 64, elements: !3069)
!3069 = !{!3070, !3071, !3072, !3073, !3074, !3082, !3083, !3095, !3098, !3158, !3159, !3444, !3457, !3464}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !3068, file: !385, line: 168, baseType: !1249, size: 32)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !3068, file: !385, line: 169, baseType: !7, size: 32)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !3068, file: !385, line: 170, baseType: !2871, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !3068, file: !385, line: 171, baseType: !3048, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !3068, file: !385, line: 172, baseType: !3075, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !2915, line: 53, baseType: !3076)
!3076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3077, size: 64)
!3077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !385, line: 359, size: 128, elements: !3078)
!3078 = !{!3079, !3080}
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !3077, file: !385, line: 360, baseType: !1249, size: 32)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !3077, file: !385, line: 361, baseType: !3081, size: 64, offset: 64)
!3081 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3048, size: 64, elements: !2972)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !3068, file: !385, line: 173, baseType: !5, size: 32)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !3068, file: !385, line: 174, baseType: !3084, size: 32)
!3084 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !385, line: 133, baseType: !3085)
!3085 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !385, line: 115, size: 32, elements: !3086)
!3086 = !{!3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094}
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !3085, file: !385, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !3085, file: !385, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !3085, file: !385, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !3085, file: !385, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !3085, file: !385, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !3085, file: !385, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !3085, file: !385, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !3085, file: !385, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !3068, file: !385, line: 175, baseType: !3096, size: 64)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !385, line: 175, flags: DIFlagFwdDecl)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !3068, file: !385, line: 176, baseType: !3099, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3100, size: 64)
!3100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !3101, line: 75, size: 256, elements: !3102)
!3101 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3102 = !{!3103, !3117, !3118, !3119}
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3100, file: !3101, line: 76, baseType: !3104, size: 64)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !3101, line: 68, baseType: !3106)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !3101, line: 63, size: 320, elements: !3107)
!3107 = !{!3108, !3110, !3111, !3112}
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3106, file: !3101, line: 64, baseType: !3109, size: 64)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3106, size: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3106, file: !3101, line: 65, baseType: !3109, size: 64, offset: 64)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !3106, file: !3101, line: 66, baseType: !7, size: 32, offset: 128)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !3106, file: !3101, line: 67, baseType: !3113, size: 128, offset: 192)
!3113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3114, size: 128, elements: !3115)
!3114 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !3101, line: 29, baseType: !2927)
!3115 = !{!3116}
!3116 = !DISubrange(count: 2)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !3100, file: !3101, line: 77, baseType: !3104, size: 64, offset: 64)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !3100, file: !3101, line: 78, baseType: !7, size: 32, offset: 128)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !3100, file: !3101, line: 79, baseType: !3120, size: 64, offset: 192)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !3101, line: 49, baseType: !3122)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !3101, line: 45, size: 832, elements: !3123)
!3123 = !{!3124, !3125, !3126}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !3122, file: !3101, line: 46, baseType: !3109, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !3122, file: !3101, line: 47, baseType: !3099, size: 64, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !3122, file: !3101, line: 48, baseType: !3127, size: 704, offset: 128)
!3127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !3128, line: 164, size: 704, elements: !3129)
!3128 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3129 = !{!3130, !3131, !3141, !3142, !3143, !3144, !3145, !3146, !3150, !3154, !3155, !3156, !3157}
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !3127, file: !3128, line: 166, baseType: !2929, size: 64)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !3127, file: !3128, line: 167, baseType: !3132, size: 64, offset: 64)
!3132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3133, size: 64)
!3133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !3128, line: 157, size: 192, elements: !3134)
!3134 = !{!3135, !3136, !3137}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !3133, file: !3128, line: 159, baseType: !2868, size: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3133, file: !3128, line: 160, baseType: !3132, size: 64, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !3133, file: !3128, line: 161, baseType: !3138, size: 32, offset: 128)
!3138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2869, size: 32, elements: !3139)
!3139 = !{!3140}
!3140 = !DISubrange(count: 4)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !3127, file: !3128, line: 168, baseType: !2868, size: 64, offset: 128)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !3127, file: !3128, line: 169, baseType: !2868, size: 64, offset: 192)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !3127, file: !3128, line: 170, baseType: !2868, size: 64, offset: 256)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3127, file: !3128, line: 171, baseType: !2929, size: 64, offset: 320)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !3127, file: !3128, line: 172, baseType: !1249, size: 32, offset: 384)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !3127, file: !3128, line: 176, baseType: !3147, size: 64, offset: 448)
!3147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3148, size: 64)
!3148 = !DISubroutineType(types: !3149)
!3149 = !{!3132, !2870, !2929}
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !3127, file: !3128, line: 177, baseType: !3151, size: 64, offset: 512)
!3151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3152 = !DISubroutineType(types: !3153)
!3153 = !{null, !2870, !3132}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !3127, file: !3128, line: 178, baseType: !2870, size: 64, offset: 576)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !3127, file: !3128, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !3127, file: !3128, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !3127, file: !3128, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !3068, file: !385, line: 177, baseType: !2914, size: 64)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !3068, file: !385, line: 178, baseType: !3160, size: 64)
!3160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3161, size: 64)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !337, line: 217, size: 832, elements: !3162)
!3162 = !{!3163, !3409, !3410, !3411, !3414, !3418, !3419, !3420, !3438, !3439, !3440, !3441, !3442, !3443}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !3161, file: !337, line: 219, baseType: !3164, size: 64)
!3164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3165, size: 64)
!3165 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !337, line: 151, baseType: !3166)
!3166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !337, line: 151, size: 128, elements: !3167)
!3167 = !{!3168}
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3166, file: !337, line: 151, baseType: !3169, size: 128)
!3169 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !337, line: 150, baseType: !3170)
!3170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !337, line: 150, size: 128, elements: !3171)
!3171 = !{!3172, !3173, !3174}
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3170, file: !337, line: 150, baseType: !7, size: 32)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3170, file: !337, line: 150, baseType: !7, size: 32, offset: 32)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3170, file: !337, line: 150, baseType: !3175, size: 64, offset: 64)
!3175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3176, size: 64, elements: !2972)
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !2915, line: 108, baseType: !3177)
!3177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3178, size: 64)
!3178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !337, line: 122, size: 512, elements: !3179)
!3179 = !{!3180, !3181, !3182, !3401, !3402, !3403, !3404, !3405, !3406, !3407}
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !3178, file: !337, line: 124, baseType: !3160, size: 64)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !3178, file: !337, line: 125, baseType: !3160, size: 64, offset: 64)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3178, file: !337, line: 131, baseType: !3183, size: 64, offset: 128)
!3183 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !337, line: 128, size: 64, elements: !3184)
!3184 = !{!3185, !3400}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3183, file: !337, line: 129, baseType: !3186, size: 64)
!3186 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !2915, line: 66, baseType: !3187)
!3187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3188, size: 64)
!3188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !1248, line: 143, size: 192, elements: !3189)
!3189 = !{!3190, !3398, !3399}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !3188, file: !1248, line: 145, baseType: !3191, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !2915, line: 69, baseType: !3192)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !1248, line: 136, size: 192, elements: !3194)
!3194 = !{!3195, !3396, !3397}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3193, file: !1248, line: 137, baseType: !3196, size: 64)
!3196 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !2915, line: 58, baseType: !3197)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !1248, line: 737, size: 768, elements: !3199)
!3199 = !{!3200, !3217, !3251, !3257, !3262, !3267, !3274, !3280, !3286, !3291, !3305, !3310, !3316, !3321, !3331, !3336, !3354, !3361, !3368, !3374, !3379, !3385, !3391}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3198, file: !1248, line: 738, baseType: !3201, size: 256)
!3201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !1248, line: 271, size: 256, elements: !3202)
!3202 = !{!3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216}
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3201, file: !1248, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !3201, file: !1248, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !3201, file: !1248, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !3201, file: !1248, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !3201, file: !1248, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !3201, file: !1248, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !3201, file: !1248, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3201, file: !1248, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !3201, file: !1248, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3201, file: !1248, line: 312, baseType: !7, size: 32, offset: 32)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !3201, file: !1248, line: 316, baseType: !2998, size: 32, offset: 64)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !3201, file: !1248, line: 319, baseType: !7, size: 32, offset: 96)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3201, file: !1248, line: 323, baseType: !3160, size: 64, offset: 128)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3201, file: !1248, line: 327, baseType: !2914, size: 64, offset: 192)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !3198, file: !1248, line: 739, baseType: !3218, size: 448)
!3218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !1248, line: 350, size: 448, elements: !3219)
!3219 = !{!3220, !3249}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !3218, file: !1248, line: 353, baseType: !3221, size: 384)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !1248, line: 333, size: 384, elements: !3222)
!3222 = !{!3223, !3224, !3232}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3221, file: !1248, line: 336, baseType: !3201, size: 256)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !3221, file: !1248, line: 343, baseType: !3225, size: 64, offset: 256)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !3227, line: 37, size: 128, elements: !3228)
!3227 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3228 = !{!3229, !3230}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3226, file: !3227, line: 39, baseType: !3225, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !3226, file: !3227, line: 40, baseType: !3231, size: 64, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2914, size: 64)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !3221, file: !1248, line: 344, baseType: !3233, size: 64, offset: 320)
!3233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3234, size: 64)
!3234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !3227, line: 45, size: 320, elements: !3235)
!3235 = !{!3236, !3237}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3234, file: !3227, line: 47, baseType: !3233, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !3234, file: !3227, line: 48, baseType: !3238, size: 256, offset: 64)
!3238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !135, line: 1883, size: 256, elements: !3239)
!3239 = !{!3240, !3242, !3243, !3248}
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3238, file: !135, line: 1884, baseType: !3241, size: 64)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3238, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3238, file: !135, line: 1885, baseType: !3241, size: 64, offset: 64)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3238, file: !135, line: 1891, baseType: !3244, size: 64, offset: 128)
!3244 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3238, file: !135, line: 1891, size: 64, elements: !3245)
!3245 = !{!3246, !3247}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !3244, file: !135, line: 1891, baseType: !3196, size: 64)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !3244, file: !135, line: 1891, baseType: !2914, size: 64)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !3238, file: !135, line: 1892, baseType: !3231, size: 64, offset: 192)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !3218, file: !1248, line: 359, baseType: !3250, size: 64, offset: 384)
!3250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2914, size: 64, elements: !2972)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !3198, file: !1248, line: 740, baseType: !3252, size: 512)
!3252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !1248, line: 365, size: 512, elements: !3253)
!3253 = !{!3254, !3255, !3256}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !3252, file: !1248, line: 368, baseType: !3221, size: 384)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !3252, file: !1248, line: 373, baseType: !2914, size: 64, offset: 384)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !3252, file: !1248, line: 374, baseType: !2914, size: 64, offset: 448)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !3198, file: !1248, line: 741, baseType: !3258, size: 576)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !1248, line: 380, size: 576, elements: !3259)
!3259 = !{!3260, !3261}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !3258, file: !1248, line: 383, baseType: !3252, size: 512)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !3258, file: !1248, line: 389, baseType: !3250, size: 64, offset: 512)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3198, file: !1248, line: 742, baseType: !3263, size: 320)
!3263 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !1248, line: 395, size: 320, elements: !3264)
!3264 = !{!3265, !3266}
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3263, file: !1248, line: 397, baseType: !3201, size: 256)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !3263, file: !1248, line: 400, baseType: !3186, size: 64, offset: 256)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !3198, file: !1248, line: 743, baseType: !3268, size: 448)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !1248, line: 406, size: 448, elements: !3269)
!3269 = !{!3270, !3271, !3272, !3273}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3268, file: !1248, line: 408, baseType: !3201, size: 256)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !3268, file: !1248, line: 412, baseType: !2914, size: 64, offset: 256)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3268, file: !1248, line: 420, baseType: !2914, size: 64, offset: 320)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !3268, file: !1248, line: 423, baseType: !3186, size: 64, offset: 384)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !3198, file: !1248, line: 744, baseType: !3275, size: 384)
!3275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !1248, line: 429, size: 384, elements: !3276)
!3276 = !{!3277, !3278, !3279}
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3275, file: !1248, line: 431, baseType: !3201, size: 256)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !3275, file: !1248, line: 434, baseType: !2914, size: 64, offset: 256)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3275, file: !1248, line: 437, baseType: !3186, size: 64, offset: 320)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !3198, file: !1248, line: 745, baseType: !3281, size: 384)
!3281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !1248, line: 443, size: 384, elements: !3282)
!3282 = !{!3283, !3284, !3285}
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3281, file: !1248, line: 445, baseType: !3201, size: 256)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !3281, file: !1248, line: 449, baseType: !2914, size: 64, offset: 256)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !3281, file: !1248, line: 453, baseType: !3186, size: 64, offset: 320)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !3198, file: !1248, line: 746, baseType: !3287, size: 320)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !1248, line: 459, size: 320, elements: !3288)
!3288 = !{!3289, !3290}
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3287, file: !1248, line: 461, baseType: !3201, size: 256)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !3287, file: !1248, line: 464, baseType: !2914, size: 64, offset: 256)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !3198, file: !1248, line: 747, baseType: !3292, size: 768)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !1248, line: 469, size: 768, elements: !3293)
!3293 = !{!3294, !3295, !3296, !3297, !3298}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3292, file: !1248, line: 471, baseType: !3201, size: 256)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !3292, file: !1248, line: 474, baseType: !7, size: 32, offset: 256)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3292, file: !1248, line: 475, baseType: !7, size: 32, offset: 288)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3292, file: !1248, line: 478, baseType: !2914, size: 64, offset: 320)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3292, file: !1248, line: 481, baseType: !3299, size: 384, offset: 384)
!3299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3300, size: 384, elements: !2972)
!3300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !135, line: 1917, size: 384, elements: !3301)
!3301 = !{!3302, !3303, !3304}
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !3300, file: !135, line: 1920, baseType: !3238, size: 256)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !3300, file: !135, line: 1921, baseType: !2914, size: 64, offset: 256)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !3300, file: !135, line: 1922, baseType: !2998, size: 32, offset: 320)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !3198, file: !1248, line: 748, baseType: !3306, size: 320)
!3306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !1248, line: 487, size: 320, elements: !3307)
!3307 = !{!3308, !3309}
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3306, file: !1248, line: 490, baseType: !3201, size: 256)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !3306, file: !1248, line: 494, baseType: !1249, size: 32, offset: 256)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !3198, file: !1248, line: 749, baseType: !3311, size: 384)
!3311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !1248, line: 500, size: 384, elements: !3312)
!3312 = !{!3313, !3314, !3315}
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3311, file: !1248, line: 502, baseType: !3201, size: 256)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !3311, file: !1248, line: 506, baseType: !3186, size: 64, offset: 256)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3311, file: !1248, line: 510, baseType: !3186, size: 64, offset: 320)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !3198, file: !1248, line: 750, baseType: !3317, size: 320)
!3317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !1248, line: 529, size: 320, elements: !3318)
!3318 = !{!3319, !3320}
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3317, file: !1248, line: 531, baseType: !3201, size: 256)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !3317, file: !1248, line: 540, baseType: !3186, size: 64, offset: 256)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !3198, file: !1248, line: 751, baseType: !3322, size: 704)
!3322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !1248, line: 546, size: 704, elements: !3323)
!3323 = !{!3324, !3325, !3326, !3327, !3328, !3329, !3330}
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !3322, file: !1248, line: 549, baseType: !3252, size: 512)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !3322, file: !1248, line: 553, baseType: !2871, size: 64, offset: 512)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !3322, file: !1248, line: 557, baseType: !2866, size: 8, offset: 576)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3322, file: !1248, line: 558, baseType: !2866, size: 8, offset: 584)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !3322, file: !1248, line: 559, baseType: !2866, size: 8, offset: 592)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !3322, file: !1248, line: 560, baseType: !2866, size: 8, offset: 600)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !3322, file: !1248, line: 566, baseType: !3250, size: 64, offset: 640)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !3198, file: !1248, line: 752, baseType: !3332, size: 384)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !1248, line: 571, size: 384, elements: !3333)
!3333 = !{!3334, !3335}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3332, file: !1248, line: 573, baseType: !3263, size: 320)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3332, file: !1248, line: 577, baseType: !2914, size: 64, offset: 320)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !3198, file: !1248, line: 753, baseType: !3337, size: 576)
!3337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !1248, line: 600, size: 576, elements: !3338)
!3338 = !{!3339, !3340, !3341, !3344, !3353}
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3337, file: !1248, line: 602, baseType: !3263, size: 320)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !3337, file: !1248, line: 605, baseType: !2914, size: 64, offset: 320)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !3337, file: !1248, line: 609, baseType: !3342, size: 64, offset: 384)
!3342 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !3343, line: 46, baseType: !2927)
!3343 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !3337, file: !1248, line: 612, baseType: !3345, size: 64, offset: 448)
!3345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3346, size: 64)
!3346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !1248, line: 581, size: 320, elements: !3347)
!3347 = !{!3348, !3349, !3350, !3351, !3352}
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !3346, file: !1248, line: 583, baseType: !134, size: 32)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3346, file: !1248, line: 586, baseType: !2914, size: 64, offset: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !3346, file: !1248, line: 589, baseType: !2914, size: 64, offset: 128)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !3346, file: !1248, line: 592, baseType: !2914, size: 64, offset: 192)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3346, file: !1248, line: 595, baseType: !2914, size: 64, offset: 256)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !3337, file: !1248, line: 616, baseType: !3186, size: 64, offset: 512)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !3198, file: !1248, line: 754, baseType: !3355, size: 512)
!3355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !1248, line: 622, size: 512, elements: !3356)
!3356 = !{!3357, !3358, !3359, !3360}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3355, file: !1248, line: 624, baseType: !3263, size: 320)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !3355, file: !1248, line: 628, baseType: !2914, size: 64, offset: 320)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !3355, file: !1248, line: 632, baseType: !2914, size: 64, offset: 384)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !3355, file: !1248, line: 636, baseType: !2914, size: 64, offset: 448)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !3198, file: !1248, line: 755, baseType: !3362, size: 704)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !1248, line: 642, size: 704, elements: !3363)
!3363 = !{!3364, !3365, !3366, !3367}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3362, file: !1248, line: 644, baseType: !3355, size: 512)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !3362, file: !1248, line: 648, baseType: !2914, size: 64, offset: 512)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3362, file: !1248, line: 652, baseType: !2914, size: 64, offset: 576)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !3362, file: !1248, line: 653, baseType: !2914, size: 64, offset: 640)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !3198, file: !1248, line: 756, baseType: !3369, size: 448)
!3369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !1248, line: 663, size: 448, elements: !3370)
!3370 = !{!3371, !3372, !3373}
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3369, file: !1248, line: 665, baseType: !3263, size: 320)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !3369, file: !1248, line: 668, baseType: !2914, size: 64, offset: 320)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !3369, file: !1248, line: 673, baseType: !2914, size: 64, offset: 384)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !3198, file: !1248, line: 757, baseType: !3375, size: 384)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !1248, line: 694, size: 384, elements: !3376)
!3376 = !{!3377, !3378}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !3375, file: !1248, line: 696, baseType: !3263, size: 320)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !3375, file: !1248, line: 699, baseType: !2914, size: 64, offset: 320)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !3198, file: !1248, line: 758, baseType: !3380, size: 384)
!3380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !1248, line: 681, size: 384, elements: !3381)
!3381 = !{!3382, !3383, !3384}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3380, file: !1248, line: 683, baseType: !3201, size: 256)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !3380, file: !1248, line: 686, baseType: !2914, size: 64, offset: 256)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !3380, file: !1248, line: 689, baseType: !2914, size: 64, offset: 320)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !3198, file: !1248, line: 759, baseType: !3386, size: 384)
!3386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !1248, line: 707, size: 384, elements: !3387)
!3387 = !{!3388, !3389, !3390}
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3386, file: !1248, line: 709, baseType: !3201, size: 256)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !3386, file: !1248, line: 712, baseType: !2914, size: 64, offset: 256)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !3386, file: !1248, line: 712, baseType: !2914, size: 64, offset: 320)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !3198, file: !1248, line: 760, baseType: !3392, size: 320)
!3392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !1248, line: 718, size: 320, elements: !3393)
!3393 = !{!3394, !3395}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3392, file: !1248, line: 720, baseType: !3201, size: 256)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !3392, file: !1248, line: 723, baseType: !2914, size: 64, offset: 256)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3193, file: !1248, line: 138, baseType: !3192, size: 64, offset: 64)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3193, file: !1248, line: 139, baseType: !3192, size: 64, offset: 128)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !3188, file: !1248, line: 146, baseType: !3191, size: 64, offset: 64)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !3188, file: !1248, line: 152, baseType: !3186, size: 64, offset: 128)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3183, file: !337, line: 130, baseType: !3048, size: 64)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3178, file: !337, line: 134, baseType: !2870, size: 64, offset: 192)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !3178, file: !337, line: 137, baseType: !2914, size: 64, offset: 256)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !3178, file: !337, line: 138, baseType: !2998, size: 32, offset: 320)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !3178, file: !337, line: 142, baseType: !7, size: 32, offset: 352)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3178, file: !337, line: 144, baseType: !1249, size: 32, offset: 384)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !3178, file: !337, line: 145, baseType: !1249, size: 32, offset: 416)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3178, file: !337, line: 146, baseType: !3408, size: 64, offset: 448)
!3408 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !337, line: 119, baseType: !2929)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !3161, file: !337, line: 220, baseType: !3164, size: 64, offset: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3161, file: !337, line: 223, baseType: !2870, size: 64, offset: 128)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !3161, file: !337, line: 226, baseType: !3412, size: 64, offset: 192)
!3412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3413, size: 64)
!3413 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !337, line: 185, flags: DIFlagFwdDecl)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !3161, file: !337, line: 229, baseType: !3415, size: 128, offset: 256)
!3415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3416, size: 128, elements: !3115)
!3416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3417, size: 64)
!3417 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !337, line: 229, flags: DIFlagFwdDecl)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !3161, file: !337, line: 232, baseType: !3160, size: 64, offset: 384)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !3161, file: !337, line: 233, baseType: !3160, size: 64, offset: 448)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !3161, file: !337, line: 238, baseType: !3421, size: 64, offset: 512)
!3421 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !337, line: 235, size: 64, elements: !3422)
!3422 = !{!3423, !3429}
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !3421, file: !337, line: 236, baseType: !3424, size: 64)
!3424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3425, size: 64)
!3425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !337, line: 273, size: 128, elements: !3426)
!3426 = !{!3427, !3428}
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3425, file: !337, line: 275, baseType: !3186, size: 64)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !3425, file: !337, line: 278, baseType: !3186, size: 64, offset: 64)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !3421, file: !337, line: 237, baseType: !3430, size: 64)
!3430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3431, size: 64)
!3431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !337, line: 259, size: 320, elements: !3432)
!3432 = !{!3433, !3434, !3435, !3436, !3437}
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !3431, file: !337, line: 261, baseType: !3048, size: 64)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !3431, file: !337, line: 262, baseType: !3048, size: 64, offset: 64)
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3431, file: !337, line: 266, baseType: !3048, size: 64, offset: 128)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !3431, file: !337, line: 267, baseType: !3048, size: 64, offset: 192)
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !3431, file: !337, line: 270, baseType: !1249, size: 32, offset: 256)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3161, file: !337, line: 241, baseType: !3408, size: 64, offset: 576)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3161, file: !337, line: 244, baseType: !1249, size: 32, offset: 640)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !3161, file: !337, line: 247, baseType: !1249, size: 32, offset: 672)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !3161, file: !337, line: 250, baseType: !1249, size: 32, offset: 704)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !3161, file: !337, line: 253, baseType: !1249, size: 32, offset: 736)
!3443 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3161, file: !337, line: 256, baseType: !1249, size: 32, offset: 768)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !3068, file: !385, line: 179, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !385, line: 150, baseType: !3447)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !385, line: 142, size: 320, elements: !3448)
!3448 = !{!3449, !3450, !3451, !3452, !3455, !3456}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !3447, file: !385, line: 144, baseType: !2914, size: 64)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3447, file: !385, line: 145, baseType: !3048, size: 64, offset: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3447, file: !385, line: 146, baseType: !3048, size: 64, offset: 128)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !3447, file: !385, line: 147, baseType: !3453, size: 32, offset: 192)
!3453 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !3454, line: 31, baseType: !1249)
!3454 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3447, file: !385, line: 148, baseType: !7, size: 32, offset: 224)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !3447, file: !385, line: 149, baseType: !2866, size: 8, offset: 256)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !3068, file: !385, line: 180, baseType: !3458, size: 64)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3459, size: 64)
!3459 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !385, line: 162, baseType: !3460)
!3460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !385, line: 159, size: 128, elements: !3461)
!3461 = !{!3462, !3463}
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3460, file: !385, line: 160, baseType: !2914, size: 64)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3460, file: !385, line: 161, baseType: !2929, size: 64, offset: 64)
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !3068, file: !385, line: 181, baseType: !3465, size: 64)
!3465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3466, size: 64)
!3466 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !385, line: 181, flags: DIFlagFwdDecl)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !3063, file: !385, line: 317, baseType: !3468, size: 64)
!3468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2929, size: 64, elements: !2972)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !3063, file: !385, line: 318, baseType: !3470, size: 320)
!3470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !385, line: 188, size: 320, elements: !3471)
!3471 = !{!3472, !3474, !3531}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !3470, file: !385, line: 190, baseType: !3473, size: 192)
!3473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3067, size: 192, elements: !2947)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !3470, file: !385, line: 193, baseType: !3475, size: 64, offset: 192)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !385, line: 206, size: 320, elements: !3477)
!3477 = !{!3478, !3516, !3517, !3518, !3530}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !3476, file: !385, line: 208, baseType: !3479, size: 64)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !2915, line: 62, baseType: !3481)
!3481 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !3482, line: 538, size: 256, elements: !3483)
!3482 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3483 = !{!3484, !3488, !3494, !3507}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3481, file: !3482, line: 539, baseType: !3485, size: 32)
!3485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !3482, line: 482, size: 32, elements: !3486)
!3486 = !{!3487}
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3485, file: !3482, line: 484, baseType: !7, size: 32)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !3481, file: !3482, line: 540, baseType: !3489, size: 192)
!3489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !3482, line: 488, size: 192, elements: !3490)
!3490 = !{!3491, !3492, !3493}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3489, file: !3482, line: 489, baseType: !3485, size: 32)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3489, file: !3482, line: 492, baseType: !2871, size: 64, offset: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3489, file: !3482, line: 496, baseType: !2914, size: 64, offset: 128)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !3481, file: !3482, line: 541, baseType: !3495, size: 256)
!3495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !3482, line: 504, size: 256, elements: !3496)
!3496 = !{!3497, !3498, !3505, !3506}
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3495, file: !3482, line: 505, baseType: !3485, size: 32)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3495, file: !3482, line: 509, baseType: !3499, size: 64, offset: 64)
!3499 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !3482, line: 501, baseType: !3500)
!3500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3501, size: 64)
!3501 = !DISubroutineType(types: !3502)
!3502 = !{null, !3503}
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3495, file: !3482, line: 510, baseType: !3503, size: 64, offset: 128)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3495, file: !3482, line: 513, baseType: !3479, size: 64, offset: 192)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !3481, file: !3482, line: 542, baseType: !3508, size: 128)
!3508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !3482, line: 530, size: 128, elements: !3509)
!3509 = !{!3510, !3511}
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3508, file: !3482, line: 531, baseType: !3485, size: 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !3508, file: !3482, line: 534, baseType: !3512, size: 64, offset: 64)
!3512 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !3482, line: 525, baseType: !3513)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!2866, !2914, !2871, !2927, !2927}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3476, file: !385, line: 211, baseType: !7, size: 32, offset: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3476, file: !385, line: 214, baseType: !2929, size: 64, offset: 128)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !3476, file: !385, line: 224, baseType: !3519, size: 64, offset: 192)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !385, line: 202, baseType: !3521)
!3521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !385, line: 202, size: 128, elements: !3522)
!3522 = !{!3523}
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3521, file: !385, line: 202, baseType: !3524, size: 128)
!3524 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !385, line: 200, baseType: !3525)
!3525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !385, line: 200, size: 128, elements: !3526)
!3526 = !{!3527, !3528, !3529}
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3525, file: !385, line: 200, baseType: !7, size: 32)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3525, file: !385, line: 200, baseType: !7, size: 32, offset: 32)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3525, file: !385, line: 200, baseType: !3081, size: 64, offset: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !3476, file: !385, line: 234, baseType: !3519, size: 64, offset: 256)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3470, file: !385, line: 197, baseType: !2929, size: 64, offset: 256)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !3063, file: !385, line: 319, baseType: !2936, size: 256)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !3063, file: !385, line: 320, baseType: !2955, size: 192)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !2874, file: !135, line: 3384, baseType: !3535, size: 1472)
!3535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !135, line: 3114, size: 1472, elements: !3536)
!3536 = !{!3537, !3558, !3559, !3560, !3561}
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3535, file: !135, line: 3115, baseType: !3538, size: 1216)
!3538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !135, line: 2984, size: 1216, elements: !3539)
!3539 = !{!3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3538, file: !135, line: 2985, baseType: !3044, size: 960)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !3538, file: !135, line: 2986, baseType: !2914, size: 64, offset: 960)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !3538, file: !135, line: 2987, baseType: !2914, size: 64, offset: 1024)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !3538, file: !135, line: 2988, baseType: !2914, size: 64, offset: 1088)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !3538, file: !135, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !3538, file: !135, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !3538, file: !135, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !3538, file: !135, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !3538, file: !135, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !3538, file: !135, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !3538, file: !135, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !3538, file: !135, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !3538, file: !135, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !3538, file: !135, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !3538, file: !135, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !3538, file: !135, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !3538, file: !135, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !3538, file: !135, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !3535, file: !135, line: 3117, baseType: !2914, size: 64, offset: 1216)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !3535, file: !135, line: 3119, baseType: !2914, size: 64, offset: 1280)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !3535, file: !135, line: 3121, baseType: !2914, size: 64, offset: 1344)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !3535, file: !135, line: 3123, baseType: !2914, size: 64, offset: 1408)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !2874, file: !135, line: 3385, baseType: !3563, size: 1088)
!3563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !135, line: 2874, size: 1088, elements: !3564)
!3564 = !{!3565, !3566, !3567}
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3563, file: !135, line: 2875, baseType: !3044, size: 960)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !3563, file: !135, line: 2876, baseType: !3048, size: 64, offset: 960)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !3563, file: !135, line: 2877, baseType: !3568, size: 64, offset: 1024)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !3570, line: 172, size: 128, elements: !3571)
!3570 = !DIFile(filename: "./tree-flow.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3571 = !{!3572, !3573, !3574, !3575, !3576, !3577, !3578}
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !3569, file: !3570, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !3569, file: !3570, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !3569, file: !3570, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !3569, file: !3570, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !3569, file: !3570, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !3569, file: !3570, line: 195, baseType: !7, size: 32, offset: 32)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !3569, file: !3570, line: 199, baseType: !2914, size: 64, offset: 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !2874, file: !135, line: 3386, baseType: !3538, size: 1216)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !2874, file: !135, line: 3387, baseType: !3581, size: 1280)
!3581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !135, line: 3093, size: 1280, elements: !3582)
!3582 = !{!3583, !3584}
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3581, file: !135, line: 3094, baseType: !3538, size: 1216)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !3581, file: !135, line: 3095, baseType: !3568, size: 64, offset: 1216)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !2874, file: !135, line: 3388, baseType: !3586, size: 1216)
!3586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !135, line: 2824, size: 1216, elements: !3587)
!3587 = !{!3588, !3589, !3590, !3591, !3592, !3593}
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3586, file: !135, line: 2825, baseType: !3006, size: 896)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3586, file: !135, line: 2827, baseType: !2914, size: 64, offset: 896)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !3586, file: !135, line: 2828, baseType: !2914, size: 64, offset: 960)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !3586, file: !135, line: 2829, baseType: !2914, size: 64, offset: 1024)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !3586, file: !135, line: 2830, baseType: !2914, size: 64, offset: 1088)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !3586, file: !135, line: 2831, baseType: !2914, size: 64, offset: 1152)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !2874, file: !135, line: 3389, baseType: !3595, size: 1024)
!3595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !135, line: 2850, size: 1024, elements: !3596)
!3596 = !{!3597, !3598, !3599}
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3595, file: !135, line: 2851, baseType: !3044, size: 960)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !3595, file: !135, line: 2852, baseType: !1249, size: 32, offset: 960)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !3595, file: !135, line: 2853, baseType: !1249, size: 32, offset: 992)
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !2874, file: !135, line: 3390, baseType: !3601, size: 1024)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !135, line: 2857, size: 1024, elements: !3602)
!3602 = !{!3603, !3604}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3601, file: !135, line: 2858, baseType: !3044, size: 960)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !3601, file: !135, line: 2859, baseType: !3568, size: 64, offset: 960)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !2874, file: !135, line: 3391, baseType: !3606, size: 960)
!3606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !135, line: 2862, size: 960, elements: !3607)
!3607 = !{!3608}
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3606, file: !135, line: 2863, baseType: !3044, size: 960)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !2874, file: !135, line: 3392, baseType: !3610, size: 1472)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !135, line: 3304, size: 1472, elements: !3611)
!3611 = !{!3612}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3610, file: !135, line: 3305, baseType: !3535, size: 1472)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !2874, file: !135, line: 3393, baseType: !3614, size: 1792)
!3614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !135, line: 3248, size: 1792, elements: !3615)
!3615 = !{!3616, !3617, !3927, !3928, !3929, !3930, !3931, !3932, !3933, !3934, !3935, !3936, !3937, !3938, !3939, !3940, !3941, !3942, !3943, !3944, !3945, !3946, !3947}
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3614, file: !135, line: 3249, baseType: !3535, size: 1472)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !3614, file: !135, line: 3251, baseType: !3618, size: 64, offset: 1472)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !3620, line: 463, size: 1152, elements: !3621)
!3620 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3621 = !{!3622, !3781, !3812, !3813, !3868, !3871, !3872, !3873, !3874, !3875, !3876, !3900, !3903, !3904, !3905, !3906, !3907, !3908, !3909, !3910, !3911, !3912, !3913, !3914, !3915, !3916, !3917, !3918, !3919, !3920, !3921, !3922, !3923, !3924, !3925, !3926}
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !3619, file: !3620, line: 464, baseType: !3623, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !330, line: 194, size: 384, elements: !3625)
!3625 = !{!3626, !3675, !3688, !3702, !3750, !3762}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !3624, file: !330, line: 197, baseType: !3627, size: 64)
!3627 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !330, line: 182, baseType: !3628)
!3628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3629, size: 64)
!3629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !330, line: 116, size: 704, elements: !3630)
!3630 = !{!3631, !3632, !3633, !3634, !3635, !3636, !3663, !3672, !3673, !3674}
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !3629, file: !330, line: 119, baseType: !3628, size: 64)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !3629, file: !330, line: 122, baseType: !3628, size: 64, offset: 64)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !3629, file: !330, line: 123, baseType: !3628, size: 64, offset: 128)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3629, file: !330, line: 126, baseType: !1249, size: 32, offset: 192)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3629, file: !330, line: 129, baseType: !329, size: 32, offset: 224)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !3629, file: !330, line: 165, baseType: !3637, size: 192, offset: 256)
!3637 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !330, line: 132, size: 192, elements: !3638)
!3638 = !{!3639, !3652, !3658}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !3637, file: !330, line: 137, baseType: !3640, size: 128)
!3640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !330, line: 133, size: 128, elements: !3641)
!3641 = !{!3642, !3651}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !3640, file: !330, line: 135, baseType: !3643, size: 64)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !330, line: 93, size: 320, elements: !3645)
!3645 = !{!3646, !3647, !3648, !3649, !3650}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !3644, file: !330, line: 96, baseType: !3643, size: 64)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !3644, file: !330, line: 97, baseType: !3643, size: 64, offset: 64)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !3644, file: !330, line: 101, baseType: !2914, size: 64, offset: 128)
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !3644, file: !330, line: 106, baseType: !2914, size: 64, offset: 192)
!3650 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !3644, file: !330, line: 111, baseType: !2914, size: 64, offset: 256)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !3640, file: !330, line: 136, baseType: !3643, size: 64, offset: 64)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !3637, file: !330, line: 151, baseType: !3653, size: 192)
!3653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !330, line: 139, size: 192, elements: !3654)
!3654 = !{!3655, !3656, !3657}
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !3653, file: !330, line: 141, baseType: !2914, size: 64)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !3653, file: !330, line: 145, baseType: !2914, size: 64, offset: 64)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3653, file: !330, line: 150, baseType: !1249, size: 32, offset: 128)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !3637, file: !330, line: 164, baseType: !3659, size: 128)
!3659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !330, line: 153, size: 128, elements: !3660)
!3660 = !{!3661, !3662}
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !3659, file: !330, line: 161, baseType: !2914, size: 64)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !3659, file: !330, line: 163, baseType: !2998, size: 32, offset: 64)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !3629, file: !330, line: 168, baseType: !3664, size: 64, offset: 448)
!3664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3665, size: 64)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !330, line: 67, size: 320, elements: !3666)
!3666 = !{!3667, !3668, !3669, !3670, !3671}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !3665, file: !330, line: 70, baseType: !3664, size: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !3665, file: !330, line: 73, baseType: !3628, size: 64, offset: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !3665, file: !330, line: 78, baseType: !2914, size: 64, offset: 128)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !3665, file: !330, line: 85, baseType: !3048, size: 64, offset: 192)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3665, file: !330, line: 88, baseType: !1249, size: 32, offset: 256)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !3629, file: !330, line: 173, baseType: !3048, size: 64, offset: 512)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !3629, file: !330, line: 173, baseType: !3048, size: 64, offset: 576)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !3629, file: !330, line: 177, baseType: !2866, size: 8, offset: 640)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !3624, file: !330, line: 200, baseType: !3676, size: 64, offset: 64)
!3676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3677, size: 64)
!3677 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !330, line: 185, baseType: !3678)
!3678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !330, line: 185, size: 128, elements: !3679)
!3679 = !{!3680}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3678, file: !330, line: 185, baseType: !3681, size: 128)
!3681 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !330, line: 184, baseType: !3682)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !330, line: 184, size: 128, elements: !3683)
!3683 = !{!3684, !3685, !3686}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3682, file: !330, line: 184, baseType: !7, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3682, file: !330, line: 184, baseType: !7, size: 32, offset: 32)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3682, file: !330, line: 184, baseType: !3687, size: 64, offset: 64)
!3687 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3627, size: 64, elements: !2972)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !3624, file: !330, line: 203, baseType: !3689, size: 64, offset: 128)
!3689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3690, size: 64)
!3690 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, baseType: !3691)
!3691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !330, line: 189, size: 128, elements: !3692)
!3692 = !{!3693}
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3691, file: !330, line: 189, baseType: !3694, size: 128)
!3694 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !330, line: 188, baseType: !3695)
!3695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !330, line: 188, size: 128, elements: !3696)
!3696 = !{!3697, !3698, !3699}
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3695, file: !330, line: 188, baseType: !7, size: 32)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3695, file: !330, line: 188, baseType: !7, size: 32, offset: 32)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3695, file: !330, line: 188, baseType: !3700, size: 64, offset: 64)
!3700 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3701, size: 64, elements: !2972)
!3701 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !330, line: 180, baseType: !3664)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !3624, file: !330, line: 207, baseType: !3703, size: 64, offset: 192)
!3703 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !3704, line: 144, baseType: !3705)
!3704 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3706, size: 64)
!3706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !3704, line: 100, size: 896, elements: !3707)
!3707 = !{!3708, !3714, !3719, !3724, !3726, !3727, !3728, !3729, !3730, !3731, !3736, !3738, !3739, !3744, !3749}
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !3706, file: !3704, line: 102, baseType: !3709, size: 64)
!3709 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !3704, line: 52, baseType: !3710)
!3710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3711, size: 64)
!3711 = !DISubroutineType(types: !3712)
!3712 = !{!3713, !3503}
!3713 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !3704, line: 47, baseType: !7)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !3706, file: !3704, line: 105, baseType: !3715, size: 64, offset: 64)
!3715 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !3704, line: 59, baseType: !3716)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DISubroutineType(types: !3718)
!3718 = !{!1249, !3503, !3503}
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !3706, file: !3704, line: 108, baseType: !3720, size: 64, offset: 128)
!3720 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !3704, line: 63, baseType: !3721)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = !DISubroutineType(types: !3723)
!3723 = !{null, !2870}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !3706, file: !3704, line: 111, baseType: !3725, size: 64, offset: 192)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3706, file: !3704, line: 114, baseType: !3342, size: 64, offset: 256)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !3706, file: !3704, line: 117, baseType: !3342, size: 64, offset: 320)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !3706, file: !3704, line: 120, baseType: !3342, size: 64, offset: 384)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !3706, file: !3704, line: 124, baseType: !7, size: 32, offset: 448)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !3706, file: !3704, line: 128, baseType: !7, size: 32, offset: 480)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !3706, file: !3704, line: 131, baseType: !3732, size: 64, offset: 512)
!3732 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !3704, line: 75, baseType: !3733)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DISubroutineType(types: !3735)
!3735 = !{!2870, !3342, !3342}
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !3706, file: !3704, line: 132, baseType: !3737, size: 64, offset: 576)
!3737 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !3704, line: 78, baseType: !3721)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !3706, file: !3704, line: 135, baseType: !2870, size: 64, offset: 640)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !3706, file: !3704, line: 136, baseType: !3740, size: 64, offset: 704)
!3740 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !3704, line: 82, baseType: !3741)
!3741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3742, size: 64)
!3742 = !DISubroutineType(types: !3743)
!3743 = !{!2870, !2870, !3342, !3342}
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !3706, file: !3704, line: 137, baseType: !3745, size: 64, offset: 768)
!3745 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !3704, line: 83, baseType: !3746)
!3746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3747, size: 64)
!3747 = !DISubroutineType(types: !3748)
!3748 = !{null, !2870, !2870}
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !3706, file: !3704, line: 141, baseType: !7, size: 32, offset: 832)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !3624, file: !330, line: 211, baseType: !3751, size: 64, offset: 256)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !135, line: 183, baseType: !3753)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !135, line: 183, size: 128, elements: !3754)
!3754 = !{!3755}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3753, file: !135, line: 183, baseType: !3756, size: 128)
!3756 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !135, line: 182, baseType: !3757)
!3757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !135, line: 182, size: 128, elements: !3758)
!3758 = !{!3759, !3760, !3761}
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3757, file: !135, line: 182, baseType: !7, size: 32)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3757, file: !135, line: 182, baseType: !7, size: 32, offset: 32)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3757, file: !135, line: 182, baseType: !3250, size: 64, offset: 64)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !3624, file: !330, line: 220, baseType: !3763, size: 64, offset: 320)
!3763 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !330, line: 217, size: 64, elements: !3764)
!3764 = !{!3765, !3766}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !3763, file: !330, line: 218, baseType: !3751, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !3763, file: !330, line: 219, baseType: !3767, size: 64)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !3769, line: 29, baseType: !3770)
!3769 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !3769, line: 29, size: 96, elements: !3771)
!3771 = !{!3772}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3770, file: !3769, line: 29, baseType: !3773, size: 96)
!3773 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !3769, line: 27, baseType: !3774)
!3774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !3769, line: 27, size: 96, elements: !3775)
!3775 = !{!3776, !3777, !3778}
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3774, file: !3769, line: 27, baseType: !7, size: 32)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3774, file: !3769, line: 27, baseType: !7, size: 32, offset: 32)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3774, file: !3769, line: 27, baseType: !3779, size: 8, offset: 64)
!3779 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3780, size: 8, elements: !2972)
!3780 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !3769, line: 26, baseType: !2866)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !3619, file: !3620, line: 467, baseType: !3782, size: 64, offset: 64)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !337, line: 374, size: 640, elements: !3784)
!3784 = !{!3785, !3787, !3788, !3801, !3802, !3803, !3804, !3805, !3806, !3808, !3810, !3811}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !3783, file: !337, line: 377, baseType: !3786, size: 64)
!3786 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !2915, line: 111, baseType: !3160)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !3783, file: !337, line: 378, baseType: !3786, size: 64, offset: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !3783, file: !337, line: 381, baseType: !3789, size: 64, offset: 128)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !337, line: 282, baseType: !3791)
!3791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !337, line: 282, size: 128, elements: !3792)
!3792 = !{!3793}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3791, file: !337, line: 282, baseType: !3794, size: 128)
!3794 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !337, line: 281, baseType: !3795)
!3795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !337, line: 281, size: 128, elements: !3796)
!3796 = !{!3797, !3798, !3799}
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3795, file: !337, line: 281, baseType: !7, size: 32)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3795, file: !337, line: 281, baseType: !7, size: 32, offset: 32)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3795, file: !337, line: 281, baseType: !3800, size: 64, offset: 64)
!3800 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3786, size: 64, elements: !2972)
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !3783, file: !337, line: 384, baseType: !1249, size: 32, offset: 192)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !3783, file: !337, line: 387, baseType: !1249, size: 32, offset: 224)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !3783, file: !337, line: 390, baseType: !1249, size: 32, offset: 256)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !3783, file: !337, line: 394, baseType: !3789, size: 64, offset: 320)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !3783, file: !337, line: 396, baseType: !336, size: 32, offset: 384)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !3783, file: !337, line: 399, baseType: !3807, size: 64, offset: 416)
!3807 = !DICompositeType(tag: DW_TAG_array_type, baseType: !342, size: 64, elements: !3115)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !3783, file: !337, line: 402, baseType: !3809, size: 64, offset: 480)
!3809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !3115)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !3783, file: !337, line: 406, baseType: !1249, size: 32, offset: 544)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !3783, file: !337, line: 409, baseType: !1249, size: 32, offset: 576)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !3619, file: !3620, line: 470, baseType: !3187, size: 64, offset: 128)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !3619, file: !3620, line: 473, baseType: !3814, size: 64, offset: 192)
!3814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3815, size: 64)
!3815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !3570, line: 39, size: 1152, elements: !3816)
!3816 = !{!3817, !3818, !3831, !3832, !3833, !3845, !3846, !3850, !3851, !3852, !3853, !3854}
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !3815, file: !3570, line: 41, baseType: !3703, size: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !3815, file: !3570, line: 48, baseType: !3819, size: 64, offset: 64)
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !1248, line: 35, baseType: !3821)
!3821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !1248, line: 35, size: 128, elements: !3822)
!3822 = !{!3823}
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3821, file: !1248, line: 35, baseType: !3824, size: 128)
!3824 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !1248, line: 33, baseType: !3825)
!3825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !1248, line: 33, size: 128, elements: !3826)
!3826 = !{!3827, !3828, !3829}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !3825, file: !1248, line: 33, baseType: !7, size: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3825, file: !1248, line: 33, baseType: !7, size: 32, offset: 32)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3825, file: !1248, line: 33, baseType: !3830, size: 64, offset: 64)
!3830 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3196, size: 64, elements: !2972)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !3815, file: !3570, line: 51, baseType: !3751, size: 64, offset: 128)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !3815, file: !3570, line: 54, baseType: !2914, size: 64, offset: 192)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !3815, file: !3570, line: 57, baseType: !3834, size: 128, offset: 256)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !3835, line: 31, size: 128, elements: !3836)
!3835 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3836 = !{!3837, !3838, !3839, !3840, !3841, !3842, !3843}
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !3834, file: !3835, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !3834, file: !3835, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !3834, file: !3835, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !3834, file: !3835, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !3834, file: !3835, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !3834, file: !3835, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !3834, file: !3835, line: 56, baseType: !3844, size: 64, offset: 64)
!3844 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !2915, line: 47, baseType: !3099)
!3845 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !3815, file: !3570, line: 60, baseType: !3834, size: 128, offset: 384)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !3815, file: !3570, line: 64, baseType: !3847, size: 64, offset: 512)
!3847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3848 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !3849, line: 33, flags: DIFlagFwdDecl)
!3849 = !DIFile(filename: "./pointer-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !3815, file: !3570, line: 67, baseType: !2914, size: 64, offset: 576)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !3815, file: !3570, line: 73, baseType: !3703, size: 64, offset: 640)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !3815, file: !3570, line: 77, baseType: !3844, size: 64, offset: 704)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !3815, file: !3570, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !3815, file: !3570, line: 82, baseType: !3855, size: 320, offset: 832)
!3855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !3227, line: 62, size: 320, elements: !3856)
!3856 = !{!3857, !3863, !3864, !3865, !3866, !3867}
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !3855, file: !3227, line: 63, baseType: !3858, size: 64)
!3858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3859, size: 64)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !3227, line: 56, size: 128, elements: !3860)
!3860 = !{!3861, !3862}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3859, file: !3227, line: 57, baseType: !3858, size: 64)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3859, file: !3227, line: 58, baseType: !2971, size: 8, offset: 64)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !3855, file: !3227, line: 64, baseType: !7, size: 32, offset: 64)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !3855, file: !3227, line: 66, baseType: !7, size: 32, offset: 96)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !3855, file: !3227, line: 68, baseType: !2866, size: 8, offset: 128)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !3855, file: !3227, line: 70, baseType: !3225, size: 64, offset: 192)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !3855, file: !3227, line: 71, baseType: !3233, size: 64, offset: 256)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !3619, file: !3620, line: 476, baseType: !3869, size: 64, offset: 256)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !3620, line: 476, flags: DIFlagFwdDecl)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !3619, file: !3620, line: 479, baseType: !3703, size: 64, offset: 320)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !3619, file: !3620, line: 484, baseType: !2914, size: 64, offset: 384)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !3619, file: !3620, line: 488, baseType: !2914, size: 64, offset: 448)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !3619, file: !3620, line: 493, baseType: !2914, size: 64, offset: 512)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !3619, file: !3620, line: 496, baseType: !2914, size: 64, offset: 576)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !3619, file: !3620, line: 501, baseType: !3877, size: 64, offset: 640)
!3877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3878, size: 64)
!3878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !348, line: 2355, size: 576, elements: !3879)
!3879 = !{!3880, !3883, !3884, !3885, !3886, !3888, !3889, !3894, !3895, !3896, !3897, !3898, !3899}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !3878, file: !348, line: 2356, baseType: !3881, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3882, size: 64)
!3882 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !348, line: 2356, flags: DIFlagFwdDecl)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !3878, file: !348, line: 2357, baseType: !2871, size: 64, offset: 64)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !3878, file: !348, line: 2358, baseType: !1249, size: 32, offset: 128)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !3878, file: !348, line: 2359, baseType: !1249, size: 32, offset: 160)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !3878, file: !348, line: 2360, baseType: !3887, size: 128, offset: 192)
!3887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1249, size: 128, elements: !3139)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !3878, file: !348, line: 2364, baseType: !1249, size: 32, offset: 320)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !3878, file: !348, line: 2367, baseType: !3890, size: 128, offset: 384)
!3890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !348, line: 2349, size: 128, elements: !3891)
!3891 = !{!3892, !3893}
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3890, file: !348, line: 2351, baseType: !3048, size: 64)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3890, file: !348, line: 2352, baseType: !2929, size: 64, offset: 64)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !3878, file: !348, line: 2371, baseType: !347, size: 32, offset: 512)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !3878, file: !348, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !3878, file: !348, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !3878, file: !348, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !3878, file: !348, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !3878, file: !348, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !3619, file: !3620, line: 504, baseType: !3901, size: 64, offset: 704)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 64)
!3902 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !3620, line: 504, flags: DIFlagFwdDecl)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !3619, file: !3620, line: 507, baseType: !3703, size: 64, offset: 768)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !3619, file: !3620, line: 510, baseType: !1249, size: 32, offset: 832)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !3619, file: !3620, line: 513, baseType: !1249, size: 32, offset: 864)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !3619, file: !3620, line: 516, baseType: !2998, size: 32, offset: 896)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !3619, file: !3620, line: 519, baseType: !2998, size: 32, offset: 928)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !3619, file: !3620, line: 522, baseType: !7, size: 32, offset: 960)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !3619, file: !3620, line: 523, baseType: !7, size: 32, offset: 992)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !3619, file: !3620, line: 528, baseType: !2871, size: 64, offset: 1024)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !3619, file: !3620, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !3619, file: !3620, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !3619, file: !3620, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !3619, file: !3620, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !3619, file: !3620, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !3619, file: !3620, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !3619, file: !3620, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !3619, file: !3620, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !3619, file: !3620, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !3619, file: !3620, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !3619, file: !3620, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !3619, file: !3620, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !3619, file: !3620, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !3619, file: !3620, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !3619, file: !3620, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !3619, file: !3620, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !3614, file: !135, line: 3254, baseType: !2914, size: 64, offset: 1536)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !3614, file: !135, line: 3257, baseType: !2914, size: 64, offset: 1600)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !3614, file: !135, line: 3258, baseType: !2914, size: 64, offset: 1664)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !3614, file: !135, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!3931 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !3614, file: !135, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !3614, file: !135, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !3614, file: !135, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !3614, file: !135, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !3614, file: !135, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !3614, file: !135, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !3614, file: !135, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !3614, file: !135, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !3614, file: !135, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !3614, file: !135, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !3614, file: !135, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !3614, file: !135, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !3614, file: !135, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !3614, file: !135, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !3614, file: !135, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !3614, file: !135, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !3614, file: !135, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2874, file: !135, line: 3394, baseType: !3949, size: 1344)
!3949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !135, line: 2279, size: 1344, elements: !3950)
!3950 = !{!3951, !3952, !3953, !3954, !3955, !3956, !3957, !3958, !3959, !3960, !3961, !3962, !3963, !3964, !3965, !3966, !3967, !3968, !3969, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3984, !3985, !3986, !3987, !3988, !3989, !3990, !3991, !3992}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3949, file: !135, line: 2280, baseType: !2910, size: 192)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3949, file: !135, line: 2281, baseType: !2914, size: 64, offset: 192)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3949, file: !135, line: 2282, baseType: !2914, size: 64, offset: 256)
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !3949, file: !135, line: 2283, baseType: !2914, size: 64, offset: 320)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !3949, file: !135, line: 2284, baseType: !2914, size: 64, offset: 384)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3949, file: !135, line: 2285, baseType: !7, size: 32, offset: 448)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !3949, file: !135, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !3949, file: !135, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !3949, file: !135, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!3960 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !3949, file: !135, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !3949, file: !135, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !3949, file: !135, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3949, file: !135, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !3949, file: !135, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !3949, file: !135, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !3949, file: !135, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !3949, file: !135, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !3949, file: !135, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !3949, file: !135, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !3949, file: !135, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !3949, file: !135, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3949, file: !135, line: 2305, baseType: !7, size: 32, offset: 512)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !3949, file: !135, line: 2306, baseType: !3453, size: 32, offset: 544)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !3949, file: !135, line: 2307, baseType: !2914, size: 64, offset: 576)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !3949, file: !135, line: 2308, baseType: !2914, size: 64, offset: 640)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !3949, file: !135, line: 2314, baseType: !3977, size: 64, offset: 704)
!3977 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !135, line: 2309, size: 64, elements: !3978)
!3978 = !{!3979, !3980, !3981}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !3977, file: !135, line: 2310, baseType: !1249, size: 32)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !3977, file: !135, line: 2311, baseType: !2871, size: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !3977, file: !135, line: 2312, baseType: !3982, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !135, line: 2277, flags: DIFlagFwdDecl)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3949, file: !135, line: 2315, baseType: !2914, size: 64, offset: 768)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !3949, file: !135, line: 2316, baseType: !2914, size: 64, offset: 832)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !3949, file: !135, line: 2317, baseType: !2914, size: 64, offset: 896)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !3949, file: !135, line: 2318, baseType: !2914, size: 64, offset: 960)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !3949, file: !135, line: 2319, baseType: !2914, size: 64, offset: 1024)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !3949, file: !135, line: 2320, baseType: !2914, size: 64, offset: 1088)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3949, file: !135, line: 2321, baseType: !2914, size: 64, offset: 1152)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !3949, file: !135, line: 2322, baseType: !2914, size: 64, offset: 1216)
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !3949, file: !135, line: 2324, baseType: !3993, size: 64, offset: 1280)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !135, line: 2324, flags: DIFlagFwdDecl)
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2874, file: !135, line: 3395, baseType: !3996, size: 320)
!3996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !135, line: 1469, size: 320, elements: !3997)
!3997 = !{!3998, !3999, !4000}
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3996, file: !135, line: 1470, baseType: !2910, size: 192)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !3996, file: !135, line: 1471, baseType: !2914, size: 64, offset: 192)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3996, file: !135, line: 1472, baseType: !2914, size: 64, offset: 256)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2874, file: !135, line: 3396, baseType: !4002, size: 320)
!4002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !135, line: 1482, size: 320, elements: !4003)
!4003 = !{!4004, !4005, !4006}
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4002, file: !135, line: 1483, baseType: !2910, size: 192)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4002, file: !135, line: 1484, baseType: !1249, size: 32, offset: 192)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4002, file: !135, line: 1485, baseType: !3250, size: 64, offset: 256)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !2874, file: !135, line: 3397, baseType: !4008, size: 384)
!4008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !135, line: 1829, size: 384, elements: !4009)
!4009 = !{!4010, !4011, !4012, !4013}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4008, file: !135, line: 1830, baseType: !2910, size: 192)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !4008, file: !135, line: 1831, baseType: !2998, size: 32, offset: 192)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !4008, file: !135, line: 1832, baseType: !2914, size: 64, offset: 256)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !4008, file: !135, line: 1835, baseType: !3250, size: 64, offset: 320)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2874, file: !135, line: 3398, baseType: !4015, size: 704)
!4015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !135, line: 1898, size: 704, elements: !4016)
!4016 = !{!4017, !4018, !4019, !4020, !4021, !4026}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4015, file: !135, line: 1899, baseType: !2910, size: 192)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !4015, file: !135, line: 1902, baseType: !2914, size: 64, offset: 192)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !4015, file: !135, line: 1905, baseType: !3196, size: 64, offset: 256)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4015, file: !135, line: 1908, baseType: !7, size: 32, offset: 320)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !4015, file: !135, line: 1911, baseType: !4022, size: 64, offset: 384)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !3570, line: 117, size: 128, elements: !4024)
!4024 = !{!4025}
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !4023, file: !3570, line: 120, baseType: !3834, size: 128)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !4015, file: !135, line: 1914, baseType: !3238, size: 256, offset: 448)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2874, file: !135, line: 3399, baseType: !4028, size: 704)
!4028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !135, line: 2008, size: 704, elements: !4029)
!4029 = !{!4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4028, file: !135, line: 2009, baseType: !2910, size: 192)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !4028, file: !135, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !4028, file: !135, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !4028, file: !135, line: 2014, baseType: !2998, size: 32, offset: 224)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !4028, file: !135, line: 2016, baseType: !2914, size: 64, offset: 256)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !4028, file: !135, line: 2017, baseType: !3751, size: 64, offset: 320)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !4028, file: !135, line: 2019, baseType: !2914, size: 64, offset: 384)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !4028, file: !135, line: 2020, baseType: !2914, size: 64, offset: 448)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !4028, file: !135, line: 2021, baseType: !2914, size: 64, offset: 512)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !4028, file: !135, line: 2022, baseType: !2914, size: 64, offset: 576)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !4028, file: !135, line: 2023, baseType: !2914, size: 64, offset: 640)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2874, file: !135, line: 3400, baseType: !4042, size: 832)
!4042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !135, line: 2430, size: 832, elements: !4043)
!4043 = !{!4044, !4045, !4046, !4047, !4048, !4049, !4050, !4051, !4052, !4053}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4042, file: !135, line: 2431, baseType: !2910, size: 192)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4042, file: !135, line: 2433, baseType: !2914, size: 64, offset: 192)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !4042, file: !135, line: 2434, baseType: !2914, size: 64, offset: 256)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !4042, file: !135, line: 2435, baseType: !2914, size: 64, offset: 320)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !4042, file: !135, line: 2436, baseType: !2914, size: 64, offset: 384)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !4042, file: !135, line: 2437, baseType: !3751, size: 64, offset: 448)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !4042, file: !135, line: 2438, baseType: !2914, size: 64, offset: 512)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !4042, file: !135, line: 2440, baseType: !2914, size: 64, offset: 576)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !4042, file: !135, line: 2441, baseType: !2914, size: 64, offset: 640)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !4042, file: !135, line: 2443, baseType: !4054, size: 128, offset: 704)
!4054 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !135, line: 182, baseType: !4055)
!4055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !135, line: 182, size: 128, elements: !4056)
!4056 = !{!4057}
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4055, file: !135, line: 182, baseType: !3756, size: 128)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !2874, file: !135, line: 3401, baseType: !4059, size: 320)
!4059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !135, line: 3327, size: 320, elements: !4060)
!4060 = !{!4061, !4062, !4069}
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4059, file: !135, line: 3329, baseType: !2910, size: 192)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4059, file: !135, line: 3330, baseType: !4063, size: 64, offset: 192)
!4063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4064, size: 64)
!4064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !135, line: 3320, size: 192, elements: !4065)
!4065 = !{!4066, !4067, !4068}
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4064, file: !135, line: 3322, baseType: !4063, size: 64)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4064, file: !135, line: 3323, baseType: !4063, size: 64, offset: 64)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !4064, file: !135, line: 3324, baseType: !2914, size: 64, offset: 128)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4059, file: !135, line: 3331, baseType: !4063, size: 64, offset: 256)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2874, file: !135, line: 3402, baseType: !4071, size: 256)
!4071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !135, line: 1540, size: 256, elements: !4072)
!4072 = !{!4073, !4074}
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4071, file: !135, line: 1541, baseType: !2910, size: 192)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !4071, file: !135, line: 1542, baseType: !4075, size: 64, offset: 192)
!4075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4076, size: 64)
!4076 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !135, line: 1538, baseType: !4077)
!4077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !135, line: 1538, size: 192, elements: !4078)
!4078 = !{!4079}
!4079 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4077, file: !135, line: 1538, baseType: !4080, size: 192)
!4080 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !135, line: 1537, baseType: !4081)
!4081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !135, line: 1537, size: 192, elements: !4082)
!4082 = !{!4083, !4084, !4085}
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !4081, file: !135, line: 1537, baseType: !7, size: 32)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !4081, file: !135, line: 1537, baseType: !7, size: 32, offset: 32)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4081, file: !135, line: 1537, baseType: !4086, size: 128, offset: 64)
!4086 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4087, size: 128, elements: !2972)
!4087 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !135, line: 1535, baseType: !4088)
!4088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !135, line: 1532, size: 128, elements: !4089)
!4089 = !{!4090, !4091}
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4088, file: !135, line: 1533, baseType: !2914, size: 64)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4088, file: !135, line: 1534, baseType: !2914, size: 64, offset: 64)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !2874, file: !135, line: 3403, baseType: !4093, size: 512)
!4093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !135, line: 1938, size: 512, elements: !4094)
!4094 = !{!4095, !4096, !4097, !4098, !4104, !4105, !4106}
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4093, file: !135, line: 1939, baseType: !2910, size: 192)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !4093, file: !135, line: 1940, baseType: !2998, size: 32, offset: 192)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !4093, file: !135, line: 1941, baseType: !352, size: 32, offset: 224)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !4093, file: !135, line: 1946, baseType: !4099, size: 32, offset: 256)
!4099 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !135, line: 1942, size: 32, elements: !4100)
!4100 = !{!4101, !4102, !4103}
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !4099, file: !135, line: 1943, baseType: !370, size: 32)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !4099, file: !135, line: 1944, baseType: !377, size: 32)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !4099, file: !135, line: 1945, baseType: !134, size: 32)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !4093, file: !135, line: 1950, baseType: !3186, size: 64, offset: 320)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !4093, file: !135, line: 1951, baseType: !3186, size: 64, offset: 384)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4093, file: !135, line: 1953, baseType: !3250, size: 64, offset: 448)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !2874, file: !135, line: 3404, baseType: !4108, size: 1664)
!4108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !135, line: 3337, size: 1664, elements: !4109)
!4109 = !{!4110, !4111}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4108, file: !135, line: 3338, baseType: !2910, size: 192)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !4108, file: !135, line: 3341, baseType: !4112, size: 1472, offset: 192)
!4112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !4113, line: 410, size: 1472, elements: !4114)
!4113 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4114 = !{!4115, !4116, !4117, !4118, !4119, !4120, !4121, !4122, !4123, !4125, !4126, !4127, !4128, !4129, !4130, !4131, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4141, !4142, !4143, !4144, !4145, !4146, !4147, !4148, !4149, !4150, !4151, !4152, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4160, !4161, !4162, !4163, !4164, !4165, !4166, !4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4192, !4193, !4194, !4195, !4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4210, !4211, !4212, !4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !4112, file: !4113, line: 412, baseType: !1249, size: 32)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !4112, file: !4113, line: 413, baseType: !1249, size: 32, offset: 32)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !4112, file: !4113, line: 414, baseType: !1249, size: 32, offset: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !4112, file: !4113, line: 415, baseType: !1249, size: 32, offset: 96)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !4112, file: !4113, line: 416, baseType: !1249, size: 32, offset: 128)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !4112, file: !4113, line: 417, baseType: !1249, size: 32, offset: 160)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !4112, file: !4113, line: 418, baseType: !2866, size: 8, offset: 192)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !4112, file: !4113, line: 419, baseType: !2866, size: 8, offset: 200)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !4112, file: !4113, line: 420, baseType: !4124, size: 8, offset: 208)
!4124 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !4112, file: !4113, line: 421, baseType: !4124, size: 8, offset: 216)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !4112, file: !4113, line: 422, baseType: !4124, size: 8, offset: 224)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !4112, file: !4113, line: 423, baseType: !4124, size: 8, offset: 232)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !4112, file: !4113, line: 424, baseType: !4124, size: 8, offset: 240)
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !4112, file: !4113, line: 425, baseType: !4124, size: 8, offset: 248)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !4112, file: !4113, line: 426, baseType: !4124, size: 8, offset: 256)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !4112, file: !4113, line: 427, baseType: !4124, size: 8, offset: 264)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !4112, file: !4113, line: 428, baseType: !4124, size: 8, offset: 272)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !4112, file: !4113, line: 429, baseType: !4124, size: 8, offset: 280)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !4112, file: !4113, line: 430, baseType: !4124, size: 8, offset: 288)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !4112, file: !4113, line: 431, baseType: !4124, size: 8, offset: 296)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !4112, file: !4113, line: 432, baseType: !4124, size: 8, offset: 304)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !4112, file: !4113, line: 433, baseType: !4124, size: 8, offset: 312)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !4112, file: !4113, line: 434, baseType: !4124, size: 8, offset: 320)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !4112, file: !4113, line: 435, baseType: !4124, size: 8, offset: 328)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !4112, file: !4113, line: 436, baseType: !4124, size: 8, offset: 336)
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !4112, file: !4113, line: 437, baseType: !4124, size: 8, offset: 344)
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !4112, file: !4113, line: 438, baseType: !4124, size: 8, offset: 352)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !4112, file: !4113, line: 439, baseType: !4124, size: 8, offset: 360)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !4112, file: !4113, line: 440, baseType: !4124, size: 8, offset: 368)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !4112, file: !4113, line: 441, baseType: !4124, size: 8, offset: 376)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !4112, file: !4113, line: 442, baseType: !4124, size: 8, offset: 384)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !4112, file: !4113, line: 443, baseType: !4124, size: 8, offset: 392)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !4112, file: !4113, line: 444, baseType: !4124, size: 8, offset: 400)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !4112, file: !4113, line: 445, baseType: !4124, size: 8, offset: 408)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !4112, file: !4113, line: 446, baseType: !4124, size: 8, offset: 416)
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !4112, file: !4113, line: 447, baseType: !4124, size: 8, offset: 424)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !4112, file: !4113, line: 448, baseType: !4124, size: 8, offset: 432)
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !4112, file: !4113, line: 449, baseType: !4124, size: 8, offset: 440)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !4112, file: !4113, line: 450, baseType: !4124, size: 8, offset: 448)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !4112, file: !4113, line: 451, baseType: !4124, size: 8, offset: 456)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !4112, file: !4113, line: 452, baseType: !4124, size: 8, offset: 464)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !4112, file: !4113, line: 453, baseType: !4124, size: 8, offset: 472)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !4112, file: !4113, line: 454, baseType: !4124, size: 8, offset: 480)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !4112, file: !4113, line: 455, baseType: !4124, size: 8, offset: 488)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !4112, file: !4113, line: 456, baseType: !4124, size: 8, offset: 496)
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !4112, file: !4113, line: 457, baseType: !4124, size: 8, offset: 504)
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !4112, file: !4113, line: 458, baseType: !4124, size: 8, offset: 512)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !4112, file: !4113, line: 459, baseType: !4124, size: 8, offset: 520)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !4112, file: !4113, line: 460, baseType: !4124, size: 8, offset: 528)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !4112, file: !4113, line: 461, baseType: !4124, size: 8, offset: 536)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !4112, file: !4113, line: 462, baseType: !4124, size: 8, offset: 544)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !4112, file: !4113, line: 463, baseType: !4124, size: 8, offset: 552)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !4112, file: !4113, line: 464, baseType: !4124, size: 8, offset: 560)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !4112, file: !4113, line: 465, baseType: !4124, size: 8, offset: 568)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !4112, file: !4113, line: 466, baseType: !4124, size: 8, offset: 576)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !4112, file: !4113, line: 467, baseType: !4124, size: 8, offset: 584)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !4112, file: !4113, line: 468, baseType: !4124, size: 8, offset: 592)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !4112, file: !4113, line: 469, baseType: !4124, size: 8, offset: 600)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !4112, file: !4113, line: 470, baseType: !4124, size: 8, offset: 608)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !4112, file: !4113, line: 471, baseType: !4124, size: 8, offset: 616)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !4112, file: !4113, line: 472, baseType: !4124, size: 8, offset: 624)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !4112, file: !4113, line: 473, baseType: !4124, size: 8, offset: 632)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !4112, file: !4113, line: 474, baseType: !4124, size: 8, offset: 640)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !4112, file: !4113, line: 475, baseType: !4124, size: 8, offset: 648)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !4112, file: !4113, line: 476, baseType: !4124, size: 8, offset: 656)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !4112, file: !4113, line: 477, baseType: !4124, size: 8, offset: 664)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !4112, file: !4113, line: 478, baseType: !4124, size: 8, offset: 672)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !4112, file: !4113, line: 479, baseType: !4124, size: 8, offset: 680)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !4112, file: !4113, line: 480, baseType: !4124, size: 8, offset: 688)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !4112, file: !4113, line: 481, baseType: !4124, size: 8, offset: 696)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !4112, file: !4113, line: 482, baseType: !4124, size: 8, offset: 704)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !4112, file: !4113, line: 483, baseType: !4124, size: 8, offset: 712)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !4112, file: !4113, line: 484, baseType: !4124, size: 8, offset: 720)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !4112, file: !4113, line: 485, baseType: !4124, size: 8, offset: 728)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !4112, file: !4113, line: 486, baseType: !4124, size: 8, offset: 736)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !4112, file: !4113, line: 487, baseType: !4124, size: 8, offset: 744)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !4112, file: !4113, line: 488, baseType: !4124, size: 8, offset: 752)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !4112, file: !4113, line: 489, baseType: !4124, size: 8, offset: 760)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !4112, file: !4113, line: 490, baseType: !4124, size: 8, offset: 768)
!4195 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !4112, file: !4113, line: 491, baseType: !4124, size: 8, offset: 776)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !4112, file: !4113, line: 492, baseType: !4124, size: 8, offset: 784)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !4112, file: !4113, line: 493, baseType: !4124, size: 8, offset: 792)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !4112, file: !4113, line: 494, baseType: !4124, size: 8, offset: 800)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !4112, file: !4113, line: 495, baseType: !4124, size: 8, offset: 808)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !4112, file: !4113, line: 496, baseType: !4124, size: 8, offset: 816)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !4112, file: !4113, line: 497, baseType: !4124, size: 8, offset: 824)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !4112, file: !4113, line: 498, baseType: !4124, size: 8, offset: 832)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !4112, file: !4113, line: 499, baseType: !4124, size: 8, offset: 840)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !4112, file: !4113, line: 500, baseType: !4124, size: 8, offset: 848)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !4112, file: !4113, line: 501, baseType: !4124, size: 8, offset: 856)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !4112, file: !4113, line: 502, baseType: !4124, size: 8, offset: 864)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !4112, file: !4113, line: 503, baseType: !4124, size: 8, offset: 872)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !4112, file: !4113, line: 504, baseType: !4124, size: 8, offset: 880)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !4112, file: !4113, line: 505, baseType: !4124, size: 8, offset: 888)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !4112, file: !4113, line: 506, baseType: !4124, size: 8, offset: 896)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !4112, file: !4113, line: 507, baseType: !4124, size: 8, offset: 904)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !4112, file: !4113, line: 508, baseType: !4124, size: 8, offset: 912)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !4112, file: !4113, line: 509, baseType: !4124, size: 8, offset: 920)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !4112, file: !4113, line: 510, baseType: !4124, size: 8, offset: 928)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !4112, file: !4113, line: 511, baseType: !4124, size: 8, offset: 936)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !4112, file: !4113, line: 512, baseType: !4124, size: 8, offset: 944)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !4112, file: !4113, line: 513, baseType: !4124, size: 8, offset: 952)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !4112, file: !4113, line: 514, baseType: !4124, size: 8, offset: 960)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !4112, file: !4113, line: 515, baseType: !4124, size: 8, offset: 968)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !4112, file: !4113, line: 516, baseType: !4124, size: 8, offset: 976)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !4112, file: !4113, line: 517, baseType: !4124, size: 8, offset: 984)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !4112, file: !4113, line: 518, baseType: !4124, size: 8, offset: 992)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !4112, file: !4113, line: 519, baseType: !4124, size: 8, offset: 1000)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !4112, file: !4113, line: 520, baseType: !4124, size: 8, offset: 1008)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !4112, file: !4113, line: 521, baseType: !4124, size: 8, offset: 1016)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !4112, file: !4113, line: 522, baseType: !4124, size: 8, offset: 1024)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !4112, file: !4113, line: 523, baseType: !4124, size: 8, offset: 1032)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !4112, file: !4113, line: 524, baseType: !4124, size: 8, offset: 1040)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !4112, file: !4113, line: 525, baseType: !4124, size: 8, offset: 1048)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !4112, file: !4113, line: 526, baseType: !4124, size: 8, offset: 1056)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !4112, file: !4113, line: 527, baseType: !4124, size: 8, offset: 1064)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !4112, file: !4113, line: 528, baseType: !4124, size: 8, offset: 1072)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !4112, file: !4113, line: 529, baseType: !4124, size: 8, offset: 1080)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !4112, file: !4113, line: 530, baseType: !4124, size: 8, offset: 1088)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !4112, file: !4113, line: 531, baseType: !4124, size: 8, offset: 1096)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !4112, file: !4113, line: 532, baseType: !4124, size: 8, offset: 1104)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !4112, file: !4113, line: 533, baseType: !4124, size: 8, offset: 1112)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !4112, file: !4113, line: 534, baseType: !4124, size: 8, offset: 1120)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !4112, file: !4113, line: 535, baseType: !4124, size: 8, offset: 1128)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !4112, file: !4113, line: 536, baseType: !4124, size: 8, offset: 1136)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !4112, file: !4113, line: 537, baseType: !4124, size: 8, offset: 1144)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !4112, file: !4113, line: 538, baseType: !4124, size: 8, offset: 1152)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !4112, file: !4113, line: 539, baseType: !4124, size: 8, offset: 1160)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !4112, file: !4113, line: 540, baseType: !4124, size: 8, offset: 1168)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !4112, file: !4113, line: 541, baseType: !4124, size: 8, offset: 1176)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !4112, file: !4113, line: 542, baseType: !4124, size: 8, offset: 1184)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !4112, file: !4113, line: 543, baseType: !4124, size: 8, offset: 1192)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !4112, file: !4113, line: 544, baseType: !4124, size: 8, offset: 1200)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !4112, file: !4113, line: 545, baseType: !4124, size: 8, offset: 1208)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !4112, file: !4113, line: 546, baseType: !4124, size: 8, offset: 1216)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !4112, file: !4113, line: 547, baseType: !4124, size: 8, offset: 1224)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !4112, file: !4113, line: 548, baseType: !4124, size: 8, offset: 1232)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !4112, file: !4113, line: 549, baseType: !4124, size: 8, offset: 1240)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !4112, file: !4113, line: 550, baseType: !4124, size: 8, offset: 1248)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !4112, file: !4113, line: 551, baseType: !4124, size: 8, offset: 1256)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !4112, file: !4113, line: 552, baseType: !4124, size: 8, offset: 1264)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !4112, file: !4113, line: 553, baseType: !4124, size: 8, offset: 1272)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !4112, file: !4113, line: 554, baseType: !4124, size: 8, offset: 1280)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !4112, file: !4113, line: 555, baseType: !4124, size: 8, offset: 1288)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !4112, file: !4113, line: 556, baseType: !4124, size: 8, offset: 1296)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !4112, file: !4113, line: 557, baseType: !4124, size: 8, offset: 1304)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !4112, file: !4113, line: 558, baseType: !4124, size: 8, offset: 1312)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !4112, file: !4113, line: 559, baseType: !4124, size: 8, offset: 1320)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !4112, file: !4113, line: 560, baseType: !4124, size: 8, offset: 1328)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !4112, file: !4113, line: 561, baseType: !4124, size: 8, offset: 1336)
!4266 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !4112, file: !4113, line: 562, baseType: !4124, size: 8, offset: 1344)
!4267 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !4112, file: !4113, line: 563, baseType: !4124, size: 8, offset: 1352)
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !4112, file: !4113, line: 564, baseType: !4124, size: 8, offset: 1360)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !4112, file: !4113, line: 565, baseType: !4124, size: 8, offset: 1368)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !4112, file: !4113, line: 566, baseType: !4124, size: 8, offset: 1376)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !4112, file: !4113, line: 567, baseType: !4124, size: 8, offset: 1384)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !4112, file: !4113, line: 568, baseType: !4124, size: 8, offset: 1392)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !4112, file: !4113, line: 569, baseType: !4124, size: 8, offset: 1400)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !4112, file: !4113, line: 570, baseType: !4124, size: 8, offset: 1408)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !4112, file: !4113, line: 571, baseType: !4124, size: 8, offset: 1416)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !4112, file: !4113, line: 572, baseType: !4124, size: 8, offset: 1424)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !4112, file: !4113, line: 573, baseType: !4124, size: 8, offset: 1432)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !4112, file: !4113, line: 574, baseType: !4124, size: 8, offset: 1440)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !2874, file: !135, line: 3405, baseType: !4280, size: 384)
!4280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !135, line: 3352, size: 384, elements: !4281)
!4281 = !{!4282, !4283}
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !4280, file: !135, line: 3353, baseType: !2910, size: 192)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !4280, file: !135, line: 3356, baseType: !4284, size: 192, offset: 192)
!4284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !4113, line: 578, size: 192, elements: !4285)
!4285 = !{!4286, !4287, !4288, !4289, !4290, !4291, !4292, !4293, !4294, !4295, !4296}
!4286 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !4284, file: !4113, line: 580, baseType: !1249, size: 32)
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !4284, file: !4113, line: 581, baseType: !1249, size: 32, offset: 32)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !4284, file: !4113, line: 582, baseType: !1249, size: 32, offset: 64)
!4289 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !4284, file: !4113, line: 583, baseType: !1249, size: 32, offset: 96)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4284, file: !4113, line: 584, baseType: !2866, size: 8, offset: 128)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !4284, file: !4113, line: 585, baseType: !2866, size: 8, offset: 136)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !4284, file: !4113, line: 586, baseType: !2866, size: 8, offset: 144)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !4284, file: !4113, line: 587, baseType: !2866, size: 8, offset: 152)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !4284, file: !4113, line: 588, baseType: !2866, size: 8, offset: 160)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !4284, file: !4113, line: 589, baseType: !2866, size: 8, offset: 168)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !4284, file: !4113, line: 590, baseType: !2866, size: 8, offset: 176)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2874)
!4299 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3198)
!4302 = !{!0, !4303, !4308, !4326, !4351, !4354, !4356, !4358, !4361, !4363, !4365, !4367, !4369, !4375, !4377}
!4303 = !DIGlobalVariableExpression(var: !4304, expr: !DIExpression())
!4304 = distinct !DIGlobalVariable(name: "built_in_names", scope: !2, file: !3, line: 70, type: !4305, isLocal: false, isDefinition: true)
!4305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2871, size: 46144, elements: !4306)
!4306 = !{!4307}
!4307 = !DISubrange(count: 721)
!4308 = !DIGlobalVariableExpression(var: !4309, expr: !DIExpression())
!4309 = distinct !DIGlobalVariable(name: "elim_regs", scope: !4310, file: !3, line: 793, type: !4319, isLocal: true, isDefinition: true)
!4310 = distinct !DISubprogram(name: "expand_builtin_setjmp_receiver", scope: !3, file: !3, line: 762, type: !4311, scopeLine: 763, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4313)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{null, !3048}
!4313 = !{!4314, !4315, !4316}
!4314 = !DILocalVariable(name: "receiver_label", arg: 1, scope: !4310, file: !3, line: 762, type: !3048)
!4315 = !DILocalVariable(name: "chain", scope: !4310, file: !3, line: 764, type: !3048)
!4316 = !DILocalVariable(name: "i", scope: !4317, file: !3, line: 792, type: !3342)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 790, column: 5)
!4318 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 789, column: 7)
!4319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4320, size: 256, elements: !3139)
!4320 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4321)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elims", scope: !4310, file: !3, line: 793, size: 64, elements: !4322)
!4322 = !{!4323, !4325}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !4321, file: !3, line: 793, baseType: !4324, size: 32)
!4324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1249)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !4321, file: !3, line: 793, baseType: !4324, size: 32, offset: 32)
!4326 = !DIGlobalVariableExpression(var: !4327, expr: !DIExpression())
!4327 = distinct !DIGlobalVariable(name: "gave_help", scope: !4328, file: !3, line: 4643, type: !2866, isLocal: true, isDefinition: true)
!4328 = distinct !DISubprogram(name: "gimplify_va_arg_expr", scope: !3, file: !3, line: 4618, type: !4329, scopeLine: 4619, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4332)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{!1247, !3231, !4331, !4331}
!4331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3186, size: 64)
!4332 = !{!4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342, !4345}
!4333 = !DILocalVariable(name: "expr_p", arg: 1, scope: !4328, file: !3, line: 4618, type: !3231)
!4334 = !DILocalVariable(name: "pre_p", arg: 2, scope: !4328, file: !3, line: 4618, type: !4331)
!4335 = !DILocalVariable(name: "post_p", arg: 3, scope: !4328, file: !3, line: 4618, type: !4331)
!4336 = !DILocalVariable(name: "promoted_type", scope: !4328, file: !3, line: 4620, type: !2914)
!4337 = !DILocalVariable(name: "have_va_type", scope: !4328, file: !3, line: 4620, type: !2914)
!4338 = !DILocalVariable(name: "valist", scope: !4328, file: !3, line: 4621, type: !2914)
!4339 = !DILocalVariable(name: "type", scope: !4328, file: !3, line: 4622, type: !2914)
!4340 = !DILocalVariable(name: "t", scope: !4328, file: !3, line: 4623, type: !2914)
!4341 = !DILocalVariable(name: "loc", scope: !4328, file: !3, line: 4624, type: !2998)
!4342 = !DILocalVariable(name: "warned", scope: !4343, file: !3, line: 4644, type: !2866)
!4343 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 4642, column: 5)
!4344 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 4640, column: 7)
!4345 = !DILocalVariable(name: "p1", scope: !4346, file: !3, line: 4687, type: !2914)
!4346 = distinct !DILexicalBlock(scope: !4347, file: !3, line: 4686, column: 6)
!4347 = distinct !DILexicalBlock(scope: !4348, file: !3, line: 4685, column: 8)
!4348 = distinct !DILexicalBlock(scope: !4349, file: !3, line: 4680, column: 2)
!4349 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 4679, column: 11)
!4350 = distinct !DILexicalBlock(scope: !4344, file: !3, line: 4676, column: 5)
!4351 = !DIGlobalVariableExpression(var: !4352, expr: !DIExpression())
!4352 = distinct !DIGlobalVariable(name: "built_in_decls", scope: !2, file: !3, line: 78, type: !4353, isLocal: false, isDefinition: true)
!4353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2914, size: 46144, elements: !4306)
!4354 = !DIGlobalVariableExpression(var: !4355, expr: !DIExpression())
!4355 = distinct !DIGlobalVariable(name: "implicit_built_in_decls", scope: !2, file: !3, line: 82, type: !4353, isLocal: false, isDefinition: true)
!4356 = !DIGlobalVariableExpression(var: !4357, expr: !DIExpression())
!4357 = distinct !DIGlobalVariable(name: "target_percent", scope: !2, file: !3, line: 211, type: !2927, isLocal: true, isDefinition: true)
!4358 = !DIGlobalVariableExpression(var: !4359, expr: !DIExpression())
!4359 = distinct !DIGlobalVariable(name: "target_percent_s", scope: !2, file: !3, line: 215, type: !4360, isLocal: true, isDefinition: true)
!4360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2869, size: 24, elements: !2947)
!4361 = !DIGlobalVariableExpression(var: !4362, expr: !DIExpression())
!4362 = distinct !DIGlobalVariable(name: "setjmp_alias_set", scope: !2, file: !3, line: 704, type: !3453, isLocal: true, isDefinition: true)
!4363 = !DIGlobalVariableExpression(var: !4364, expr: !DIExpression())
!4364 = distinct !DIGlobalVariable(name: "target_newline", scope: !2, file: !3, line: 210, type: !2927, isLocal: true, isDefinition: true)
!4365 = !DIGlobalVariableExpression(var: !4366, expr: !DIExpression())
!4366 = distinct !DIGlobalVariable(name: "target_percent_s_newline", scope: !2, file: !3, line: 216, type: !3138, isLocal: true, isDefinition: true)
!4367 = !DIGlobalVariableExpression(var: !4368, expr: !DIExpression())
!4368 = distinct !DIGlobalVariable(name: "target_percent_c", scope: !2, file: !3, line: 214, type: !4360, isLocal: true, isDefinition: true)
!4369 = !DIGlobalVariableExpression(var: !4370, expr: !DIExpression())
!4370 = distinct !DIGlobalVariable(name: "init", scope: !4371, file: !3, line: 12909, type: !2866, isLocal: true, isDefinition: true)
!4371 = distinct !DISubprogram(name: "init_target_chars", scope: !3, file: !3, line: 12907, type: !4372, scopeLine: 12908, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!2866}
!4374 = !{}
!4375 = !DIGlobalVariableExpression(var: !4376, expr: !DIExpression())
!4376 = distinct !DIGlobalVariable(name: "target_c", scope: !2, file: !3, line: 212, type: !2927, isLocal: true, isDefinition: true)
!4377 = !DIGlobalVariableExpression(var: !4378, expr: !DIExpression())
!4378 = distinct !DIGlobalVariable(name: "target_s", scope: !2, file: !3, line: 213, type: !2927, isLocal: true, isDefinition: true)
!4379 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4380, size: 256, elements: !3139)
!4380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2871)
!4381 = !DIGlobalVariableExpression(var: !4327, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!4382 = !DIGlobalVariableExpression(var: !4370, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!4383 = !{i32 2, !"Dwarf Version", i32 4}
!4384 = !{i32 2, !"Debug Info Version", i32 3}
!4385 = !{i32 1, !"wchar_size", i32 4}
!4386 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!4387 = distinct !DISubprogram(name: "vprintf", scope: !4388, file: !4388, line: 39, type: !4389, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4399)
!4388 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!4389 = !DISubroutineType(types: !4390)
!4390 = !{!1249, !4391, !4392}
!4391 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2871)
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !4394)
!4394 = !{!4395, !4396, !4397, !4398}
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !4393, file: !3, baseType: !7, size: 32)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !4393, file: !3, baseType: !7, size: 32, offset: 32)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !4393, file: !3, baseType: !2870, size: 64, offset: 64)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !4393, file: !3, baseType: !2870, size: 64, offset: 128)
!4399 = !{!4400, !4401}
!4400 = !DILocalVariable(name: "__fmt", arg: 1, scope: !4387, file: !4388, line: 39, type: !4391)
!4401 = !DILocalVariable(name: "__arg", arg: 2, scope: !4387, file: !4388, line: 39, type: !4392)
!4402 = !DILocation(line: 0, scope: !4387)
!4403 = !DILocation(line: 41, column: 20, scope: !4387)
!4404 = !DILocation(line: 41, column: 10, scope: !4387)
!4405 = !DILocation(line: 41, column: 3, scope: !4387)
!4406 = distinct !DISubprogram(name: "getchar", scope: !4388, file: !4388, line: 47, type: !4407, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!1249}
!4409 = !DILocation(line: 49, column: 16, scope: !4406)
!4410 = !DILocation(line: 49, column: 10, scope: !4406)
!4411 = !DILocation(line: 49, column: 3, scope: !4406)
!4412 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !4388, file: !4388, line: 56, type: !4413, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4465)
!4413 = !DISubroutineType(types: !4414)
!4414 = !{!1249, !4415}
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4416, size: 64)
!4416 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4417, line: 7, baseType: !4418)
!4417 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!4418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4419, line: 49, size: 1728, elements: !4420)
!4419 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!4420 = !{!4421, !4422, !4423, !4424, !4425, !4426, !4427, !4428, !4429, !4430, !4431, !4432, !4433, !4436, !4438, !4439, !4440, !4443, !4444, !4445, !4446, !4449, !4451, !4454, !4457, !4458, !4459, !4460, !4461}
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4418, file: !4419, line: 51, baseType: !1249, size: 32)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4418, file: !4419, line: 54, baseType: !2868, size: 64, offset: 64)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4418, file: !4419, line: 55, baseType: !2868, size: 64, offset: 128)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4418, file: !4419, line: 56, baseType: !2868, size: 64, offset: 192)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4418, file: !4419, line: 57, baseType: !2868, size: 64, offset: 256)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4418, file: !4419, line: 58, baseType: !2868, size: 64, offset: 320)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4418, file: !4419, line: 59, baseType: !2868, size: 64, offset: 384)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4418, file: !4419, line: 60, baseType: !2868, size: 64, offset: 448)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4418, file: !4419, line: 61, baseType: !2868, size: 64, offset: 512)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4418, file: !4419, line: 64, baseType: !2868, size: 64, offset: 576)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4418, file: !4419, line: 65, baseType: !2868, size: 64, offset: 640)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4418, file: !4419, line: 66, baseType: !2868, size: 64, offset: 704)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4418, file: !4419, line: 68, baseType: !4434, size: 64, offset: 768)
!4434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4435, size: 64)
!4435 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4419, line: 36, flags: DIFlagFwdDecl)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4418, file: !4419, line: 70, baseType: !4437, size: 64, offset: 832)
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4418, size: 64)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4418, file: !4419, line: 72, baseType: !1249, size: 32, offset: 896)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4418, file: !4419, line: 73, baseType: !1249, size: 32, offset: 928)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4418, file: !4419, line: 74, baseType: !4441, size: 64, offset: 960)
!4441 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !4442, line: 152, baseType: !2929)
!4442 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4418, file: !4419, line: 77, baseType: !4299, size: 16, offset: 1024)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4418, file: !4419, line: 78, baseType: !4124, size: 8, offset: 1040)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4418, file: !4419, line: 79, baseType: !2971, size: 8, offset: 1048)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4418, file: !4419, line: 81, baseType: !4447, size: 64, offset: 1088)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4419, line: 43, baseType: null)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4418, file: !4419, line: 89, baseType: !4450, size: 64, offset: 1152)
!4450 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !4442, line: 153, baseType: !2929)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4418, file: !4419, line: 91, baseType: !4452, size: 64, offset: 1216)
!4452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4453, size: 64)
!4453 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4419, line: 37, flags: DIFlagFwdDecl)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4418, file: !4419, line: 92, baseType: !4455, size: 64, offset: 1280)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4419, line: 38, flags: DIFlagFwdDecl)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4418, file: !4419, line: 93, baseType: !4437, size: 64, offset: 1344)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4418, file: !4419, line: 94, baseType: !2870, size: 64, offset: 1408)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4418, file: !4419, line: 95, baseType: !3342, size: 64, offset: 1472)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4418, file: !4419, line: 96, baseType: !1249, size: 32, offset: 1536)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4418, file: !4419, line: 98, baseType: !4462, size: 160, offset: 1568)
!4462 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2869, size: 160, elements: !4463)
!4463 = !{!4464}
!4464 = !DISubrange(count: 20)
!4465 = !{!4466}
!4466 = !DILocalVariable(name: "__fp", arg: 1, scope: !4412, file: !4388, line: 56, type: !4415)
!4467 = !DILocation(line: 0, scope: !4412)
!4468 = !DILocation(line: 58, column: 10, scope: !4412)
!4469 = !DILocation(line: 58, column: 3, scope: !4412)
!4470 = distinct !DISubprogram(name: "getc_unlocked", scope: !4388, file: !4388, line: 66, type: !4413, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4471)
!4471 = !{!4472}
!4472 = !DILocalVariable(name: "__fp", arg: 1, scope: !4470, file: !4388, line: 66, type: !4415)
!4473 = !DILocation(line: 0, scope: !4470)
!4474 = !DILocation(line: 68, column: 10, scope: !4470)
!4475 = !DILocation(line: 68, column: 3, scope: !4470)
!4476 = distinct !DISubprogram(name: "getchar_unlocked", scope: !4388, file: !4388, line: 73, type: !4407, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4477 = !DILocation(line: 75, column: 10, scope: !4476)
!4478 = !DILocation(line: 75, column: 3, scope: !4476)
!4479 = distinct !DISubprogram(name: "putchar", scope: !4388, file: !4388, line: 82, type: !4480, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4482)
!4480 = !DISubroutineType(types: !4481)
!4481 = !{!1249, !1249}
!4482 = !{!4483}
!4483 = !DILocalVariable(name: "__c", arg: 1, scope: !4479, file: !4388, line: 82, type: !1249)
!4484 = !DILocation(line: 0, scope: !4479)
!4485 = !DILocation(line: 84, column: 21, scope: !4479)
!4486 = !DILocation(line: 84, column: 10, scope: !4479)
!4487 = !DILocation(line: 84, column: 3, scope: !4479)
!4488 = distinct !DISubprogram(name: "fputc_unlocked", scope: !4388, file: !4388, line: 91, type: !4489, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4491)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!1249, !1249, !4415}
!4491 = !{!4492, !4493}
!4492 = !DILocalVariable(name: "__c", arg: 1, scope: !4488, file: !4388, line: 91, type: !1249)
!4493 = !DILocalVariable(name: "__stream", arg: 2, scope: !4488, file: !4388, line: 91, type: !4415)
!4494 = !DILocation(line: 0, scope: !4488)
!4495 = !DILocation(line: 93, column: 10, scope: !4488)
!4496 = !DILocation(line: 93, column: 3, scope: !4488)
!4497 = distinct !DISubprogram(name: "putc_unlocked", scope: !4388, file: !4388, line: 101, type: !4489, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4498)
!4498 = !{!4499, !4500}
!4499 = !DILocalVariable(name: "__c", arg: 1, scope: !4497, file: !4388, line: 101, type: !1249)
!4500 = !DILocalVariable(name: "__stream", arg: 2, scope: !4497, file: !4388, line: 101, type: !4415)
!4501 = !DILocation(line: 0, scope: !4497)
!4502 = !DILocation(line: 103, column: 10, scope: !4497)
!4503 = !DILocation(line: 103, column: 3, scope: !4497)
!4504 = distinct !DISubprogram(name: "putchar_unlocked", scope: !4388, file: !4388, line: 108, type: !4480, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4505)
!4505 = !{!4506}
!4506 = !DILocalVariable(name: "__c", arg: 1, scope: !4504, file: !4388, line: 108, type: !1249)
!4507 = !DILocation(line: 0, scope: !4504)
!4508 = !DILocation(line: 110, column: 10, scope: !4504)
!4509 = !DILocation(line: 110, column: 3, scope: !4504)
!4510 = distinct !DISubprogram(name: "getline", scope: !4388, file: !4388, line: 118, type: !4511, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4515)
!4511 = !DISubroutineType(types: !4512)
!4512 = !{!4513, !2867, !4514, !4415}
!4513 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !4442, line: 193, baseType: !2929)
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3342, size: 64)
!4515 = !{!4516, !4517, !4518}
!4516 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !4510, file: !4388, line: 118, type: !2867)
!4517 = !DILocalVariable(name: "__n", arg: 2, scope: !4510, file: !4388, line: 118, type: !4514)
!4518 = !DILocalVariable(name: "__stream", arg: 3, scope: !4510, file: !4388, line: 118, type: !4415)
!4519 = !DILocation(line: 0, scope: !4510)
!4520 = !DILocation(line: 120, column: 10, scope: !4510)
!4521 = !DILocation(line: 120, column: 3, scope: !4510)
!4522 = distinct !DISubprogram(name: "feof_unlocked", scope: !4388, file: !4388, line: 128, type: !4413, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4523)
!4523 = !{!4524}
!4524 = !DILocalVariable(name: "__stream", arg: 1, scope: !4522, file: !4388, line: 128, type: !4415)
!4525 = !DILocation(line: 0, scope: !4522)
!4526 = !DILocation(line: 130, column: 10, scope: !4522)
!4527 = !DILocation(line: 130, column: 3, scope: !4522)
!4528 = distinct !DISubprogram(name: "ferror_unlocked", scope: !4388, file: !4388, line: 135, type: !4413, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4529)
!4529 = !{!4530}
!4530 = !DILocalVariable(name: "__stream", arg: 1, scope: !4528, file: !4388, line: 135, type: !4415)
!4531 = !DILocation(line: 0, scope: !4528)
!4532 = !DILocation(line: 137, column: 10, scope: !4528)
!4533 = !DILocation(line: 137, column: 3, scope: !4528)
!4534 = distinct !DISubprogram(name: "tolower", scope: !4535, file: !4535, line: 207, type: !4480, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4536)
!4535 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!4536 = !{!4537}
!4537 = !DILocalVariable(name: "__c", arg: 1, scope: !4534, file: !4535, line: 207, type: !1249)
!4538 = !DILocation(line: 0, scope: !4534)
!4539 = !DILocation(line: 209, column: 22, scope: !4534)
!4540 = !DILocation(line: 209, column: 39, scope: !4534)
!4541 = !DILocation(line: 209, column: 38, scope: !4534)
!4542 = !DILocation(line: 209, column: 37, scope: !4534)
!4543 = !DILocation(line: 209, column: 10, scope: !4534)
!4544 = !DILocation(line: 209, column: 3, scope: !4534)
!4545 = distinct !DISubprogram(name: "toupper", scope: !4535, file: !4535, line: 213, type: !4480, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4546)
!4546 = !{!4547}
!4547 = !DILocalVariable(name: "__c", arg: 1, scope: !4545, file: !4535, line: 213, type: !1249)
!4548 = !DILocation(line: 0, scope: !4545)
!4549 = !DILocation(line: 215, column: 22, scope: !4545)
!4550 = !DILocation(line: 215, column: 39, scope: !4545)
!4551 = !DILocation(line: 215, column: 38, scope: !4545)
!4552 = !DILocation(line: 215, column: 37, scope: !4545)
!4553 = !DILocation(line: 215, column: 10, scope: !4545)
!4554 = !DILocation(line: 215, column: 3, scope: !4545)
!4555 = distinct !DISubprogram(name: "atoi", scope: !4556, file: !4556, line: 361, type: !4557, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4559)
!4556 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!4557 = !DISubroutineType(types: !4558)
!4558 = !{!1249, !2871}
!4559 = !{!4560}
!4560 = !DILocalVariable(name: "__nptr", arg: 1, scope: !4555, file: !4556, line: 361, type: !2871)
!4561 = !DILocation(line: 0, scope: !4555)
!4562 = !DILocation(line: 363, column: 16, scope: !4555)
!4563 = !DILocation(line: 363, column: 10, scope: !4555)
!4564 = !DILocation(line: 363, column: 3, scope: !4555)
!4565 = distinct !DISubprogram(name: "atol", scope: !4556, file: !4556, line: 366, type: !4566, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4568)
!4566 = !DISubroutineType(types: !4567)
!4567 = !{!2929, !2871}
!4568 = !{!4569}
!4569 = !DILocalVariable(name: "__nptr", arg: 1, scope: !4565, file: !4556, line: 366, type: !2871)
!4570 = !DILocation(line: 0, scope: !4565)
!4571 = !DILocation(line: 368, column: 10, scope: !4565)
!4572 = !DILocation(line: 368, column: 3, scope: !4565)
!4573 = distinct !DISubprogram(name: "atoll", scope: !4556, file: !4556, line: 373, type: !4574, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4577)
!4574 = !DISubroutineType(types: !4575)
!4575 = !{!4576, !2871}
!4576 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!4577 = !{!4578}
!4578 = !DILocalVariable(name: "__nptr", arg: 1, scope: !4573, file: !4556, line: 373, type: !2871)
!4579 = !DILocation(line: 0, scope: !4573)
!4580 = !DILocation(line: 375, column: 10, scope: !4573)
!4581 = !DILocation(line: 375, column: 3, scope: !4573)
!4582 = distinct !DISubprogram(name: "bsearch", scope: !4583, file: !4583, line: 20, type: !4584, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4587)
!4583 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!2870, !3503, !3503, !3342, !3342, !4586}
!4586 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !4556, line: 808, baseType: !3716)
!4587 = !{!4588, !4589, !4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597}
!4588 = !DILocalVariable(name: "__key", arg: 1, scope: !4582, file: !4583, line: 20, type: !3503)
!4589 = !DILocalVariable(name: "__base", arg: 2, scope: !4582, file: !4583, line: 20, type: !3503)
!4590 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !4582, file: !4583, line: 20, type: !3342)
!4591 = !DILocalVariable(name: "__size", arg: 4, scope: !4582, file: !4583, line: 20, type: !3342)
!4592 = !DILocalVariable(name: "__compar", arg: 5, scope: !4582, file: !4583, line: 21, type: !4586)
!4593 = !DILocalVariable(name: "__l", scope: !4582, file: !4583, line: 23, type: !3342)
!4594 = !DILocalVariable(name: "__u", scope: !4582, file: !4583, line: 23, type: !3342)
!4595 = !DILocalVariable(name: "__idx", scope: !4582, file: !4583, line: 23, type: !3342)
!4596 = !DILocalVariable(name: "__p", scope: !4582, file: !4583, line: 24, type: !3503)
!4597 = !DILocalVariable(name: "__comparison", scope: !4582, file: !4583, line: 25, type: !1249)
!4598 = !DILocation(line: 0, scope: !4582)
!4599 = !DILocation(line: 29, column: 3, scope: !4582)
!4600 = !DILocation(line: 27, column: 7, scope: !4582)
!4601 = !DILocation(line: 29, column: 14, scope: !4582)
!4602 = !DILocation(line: 31, column: 20, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4582, file: !4583, line: 30, column: 5)
!4604 = !DILocation(line: 31, column: 27, scope: !4603)
!4605 = !DILocation(line: 32, column: 56, scope: !4603)
!4606 = !DILocation(line: 32, column: 47, scope: !4603)
!4607 = !DILocation(line: 33, column: 22, scope: !4603)
!4608 = !DILocation(line: 34, column: 24, scope: !4609)
!4609 = distinct !DILexicalBlock(scope: !4603, file: !4583, line: 34, column: 11)
!4610 = !DILocation(line: 34, column: 11, scope: !4603)
!4611 = !DILocation(line: 36, column: 29, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4609, file: !4583, line: 36, column: 16)
!4613 = !DILocation(line: 36, column: 16, scope: !4609)
!4614 = !DILocation(line: 37, column: 14, scope: !4612)
!4615 = distinct !{!4615, !4599, !4616}
!4616 = !DILocation(line: 40, column: 5, scope: !4582)
!4617 = !DILocation(line: 43, column: 1, scope: !4582)
!4618 = distinct !DISubprogram(name: "atof", scope: !4619, file: !4619, line: 25, type: !4620, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4623)
!4619 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!4620 = !DISubroutineType(types: !4621)
!4621 = !{!4622, !2871}
!4622 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!4623 = !{!4624}
!4624 = !DILocalVariable(name: "__nptr", arg: 1, scope: !4618, file: !4619, line: 25, type: !2871)
!4625 = !DILocation(line: 0, scope: !4618)
!4626 = !DILocation(line: 27, column: 10, scope: !4618)
!4627 = !DILocation(line: 27, column: 3, scope: !4618)
!4628 = distinct !DISubprogram(name: "strtoimax", scope: !4629, file: !4629, line: 324, type: !4630, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4636)
!4629 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!4632, !4391, !4635, !1249}
!4632 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !4633, line: 101, baseType: !4634)
!4633 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!4634 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !4442, line: 72, baseType: !2929)
!4635 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2867)
!4636 = !{!4637, !4638, !4639}
!4637 = !DILocalVariable(name: "nptr", arg: 1, scope: !4628, file: !4629, line: 324, type: !4391)
!4638 = !DILocalVariable(name: "endptr", arg: 2, scope: !4628, file: !4629, line: 324, type: !4635)
!4639 = !DILocalVariable(name: "base", arg: 3, scope: !4628, file: !4629, line: 324, type: !1249)
!4640 = !DILocation(line: 0, scope: !4628)
!4641 = !DILocation(line: 327, column: 10, scope: !4628)
!4642 = !DILocation(line: 327, column: 3, scope: !4628)
!4643 = distinct !DISubprogram(name: "strtoumax", scope: !4629, file: !4629, line: 336, type: !4644, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4648)
!4644 = !DISubroutineType(types: !4645)
!4645 = !{!4646, !4391, !4635, !1249}
!4646 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !4633, line: 102, baseType: !4647)
!4647 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !4442, line: 73, baseType: !2927)
!4648 = !{!4649, !4650, !4651}
!4649 = !DILocalVariable(name: "nptr", arg: 1, scope: !4643, file: !4629, line: 336, type: !4391)
!4650 = !DILocalVariable(name: "endptr", arg: 2, scope: !4643, file: !4629, line: 336, type: !4635)
!4651 = !DILocalVariable(name: "base", arg: 3, scope: !4643, file: !4629, line: 336, type: !1249)
!4652 = !DILocation(line: 0, scope: !4643)
!4653 = !DILocation(line: 339, column: 10, scope: !4643)
!4654 = !DILocation(line: 339, column: 3, scope: !4643)
!4655 = distinct !DISubprogram(name: "wcstoimax", scope: !4629, file: !4629, line: 348, type: !4656, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4665)
!4656 = !DISubroutineType(types: !4657)
!4657 = !{!4632, !4658, !4662, !1249}
!4658 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !4659)
!4659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4660, size: 64)
!4660 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4661)
!4661 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !4629, line: 34, baseType: !1249)
!4662 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !4663)
!4663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4664, size: 64)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4665 = !{!4666, !4667, !4668}
!4666 = !DILocalVariable(name: "nptr", arg: 1, scope: !4655, file: !4629, line: 348, type: !4658)
!4667 = !DILocalVariable(name: "endptr", arg: 2, scope: !4655, file: !4629, line: 348, type: !4662)
!4668 = !DILocalVariable(name: "base", arg: 3, scope: !4655, file: !4629, line: 348, type: !1249)
!4669 = !DILocation(line: 0, scope: !4655)
!4670 = !DILocation(line: 351, column: 10, scope: !4655)
!4671 = !DILocation(line: 351, column: 3, scope: !4655)
!4672 = distinct !DISubprogram(name: "wcstoumax", scope: !4629, file: !4629, line: 362, type: !4673, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4675)
!4673 = !DISubroutineType(types: !4674)
!4674 = !{!4646, !4658, !4662, !1249}
!4675 = !{!4676, !4677, !4678}
!4676 = !DILocalVariable(name: "nptr", arg: 1, scope: !4672, file: !4629, line: 362, type: !4658)
!4677 = !DILocalVariable(name: "endptr", arg: 2, scope: !4672, file: !4629, line: 362, type: !4662)
!4678 = !DILocalVariable(name: "base", arg: 3, scope: !4672, file: !4629, line: 362, type: !1249)
!4679 = !DILocation(line: 0, scope: !4672)
!4680 = !DILocation(line: 365, column: 10, scope: !4672)
!4681 = !DILocation(line: 365, column: 3, scope: !4672)
!4682 = distinct !DISubprogram(name: "stat", scope: !4683, file: !4683, line: 453, type: !4684, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4721)
!4683 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!4684 = !DISubroutineType(types: !4685)
!4685 = !{!1249, !2871, !4686}
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !4688, line: 46, size: 1152, elements: !4689)
!4688 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!4689 = !{!4690, !4692, !4694, !4696, !4698, !4700, !4702, !4703, !4704, !4705, !4707, !4709, !4717, !4718, !4719}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4687, file: !4688, line: 48, baseType: !4691, size: 64)
!4691 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !4442, line: 145, baseType: !2927)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4687, file: !4688, line: 53, baseType: !4693, size: 64, offset: 64)
!4693 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !4442, line: 148, baseType: !2927)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4687, file: !4688, line: 61, baseType: !4695, size: 64, offset: 128)
!4695 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !4442, line: 151, baseType: !2927)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4687, file: !4688, line: 62, baseType: !4697, size: 32, offset: 192)
!4697 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !4442, line: 150, baseType: !7)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4687, file: !4688, line: 64, baseType: !4699, size: 32, offset: 224)
!4699 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !4442, line: 146, baseType: !7)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4687, file: !4688, line: 65, baseType: !4701, size: 32, offset: 256)
!4701 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !4442, line: 147, baseType: !7)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4687, file: !4688, line: 67, baseType: !1249, size: 32, offset: 288)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4687, file: !4688, line: 69, baseType: !4691, size: 64, offset: 320)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4687, file: !4688, line: 74, baseType: !4441, size: 64, offset: 384)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4687, file: !4688, line: 78, baseType: !4706, size: 64, offset: 448)
!4706 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !4442, line: 174, baseType: !2929)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4687, file: !4688, line: 80, baseType: !4708, size: 64, offset: 512)
!4708 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !4442, line: 179, baseType: !2929)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4687, file: !4688, line: 91, baseType: !4710, size: 128, offset: 576)
!4710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !4711, line: 10, size: 128, elements: !4712)
!4711 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!4712 = !{!4713, !4715}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4710, file: !4711, line: 12, baseType: !4714, size: 64)
!4714 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !4442, line: 160, baseType: !2929)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !4710, file: !4711, line: 16, baseType: !4716, size: 64, offset: 64)
!4716 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !4442, line: 196, baseType: !2929)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4687, file: !4688, line: 92, baseType: !4710, size: 128, offset: 704)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4687, file: !4688, line: 93, baseType: !4710, size: 128, offset: 832)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4687, file: !4688, line: 106, baseType: !4720, size: 192, offset: 960)
!4720 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4716, size: 192, elements: !2947)
!4721 = !{!4722, !4723}
!4722 = !DILocalVariable(name: "__path", arg: 1, scope: !4682, file: !4683, line: 453, type: !2871)
!4723 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4682, file: !4683, line: 453, type: !4686)
!4724 = !DILocation(line: 0, scope: !4682)
!4725 = !DILocation(line: 455, column: 10, scope: !4682)
!4726 = !DILocation(line: 455, column: 3, scope: !4682)
!4727 = distinct !DISubprogram(name: "lstat", scope: !4683, file: !4683, line: 460, type: !4684, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4728)
!4728 = !{!4729, !4730}
!4729 = !DILocalVariable(name: "__path", arg: 1, scope: !4727, file: !4683, line: 460, type: !2871)
!4730 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4727, file: !4683, line: 460, type: !4686)
!4731 = !DILocation(line: 0, scope: !4727)
!4732 = !DILocation(line: 462, column: 10, scope: !4727)
!4733 = !DILocation(line: 462, column: 3, scope: !4727)
!4734 = distinct !DISubprogram(name: "fstat", scope: !4683, file: !4683, line: 467, type: !4735, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4737)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{!1249, !1249, !4686}
!4737 = !{!4738, !4739}
!4738 = !DILocalVariable(name: "__fd", arg: 1, scope: !4734, file: !4683, line: 467, type: !1249)
!4739 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4734, file: !4683, line: 467, type: !4686)
!4740 = !DILocation(line: 0, scope: !4734)
!4741 = !DILocation(line: 469, column: 10, scope: !4734)
!4742 = !DILocation(line: 469, column: 3, scope: !4734)
!4743 = distinct !DISubprogram(name: "fstatat", scope: !4683, file: !4683, line: 474, type: !4744, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4746)
!4744 = !DISubroutineType(types: !4745)
!4745 = !{!1249, !1249, !2871, !4686, !1249}
!4746 = !{!4747, !4748, !4749, !4750}
!4747 = !DILocalVariable(name: "__fd", arg: 1, scope: !4743, file: !4683, line: 474, type: !1249)
!4748 = !DILocalVariable(name: "__filename", arg: 2, scope: !4743, file: !4683, line: 474, type: !2871)
!4749 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !4743, file: !4683, line: 474, type: !4686)
!4750 = !DILocalVariable(name: "__flag", arg: 4, scope: !4743, file: !4683, line: 474, type: !1249)
!4751 = !DILocation(line: 0, scope: !4743)
!4752 = !DILocation(line: 477, column: 10, scope: !4743)
!4753 = !DILocation(line: 477, column: 3, scope: !4743)
!4754 = distinct !DISubprogram(name: "mknod", scope: !4683, file: !4683, line: 483, type: !4755, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4757)
!4755 = !DISubroutineType(types: !4756)
!4756 = !{!1249, !2871, !4697, !4691}
!4757 = !{!4758, !4759, !4760}
!4758 = !DILocalVariable(name: "__path", arg: 1, scope: !4754, file: !4683, line: 483, type: !2871)
!4759 = !DILocalVariable(name: "__mode", arg: 2, scope: !4754, file: !4683, line: 483, type: !4697)
!4760 = !DILocalVariable(name: "__dev", arg: 3, scope: !4754, file: !4683, line: 483, type: !4691)
!4761 = !DILocation(line: 0, scope: !4754)
!4762 = !DILocation(line: 485, column: 10, scope: !4754)
!4763 = !DILocation(line: 485, column: 3, scope: !4754)
!4764 = distinct !DISubprogram(name: "mknodat", scope: !4683, file: !4683, line: 491, type: !4765, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4767)
!4765 = !DISubroutineType(types: !4766)
!4766 = !{!1249, !1249, !2871, !4697, !4691}
!4767 = !{!4768, !4769, !4770, !4771}
!4768 = !DILocalVariable(name: "__fd", arg: 1, scope: !4764, file: !4683, line: 491, type: !1249)
!4769 = !DILocalVariable(name: "__path", arg: 2, scope: !4764, file: !4683, line: 491, type: !2871)
!4770 = !DILocalVariable(name: "__mode", arg: 3, scope: !4764, file: !4683, line: 491, type: !4697)
!4771 = !DILocalVariable(name: "__dev", arg: 4, scope: !4764, file: !4683, line: 491, type: !4691)
!4772 = !DILocation(line: 0, scope: !4764)
!4773 = !DILocation(line: 494, column: 10, scope: !4764)
!4774 = !DILocation(line: 494, column: 3, scope: !4764)
!4775 = distinct !DISubprogram(name: "stat64", scope: !4683, file: !4683, line: 502, type: !4776, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4798)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{!1249, !2871, !4778}
!4778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4779, size: 64)
!4779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !4688, line: 119, size: 1152, elements: !4780)
!4780 = !{!4781, !4782, !4784, !4785, !4786, !4787, !4788, !4789, !4790, !4791, !4792, !4794, !4795, !4796, !4797}
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !4779, file: !4688, line: 121, baseType: !4691, size: 64)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !4779, file: !4688, line: 123, baseType: !4783, size: 64, offset: 64)
!4783 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !4442, line: 149, baseType: !2927)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !4779, file: !4688, line: 124, baseType: !4695, size: 64, offset: 128)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !4779, file: !4688, line: 125, baseType: !4697, size: 32, offset: 192)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !4779, file: !4688, line: 132, baseType: !4699, size: 32, offset: 224)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !4779, file: !4688, line: 133, baseType: !4701, size: 32, offset: 256)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !4779, file: !4688, line: 135, baseType: !1249, size: 32, offset: 288)
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !4779, file: !4688, line: 136, baseType: !4691, size: 64, offset: 320)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !4779, file: !4688, line: 137, baseType: !4441, size: 64, offset: 384)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !4779, file: !4688, line: 143, baseType: !4706, size: 64, offset: 448)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !4779, file: !4688, line: 144, baseType: !4793, size: 64, offset: 512)
!4793 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !4442, line: 180, baseType: !2929)
!4794 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !4779, file: !4688, line: 152, baseType: !4710, size: 128, offset: 576)
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !4779, file: !4688, line: 153, baseType: !4710, size: 128, offset: 704)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !4779, file: !4688, line: 154, baseType: !4710, size: 128, offset: 832)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !4779, file: !4688, line: 164, baseType: !4720, size: 192, offset: 960)
!4798 = !{!4799, !4800}
!4799 = !DILocalVariable(name: "__path", arg: 1, scope: !4775, file: !4683, line: 502, type: !2871)
!4800 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4775, file: !4683, line: 502, type: !4778)
!4801 = !DILocation(line: 0, scope: !4775)
!4802 = !DILocation(line: 504, column: 10, scope: !4775)
!4803 = !DILocation(line: 504, column: 3, scope: !4775)
!4804 = distinct !DISubprogram(name: "lstat64", scope: !4683, file: !4683, line: 509, type: !4776, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4805)
!4805 = !{!4806, !4807}
!4806 = !DILocalVariable(name: "__path", arg: 1, scope: !4804, file: !4683, line: 509, type: !2871)
!4807 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4804, file: !4683, line: 509, type: !4778)
!4808 = !DILocation(line: 0, scope: !4804)
!4809 = !DILocation(line: 511, column: 10, scope: !4804)
!4810 = !DILocation(line: 511, column: 3, scope: !4804)
!4811 = distinct !DISubprogram(name: "fstat64", scope: !4683, file: !4683, line: 516, type: !4812, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4814)
!4812 = !DISubroutineType(types: !4813)
!4813 = !{!1249, !1249, !4778}
!4814 = !{!4815, !4816}
!4815 = !DILocalVariable(name: "__fd", arg: 1, scope: !4811, file: !4683, line: 516, type: !1249)
!4816 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !4811, file: !4683, line: 516, type: !4778)
!4817 = !DILocation(line: 0, scope: !4811)
!4818 = !DILocation(line: 518, column: 10, scope: !4811)
!4819 = !DILocation(line: 518, column: 3, scope: !4811)
!4820 = distinct !DISubprogram(name: "fstatat64", scope: !4683, file: !4683, line: 523, type: !4821, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4823)
!4821 = !DISubroutineType(types: !4822)
!4822 = !{!1249, !1249, !2871, !4778, !1249}
!4823 = !{!4824, !4825, !4826, !4827}
!4824 = !DILocalVariable(name: "__fd", arg: 1, scope: !4820, file: !4683, line: 523, type: !1249)
!4825 = !DILocalVariable(name: "__filename", arg: 2, scope: !4820, file: !4683, line: 523, type: !2871)
!4826 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !4820, file: !4683, line: 523, type: !4778)
!4827 = !DILocalVariable(name: "__flag", arg: 4, scope: !4820, file: !4683, line: 523, type: !1249)
!4828 = !DILocation(line: 0, scope: !4820)
!4829 = !DILocation(line: 526, column: 10, scope: !4820)
!4830 = !DILocation(line: 526, column: 3, scope: !4820)
!4831 = distinct !DISubprogram(name: "is_builtin_name", scope: !3, file: !3, line: 235, type: !4832, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4834)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{!2866, !2871}
!4834 = !{!4835}
!4835 = !DILocalVariable(name: "name", arg: 1, scope: !4831, file: !3, line: 235, type: !2871)
!4836 = !DILocation(line: 0, scope: !4831)
!4837 = !DILocation(line: 237, column: 7, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 237, column: 7)
!4839 = !DILocation(line: 237, column: 40, scope: !4838)
!4840 = !DILocation(line: 237, column: 7, scope: !4831)
!4841 = !DILocation(line: 239, column: 7, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 239, column: 7)
!4843 = !DILocation(line: 239, column: 36, scope: !4842)
!4844 = !DILocation(line: 242, column: 1, scope: !4831)
!4845 = distinct !DISubprogram(name: "is_builtin_fn", scope: !3, file: !3, line: 248, type: !4846, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4848)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!2866, !2914}
!4848 = !{!4849}
!4849 = !DILocalVariable(name: "decl", arg: 1, scope: !4845, file: !3, line: 248, type: !2914)
!4850 = !DILocation(line: 0, scope: !4845)
!4851 = !DILocation(line: 250, column: 10, scope: !4845)
!4852 = !DILocation(line: 250, column: 27, scope: !4845)
!4853 = !DILocation(line: 250, column: 44, scope: !4845)
!4854 = !DILocation(line: 250, column: 47, scope: !4845)
!4855 = !DILocation(line: 250, column: 3, scope: !4845)
!4856 = distinct !DISubprogram(name: "get_object_alignment", scope: !3, file: !3, line: 273, type: !4857, scopeLine: 274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4859)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{!1249, !2914, !7, !7}
!4859 = !{!4860, !4861, !4862, !4863, !4864, !4867, !4868, !4869, !4870, !4871, !4872, !4874, !4877}
!4860 = !DILocalVariable(name: "exp", arg: 1, scope: !4856, file: !3, line: 273, type: !2914)
!4861 = !DILocalVariable(name: "align", arg: 2, scope: !4856, file: !3, line: 273, type: !7)
!4862 = !DILocalVariable(name: "max_align", arg: 3, scope: !4856, file: !3, line: 273, type: !7)
!4863 = !DILocalVariable(name: "inner", scope: !4856, file: !3, line: 275, type: !7)
!4864 = !DILocalVariable(name: "bitsize", scope: !4865, file: !3, line: 280, type: !2929)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 279, column: 4)
!4866 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 278, column: 7)
!4867 = !DILocalVariable(name: "bitpos", scope: !4865, file: !3, line: 280, type: !2929)
!4868 = !DILocalVariable(name: "offset", scope: !4865, file: !3, line: 281, type: !2914)
!4869 = !DILocalVariable(name: "mode", scope: !4865, file: !3, line: 282, type: !5)
!4870 = !DILocalVariable(name: "unsignedp", scope: !4865, file: !3, line: 283, type: !1249)
!4871 = !DILocalVariable(name: "volatilep", scope: !4865, file: !3, line: 283, type: !1249)
!4872 = !DILocalVariable(name: "next_offset", scope: !4873, file: !3, line: 291, type: !2914)
!4873 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 290, column: 2)
!4874 = !DILocalVariable(name: "offset_bits", scope: !4875, file: !3, line: 304, type: !7)
!4875 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 301, column: 6)
!4876 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 300, column: 8)
!4877 = !DILocalVariable(name: "offset_factor", scope: !4878, file: !3, line: 315, type: !7)
!4878 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 312, column: 6)
!4879 = distinct !DILexicalBlock(scope: !4876, file: !3, line: 310, column: 13)
!4880 = !DILocation(line: 0, scope: !4856)
!4881 = !DILocation(line: 278, column: 7, scope: !4866)
!4882 = !DILocation(line: 278, column: 7, scope: !4856)
!4883 = !DILocation(line: 280, column: 7, scope: !4865)
!4884 = !DILocation(line: 281, column: 7, scope: !4865)
!4885 = !DILocation(line: 282, column: 7, scope: !4865)
!4886 = !DILocation(line: 283, column: 7, scope: !4865)
!4887 = !DILocation(line: 0, scope: !4865)
!4888 = !DILocation(line: 285, column: 13, scope: !4865)
!4889 = !DILocation(line: 287, column: 11, scope: !4890)
!4890 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 287, column: 11)
!4891 = !DILocation(line: 287, column: 11, scope: !4865)
!4892 = !DILocation(line: 288, column: 10, scope: !4890)
!4893 = !DILocation(line: 0, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 294, column: 6)
!4895 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 293, column: 8)
!4896 = !DILocation(line: 289, column: 7, scope: !4865)
!4897 = !DILocation(line: 289, column: 14, scope: !4865)
!4898 = !DILocation(line: 293, column: 8, scope: !4895)
!4899 = !DILocation(line: 293, column: 27, scope: !4895)
!4900 = !DILocation(line: 293, column: 8, scope: !4873)
!4901 = !DILocation(line: 295, column: 22, scope: !4894)
!4902 = !DILocation(line: 0, scope: !4873)
!4903 = !DILocation(line: 296, column: 17, scope: !4894)
!4904 = !DILocation(line: 296, column: 15, scope: !4894)
!4905 = !DILocation(line: 297, column: 6, scope: !4894)
!4906 = !DILocation(line: 300, column: 23, scope: !4876)
!4907 = !DILocation(line: 0, scope: !4895)
!4908 = !DILocation(line: 300, column: 8, scope: !4876)
!4909 = !DILocation(line: 0, scope: !4876)
!4910 = !DILocation(line: 300, column: 8, scope: !4873)
!4911 = !DILocation(line: 305, column: 17, scope: !4875)
!4912 = !DILocation(line: 305, column: 6, scope: !4875)
!4913 = !DILocation(line: 305, column: 42, scope: !4875)
!4914 = !DILocation(line: 0, scope: !4875)
!4915 = !DILocation(line: 307, column: 12, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 307, column: 12)
!4917 = !DILocation(line: 307, column: 12, scope: !4875)
!4918 = !DILocation(line: 308, column: 11, scope: !4916)
!4919 = !DILocation(line: 310, column: 13, scope: !4879)
!4920 = !DILocation(line: 310, column: 32, scope: !4879)
!4921 = !DILocation(line: 311, column: 6, scope: !4879)
!4922 = !DILocation(line: 311, column: 24, scope: !4879)
!4923 = !DILocation(line: 311, column: 9, scope: !4879)
!4924 = !DILocation(line: 310, column: 13, scope: !4876)
!4925 = !DILocation(line: 316, column: 31, scope: !4878)
!4926 = !DILocation(line: 316, column: 17, scope: !4878)
!4927 = !DILocation(line: 316, column: 6, scope: !4878)
!4928 = !DILocation(line: 317, column: 6, scope: !4878)
!4929 = !DILocation(line: 0, scope: !4878)
!4930 = !DILocation(line: 319, column: 12, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4878, file: !3, line: 319, column: 12)
!4932 = !DILocation(line: 319, column: 12, scope: !4878)
!4933 = !DILocation(line: 320, column: 11, scope: !4931)
!4934 = !DILocation(line: 324, column: 16, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4879, file: !3, line: 323, column: 6)
!4936 = !DILocation(line: 325, column: 8, scope: !4935)
!4937 = !DILocation(line: 327, column: 11, scope: !4873)
!4938 = !DILocation(line: 328, column: 2, scope: !4865)
!4939 = distinct !{!4939, !4896, !4938}
!4940 = !DILocation(line: 329, column: 5, scope: !4866)
!4941 = !DILocation(line: 329, column: 5, scope: !4865)
!4942 = !DILocation(line: 330, column: 7, scope: !4943)
!4943 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 330, column: 7)
!4944 = !DILocation(line: 330, column: 23, scope: !4943)
!4945 = !DILocation(line: 330, column: 7, scope: !4856)
!4946 = !DILocation(line: 331, column: 11, scope: !4943)
!4947 = !DILocation(line: 0, scope: !4948)
!4948 = distinct !DILexicalBlock(scope: !4856, file: !3, line: 332, column: 7)
!4949 = !DILocation(line: 332, column: 7, scope: !4948)
!4950 = !DILocation(line: 331, column: 5, scope: !4943)
!4951 = !DILocation(line: 333, column: 7, scope: !4948)
!4952 = !DILocation(line: 333, column: 26, scope: !4948)
!4953 = !DILocation(line: 332, column: 7, scope: !4856)
!4954 = !DILocation(line: 334, column: 13, scope: !4948)
!4955 = !DILocation(line: 336, column: 12, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 336, column: 12)
!4957 = !DILocation(line: 336, column: 12, scope: !4948)
!4958 = !DILocation(line: 337, column: 13, scope: !4956)
!4959 = !DILocation(line: 339, column: 28, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 339, column: 12)
!4961 = !DILocation(line: 340, column: 5, scope: !4960)
!4962 = !DILocation(line: 340, column: 24, scope: !4960)
!4963 = !DILocation(line: 339, column: 12, scope: !4956)
!4964 = !DILocation(line: 341, column: 13, scope: !4960)
!4965 = !DILocation(line: 343, column: 13, scope: !4960)
!4966 = !DILocation(line: 344, column: 10, scope: !4856)
!4967 = !DILocation(line: 344, column: 3, scope: !4856)
!4968 = distinct !DISubprogram(name: "handled_component_p", scope: !135, file: !135, line: 4551, type: !4969, scopeLine: 4552, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4972)
!4969 = !DISubroutineType(types: !4970)
!4970 = !{!2866, !4971}
!4971 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !2915, line: 59, baseType: !4297)
!4972 = !{!4973}
!4973 = !DILocalVariable(name: "t", arg: 1, scope: !4968, file: !135, line: 4551, type: !4971)
!4974 = !DILocation(line: 0, scope: !4968)
!4975 = !DILocation(line: 4553, column: 11, scope: !4968)
!4976 = !DILocation(line: 4553, column: 3, scope: !4968)
!4977 = !DILocation(line: 4565, column: 7, scope: !4978)
!4978 = distinct !DILexicalBlock(scope: !4968, file: !135, line: 4554, column: 5)
!4979 = !DILocation(line: 0, scope: !4978)
!4980 = !DILocation(line: 4567, column: 1, scope: !4968)
!4981 = distinct !DISubprogram(name: "can_trust_pointer_alignment", scope: !3, file: !3, line: 351, type: !4372, scopeLine: 352, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!4982 = !DILocation(line: 354, column: 11, scope: !4981)
!4983 = !DILocation(line: 354, column: 20, scope: !4981)
!4984 = !DILocation(line: 354, column: 10, scope: !4981)
!4985 = !DILocation(line: 354, column: 3, scope: !4981)
!4986 = distinct !DISubprogram(name: "get_pointer_alignment", scope: !3, file: !3, line: 366, type: !4987, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4989)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!1249, !2914, !7}
!4989 = !{!4990, !4991, !4992, !4993}
!4990 = !DILocalVariable(name: "exp", arg: 1, scope: !4986, file: !3, line: 366, type: !2914)
!4991 = !DILocalVariable(name: "max_align", arg: 2, scope: !4986, file: !3, line: 366, type: !7)
!4992 = !DILocalVariable(name: "align", scope: !4986, file: !3, line: 368, type: !7)
!4993 = !DILocalVariable(name: "inner", scope: !4986, file: !3, line: 368, type: !7)
!4994 = !DILocation(line: 0, scope: !4986)
!4995 = !DILocation(line: 370, column: 8, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 370, column: 7)
!4997 = !DILocation(line: 370, column: 7, scope: !4986)
!4998 = !DILocation(line: 373, column: 8, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 373, column: 7)
!5000 = !DILocation(line: 373, column: 7, scope: !4986)
!5001 = !DILocation(line: 376, column: 11, scope: !4986)
!5002 = !DILocation(line: 377, column: 11, scope: !4986)
!5003 = !DILocation(line: 379, column: 3, scope: !4986)
!5004 = !DILocation(line: 377, column: 9, scope: !4986)
!5005 = !DILocation(line: 381, column: 15, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 380, column: 5)
!5007 = !DILocation(line: 381, column: 7, scope: !5006)
!5008 = !DILocation(line: 384, column: 10, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 382, column: 2)
!5010 = !DILocation(line: 385, column: 10, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 385, column: 8)
!5012 = !DILocation(line: 385, column: 8, scope: !5009)
!5013 = !DILocation(line: 388, column: 12, scope: !5009)
!5014 = !DILocation(line: 389, column: 12, scope: !5009)
!5015 = !DILocation(line: 390, column: 4, scope: !5009)
!5016 = !DILocation(line: 396, column: 25, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 396, column: 8)
!5018 = !DILocation(line: 396, column: 10, scope: !5017)
!5019 = !DILocation(line: 396, column: 8, scope: !5009)
!5020 = !DILocation(line: 399, column: 4, scope: !5009)
!5021 = !DILocation(line: 399, column: 27, scope: !5009)
!5022 = !DILocation(line: 399, column: 13, scope: !5009)
!5023 = !DILocation(line: 400, column: 18, scope: !5009)
!5024 = !DILocation(line: 400, column: 34, scope: !5009)
!5025 = !DILocation(line: 400, column: 7, scope: !5009)
!5026 = !DILocation(line: 400, column: 5, scope: !5009)
!5027 = !DILocation(line: 401, column: 4, scope: !5009)
!5028 = !DILocation(line: 402, column: 16, scope: !5009)
!5029 = distinct !{!5029, !5020, !5030}
!5030 = !DILocation(line: 402, column: 20, scope: !5009)
!5031 = !DILocation(line: 404, column: 10, scope: !5009)
!5032 = !DILocation(line: 405, column: 4, scope: !5009)
!5033 = !DILocation(line: 409, column: 33, scope: !5009)
!5034 = !DILocation(line: 409, column: 11, scope: !5009)
!5035 = !DILocation(line: 409, column: 4, scope: !5009)
!5036 = !DILocation(line: 0, scope: !5009)
!5037 = distinct !{!5037, !5003, !5038}
!5038 = !DILocation(line: 414, column: 5, scope: !4986)
!5039 = !DILocation(line: 415, column: 1, scope: !4986)
!5040 = distinct !DISubprogram(name: "c_strlen", scope: !3, file: !3, line: 434, type: !5041, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5043)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{!2914, !2914, !1249}
!5043 = !{!5044, !5045, !5046, !5047, !5048, !5049, !5050, !5051, !5054, !5055}
!5044 = !DILocalVariable(name: "src", arg: 1, scope: !5040, file: !3, line: 434, type: !2914)
!5045 = !DILocalVariable(name: "only_value", arg: 2, scope: !5040, file: !3, line: 434, type: !1249)
!5046 = !DILocalVariable(name: "offset_node", scope: !5040, file: !3, line: 436, type: !2914)
!5047 = !DILocalVariable(name: "offset", scope: !5040, file: !3, line: 437, type: !2929)
!5048 = !DILocalVariable(name: "max", scope: !5040, file: !3, line: 438, type: !1249)
!5049 = !DILocalVariable(name: "ptr", scope: !5040, file: !3, line: 439, type: !2871)
!5050 = !DILocalVariable(name: "loc", scope: !5040, file: !3, line: 440, type: !2998)
!5051 = !DILocalVariable(name: "len1", scope: !5052, file: !3, line: 446, type: !2914)
!5052 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 445, column: 5)
!5053 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 443, column: 7)
!5054 = !DILocalVariable(name: "len2", scope: !5052, file: !3, line: 446, type: !2914)
!5055 = !DILocalVariable(name: "i", scope: !5056, file: !3, line: 475, type: !1249)
!5056 = distinct !DILexicalBlock(scope: !5057, file: !3, line: 471, column: 5)
!5057 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 470, column: 7)
!5058 = !DILocation(line: 0, scope: !5040)
!5059 = !DILocation(line: 436, column: 3, scope: !5040)
!5060 = !DILocation(line: 442, column: 3, scope: !5040)
!5061 = !DILocation(line: 443, column: 7, scope: !5053)
!5062 = !DILocation(line: 443, column: 23, scope: !5053)
!5063 = !DILocation(line: 444, column: 7, scope: !5053)
!5064 = !DILocation(line: 444, column: 11, scope: !5053)
!5065 = !DILocation(line: 444, column: 22, scope: !5053)
!5066 = !DILocation(line: 444, column: 26, scope: !5053)
!5067 = !DILocation(line: 443, column: 7, scope: !5040)
!5068 = !DILocation(line: 448, column: 24, scope: !5052)
!5069 = !DILocation(line: 448, column: 14, scope: !5052)
!5070 = !DILocation(line: 0, scope: !5052)
!5071 = !DILocation(line: 449, column: 24, scope: !5052)
!5072 = !DILocation(line: 449, column: 14, scope: !5052)
!5073 = !DILocation(line: 450, column: 11, scope: !5074)
!5074 = distinct !DILexicalBlock(scope: !5052, file: !3, line: 450, column: 11)
!5075 = !DILocation(line: 454, column: 7, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 454, column: 7)
!5077 = !DILocation(line: 454, column: 23, scope: !5076)
!5078 = !DILocation(line: 455, column: 7, scope: !5076)
!5079 = !DILocation(line: 455, column: 11, scope: !5076)
!5080 = !DILocation(line: 455, column: 22, scope: !5076)
!5081 = !DILocation(line: 455, column: 26, scope: !5076)
!5082 = !DILocation(line: 454, column: 7, scope: !5040)
!5083 = !DILocation(line: 456, column: 22, scope: !5076)
!5084 = !DILocation(line: 456, column: 12, scope: !5076)
!5085 = !DILocation(line: 456, column: 5, scope: !5076)
!5086 = !DILocation(line: 458, column: 7, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 458, column: 7)
!5088 = !DILocation(line: 458, column: 7, scope: !5040)
!5089 = !DILocation(line: 459, column: 11, scope: !5087)
!5090 = !DILocation(line: 461, column: 11, scope: !5087)
!5091 = !DILocation(line: 0, scope: !5087)
!5092 = !DILocation(line: 463, column: 9, scope: !5040)
!5093 = !DILocation(line: 464, column: 11, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 464, column: 7)
!5095 = !DILocation(line: 464, column: 7, scope: !5040)
!5096 = !DILocation(line: 467, column: 9, scope: !5040)
!5097 = !DILocation(line: 467, column: 34, scope: !5040)
!5098 = !DILocation(line: 468, column: 9, scope: !5040)
!5099 = !DILocation(line: 470, column: 7, scope: !5057)
!5100 = !DILocation(line: 470, column: 19, scope: !5057)
!5101 = !DILocation(line: 470, column: 22, scope: !5057)
!5102 = !DILocation(line: 470, column: 46, scope: !5057)
!5103 = !DILocation(line: 470, column: 7, scope: !5040)
!5104 = !DILocation(line: 477, column: 7, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5056, file: !3, line: 477, column: 7)
!5106 = !DILocation(line: 0, scope: !5105)
!5107 = !DILocation(line: 0, scope: !5056)
!5108 = !DILocation(line: 477, column: 21, scope: !5109)
!5109 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 477, column: 7)
!5110 = !DILocation(line: 478, column: 6, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5109, file: !3, line: 478, column: 6)
!5112 = !DILocation(line: 478, column: 13, scope: !5111)
!5113 = !DILocation(line: 478, column: 6, scope: !5109)
!5114 = !DILocation(line: 477, column: 29, scope: !5109)
!5115 = !DILocation(line: 477, column: 7, scope: !5109)
!5116 = distinct !{!5116, !5104, !5117}
!5117 = !DILocation(line: 479, column: 11, scope: !5105)
!5118 = !DILocation(line: 488, column: 36, scope: !5056)
!5119 = !DILocation(line: 488, column: 52, scope: !5056)
!5120 = !DILocation(line: 488, column: 14, scope: !5056)
!5121 = !DILocation(line: 488, column: 7, scope: !5056)
!5122 = !DILocation(line: 493, column: 7, scope: !5040)
!5123 = !DILocation(line: 495, column: 14, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 495, column: 12)
!5125 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 493, column: 7)
!5126 = !DILocation(line: 495, column: 12, scope: !5125)
!5127 = !DILocation(line: 498, column: 28, scope: !5124)
!5128 = !DILocation(line: 498, column: 14, scope: !5124)
!5129 = !DILocation(line: 0, scope: !5125)
!5130 = !DILocation(line: 502, column: 14, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5040, file: !3, line: 502, column: 7)
!5132 = !DILocation(line: 502, column: 30, scope: !5131)
!5133 = !DILocation(line: 502, column: 28, scope: !5131)
!5134 = !DILocation(line: 502, column: 18, scope: !5131)
!5135 = !DILocation(line: 505, column: 13, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 505, column: 11)
!5137 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 503, column: 5)
!5138 = !DILocation(line: 505, column: 11, scope: !5137)
!5139 = !DILocation(line: 507, column: 11, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 506, column: 9)
!5141 = !DILocation(line: 508, column: 33, scope: !5140)
!5142 = !DILocation(line: 509, column: 9, scope: !5140)
!5143 = !DILocation(line: 519, column: 10, scope: !5040)
!5144 = !DILocation(line: 519, column: 3, scope: !5040)
!5145 = !DILocation(line: 520, column: 1, scope: !5040)
!5146 = distinct !DISubprogram(name: "expand_builtin_setjmp_setup", scope: !3, file: !3, line: 711, type: !5147, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5149)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{null, !3048, !3048}
!5149 = !{!5150, !5151, !5152, !5153, !5154}
!5150 = !DILocalVariable(name: "buf_addr", arg: 1, scope: !5146, file: !3, line: 711, type: !3048)
!5151 = !DILocalVariable(name: "receiver_label", arg: 2, scope: !5146, file: !3, line: 711, type: !3048)
!5152 = !DILocalVariable(name: "sa_mode", scope: !5146, file: !3, line: 713, type: !5)
!5153 = !DILocalVariable(name: "stack_save", scope: !5146, file: !3, line: 714, type: !3048)
!5154 = !DILocalVariable(name: "mem", scope: !5146, file: !3, line: 715, type: !3048)
!5155 = !DILocation(line: 0, scope: !5146)
!5156 = !DILocation(line: 714, column: 3, scope: !5146)
!5157 = !DILocation(line: 717, column: 7, scope: !5158)
!5158 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 717, column: 7)
!5159 = !DILocation(line: 717, column: 24, scope: !5158)
!5160 = !DILocation(line: 717, column: 7, scope: !5146)
!5161 = !DILocation(line: 718, column: 24, scope: !5158)
!5162 = !DILocation(line: 718, column: 22, scope: !5158)
!5163 = !DILocation(line: 718, column: 5, scope: !5158)
!5164 = !DILocation(line: 720, column: 14, scope: !5146)
!5165 = !DILocation(line: 722, column: 32, scope: !5146)
!5166 = !DILocation(line: 722, column: 14, scope: !5146)
!5167 = !DILocation(line: 728, column: 9, scope: !5146)
!5168 = !DILocation(line: 729, column: 27, scope: !5146)
!5169 = !DILocation(line: 729, column: 3, scope: !5146)
!5170 = !DILocation(line: 730, column: 32, scope: !5146)
!5171 = !DILocation(line: 730, column: 24, scope: !5146)
!5172 = !DILocation(line: 730, column: 3, scope: !5146)
!5173 = !DILocation(line: 732, column: 54, scope: !5146)
!5174 = !DILocation(line: 732, column: 29, scope: !5146)
!5175 = !DILocation(line: 732, column: 9, scope: !5146)
!5176 = !DILocation(line: 733, column: 27, scope: !5146)
!5177 = !DILocation(line: 733, column: 3, scope: !5146)
!5178 = !DILocation(line: 735, column: 19, scope: !5146)
!5179 = !DILocation(line: 736, column: 23, scope: !5146)
!5180 = !DILocation(line: 736, column: 5, scope: !5146)
!5181 = !DILocation(line: 735, column: 3, scope: !5146)
!5182 = !DILocation(line: 740, column: 13, scope: !5146)
!5183 = !DILocation(line: 740, column: 11, scope: !5146)
!5184 = !DILocation(line: 739, column: 8, scope: !5146)
!5185 = !DILocation(line: 738, column: 16, scope: !5146)
!5186 = !DILocation(line: 738, column: 14, scope: !5146)
!5187 = !DILocation(line: 741, column: 34, scope: !5146)
!5188 = !DILocation(line: 741, column: 3, scope: !5146)
!5189 = !DILocation(line: 742, column: 3, scope: !5146)
!5190 = !DILocation(line: 752, column: 3, scope: !5146)
!5191 = !DILocation(line: 752, column: 9, scope: !5146)
!5192 = !DILocation(line: 752, column: 22, scope: !5146)
!5193 = !DILocation(line: 755, column: 28, scope: !5146)
!5194 = !DILocation(line: 756, column: 1, scope: !5146)
!5195 = !DILocation(line: 0, scope: !4310)
!5196 = !DILocation(line: 768, column: 13, scope: !4310)
!5197 = !DILocation(line: 768, column: 3, scope: !4310)
!5198 = !DILocation(line: 772, column: 25, scope: !4310)
!5199 = !DILocation(line: 772, column: 39, scope: !4310)
!5200 = !DILocation(line: 772, column: 11, scope: !4310)
!5201 = !DILocation(line: 773, column: 7, scope: !5202)
!5202 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 773, column: 7)
!5203 = !DILocation(line: 773, column: 13, scope: !5202)
!5204 = !DILocation(line: 773, column: 16, scope: !5202)
!5205 = !DILocation(line: 773, column: 7, scope: !4310)
!5206 = !DILocation(line: 774, column: 5, scope: !5202)
!5207 = !DILocation(line: 782, column: 23, scope: !5208)
!5208 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 781, column: 5)
!5209 = !DILocation(line: 782, column: 47, scope: !5208)
!5210 = !DILocation(line: 782, column: 7, scope: !5208)
!5211 = !DILocation(line: 785, column: 21, scope: !5208)
!5212 = !DILocation(line: 785, column: 7, scope: !5208)
!5213 = !DILocation(line: 789, column: 7, scope: !4318)
!5214 = !DILocation(line: 789, column: 7, scope: !4310)
!5215 = !DILocation(line: 795, column: 7, scope: !5216)
!5216 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 795, column: 7)
!5217 = !DILocation(line: 0, scope: !5216)
!5218 = !DILocation(line: 0, scope: !4317)
!5219 = !DILocation(line: 795, column: 21, scope: !5220)
!5220 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 795, column: 7)
!5221 = !DILocation(line: 796, column: 24, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5220, file: !3, line: 796, column: 6)
!5223 = !DILocation(line: 797, column: 6, scope: !5222)
!5224 = !DILocation(line: 797, column: 25, scope: !5222)
!5225 = !DILocation(line: 796, column: 6, scope: !5220)
!5226 = !DILocation(line: 795, column: 48, scope: !5220)
!5227 = !DILocation(line: 795, column: 7, scope: !5220)
!5228 = distinct !{!5228, !5215, !5229}
!5229 = !DILocation(line: 798, column: 4, scope: !5216)
!5230 = !DILocation(line: 800, column: 13, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 800, column: 11)
!5232 = !DILocation(line: 800, column: 11, scope: !4317)
!5233 = !DILocation(line: 805, column: 31, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 802, column: 2)
!5235 = !DILocation(line: 806, column: 19, scope: !5234)
!5236 = !DILocation(line: 806, column: 6, scope: !5234)
!5237 = !DILocation(line: 805, column: 4, scope: !5234)
!5238 = !DILocation(line: 807, column: 2, scope: !5234)
!5239 = !DILocation(line: 812, column: 7, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !4310, file: !3, line: 812, column: 7)
!5241 = !DILocation(line: 812, column: 7, scope: !4310)
!5242 = !DILocation(line: 813, column: 16, scope: !5240)
!5243 = !DILocation(line: 813, column: 5, scope: !5240)
!5244 = !DILocation(line: 826, column: 14, scope: !4310)
!5245 = !DILocation(line: 826, column: 3, scope: !4310)
!5246 = !DILocation(line: 827, column: 1, scope: !4310)
!5247 = distinct !DISubprogram(name: "mathfn_built_in", scope: !3, file: !3, line: 1871, type: !5248, scopeLine: 1872, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5250)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{!2914, !2914, !527}
!5250 = !{!5251, !5252}
!5251 = !DILocalVariable(name: "type", arg: 1, scope: !5247, file: !3, line: 1871, type: !2914)
!5252 = !DILocalVariable(name: "fn", arg: 2, scope: !5247, file: !3, line: 1871, type: !527)
!5253 = !DILocation(line: 0, scope: !5247)
!5254 = !DILocation(line: 1873, column: 10, scope: !5247)
!5255 = !DILocation(line: 1873, column: 3, scope: !5247)
!5256 = distinct !DISubprogram(name: "mathfn_built_in_1", scope: !3, file: !3, line: 1762, type: !5257, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5259)
!5257 = !DISubroutineType(types: !5258)
!5258 = !{!2914, !2914, !527, !2866}
!5259 = !{!5260, !5261, !5262, !5263, !5267, !5268, !5269}
!5260 = !DILocalVariable(name: "type", arg: 1, scope: !5256, file: !3, line: 1762, type: !2914)
!5261 = !DILocalVariable(name: "fn", arg: 2, scope: !5256, file: !3, line: 1762, type: !527)
!5262 = !DILocalVariable(name: "implicit", arg: 3, scope: !5256, file: !3, line: 1762, type: !2866)
!5263 = !DILocalVariable(name: "fn_arr", scope: !5256, file: !3, line: 1764, type: !5264)
!5264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5265)
!5265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5266, size: 64)
!5266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2914)
!5267 = !DILocalVariable(name: "fcode", scope: !5256, file: !3, line: 1766, type: !527)
!5268 = !DILocalVariable(name: "fcodef", scope: !5256, file: !3, line: 1766, type: !527)
!5269 = !DILocalVariable(name: "fcodel", scope: !5256, file: !3, line: 1766, type: !527)
!5270 = !DILocation(line: 0, scope: !5256)
!5271 = !DILocation(line: 1765, column: 7, scope: !5256)
!5272 = !DILocation(line: 1768, column: 3, scope: !5256)
!5273 = !DILocation(line: 1771, column: 7, scope: !5274)
!5274 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 1769, column: 5)
!5275 = !DILocation(line: 1772, column: 7, scope: !5274)
!5276 = !DILocation(line: 1773, column: 7, scope: !5274)
!5277 = !DILocation(line: 1774, column: 7, scope: !5274)
!5278 = !DILocation(line: 1775, column: 7, scope: !5274)
!5279 = !DILocation(line: 1776, column: 7, scope: !5274)
!5280 = !DILocation(line: 1777, column: 7, scope: !5274)
!5281 = !DILocation(line: 1778, column: 7, scope: !5274)
!5282 = !DILocation(line: 1779, column: 7, scope: !5274)
!5283 = !DILocation(line: 1780, column: 7, scope: !5274)
!5284 = !DILocation(line: 1781, column: 7, scope: !5274)
!5285 = !DILocation(line: 1782, column: 7, scope: !5274)
!5286 = !DILocation(line: 1783, column: 7, scope: !5274)
!5287 = !DILocation(line: 1784, column: 7, scope: !5274)
!5288 = !DILocation(line: 1785, column: 7, scope: !5274)
!5289 = !DILocation(line: 1786, column: 7, scope: !5274)
!5290 = !DILocation(line: 1787, column: 7, scope: !5274)
!5291 = !DILocation(line: 1788, column: 7, scope: !5274)
!5292 = !DILocation(line: 1789, column: 7, scope: !5274)
!5293 = !DILocation(line: 1790, column: 7, scope: !5274)
!5294 = !DILocation(line: 1791, column: 7, scope: !5274)
!5295 = !DILocation(line: 1792, column: 7, scope: !5274)
!5296 = !DILocation(line: 1793, column: 7, scope: !5274)
!5297 = !DILocation(line: 1794, column: 7, scope: !5274)
!5298 = !DILocation(line: 1795, column: 7, scope: !5274)
!5299 = !DILocation(line: 1796, column: 7, scope: !5274)
!5300 = !DILocation(line: 1797, column: 7, scope: !5274)
!5301 = !DILocation(line: 1798, column: 7, scope: !5274)
!5302 = !DILocation(line: 1799, column: 7, scope: !5274)
!5303 = !DILocation(line: 1800, column: 7, scope: !5274)
!5304 = !DILocation(line: 1801, column: 7, scope: !5274)
!5305 = !DILocation(line: 1802, column: 7, scope: !5274)
!5306 = !DILocation(line: 1803, column: 7, scope: !5274)
!5307 = !DILocation(line: 1804, column: 7, scope: !5274)
!5308 = !DILocation(line: 1805, column: 7, scope: !5274)
!5309 = !DILocation(line: 1806, column: 7, scope: !5274)
!5310 = !DILocation(line: 1807, column: 7, scope: !5274)
!5311 = !DILocation(line: 1808, column: 7, scope: !5274)
!5312 = !DILocation(line: 1809, column: 7, scope: !5274)
!5313 = !DILocation(line: 1810, column: 7, scope: !5274)
!5314 = !DILocation(line: 1811, column: 7, scope: !5274)
!5315 = !DILocation(line: 1812, column: 7, scope: !5274)
!5316 = !DILocation(line: 1813, column: 7, scope: !5274)
!5317 = !DILocation(line: 1814, column: 7, scope: !5274)
!5318 = !DILocation(line: 1815, column: 7, scope: !5274)
!5319 = !DILocation(line: 1816, column: 7, scope: !5274)
!5320 = !DILocation(line: 1817, column: 7, scope: !5274)
!5321 = !DILocation(line: 1818, column: 7, scope: !5274)
!5322 = !DILocation(line: 1819, column: 7, scope: !5274)
!5323 = !DILocation(line: 1820, column: 7, scope: !5274)
!5324 = !DILocation(line: 1821, column: 7, scope: !5274)
!5325 = !DILocation(line: 1822, column: 7, scope: !5274)
!5326 = !DILocation(line: 1823, column: 7, scope: !5274)
!5327 = !DILocation(line: 1824, column: 7, scope: !5274)
!5328 = !DILocation(line: 1825, column: 7, scope: !5274)
!5329 = !DILocation(line: 1826, column: 7, scope: !5274)
!5330 = !DILocation(line: 1827, column: 7, scope: !5274)
!5331 = !DILocation(line: 1828, column: 7, scope: !5274)
!5332 = !DILocation(line: 1829, column: 7, scope: !5274)
!5333 = !DILocation(line: 1830, column: 7, scope: !5274)
!5334 = !DILocation(line: 1831, column: 7, scope: !5274)
!5335 = !DILocation(line: 1832, column: 7, scope: !5274)
!5336 = !DILocation(line: 1833, column: 7, scope: !5274)
!5337 = !DILocation(line: 1834, column: 7, scope: !5274)
!5338 = !DILocation(line: 1835, column: 7, scope: !5274)
!5339 = !DILocation(line: 1836, column: 7, scope: !5274)
!5340 = !DILocation(line: 1837, column: 7, scope: !5274)
!5341 = !DILocation(line: 1838, column: 7, scope: !5274)
!5342 = !DILocation(line: 1839, column: 7, scope: !5274)
!5343 = !DILocation(line: 1840, column: 7, scope: !5274)
!5344 = !DILocation(line: 1841, column: 7, scope: !5274)
!5345 = !DILocation(line: 1842, column: 7, scope: !5274)
!5346 = !DILocation(line: 1843, column: 7, scope: !5274)
!5347 = !DILocation(line: 1844, column: 7, scope: !5274)
!5348 = !DILocation(line: 1845, column: 7, scope: !5274)
!5349 = !DILocation(line: 1846, column: 7, scope: !5274)
!5350 = !DILocation(line: 1847, column: 7, scope: !5274)
!5351 = !DILocation(line: 1848, column: 7, scope: !5274)
!5352 = !DILocation(line: 1849, column: 7, scope: !5274)
!5353 = !DILocation(line: 1850, column: 7, scope: !5274)
!5354 = !DILocation(line: 1851, column: 7, scope: !5274)
!5355 = !DILocation(line: 1852, column: 7, scope: !5274)
!5356 = !DILocation(line: 1858, column: 7, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5256, file: !3, line: 1858, column: 7)
!5358 = !DILocation(line: 1858, column: 35, scope: !5357)
!5359 = !DILocation(line: 1858, column: 32, scope: !5357)
!5360 = !DILocation(line: 1858, column: 7, scope: !5256)
!5361 = !DILocation(line: 1859, column: 12, scope: !5357)
!5362 = !DILocation(line: 1859, column: 5, scope: !5357)
!5363 = !DILocation(line: 1860, column: 40, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 1860, column: 12)
!5365 = !DILocation(line: 1860, column: 37, scope: !5364)
!5366 = !DILocation(line: 1860, column: 12, scope: !5357)
!5367 = !DILocation(line: 1861, column: 12, scope: !5364)
!5368 = !DILocation(line: 1861, column: 5, scope: !5364)
!5369 = !DILocation(line: 1862, column: 40, scope: !5370)
!5370 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 1862, column: 12)
!5371 = !DILocation(line: 1862, column: 37, scope: !5370)
!5372 = !DILocation(line: 1862, column: 12, scope: !5364)
!5373 = !DILocation(line: 1863, column: 12, scope: !5370)
!5374 = !DILocation(line: 1863, column: 5, scope: !5370)
!5375 = !DILocation(line: 1866, column: 1, scope: !5256)
!5376 = distinct !DISubprogram(name: "builtin_strncpy_read_str", scope: !3, file: !3, line: 3622, type: !5377, scopeLine: 3624, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5379)
!5377 = !DISubroutineType(types: !5378)
!5378 = !{!3048, !2870, !2929, !5}
!5379 = !{!5380, !5381, !5382, !5383}
!5380 = !DILocalVariable(name: "data", arg: 1, scope: !5376, file: !3, line: 3622, type: !2870)
!5381 = !DILocalVariable(name: "offset", arg: 2, scope: !5376, file: !3, line: 3622, type: !2929)
!5382 = !DILocalVariable(name: "mode", arg: 3, scope: !5376, file: !3, line: 3623, type: !5)
!5383 = !DILocalVariable(name: "str", scope: !5376, file: !3, line: 3625, type: !2871)
!5384 = !DILocation(line: 0, scope: !5376)
!5385 = !DILocation(line: 3627, column: 41, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 3627, column: 7)
!5387 = !DILocation(line: 3627, column: 39, scope: !5386)
!5388 = !DILocation(line: 3627, column: 7, scope: !5376)
!5389 = !DILocation(line: 3628, column: 12, scope: !5386)
!5390 = !DILocation(line: 3628, column: 5, scope: !5386)
!5391 = !DILocation(line: 3630, column: 25, scope: !5376)
!5392 = !DILocation(line: 3630, column: 10, scope: !5376)
!5393 = !DILocation(line: 3630, column: 3, scope: !5376)
!5394 = !DILocation(line: 3631, column: 1, scope: !5376)
!5395 = distinct !DISubprogram(name: "c_readstr", scope: !3, file: !3, line: 547, type: !5396, scopeLine: 548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5398)
!5396 = !DISubroutineType(types: !5397)
!5397 = !{!3048, !2871, !5}
!5398 = !{!5399, !5400, !5401, !5403, !5404, !5405}
!5399 = !DILocalVariable(name: "str", arg: 1, scope: !5395, file: !3, line: 547, type: !2871)
!5400 = !DILocalVariable(name: "mode", arg: 2, scope: !5395, file: !3, line: 547, type: !5)
!5401 = !DILocalVariable(name: "c", scope: !5395, file: !3, line: 549, type: !5402)
!5402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2929, size: 128, elements: !3115)
!5403 = !DILocalVariable(name: "ch", scope: !5395, file: !3, line: 550, type: !2929)
!5404 = !DILocalVariable(name: "i", scope: !5395, file: !3, line: 551, type: !7)
!5405 = !DILocalVariable(name: "j", scope: !5395, file: !3, line: 551, type: !7)
!5406 = !DILocation(line: 0, scope: !5395)
!5407 = !DILocation(line: 549, column: 3, scope: !5395)
!5408 = !DILocation(line: 549, column: 17, scope: !5395)
!5409 = !DILocation(line: 553, column: 3, scope: !5395)
!5410 = !DILocation(line: 555, column: 3, scope: !5395)
!5411 = !DILocation(line: 555, column: 8, scope: !5395)
!5412 = !DILocation(line: 556, column: 3, scope: !5395)
!5413 = !DILocation(line: 556, column: 8, scope: !5395)
!5414 = !DILocation(line: 0, scope: !5415)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 558, column: 3)
!5416 = distinct !DILexicalBlock(scope: !5395, file: !3, line: 558, column: 3)
!5417 = !DILocation(line: 558, column: 8, scope: !5416)
!5418 = !DILocation(line: 558, column: 19, scope: !5415)
!5419 = !DILocation(line: 558, column: 17, scope: !5415)
!5420 = !DILocation(line: 558, column: 3, scope: !5416)
!5421 = !DILocation(line: 566, column: 9, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5415, file: !3, line: 559, column: 5)
!5423 = !DILocation(line: 567, column: 7, scope: !5422)
!5424 = !DILocation(line: 569, column: 11, scope: !5425)
!5425 = distinct !DILexicalBlock(scope: !5422, file: !3, line: 569, column: 11)
!5426 = !DILocation(line: 569, column: 11, scope: !5422)
!5427 = !DILocation(line: 570, column: 23, scope: !5425)
!5428 = !DILocation(line: 570, column: 7, scope: !5425)
!5429 = !DILocation(line: 570, column: 2, scope: !5425)
!5430 = !DILocation(line: 571, column: 49, scope: !5422)
!5431 = !DILocation(line: 571, column: 43, scope: !5422)
!5432 = !DILocation(line: 571, column: 11, scope: !5422)
!5433 = !DILocation(line: 571, column: 7, scope: !5422)
!5434 = !DILocation(line: 571, column: 37, scope: !5422)
!5435 = !DILocation(line: 558, column: 42, scope: !5415)
!5436 = !DILocation(line: 558, column: 3, scope: !5415)
!5437 = distinct !{!5437, !5420, !5438}
!5438 = !DILocation(line: 572, column: 5, scope: !5416)
!5439 = !DILocation(line: 573, column: 30, scope: !5395)
!5440 = !DILocation(line: 573, column: 36, scope: !5395)
!5441 = !DILocation(line: 573, column: 10, scope: !5395)
!5442 = !DILocation(line: 574, column: 1, scope: !5395)
!5443 = !DILocation(line: 573, column: 3, scope: !5395)
!5444 = distinct !DISubprogram(name: "builtin_memset_read_str", scope: !3, file: !3, line: 3689, type: !5377, scopeLine: 3691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5445)
!5445 = !{!5446, !5447, !5448, !5449, !5450}
!5446 = !DILocalVariable(name: "data", arg: 1, scope: !5444, file: !3, line: 3689, type: !2870)
!5447 = !DILocalVariable(name: "offset", arg: 2, scope: !5444, file: !3, line: 3689, type: !2929)
!5448 = !DILocalVariable(name: "mode", arg: 3, scope: !5444, file: !3, line: 3690, type: !5)
!5449 = !DILocalVariable(name: "c", scope: !5444, file: !3, line: 3692, type: !2871)
!5450 = !DILocalVariable(name: "p", scope: !5444, file: !3, line: 3693, type: !2868)
!5451 = !DILocation(line: 0, scope: !5444)
!5452 = !DILocation(line: 3693, column: 13, scope: !5444)
!5453 = !DILocation(line: 3695, column: 14, scope: !5444)
!5454 = !DILocation(line: 3695, column: 3, scope: !5444)
!5455 = !DILocation(line: 3697, column: 10, scope: !5444)
!5456 = !DILocation(line: 3697, column: 3, scope: !5444)
!5457 = distinct !DISubprogram(name: "expand_builtin_saveregs", scope: !3, file: !3, line: 4275, type: !5458, scopeLine: 4276, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5460)
!5458 = !DISubroutineType(types: !5459)
!5459 = !{!3048}
!5460 = !{!5461, !5462}
!5461 = !DILocalVariable(name: "val", scope: !5457, file: !3, line: 4277, type: !3048)
!5462 = !DILocalVariable(name: "seq", scope: !5457, file: !3, line: 4277, type: !3048)
!5463 = !DILocation(line: 4281, column: 7, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5457, file: !3, line: 4281, column: 7)
!5465 = !DILocation(line: 4281, column: 22, scope: !5464)
!5466 = !DILocation(line: 4281, column: 7, scope: !5457)
!5467 = !DILocation(line: 4282, column: 5, scope: !5464)
!5468 = !DILocation(line: 4288, column: 3, scope: !5457)
!5469 = !DILocation(line: 4291, column: 23, scope: !5457)
!5470 = !DILocation(line: 4291, column: 9, scope: !5457)
!5471 = !DILocation(line: 0, scope: !5457)
!5472 = !DILocation(line: 4293, column: 9, scope: !5457)
!5473 = !DILocation(line: 4294, column: 3, scope: !5457)
!5474 = !DILocation(line: 4296, column: 18, scope: !5457)
!5475 = !DILocation(line: 4301, column: 3, scope: !5457)
!5476 = !DILocation(line: 4302, column: 25, scope: !5457)
!5477 = !DILocation(line: 4302, column: 3, scope: !5457)
!5478 = !DILocation(line: 4303, column: 3, scope: !5457)
!5479 = !DILocation(line: 4305, column: 3, scope: !5457)
!5480 = !DILocation(line: 4306, column: 1, scope: !5457)
!5481 = distinct !DISubprogram(name: "std_build_builtin_va_list", scope: !3, file: !3, line: 4403, type: !5482, scopeLine: 4404, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!5482 = !DISubroutineType(types: !5483)
!5483 = !{!2914}
!5484 = !DILocation(line: 4405, column: 10, scope: !5481)
!5485 = !DILocation(line: 4405, column: 3, scope: !5481)
!5486 = distinct !DISubprogram(name: "std_fn_abi_va_list", scope: !3, file: !3, line: 4411, type: !5487, scopeLine: 4412, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5489)
!5487 = !DISubroutineType(types: !5488)
!5488 = !{!2914, !2914}
!5489 = !{!5490}
!5490 = !DILocalVariable(name: "fndecl", arg: 1, scope: !5486, file: !3, line: 4411, type: !2914)
!5491 = !DILocation(line: 0, scope: !5486)
!5492 = !DILocation(line: 4413, column: 10, scope: !5486)
!5493 = !DILocation(line: 4413, column: 3, scope: !5486)
!5494 = distinct !DISubprogram(name: "std_canonical_va_list_type", scope: !3, file: !3, line: 4419, type: !5487, scopeLine: 4420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5495)
!5495 = !{!5496, !5497, !5498}
!5496 = !DILocalVariable(name: "type", arg: 1, scope: !5494, file: !3, line: 4419, type: !2914)
!5497 = !DILocalVariable(name: "wtype", scope: !5494, file: !3, line: 4421, type: !2914)
!5498 = !DILocalVariable(name: "htype", scope: !5494, file: !3, line: 4421, type: !2914)
!5499 = !DILocation(line: 0, scope: !5494)
!5500 = !DILocation(line: 4423, column: 7, scope: !5501)
!5501 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 4423, column: 7)
!5502 = !DILocation(line: 4423, column: 7, scope: !5494)
!5503 = !DILocation(line: 4424, column: 12, scope: !5501)
!5504 = !DILocation(line: 4424, column: 5, scope: !5501)
!5505 = !DILocation(line: 4425, column: 12, scope: !5506)
!5506 = distinct !DILexicalBlock(scope: !5501, file: !3, line: 4425, column: 12)
!5507 = !DILocation(line: 4425, column: 34, scope: !5506)
!5508 = !DILocation(line: 4425, column: 37, scope: !5506)
!5509 = !DILocation(line: 4425, column: 12, scope: !5501)
!5510 = !DILocation(line: 4426, column: 5, scope: !5506)
!5511 = !DILocation(line: 0, scope: !5501)
!5512 = !DILocation(line: 4427, column: 11, scope: !5494)
!5513 = !DILocation(line: 4430, column: 7, scope: !5514)
!5514 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 4430, column: 7)
!5515 = !DILocation(line: 4430, column: 25, scope: !5514)
!5516 = !DILocation(line: 4430, column: 40, scope: !5514)
!5517 = !DILocation(line: 4430, column: 43, scope: !5514)
!5518 = !DILocation(line: 4430, column: 7, scope: !5494)
!5519 = !DILocation(line: 4431, column: 13, scope: !5514)
!5520 = !DILocation(line: 4431, column: 5, scope: !5514)
!5521 = !DILocation(line: 4432, column: 30, scope: !5522)
!5522 = distinct !DILexicalBlock(scope: !5514, file: !3, line: 4432, column: 12)
!5523 = !DILocation(line: 4432, column: 12, scope: !5514)
!5524 = !DILocation(line: 4438, column: 11, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5526, file: !3, line: 4438, column: 11)
!5526 = distinct !DILexicalBlock(scope: !5522, file: !3, line: 4433, column: 5)
!5527 = !DILocation(line: 4438, column: 29, scope: !5525)
!5528 = !DILocation(line: 4439, column: 4, scope: !5525)
!5529 = !DILocation(line: 4439, column: 7, scope: !5525)
!5530 = !DILocation(line: 4438, column: 11, scope: !5526)
!5531 = !DILocation(line: 4441, column: 12, scope: !5532)
!5532 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 4440, column: 2)
!5533 = !DILocation(line: 4442, column: 12, scope: !5532)
!5534 = !DILocation(line: 4443, column: 2, scope: !5532)
!5535 = !DILocation(line: 0, scope: !5514)
!5536 = !DILocation(line: 4445, column: 7, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5494, file: !3, line: 4445, column: 7)
!5538 = !DILocation(line: 4445, column: 36, scope: !5537)
!5539 = !DILocation(line: 4445, column: 33, scope: !5537)
!5540 = !DILocation(line: 4445, column: 7, scope: !5494)
!5541 = !DILocation(line: 4449, column: 1, scope: !5494)
!5542 = distinct !DISubprogram(name: "std_expand_builtin_va_start", scope: !3, file: !3, line: 4455, type: !5543, scopeLine: 4456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5545)
!5543 = !DISubroutineType(types: !5544)
!5544 = !{null, !2914, !3048}
!5545 = !{!5546, !5547, !5548}
!5546 = !DILocalVariable(name: "valist", arg: 1, scope: !5542, file: !3, line: 4455, type: !2914)
!5547 = !DILocalVariable(name: "nextarg", arg: 2, scope: !5542, file: !3, line: 4455, type: !3048)
!5548 = !DILocalVariable(name: "va_r", scope: !5542, file: !3, line: 4457, type: !3048)
!5549 = !DILocation(line: 0, scope: !5542)
!5550 = !DILocation(line: 4457, column: 14, scope: !5542)
!5551 = !DILocation(line: 4458, column: 3, scope: !5542)
!5552 = !DILocation(line: 4459, column: 1, scope: !5542)
!5553 = distinct !DISubprogram(name: "expand_expr", scope: !1278, file: !1278, line: 555, type: !5554, scopeLine: 557, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5556)
!5554 = !DISubroutineType(types: !5555)
!5555 = !{!3048, !2914, !3048, !5, !1277}
!5556 = !{!5557, !5558, !5559, !5560}
!5557 = !DILocalVariable(name: "exp", arg: 1, scope: !5553, file: !1278, line: 555, type: !2914)
!5558 = !DILocalVariable(name: "target", arg: 2, scope: !5553, file: !1278, line: 555, type: !3048)
!5559 = !DILocalVariable(name: "mode", arg: 3, scope: !5553, file: !1278, line: 555, type: !5)
!5560 = !DILocalVariable(name: "modifier", arg: 4, scope: !5553, file: !1278, line: 556, type: !1277)
!5561 = !DILocation(line: 0, scope: !5553)
!5562 = !DILocation(line: 558, column: 10, scope: !5553)
!5563 = !DILocation(line: 558, column: 3, scope: !5553)
!5564 = distinct !DISubprogram(name: "std_gimplify_va_arg_expr", scope: !3, file: !3, line: 4494, type: !5565, scopeLine: 4496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5567)
!5565 = !DISubroutineType(types: !5566)
!5566 = !{!2914, !2914, !2914, !4331, !4331}
!5567 = !{!5568, !5569, !5570, !5571, !5572, !5573, !5574, !5575, !5576, !5577, !5578, !5579}
!5568 = !DILocalVariable(name: "valist", arg: 1, scope: !5564, file: !3, line: 4494, type: !2914)
!5569 = !DILocalVariable(name: "type", arg: 2, scope: !5564, file: !3, line: 4494, type: !2914)
!5570 = !DILocalVariable(name: "pre_p", arg: 3, scope: !5564, file: !3, line: 4494, type: !4331)
!5571 = !DILocalVariable(name: "post_p", arg: 4, scope: !5564, file: !3, line: 4495, type: !4331)
!5572 = !DILocalVariable(name: "addr", scope: !5564, file: !3, line: 4497, type: !2914)
!5573 = !DILocalVariable(name: "t", scope: !5564, file: !3, line: 4497, type: !2914)
!5574 = !DILocalVariable(name: "type_size", scope: !5564, file: !3, line: 4497, type: !2914)
!5575 = !DILocalVariable(name: "rounded_size", scope: !5564, file: !3, line: 4497, type: !2914)
!5576 = !DILocalVariable(name: "valist_tmp", scope: !5564, file: !3, line: 4497, type: !2914)
!5577 = !DILocalVariable(name: "align", scope: !5564, file: !3, line: 4498, type: !2927)
!5578 = !DILocalVariable(name: "boundary", scope: !5564, file: !3, line: 4498, type: !2927)
!5579 = !DILocalVariable(name: "indirect", scope: !5564, file: !3, line: 4499, type: !2866)
!5580 = !DILocation(line: 0, scope: !5564)
!5581 = !DILocation(line: 4497, column: 3, scope: !5564)
!5582 = !DILocation(line: 4508, column: 39, scope: !5564)
!5583 = !DILocation(line: 4508, column: 14, scope: !5564)
!5584 = !DILocation(line: 4509, column: 7, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 4509, column: 7)
!5586 = !DILocation(line: 4509, column: 7, scope: !5564)
!5587 = !DILocation(line: 4510, column: 12, scope: !5585)
!5588 = !DILocation(line: 4510, column: 5, scope: !5585)
!5589 = !DILocation(line: 4513, column: 14, scope: !5564)
!5590 = !DILocation(line: 4519, column: 7, scope: !5564)
!5591 = !DILocation(line: 4522, column: 12, scope: !5564)
!5592 = !DILocation(line: 4525, column: 16, scope: !5564)
!5593 = !DILocation(line: 4529, column: 16, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 4529, column: 7)
!5595 = !DILocation(line: 4530, column: 7, scope: !5594)
!5596 = !DILocation(line: 4530, column: 26, scope: !5594)
!5597 = !DILocation(line: 4530, column: 11, scope: !5594)
!5598 = !DILocation(line: 4529, column: 7, scope: !5564)
!5599 = !DILocation(line: 4532, column: 11, scope: !5600)
!5600 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 4531, column: 5)
!5601 = !DILocation(line: 4536, column: 7, scope: !5600)
!5602 = !DILocation(line: 4538, column: 11, scope: !5600)
!5603 = !DILocation(line: 4539, column: 11, scope: !5600)
!5604 = !DILocation(line: 4543, column: 7, scope: !5600)
!5605 = !DILocation(line: 4544, column: 5, scope: !5600)
!5606 = !DILocation(line: 4552, column: 18, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 4552, column: 7)
!5608 = !DILocation(line: 4552, column: 16, scope: !5607)
!5609 = !DILocation(line: 4552, column: 7, scope: !5564)
!5610 = !DILocation(line: 4554, column: 14, scope: !5611)
!5611 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 4553, column: 5)
!5612 = !DILocation(line: 4555, column: 27, scope: !5611)
!5613 = !DILocation(line: 4555, column: 7, scope: !5611)
!5614 = !DILocation(line: 4555, column: 25, scope: !5611)
!5615 = !DILocation(line: 4556, column: 5, scope: !5611)
!5616 = !DILocation(line: 4559, column: 15, scope: !5564)
!5617 = !DILocation(line: 4560, column: 18, scope: !5564)
!5618 = !DILocation(line: 4560, column: 16, scope: !5564)
!5619 = !DILocation(line: 4563, column: 3, scope: !5564)
!5620 = !DILocation(line: 4579, column: 7, scope: !5564)
!5621 = !DILocation(line: 4580, column: 7, scope: !5564)
!5622 = !DILocation(line: 4581, column: 3, scope: !5564)
!5623 = !DILocation(line: 4583, column: 10, scope: !5564)
!5624 = !DILocation(line: 4585, column: 7, scope: !5564)
!5625 = !DILocation(line: 4586, column: 12, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5564, file: !3, line: 4585, column: 7)
!5627 = !DILocation(line: 4586, column: 5, scope: !5626)
!5628 = !DILocation(line: 4588, column: 10, scope: !5564)
!5629 = !DILocation(line: 4589, column: 1, scope: !5564)
!5630 = !DILocation(line: 4588, column: 3, scope: !5564)
!5631 = distinct !DISubprogram(name: "build_va_arg_indirect_ref", scope: !3, file: !3, line: 4594, type: !5487, scopeLine: 4595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5632)
!5632 = !{!5633}
!5633 = !DILocalVariable(name: "addr", arg: 1, scope: !5631, file: !3, line: 4594, type: !2914)
!5634 = !DILocation(line: 0, scope: !5631)
!5635 = !DILocation(line: 4596, column: 39, scope: !5631)
!5636 = !DILocation(line: 4596, column: 10, scope: !5631)
!5637 = !DILocation(line: 4598, column: 7, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 4598, column: 7)
!5639 = !DILocation(line: 4598, column: 7, scope: !5631)
!5640 = !DILocation(line: 4599, column: 5, scope: !5638)
!5641 = !DILocation(line: 4601, column: 3, scope: !5631)
!5642 = !DILocation(line: 0, scope: !4328)
!5643 = !DILocation(line: 4621, column: 3, scope: !4328)
!5644 = !DILocation(line: 4621, column: 17, scope: !4328)
!5645 = !DILocation(line: 4621, column: 8, scope: !4328)
!5646 = !DILocation(line: 4622, column: 15, scope: !4328)
!5647 = !DILocation(line: 4624, column: 20, scope: !4328)
!5648 = !DILocation(line: 4627, column: 18, scope: !4328)
!5649 = !DILocation(line: 4628, column: 23, scope: !5650)
!5650 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 4628, column: 7)
!5651 = !DILocation(line: 4628, column: 20, scope: !5650)
!5652 = !DILocation(line: 4628, column: 7, scope: !4328)
!5653 = !DILocation(line: 4630, column: 26, scope: !4328)
!5654 = !DILocation(line: 4630, column: 18, scope: !4328)
!5655 = !DILocation(line: 4632, column: 20, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 4632, column: 7)
!5657 = !DILocation(line: 4632, column: 7, scope: !4328)
!5658 = !DILocation(line: 4634, column: 7, scope: !5659)
!5659 = distinct !DILexicalBlock(scope: !5656, file: !3, line: 4633, column: 5)
!5660 = !DILocation(line: 4635, column: 7, scope: !5659)
!5661 = !DILocation(line: 4640, column: 41, scope: !4344)
!5662 = !DILocation(line: 4640, column: 24, scope: !4344)
!5663 = !DILocation(line: 4641, column: 5, scope: !4344)
!5664 = !DILocation(line: 4640, column: 7, scope: !4328)
!5665 = !DILocation(line: 4649, column: 16, scope: !4343)
!5666 = !DILocation(line: 0, scope: !4343)
!5667 = !DILocation(line: 4652, column: 12, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 4652, column: 11)
!5669 = !DILocation(line: 4652, column: 25, scope: !5668)
!5670 = !DILocation(line: 4652, column: 22, scope: !5668)
!5671 = !DILocation(line: 4654, column: 14, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5668, file: !3, line: 4653, column: 2)
!5673 = !DILocation(line: 4655, column: 4, scope: !5672)
!5674 = !DILocation(line: 4657, column: 2, scope: !5672)
!5675 = !DILocation(line: 4661, column: 11, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !4343, file: !3, line: 4661, column: 11)
!5677 = !DILocation(line: 4661, column: 11, scope: !4343)
!5678 = !DILocation(line: 4662, column: 2, scope: !5676)
!5679 = !DILocation(line: 4665, column: 7, scope: !4343)
!5680 = !DILocation(line: 4667, column: 11, scope: !4343)
!5681 = !DILocation(line: 4666, column: 11, scope: !4343)
!5682 = !DILocation(line: 4668, column: 7, scope: !4343)
!5683 = !DILocation(line: 4672, column: 17, scope: !4343)
!5684 = !DILocation(line: 4672, column: 15, scope: !4343)
!5685 = !DILocation(line: 4679, column: 11, scope: !4349)
!5686 = !DILocation(line: 4679, column: 36, scope: !4349)
!5687 = !DILocation(line: 4679, column: 11, scope: !4350)
!5688 = !DILocation(line: 4685, column: 8, scope: !4347)
!5689 = !DILocation(line: 4685, column: 39, scope: !4347)
!5690 = !DILocation(line: 4685, column: 8, scope: !4348)
!5691 = !DILocation(line: 4687, column: 38, scope: !4346)
!5692 = !DILocation(line: 4687, column: 18, scope: !4346)
!5693 = !DILocation(line: 0, scope: !4346)
!5694 = !DILocation(line: 4689, column: 7, scope: !4346)
!5695 = !DILocation(line: 4688, column: 17, scope: !4346)
!5696 = !DILocation(line: 4688, column: 15, scope: !4346)
!5697 = !DILocation(line: 4690, column: 6, scope: !4346)
!5698 = !DILocation(line: 4692, column: 4, scope: !4348)
!5699 = !DILocation(line: 4693, column: 2, scope: !4348)
!5700 = !DILocation(line: 4695, column: 2, scope: !4349)
!5701 = !DILocation(line: 4697, column: 20, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !4350, file: !3, line: 4697, column: 11)
!5703 = !DILocation(line: 4697, column: 12, scope: !5702)
!5704 = !DILocation(line: 4697, column: 11, scope: !4350)
!5705 = !DILocation(line: 4702, column: 47, scope: !4350)
!5706 = !DILocation(line: 4702, column: 17, scope: !4350)
!5707 = !DILocation(line: 4702, column: 15, scope: !4350)
!5708 = !DILocation(line: 4703, column: 7, scope: !4350)
!5709 = !DILocation(line: 4705, column: 1, scope: !4328)
!5710 = distinct !DISubprogram(name: "build_call_expr_loc", scope: !3, file: !3, line: 10826, type: !5711, scopeLine: 10827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5713)
!5711 = !DISubroutineType(types: !5712)
!5712 = !{!2914, !2998, !2914, !1249, null}
!5713 = !{!5714, !5715, !5716, !5717, !5724, !5725, !5726, !5727}
!5714 = !DILocalVariable(name: "loc", arg: 1, scope: !5710, file: !3, line: 10826, type: !2998)
!5715 = !DILocalVariable(name: "fndecl", arg: 2, scope: !5710, file: !3, line: 10826, type: !2914)
!5716 = !DILocalVariable(name: "n", arg: 3, scope: !5710, file: !3, line: 10826, type: !1249)
!5717 = !DILocalVariable(name: "ap", scope: !5710, file: !3, line: 10828, type: !5718)
!5718 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5719, line: 52, baseType: !5720)
!5719 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!5720 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5721, line: 32, baseType: !5722)
!5721 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stdarg.h", directory: "")
!5722 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 10828, baseType: !5723)
!5723 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4393, size: 192, elements: !2972)
!5724 = !DILocalVariable(name: "fntype", scope: !5710, file: !3, line: 10829, type: !2914)
!5725 = !DILocalVariable(name: "fn", scope: !5710, file: !3, line: 10830, type: !2914)
!5726 = !DILocalVariable(name: "argarray", scope: !5710, file: !3, line: 10831, type: !3231)
!5727 = !DILocalVariable(name: "i", scope: !5710, file: !3, line: 10832, type: !1249)
!5728 = !DILocation(line: 0, scope: !5710)
!5729 = !DILocation(line: 10828, column: 3, scope: !5710)
!5730 = !DILocation(line: 10828, column: 11, scope: !5710)
!5731 = !DILocation(line: 10829, column: 17, scope: !5710)
!5732 = !DILocation(line: 10830, column: 13, scope: !5710)
!5733 = !DILocation(line: 10831, column: 29, scope: !5710)
!5734 = !DILocation(line: 10834, column: 3, scope: !5710)
!5735 = !DILocation(line: 0, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5737, file: !3, line: 10835, column: 3)
!5737 = distinct !DILexicalBlock(scope: !5710, file: !3, line: 10835, column: 3)
!5738 = !DILocation(line: 10835, column: 8, scope: !5737)
!5739 = !DILocation(line: 0, scope: !5737)
!5740 = !DILocation(line: 10835, column: 17, scope: !5736)
!5741 = !DILocation(line: 10835, column: 3, scope: !5737)
!5742 = !DILocation(line: 10836, column: 19, scope: !5736)
!5743 = !DILocation(line: 10836, column: 5, scope: !5736)
!5744 = !DILocation(line: 10836, column: 17, scope: !5736)
!5745 = !DILocation(line: 10835, column: 23, scope: !5736)
!5746 = !DILocation(line: 10835, column: 3, scope: !5736)
!5747 = distinct !{!5747, !5741, !5748}
!5748 = !DILocation(line: 10836, column: 19, scope: !5737)
!5749 = !DILocation(line: 10837, column: 3, scope: !5710)
!5750 = !DILocation(line: 10838, column: 40, scope: !5710)
!5751 = !DILocation(line: 10838, column: 10, scope: !5710)
!5752 = !DILocation(line: 10839, column: 1, scope: !5710)
!5753 = !DILocation(line: 10838, column: 3, scope: !5710)
!5754 = distinct !DISubprogram(name: "dummy_object", scope: !3, file: !3, line: 4608, type: !5487, scopeLine: 4609, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5755)
!5755 = !{!5756, !5757}
!5756 = !DILocalVariable(name: "type", arg: 1, scope: !5754, file: !3, line: 4608, type: !2914)
!5757 = !DILocalVariable(name: "t", scope: !5754, file: !3, line: 4610, type: !2914)
!5758 = !DILocation(line: 0, scope: !5754)
!5759 = !DILocation(line: 4610, column: 27, scope: !5754)
!5760 = !DILocation(line: 4610, column: 12, scope: !5754)
!5761 = !DILocation(line: 4611, column: 10, scope: !5754)
!5762 = !DILocation(line: 4611, column: 3, scope: !5754)
!5763 = distinct !DISubprogram(name: "expand_builtin_trap", scope: !3, file: !3, line: 4919, type: !5764, scopeLine: 4920, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4374)
!5764 = !DISubroutineType(types: !5765)
!5765 = !{null}
!5766 = !DILocation(line: 4923, column: 16, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5763, file: !3, line: 4922, column: 7)
!5768 = !DILocation(line: 4923, column: 5, scope: !5767)
!5769 = !DILocation(line: 4927, column: 3, scope: !5763)
!5770 = !DILocation(line: 4928, column: 1, scope: !5763)
!5771 = distinct !DISubprogram(name: "build_string_literal", scope: !3, file: !3, line: 4990, type: !5772, scopeLine: 4991, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5774)
!5772 = !DISubroutineType(types: !5773)
!5773 = !{!2914, !1249, !2871}
!5774 = !{!5775, !5776, !5777, !5778, !5779, !5780}
!5775 = !DILocalVariable(name: "len", arg: 1, scope: !5771, file: !3, line: 4990, type: !1249)
!5776 = !DILocalVariable(name: "str", arg: 2, scope: !5771, file: !3, line: 4990, type: !2871)
!5777 = !DILocalVariable(name: "t", scope: !5771, file: !3, line: 4992, type: !2914)
!5778 = !DILocalVariable(name: "elem", scope: !5771, file: !3, line: 4992, type: !2914)
!5779 = !DILocalVariable(name: "index", scope: !5771, file: !3, line: 4992, type: !2914)
!5780 = !DILocalVariable(name: "type", scope: !5771, file: !3, line: 4992, type: !2914)
!5781 = !DILocation(line: 0, scope: !5771)
!5782 = !DILocation(line: 4994, column: 7, scope: !5771)
!5783 = !DILocation(line: 4995, column: 10, scope: !5771)
!5784 = !DILocation(line: 4996, column: 29, scope: !5771)
!5785 = !DILocation(line: 4996, column: 11, scope: !5771)
!5786 = !DILocation(line: 4997, column: 10, scope: !5771)
!5787 = !DILocation(line: 4998, column: 3, scope: !5771)
!5788 = !DILocation(line: 4998, column: 17, scope: !5771)
!5789 = !DILocation(line: 4999, column: 3, scope: !5771)
!5790 = !DILocation(line: 4999, column: 21, scope: !5771)
!5791 = !DILocation(line: 5001, column: 19, scope: !5771)
!5792 = !DILocation(line: 5003, column: 10, scope: !5771)
!5793 = !DILocation(line: 5004, column: 7, scope: !5771)
!5794 = !DILocation(line: 5007, column: 3, scope: !5771)
!5795 = distinct !DISubprogram(name: "expand_builtin", scope: !3, file: !3, line: 5618, type: !5796, scopeLine: 5620, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5798)
!5796 = !DISubroutineType(types: !5797)
!5797 = !{!3048, !2914, !3048, !3048, !5, !1249}
!5798 = !{!5799, !5800, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5810, !5811}
!5799 = !DILocalVariable(name: "exp", arg: 1, scope: !5795, file: !3, line: 5618, type: !2914)
!5800 = !DILocalVariable(name: "target", arg: 2, scope: !5795, file: !3, line: 5618, type: !3048)
!5801 = !DILocalVariable(name: "subtarget", arg: 3, scope: !5795, file: !3, line: 5618, type: !3048)
!5802 = !DILocalVariable(name: "mode", arg: 4, scope: !5795, file: !3, line: 5618, type: !5)
!5803 = !DILocalVariable(name: "ignore", arg: 5, scope: !5795, file: !3, line: 5619, type: !1249)
!5804 = !DILocalVariable(name: "fndecl", scope: !5795, file: !3, line: 5621, type: !2914)
!5805 = !DILocalVariable(name: "fcode", scope: !5795, file: !3, line: 5622, type: !527)
!5806 = !DILocalVariable(name: "target_mode", scope: !5795, file: !3, line: 5623, type: !5)
!5807 = !DILocalVariable(name: "volatilep", scope: !5808, file: !3, line: 5648, type: !2866)
!5808 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 5647, column: 5)
!5809 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 5645, column: 7)
!5810 = !DILocalVariable(name: "arg", scope: !5808, file: !3, line: 5649, type: !2914)
!5811 = !DILocalVariable(name: "iter", scope: !5808, file: !3, line: 5650, type: !5812)
!5812 = !DIDerivedType(tag: DW_TAG_typedef, name: "call_expr_arg_iterator", file: !135, line: 5364, baseType: !5813)
!5813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "call_expr_arg_iterator_d", file: !135, line: 5360, size: 128, elements: !5814)
!5814 = !{!5815, !5816, !5817}
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !5813, file: !135, line: 5361, baseType: !2914, size: 64)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !5813, file: !135, line: 5362, baseType: !1249, size: 32, offset: 64)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !5813, file: !135, line: 5363, baseType: !1249, size: 32, offset: 96)
!5818 = !DILocation(line: 0, scope: !5795)
!5819 = !DILocation(line: 5621, column: 17, scope: !5795)
!5820 = !DILocation(line: 5622, column: 34, scope: !5795)
!5821 = !DILocation(line: 5623, column: 35, scope: !5795)
!5822 = !DILocation(line: 5625, column: 7, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 5625, column: 7)
!5824 = !DILocation(line: 5625, column: 36, scope: !5823)
!5825 = !DILocation(line: 5625, column: 7, scope: !5795)
!5826 = !DILocation(line: 5626, column: 20, scope: !5823)
!5827 = !DILocation(line: 5626, column: 12, scope: !5823)
!5828 = !DILocation(line: 5626, column: 5, scope: !5823)
!5829 = !DILocation(line: 5630, column: 8, scope: !5830)
!5830 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 5630, column: 7)
!5831 = !DILocation(line: 5631, column: 7, scope: !5830)
!5832 = !DILocation(line: 5631, column: 11, scope: !5830)
!5833 = !DILocation(line: 5632, column: 7, scope: !5830)
!5834 = !DILocation(line: 5632, column: 10, scope: !5830)
!5835 = !DILocation(line: 5633, column: 16, scope: !5830)
!5836 = !DILocation(line: 5633, column: 7, scope: !5830)
!5837 = !DILocation(line: 5634, column: 16, scope: !5830)
!5838 = !DILocation(line: 5635, column: 12, scope: !5830)
!5839 = !DILocation(line: 5635, column: 5, scope: !5830)
!5840 = !DILocation(line: 5639, column: 7, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5795, file: !3, line: 5639, column: 7)
!5842 = !DILocation(line: 5640, column: 14, scope: !5841)
!5843 = !DILocation(line: 5639, column: 7, scope: !5795)
!5844 = !DILocation(line: 5645, column: 14, scope: !5809)
!5845 = !DILocation(line: 5646, column: 7, scope: !5809)
!5846 = !DILocation(line: 5646, column: 11, scope: !5809)
!5847 = !DILocation(line: 5646, column: 32, scope: !5809)
!5848 = !DILocation(line: 5646, column: 35, scope: !5809)
!5849 = !DILocation(line: 5645, column: 7, scope: !5795)
!5850 = !DILocation(line: 0, scope: !5808)
!5851 = !DILocation(line: 5650, column: 7, scope: !5808)
!5852 = !DILocation(line: 5652, column: 7, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 5652, column: 7)
!5854 = !DILocation(line: 0, scope: !5853)
!5855 = !DILocation(line: 5653, column: 6, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 5653, column: 6)
!5857 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 5652, column: 7)
!5858 = !DILocation(line: 5653, column: 6, scope: !5857)
!5859 = !DILocation(line: 5652, column: 7, scope: !5857)
!5860 = distinct !{!5860, !5852, !5861}
!5861 = !DILocation(line: 5657, column: 4, scope: !5853)
!5862 = !DILocation(line: 5659, column: 11, scope: !5808)
!5863 = !DILocation(line: 5661, column: 4, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5865, file: !3, line: 5661, column: 4)
!5865 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 5660, column: 2)
!5866 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 5659, column: 11)
!5867 = !DILocation(line: 0, scope: !5864)
!5868 = !DILocation(line: 0, scope: !5865)
!5869 = !DILocation(line: 5662, column: 6, scope: !5870)
!5870 = distinct !DILexicalBlock(scope: !5864, file: !3, line: 5661, column: 4)
!5871 = !DILocation(line: 5661, column: 4, scope: !5870)
!5872 = distinct !{!5872, !5863, !5873}
!5873 = !DILocation(line: 5662, column: 59, scope: !5864)
!5874 = !DILocation(line: 5665, column: 5, scope: !5809)
!5875 = !DILocation(line: 6425, column: 10, scope: !5795)
!5876 = !DILocation(line: 6425, column: 3, scope: !5795)
!5877 = !DILocation(line: 6426, column: 1, scope: !5795)
!5878 = distinct !DISubprogram(name: "called_as_built_in", scope: !3, file: !3, line: 259, type: !4846, scopeLine: 260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5879)
!5879 = !{!5880, !5881}
!5880 = !DILocalVariable(name: "node", arg: 1, scope: !5878, file: !3, line: 259, type: !2914)
!5881 = !DILocalVariable(name: "name", scope: !5878, file: !3, line: 264, type: !2871)
!5882 = !DILocation(line: 0, scope: !5878)
!5883 = !DILocation(line: 264, column: 22, scope: !5878)
!5884 = !DILocation(line: 265, column: 10, scope: !5878)
!5885 = !DILocation(line: 265, column: 3, scope: !5878)
!5886 = distinct !DISubprogram(name: "first_call_expr_arg", scope: !135, file: !135, line: 5419, type: !5887, scopeLine: 5420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5890)
!5887 = !DISubroutineType(types: !5888)
!5888 = !{!2914, !2914, !5889}
!5889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5812, size: 64)
!5890 = !{!5891, !5892}
!5891 = !DILocalVariable(name: "exp", arg: 1, scope: !5886, file: !135, line: 5419, type: !2914)
!5892 = !DILocalVariable(name: "iter", arg: 2, scope: !5886, file: !135, line: 5419, type: !5889)
!5893 = !DILocation(line: 0, scope: !5886)
!5894 = !DILocation(line: 5421, column: 3, scope: !5886)
!5895 = !DILocation(line: 5422, column: 10, scope: !5886)
!5896 = !DILocation(line: 5422, column: 3, scope: !5886)
!5897 = distinct !DISubprogram(name: "next_call_expr_arg", scope: !135, file: !135, line: 5393, type: !5898, scopeLine: 5394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5900)
!5898 = !DISubroutineType(types: !5899)
!5899 = !{!2914, !5889}
!5900 = !{!5901, !5902}
!5901 = !DILocalVariable(name: "iter", arg: 1, scope: !5897, file: !135, line: 5393, type: !5889)
!5902 = !DILocalVariable(name: "result", scope: !5897, file: !135, line: 5395, type: !2914)
!5903 = !DILocation(line: 0, scope: !5897)
!5904 = !DILocation(line: 5396, column: 13, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5897, file: !135, line: 5396, column: 7)
!5906 = !DILocation(line: 5396, column: 24, scope: !5905)
!5907 = !DILocation(line: 5396, column: 15, scope: !5905)
!5908 = !DILocation(line: 5396, column: 7, scope: !5897)
!5909 = !DILocation(line: 5398, column: 12, scope: !5897)
!5910 = !DILocation(line: 5399, column: 10, scope: !5897)
!5911 = !DILocation(line: 5400, column: 3, scope: !5897)
!5912 = !DILocation(line: 5401, column: 1, scope: !5897)
!5913 = distinct !DISubprogram(name: "builtin_mathfn_code", scope: !3, file: !3, line: 6435, type: !5914, scopeLine: 6436, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5916)
!5914 = !DISubroutineType(types: !5915)
!5915 = !{!527, !4971}
!5916 = !{!5917, !5918, !5919, !5920, !5921, !5922, !5923}
!5917 = !DILocalVariable(name: "t", arg: 1, scope: !5913, file: !3, line: 6435, type: !4971)
!5918 = !DILocalVariable(name: "fndecl", scope: !5913, file: !3, line: 6437, type: !4971)
!5919 = !DILocalVariable(name: "arg", scope: !5913, file: !3, line: 6437, type: !4971)
!5920 = !DILocalVariable(name: "parmlist", scope: !5913, file: !3, line: 6437, type: !4971)
!5921 = !DILocalVariable(name: "argtype", scope: !5913, file: !3, line: 6438, type: !4971)
!5922 = !DILocalVariable(name: "parmtype", scope: !5913, file: !3, line: 6438, type: !4971)
!5923 = !DILocalVariable(name: "iter", scope: !5913, file: !3, line: 6439, type: !5924)
!5924 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_call_expr_arg_iterator", file: !135, line: 5370, baseType: !5925)
!5925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "const_call_expr_arg_iterator_d", file: !135, line: 5366, size: 128, elements: !5926)
!5926 = !{!5927, !5928, !5929}
!5927 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !5925, file: !135, line: 5367, baseType: !4971, size: 64)
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !5925, file: !135, line: 5368, baseType: !1249, size: 32, offset: 64)
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !5925, file: !135, line: 5369, baseType: !1249, size: 32, offset: 96)
!5930 = !DILocation(line: 0, scope: !5913)
!5931 = !DILocation(line: 6439, column: 3, scope: !5913)
!5932 = !DILocation(line: 6441, column: 7, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 6441, column: 7)
!5934 = !DILocation(line: 6441, column: 21, scope: !5933)
!5935 = !DILocation(line: 6442, column: 7, scope: !5933)
!5936 = !DILocation(line: 6442, column: 10, scope: !5933)
!5937 = !DILocation(line: 6442, column: 39, scope: !5933)
!5938 = !DILocation(line: 6441, column: 7, scope: !5913)
!5939 = !DILocation(line: 6445, column: 12, scope: !5913)
!5940 = !DILocation(line: 6446, column: 14, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 6446, column: 7)
!5942 = !DILocation(line: 6447, column: 7, scope: !5941)
!5943 = !DILocation(line: 6447, column: 10, scope: !5941)
!5944 = !DILocation(line: 6447, column: 29, scope: !5941)
!5945 = !DILocation(line: 6448, column: 7, scope: !5941)
!5946 = !DILocation(line: 6448, column: 12, scope: !5941)
!5947 = !DILocation(line: 6449, column: 7, scope: !5941)
!5948 = !DILocation(line: 6449, column: 39, scope: !5941)
!5949 = !DILocation(line: 6446, column: 7, scope: !5913)
!5950 = !DILocation(line: 6452, column: 14, scope: !5913)
!5951 = !DILocation(line: 6453, column: 3, scope: !5913)
!5952 = !DILocation(line: 6454, column: 3, scope: !5913)
!5953 = !DILocation(line: 6454, column: 3, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 6454, column: 3)
!5955 = !DILocation(line: 6458, column: 18, scope: !5956)
!5956 = distinct !DILexicalBlock(scope: !5957, file: !3, line: 6455, column: 5)
!5957 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 6454, column: 3)
!5958 = !DILocation(line: 6459, column: 11, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5956, file: !3, line: 6459, column: 11)
!5960 = !DILocation(line: 0, scope: !5956)
!5961 = !DILocation(line: 6459, column: 11, scope: !5956)
!5962 = !DILocation(line: 6461, column: 8, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 6460, column: 2)
!5964 = !DILocation(line: 6463, column: 11, scope: !5963)
!5965 = !DILocation(line: 6463, column: 4, scope: !5963)
!5966 = !DILocation(line: 6466, column: 11, scope: !5956)
!5967 = !DILocation(line: 6469, column: 13, scope: !5956)
!5968 = !DILocation(line: 6470, column: 17, scope: !5956)
!5969 = !DILocation(line: 6472, column: 11, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5956, file: !3, line: 6472, column: 11)
!5971 = !DILocation(line: 6472, column: 11, scope: !5956)
!5972 = !DILocation(line: 6474, column: 10, scope: !5973)
!5973 = distinct !DILexicalBlock(scope: !5974, file: !3, line: 6474, column: 8)
!5974 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 6473, column: 2)
!5975 = !DILocation(line: 6474, column: 8, scope: !5974)
!5976 = !DILocation(line: 6477, column: 16, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 6477, column: 16)
!5978 = !DILocation(line: 6477, column: 16, scope: !5970)
!5979 = !DILocation(line: 6479, column: 10, scope: !5980)
!5980 = distinct !DILexicalBlock(scope: !5981, file: !3, line: 6479, column: 8)
!5981 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 6478, column: 2)
!5982 = !DILocation(line: 6479, column: 8, scope: !5981)
!5983 = !DILocation(line: 6482, column: 16, scope: !5984)
!5984 = distinct !DILexicalBlock(scope: !5977, file: !3, line: 6482, column: 16)
!5985 = !DILocation(line: 6482, column: 16, scope: !5977)
!5986 = !DILocation(line: 6484, column: 10, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 6484, column: 8)
!5988 = distinct !DILexicalBlock(scope: !5984, file: !3, line: 6483, column: 2)
!5989 = !DILocation(line: 6484, column: 8, scope: !5988)
!5990 = !DILocation(line: 6487, column: 16, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5984, file: !3, line: 6487, column: 16)
!5992 = !DILocation(line: 6487, column: 16, scope: !5984)
!5993 = !DILocation(line: 6489, column: 10, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5995, file: !3, line: 6489, column: 8)
!5995 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 6488, column: 2)
!5996 = !DILocation(line: 6489, column: 8, scope: !5995)
!5997 = !DILocation(line: 6454, column: 31, scope: !5957)
!5998 = !DILocation(line: 6454, column: 3, scope: !5957)
!5999 = distinct !{!5999, !5953, !6000}
!6000 = !DILocation(line: 6494, column: 5, scope: !5954)
!6001 = !DILocation(line: 6497, column: 10, scope: !5913)
!6002 = !DILocation(line: 6497, column: 3, scope: !5913)
!6003 = !DILocation(line: 6498, column: 1, scope: !5913)
!6004 = distinct !DISubprogram(name: "init_const_call_expr_arg_iterator", scope: !135, file: !135, line: 5383, type: !6005, scopeLine: 5384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6008)
!6005 = !DISubroutineType(types: !6006)
!6006 = !{null, !4971, !6007}
!6007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5924, size: 64)
!6008 = !{!6009, !6010}
!6009 = !DILocalVariable(name: "exp", arg: 1, scope: !6004, file: !135, line: 5383, type: !4971)
!6010 = !DILocalVariable(name: "iter", arg: 2, scope: !6004, file: !135, line: 5383, type: !6007)
!6011 = !DILocation(line: 0, scope: !6004)
!6012 = !DILocation(line: 5385, column: 9, scope: !6004)
!6013 = !DILocation(line: 5385, column: 11, scope: !6004)
!6014 = !DILocation(line: 5386, column: 13, scope: !6004)
!6015 = !DILocation(line: 5386, column: 9, scope: !6004)
!6016 = !DILocation(line: 5386, column: 11, scope: !6004)
!6017 = !DILocation(line: 5387, column: 9, scope: !6004)
!6018 = !DILocation(line: 5387, column: 11, scope: !6004)
!6019 = !DILocation(line: 5388, column: 1, scope: !6004)
!6020 = distinct !DISubprogram(name: "more_const_call_expr_args_p", scope: !135, file: !135, line: 5441, type: !6021, scopeLine: 5442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6025)
!6021 = !DISubroutineType(types: !6022)
!6022 = !{!2866, !6023}
!6023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6024, size: 64)
!6024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5924)
!6025 = !{!6026}
!6026 = !DILocalVariable(name: "iter", arg: 1, scope: !6020, file: !135, line: 5441, type: !6023)
!6027 = !DILocation(line: 0, scope: !6020)
!6028 = !DILocation(line: 5443, column: 17, scope: !6020)
!6029 = !DILocation(line: 5443, column: 27, scope: !6020)
!6030 = !DILocation(line: 5443, column: 19, scope: !6020)
!6031 = !DILocation(line: 5443, column: 10, scope: !6020)
!6032 = !DILocation(line: 5443, column: 3, scope: !6020)
!6033 = distinct !DISubprogram(name: "next_const_call_expr_arg", scope: !135, file: !135, line: 5404, type: !6034, scopeLine: 5405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6036)
!6034 = !DISubroutineType(types: !6035)
!6035 = !{!4971, !6007}
!6036 = !{!6037, !6038}
!6037 = !DILocalVariable(name: "iter", arg: 1, scope: !6033, file: !135, line: 5404, type: !6007)
!6038 = !DILocalVariable(name: "result", scope: !6033, file: !135, line: 5406, type: !4971)
!6039 = !DILocation(line: 0, scope: !6033)
!6040 = !DILocation(line: 5407, column: 13, scope: !6041)
!6041 = distinct !DILexicalBlock(scope: !6033, file: !135, line: 5407, column: 7)
!6042 = !DILocation(line: 5407, column: 24, scope: !6041)
!6043 = !DILocation(line: 5407, column: 15, scope: !6041)
!6044 = !DILocation(line: 5407, column: 7, scope: !6033)
!6045 = !DILocation(line: 5409, column: 12, scope: !6033)
!6046 = !DILocation(line: 5410, column: 10, scope: !6033)
!6047 = !DILocation(line: 5411, column: 3, scope: !6033)
!6048 = !DILocation(line: 5412, column: 1, scope: !6033)
!6049 = distinct !DISubprogram(name: "fold_builtin_strcpy", scope: !3, file: !3, line: 8503, type: !6050, scopeLine: 8504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6052)
!6050 = !DISubroutineType(types: !6051)
!6051 = !{!2914, !2998, !2914, !2914, !2914, !2914}
!6052 = !{!6053, !6054, !6055, !6056, !6057, !6058}
!6053 = !DILocalVariable(name: "loc", arg: 1, scope: !6049, file: !3, line: 8503, type: !2998)
!6054 = !DILocalVariable(name: "fndecl", arg: 2, scope: !6049, file: !3, line: 8503, type: !2914)
!6055 = !DILocalVariable(name: "dest", arg: 3, scope: !6049, file: !3, line: 8503, type: !2914)
!6056 = !DILocalVariable(name: "src", arg: 4, scope: !6049, file: !3, line: 8503, type: !2914)
!6057 = !DILocalVariable(name: "len", arg: 5, scope: !6049, file: !3, line: 8503, type: !2914)
!6058 = !DILocalVariable(name: "fn", scope: !6049, file: !3, line: 8505, type: !2914)
!6059 = !DILocation(line: 0, scope: !6049)
!6060 = !DILocation(line: 8507, column: 8, scope: !6061)
!6061 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 8507, column: 7)
!6062 = !DILocation(line: 8508, column: 7, scope: !6061)
!6063 = !DILocation(line: 8508, column: 11, scope: !6061)
!6064 = !DILocation(line: 8507, column: 7, scope: !6049)
!6065 = !DILocation(line: 8512, column: 7, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 8512, column: 7)
!6067 = !DILocation(line: 8512, column: 7, scope: !6049)
!6068 = !DILocation(line: 8513, column: 35, scope: !6066)
!6069 = !DILocation(line: 8513, column: 12, scope: !6066)
!6070 = !DILocation(line: 8513, column: 5, scope: !6066)
!6071 = !DILocation(line: 8515, column: 37, scope: !6072)
!6072 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 8515, column: 7)
!6073 = !DILocation(line: 8515, column: 7, scope: !6072)
!6074 = !DILocation(line: 8515, column: 7, scope: !6049)
!6075 = !DILocation(line: 8518, column: 8, scope: !6049)
!6076 = !DILocation(line: 8519, column: 8, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 8519, column: 7)
!6078 = !DILocation(line: 8519, column: 7, scope: !6049)
!6079 = !DILocation(line: 8522, column: 8, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 8522, column: 7)
!6081 = !DILocation(line: 8522, column: 7, scope: !6049)
!6082 = !DILocation(line: 8524, column: 13, scope: !6083)
!6083 = distinct !DILexicalBlock(scope: !6080, file: !3, line: 8523, column: 5)
!6084 = !DILocation(line: 8525, column: 13, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 8525, column: 11)
!6086 = !DILocation(line: 8525, column: 17, scope: !6085)
!6087 = !DILocation(line: 8525, column: 20, scope: !6085)
!6088 = !DILocation(line: 8525, column: 11, scope: !6083)
!6089 = !DILocation(line: 8529, column: 46, scope: !6049)
!6090 = !DILocation(line: 8529, column: 9, scope: !6049)
!6091 = !DILocation(line: 8530, column: 33, scope: !6049)
!6092 = !DILocation(line: 8531, column: 7, scope: !6049)
!6093 = !DILocation(line: 8530, column: 10, scope: !6049)
!6094 = !DILocation(line: 8530, column: 3, scope: !6049)
!6095 = !DILocation(line: 8532, column: 1, scope: !6049)
!6096 = distinct !DISubprogram(name: "validate_arg", scope: !3, file: !3, line: 10939, type: !6097, scopeLine: 10940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6099)
!6097 = !DISubroutineType(types: !6098)
!6098 = !{!2866, !4971, !134}
!6099 = !{!6100, !6101}
!6100 = !DILocalVariable(name: "arg", arg: 1, scope: !6096, file: !3, line: 10939, type: !4971)
!6101 = !DILocalVariable(name: "code", arg: 2, scope: !6096, file: !3, line: 10939, type: !134)
!6102 = !DILocation(line: 0, scope: !6096)
!6103 = !DILocation(line: 10941, column: 8, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6096, file: !3, line: 10941, column: 7)
!6105 = !DILocation(line: 10941, column: 7, scope: !6096)
!6106 = !DILocation(line: 10943, column: 12, scope: !6104)
!6107 = !DILocation(line: 10944, column: 12, scope: !6108)
!6108 = distinct !DILexicalBlock(scope: !6104, file: !3, line: 10943, column: 12)
!6109 = !DILocation(line: 10944, column: 5, scope: !6108)
!6110 = !DILocation(line: 10946, column: 12, scope: !6111)
!6111 = distinct !DILexicalBlock(scope: !6108, file: !3, line: 10945, column: 12)
!6112 = !DILocation(line: 10946, column: 5, scope: !6111)
!6113 = !DILocation(line: 10947, column: 18, scope: !6096)
!6114 = !DILocation(line: 10947, column: 15, scope: !6096)
!6115 = !DILocation(line: 10947, column: 10, scope: !6096)
!6116 = !DILocation(line: 10947, column: 3, scope: !6096)
!6117 = !DILocation(line: 10948, column: 1, scope: !6096)
!6118 = distinct !DISubprogram(name: "fold_builtin_strncpy", scope: !3, file: !3, line: 8579, type: !6119, scopeLine: 8581, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6121)
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!2914, !2998, !2914, !2914, !2914, !2914, !2914}
!6121 = !{!6122, !6123, !6124, !6125, !6126, !6127, !6128}
!6122 = !DILocalVariable(name: "loc", arg: 1, scope: !6118, file: !3, line: 8579, type: !2998)
!6123 = !DILocalVariable(name: "fndecl", arg: 2, scope: !6118, file: !3, line: 8579, type: !2914)
!6124 = !DILocalVariable(name: "dest", arg: 3, scope: !6118, file: !3, line: 8579, type: !2914)
!6125 = !DILocalVariable(name: "src", arg: 4, scope: !6118, file: !3, line: 8580, type: !2914)
!6126 = !DILocalVariable(name: "len", arg: 5, scope: !6118, file: !3, line: 8580, type: !2914)
!6127 = !DILocalVariable(name: "slen", arg: 6, scope: !6118, file: !3, line: 8580, type: !2914)
!6128 = !DILocalVariable(name: "fn", scope: !6118, file: !3, line: 8582, type: !2914)
!6129 = !DILocation(line: 0, scope: !6118)
!6130 = !DILocation(line: 8584, column: 8, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 8584, column: 7)
!6132 = !DILocation(line: 8585, column: 7, scope: !6131)
!6133 = !DILocation(line: 8585, column: 11, scope: !6131)
!6134 = !DILocation(line: 8586, column: 7, scope: !6131)
!6135 = !DILocation(line: 8586, column: 11, scope: !6131)
!6136 = !DILocation(line: 8584, column: 7, scope: !6118)
!6137 = !DILocation(line: 8590, column: 7, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 8590, column: 7)
!6139 = !DILocation(line: 8590, column: 7, scope: !6118)
!6140 = !DILocation(line: 8591, column: 39, scope: !6138)
!6141 = !DILocation(line: 8591, column: 12, scope: !6138)
!6142 = !DILocation(line: 8591, column: 5, scope: !6138)
!6143 = !DILocation(line: 8595, column: 11, scope: !6144)
!6144 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 8595, column: 7)
!6145 = !DILocation(line: 8595, column: 16, scope: !6144)
!6146 = !DILocation(line: 8595, column: 19, scope: !6144)
!6147 = !DILocation(line: 8595, column: 35, scope: !6144)
!6148 = !DILocation(line: 8595, column: 7, scope: !6118)
!6149 = !DILocation(line: 8598, column: 8, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 8598, column: 7)
!6151 = !DILocation(line: 8598, column: 7, scope: !6118)
!6152 = !DILocation(line: 8599, column: 12, scope: !6150)
!6153 = !DILocation(line: 8599, column: 5, scope: !6150)
!6154 = !DILocation(line: 8602, column: 12, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 8602, column: 7)
!6156 = !DILocation(line: 8602, column: 17, scope: !6155)
!6157 = !DILocation(line: 8602, column: 20, scope: !6155)
!6158 = !DILocation(line: 8602, column: 37, scope: !6155)
!6159 = !DILocation(line: 8602, column: 7, scope: !6118)
!6160 = !DILocation(line: 8605, column: 48, scope: !6118)
!6161 = !DILocation(line: 8605, column: 10, scope: !6118)
!6162 = !DILocation(line: 8610, column: 7, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 8610, column: 7)
!6164 = !DILocation(line: 8610, column: 7, scope: !6118)
!6165 = !DILocation(line: 8614, column: 8, scope: !6118)
!6166 = !DILocation(line: 8615, column: 8, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6118, file: !3, line: 8615, column: 7)
!6168 = !DILocation(line: 8615, column: 7, scope: !6118)
!6169 = !DILocation(line: 8617, column: 33, scope: !6118)
!6170 = !DILocation(line: 8618, column: 7, scope: !6118)
!6171 = !DILocation(line: 8617, column: 10, scope: !6118)
!6172 = !DILocation(line: 8617, column: 3, scope: !6118)
!6173 = !DILocation(line: 8619, column: 1, scope: !6118)
!6174 = distinct !DISubprogram(name: "fold_call_expr", scope: !3, file: !3, line: 10755, type: !6175, scopeLine: 10756, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6177)
!6175 = !DISubroutineType(types: !6176)
!6176 = !{!2914, !2998, !2914, !2866}
!6177 = !{!6178, !6179, !6180, !6181, !6182, !6183, !6186, !6189}
!6178 = !DILocalVariable(name: "loc", arg: 1, scope: !6174, file: !3, line: 10755, type: !2998)
!6179 = !DILocalVariable(name: "exp", arg: 2, scope: !6174, file: !3, line: 10755, type: !2914)
!6180 = !DILocalVariable(name: "ignore", arg: 3, scope: !6174, file: !3, line: 10755, type: !2866)
!6181 = !DILocalVariable(name: "ret", scope: !6174, file: !3, line: 10757, type: !2914)
!6182 = !DILocalVariable(name: "fndecl", scope: !6174, file: !3, line: 10758, type: !2914)
!6183 = !DILocalVariable(name: "nargs", scope: !6184, file: !3, line: 10767, type: !1249)
!6184 = distinct !DILexicalBlock(scope: !6185, file: !3, line: 10766, column: 5)
!6185 = distinct !DILexicalBlock(scope: !6174, file: !3, line: 10759, column: 7)
!6186 = !DILocalVariable(name: "fndecl2", scope: !6187, file: !3, line: 10774, type: !2914)
!6187 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 10773, column: 2)
!6188 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 10772, column: 11)
!6189 = !DILocalVariable(name: "args", scope: !6190, file: !3, line: 10792, type: !3231)
!6190 = distinct !DILexicalBlock(scope: !6191, file: !3, line: 10791, column: 6)
!6191 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 10790, column: 8)
!6192 = distinct !DILexicalBlock(scope: !6193, file: !3, line: 10789, column: 2)
!6193 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 10786, column: 11)
!6194 = !DILocation(line: 0, scope: !6174)
!6195 = !DILocation(line: 10758, column: 17, scope: !6174)
!6196 = !DILocation(line: 10759, column: 7, scope: !6185)
!6197 = !DILocation(line: 10760, column: 7, scope: !6185)
!6198 = !DILocation(line: 10760, column: 10, scope: !6185)
!6199 = !DILocation(line: 10760, column: 29, scope: !6185)
!6200 = !DILocation(line: 10761, column: 7, scope: !6185)
!6201 = !DILocation(line: 10761, column: 10, scope: !6185)
!6202 = !DILocation(line: 10765, column: 7, scope: !6185)
!6203 = !DILocation(line: 10765, column: 11, scope: !6185)
!6204 = !DILocation(line: 10759, column: 7, scope: !6174)
!6205 = !DILocation(line: 10767, column: 19, scope: !6184)
!6206 = !DILocation(line: 0, scope: !6184)
!6207 = !DILocation(line: 10772, column: 11, scope: !6188)
!6208 = !DILocation(line: 10772, column: 17, scope: !6188)
!6209 = !DILocation(line: 10772, column: 20, scope: !6188)
!6210 = !DILocation(line: 10772, column: 63, scope: !6188)
!6211 = !DILocation(line: 10772, column: 11, scope: !6184)
!6212 = !DILocation(line: 10774, column: 19, scope: !6187)
!6213 = !DILocation(line: 0, scope: !6187)
!6214 = !DILocation(line: 10775, column: 8, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6187, file: !3, line: 10775, column: 8)
!6216 = !DILocation(line: 10776, column: 8, scope: !6215)
!6217 = !DILocation(line: 10776, column: 11, scope: !6215)
!6218 = !DILocation(line: 10776, column: 31, scope: !6215)
!6219 = !DILocation(line: 10777, column: 8, scope: !6215)
!6220 = !DILocation(line: 10777, column: 11, scope: !6215)
!6221 = !DILocation(line: 10777, column: 41, scope: !6215)
!6222 = !DILocation(line: 10778, column: 8, scope: !6215)
!6223 = !DILocation(line: 10778, column: 11, scope: !6215)
!6224 = !DILocation(line: 10778, column: 40, scope: !6215)
!6225 = !DILocation(line: 10775, column: 8, scope: !6187)
!6226 = !DILocation(line: 10780, column: 2, scope: !6188)
!6227 = !DILocation(line: 10782, column: 11, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 10782, column: 11)
!6229 = !DILocation(line: 10782, column: 11, scope: !6184)
!6230 = !DILocation(line: 10786, column: 11, scope: !6193)
!6231 = !DILocation(line: 10786, column: 40, scope: !6193)
!6232 = !DILocation(line: 10786, column: 11, scope: !6184)
!6233 = !DILocation(line: 10787, column: 19, scope: !6193)
!6234 = !DILocation(line: 10787, column: 41, scope: !6193)
!6235 = !DILocation(line: 10787, column: 11, scope: !6193)
!6236 = !DILocation(line: 10787, column: 4, scope: !6193)
!6237 = !DILocation(line: 10790, column: 14, scope: !6191)
!6238 = !DILocation(line: 10790, column: 8, scope: !6192)
!6239 = !DILocation(line: 10792, column: 21, scope: !6190)
!6240 = !DILocation(line: 0, scope: !6190)
!6241 = !DILocation(line: 10793, column: 14, scope: !6190)
!6242 = !DILocation(line: 10794, column: 6, scope: !6190)
!6243 = !DILocation(line: 10795, column: 9, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 10795, column: 8)
!6245 = !DILocation(line: 10795, column: 8, scope: !6192)
!6246 = !DILocation(line: 10796, column: 12, scope: !6244)
!6247 = !DILocation(line: 10796, column: 6, scope: !6244)
!6248 = !DILocation(line: 0, scope: !6192)
!6249 = !DILocation(line: 10797, column: 8, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 10797, column: 8)
!6251 = !DILocation(line: 10797, column: 8, scope: !6192)
!6252 = !DILocation(line: 10801, column: 3, scope: !6174)
!6253 = !DILocation(line: 10802, column: 1, scope: !6174)
!6254 = distinct !DISubprogram(name: "avoid_folding_inline_builtin", scope: !3, file: !3, line: 10741, type: !4846, scopeLine: 10742, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6255)
!6255 = !{!6256}
!6256 = !DILocalVariable(name: "fndecl", arg: 1, scope: !6254, file: !3, line: 10741, type: !2914)
!6257 = !DILocation(line: 0, scope: !6254)
!6258 = !DILocation(line: 10743, column: 11, scope: !6254)
!6259 = !DILocation(line: 10744, column: 4, scope: !6254)
!6260 = !DILocation(line: 10744, column: 7, scope: !6254)
!6261 = !DILocation(line: 10745, column: 4, scope: !6254)
!6262 = !DILocation(line: 10745, column: 7, scope: !6254)
!6263 = !DILocation(line: 10746, column: 4, scope: !6254)
!6264 = !DILocation(line: 10746, column: 14, scope: !6254)
!6265 = !DILocation(line: 10746, column: 8, scope: !6254)
!6266 = !DILocation(line: 10747, column: 4, scope: !6254)
!6267 = !DILocation(line: 10747, column: 42, scope: !6254)
!6268 = !DILocation(line: 10747, column: 7, scope: !6254)
!6269 = !DILocation(line: 10743, column: 3, scope: !6254)
!6270 = distinct !DISubprogram(name: "fold_builtin_n", scope: !3, file: !3, line: 10656, type: !6271, scopeLine: 10657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6273)
!6271 = !DISubroutineType(types: !6272)
!6272 = !{!2914, !2998, !2914, !3231, !1249, !2866}
!6273 = !{!6274, !6275, !6276, !6277, !6278, !6279}
!6274 = !DILocalVariable(name: "loc", arg: 1, scope: !6270, file: !3, line: 10656, type: !2998)
!6275 = !DILocalVariable(name: "fndecl", arg: 2, scope: !6270, file: !3, line: 10656, type: !2914)
!6276 = !DILocalVariable(name: "args", arg: 3, scope: !6270, file: !3, line: 10656, type: !3231)
!6277 = !DILocalVariable(name: "nargs", arg: 4, scope: !6270, file: !3, line: 10656, type: !1249)
!6278 = !DILocalVariable(name: "ignore", arg: 5, scope: !6270, file: !3, line: 10656, type: !2866)
!6279 = !DILocalVariable(name: "ret", scope: !6270, file: !3, line: 10658, type: !2914)
!6280 = !DILocation(line: 0, scope: !6270)
!6281 = !DILocation(line: 10660, column: 3, scope: !6270)
!6282 = !DILocation(line: 10663, column: 13, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 10661, column: 5)
!6284 = !DILocation(line: 10664, column: 7, scope: !6283)
!6285 = !DILocation(line: 10666, column: 42, scope: !6283)
!6286 = !DILocation(line: 10666, column: 13, scope: !6283)
!6287 = !DILocation(line: 10667, column: 7, scope: !6283)
!6288 = !DILocation(line: 10669, column: 42, scope: !6283)
!6289 = !DILocation(line: 10669, column: 51, scope: !6283)
!6290 = !DILocation(line: 10669, column: 13, scope: !6283)
!6291 = !DILocation(line: 10670, column: 7, scope: !6283)
!6292 = !DILocation(line: 10672, column: 42, scope: !6283)
!6293 = !DILocation(line: 10672, column: 51, scope: !6283)
!6294 = !DILocation(line: 10672, column: 60, scope: !6283)
!6295 = !DILocation(line: 10672, column: 13, scope: !6283)
!6296 = !DILocation(line: 10673, column: 7, scope: !6283)
!6297 = !DILocation(line: 10675, column: 42, scope: !6283)
!6298 = !DILocation(line: 10675, column: 51, scope: !6283)
!6299 = !DILocation(line: 10675, column: 60, scope: !6283)
!6300 = !DILocation(line: 10675, column: 69, scope: !6283)
!6301 = !DILocation(line: 10675, column: 13, scope: !6283)
!6302 = !DILocation(line: 10677, column: 7, scope: !6283)
!6303 = !DILocation(line: 10681, column: 7, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6270, file: !3, line: 10681, column: 7)
!6305 = !DILocation(line: 10681, column: 7, scope: !6270)
!6306 = !DILocation(line: 10683, column: 13, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 10682, column: 5)
!6308 = !DILocation(line: 10684, column: 7, scope: !6307)
!6309 = !DILocation(line: 10685, column: 7, scope: !6307)
!6310 = !DILocation(line: 10685, column: 29, scope: !6307)
!6311 = !DILocation(line: 10686, column: 7, scope: !6307)
!6312 = !DILocation(line: 10689, column: 1, scope: !6270)
!6313 = distinct !DISubprogram(name: "fold_builtin_varargs", scope: !3, file: !3, line: 10699, type: !6314, scopeLine: 10701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6316)
!6314 = !DISubroutineType(types: !6315)
!6315 = !{!2914, !2998, !2914, !2914, !2866}
!6316 = !{!6317, !6318, !6319, !6320, !6321, !6322}
!6317 = !DILocalVariable(name: "loc", arg: 1, scope: !6313, file: !3, line: 10699, type: !2998)
!6318 = !DILocalVariable(name: "fndecl", arg: 2, scope: !6313, file: !3, line: 10699, type: !2914)
!6319 = !DILocalVariable(name: "exp", arg: 3, scope: !6313, file: !3, line: 10699, type: !2914)
!6320 = !DILocalVariable(name: "ignore", arg: 4, scope: !6313, file: !3, line: 10700, type: !2866)
!6321 = !DILocalVariable(name: "fcode", scope: !6313, file: !3, line: 10702, type: !527)
!6322 = !DILocalVariable(name: "ret", scope: !6313, file: !3, line: 10703, type: !2914)
!6323 = !DILocation(line: 0, scope: !6313)
!6324 = !DILocation(line: 10702, column: 34, scope: !6313)
!6325 = !DILocation(line: 10705, column: 3, scope: !6313)
!6326 = !DILocation(line: 10709, column: 13, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 10706, column: 5)
!6328 = !DILocation(line: 10710, column: 7, scope: !6327)
!6329 = !DILocation(line: 10714, column: 13, scope: !6327)
!6330 = !DILocation(line: 10715, column: 7, scope: !6327)
!6331 = !DILocation(line: 10718, column: 13, scope: !6327)
!6332 = !DILocation(line: 10719, column: 7, scope: !6327)
!6333 = !DILocation(line: 10724, column: 7, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 10724, column: 7)
!6335 = !DILocation(line: 10724, column: 7, scope: !6313)
!6336 = !DILocation(line: 10726, column: 13, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 10725, column: 5)
!6338 = !DILocation(line: 10727, column: 7, scope: !6337)
!6339 = !DILocation(line: 10728, column: 7, scope: !6337)
!6340 = !DILocation(line: 10728, column: 29, scope: !6337)
!6341 = !DILocation(line: 10729, column: 7, scope: !6337)
!6342 = !DILocation(line: 10732, column: 1, scope: !6313)
!6343 = distinct !DISubprogram(name: "build_function_call_expr", scope: !3, file: !3, line: 10808, type: !6344, scopeLine: 10809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6346)
!6344 = !DISubroutineType(types: !6345)
!6345 = !{!2914, !2998, !2914, !2914}
!6346 = !{!6347, !6348, !6349, !6350, !6351, !6352, !6353, !6354}
!6347 = !DILocalVariable(name: "loc", arg: 1, scope: !6343, file: !3, line: 10808, type: !2998)
!6348 = !DILocalVariable(name: "fndecl", arg: 2, scope: !6343, file: !3, line: 10808, type: !2914)
!6349 = !DILocalVariable(name: "arglist", arg: 3, scope: !6343, file: !3, line: 10808, type: !2914)
!6350 = !DILocalVariable(name: "fntype", scope: !6343, file: !3, line: 10810, type: !2914)
!6351 = !DILocalVariable(name: "fn", scope: !6343, file: !3, line: 10811, type: !2914)
!6352 = !DILocalVariable(name: "n", scope: !6343, file: !3, line: 10812, type: !1249)
!6353 = !DILocalVariable(name: "argarray", scope: !6343, file: !3, line: 10813, type: !3231)
!6354 = !DILocalVariable(name: "i", scope: !6343, file: !3, line: 10814, type: !1249)
!6355 = !DILocation(line: 0, scope: !6343)
!6356 = !DILocation(line: 10810, column: 17, scope: !6343)
!6357 = !DILocation(line: 10811, column: 13, scope: !6343)
!6358 = !DILocation(line: 10812, column: 11, scope: !6343)
!6359 = !DILocation(line: 10813, column: 29, scope: !6343)
!6360 = !DILocation(line: 10816, column: 8, scope: !6361)
!6361 = distinct !DILexicalBlock(scope: !6343, file: !3, line: 10816, column: 3)
!6362 = !DILocation(line: 10816, column: 17, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6361, file: !3, line: 10816, column: 3)
!6364 = !DILocation(line: 10816, column: 3, scope: !6361)
!6365 = !DILocation(line: 10817, column: 19, scope: !6363)
!6366 = !DILocation(line: 10817, column: 5, scope: !6363)
!6367 = !DILocation(line: 10817, column: 17, scope: !6363)
!6368 = !DILocation(line: 10816, column: 23, scope: !6363)
!6369 = !DILocation(line: 10816, column: 37, scope: !6363)
!6370 = !DILocation(line: 10816, column: 3, scope: !6363)
!6371 = distinct !{!6371, !6364, !6372}
!6372 = !DILocation(line: 10817, column: 19, scope: !6361)
!6373 = !DILocation(line: 10818, column: 40, scope: !6343)
!6374 = !DILocation(line: 10818, column: 10, scope: !6343)
!6375 = !DILocation(line: 10818, column: 3, scope: !6343)
!6376 = distinct !DISubprogram(name: "fold_builtin_call_array", scope: !3, file: !3, line: 10845, type: !6377, scopeLine: 10849, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6379)
!6377 = !DISubroutineType(types: !6378)
!6378 = !{!2914, !2998, !2914, !2914, !1249, !3231}
!6379 = !{!6380, !6381, !6382, !6383, !6384, !6385, !6386, !6387, !6388, !6391, !6396}
!6380 = !DILocalVariable(name: "loc", arg: 1, scope: !6376, file: !3, line: 10845, type: !2998)
!6381 = !DILocalVariable(name: "type", arg: 2, scope: !6376, file: !3, line: 10845, type: !2914)
!6382 = !DILocalVariable(name: "fn", arg: 3, scope: !6376, file: !3, line: 10846, type: !2914)
!6383 = !DILocalVariable(name: "n", arg: 4, scope: !6376, file: !3, line: 10847, type: !1249)
!6384 = !DILocalVariable(name: "argarray", arg: 5, scope: !6376, file: !3, line: 10848, type: !3231)
!6385 = !DILocalVariable(name: "ret", scope: !6376, file: !3, line: 10850, type: !2914)
!6386 = !DILocalVariable(name: "i", scope: !6376, file: !3, line: 10851, type: !1249)
!6387 = !DILocalVariable(name: "exp", scope: !6376, file: !3, line: 10852, type: !2914)
!6388 = !DILocalVariable(name: "fndecl", scope: !6389, file: !3, line: 10856, type: !2914)
!6389 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 10855, column: 3)
!6390 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 10854, column: 7)
!6391 = !DILocalVariable(name: "fndecl2", scope: !6392, file: !3, line: 10864, type: !2914)
!6392 = distinct !DILexicalBlock(scope: !6393, file: !3, line: 10863, column: 4)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 10862, column: 6)
!6394 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 10859, column: 7)
!6395 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 10857, column: 9)
!6396 = !DILocalVariable(name: "arglist", scope: !6397, file: !3, line: 10875, type: !2914)
!6397 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 10874, column: 11)
!6398 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 10873, column: 13)
!6399 = !DILocation(line: 0, scope: !6376)
!6400 = !DILocation(line: 10854, column: 7, scope: !6390)
!6401 = !DILocation(line: 10854, column: 22, scope: !6390)
!6402 = !DILocation(line: 10854, column: 7, scope: !6376)
!6403 = !DILocation(line: 10856, column: 19, scope: !6389)
!6404 = !DILocation(line: 0, scope: !6389)
!6405 = !DILocation(line: 10857, column: 9, scope: !6395)
!6406 = !DILocation(line: 10857, column: 28, scope: !6395)
!6407 = !DILocation(line: 10858, column: 9, scope: !6395)
!6408 = !DILocation(line: 10858, column: 12, scope: !6395)
!6409 = !DILocation(line: 10857, column: 9, scope: !6389)
!6410 = !DILocation(line: 10862, column: 6, scope: !6393)
!6411 = !DILocation(line: 10862, column: 8, scope: !6393)
!6412 = !DILocation(line: 10862, column: 11, scope: !6393)
!6413 = !DILocation(line: 10862, column: 39, scope: !6393)
!6414 = !DILocation(line: 10862, column: 6, scope: !6394)
!6415 = !DILocation(line: 10864, column: 21, scope: !6392)
!6416 = !DILocation(line: 0, scope: !6392)
!6417 = !DILocation(line: 10865, column: 10, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6392, file: !3, line: 10865, column: 10)
!6419 = !DILocation(line: 10866, column: 3, scope: !6418)
!6420 = !DILocation(line: 10866, column: 6, scope: !6418)
!6421 = !DILocation(line: 10866, column: 26, scope: !6418)
!6422 = !DILocation(line: 10867, column: 3, scope: !6418)
!6423 = !DILocation(line: 10867, column: 6, scope: !6418)
!6424 = !DILocation(line: 10867, column: 36, scope: !6418)
!6425 = !DILocation(line: 10868, column: 3, scope: !6418)
!6426 = !DILocation(line: 10868, column: 6, scope: !6418)
!6427 = !DILocation(line: 10868, column: 35, scope: !6418)
!6428 = !DILocation(line: 10865, column: 10, scope: !6392)
!6429 = !DILocation(line: 10869, column: 15, scope: !6418)
!6430 = !DILocation(line: 10869, column: 8, scope: !6418)
!6431 = !DILocation(line: 10871, column: 6, scope: !6432)
!6432 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 10871, column: 6)
!6433 = !DILocation(line: 10871, column: 6, scope: !6394)
!6434 = !DILocation(line: 10872, column: 11, scope: !6432)
!6435 = !DILocation(line: 10872, column: 4, scope: !6432)
!6436 = !DILocation(line: 10873, column: 13, scope: !6398)
!6437 = !DILocation(line: 10873, column: 42, scope: !6398)
!6438 = !DILocation(line: 10873, column: 13, scope: !6394)
!6439 = !DILocation(line: 0, scope: !6397)
!6440 = !DILocation(line: 10876, column: 11, scope: !6441)
!6441 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 10876, column: 6)
!6442 = !DILocation(line: 0, scope: !6441)
!6443 = !DILocation(line: 10876, column: 24, scope: !6444)
!6444 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 10876, column: 6)
!6445 = !DILocation(line: 10876, column: 6, scope: !6441)
!6446 = !DILocation(line: 10877, column: 18, scope: !6444)
!6447 = !DILocation(line: 10876, column: 6, scope: !6444)
!6448 = distinct !{!6448, !6445, !6449}
!6449 = !DILocation(line: 10877, column: 18, scope: !6441)
!6450 = !DILocation(line: 10878, column: 27, scope: !6397)
!6451 = !DILocation(line: 10878, column: 19, scope: !6397)
!6452 = !DILocation(line: 10879, column: 17, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6397, file: !3, line: 10879, column: 17)
!6454 = !DILocation(line: 10879, column: 17, scope: !6397)
!6455 = !DILocation(line: 10881, column: 13, scope: !6397)
!6456 = !DILocation(line: 10881, column: 6, scope: !6397)
!6457 = !DILocation(line: 10883, column: 20, scope: !6458)
!6458 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 10883, column: 18)
!6459 = !DILocation(line: 10883, column: 18, scope: !6398)
!6460 = !DILocation(line: 10887, column: 19, scope: !6461)
!6461 = distinct !DILexicalBlock(scope: !6458, file: !3, line: 10884, column: 11)
!6462 = !DILocation(line: 10888, column: 17, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 10888, column: 17)
!6464 = !DILocation(line: 10888, column: 17, scope: !6461)
!6465 = !DILocation(line: 10893, column: 15, scope: !6394)
!6466 = !DILocation(line: 10894, column: 15, scope: !6394)
!6467 = !DILocation(line: 10895, column: 16, scope: !6394)
!6468 = !DILocation(line: 10895, column: 9, scope: !6394)
!6469 = !DILocation(line: 10899, column: 10, scope: !6376)
!6470 = !DILocation(line: 10899, column: 3, scope: !6376)
!6471 = !DILocation(line: 10900, column: 1, scope: !6376)
!6472 = distinct !DISubprogram(name: "validate_gimple_arglist", scope: !3, file: !3, line: 10960, type: !6473, scopeLine: 10961, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6476)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{!2866, !6475, null}
!6475 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_gimple", file: !2915, line: 60, baseType: !4300)
!6476 = !{!6477, !6478, !6479, !6480, !6481, !6482, !6483}
!6477 = !DILocalVariable(name: "call", arg: 1, scope: !6472, file: !3, line: 10960, type: !6475)
!6478 = !DILocalVariable(name: "code", scope: !6472, file: !3, line: 10962, type: !134)
!6479 = !DILocalVariable(name: "res", scope: !6472, file: !3, line: 10963, type: !2866)
!6480 = !DILocalVariable(name: "ap", scope: !6472, file: !3, line: 10964, type: !5718)
!6481 = !DILocalVariable(name: "arg", scope: !6472, file: !3, line: 10965, type: !4971)
!6482 = !DILocalVariable(name: "i", scope: !6472, file: !3, line: 10966, type: !3342)
!6483 = !DILabel(scope: !6472, name: "end", file: !3, line: 10999)
!6484 = !DILocation(line: 0, scope: !6472)
!6485 = !DILocation(line: 10964, column: 3, scope: !6472)
!6486 = !DILocation(line: 10964, column: 11, scope: !6472)
!6487 = !DILocation(line: 10968, column: 3, scope: !6472)
!6488 = !DILocation(line: 0, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 10972, column: 5)
!6490 = !DILocation(line: 10971, column: 3, scope: !6472)
!6491 = !DILocation(line: 10973, column: 31, scope: !6489)
!6492 = !DILocation(line: 10974, column: 7, scope: !6489)
!6493 = !DILocation(line: 10983, column: 16, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6489, file: !3, line: 10975, column: 2)
!6495 = !DILocation(line: 10983, column: 13, scope: !6494)
!6496 = !DILocation(line: 10983, column: 10, scope: !6494)
!6497 = !DILocation(line: 10984, column: 4, scope: !6494)
!6498 = !DILocation(line: 10989, column: 34, scope: !6494)
!6499 = !DILocation(line: 10989, column: 33, scope: !6494)
!6500 = !DILocation(line: 10989, column: 10, scope: !6494)
!6501 = !DILocation(line: 10990, column: 9, scope: !6502)
!6502 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 10990, column: 8)
!6503 = !DILocation(line: 10990, column: 8, scope: !6494)
!6504 = !DILocation(line: 11000, column: 3, scope: !6472)
!6505 = !DILocation(line: 10999, column: 2, scope: !6472)
!6506 = !DILocation(line: 11003, column: 1, scope: !6472)
!6507 = !DILocation(line: 11002, column: 3, scope: !6472)
!6508 = distinct !DISubprogram(name: "gimple_call_num_args", scope: !1248, file: !1248, line: 2013, type: !6509, scopeLine: 2014, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6511)
!6509 = !DISubroutineType(types: !6510)
!6510 = !{!7, !6475}
!6511 = !{!6512, !6513}
!6512 = !DILocalVariable(name: "gs", arg: 1, scope: !6508, file: !1248, line: 2013, type: !6475)
!6513 = !DILocalVariable(name: "num_ops", scope: !6508, file: !1248, line: 2015, type: !7)
!6514 = !DILocation(line: 0, scope: !6508)
!6515 = !DILocation(line: 2017, column: 13, scope: !6508)
!6516 = !DILocation(line: 2018, column: 18, scope: !6508)
!6517 = !DILocation(line: 2018, column: 3, scope: !6508)
!6518 = distinct !DISubprogram(name: "gimple_call_arg", scope: !1248, file: !1248, line: 2025, type: !6519, scopeLine: 2026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6521)
!6519 = !DISubroutineType(types: !6520)
!6520 = !{!2914, !6475, !7}
!6521 = !{!6522, !6523}
!6522 = !DILocalVariable(name: "gs", arg: 1, scope: !6518, file: !1248, line: 2025, type: !6475)
!6523 = !DILocalVariable(name: "index", arg: 2, scope: !6518, file: !1248, line: 2025, type: !7)
!6524 = !DILocation(line: 0, scope: !6518)
!6525 = !DILocation(line: 2028, column: 31, scope: !6518)
!6526 = !DILocation(line: 2028, column: 10, scope: !6518)
!6527 = !DILocation(line: 2028, column: 3, scope: !6518)
!6528 = distinct !DISubprogram(name: "validate_arglist", scope: !3, file: !3, line: 11011, type: !6529, scopeLine: 11012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6531)
!6529 = !DISubroutineType(types: !6530)
!6530 = !{!2866, !4971, null}
!6531 = !{!6532, !6533, !6534, !6535, !6536, !6537, !6538}
!6532 = !DILocalVariable(name: "callexpr", arg: 1, scope: !6528, file: !3, line: 11011, type: !4971)
!6533 = !DILocalVariable(name: "code", scope: !6528, file: !3, line: 11013, type: !134)
!6534 = !DILocalVariable(name: "res", scope: !6528, file: !3, line: 11014, type: !2866)
!6535 = !DILocalVariable(name: "ap", scope: !6528, file: !3, line: 11015, type: !5718)
!6536 = !DILocalVariable(name: "iter", scope: !6528, file: !3, line: 11016, type: !5924)
!6537 = !DILocalVariable(name: "arg", scope: !6528, file: !3, line: 11017, type: !4971)
!6538 = !DILabel(scope: !6528, name: "end", file: !3, line: 11050)
!6539 = !DILocation(line: 0, scope: !6528)
!6540 = !DILocation(line: 11015, column: 3, scope: !6528)
!6541 = !DILocation(line: 11015, column: 11, scope: !6528)
!6542 = !DILocation(line: 11016, column: 3, scope: !6528)
!6543 = !DILocation(line: 11019, column: 3, scope: !6528)
!6544 = !DILocation(line: 11020, column: 3, scope: !6528)
!6545 = !DILocation(line: 0, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6528, file: !3, line: 11023, column: 5)
!6547 = !DILocation(line: 11022, column: 3, scope: !6528)
!6548 = !DILocation(line: 11024, column: 31, scope: !6546)
!6549 = !DILocation(line: 11025, column: 7, scope: !6546)
!6550 = !DILocation(line: 11034, column: 11, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 11026, column: 2)
!6552 = !DILocation(line: 11034, column: 10, scope: !6551)
!6553 = !DILocation(line: 11035, column: 4, scope: !6551)
!6554 = !DILocation(line: 11040, column: 10, scope: !6551)
!6555 = !DILocation(line: 11041, column: 9, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 11041, column: 8)
!6557 = !DILocation(line: 11041, column: 8, scope: !6551)
!6558 = !DILocation(line: 11051, column: 3, scope: !6528)
!6559 = !DILocation(line: 11050, column: 2, scope: !6528)
!6560 = !DILocation(line: 11054, column: 1, scope: !6528)
!6561 = !DILocation(line: 11053, column: 3, scope: !6528)
!6562 = distinct !DISubprogram(name: "default_expand_builtin", scope: !3, file: !3, line: 11059, type: !5796, scopeLine: 11064, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6563)
!6563 = !{!6564, !6565, !6566, !6567, !6568}
!6564 = !DILocalVariable(name: "exp", arg: 1, scope: !6562, file: !3, line: 11059, type: !2914)
!6565 = !DILocalVariable(name: "target", arg: 2, scope: !6562, file: !3, line: 11060, type: !3048)
!6566 = !DILocalVariable(name: "subtarget", arg: 3, scope: !6562, file: !3, line: 11061, type: !3048)
!6567 = !DILocalVariable(name: "mode", arg: 4, scope: !6562, file: !3, line: 11062, type: !5)
!6568 = !DILocalVariable(name: "ignore", arg: 5, scope: !6562, file: !3, line: 11063, type: !1249)
!6569 = !DILocation(line: 0, scope: !6562)
!6570 = !DILocation(line: 11065, column: 3, scope: !6562)
!6571 = distinct !DISubprogram(name: "fold_builtin_fputs", scope: !3, file: !3, line: 11583, type: !6572, scopeLine: 11585, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6574)
!6572 = !DISubroutineType(types: !6573)
!6573 = !{!2914, !2998, !2914, !2914, !2866, !2866, !2914}
!6574 = !{!6575, !6576, !6577, !6578, !6579, !6580, !6581, !6582, !6583}
!6575 = !DILocalVariable(name: "loc", arg: 1, scope: !6571, file: !3, line: 11583, type: !2998)
!6576 = !DILocalVariable(name: "arg0", arg: 2, scope: !6571, file: !3, line: 11583, type: !2914)
!6577 = !DILocalVariable(name: "arg1", arg: 3, scope: !6571, file: !3, line: 11583, type: !2914)
!6578 = !DILocalVariable(name: "ignore", arg: 4, scope: !6571, file: !3, line: 11584, type: !2866)
!6579 = !DILocalVariable(name: "unlocked", arg: 5, scope: !6571, file: !3, line: 11584, type: !2866)
!6580 = !DILocalVariable(name: "len", arg: 6, scope: !6571, file: !3, line: 11584, type: !2914)
!6581 = !DILocalVariable(name: "fn_fputc", scope: !6571, file: !3, line: 11588, type: !5266)
!6582 = !DILocalVariable(name: "fn_fwrite", scope: !6571, file: !3, line: 11590, type: !5266)
!6583 = !DILocalVariable(name: "p", scope: !6584, file: !3, line: 11619, type: !2871)
!6584 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 11618, column: 7)
!6585 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 11612, column: 5)
!6586 = !DILocation(line: 0, scope: !6571)
!6587 = !DILocation(line: 11588, column: 25, scope: !6571)
!6588 = !DILocation(line: 11590, column: 26, scope: !6571)
!6589 = !DILocation(line: 11594, column: 8, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 11594, column: 7)
!6591 = !DILocation(line: 11594, column: 7, scope: !6571)
!6592 = !DILocation(line: 11598, column: 8, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 11598, column: 7)
!6594 = !DILocation(line: 11599, column: 7, scope: !6593)
!6595 = !DILocation(line: 11599, column: 11, scope: !6593)
!6596 = !DILocation(line: 11598, column: 7, scope: !6571)
!6597 = !DILocation(line: 11602, column: 9, scope: !6598)
!6598 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 11602, column: 7)
!6599 = !DILocation(line: 11602, column: 7, scope: !6571)
!6600 = !DILocation(line: 11603, column: 11, scope: !6598)
!6601 = !DILocation(line: 11603, column: 5, scope: !6598)
!6602 = !DILocation(line: 11607, column: 8, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6571, file: !3, line: 11607, column: 7)
!6604 = !DILocation(line: 11608, column: 7, scope: !6603)
!6605 = !DILocation(line: 11608, column: 10, scope: !6603)
!6606 = !DILocation(line: 11608, column: 26, scope: !6603)
!6607 = !DILocation(line: 11607, column: 7, scope: !6571)
!6608 = !DILocation(line: 11611, column: 11, scope: !6571)
!6609 = !DILocation(line: 11611, column: 3, scope: !6571)
!6610 = !DILocation(line: 11614, column: 41, scope: !6585)
!6611 = !DILocation(line: 11615, column: 11, scope: !6585)
!6612 = !DILocation(line: 11614, column: 14, scope: !6585)
!6613 = !DILocation(line: 11614, column: 7, scope: !6585)
!6614 = !DILocation(line: 11619, column: 18, scope: !6584)
!6615 = !DILocation(line: 0, scope: !6584)
!6616 = !DILocation(line: 11621, column: 8, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 11621, column: 6)
!6618 = !DILocation(line: 11621, column: 6, scope: !6584)
!6619 = !DILocation(line: 11623, column: 11, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 11623, column: 11)
!6621 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 11622, column: 4)
!6622 = !DILocation(line: 11623, column: 11, scope: !6621)
!6623 = !DILocation(line: 11625, column: 37, scope: !6620)
!6624 = !DILocation(line: 11625, column: 11, scope: !6620)
!6625 = !DILocation(line: 11624, column: 15, scope: !6620)
!6626 = !DILocation(line: 11624, column: 8, scope: !6620)
!6627 = !DILocation(line: 11634, column: 36, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 11634, column: 6)
!6629 = distinct !DILexicalBlock(scope: !6585, file: !3, line: 11632, column: 7)
!6630 = !DILocation(line: 11634, column: 6, scope: !6628)
!6631 = !DILocation(line: 11638, column: 6, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 11638, column: 6)
!6633 = !DILocation(line: 11634, column: 6, scope: !6629)
!6634 = !DILocation(line: 11640, column: 7, scope: !6632)
!6635 = !DILocation(line: 11639, column: 11, scope: !6632)
!6636 = !DILocation(line: 11639, column: 4, scope: !6632)
!6637 = !DILocation(line: 11645, column: 7, scope: !6585)
!6638 = !DILocation(line: 11647, column: 3, scope: !6571)
!6639 = !DILocation(line: 11648, column: 1, scope: !6571)
!6640 = distinct !DISubprogram(name: "c_getstr", scope: !3, file: !3, line: 526, type: !6641, scopeLine: 527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6643)
!6641 = !DISubroutineType(types: !6642)
!6642 = !{!2871, !2914}
!6643 = !{!6644, !6645}
!6644 = !DILocalVariable(name: "src", arg: 1, scope: !6640, file: !3, line: 526, type: !2914)
!6645 = !DILocalVariable(name: "offset_node", scope: !6640, file: !3, line: 528, type: !2914)
!6646 = !DILocation(line: 0, scope: !6640)
!6647 = !DILocation(line: 528, column: 3, scope: !6640)
!6648 = !DILocation(line: 530, column: 9, scope: !6640)
!6649 = !DILocation(line: 531, column: 11, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 531, column: 7)
!6651 = !DILocation(line: 531, column: 7, scope: !6640)
!6652 = !DILocation(line: 534, column: 7, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 534, column: 7)
!6654 = !DILocation(line: 534, column: 19, scope: !6653)
!6655 = !DILocation(line: 534, column: 7, scope: !6640)
!6656 = !DILocation(line: 535, column: 12, scope: !6653)
!6657 = !DILocation(line: 535, column: 5, scope: !6653)
!6658 = !DILocation(line: 536, column: 13, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 536, column: 12)
!6660 = !DILocation(line: 537, column: 5, scope: !6659)
!6661 = !DILocation(line: 537, column: 26, scope: !6659)
!6662 = !DILocation(line: 537, column: 39, scope: !6659)
!6663 = !DILocation(line: 537, column: 64, scope: !6659)
!6664 = !DILocation(line: 537, column: 8, scope: !6659)
!6665 = !DILocation(line: 537, column: 69, scope: !6659)
!6666 = !DILocation(line: 536, column: 12, scope: !6653)
!6667 = !DILocation(line: 540, column: 10, scope: !6640)
!6668 = !DILocation(line: 540, column: 52, scope: !6640)
!6669 = !DILocation(line: 540, column: 38, scope: !6640)
!6670 = !DILocation(line: 540, column: 36, scope: !6640)
!6671 = !DILocation(line: 540, column: 3, scope: !6640)
!6672 = !DILocation(line: 541, column: 1, scope: !6640)
!6673 = distinct !DISubprogram(name: "fold_builtin_next_arg", scope: !3, file: !3, line: 11655, type: !6674, scopeLine: 11656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6676)
!6674 = !DISubroutineType(types: !6675)
!6675 = !{!2866, !2914, !2866}
!6676 = !{!6677, !6678, !6679, !6680, !6681, !6682}
!6677 = !DILocalVariable(name: "exp", arg: 1, scope: !6673, file: !3, line: 11655, type: !2914)
!6678 = !DILocalVariable(name: "va_start_p", arg: 2, scope: !6673, file: !3, line: 11655, type: !2866)
!6679 = !DILocalVariable(name: "fntype", scope: !6673, file: !3, line: 11657, type: !2914)
!6680 = !DILocalVariable(name: "nargs", scope: !6673, file: !3, line: 11658, type: !1249)
!6681 = !DILocalVariable(name: "arg", scope: !6673, file: !3, line: 11659, type: !2914)
!6682 = !DILocalVariable(name: "last_parm", scope: !6683, file: !3, line: 11705, type: !2914)
!6683 = distinct !DILexicalBlock(scope: !6684, file: !3, line: 11704, column: 5)
!6684 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 11703, column: 7)
!6685 = !DILocation(line: 0, scope: !6673)
!6686 = !DILocation(line: 11657, column: 17, scope: !6673)
!6687 = !DILocation(line: 11658, column: 15, scope: !6673)
!6688 = !DILocation(line: 11661, column: 7, scope: !6689)
!6689 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 11661, column: 7)
!6690 = !DILocation(line: 11661, column: 31, scope: !6689)
!6691 = !DILocation(line: 11662, column: 7, scope: !6689)
!6692 = !DILocation(line: 11662, column: 11, scope: !6689)
!6693 = !DILocation(line: 11663, column: 7, scope: !6689)
!6694 = !DILocation(line: 11663, column: 4, scope: !6689)
!6695 = !DILocation(line: 11661, column: 7, scope: !6673)
!6696 = !DILocation(line: 11665, column: 7, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6689, file: !3, line: 11664, column: 5)
!6698 = !DILocation(line: 11666, column: 7, scope: !6697)
!6699 = !DILocation(line: 11669, column: 7, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 11669, column: 7)
!6701 = !DILocation(line: 11669, column: 7, scope: !6673)
!6702 = !DILocation(line: 11671, column: 32, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 11671, column: 11)
!6704 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 11670, column: 5)
!6705 = !DILocation(line: 11671, column: 22, scope: !6703)
!6706 = !DILocation(line: 11673, column: 4, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 11672, column: 2)
!6708 = !DILocation(line: 11674, column: 4, scope: !6707)
!6709 = !DILocation(line: 11676, column: 13, scope: !6704)
!6710 = !DILocation(line: 11677, column: 5, scope: !6704)
!6711 = !DILocation(line: 11682, column: 17, scope: !6712)
!6712 = distinct !DILexicalBlock(scope: !6713, file: !3, line: 11682, column: 11)
!6713 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 11681, column: 5)
!6714 = !DILocation(line: 11682, column: 11, scope: !6713)
!6715 = !DILocation(line: 11686, column: 4, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 11683, column: 2)
!6717 = !DILocation(line: 11687, column: 4, scope: !6716)
!6718 = !DILocation(line: 11689, column: 22, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6712, file: !3, line: 11689, column: 16)
!6720 = !DILocation(line: 11689, column: 16, scope: !6712)
!6721 = !DILocation(line: 11691, column: 4, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 11690, column: 2)
!6723 = !DILocation(line: 11692, column: 4, scope: !6722)
!6724 = !DILocation(line: 11694, column: 13, scope: !6713)
!6725 = !DILocation(line: 0, scope: !6700)
!6726 = !DILocation(line: 11697, column: 7, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 11697, column: 7)
!6728 = !DILocation(line: 11697, column: 23, scope: !6727)
!6729 = !DILocation(line: 11697, column: 7, scope: !6673)
!6730 = !DILocation(line: 11698, column: 11, scope: !6727)
!6731 = !DILocation(line: 11698, column: 5, scope: !6727)
!6732 = !DILocation(line: 11703, column: 8, scope: !6684)
!6733 = !DILocation(line: 11703, column: 7, scope: !6673)
!6734 = !DILocation(line: 11705, column: 35, scope: !6683)
!6735 = !DILocation(line: 11705, column: 24, scope: !6683)
!6736 = !DILocation(line: 0, scope: !6683)
!6737 = !DILocation(line: 11711, column: 7, scope: !6683)
!6738 = !DILocation(line: 11711, column: 14, scope: !6683)
!6739 = !DILocation(line: 11712, column: 26, scope: !6683)
!6740 = !DILocation(line: 11712, column: 7, scope: !6683)
!6741 = !DILocation(line: 11713, column: 8, scope: !6683)
!6742 = distinct !{!6742, !6737, !6741}
!6743 = !DILocation(line: 11714, column: 15, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 11714, column: 11)
!6745 = !DILocation(line: 11714, column: 11, scope: !6683)
!6746 = !DILocation(line: 11721, column: 4, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 11715, column: 2)
!6748 = !DILocation(line: 11722, column: 2, scope: !6747)
!6749 = !DILocation(line: 11730, column: 16, scope: !6750)
!6750 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 11730, column: 16)
!6751 = !DILocation(line: 11730, column: 16, scope: !6744)
!6752 = !DILocation(line: 11731, column: 9, scope: !6750)
!6753 = !DILocation(line: 0, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 11739, column: 11)
!6755 = !DILocation(line: 11739, column: 11, scope: !6683)
!6756 = !DILocation(line: 11740, column: 2, scope: !6754)
!6757 = !DILocation(line: 11740, column: 25, scope: !6754)
!6758 = !DILocation(line: 11742, column: 2, scope: !6754)
!6759 = !DILocation(line: 11742, column: 25, scope: !6754)
!6760 = !DILocation(line: 11745, column: 1, scope: !6673)
!6761 = distinct !DISubprogram(name: "fold_builtin_memory_chk", scope: !3, file: !3, line: 12203, type: !6762, scopeLine: 12207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6764)
!6762 = !DISubroutineType(types: !6763)
!6763 = !{!2914, !2998, !2914, !2914, !2914, !2914, !2914, !2914, !2866, !527}
!6764 = !{!6765, !6766, !6767, !6768, !6769, !6770, !6771, !6772, !6773, !6774, !6775}
!6765 = !DILocalVariable(name: "loc", arg: 1, scope: !6761, file: !3, line: 12203, type: !2998)
!6766 = !DILocalVariable(name: "fndecl", arg: 2, scope: !6761, file: !3, line: 12203, type: !2914)
!6767 = !DILocalVariable(name: "dest", arg: 3, scope: !6761, file: !3, line: 12204, type: !2914)
!6768 = !DILocalVariable(name: "src", arg: 4, scope: !6761, file: !3, line: 12204, type: !2914)
!6769 = !DILocalVariable(name: "len", arg: 5, scope: !6761, file: !3, line: 12204, type: !2914)
!6770 = !DILocalVariable(name: "size", arg: 6, scope: !6761, file: !3, line: 12204, type: !2914)
!6771 = !DILocalVariable(name: "maxlen", arg: 7, scope: !6761, file: !3, line: 12205, type: !2914)
!6772 = !DILocalVariable(name: "ignore", arg: 8, scope: !6761, file: !3, line: 12205, type: !2866)
!6773 = !DILocalVariable(name: "fcode", arg: 9, scope: !6761, file: !3, line: 12206, type: !527)
!6774 = !DILocalVariable(name: "fn", scope: !6761, file: !3, line: 12208, type: !2914)
!6775 = !DILocalVariable(name: "temp", scope: !6776, file: !3, line: 12227, type: !2914)
!6776 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 12226, column: 2)
!6777 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 12222, column: 11)
!6778 = distinct !DILexicalBlock(scope: !6779, file: !3, line: 12221, column: 5)
!6779 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 12220, column: 7)
!6780 = !DILocation(line: 0, scope: !6761)
!6781 = !DILocation(line: 12210, column: 8, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 12210, column: 7)
!6783 = !DILocation(line: 12211, column: 7, scope: !6782)
!6784 = !DILocation(line: 12212, column: 11, scope: !6782)
!6785 = !DILocation(line: 12212, column: 5, scope: !6782)
!6786 = !DILocation(line: 12211, column: 11, scope: !6782)
!6787 = !DILocation(line: 12214, column: 7, scope: !6782)
!6788 = !DILocation(line: 12214, column: 11, scope: !6782)
!6789 = !DILocation(line: 12215, column: 7, scope: !6782)
!6790 = !DILocation(line: 12215, column: 11, scope: !6782)
!6791 = !DILocation(line: 12210, column: 7, scope: !6761)
!6792 = !DILocation(line: 12220, column: 36, scope: !6779)
!6793 = !DILocation(line: 12220, column: 39, scope: !6779)
!6794 = !DILocation(line: 12220, column: 7, scope: !6761)
!6795 = !DILocation(line: 12222, column: 17, scope: !6777)
!6796 = !DILocation(line: 12222, column: 11, scope: !6778)
!6797 = !DILocation(line: 12223, column: 36, scope: !6777)
!6798 = !DILocation(line: 12223, column: 9, scope: !6777)
!6799 = !DILocation(line: 12223, column: 2, scope: !6777)
!6800 = !DILocation(line: 12227, column: 16, scope: !6776)
!6801 = !DILocation(line: 0, scope: !6776)
!6802 = !DILocation(line: 12229, column: 34, scope: !6776)
!6803 = !DILocation(line: 12229, column: 11, scope: !6776)
!6804 = !DILocation(line: 12233, column: 9, scope: !6805)
!6805 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 12233, column: 7)
!6806 = !DILocation(line: 12233, column: 7, scope: !6761)
!6807 = !DILocation(line: 12236, column: 9, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 12236, column: 7)
!6809 = !DILocation(line: 12236, column: 7, scope: !6761)
!6810 = !DILocation(line: 12238, column: 13, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 12238, column: 11)
!6812 = distinct !DILexicalBlock(scope: !6808, file: !3, line: 12237, column: 5)
!6813 = !DILocation(line: 12238, column: 11, scope: !6812)
!6814 = !DILocation(line: 12243, column: 15, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 12243, column: 8)
!6816 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 12239, column: 2)
!6817 = !DILocation(line: 12243, column: 28, scope: !6815)
!6818 = !DILocation(line: 12243, column: 33, scope: !6815)
!6819 = !DILocation(line: 12243, column: 8, scope: !6816)
!6820 = !DILocation(line: 12245, column: 18, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 12245, column: 12)
!6822 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 12244, column: 6)
!6823 = !DILocation(line: 12245, column: 45, scope: !6821)
!6824 = !DILocation(line: 12245, column: 42, scope: !6821)
!6825 = !DILocation(line: 12249, column: 10, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 12246, column: 3)
!6827 = !DILocation(line: 12250, column: 10, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 12250, column: 9)
!6829 = !DILocation(line: 12250, column: 9, scope: !6826)
!6830 = !DILocation(line: 12253, column: 12, scope: !6826)
!6831 = !DILocation(line: 12253, column: 5, scope: !6826)
!6832 = !DILocation(line: 12261, column: 11, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 12261, column: 11)
!6834 = !DILocation(line: 12261, column: 11, scope: !6812)
!6835 = !DILocation(line: 12268, column: 3, scope: !6761)
!6836 = !DILocation(line: 12271, column: 12, scope: !6837)
!6837 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 12269, column: 5)
!6838 = !DILocation(line: 12272, column: 7, scope: !6837)
!6839 = !DILocation(line: 12274, column: 12, scope: !6837)
!6840 = !DILocation(line: 12275, column: 7, scope: !6837)
!6841 = !DILocation(line: 12277, column: 12, scope: !6837)
!6842 = !DILocation(line: 12278, column: 7, scope: !6837)
!6843 = !DILocation(line: 12280, column: 12, scope: !6837)
!6844 = !DILocation(line: 12281, column: 7, scope: !6837)
!6845 = !DILocation(line: 12286, column: 8, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6761, file: !3, line: 12286, column: 7)
!6847 = !DILocation(line: 12286, column: 7, scope: !6761)
!6848 = !DILocation(line: 12289, column: 10, scope: !6761)
!6849 = !DILocation(line: 12289, column: 3, scope: !6761)
!6850 = !DILocation(line: 12290, column: 1, scope: !6761)
!6851 = distinct !DISubprogram(name: "fold_builtin_stxcpy_chk", scope: !3, file: !3, line: 12299, type: !6852, scopeLine: 12303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6854)
!6852 = !DISubroutineType(types: !6853)
!6853 = !{!2914, !2998, !2914, !2914, !2914, !2914, !2914, !2866, !527}
!6854 = !{!6855, !6856, !6857, !6858, !6859, !6860, !6861, !6862, !6863, !6864}
!6855 = !DILocalVariable(name: "loc", arg: 1, scope: !6851, file: !3, line: 12299, type: !2998)
!6856 = !DILocalVariable(name: "fndecl", arg: 2, scope: !6851, file: !3, line: 12299, type: !2914)
!6857 = !DILocalVariable(name: "dest", arg: 3, scope: !6851, file: !3, line: 12299, type: !2914)
!6858 = !DILocalVariable(name: "src", arg: 4, scope: !6851, file: !3, line: 12300, type: !2914)
!6859 = !DILocalVariable(name: "size", arg: 5, scope: !6851, file: !3, line: 12300, type: !2914)
!6860 = !DILocalVariable(name: "maxlen", arg: 6, scope: !6851, file: !3, line: 12301, type: !2914)
!6861 = !DILocalVariable(name: "ignore", arg: 7, scope: !6851, file: !3, line: 12301, type: !2866)
!6862 = !DILocalVariable(name: "fcode", arg: 8, scope: !6851, file: !3, line: 12302, type: !527)
!6863 = !DILocalVariable(name: "len", scope: !6851, file: !3, line: 12304, type: !2914)
!6864 = !DILocalVariable(name: "fn", scope: !6851, file: !3, line: 12304, type: !2914)
!6865 = !DILocation(line: 0, scope: !6851)
!6866 = !DILocation(line: 12306, column: 8, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 12306, column: 7)
!6868 = !DILocation(line: 12307, column: 7, scope: !6867)
!6869 = !DILocation(line: 12307, column: 11, scope: !6867)
!6870 = !DILocation(line: 12308, column: 7, scope: !6867)
!6871 = !DILocation(line: 12308, column: 11, scope: !6867)
!6872 = !DILocation(line: 12306, column: 7, scope: !6851)
!6873 = !DILocation(line: 12312, column: 13, scope: !6874)
!6874 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 12312, column: 7)
!6875 = !DILocation(line: 12312, column: 36, scope: !6874)
!6876 = !DILocation(line: 12312, column: 39, scope: !6874)
!6877 = !DILocation(line: 12312, column: 7, scope: !6851)
!6878 = !DILocation(line: 12313, column: 35, scope: !6874)
!6879 = !DILocation(line: 12313, column: 12, scope: !6874)
!6880 = !DILocation(line: 12313, column: 5, scope: !6874)
!6881 = !DILocation(line: 12315, column: 9, scope: !6882)
!6882 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 12315, column: 7)
!6883 = !DILocation(line: 12315, column: 7, scope: !6851)
!6884 = !DILocation(line: 12318, column: 9, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 12318, column: 7)
!6886 = !DILocation(line: 12318, column: 7, scope: !6851)
!6887 = !DILocation(line: 12320, column: 13, scope: !6888)
!6888 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 12319, column: 5)
!6889 = !DILocation(line: 12321, column: 13, scope: !6890)
!6890 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 12321, column: 11)
!6891 = !DILocation(line: 12321, column: 17, scope: !6890)
!6892 = !DILocation(line: 12321, column: 22, scope: !6890)
!6893 = !DILocation(line: 12321, column: 11, scope: !6888)
!6894 = !DILocation(line: 12326, column: 15, scope: !6895)
!6895 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 12326, column: 8)
!6896 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 12322, column: 2)
!6897 = !DILocation(line: 12326, column: 28, scope: !6895)
!6898 = !DILocation(line: 12326, column: 33, scope: !6895)
!6899 = !DILocation(line: 12326, column: 8, scope: !6896)
!6900 = !DILocation(line: 12328, column: 18, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 12328, column: 12)
!6902 = distinct !DILexicalBlock(scope: !6895, file: !3, line: 12327, column: 6)
!6903 = !DILocation(line: 12328, column: 12, scope: !6902)
!6904 = !DILocation(line: 12330, column: 11, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 12330, column: 9)
!6906 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 12329, column: 3)
!6907 = !DILocation(line: 12330, column: 9, scope: !6906)
!6908 = !DILocation(line: 12335, column: 10, scope: !6906)
!6909 = !DILocation(line: 12336, column: 10, scope: !6910)
!6910 = distinct !DILexicalBlock(scope: !6906, file: !3, line: 12336, column: 9)
!6911 = !DILocation(line: 12336, column: 9, scope: !6906)
!6912 = !DILocation(line: 12339, column: 12, scope: !6906)
!6913 = !DILocation(line: 12339, column: 5, scope: !6906)
!6914 = !DILocation(line: 12342, column: 18, scope: !6915)
!6915 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 12342, column: 12)
!6916 = !DILocation(line: 12342, column: 21, scope: !6915)
!6917 = !DILocation(line: 12342, column: 12, scope: !6902)
!6918 = !DILocation(line: 12347, column: 13, scope: !6902)
!6919 = !DILocation(line: 12348, column: 13, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 12348, column: 12)
!6921 = !DILocation(line: 12348, column: 12, scope: !6902)
!6922 = !DILocation(line: 12351, column: 51, scope: !6902)
!6923 = !DILocation(line: 12351, column: 14, scope: !6902)
!6924 = !DILocation(line: 12352, column: 38, scope: !6902)
!6925 = !DILocation(line: 12353, column: 12, scope: !6902)
!6926 = !DILocation(line: 12352, column: 15, scope: !6902)
!6927 = !DILocation(line: 12352, column: 8, scope: !6902)
!6928 = !DILocation(line: 12360, column: 13, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 12360, column: 11)
!6930 = !DILocation(line: 12360, column: 11, scope: !6888)
!6931 = !DILocation(line: 12365, column: 29, scope: !6851)
!6932 = !DILocation(line: 12365, column: 23, scope: !6851)
!6933 = !DILocation(line: 12365, column: 8, scope: !6851)
!6934 = !DILocation(line: 12367, column: 8, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 12367, column: 7)
!6936 = !DILocation(line: 12367, column: 7, scope: !6851)
!6937 = !DILocation(line: 12370, column: 10, scope: !6851)
!6938 = !DILocation(line: 12370, column: 3, scope: !6851)
!6939 = !DILocation(line: 12371, column: 1, scope: !6851)
!6940 = distinct !DISubprogram(name: "fold_builtin_strncpy_chk", scope: !3, file: !3, line: 12378, type: !6119, scopeLine: 12380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6941)
!6941 = !{!6942, !6943, !6944, !6945, !6946, !6947, !6948}
!6942 = !DILocalVariable(name: "loc", arg: 1, scope: !6940, file: !3, line: 12378, type: !2998)
!6943 = !DILocalVariable(name: "dest", arg: 2, scope: !6940, file: !3, line: 12378, type: !2914)
!6944 = !DILocalVariable(name: "src", arg: 3, scope: !6940, file: !3, line: 12378, type: !2914)
!6945 = !DILocalVariable(name: "len", arg: 4, scope: !6940, file: !3, line: 12379, type: !2914)
!6946 = !DILocalVariable(name: "size", arg: 5, scope: !6940, file: !3, line: 12379, type: !2914)
!6947 = !DILocalVariable(name: "maxlen", arg: 6, scope: !6940, file: !3, line: 12379, type: !2914)
!6948 = !DILocalVariable(name: "fn", scope: !6940, file: !3, line: 12381, type: !2914)
!6949 = !DILocation(line: 0, scope: !6940)
!6950 = !DILocation(line: 12383, column: 8, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 12383, column: 7)
!6952 = !DILocation(line: 12384, column: 7, scope: !6951)
!6953 = !DILocation(line: 12384, column: 11, scope: !6951)
!6954 = !DILocation(line: 12385, column: 7, scope: !6951)
!6955 = !DILocation(line: 12385, column: 11, scope: !6951)
!6956 = !DILocation(line: 12386, column: 7, scope: !6951)
!6957 = !DILocation(line: 12386, column: 11, scope: !6951)
!6958 = !DILocation(line: 12383, column: 7, scope: !6940)
!6959 = !DILocation(line: 12389, column: 9, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 12389, column: 7)
!6961 = !DILocation(line: 12389, column: 7, scope: !6940)
!6962 = !DILocation(line: 12392, column: 9, scope: !6963)
!6963 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 12392, column: 7)
!6964 = !DILocation(line: 12392, column: 7, scope: !6940)
!6965 = !DILocation(line: 12394, column: 13, scope: !6966)
!6966 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 12394, column: 11)
!6967 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 12393, column: 5)
!6968 = !DILocation(line: 12394, column: 11, scope: !6967)
!6969 = !DILocation(line: 12399, column: 15, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6971, file: !3, line: 12399, column: 8)
!6971 = distinct !DILexicalBlock(scope: !6966, file: !3, line: 12395, column: 2)
!6972 = !DILocation(line: 12399, column: 28, scope: !6970)
!6973 = !DILocation(line: 12399, column: 33, scope: !6970)
!6974 = !DILocation(line: 12399, column: 8, scope: !6971)
!6975 = !DILocation(line: 12405, column: 11, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6967, file: !3, line: 12405, column: 11)
!6977 = !DILocation(line: 12405, column: 11, scope: !6967)
!6978 = !DILocation(line: 12410, column: 8, scope: !6940)
!6979 = !DILocation(line: 12411, column: 8, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 12411, column: 7)
!6981 = !DILocation(line: 12411, column: 7, scope: !6940)
!6982 = !DILocation(line: 12414, column: 10, scope: !6940)
!6983 = !DILocation(line: 12414, column: 3, scope: !6940)
!6984 = !DILocation(line: 12415, column: 1, scope: !6940)
!6985 = distinct !DISubprogram(name: "fold_builtin_snprintf_chk", scope: !3, file: !3, line: 12599, type: !6986, scopeLine: 12601, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6988)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{!2914, !2998, !2914, !2914, !527}
!6988 = !{!6989, !6990, !6991, !6992, !6993, !6994, !6995, !6996, !6997, !6998, !6999}
!6989 = !DILocalVariable(name: "loc", arg: 1, scope: !6985, file: !3, line: 12599, type: !2998)
!6990 = !DILocalVariable(name: "exp", arg: 2, scope: !6985, file: !3, line: 12599, type: !2914)
!6991 = !DILocalVariable(name: "maxlen", arg: 3, scope: !6985, file: !3, line: 12599, type: !2914)
!6992 = !DILocalVariable(name: "fcode", arg: 4, scope: !6985, file: !3, line: 12600, type: !527)
!6993 = !DILocalVariable(name: "dest", scope: !6985, file: !3, line: 12602, type: !2914)
!6994 = !DILocalVariable(name: "size", scope: !6985, file: !3, line: 12602, type: !2914)
!6995 = !DILocalVariable(name: "len", scope: !6985, file: !3, line: 12602, type: !2914)
!6996 = !DILocalVariable(name: "fn", scope: !6985, file: !3, line: 12602, type: !2914)
!6997 = !DILocalVariable(name: "fmt", scope: !6985, file: !3, line: 12602, type: !2914)
!6998 = !DILocalVariable(name: "flag", scope: !6985, file: !3, line: 12602, type: !2914)
!6999 = !DILocalVariable(name: "fmt_str", scope: !6985, file: !3, line: 12603, type: !2871)
!7000 = !DILocation(line: 0, scope: !6985)
!7001 = !DILocation(line: 12606, column: 7, scope: !7002)
!7002 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12606, column: 7)
!7003 = !DILocation(line: 12606, column: 29, scope: !7002)
!7004 = !DILocation(line: 12606, column: 7, scope: !6985)
!7005 = !DILocation(line: 12608, column: 10, scope: !6985)
!7006 = !DILocation(line: 12609, column: 8, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12609, column: 7)
!7008 = !DILocation(line: 12609, column: 7, scope: !6985)
!7009 = !DILocation(line: 12611, column: 9, scope: !6985)
!7010 = !DILocation(line: 12612, column: 8, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12612, column: 7)
!7012 = !DILocation(line: 12612, column: 7, scope: !6985)
!7013 = !DILocation(line: 12614, column: 10, scope: !6985)
!7014 = !DILocation(line: 12615, column: 8, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12615, column: 7)
!7016 = !DILocation(line: 12615, column: 7, scope: !6985)
!7017 = !DILocation(line: 12617, column: 10, scope: !6985)
!7018 = !DILocation(line: 12618, column: 8, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12618, column: 7)
!7020 = !DILocation(line: 12618, column: 7, scope: !6985)
!7021 = !DILocation(line: 12620, column: 9, scope: !6985)
!7022 = !DILocation(line: 12621, column: 8, scope: !7023)
!7023 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12621, column: 7)
!7024 = !DILocation(line: 12621, column: 7, scope: !6985)
!7025 = !DILocation(line: 12624, column: 9, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12624, column: 7)
!7027 = !DILocation(line: 12624, column: 7, scope: !6985)
!7028 = !DILocation(line: 12627, column: 9, scope: !7029)
!7029 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12627, column: 7)
!7030 = !DILocation(line: 12627, column: 7, scope: !6985)
!7031 = !DILocation(line: 12629, column: 13, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 12629, column: 11)
!7033 = distinct !DILexicalBlock(scope: !7029, file: !3, line: 12628, column: 5)
!7034 = !DILocation(line: 12629, column: 11, scope: !7033)
!7035 = !DILocation(line: 12634, column: 15, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 12634, column: 8)
!7037 = distinct !DILexicalBlock(scope: !7032, file: !3, line: 12630, column: 2)
!7038 = !DILocation(line: 12634, column: 28, scope: !7036)
!7039 = !DILocation(line: 12634, column: 33, scope: !7036)
!7040 = !DILocation(line: 12634, column: 8, scope: !7037)
!7041 = !DILocation(line: 12640, column: 11, scope: !7042)
!7042 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 12640, column: 11)
!7043 = !DILocation(line: 12640, column: 11, scope: !7033)
!7044 = !DILocation(line: 12644, column: 8, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12644, column: 7)
!7046 = !DILocation(line: 12644, column: 7, scope: !6985)
!7047 = !DILocation(line: 12649, column: 9, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12649, column: 7)
!7049 = !DILocation(line: 12649, column: 7, scope: !6985)
!7050 = !DILocation(line: 12651, column: 17, scope: !7051)
!7051 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 12650, column: 5)
!7052 = !DILocation(line: 12652, column: 19, scope: !7053)
!7053 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 12652, column: 11)
!7054 = !DILocation(line: 12652, column: 11, scope: !7051)
!7055 = !DILocation(line: 12654, column: 28, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 12654, column: 11)
!7057 = !DILocation(line: 12654, column: 11, scope: !7056)
!7058 = !DILocation(line: 12654, column: 44, scope: !7056)
!7059 = !DILocation(line: 12655, column: 4, scope: !7056)
!7060 = !DILocation(line: 12655, column: 7, scope: !7056)
!7061 = !DILocation(line: 12654, column: 11, scope: !7051)
!7062 = !DILocation(line: 12661, column: 29, scope: !6985)
!7063 = !DILocation(line: 12661, column: 23, scope: !6985)
!7064 = !DILocation(line: 12661, column: 8, scope: !6985)
!7065 = !DILocation(line: 12663, column: 8, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 12663, column: 7)
!7067 = !DILocation(line: 12663, column: 7, scope: !6985)
!7068 = !DILocation(line: 12666, column: 10, scope: !6985)
!7069 = !DILocation(line: 12666, column: 3, scope: !6985)
!7070 = !DILocation(line: 12667, column: 1, scope: !6985)
!7071 = !DILocation(line: 12910, column: 8, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 12910, column: 7)
!7073 = !DILocation(line: 12910, column: 7, scope: !4371)
!7074 = !DILocation(line: 12912, column: 35, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 12911, column: 5)
!7076 = !DILocation(line: 12912, column: 24, scope: !7075)
!7077 = !DILocation(line: 12912, column: 22, scope: !7075)
!7078 = !DILocation(line: 12913, column: 35, scope: !7075)
!7079 = !DILocation(line: 12913, column: 24, scope: !7075)
!7080 = !DILocation(line: 12913, column: 22, scope: !7075)
!7081 = !DILocation(line: 12914, column: 29, scope: !7075)
!7082 = !DILocation(line: 12914, column: 18, scope: !7075)
!7083 = !DILocation(line: 12914, column: 16, scope: !7075)
!7084 = !DILocation(line: 12915, column: 29, scope: !7075)
!7085 = !DILocation(line: 12915, column: 18, scope: !7075)
!7086 = !DILocation(line: 12915, column: 16, scope: !7075)
!7087 = !DILocation(line: 12916, column: 11, scope: !7088)
!7088 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 12916, column: 11)
!7089 = !DILocation(line: 12916, column: 26, scope: !7088)
!7090 = !DILocation(line: 12916, column: 34, scope: !7088)
!7091 = !DILocation(line: 12916, column: 49, scope: !7088)
!7092 = !DILocation(line: 12916, column: 31, scope: !7088)
!7093 = !DILocation(line: 12916, column: 57, scope: !7088)
!7094 = !DILocation(line: 12916, column: 66, scope: !7088)
!7095 = !DILocation(line: 12917, column: 16, scope: !7088)
!7096 = !DILocation(line: 12920, column: 29, scope: !7075)
!7097 = !DILocation(line: 12920, column: 27, scope: !7075)
!7098 = !DILocation(line: 12921, column: 29, scope: !7075)
!7099 = !DILocation(line: 12921, column: 27, scope: !7075)
!7100 = !DILocation(line: 12922, column: 27, scope: !7075)
!7101 = !DILocation(line: 12924, column: 27, scope: !7075)
!7102 = !DILocation(line: 12925, column: 29, scope: !7075)
!7103 = !DILocation(line: 12925, column: 27, scope: !7075)
!7104 = !DILocation(line: 12926, column: 27, scope: !7075)
!7105 = !DILocation(line: 12928, column: 35, scope: !7075)
!7106 = !DILocation(line: 12929, column: 35, scope: !7075)
!7107 = !DILocation(line: 12930, column: 37, scope: !7075)
!7108 = !DILocation(line: 12930, column: 35, scope: !7075)
!7109 = !DILocation(line: 12931, column: 35, scope: !7075)
!7110 = !DILocation(line: 12933, column: 12, scope: !7075)
!7111 = !DILocation(line: 12934, column: 5, scope: !7075)
!7112 = !DILocation(line: 0, scope: !4371)
!7113 = !DILocation(line: 12936, column: 1, scope: !4371)
!7114 = distinct !DISubprogram(name: "rewrite_call_expr", scope: !3, file: !3, line: 10908, type: !7115, scopeLine: 10909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7117)
!7115 = !DISubroutineType(types: !7116)
!7116 = !{!2914, !2998, !2914, !1249, !2914, !1249, null}
!7117 = !{!7118, !7119, !7120, !7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128, !7131, !7132}
!7118 = !DILocalVariable(name: "loc", arg: 1, scope: !7114, file: !3, line: 10908, type: !2998)
!7119 = !DILocalVariable(name: "exp", arg: 2, scope: !7114, file: !3, line: 10908, type: !2914)
!7120 = !DILocalVariable(name: "skip", arg: 3, scope: !7114, file: !3, line: 10908, type: !1249)
!7121 = !DILocalVariable(name: "fndecl", arg: 4, scope: !7114, file: !3, line: 10908, type: !2914)
!7122 = !DILocalVariable(name: "n", arg: 5, scope: !7114, file: !3, line: 10908, type: !1249)
!7123 = !DILocalVariable(name: "oldnargs", scope: !7114, file: !3, line: 10910, type: !1249)
!7124 = !DILocalVariable(name: "nargs", scope: !7114, file: !3, line: 10911, type: !1249)
!7125 = !DILocalVariable(name: "fntype", scope: !7114, file: !3, line: 10912, type: !2914)
!7126 = !DILocalVariable(name: "fn", scope: !7114, file: !3, line: 10913, type: !2914)
!7127 = !DILocalVariable(name: "buffer", scope: !7114, file: !3, line: 10914, type: !3231)
!7128 = !DILocalVariable(name: "i", scope: !7129, file: !3, line: 10918, type: !1249)
!7129 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 10917, column: 5)
!7130 = distinct !DILexicalBlock(scope: !7114, file: !3, line: 10916, column: 7)
!7131 = !DILocalVariable(name: "j", scope: !7129, file: !3, line: 10918, type: !1249)
!7132 = !DILocalVariable(name: "ap", scope: !7129, file: !3, line: 10919, type: !5718)
!7133 = !DILocation(line: 0, scope: !7114)
!7134 = !DILocation(line: 10910, column: 18, scope: !7114)
!7135 = !DILocation(line: 10911, column: 24, scope: !7114)
!7136 = !DILocation(line: 10911, column: 31, scope: !7114)
!7137 = !DILocation(line: 10912, column: 17, scope: !7114)
!7138 = !DILocation(line: 10913, column: 13, scope: !7114)
!7139 = !DILocation(line: 10919, column: 7, scope: !7129)
!7140 = !DILocation(line: 10919, column: 15, scope: !7129)
!7141 = !DILocation(line: 10921, column: 16, scope: !7129)
!7142 = !DILocation(line: 10922, column: 7, scope: !7129)
!7143 = !DILocation(line: 0, scope: !7129)
!7144 = !DILocation(line: 0, scope: !7145)
!7145 = distinct !DILexicalBlock(scope: !7146, file: !3, line: 10923, column: 7)
!7146 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 10923, column: 7)
!7147 = !DILocation(line: 10923, column: 12, scope: !7146)
!7148 = !DILocation(line: 0, scope: !7146)
!7149 = !DILocation(line: 10923, column: 21, scope: !7145)
!7150 = !DILocation(line: 10923, column: 7, scope: !7146)
!7151 = !DILocation(line: 10924, column: 14, scope: !7145)
!7152 = !DILocation(line: 10924, column: 2, scope: !7145)
!7153 = !DILocation(line: 10924, column: 12, scope: !7145)
!7154 = !DILocation(line: 10923, column: 27, scope: !7145)
!7155 = !DILocation(line: 10923, column: 7, scope: !7145)
!7156 = distinct !{!7156, !7150, !7157}
!7157 = !DILocation(line: 10924, column: 14, scope: !7146)
!7158 = !DILocation(line: 10925, column: 7, scope: !7129)
!7159 = !DILocation(line: 10926, column: 12, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7129, file: !3, line: 10926, column: 7)
!7161 = !DILocation(line: 10926, column: 24, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7160, file: !3, line: 10926, column: 7)
!7163 = !DILocation(line: 10926, column: 7, scope: !7160)
!7164 = !DILocation(line: 10927, column: 14, scope: !7162)
!7165 = !DILocation(line: 10927, column: 2, scope: !7162)
!7166 = !DILocation(line: 10927, column: 12, scope: !7162)
!7167 = !DILocation(line: 10926, column: 37, scope: !7162)
!7168 = !DILocation(line: 10926, column: 42, scope: !7162)
!7169 = !DILocation(line: 10926, column: 7, scope: !7162)
!7170 = distinct !{!7170, !7163, !7171}
!7171 = !DILocation(line: 10927, column: 14, scope: !7160)
!7172 = !DILocation(line: 10928, column: 5, scope: !7130)
!7173 = !DILocation(line: 10932, column: 43, scope: !7114)
!7174 = !DILocation(line: 10932, column: 16, scope: !7114)
!7175 = !DILocation(line: 10932, column: 10, scope: !7114)
!7176 = !DILocation(line: 10932, column: 3, scope: !7114)
!7177 = distinct !DISubprogram(name: "gimple_fold_builtin_snprintf_chk", scope: !3, file: !3, line: 13689, type: !7178, scopeLine: 13691, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7180)
!7178 = !DISubroutineType(types: !7179)
!7179 = !{!2914, !3196, !2914, !527}
!7180 = !{!7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190}
!7181 = !DILocalVariable(name: "stmt", arg: 1, scope: !7177, file: !3, line: 13689, type: !3196)
!7182 = !DILocalVariable(name: "maxlen", arg: 2, scope: !7177, file: !3, line: 13689, type: !2914)
!7183 = !DILocalVariable(name: "fcode", arg: 3, scope: !7177, file: !3, line: 13690, type: !527)
!7184 = !DILocalVariable(name: "dest", scope: !7177, file: !3, line: 13692, type: !2914)
!7185 = !DILocalVariable(name: "size", scope: !7177, file: !3, line: 13692, type: !2914)
!7186 = !DILocalVariable(name: "len", scope: !7177, file: !3, line: 13692, type: !2914)
!7187 = !DILocalVariable(name: "fn", scope: !7177, file: !3, line: 13692, type: !2914)
!7188 = !DILocalVariable(name: "fmt", scope: !7177, file: !3, line: 13692, type: !2914)
!7189 = !DILocalVariable(name: "flag", scope: !7177, file: !3, line: 13692, type: !2914)
!7190 = !DILocalVariable(name: "fmt_str", scope: !7177, file: !3, line: 13693, type: !2871)
!7191 = !DILocation(line: 0, scope: !7177)
!7192 = !DILocation(line: 13696, column: 7, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13696, column: 7)
!7194 = !DILocation(line: 13696, column: 35, scope: !7193)
!7195 = !DILocation(line: 13696, column: 7, scope: !7177)
!7196 = !DILocation(line: 13698, column: 10, scope: !7177)
!7197 = !DILocation(line: 13699, column: 8, scope: !7198)
!7198 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13699, column: 7)
!7199 = !DILocation(line: 13699, column: 7, scope: !7177)
!7200 = !DILocation(line: 13701, column: 9, scope: !7177)
!7201 = !DILocation(line: 13702, column: 8, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13702, column: 7)
!7203 = !DILocation(line: 13702, column: 7, scope: !7177)
!7204 = !DILocation(line: 13704, column: 10, scope: !7177)
!7205 = !DILocation(line: 13705, column: 8, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13705, column: 7)
!7207 = !DILocation(line: 13705, column: 7, scope: !7177)
!7208 = !DILocation(line: 13707, column: 10, scope: !7177)
!7209 = !DILocation(line: 13708, column: 8, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13708, column: 7)
!7211 = !DILocation(line: 13708, column: 7, scope: !7177)
!7212 = !DILocation(line: 13710, column: 9, scope: !7177)
!7213 = !DILocation(line: 13711, column: 8, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13711, column: 7)
!7215 = !DILocation(line: 13711, column: 7, scope: !7177)
!7216 = !DILocation(line: 13714, column: 9, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13714, column: 7)
!7218 = !DILocation(line: 13714, column: 7, scope: !7177)
!7219 = !DILocation(line: 13717, column: 9, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13717, column: 7)
!7221 = !DILocation(line: 13717, column: 7, scope: !7177)
!7222 = !DILocation(line: 13719, column: 13, scope: !7223)
!7223 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 13719, column: 11)
!7224 = distinct !DILexicalBlock(scope: !7220, file: !3, line: 13718, column: 5)
!7225 = !DILocation(line: 13719, column: 11, scope: !7224)
!7226 = !DILocation(line: 13724, column: 15, scope: !7227)
!7227 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 13724, column: 8)
!7228 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 13720, column: 2)
!7229 = !DILocation(line: 13724, column: 28, scope: !7227)
!7230 = !DILocation(line: 13724, column: 33, scope: !7227)
!7231 = !DILocation(line: 13724, column: 8, scope: !7228)
!7232 = !DILocation(line: 13730, column: 11, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7224, file: !3, line: 13730, column: 11)
!7234 = !DILocation(line: 13730, column: 11, scope: !7224)
!7235 = !DILocation(line: 13734, column: 8, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13734, column: 7)
!7237 = !DILocation(line: 13734, column: 7, scope: !7177)
!7238 = !DILocation(line: 13739, column: 9, scope: !7239)
!7239 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13739, column: 7)
!7240 = !DILocation(line: 13739, column: 7, scope: !7177)
!7241 = !DILocation(line: 13741, column: 17, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7239, file: !3, line: 13740, column: 5)
!7243 = !DILocation(line: 13742, column: 19, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 13742, column: 11)
!7245 = !DILocation(line: 13742, column: 11, scope: !7242)
!7246 = !DILocation(line: 13744, column: 28, scope: !7247)
!7247 = distinct !DILexicalBlock(scope: !7242, file: !3, line: 13744, column: 11)
!7248 = !DILocation(line: 13744, column: 11, scope: !7247)
!7249 = !DILocation(line: 13744, column: 44, scope: !7247)
!7250 = !DILocation(line: 13745, column: 4, scope: !7247)
!7251 = !DILocation(line: 13745, column: 7, scope: !7247)
!7252 = !DILocation(line: 13744, column: 11, scope: !7242)
!7253 = !DILocation(line: 13751, column: 29, scope: !7177)
!7254 = !DILocation(line: 13751, column: 23, scope: !7177)
!7255 = !DILocation(line: 13751, column: 8, scope: !7177)
!7256 = !DILocation(line: 13753, column: 8, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7177, file: !3, line: 13753, column: 7)
!7258 = !DILocation(line: 13753, column: 7, scope: !7177)
!7259 = !DILocation(line: 13756, column: 10, scope: !7177)
!7260 = !DILocation(line: 13756, column: 3, scope: !7177)
!7261 = !DILocation(line: 13757, column: 1, scope: !7177)
!7262 = distinct !DISubprogram(name: "gimple_rewrite_call_expr", scope: !3, file: !3, line: 13569, type: !7263, scopeLine: 13570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7265)
!7263 = !DISubroutineType(types: !7264)
!7264 = !{!2914, !3196, !1249, !2914, !1249, null}
!7265 = !{!7266, !7267, !7268, !7269, !7270, !7271, !7272, !7273, !7274, !7275, !7276, !7277, !7278}
!7266 = !DILocalVariable(name: "stmt", arg: 1, scope: !7262, file: !3, line: 13569, type: !3196)
!7267 = !DILocalVariable(name: "skip", arg: 2, scope: !7262, file: !3, line: 13569, type: !1249)
!7268 = !DILocalVariable(name: "fndecl", arg: 3, scope: !7262, file: !3, line: 13569, type: !2914)
!7269 = !DILocalVariable(name: "n", arg: 4, scope: !7262, file: !3, line: 13569, type: !1249)
!7270 = !DILocalVariable(name: "oldnargs", scope: !7262, file: !3, line: 13571, type: !1249)
!7271 = !DILocalVariable(name: "nargs", scope: !7262, file: !3, line: 13572, type: !1249)
!7272 = !DILocalVariable(name: "fntype", scope: !7262, file: !3, line: 13573, type: !2914)
!7273 = !DILocalVariable(name: "fn", scope: !7262, file: !3, line: 13574, type: !2914)
!7274 = !DILocalVariable(name: "buffer", scope: !7262, file: !3, line: 13575, type: !3231)
!7275 = !DILocalVariable(name: "i", scope: !7262, file: !3, line: 13576, type: !1249)
!7276 = !DILocalVariable(name: "j", scope: !7262, file: !3, line: 13576, type: !1249)
!7277 = !DILocalVariable(name: "ap", scope: !7262, file: !3, line: 13577, type: !5718)
!7278 = !DILocalVariable(name: "loc", scope: !7262, file: !3, line: 13578, type: !2998)
!7279 = !DILocation(line: 0, scope: !7262)
!7280 = !DILocation(line: 13571, column: 18, scope: !7262)
!7281 = !DILocation(line: 13572, column: 24, scope: !7262)
!7282 = !DILocation(line: 13572, column: 31, scope: !7262)
!7283 = !DILocation(line: 13573, column: 17, scope: !7262)
!7284 = !DILocation(line: 13574, column: 13, scope: !7262)
!7285 = !DILocation(line: 13577, column: 3, scope: !7262)
!7286 = !DILocation(line: 13577, column: 11, scope: !7262)
!7287 = !DILocation(line: 13578, column: 20, scope: !7262)
!7288 = !DILocation(line: 13580, column: 12, scope: !7262)
!7289 = !DILocation(line: 13581, column: 3, scope: !7262)
!7290 = !DILocation(line: 0, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7292, file: !3, line: 13582, column: 3)
!7292 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 13582, column: 3)
!7293 = !DILocation(line: 13582, column: 8, scope: !7292)
!7294 = !DILocation(line: 0, scope: !7292)
!7295 = !DILocation(line: 13582, column: 17, scope: !7291)
!7296 = !DILocation(line: 13582, column: 3, scope: !7292)
!7297 = !DILocation(line: 13583, column: 17, scope: !7291)
!7298 = !DILocation(line: 13583, column: 5, scope: !7291)
!7299 = !DILocation(line: 13583, column: 15, scope: !7291)
!7300 = !DILocation(line: 13582, column: 23, scope: !7291)
!7301 = !DILocation(line: 13582, column: 3, scope: !7291)
!7302 = distinct !{!7302, !7296, !7303}
!7303 = !DILocation(line: 13583, column: 17, scope: !7292)
!7304 = !DILocation(line: 13584, column: 3, scope: !7262)
!7305 = !DILocation(line: 13585, column: 8, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7262, file: !3, line: 13585, column: 3)
!7307 = !DILocation(line: 0, scope: !7306)
!7308 = !DILocation(line: 13585, column: 20, scope: !7309)
!7309 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 13585, column: 3)
!7310 = !DILocation(line: 13585, column: 3, scope: !7306)
!7311 = !DILocation(line: 13586, column: 17, scope: !7309)
!7312 = !DILocation(line: 13586, column: 5, scope: !7309)
!7313 = !DILocation(line: 13586, column: 15, scope: !7309)
!7314 = !DILocation(line: 13585, column: 33, scope: !7309)
!7315 = !DILocation(line: 13585, column: 38, scope: !7309)
!7316 = !DILocation(line: 13585, column: 3, scope: !7309)
!7317 = distinct !{!7317, !7310, !7318}
!7318 = !DILocation(line: 13586, column: 41, scope: !7306)
!7319 = !DILocation(line: 13588, column: 43, scope: !7262)
!7320 = !DILocation(line: 13588, column: 16, scope: !7262)
!7321 = !DILocation(line: 13588, column: 10, scope: !7262)
!7322 = !DILocation(line: 13589, column: 1, scope: !7262)
!7323 = !DILocation(line: 13588, column: 3, scope: !7262)
!7324 = distinct !DISubprogram(name: "fold_call_stmt", scope: !3, file: !3, line: 13801, type: !7325, scopeLine: 13802, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7327)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{!2914, !3196, !2866}
!7327 = !{!7328, !7329, !7330, !7331, !7332, !7333, !7336, !7339, !7340, !7345, !7346}
!7328 = !DILocalVariable(name: "stmt", arg: 1, scope: !7324, file: !3, line: 13801, type: !3196)
!7329 = !DILocalVariable(name: "ignore", arg: 2, scope: !7324, file: !3, line: 13801, type: !2866)
!7330 = !DILocalVariable(name: "ret", scope: !7324, file: !3, line: 13803, type: !2914)
!7331 = !DILocalVariable(name: "fndecl", scope: !7324, file: !3, line: 13804, type: !2914)
!7332 = !DILocalVariable(name: "loc", scope: !7324, file: !3, line: 13805, type: !2998)
!7333 = !DILocalVariable(name: "nargs", scope: !7334, file: !3, line: 13811, type: !1249)
!7334 = distinct !DILexicalBlock(scope: !7335, file: !3, line: 13810, column: 5)
!7335 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 13806, column: 7)
!7336 = !DILocalVariable(name: "arglist", scope: !7337, file: !3, line: 13818, type: !2914)
!7337 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 13817, column: 9)
!7338 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 13816, column: 11)
!7339 = !DILocalVariable(name: "i", scope: !7337, file: !3, line: 13819, type: !1249)
!7340 = !DILocalVariable(name: "args", scope: !7341, file: !3, line: 13828, type: !7344)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 13827, column: 6)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 13826, column: 8)
!7343 = distinct !DILexicalBlock(scope: !7338, file: !3, line: 13825, column: 2)
!7344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2914, size: 256, elements: !3139)
!7345 = !DILocalVariable(name: "i", scope: !7341, file: !3, line: 13829, type: !1249)
!7346 = !DILocalVariable(name: "realret", scope: !7347, file: !3, line: 13844, type: !2914)
!7347 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 13843, column: 17)
!7348 = distinct !DILexicalBlock(scope: !7349, file: !3, line: 13842, column: 12)
!7349 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 13837, column: 6)
!7350 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 13836, column: 8)
!7351 = !DILocation(line: 0, scope: !7324)
!7352 = !DILocation(line: 13804, column: 17, scope: !7324)
!7353 = !DILocation(line: 13805, column: 20, scope: !7324)
!7354 = !DILocation(line: 13806, column: 7, scope: !7335)
!7355 = !DILocation(line: 13807, column: 7, scope: !7335)
!7356 = !DILocation(line: 13807, column: 10, scope: !7335)
!7357 = !DILocation(line: 13807, column: 29, scope: !7335)
!7358 = !DILocation(line: 13808, column: 7, scope: !7335)
!7359 = !DILocation(line: 13808, column: 10, scope: !7335)
!7360 = !DILocation(line: 13809, column: 7, scope: !7335)
!7361 = !DILocation(line: 13809, column: 11, scope: !7335)
!7362 = !DILocation(line: 13806, column: 7, scope: !7324)
!7363 = !DILocation(line: 13811, column: 19, scope: !7334)
!7364 = !DILocation(line: 0, scope: !7334)
!7365 = !DILocation(line: 13813, column: 11, scope: !7366)
!7366 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 13813, column: 11)
!7367 = !DILocation(line: 13813, column: 11, scope: !7334)
!7368 = !DILocation(line: 13816, column: 11, scope: !7338)
!7369 = !DILocation(line: 13816, column: 40, scope: !7338)
!7370 = !DILocation(line: 13816, column: 11, scope: !7334)
!7371 = !DILocation(line: 0, scope: !7337)
!7372 = !DILocation(line: 13820, column: 16, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 13820, column: 11)
!7374 = !DILocation(line: 0, scope: !7373)
!7375 = !DILocation(line: 13820, column: 33, scope: !7376)
!7376 = distinct !DILexicalBlock(scope: !7373, file: !3, line: 13820, column: 11)
!7377 = !DILocation(line: 13820, column: 11, scope: !7373)
!7378 = !DILocation(line: 13821, column: 23, scope: !7376)
!7379 = !DILocation(line: 13820, column: 11, scope: !7376)
!7380 = distinct !{!7380, !7377, !7381}
!7381 = !DILocation(line: 13821, column: 23, scope: !7373)
!7382 = !DILocation(line: 13822, column: 19, scope: !7337)
!7383 = !DILocation(line: 13822, column: 11, scope: !7337)
!7384 = !DILocation(line: 13826, column: 14, scope: !7342)
!7385 = !DILocation(line: 13826, column: 8, scope: !7343)
!7386 = !DILocation(line: 13828, column: 15, scope: !7341)
!7387 = !DILocation(line: 13828, column: 20, scope: !7341)
!7388 = !DILocation(line: 0, scope: !7341)
!7389 = !DILocation(line: 13830, column: 20, scope: !7390)
!7390 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 13830, column: 15)
!7391 = !DILocation(line: 0, scope: !7390)
!7392 = !DILocation(line: 13830, column: 29, scope: !7393)
!7393 = distinct !DILexicalBlock(scope: !7390, file: !3, line: 13830, column: 15)
!7394 = !DILocation(line: 13830, column: 15, scope: !7390)
!7395 = !DILocation(line: 13831, column: 27, scope: !7393)
!7396 = !DILocation(line: 13831, column: 17, scope: !7393)
!7397 = !DILocation(line: 13831, column: 25, scope: !7393)
!7398 = !DILocation(line: 13830, column: 39, scope: !7393)
!7399 = !DILocation(line: 13830, column: 15, scope: !7393)
!7400 = distinct !{!7400, !7394, !7401}
!7401 = !DILocation(line: 13831, column: 51, scope: !7390)
!7402 = !DILocation(line: 13832, column: 43, scope: !7341)
!7403 = !DILocation(line: 13832, column: 14, scope: !7341)
!7404 = !DILocation(line: 13833, column: 6, scope: !7342)
!7405 = !DILocation(line: 13833, column: 6, scope: !7341)
!7406 = !DILocation(line: 13834, column: 9, scope: !7407)
!7407 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 13834, column: 8)
!7408 = !DILocation(line: 13834, column: 8, scope: !7343)
!7409 = !DILocation(line: 13835, column: 12, scope: !7407)
!7410 = !DILocation(line: 13835, column: 6, scope: !7407)
!7411 = !DILocation(line: 0, scope: !7343)
!7412 = !DILocation(line: 13836, column: 8, scope: !7350)
!7413 = !DILocation(line: 13836, column: 8, scope: !7343)
!7414 = !DILocation(line: 13842, column: 12, scope: !7348)
!7415 = !DILocation(line: 13842, column: 12, scope: !7349)
!7416 = !DILocation(line: 0, scope: !7347)
!7417 = !DILocation(line: 13845, column: 9, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 13845, column: 9)
!7419 = !DILocation(line: 13845, column: 25, scope: !7418)
!7420 = !DILocation(line: 13845, column: 9, scope: !7347)
!7421 = !DILocation(line: 13846, column: 17, scope: !7418)
!7422 = !DILocation(line: 13846, column: 7, scope: !7418)
!7423 = !DILocation(line: 13847, column: 9, scope: !7424)
!7424 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 13847, column: 9)
!7425 = !DILocation(line: 13848, column: 9, scope: !7424)
!7426 = !DILocation(line: 13848, column: 13, scope: !7424)
!7427 = !DILocation(line: 13847, column: 9, scope: !7347)
!7428 = !DILocation(line: 13849, column: 7, scope: !7424)
!7429 = !DILocation(line: 13856, column: 3, scope: !7324)
!7430 = !DILocation(line: 13857, column: 1, scope: !7324)
!7431 = distinct !DISubprogram(name: "gimple_call_fndecl", scope: !1248, file: !1248, line: 1954, type: !7432, scopeLine: 1955, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7434)
!7432 = !DISubroutineType(types: !7433)
!7433 = !{!2914, !6475}
!7434 = !{!7435, !7436}
!7435 = !DILocalVariable(name: "gs", arg: 1, scope: !7431, file: !1248, line: 1954, type: !6475)
!7436 = !DILocalVariable(name: "addr", scope: !7431, file: !1248, line: 1956, type: !2914)
!7437 = !DILocation(line: 0, scope: !7431)
!7438 = !DILocation(line: 1956, column: 15, scope: !7431)
!7439 = !DILocation(line: 1957, column: 7, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7431, file: !1248, line: 1957, column: 7)
!7441 = !DILocation(line: 1957, column: 24, scope: !7440)
!7442 = !DILocation(line: 1957, column: 7, scope: !7431)
!7443 = !DILocation(line: 1958, column: 12, scope: !7440)
!7444 = !DILocation(line: 1958, column: 5, scope: !7440)
!7445 = !DILocation(line: 1960, column: 1, scope: !7431)
!7446 = distinct !DISubprogram(name: "gimple_location", scope: !1248, file: !1248, line: 1139, type: !7447, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7449)
!7447 = !DISubroutineType(types: !7448)
!7448 = !{!2998, !6475}
!7449 = !{!7450}
!7450 = !DILocalVariable(name: "g", arg: 1, scope: !7446, file: !1248, line: 1139, type: !6475)
!7451 = !DILocation(line: 0, scope: !7446)
!7452 = !DILocation(line: 1141, column: 20, scope: !7446)
!7453 = !DILocation(line: 1141, column: 3, scope: !7446)
!7454 = distinct !DISubprogram(name: "gimple_call_va_arg_pack_p", scope: !1248, file: !1248, line: 2168, type: !7455, scopeLine: 2169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7457)
!7455 = !DISubroutineType(types: !7456)
!7456 = !{!2866, !3196}
!7457 = !{!7458}
!7458 = !DILocalVariable(name: "s", arg: 1, scope: !7454, file: !1248, line: 2168, type: !3196)
!7459 = !DILocation(line: 0, scope: !7454)
!7460 = !DILocation(line: 2171, column: 21, scope: !7454)
!7461 = !DILocation(line: 2171, column: 10, scope: !7454)
!7462 = !DILocation(line: 2171, column: 3, scope: !7454)
!7463 = distinct !DISubprogram(name: "gimple_fold_builtin_varargs", scope: !3, file: !3, line: 13767, type: !7464, scopeLine: 13769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7466)
!7464 = !DISubroutineType(types: !7465)
!7465 = !{!2914, !2914, !3196, !2866}
!7466 = !{!7467, !7468, !7469, !7470, !7471}
!7467 = !DILocalVariable(name: "fndecl", arg: 1, scope: !7463, file: !3, line: 13767, type: !2914)
!7468 = !DILocalVariable(name: "stmt", arg: 2, scope: !7463, file: !3, line: 13767, type: !3196)
!7469 = !DILocalVariable(name: "ignore", arg: 3, scope: !7463, file: !3, line: 13768, type: !2866)
!7470 = !DILocalVariable(name: "fcode", scope: !7463, file: !3, line: 13770, type: !527)
!7471 = !DILocalVariable(name: "ret", scope: !7463, file: !3, line: 13771, type: !2914)
!7472 = !DILocation(line: 0, scope: !7463)
!7473 = !DILocation(line: 13770, column: 34, scope: !7463)
!7474 = !DILocation(line: 13773, column: 3, scope: !7463)
!7475 = !DILocation(line: 13777, column: 13, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 13774, column: 5)
!7477 = !DILocation(line: 13778, column: 7, scope: !7476)
!7478 = !DILocation(line: 13782, column: 13, scope: !7476)
!7479 = !DILocation(line: 13782, column: 7, scope: !7476)
!7480 = !DILocation(line: 13787, column: 7, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 13787, column: 7)
!7482 = !DILocation(line: 13787, column: 7, scope: !7463)
!7483 = !DILocation(line: 13789, column: 13, scope: !7484)
!7484 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 13788, column: 5)
!7485 = !DILocation(line: 13790, column: 7, scope: !7484)
!7486 = !DILocation(line: 13790, column: 29, scope: !7484)
!7487 = !DILocation(line: 13791, column: 7, scope: !7484)
!7488 = !DILocation(line: 13794, column: 1, scope: !7463)
!7489 = distinct !DISubprogram(name: "gimple_has_location", scope: !1248, file: !1248, line: 1165, type: !7490, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7492)
!7490 = !DISubroutineType(types: !7491)
!7491 = !{!2866, !6475}
!7492 = !{!7493}
!7493 = !DILocalVariable(name: "g", arg: 1, scope: !7489, file: !1248, line: 1165, type: !6475)
!7494 = !DILocation(line: 0, scope: !7489)
!7495 = !DILocation(line: 1167, column: 10, scope: !7489)
!7496 = !DILocation(line: 1167, column: 30, scope: !7489)
!7497 = !DILocation(line: 1167, column: 3, scope: !7489)
!7498 = distinct !DISubprogram(name: "set_builtin_user_assembler_name", scope: !3, file: !3, line: 13864, type: !7499, scopeLine: 13865, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7501)
!7499 = !DISubroutineType(types: !7500)
!7500 = !{null, !2914, !2871}
!7501 = !{!7502, !7503, !7504}
!7502 = !DILocalVariable(name: "decl", arg: 1, scope: !7498, file: !3, line: 13864, type: !2914)
!7503 = !DILocalVariable(name: "asmspec", arg: 2, scope: !7498, file: !3, line: 13864, type: !2871)
!7504 = !DILocalVariable(name: "builtin", scope: !7498, file: !3, line: 13866, type: !2914)
!7505 = !DILocation(line: 0, scope: !7498)
!7506 = !DILocation(line: 13867, column: 3, scope: !7498)
!7507 = !DILocation(line: 13871, column: 29, scope: !7498)
!7508 = !DILocation(line: 13871, column: 13, scope: !7498)
!7509 = !DILocation(line: 13872, column: 3, scope: !7498)
!7510 = !DILocation(line: 13873, column: 11, scope: !7498)
!7511 = !DILocation(line: 13873, column: 3, scope: !7498)
!7512 = !DILocation(line: 13876, column: 7, scope: !7513)
!7513 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 13874, column: 5)
!7514 = !DILocation(line: 13877, column: 24, scope: !7513)
!7515 = !DILocation(line: 13877, column: 22, scope: !7513)
!7516 = !DILocation(line: 13878, column: 7, scope: !7513)
!7517 = !DILocation(line: 13880, column: 7, scope: !7513)
!7518 = !DILocation(line: 13881, column: 24, scope: !7513)
!7519 = !DILocation(line: 13881, column: 22, scope: !7513)
!7520 = !DILocation(line: 13882, column: 7, scope: !7513)
!7521 = !DILocation(line: 13884, column: 25, scope: !7513)
!7522 = !DILocation(line: 13884, column: 23, scope: !7513)
!7523 = !DILocation(line: 13885, column: 7, scope: !7513)
!7524 = !DILocation(line: 13887, column: 24, scope: !7513)
!7525 = !DILocation(line: 13887, column: 22, scope: !7513)
!7526 = !DILocation(line: 13888, column: 7, scope: !7513)
!7527 = !DILocation(line: 13890, column: 23, scope: !7513)
!7528 = !DILocation(line: 13890, column: 21, scope: !7513)
!7529 = !DILocation(line: 13891, column: 7, scope: !7513)
!7530 = !DILocation(line: 13903, column: 1, scope: !7498)
!7531 = distinct !DISubprogram(name: "init_call_expr_arg_iterator", scope: !135, file: !135, line: 5375, type: !7532, scopeLine: 5376, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7534)
!7532 = !DISubroutineType(types: !7533)
!7533 = !{null, !2914, !5889}
!7534 = !{!7535, !7536}
!7535 = !DILocalVariable(name: "exp", arg: 1, scope: !7531, file: !135, line: 5375, type: !2914)
!7536 = !DILocalVariable(name: "iter", arg: 2, scope: !7531, file: !135, line: 5375, type: !5889)
!7537 = !DILocation(line: 0, scope: !7531)
!7538 = !DILocation(line: 5377, column: 9, scope: !7531)
!7539 = !DILocation(line: 5377, column: 11, scope: !7531)
!7540 = !DILocation(line: 5378, column: 13, scope: !7531)
!7541 = !DILocation(line: 5378, column: 9, scope: !7531)
!7542 = !DILocation(line: 5378, column: 11, scope: !7531)
!7543 = !DILocation(line: 5379, column: 9, scope: !7531)
!7544 = !DILocation(line: 5379, column: 11, scope: !7531)
!7545 = !DILocation(line: 5380, column: 1, scope: !7531)
!7546 = distinct !DISubprogram(name: "fold_builtin_0", scope: !3, file: !3, line: 9689, type: !6175, scopeLine: 9690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7547)
!7547 = !{!7548, !7549, !7550, !7551, !7552}
!7548 = !DILocalVariable(name: "loc", arg: 1, scope: !7546, file: !3, line: 9689, type: !2998)
!7549 = !DILocalVariable(name: "fndecl", arg: 2, scope: !7546, file: !3, line: 9689, type: !2914)
!7550 = !DILocalVariable(name: "ignore", arg: 3, scope: !7546, file: !3, line: 9689, type: !2866)
!7551 = !DILocalVariable(name: "type", scope: !7546, file: !3, line: 9691, type: !2914)
!7552 = !DILocalVariable(name: "fcode", scope: !7546, file: !3, line: 9692, type: !527)
!7553 = !DILocation(line: 0, scope: !7546)
!7554 = !DILocation(line: 9691, column: 15, scope: !7546)
!7555 = !DILocation(line: 9692, column: 34, scope: !7546)
!7556 = !DILocation(line: 9693, column: 3, scope: !7546)
!7557 = !DILocation(line: 9699, column: 14, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 9694, column: 5)
!7559 = !DILocation(line: 9699, column: 7, scope: !7558)
!7560 = !DILocation(line: 9702, column: 14, scope: !7558)
!7561 = !DILocation(line: 9702, column: 7, scope: !7558)
!7562 = !DILocation(line: 9705, column: 14, scope: !7558)
!7563 = !DILocation(line: 9705, column: 7, scope: !7558)
!7564 = !DILocation(line: 9711, column: 1, scope: !7546)
!7565 = distinct !DISubprogram(name: "fold_builtin_1", scope: !3, file: !3, line: 9718, type: !6314, scopeLine: 9719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7566)
!7566 = !{!7567, !7568, !7569, !7570, !7571, !7572, !7573, !7576, !7578}
!7567 = !DILocalVariable(name: "loc", arg: 1, scope: !7565, file: !3, line: 9718, type: !2998)
!7568 = !DILocalVariable(name: "fndecl", arg: 2, scope: !7565, file: !3, line: 9718, type: !2914)
!7569 = !DILocalVariable(name: "arg0", arg: 3, scope: !7565, file: !3, line: 9718, type: !2914)
!7570 = !DILocalVariable(name: "ignore", arg: 4, scope: !7565, file: !3, line: 9718, type: !2866)
!7571 = !DILocalVariable(name: "type", scope: !7565, file: !3, line: 9720, type: !2914)
!7572 = !DILocalVariable(name: "fcode", scope: !7565, file: !3, line: 9721, type: !527)
!7573 = !DILocalVariable(name: "val", scope: !7574, file: !3, line: 9727, type: !2914)
!7574 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 9726, column: 7)
!7575 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 9723, column: 5)
!7576 = !DILocalVariable(name: "ret", scope: !7577, file: !3, line: 10217, type: !2914)
!7577 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 10216, column: 7)
!7578 = !DILocalVariable(name: "ret", scope: !7579, file: !3, line: 10228, type: !2914)
!7579 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 10227, column: 7)
!7580 = !DILocation(line: 0, scope: !7565)
!7581 = !DILocation(line: 9720, column: 15, scope: !7565)
!7582 = !DILocation(line: 9721, column: 34, scope: !7565)
!7583 = !DILocation(line: 9722, column: 3, scope: !7565)
!7584 = !DILocation(line: 9727, column: 13, scope: !7574)
!7585 = !DILocation(line: 0, scope: !7574)
!7586 = !DILocation(line: 9732, column: 7, scope: !7587)
!7587 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 9732, column: 6)
!7588 = !DILocation(line: 9732, column: 15, scope: !7587)
!7589 = !DILocation(line: 9732, column: 11, scope: !7587)
!7590 = !DILocation(line: 9739, column: 14, scope: !7575)
!7591 = !DILocation(line: 9739, column: 7, scope: !7575)
!7592 = !DILocation(line: 9742, column: 14, scope: !7575)
!7593 = !DILocation(line: 9742, column: 7, scope: !7575)
!7594 = !DILocation(line: 9745, column: 14, scope: !7575)
!7595 = !DILocation(line: 9745, column: 7, scope: !7575)
!7596 = !DILocation(line: 9751, column: 14, scope: !7575)
!7597 = !DILocation(line: 9751, column: 7, scope: !7575)
!7598 = !DILocation(line: 9754, column: 11, scope: !7599)
!7599 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 9754, column: 11)
!7600 = !DILocation(line: 9755, column: 2, scope: !7599)
!7601 = !DILocation(line: 9755, column: 5, scope: !7599)
!7602 = !DILocation(line: 9755, column: 46, scope: !7599)
!7603 = !DILocation(line: 9754, column: 11, scope: !7575)
!7604 = !DILocation(line: 9756, column: 9, scope: !7599)
!7605 = !DILocation(line: 9756, column: 2, scope: !7599)
!7606 = !DILocation(line: 9760, column: 11, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 9760, column: 11)
!7608 = !DILocation(line: 9761, column: 2, scope: !7607)
!7609 = !DILocation(line: 9761, column: 5, scope: !7607)
!7610 = !DILocation(line: 9761, column: 46, scope: !7607)
!7611 = !DILocation(line: 9760, column: 11, scope: !7575)
!7612 = !DILocation(line: 9762, column: 30, scope: !7607)
!7613 = !DILocation(line: 9762, column: 9, scope: !7607)
!7614 = !DILocation(line: 9762, column: 2, scope: !7607)
!7615 = !DILocation(line: 9766, column: 11, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7575, file: !3, line: 9766, column: 11)
!7617 = !DILocation(line: 9767, column: 4, scope: !7616)
!7618 = !DILocation(line: 9767, column: 7, scope: !7616)
!7619 = !DILocation(line: 9767, column: 48, scope: !7616)
!7620 = !DILocation(line: 9766, column: 11, scope: !7575)
!7621 = !DILocation(line: 9768, column: 30, scope: !7616)
!7622 = !DILocation(line: 9768, column: 9, scope: !7616)
!7623 = !DILocation(line: 9768, column: 2, scope: !7616)
!7624 = !DILocation(line: 9772, column: 14, scope: !7575)
!7625 = !DILocation(line: 9772, column: 7, scope: !7575)
!7626 = !DILocation(line: 9775, column: 14, scope: !7575)
!7627 = !DILocation(line: 9775, column: 7, scope: !7575)
!7628 = !DILocation(line: 9898, column: 14, scope: !7575)
!7629 = !DILocation(line: 9898, column: 7, scope: !7575)
!7630 = !DILocation(line: 9901, column: 14, scope: !7575)
!7631 = !DILocation(line: 9901, column: 7, scope: !7575)
!7632 = !DILocation(line: 9904, column: 14, scope: !7575)
!7633 = !DILocation(line: 9904, column: 7, scope: !7575)
!7634 = !DILocation(line: 9907, column: 14, scope: !7575)
!7635 = !DILocation(line: 9907, column: 7, scope: !7575)
!7636 = !DILocation(line: 9977, column: 14, scope: !7575)
!7637 = !DILocation(line: 9977, column: 7, scope: !7575)
!7638 = !DILocation(line: 9980, column: 14, scope: !7575)
!7639 = !DILocation(line: 9980, column: 7, scope: !7575)
!7640 = !DILocation(line: 9983, column: 14, scope: !7575)
!7641 = !DILocation(line: 9983, column: 7, scope: !7575)
!7642 = !DILocation(line: 10004, column: 14, scope: !7575)
!7643 = !DILocation(line: 10004, column: 7, scope: !7575)
!7644 = !DILocation(line: 10148, column: 14, scope: !7575)
!7645 = !DILocation(line: 10148, column: 7, scope: !7575)
!7646 = !DILocation(line: 10151, column: 14, scope: !7575)
!7647 = !DILocation(line: 10151, column: 7, scope: !7575)
!7648 = !DILocation(line: 10154, column: 14, scope: !7575)
!7649 = !DILocation(line: 10154, column: 7, scope: !7575)
!7650 = !DILocation(line: 10157, column: 14, scope: !7575)
!7651 = !DILocation(line: 10157, column: 7, scope: !7575)
!7652 = !DILocation(line: 10160, column: 14, scope: !7575)
!7653 = !DILocation(line: 10160, column: 7, scope: !7575)
!7654 = !DILocation(line: 10163, column: 14, scope: !7575)
!7655 = !DILocation(line: 10163, column: 7, scope: !7575)
!7656 = !DILocation(line: 10167, column: 14, scope: !7575)
!7657 = !DILocation(line: 10167, column: 7, scope: !7575)
!7658 = !DILocation(line: 10175, column: 14, scope: !7575)
!7659 = !DILocation(line: 10175, column: 7, scope: !7575)
!7660 = !DILocation(line: 10179, column: 14, scope: !7575)
!7661 = !DILocation(line: 10179, column: 7, scope: !7575)
!7662 = !DILocation(line: 10183, column: 14, scope: !7575)
!7663 = !DILocation(line: 10183, column: 7, scope: !7575)
!7664 = !DILocation(line: 10190, column: 14, scope: !7575)
!7665 = !DILocation(line: 10190, column: 7, scope: !7575)
!7666 = !DILocation(line: 10193, column: 14, scope: !7575)
!7667 = !DILocation(line: 10193, column: 7, scope: !7575)
!7668 = !DILocation(line: 10196, column: 14, scope: !7575)
!7669 = !DILocation(line: 10196, column: 7, scope: !7575)
!7670 = !DILocation(line: 10200, column: 14, scope: !7575)
!7671 = !DILocation(line: 10200, column: 7, scope: !7575)
!7672 = !DILocation(line: 10203, column: 14, scope: !7575)
!7673 = !DILocation(line: 10203, column: 7, scope: !7575)
!7674 = !DILocation(line: 10206, column: 14, scope: !7575)
!7675 = !DILocation(line: 10206, column: 7, scope: !7575)
!7676 = !DILocation(line: 10209, column: 14, scope: !7575)
!7677 = !DILocation(line: 10209, column: 7, scope: !7575)
!7678 = !DILocation(line: 10217, column: 13, scope: !7577)
!7679 = !DILocation(line: 0, scope: !7577)
!7680 = !DILocation(line: 10218, column: 6, scope: !7681)
!7681 = distinct !DILexicalBlock(scope: !7577, file: !3, line: 10218, column: 6)
!7682 = !DILocation(line: 10218, column: 6, scope: !7577)
!7683 = !DILocation(line: 10220, column: 9, scope: !7577)
!7684 = !DILocation(line: 10220, column: 2, scope: !7577)
!7685 = !DILocation(line: 10228, column: 13, scope: !7579)
!7686 = !DILocation(line: 0, scope: !7579)
!7687 = !DILocation(line: 10229, column: 6, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7579, file: !3, line: 10229, column: 6)
!7689 = !DILocation(line: 10229, column: 6, scope: !7579)
!7690 = !DILocation(line: 10231, column: 9, scope: !7579)
!7691 = !DILocation(line: 10231, column: 2, scope: !7579)
!7692 = !DILocation(line: 10235, column: 14, scope: !7575)
!7693 = !DILocation(line: 10235, column: 7, scope: !7575)
!7694 = !DILocation(line: 10238, column: 14, scope: !7575)
!7695 = !DILocation(line: 10238, column: 7, scope: !7575)
!7696 = !DILocation(line: 10244, column: 14, scope: !7575)
!7697 = !DILocation(line: 10244, column: 7, scope: !7575)
!7698 = !DILocation(line: 10249, column: 14, scope: !7575)
!7699 = !DILocation(line: 10249, column: 7, scope: !7575)
!7700 = !DILocation(line: 10257, column: 1, scope: !7565)
!7701 = distinct !DISubprogram(name: "fold_builtin_2", scope: !3, file: !3, line: 10264, type: !7702, scopeLine: 10265, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7704)
!7702 = !DISubroutineType(types: !7703)
!7703 = !{!2914, !2998, !2914, !2914, !2914, !2866}
!7704 = !{!7705, !7706, !7707, !7708, !7709, !7710, !7711, !7712}
!7705 = !DILocalVariable(name: "loc", arg: 1, scope: !7701, file: !3, line: 10264, type: !2998)
!7706 = !DILocalVariable(name: "fndecl", arg: 2, scope: !7701, file: !3, line: 10264, type: !2914)
!7707 = !DILocalVariable(name: "arg0", arg: 3, scope: !7701, file: !3, line: 10264, type: !2914)
!7708 = !DILocalVariable(name: "arg1", arg: 4, scope: !7701, file: !3, line: 10264, type: !2914)
!7709 = !DILocalVariable(name: "ignore", arg: 5, scope: !7701, file: !3, line: 10264, type: !2866)
!7710 = !DILocalVariable(name: "type", scope: !7701, file: !3, line: 10266, type: !2914)
!7711 = !DILocalVariable(name: "fcode", scope: !7701, file: !3, line: 10267, type: !527)
!7712 = !DILocalVariable(name: "fn", scope: !7713, file: !3, line: 10397, type: !2914)
!7713 = distinct !DILexicalBlock(scope: !7714, file: !3, line: 10396, column: 2)
!7714 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 10395, column: 11)
!7715 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 10270, column: 5)
!7716 = !DILocation(line: 0, scope: !7701)
!7717 = !DILocation(line: 10266, column: 15, scope: !7701)
!7718 = !DILocation(line: 10267, column: 34, scope: !7701)
!7719 = !DILocation(line: 10269, column: 3, scope: !7701)
!7720 = !DILocation(line: 10335, column: 14, scope: !7715)
!7721 = !DILocation(line: 10335, column: 7, scope: !7715)
!7722 = !DILocation(line: 10350, column: 14, scope: !7715)
!7723 = !DILocation(line: 10350, column: 7, scope: !7715)
!7724 = !DILocation(line: 10353, column: 14, scope: !7715)
!7725 = !DILocation(line: 10353, column: 7, scope: !7715)
!7726 = !DILocation(line: 10357, column: 14, scope: !7715)
!7727 = !DILocation(line: 10357, column: 7, scope: !7715)
!7728 = !DILocation(line: 10360, column: 14, scope: !7715)
!7729 = !DILocation(line: 10360, column: 7, scope: !7715)
!7730 = !DILocation(line: 10363, column: 14, scope: !7715)
!7731 = !DILocation(line: 10363, column: 7, scope: !7715)
!7732 = !DILocation(line: 10366, column: 14, scope: !7715)
!7733 = !DILocation(line: 10366, column: 7, scope: !7715)
!7734 = !DILocation(line: 10369, column: 14, scope: !7715)
!7735 = !DILocation(line: 10369, column: 7, scope: !7715)
!7736 = !DILocation(line: 10372, column: 14, scope: !7715)
!7737 = !DILocation(line: 10372, column: 7, scope: !7715)
!7738 = !DILocation(line: 10375, column: 14, scope: !7715)
!7739 = !DILocation(line: 10375, column: 7, scope: !7715)
!7740 = !DILocation(line: 10378, column: 14, scope: !7715)
!7741 = !DILocation(line: 10378, column: 7, scope: !7715)
!7742 = !DILocation(line: 10381, column: 14, scope: !7715)
!7743 = !DILocation(line: 10381, column: 7, scope: !7715)
!7744 = !DILocation(line: 10385, column: 14, scope: !7715)
!7745 = !DILocation(line: 10385, column: 7, scope: !7715)
!7746 = !DILocation(line: 10389, column: 14, scope: !7715)
!7747 = !DILocation(line: 10389, column: 7, scope: !7715)
!7748 = !DILocation(line: 10392, column: 14, scope: !7715)
!7749 = !DILocation(line: 10392, column: 7, scope: !7715)
!7750 = !DILocation(line: 10395, column: 11, scope: !7714)
!7751 = !DILocation(line: 10395, column: 11, scope: !7715)
!7752 = !DILocation(line: 10397, column: 14, scope: !7713)
!7753 = !DILocation(line: 0, scope: !7713)
!7754 = !DILocation(line: 10398, column: 9, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 10398, column: 8)
!7756 = !DILocation(line: 10398, column: 8, scope: !7713)
!7757 = !DILocation(line: 10401, column: 11, scope: !7713)
!7758 = !DILocation(line: 10401, column: 4, scope: !7713)
!7759 = !DILocation(line: 10404, column: 9, scope: !7714)
!7760 = !DILocation(line: 10404, column: 2, scope: !7714)
!7761 = !DILocation(line: 10408, column: 14, scope: !7715)
!7762 = !DILocation(line: 10408, column: 7, scope: !7715)
!7763 = !DILocation(line: 10411, column: 14, scope: !7715)
!7764 = !DILocation(line: 10411, column: 7, scope: !7715)
!7765 = !DILocation(line: 10414, column: 14, scope: !7715)
!7766 = !DILocation(line: 10414, column: 7, scope: !7715)
!7767 = !DILocation(line: 10417, column: 14, scope: !7715)
!7768 = !DILocation(line: 10417, column: 7, scope: !7715)
!7769 = !DILocation(line: 10420, column: 14, scope: !7715)
!7770 = !DILocation(line: 10420, column: 7, scope: !7715)
!7771 = !DILocation(line: 10423, column: 14, scope: !7715)
!7772 = !DILocation(line: 10423, column: 7, scope: !7715)
!7773 = !DILocation(line: 10426, column: 14, scope: !7715)
!7774 = !DILocation(line: 10426, column: 7, scope: !7715)
!7775 = !DILocation(line: 10429, column: 14, scope: !7715)
!7776 = !DILocation(line: 10429, column: 7, scope: !7715)
!7777 = !DILocation(line: 10432, column: 14, scope: !7715)
!7778 = !DILocation(line: 10432, column: 7, scope: !7715)
!7779 = !DILocation(line: 10435, column: 14, scope: !7715)
!7780 = !DILocation(line: 10435, column: 7, scope: !7715)
!7781 = !DILocation(line: 10438, column: 14, scope: !7715)
!7782 = !DILocation(line: 10438, column: 7, scope: !7715)
!7783 = !DILocation(line: 10441, column: 14, scope: !7715)
!7784 = !DILocation(line: 10441, column: 7, scope: !7715)
!7785 = !DILocation(line: 10444, column: 14, scope: !7715)
!7786 = !DILocation(line: 10444, column: 7, scope: !7715)
!7787 = !DILocation(line: 10447, column: 14, scope: !7715)
!7788 = !DILocation(line: 10447, column: 7, scope: !7715)
!7789 = !DILocation(line: 10456, column: 64, scope: !7715)
!7790 = !DILocation(line: 10456, column: 14, scope: !7715)
!7791 = !DILocation(line: 10456, column: 7, scope: !7715)
!7792 = !DILocation(line: 10459, column: 14, scope: !7715)
!7793 = !DILocation(line: 10459, column: 7, scope: !7715)
!7794 = !DILocation(line: 10464, column: 14, scope: !7715)
!7795 = !DILocation(line: 10464, column: 7, scope: !7715)
!7796 = !DILocation(line: 10468, column: 12, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 10468, column: 11)
!7798 = !DILocation(line: 10469, column: 4, scope: !7797)
!7799 = !DILocation(line: 10469, column: 7, scope: !7797)
!7800 = !DILocation(line: 10468, column: 11, scope: !7715)
!7801 = !DILocation(line: 10472, column: 9, scope: !7797)
!7802 = !DILocation(line: 10472, column: 2, scope: !7797)
!7803 = !DILocation(line: 10479, column: 14, scope: !7715)
!7804 = !DILocation(line: 10479, column: 7, scope: !7715)
!7805 = !DILocation(line: 10485, column: 3, scope: !7701)
!7806 = !DILocation(line: 10486, column: 1, scope: !7701)
!7807 = distinct !DISubprogram(name: "fold_builtin_3", scope: !3, file: !3, line: 10493, type: !7808, scopeLine: 10495, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7810)
!7808 = !DISubroutineType(types: !7809)
!7809 = !{!2914, !2998, !2914, !2914, !2914, !2914, !2866}
!7810 = !{!7811, !7812, !7813, !7814, !7815, !7816, !7817, !7818}
!7811 = !DILocalVariable(name: "loc", arg: 1, scope: !7807, file: !3, line: 10493, type: !2998)
!7812 = !DILocalVariable(name: "fndecl", arg: 2, scope: !7807, file: !3, line: 10493, type: !2914)
!7813 = !DILocalVariable(name: "arg0", arg: 3, scope: !7807, file: !3, line: 10494, type: !2914)
!7814 = !DILocalVariable(name: "arg1", arg: 4, scope: !7807, file: !3, line: 10494, type: !2914)
!7815 = !DILocalVariable(name: "arg2", arg: 5, scope: !7807, file: !3, line: 10494, type: !2914)
!7816 = !DILocalVariable(name: "ignore", arg: 6, scope: !7807, file: !3, line: 10494, type: !2866)
!7817 = !DILocalVariable(name: "type", scope: !7807, file: !3, line: 10496, type: !2914)
!7818 = !DILocalVariable(name: "fcode", scope: !7807, file: !3, line: 10497, type: !527)
!7819 = !DILocation(line: 0, scope: !7807)
!7820 = !DILocation(line: 10496, column: 15, scope: !7807)
!7821 = !DILocation(line: 10497, column: 34, scope: !7807)
!7822 = !DILocation(line: 10498, column: 3, scope: !7807)
!7823 = !DILocation(line: 10502, column: 14, scope: !7824)
!7824 = distinct !DILexicalBlock(scope: !7807, file: !3, line: 10499, column: 5)
!7825 = !DILocation(line: 10502, column: 7, scope: !7824)
!7826 = !DILocation(line: 10527, column: 14, scope: !7824)
!7827 = !DILocation(line: 10527, column: 7, scope: !7824)
!7828 = !DILocation(line: 10531, column: 10, scope: !7824)
!7829 = !DILocation(line: 10530, column: 14, scope: !7824)
!7830 = !DILocation(line: 10530, column: 7, scope: !7824)
!7831 = !DILocation(line: 10534, column: 14, scope: !7824)
!7832 = !DILocation(line: 10534, column: 7, scope: !7824)
!7833 = !DILocation(line: 10538, column: 14, scope: !7824)
!7834 = !DILocation(line: 10538, column: 7, scope: !7824)
!7835 = !DILocation(line: 10542, column: 14, scope: !7824)
!7836 = !DILocation(line: 10542, column: 7, scope: !7824)
!7837 = !DILocation(line: 10546, column: 14, scope: !7824)
!7838 = !DILocation(line: 10546, column: 7, scope: !7824)
!7839 = !DILocation(line: 10549, column: 14, scope: !7824)
!7840 = !DILocation(line: 10549, column: 7, scope: !7824)
!7841 = !DILocation(line: 10552, column: 14, scope: !7824)
!7842 = !DILocation(line: 10552, column: 7, scope: !7824)
!7843 = !DILocation(line: 10555, column: 14, scope: !7824)
!7844 = !DILocation(line: 10555, column: 7, scope: !7824)
!7845 = !DILocation(line: 10559, column: 14, scope: !7824)
!7846 = !DILocation(line: 10559, column: 7, scope: !7824)
!7847 = !DILocation(line: 10562, column: 59, scope: !7824)
!7848 = !DILocation(line: 10562, column: 14, scope: !7824)
!7849 = !DILocation(line: 10562, column: 7, scope: !7824)
!7850 = !DILocation(line: 10566, column: 14, scope: !7824)
!7851 = !DILocation(line: 10566, column: 7, scope: !7824)
!7852 = !DILocation(line: 10570, column: 14, scope: !7824)
!7853 = !DILocation(line: 10570, column: 7, scope: !7824)
!7854 = !DILocation(line: 10574, column: 12, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 10574, column: 11)
!7856 = !DILocation(line: 10575, column: 4, scope: !7855)
!7857 = !DILocation(line: 10575, column: 7, scope: !7855)
!7858 = !DILocation(line: 10574, column: 11, scope: !7824)
!7859 = !DILocation(line: 10578, column: 9, scope: !7855)
!7860 = !DILocation(line: 10578, column: 2, scope: !7855)
!7861 = !DILocation(line: 10584, column: 14, scope: !7824)
!7862 = !DILocation(line: 10584, column: 7, scope: !7824)
!7863 = !DILocation(line: 10589, column: 12, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7824, file: !3, line: 10589, column: 11)
!7865 = !DILocation(line: 10590, column: 4, scope: !7864)
!7866 = !DILocation(line: 10590, column: 7, scope: !7864)
!7867 = !DILocation(line: 10589, column: 11, scope: !7824)
!7868 = !DILocation(line: 10593, column: 9, scope: !7864)
!7869 = !DILocation(line: 10593, column: 2, scope: !7864)
!7870 = !DILocation(line: 10600, column: 1, scope: !7807)
!7871 = distinct !DISubprogram(name: "fold_builtin_4", scope: !3, file: !3, line: 10608, type: !7872, scopeLine: 10610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7874)
!7872 = !DISubroutineType(types: !7873)
!7873 = !{!2914, !2998, !2914, !2914, !2914, !2914, !2914, !2866}
!7874 = !{!7875, !7876, !7877, !7878, !7879, !7880, !7881, !7882}
!7875 = !DILocalVariable(name: "loc", arg: 1, scope: !7871, file: !3, line: 10608, type: !2998)
!7876 = !DILocalVariable(name: "fndecl", arg: 2, scope: !7871, file: !3, line: 10608, type: !2914)
!7877 = !DILocalVariable(name: "arg0", arg: 3, scope: !7871, file: !3, line: 10609, type: !2914)
!7878 = !DILocalVariable(name: "arg1", arg: 4, scope: !7871, file: !3, line: 10609, type: !2914)
!7879 = !DILocalVariable(name: "arg2", arg: 5, scope: !7871, file: !3, line: 10609, type: !2914)
!7880 = !DILocalVariable(name: "arg3", arg: 6, scope: !7871, file: !3, line: 10609, type: !2914)
!7881 = !DILocalVariable(name: "ignore", arg: 7, scope: !7871, file: !3, line: 10609, type: !2866)
!7882 = !DILocalVariable(name: "fcode", scope: !7871, file: !3, line: 10611, type: !527)
!7883 = !DILocation(line: 0, scope: !7871)
!7884 = !DILocation(line: 10611, column: 34, scope: !7871)
!7885 = !DILocation(line: 10613, column: 3, scope: !7871)
!7886 = !DILocation(line: 10619, column: 14, scope: !7887)
!7887 = distinct !DILexicalBlock(scope: !7871, file: !3, line: 10614, column: 5)
!7888 = !DILocation(line: 10619, column: 7, scope: !7887)
!7889 = !DILocation(line: 10624, column: 14, scope: !7887)
!7890 = !DILocation(line: 10624, column: 7, scope: !7887)
!7891 = !DILocation(line: 10627, column: 14, scope: !7887)
!7892 = !DILocation(line: 10627, column: 7, scope: !7887)
!7893 = !DILocation(line: 10631, column: 12, scope: !7894)
!7894 = distinct !DILexicalBlock(scope: !7887, file: !3, line: 10631, column: 11)
!7895 = !DILocation(line: 10632, column: 4, scope: !7894)
!7896 = !DILocation(line: 10632, column: 7, scope: !7894)
!7897 = !DILocation(line: 10631, column: 11, scope: !7887)
!7898 = !DILocation(line: 10635, column: 9, scope: !7894)
!7899 = !DILocation(line: 10635, column: 2, scope: !7894)
!7900 = !DILocation(line: 10643, column: 1, scope: !7871)
!7901 = distinct !DISubprogram(name: "fold_builtin_inf", scope: !3, file: !3, line: 6668, type: !7902, scopeLine: 6669, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7904)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!2914, !2998, !2914, !1249}
!7904 = !{!7905, !7906, !7907, !7908}
!7905 = !DILocalVariable(name: "loc", arg: 1, scope: !7901, file: !3, line: 6668, type: !2998)
!7906 = !DILocalVariable(name: "type", arg: 2, scope: !7901, file: !3, line: 6668, type: !2914)
!7907 = !DILocalVariable(name: "warn", arg: 3, scope: !7901, file: !3, line: 6668, type: !1249)
!7908 = !DILocalVariable(name: "real", scope: !7901, file: !3, line: 6670, type: !2936)
!7909 = !DILocation(line: 0, scope: !7901)
!7910 = !DILocation(line: 6670, column: 3, scope: !7901)
!7911 = !DILocation(line: 6679, column: 8, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 6679, column: 7)
!7913 = !DILocation(line: 6679, column: 50, scope: !7912)
!7914 = !DILocation(line: 6679, column: 47, scope: !7912)
!7915 = !DILocation(line: 6679, column: 7, scope: !7901)
!7916 = !DILocation(line: 6680, column: 5, scope: !7912)
!7917 = !DILocation(line: 6682, column: 3, scope: !7901)
!7918 = !DILocation(line: 6683, column: 10, scope: !7901)
!7919 = !DILocation(line: 6684, column: 1, scope: !7901)
!7920 = !DILocation(line: 6683, column: 3, scope: !7901)
!7921 = distinct !DISubprogram(name: "fold_builtin_classify_type", scope: !3, file: !3, line: 6639, type: !5487, scopeLine: 6640, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7922)
!7922 = !{!7923}
!7923 = !DILocalVariable(name: "arg", arg: 1, scope: !7921, file: !3, line: 6639, type: !2914)
!7924 = !DILocation(line: 0, scope: !7921)
!7925 = !DILocation(line: 6641, column: 11, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 6641, column: 7)
!7927 = !DILocation(line: 6641, column: 7, scope: !7921)
!7928 = !DILocation(line: 6642, column: 12, scope: !7926)
!7929 = !DILocation(line: 6642, column: 5, scope: !7926)
!7930 = !DILocation(line: 6644, column: 51, scope: !7921)
!7931 = !DILocation(line: 6644, column: 36, scope: !7921)
!7932 = !DILocation(line: 6644, column: 10, scope: !7921)
!7933 = !DILocation(line: 6644, column: 3, scope: !7921)
!7934 = !DILocation(line: 6645, column: 1, scope: !7921)
!7935 = distinct !DISubprogram(name: "type_to_class", scope: !3, file: !3, line: 1707, type: !7936, scopeLine: 1708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7938)
!7936 = !DISubroutineType(types: !7937)
!7937 = !{!1287, !2914}
!7938 = !{!7939}
!7939 = !DILocalVariable(name: "type", arg: 1, scope: !7935, file: !3, line: 1707, type: !2914)
!7940 = !DILocation(line: 0, scope: !7935)
!7941 = !DILocation(line: 1709, column: 11, scope: !7935)
!7942 = !DILocation(line: 1709, column: 3, scope: !7935)
!7943 = !DILocation(line: 1712, column: 27, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7935, file: !3, line: 1710, column: 5)
!7945 = !DILocation(line: 1713, column: 28, scope: !7944)
!7946 = !DILocation(line: 1714, column: 27, scope: !7944)
!7947 = !DILocation(line: 1715, column: 27, scope: !7944)
!7948 = !DILocation(line: 1716, column: 28, scope: !7944)
!7949 = !DILocation(line: 1717, column: 26, scope: !7944)
!7950 = !DILocation(line: 1718, column: 24, scope: !7944)
!7951 = !DILocation(line: 1719, column: 27, scope: !7944)
!7952 = !DILocation(line: 1720, column: 28, scope: !7944)
!7953 = !DILocation(line: 1721, column: 26, scope: !7944)
!7954 = !DILocation(line: 1722, column: 26, scope: !7944)
!7955 = !DILocation(line: 1724, column: 28, scope: !7944)
!7956 = !DILocation(line: 1725, column: 33, scope: !7944)
!7957 = !DILocation(line: 1725, column: 25, scope: !7944)
!7958 = !DILocation(line: 1727, column: 24, scope: !7944)
!7959 = !DILocation(line: 1728, column: 18, scope: !7944)
!7960 = !DILocation(line: 0, scope: !7944)
!7961 = !DILocation(line: 1730, column: 1, scope: !7935)
!7962 = distinct !DISubprogram(name: "fold_builtin_constant_p", scope: !3, file: !3, line: 6504, type: !5487, scopeLine: 6505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7963)
!7963 = !{!7964, !7965}
!7964 = !DILocalVariable(name: "arg", arg: 1, scope: !7962, file: !3, line: 6504, type: !2914)
!7965 = !DILocalVariable(name: "op", scope: !7966, file: !3, line: 6518, type: !2914)
!7966 = distinct !DILexicalBlock(scope: !7967, file: !3, line: 6517, column: 5)
!7967 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 6516, column: 7)
!7968 = !DILocation(line: 0, scope: !7962)
!7969 = !DILocation(line: 6509, column: 3, scope: !7962)
!7970 = !DILocation(line: 6512, column: 7, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 6512, column: 7)
!7972 = !DILocation(line: 6513, column: 7, scope: !7971)
!7973 = !DILocation(line: 6513, column: 27, scope: !7971)
!7974 = !DILocation(line: 6514, column: 4, scope: !7971)
!7975 = !DILocation(line: 6514, column: 7, scope: !7971)
!7976 = !DILocation(line: 6512, column: 7, scope: !7962)
!7977 = !DILocation(line: 6515, column: 12, scope: !7971)
!7978 = !DILocation(line: 6515, column: 5, scope: !7971)
!7979 = !DILocation(line: 6516, column: 23, scope: !7967)
!7980 = !DILocation(line: 6516, column: 7, scope: !7962)
!7981 = !DILocation(line: 6518, column: 18, scope: !7966)
!7982 = !DILocation(line: 0, scope: !7966)
!7983 = !DILocation(line: 6519, column: 12, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7966, file: !3, line: 6519, column: 12)
!7985 = !DILocation(line: 6519, column: 27, scope: !7984)
!7986 = !DILocation(line: 6520, column: 5, scope: !7984)
!7987 = !DILocation(line: 6520, column: 24, scope: !7984)
!7988 = !DILocation(line: 6521, column: 9, scope: !7984)
!7989 = !DILocation(line: 6521, column: 27, scope: !7984)
!7990 = !DILocation(line: 6521, column: 12, scope: !7984)
!7991 = !DILocation(line: 6522, column: 9, scope: !7984)
!7992 = !DILocation(line: 6522, column: 12, scope: !7984)
!7993 = !DILocation(line: 6522, column: 45, scope: !7984)
!7994 = !DILocation(line: 6519, column: 12, scope: !7966)
!7995 = !DILocation(line: 6523, column: 10, scope: !7984)
!7996 = !DILocation(line: 6523, column: 3, scope: !7984)
!7997 = !DILocation(line: 6533, column: 7, scope: !7998)
!7998 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 6533, column: 7)
!7999 = !DILocation(line: 6534, column: 7, scope: !7998)
!8000 = !DILocation(line: 6534, column: 10, scope: !7998)
!8001 = !DILocation(line: 6535, column: 7, scope: !7998)
!8002 = !DILocation(line: 6535, column: 10, scope: !7998)
!8003 = !DILocation(line: 6536, column: 7, scope: !7998)
!8004 = !DILocation(line: 6536, column: 10, scope: !7998)
!8005 = !DILocation(line: 6536, column: 15, scope: !7998)
!8006 = !DILocation(line: 6537, column: 10, scope: !7998)
!8007 = !DILocation(line: 6537, column: 7, scope: !7998)
!8008 = !DILocation(line: 6538, column: 12, scope: !7998)
!8009 = !DILocation(line: 6538, column: 5, scope: !7998)
!8010 = !DILocation(line: 6541, column: 1, scope: !7962)
!8011 = distinct !DISubprogram(name: "fold_builtin_strlen", scope: !3, file: !3, line: 6650, type: !6344, scopeLine: 6651, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8012)
!8012 = !{!8013, !8014, !8015, !8016}
!8013 = !DILocalVariable(name: "loc", arg: 1, scope: !8011, file: !3, line: 6650, type: !2998)
!8014 = !DILocalVariable(name: "type", arg: 2, scope: !8011, file: !3, line: 6650, type: !2914)
!8015 = !DILocalVariable(name: "arg", arg: 3, scope: !8011, file: !3, line: 6650, type: !2914)
!8016 = !DILocalVariable(name: "len", scope: !8017, file: !3, line: 6656, type: !2914)
!8017 = distinct !DILexicalBlock(scope: !8018, file: !3, line: 6655, column: 5)
!8018 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 6652, column: 7)
!8019 = !DILocation(line: 0, scope: !8011)
!8020 = !DILocation(line: 6652, column: 8, scope: !8018)
!8021 = !DILocation(line: 6652, column: 7, scope: !8011)
!8022 = !DILocation(line: 6656, column: 18, scope: !8017)
!8023 = !DILocation(line: 0, scope: !8017)
!8024 = !DILocation(line: 6658, column: 11, scope: !8025)
!8025 = distinct !DILexicalBlock(scope: !8017, file: !3, line: 6658, column: 11)
!8026 = !DILocation(line: 6658, column: 11, scope: !8017)
!8027 = !DILocation(line: 6659, column: 9, scope: !8025)
!8028 = !DILocation(line: 6659, column: 2, scope: !8025)
!8029 = !DILocation(line: 0, scope: !8018)
!8030 = !DILocation(line: 6663, column: 1, scope: !8011)
!8031 = distinct !DISubprogram(name: "fold_builtin_fabs", scope: !3, file: !3, line: 9030, type: !6344, scopeLine: 9031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8032)
!8032 = !{!8033, !8034, !8035}
!8033 = !DILocalVariable(name: "loc", arg: 1, scope: !8031, file: !3, line: 9030, type: !2998)
!8034 = !DILocalVariable(name: "arg", arg: 2, scope: !8031, file: !3, line: 9030, type: !2914)
!8035 = !DILocalVariable(name: "type", arg: 3, scope: !8031, file: !3, line: 9030, type: !2914)
!8036 = !DILocation(line: 0, scope: !8031)
!8037 = !DILocation(line: 9032, column: 8, scope: !8038)
!8038 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 9032, column: 7)
!8039 = !DILocation(line: 9032, column: 7, scope: !8031)
!8040 = !DILocation(line: 9035, column: 9, scope: !8031)
!8041 = !DILocation(line: 9036, column: 7, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !8031, file: !3, line: 9036, column: 7)
!8043 = !DILocation(line: 9036, column: 23, scope: !8042)
!8044 = !DILocation(line: 9036, column: 7, scope: !8031)
!8045 = !DILocation(line: 9037, column: 12, scope: !8042)
!8046 = !DILocation(line: 9037, column: 5, scope: !8042)
!8047 = !DILocation(line: 9038, column: 10, scope: !8031)
!8048 = !DILocation(line: 9038, column: 3, scope: !8031)
!8049 = !DILocation(line: 9039, column: 1, scope: !8031)
!8050 = distinct !DISubprogram(name: "fold_builtin_abs", scope: !3, file: !3, line: 9044, type: !6344, scopeLine: 9045, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8051)
!8051 = !{!8052, !8053, !8054}
!8052 = !DILocalVariable(name: "loc", arg: 1, scope: !8050, file: !3, line: 9044, type: !2998)
!8053 = !DILocalVariable(name: "arg", arg: 2, scope: !8050, file: !3, line: 9044, type: !2914)
!8054 = !DILocalVariable(name: "type", arg: 3, scope: !8050, file: !3, line: 9044, type: !2914)
!8055 = !DILocation(line: 0, scope: !8050)
!8056 = !DILocation(line: 9046, column: 8, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 9046, column: 7)
!8058 = !DILocation(line: 9046, column: 7, scope: !8050)
!8059 = !DILocation(line: 9049, column: 9, scope: !8050)
!8060 = !DILocation(line: 9050, column: 7, scope: !8061)
!8061 = distinct !DILexicalBlock(scope: !8050, file: !3, line: 9050, column: 7)
!8062 = !DILocation(line: 9050, column: 23, scope: !8061)
!8063 = !DILocation(line: 9050, column: 7, scope: !8050)
!8064 = !DILocation(line: 9051, column: 12, scope: !8061)
!8065 = !DILocation(line: 9051, column: 5, scope: !8061)
!8066 = !DILocation(line: 9052, column: 10, scope: !8050)
!8067 = !DILocation(line: 9052, column: 3, scope: !8050)
!8068 = !DILocation(line: 9053, column: 1, scope: !8050)
!8069 = distinct !DISubprogram(name: "fold_builtin_ccos", scope: !3, file: !3, line: 7201, type: !7702, scopeLine: 7203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8070)
!8070 = !{!8071, !8072, !8073, !8074, !8075}
!8071 = !DILocalVariable(name: "loc", arg: 1, scope: !8069, file: !3, line: 7201, type: !2998)
!8072 = !DILocalVariable(name: "arg", arg: 2, scope: !8069, file: !3, line: 7201, type: !2914)
!8073 = !DILocalVariable(name: "type", arg: 3, scope: !8069, file: !3, line: 7201, type: !2914)
!8074 = !DILocalVariable(name: "fndecl", arg: 4, scope: !8069, file: !3, line: 7201, type: !2914)
!8075 = !DILocalVariable(name: "hyper", arg: 5, scope: !8069, file: !3, line: 7202, type: !2866)
!8076 = !DILocation(line: 0, scope: !8069)
!8077 = !DILocation(line: 7205, column: 7, scope: !8069)
!8078 = distinct !DISubprogram(name: "fold_builtin_cabs", scope: !3, file: !3, line: 6891, type: !8079, scopeLine: 6892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8081)
!8079 = !DISubroutineType(types: !8080)
!8080 = !{!2914, !2998, !2914, !2914, !2914}
!8081 = !{!8082, !8083, !8084, !8085}
!8082 = !DILocalVariable(name: "loc", arg: 1, scope: !8078, file: !3, line: 6891, type: !2998)
!8083 = !DILocalVariable(name: "arg", arg: 2, scope: !8078, file: !3, line: 6891, type: !2914)
!8084 = !DILocalVariable(name: "type", arg: 3, scope: !8078, file: !3, line: 6891, type: !2914)
!8085 = !DILocalVariable(name: "fndecl", arg: 4, scope: !8078, file: !3, line: 6891, type: !2914)
!8086 = !DILocation(line: 0, scope: !8078)
!8087 = !DILocation(line: 6894, column: 7, scope: !8078)
!8088 = distinct !DISubprogram(name: "fold_builtin_carg", scope: !3, file: !3, line: 9107, type: !6344, scopeLine: 9108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8089)
!8089 = !{!8090, !8091, !8092, !8093, !8096, !8099, !8100}
!8090 = !DILocalVariable(name: "loc", arg: 1, scope: !8088, file: !3, line: 9107, type: !2998)
!8091 = !DILocalVariable(name: "arg", arg: 2, scope: !8088, file: !3, line: 9107, type: !2914)
!8092 = !DILocalVariable(name: "type", arg: 3, scope: !8088, file: !3, line: 9107, type: !2914)
!8093 = !DILocalVariable(name: "atan2_fn", scope: !8094, file: !3, line: 9112, type: !2914)
!8094 = distinct !DILexicalBlock(scope: !8095, file: !3, line: 9111, column: 5)
!8095 = distinct !DILexicalBlock(scope: !8088, file: !3, line: 9109, column: 7)
!8096 = !DILocalVariable(name: "new_arg", scope: !8097, file: !3, line: 9116, type: !2914)
!8097 = distinct !DILexicalBlock(scope: !8098, file: !3, line: 9115, column: 9)
!8098 = distinct !DILexicalBlock(scope: !8094, file: !3, line: 9114, column: 11)
!8099 = !DILocalVariable(name: "r_arg", scope: !8097, file: !3, line: 9117, type: !2914)
!8100 = !DILocalVariable(name: "i_arg", scope: !8097, file: !3, line: 9118, type: !2914)
!8101 = !DILocation(line: 0, scope: !8088)
!8102 = !DILocation(line: 9109, column: 7, scope: !8095)
!8103 = !DILocation(line: 9110, column: 7, scope: !8095)
!8104 = !DILocation(line: 9110, column: 10, scope: !8095)
!8105 = !DILocation(line: 9110, column: 50, scope: !8095)
!8106 = !DILocation(line: 9109, column: 7, scope: !8088)
!8107 = !DILocation(line: 9112, column: 23, scope: !8094)
!8108 = !DILocation(line: 0, scope: !8094)
!8109 = !DILocation(line: 9114, column: 11, scope: !8098)
!8110 = !DILocation(line: 9114, column: 11, scope: !8094)
!8111 = !DILocation(line: 9116, column: 21, scope: !8097)
!8112 = !DILocation(line: 0, scope: !8097)
!8113 = !DILocation(line: 9117, column: 17, scope: !8097)
!8114 = !DILocation(line: 9118, column: 17, scope: !8097)
!8115 = !DILocation(line: 9119, column: 11, scope: !8097)
!8116 = !DILocation(line: 9123, column: 3, scope: !8088)
!8117 = !DILocation(line: 9124, column: 1, scope: !8088)
!8118 = distinct !DISubprogram(name: "fold_builtin_sqrt", scope: !3, file: !3, line: 6973, type: !6344, scopeLine: 6974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8119)
!8119 = !{!8120, !8121, !8122}
!8120 = !DILocalVariable(name: "loc", arg: 1, scope: !8118, file: !3, line: 6973, type: !2998)
!8121 = !DILocalVariable(name: "arg", arg: 2, scope: !8118, file: !3, line: 6973, type: !2914)
!8122 = !DILocalVariable(name: "type", arg: 3, scope: !8118, file: !3, line: 6973, type: !2914)
!8123 = !DILocation(line: 0, scope: !8118)
!8124 = !DILocation(line: 6977, column: 7, scope: !8118)
!8125 = distinct !DISubprogram(name: "fold_builtin_cbrt", scope: !3, file: !3, line: 7051, type: !6344, scopeLine: 7052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8126)
!8126 = !{!8127, !8128, !8129}
!8127 = !DILocalVariable(name: "loc", arg: 1, scope: !8125, file: !3, line: 7051, type: !2998)
!8128 = !DILocalVariable(name: "arg", arg: 2, scope: !8125, file: !3, line: 7051, type: !2914)
!8129 = !DILocalVariable(name: "type", arg: 3, scope: !8125, file: !3, line: 7051, type: !2914)
!8130 = !DILocation(line: 0, scope: !8125)
!8131 = !DILocation(line: 7054, column: 7, scope: !8125)
!8132 = distinct !DISubprogram(name: "fold_builtin_cos", scope: !3, file: !3, line: 7147, type: !8079, scopeLine: 7149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8133)
!8133 = !{!8134, !8135, !8136, !8137}
!8134 = !DILocalVariable(name: "loc", arg: 1, scope: !8132, file: !3, line: 7147, type: !2998)
!8135 = !DILocalVariable(name: "arg", arg: 2, scope: !8132, file: !3, line: 7148, type: !2914)
!8136 = !DILocalVariable(name: "type", arg: 3, scope: !8132, file: !3, line: 7148, type: !2914)
!8137 = !DILocalVariable(name: "fndecl", arg: 4, scope: !8132, file: !3, line: 7148, type: !2914)
!8138 = !DILocation(line: 0, scope: !8132)
!8139 = !DILocation(line: 7151, column: 7, scope: !8132)
!8140 = distinct !DISubprogram(name: "fold_builtin_tan", scope: !3, file: !3, line: 7229, type: !8141, scopeLine: 7230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8143)
!8141 = !DISubroutineType(types: !8142)
!8142 = !{!2914, !2914, !2914}
!8143 = !{!8144, !8145}
!8144 = !DILocalVariable(name: "arg", arg: 1, scope: !8140, file: !3, line: 7229, type: !2914)
!8145 = !DILocalVariable(name: "type", arg: 2, scope: !8140, file: !3, line: 7229, type: !2914)
!8146 = !DILocation(line: 0, scope: !8140)
!8147 = !DILocation(line: 7232, column: 7, scope: !8140)
!8148 = distinct !DISubprogram(name: "fold_builtin_cexp", scope: !3, file: !3, line: 7304, type: !6344, scopeLine: 7305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8149)
!8149 = !{!8150, !8151, !8152}
!8150 = !DILocalVariable(name: "loc", arg: 1, scope: !8148, file: !3, line: 7304, type: !2998)
!8151 = !DILocalVariable(name: "arg0", arg: 2, scope: !8148, file: !3, line: 7304, type: !2914)
!8152 = !DILocalVariable(name: "type", arg: 3, scope: !8148, file: !3, line: 7304, type: !2914)
!8153 = !DILocation(line: 0, scope: !8148)
!8154 = !DILocation(line: 7307, column: 7, scope: !8148)
!8155 = distinct !DISubprogram(name: "fold_builtin_cosh", scope: !3, file: !3, line: 7174, type: !8079, scopeLine: 7175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8156)
!8156 = !{!8157, !8158, !8159, !8160}
!8157 = !DILocalVariable(name: "loc", arg: 1, scope: !8155, file: !3, line: 7174, type: !2998)
!8158 = !DILocalVariable(name: "arg", arg: 2, scope: !8155, file: !3, line: 7174, type: !2914)
!8159 = !DILocalVariable(name: "type", arg: 3, scope: !8155, file: !3, line: 7174, type: !2914)
!8160 = !DILocalVariable(name: "fndecl", arg: 4, scope: !8155, file: !3, line: 7174, type: !2914)
!8161 = !DILocation(line: 0, scope: !8155)
!8162 = !DILocation(line: 7177, column: 7, scope: !8155)
!8163 = distinct !DISubprogram(name: "fold_builtin_nan", scope: !3, file: !3, line: 6689, type: !8164, scopeLine: 6690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8166)
!8164 = !DISubroutineType(types: !8165)
!8165 = !{!2914, !2914, !2914, !1249}
!8166 = !{!8167, !8168, !8169, !8170, !8171}
!8167 = !DILocalVariable(name: "arg", arg: 1, scope: !8163, file: !3, line: 6689, type: !2914)
!8168 = !DILocalVariable(name: "type", arg: 2, scope: !8163, file: !3, line: 6689, type: !2914)
!8169 = !DILocalVariable(name: "quiet", arg: 3, scope: !8163, file: !3, line: 6689, type: !1249)
!8170 = !DILocalVariable(name: "real", scope: !8163, file: !3, line: 6691, type: !2936)
!8171 = !DILocalVariable(name: "str", scope: !8163, file: !3, line: 6692, type: !2871)
!8172 = !DILocation(line: 0, scope: !8163)
!8173 = !DILocation(line: 6691, column: 3, scope: !8163)
!8174 = !DILocation(line: 6694, column: 8, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 6694, column: 7)
!8176 = !DILocation(line: 6694, column: 7, scope: !8163)
!8177 = !DILocation(line: 6696, column: 9, scope: !8163)
!8178 = !DILocation(line: 6697, column: 8, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 6697, column: 7)
!8180 = !DILocation(line: 6697, column: 7, scope: !8163)
!8181 = !DILocation(line: 6700, column: 37, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 6700, column: 7)
!8183 = !DILocation(line: 6700, column: 8, scope: !8182)
!8184 = !DILocation(line: 6700, column: 7, scope: !8163)
!8185 = !DILocation(line: 6703, column: 10, scope: !8163)
!8186 = !DILocation(line: 6703, column: 3, scope: !8163)
!8187 = !DILocation(line: 6704, column: 1, scope: !8163)
!8188 = distinct !DISubprogram(name: "fold_builtin_floor", scope: !3, file: !3, line: 7399, type: !6344, scopeLine: 7400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8189)
!8189 = !{!8190, !8191, !8192, !8193, !8196, !8199, !8200}
!8190 = !DILocalVariable(name: "loc", arg: 1, scope: !8188, file: !3, line: 7399, type: !2998)
!8191 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8188, file: !3, line: 7399, type: !2914)
!8192 = !DILocalVariable(name: "arg", arg: 3, scope: !8188, file: !3, line: 7399, type: !2914)
!8193 = !DILocalVariable(name: "x", scope: !8194, file: !3, line: 7407, type: !2936)
!8194 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 7406, column: 5)
!8195 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 7405, column: 7)
!8196 = !DILocalVariable(name: "type", scope: !8197, file: !3, line: 7412, type: !2914)
!8197 = distinct !DILexicalBlock(scope: !8198, file: !3, line: 7411, column: 2)
!8198 = distinct !DILexicalBlock(scope: !8194, file: !3, line: 7410, column: 11)
!8199 = !DILocalVariable(name: "r", scope: !8197, file: !3, line: 7413, type: !2936)
!8200 = !DILocalVariable(name: "truncfn", scope: !8201, file: !3, line: 7423, type: !2914)
!8201 = distinct !DILexicalBlock(scope: !8202, file: !3, line: 7422, column: 5)
!8202 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 7421, column: 7)
!8203 = !DILocation(line: 0, scope: !8188)
!8204 = !DILocation(line: 7401, column: 8, scope: !8205)
!8205 = distinct !DILexicalBlock(scope: !8188, file: !3, line: 7401, column: 7)
!8206 = !DILocation(line: 7401, column: 7, scope: !8188)
!8207 = !DILocation(line: 7405, column: 7, scope: !8195)
!8208 = !DILocation(line: 7405, column: 23, scope: !8195)
!8209 = !DILocation(line: 7405, column: 35, scope: !8195)
!8210 = !DILocation(line: 7405, column: 39, scope: !8195)
!8211 = !DILocation(line: 7405, column: 7, scope: !8188)
!8212 = !DILocation(line: 7407, column: 7, scope: !8194)
!8213 = !DILocation(line: 7409, column: 11, scope: !8194)
!8214 = !DILocation(line: 0, scope: !8194)
!8215 = !DILocation(line: 7410, column: 13, scope: !8198)
!8216 = !DILocation(line: 7410, column: 39, scope: !8198)
!8217 = !DILocation(line: 7410, column: 34, scope: !8198)
!8218 = !DILocation(line: 7412, column: 16, scope: !8197)
!8219 = !DILocation(line: 0, scope: !8197)
!8220 = !DILocation(line: 7413, column: 4, scope: !8197)
!8221 = !DILocation(line: 7415, column: 20, scope: !8197)
!8222 = !DILocation(line: 7415, column: 4, scope: !8197)
!8223 = !DILocation(line: 7416, column: 11, scope: !8197)
!8224 = !DILocation(line: 7417, column: 2, scope: !8198)
!8225 = !DILocation(line: 7418, column: 5, scope: !8195)
!8226 = !DILocation(line: 7421, column: 7, scope: !8202)
!8227 = !DILocation(line: 7421, column: 7, scope: !8188)
!8228 = !DILocation(line: 7423, column: 39, scope: !8201)
!8229 = !DILocation(line: 7423, column: 22, scope: !8201)
!8230 = !DILocation(line: 0, scope: !8201)
!8231 = !DILocation(line: 7424, column: 11, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 7424, column: 11)
!8233 = !DILocation(line: 7424, column: 11, scope: !8201)
!8234 = !DILocation(line: 7425, column: 9, scope: !8232)
!8235 = !DILocation(line: 7425, column: 2, scope: !8232)
!8236 = !DILocation(line: 7428, column: 10, scope: !8188)
!8237 = !DILocation(line: 7428, column: 3, scope: !8188)
!8238 = !DILocation(line: 7429, column: 1, scope: !8188)
!8239 = distinct !DISubprogram(name: "fold_builtin_ceil", scope: !3, file: !3, line: 7435, type: !6344, scopeLine: 7436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8240)
!8240 = !{!8241, !8242, !8243, !8244, !8247, !8250}
!8241 = !DILocalVariable(name: "loc", arg: 1, scope: !8239, file: !3, line: 7435, type: !2998)
!8242 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8239, file: !3, line: 7435, type: !2914)
!8243 = !DILocalVariable(name: "arg", arg: 3, scope: !8239, file: !3, line: 7435, type: !2914)
!8244 = !DILocalVariable(name: "x", scope: !8245, file: !3, line: 7443, type: !2936)
!8245 = distinct !DILexicalBlock(scope: !8246, file: !3, line: 7442, column: 5)
!8246 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 7441, column: 7)
!8247 = !DILocalVariable(name: "type", scope: !8248, file: !3, line: 7448, type: !2914)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 7447, column: 2)
!8249 = distinct !DILexicalBlock(scope: !8245, file: !3, line: 7446, column: 11)
!8250 = !DILocalVariable(name: "r", scope: !8248, file: !3, line: 7449, type: !2936)
!8251 = !DILocation(line: 0, scope: !8239)
!8252 = !DILocation(line: 7437, column: 8, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 7437, column: 7)
!8254 = !DILocation(line: 7437, column: 7, scope: !8239)
!8255 = !DILocation(line: 7441, column: 7, scope: !8246)
!8256 = !DILocation(line: 7441, column: 23, scope: !8246)
!8257 = !DILocation(line: 7441, column: 35, scope: !8246)
!8258 = !DILocation(line: 7441, column: 39, scope: !8246)
!8259 = !DILocation(line: 7441, column: 7, scope: !8239)
!8260 = !DILocation(line: 7443, column: 7, scope: !8245)
!8261 = !DILocation(line: 7445, column: 11, scope: !8245)
!8262 = !DILocation(line: 0, scope: !8245)
!8263 = !DILocation(line: 7446, column: 13, scope: !8249)
!8264 = !DILocation(line: 7446, column: 39, scope: !8249)
!8265 = !DILocation(line: 7446, column: 34, scope: !8249)
!8266 = !DILocation(line: 7448, column: 16, scope: !8248)
!8267 = !DILocation(line: 0, scope: !8248)
!8268 = !DILocation(line: 7449, column: 4, scope: !8248)
!8269 = !DILocation(line: 7451, column: 19, scope: !8248)
!8270 = !DILocation(line: 7451, column: 4, scope: !8248)
!8271 = !DILocation(line: 7452, column: 11, scope: !8248)
!8272 = !DILocation(line: 7453, column: 2, scope: !8249)
!8273 = !DILocation(line: 7454, column: 5, scope: !8246)
!8274 = !DILocation(line: 7456, column: 10, scope: !8239)
!8275 = !DILocation(line: 7456, column: 3, scope: !8239)
!8276 = !DILocation(line: 7457, column: 1, scope: !8239)
!8277 = distinct !DISubprogram(name: "fold_builtin_trunc", scope: !3, file: !3, line: 7376, type: !6344, scopeLine: 7377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8278)
!8278 = !{!8279, !8280, !8281, !8282, !8285, !8286}
!8279 = !DILocalVariable(name: "loc", arg: 1, scope: !8277, file: !3, line: 7376, type: !2998)
!8280 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8277, file: !3, line: 7376, type: !2914)
!8281 = !DILocalVariable(name: "arg", arg: 3, scope: !8277, file: !3, line: 7376, type: !2914)
!8282 = !DILocalVariable(name: "r", scope: !8283, file: !3, line: 7384, type: !2936)
!8283 = distinct !DILexicalBlock(scope: !8284, file: !3, line: 7383, column: 5)
!8284 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 7382, column: 7)
!8285 = !DILocalVariable(name: "x", scope: !8283, file: !3, line: 7384, type: !2936)
!8286 = !DILocalVariable(name: "type", scope: !8283, file: !3, line: 7385, type: !2914)
!8287 = !DILocation(line: 0, scope: !8277)
!8288 = !DILocation(line: 7378, column: 8, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 7378, column: 7)
!8290 = !DILocation(line: 7378, column: 7, scope: !8277)
!8291 = !DILocation(line: 7382, column: 7, scope: !8284)
!8292 = !DILocation(line: 7382, column: 23, scope: !8284)
!8293 = !DILocation(line: 7382, column: 35, scope: !8284)
!8294 = !DILocation(line: 7382, column: 39, scope: !8284)
!8295 = !DILocation(line: 7382, column: 7, scope: !8277)
!8296 = !DILocation(line: 7384, column: 7, scope: !8283)
!8297 = !DILocation(line: 7385, column: 19, scope: !8283)
!8298 = !DILocation(line: 0, scope: !8283)
!8299 = !DILocation(line: 7387, column: 11, scope: !8283)
!8300 = !DILocation(line: 7388, column: 23, scope: !8283)
!8301 = !DILocation(line: 7388, column: 7, scope: !8283)
!8302 = !DILocation(line: 7389, column: 14, scope: !8283)
!8303 = !DILocation(line: 7390, column: 5, scope: !8284)
!8304 = !DILocation(line: 7392, column: 10, scope: !8277)
!8305 = !DILocation(line: 7392, column: 3, scope: !8277)
!8306 = !DILocation(line: 7393, column: 1, scope: !8277)
!8307 = distinct !DISubprogram(name: "fold_builtin_round", scope: !3, file: !3, line: 7463, type: !6344, scopeLine: 7464, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8308)
!8308 = !{!8309, !8310, !8311, !8312, !8315, !8318}
!8309 = !DILocalVariable(name: "loc", arg: 1, scope: !8307, file: !3, line: 7463, type: !2998)
!8310 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8307, file: !3, line: 7463, type: !2914)
!8311 = !DILocalVariable(name: "arg", arg: 3, scope: !8307, file: !3, line: 7463, type: !2914)
!8312 = !DILocalVariable(name: "x", scope: !8313, file: !3, line: 7471, type: !2936)
!8313 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 7470, column: 5)
!8314 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 7469, column: 7)
!8315 = !DILocalVariable(name: "type", scope: !8316, file: !3, line: 7476, type: !2914)
!8316 = distinct !DILexicalBlock(scope: !8317, file: !3, line: 7475, column: 2)
!8317 = distinct !DILexicalBlock(scope: !8313, file: !3, line: 7474, column: 11)
!8318 = !DILocalVariable(name: "r", scope: !8316, file: !3, line: 7477, type: !2936)
!8319 = !DILocation(line: 0, scope: !8307)
!8320 = !DILocation(line: 7465, column: 8, scope: !8321)
!8321 = distinct !DILexicalBlock(scope: !8307, file: !3, line: 7465, column: 7)
!8322 = !DILocation(line: 7465, column: 7, scope: !8307)
!8323 = !DILocation(line: 7469, column: 7, scope: !8314)
!8324 = !DILocation(line: 7469, column: 23, scope: !8314)
!8325 = !DILocation(line: 7469, column: 35, scope: !8314)
!8326 = !DILocation(line: 7469, column: 39, scope: !8314)
!8327 = !DILocation(line: 7469, column: 7, scope: !8307)
!8328 = !DILocation(line: 7471, column: 7, scope: !8313)
!8329 = !DILocation(line: 7473, column: 11, scope: !8313)
!8330 = !DILocation(line: 0, scope: !8313)
!8331 = !DILocation(line: 7474, column: 13, scope: !8317)
!8332 = !DILocation(line: 7474, column: 39, scope: !8317)
!8333 = !DILocation(line: 7474, column: 34, scope: !8317)
!8334 = !DILocation(line: 7476, column: 16, scope: !8316)
!8335 = !DILocation(line: 0, scope: !8316)
!8336 = !DILocation(line: 7477, column: 4, scope: !8316)
!8337 = !DILocation(line: 7479, column: 20, scope: !8316)
!8338 = !DILocation(line: 7479, column: 4, scope: !8316)
!8339 = !DILocation(line: 7480, column: 11, scope: !8316)
!8340 = !DILocation(line: 7481, column: 2, scope: !8317)
!8341 = !DILocation(line: 7482, column: 5, scope: !8314)
!8342 = !DILocation(line: 7484, column: 10, scope: !8307)
!8343 = !DILocation(line: 7484, column: 3, scope: !8307)
!8344 = !DILocation(line: 7485, column: 1, scope: !8307)
!8345 = distinct !DISubprogram(name: "fold_trunc_transparent_mathfn", scope: !3, file: !3, line: 6783, type: !6344, scopeLine: 6784, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8346)
!8346 = !{!8347, !8348, !8349, !8350, !8351, !8354, !8355, !8356}
!8347 = !DILocalVariable(name: "loc", arg: 1, scope: !8345, file: !3, line: 6783, type: !2998)
!8348 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8345, file: !3, line: 6783, type: !2914)
!8349 = !DILocalVariable(name: "arg", arg: 3, scope: !8345, file: !3, line: 6783, type: !2914)
!8350 = !DILocalVariable(name: "fcode", scope: !8345, file: !3, line: 6785, type: !527)
!8351 = !DILocalVariable(name: "arg0", scope: !8352, file: !3, line: 6801, type: !2914)
!8352 = distinct !DILexicalBlock(scope: !8353, file: !3, line: 6800, column: 5)
!8353 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 6799, column: 7)
!8354 = !DILocalVariable(name: "ftype", scope: !8352, file: !3, line: 6802, type: !2914)
!8355 = !DILocalVariable(name: "newtype", scope: !8352, file: !3, line: 6803, type: !2914)
!8356 = !DILocalVariable(name: "decl", scope: !8352, file: !3, line: 6804, type: !2914)
!8357 = !DILocation(line: 0, scope: !8345)
!8358 = !DILocation(line: 6785, column: 34, scope: !8345)
!8359 = !DILocation(line: 6787, column: 8, scope: !8360)
!8360 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 6787, column: 7)
!8361 = !DILocation(line: 6787, column: 7, scope: !8345)
!8362 = !DILocation(line: 6791, column: 16, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 6791, column: 7)
!8364 = !DILocation(line: 6791, column: 13, scope: !8363)
!8365 = !DILocation(line: 6791, column: 7, scope: !8345)
!8366 = !DILocation(line: 6796, column: 9, scope: !8367)
!8367 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 6796, column: 7)
!8368 = !DILocation(line: 6796, column: 25, scope: !8367)
!8369 = !DILocation(line: 6796, column: 28, scope: !8367)
!8370 = !DILocation(line: 6796, column: 7, scope: !8345)
!8371 = !DILocation(line: 6799, column: 7, scope: !8353)
!8372 = !DILocation(line: 6799, column: 7, scope: !8345)
!8373 = !DILocation(line: 6801, column: 19, scope: !8352)
!8374 = !DILocation(line: 0, scope: !8352)
!8375 = !DILocation(line: 6802, column: 20, scope: !8352)
!8376 = !DILocation(line: 6803, column: 22, scope: !8352)
!8377 = !DILocation(line: 6806, column: 11, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8352, file: !3, line: 6806, column: 11)
!8379 = !DILocation(line: 6806, column: 38, scope: !8378)
!8380 = !DILocation(line: 6806, column: 36, scope: !8378)
!8381 = !DILocation(line: 6807, column: 4, scope: !8378)
!8382 = !DILocation(line: 6807, column: 15, scope: !8378)
!8383 = !DILocation(line: 6807, column: 13, scope: !8378)
!8384 = !DILocation(line: 6806, column: 11, scope: !8352)
!8385 = !DILocation(line: 6810, column: 9, scope: !8378)
!8386 = !DILocation(line: 6809, column: 6, scope: !8378)
!8387 = !DILocation(line: 6808, column: 9, scope: !8378)
!8388 = !DILocation(line: 6808, column: 2, scope: !8378)
!8389 = !DILocation(line: 6814, column: 3, scope: !8345)
!8390 = !DILocation(line: 6815, column: 1, scope: !8345)
!8391 = distinct !DISubprogram(name: "fold_builtin_int_roundingfn", scope: !3, file: !3, line: 7493, type: !6344, scopeLine: 7494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8392)
!8392 = !{!8393, !8394, !8395, !8396, !8400, !8403, !8404, !8405, !8406, !8407}
!8393 = !DILocalVariable(name: "loc", arg: 1, scope: !8391, file: !3, line: 7493, type: !2998)
!8394 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8391, file: !3, line: 7493, type: !2914)
!8395 = !DILocalVariable(name: "arg", arg: 3, scope: !8391, file: !3, line: 7493, type: !2914)
!8396 = !DILocalVariable(name: "x", scope: !8397, file: !3, line: 7501, type: !8399)
!8397 = distinct !DILexicalBlock(scope: !8398, file: !3, line: 7500, column: 5)
!8398 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 7499, column: 7)
!8399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2936)
!8400 = !DILocalVariable(name: "itype", scope: !8401, file: !3, line: 7505, type: !2914)
!8401 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 7504, column: 2)
!8402 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 7503, column: 11)
!8403 = !DILocalVariable(name: "ftype", scope: !8401, file: !3, line: 7506, type: !2914)
!8404 = !DILocalVariable(name: "lo2", scope: !8401, file: !3, line: 7507, type: !2927)
!8405 = !DILocalVariable(name: "hi", scope: !8401, file: !3, line: 7508, type: !2929)
!8406 = !DILocalVariable(name: "lo", scope: !8401, file: !3, line: 7508, type: !2929)
!8407 = !DILocalVariable(name: "r", scope: !8401, file: !3, line: 7509, type: !2936)
!8408 = !DILocation(line: 0, scope: !8391)
!8409 = !DILocation(line: 7495, column: 8, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 7495, column: 7)
!8411 = !DILocation(line: 7495, column: 7, scope: !8391)
!8412 = !DILocation(line: 7499, column: 7, scope: !8398)
!8413 = !DILocation(line: 7499, column: 23, scope: !8398)
!8414 = !DILocation(line: 7499, column: 35, scope: !8398)
!8415 = !DILocation(line: 7499, column: 39, scope: !8398)
!8416 = !DILocation(line: 7499, column: 7, scope: !8391)
!8417 = !DILocation(line: 7501, column: 7, scope: !8397)
!8418 = !DILocation(line: 7501, column: 33, scope: !8397)
!8419 = !DILocation(line: 0, scope: !8397)
!8420 = !DILocation(line: 7503, column: 11, scope: !8402)
!8421 = !DILocation(line: 7503, column: 11, scope: !8397)
!8422 = !DILocation(line: 7505, column: 17, scope: !8401)
!8423 = !DILocation(line: 0, scope: !8401)
!8424 = !DILocation(line: 7506, column: 17, scope: !8401)
!8425 = !DILocation(line: 7507, column: 4, scope: !8401)
!8426 = !DILocation(line: 7508, column: 4, scope: !8401)
!8427 = !DILocation(line: 7509, column: 4, scope: !8401)
!8428 = !DILocation(line: 7511, column: 12, scope: !8401)
!8429 = !DILocation(line: 7511, column: 4, scope: !8401)
!8430 = !DILocation(line: 7515, column: 24, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 7512, column: 6)
!8432 = !DILocation(line: 7515, column: 8, scope: !8431)
!8433 = !DILocation(line: 7516, column: 8, scope: !8431)
!8434 = !DILocation(line: 7520, column: 23, scope: !8431)
!8435 = !DILocation(line: 7520, column: 8, scope: !8431)
!8436 = !DILocation(line: 7521, column: 8, scope: !8431)
!8437 = !DILocation(line: 7525, column: 24, scope: !8431)
!8438 = !DILocation(line: 7525, column: 8, scope: !8431)
!8439 = !DILocation(line: 7526, column: 8, scope: !8431)
!8440 = !DILocation(line: 7529, column: 8, scope: !8431)
!8441 = !DILocation(line: 7530, column: 6, scope: !8431)
!8442 = !DILocation(line: 7532, column: 4, scope: !8401)
!8443 = !DILocation(line: 7533, column: 26, scope: !8444)
!8444 = distinct !DILexicalBlock(scope: !8401, file: !3, line: 7533, column: 8)
!8445 = !DILocation(line: 7533, column: 30, scope: !8444)
!8446 = !DILocation(line: 7533, column: 9, scope: !8444)
!8447 = !DILocation(line: 7533, column: 8, scope: !8401)
!8448 = !DILocation(line: 7534, column: 40, scope: !8444)
!8449 = !DILocation(line: 7534, column: 45, scope: !8444)
!8450 = !DILocation(line: 7534, column: 13, scope: !8444)
!8451 = !DILocation(line: 7534, column: 6, scope: !8444)
!8452 = !DILocation(line: 7535, column: 2, scope: !8402)
!8453 = !DILocation(line: 7536, column: 5, scope: !8398)
!8454 = !DILocation(line: 0, scope: !8398)
!8455 = !DILocation(line: 7538, column: 11, scope: !8391)
!8456 = !DILocation(line: 7538, column: 3, scope: !8391)
!8457 = !DILocation(line: 7543, column: 11, scope: !8458)
!8458 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 7543, column: 11)
!8459 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 7539, column: 5)
!8460 = !DILocation(line: 7543, column: 11, scope: !8459)
!8461 = !DILocation(line: 7544, column: 9, scope: !8458)
!8462 = !DILocation(line: 7544, column: 2, scope: !8458)
!8463 = !DILocation(line: 7550, column: 10, scope: !8391)
!8464 = !DILocation(line: 7550, column: 3, scope: !8391)
!8465 = !DILocation(line: 7551, column: 1, scope: !8391)
!8466 = distinct !DISubprogram(name: "fold_fixed_mathfn", scope: !3, file: !3, line: 6822, type: !6344, scopeLine: 6823, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8467)
!8467 = !{!8468, !8469, !8470, !8471, !8472, !8475, !8476, !8477, !8478, !8481}
!8468 = !DILocalVariable(name: "loc", arg: 1, scope: !8466, file: !3, line: 6822, type: !2998)
!8469 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8466, file: !3, line: 6822, type: !2914)
!8470 = !DILocalVariable(name: "arg", arg: 3, scope: !8466, file: !3, line: 6822, type: !2914)
!8471 = !DILocalVariable(name: "fcode", scope: !8466, file: !3, line: 6824, type: !527)
!8472 = !DILocalVariable(name: "ftype", scope: !8473, file: !3, line: 6837, type: !2914)
!8473 = distinct !DILexicalBlock(scope: !8474, file: !3, line: 6836, column: 5)
!8474 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 6835, column: 7)
!8475 = !DILocalVariable(name: "arg0", scope: !8473, file: !3, line: 6838, type: !2914)
!8476 = !DILocalVariable(name: "newtype", scope: !8473, file: !3, line: 6839, type: !2914)
!8477 = !DILocalVariable(name: "decl", scope: !8473, file: !3, line: 6840, type: !2914)
!8478 = !DILocalVariable(name: "newfn", scope: !8479, file: !3, line: 6853, type: !2914)
!8479 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 6852, column: 5)
!8480 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 6850, column: 7)
!8481 = !DILocalVariable(name: "newcall", scope: !8482, file: !3, line: 6878, type: !2914)
!8482 = distinct !DILexicalBlock(scope: !8483, file: !3, line: 6877, column: 2)
!8483 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 6876, column: 11)
!8484 = !DILocation(line: 0, scope: !8466)
!8485 = !DILocation(line: 6824, column: 34, scope: !8466)
!8486 = !DILocation(line: 6826, column: 8, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 6826, column: 7)
!8488 = !DILocation(line: 6826, column: 7, scope: !8466)
!8489 = !DILocation(line: 6831, column: 9, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8466, file: !3, line: 6831, column: 7)
!8491 = !DILocation(line: 6831, column: 25, scope: !8490)
!8492 = !DILocation(line: 6831, column: 28, scope: !8490)
!8493 = !DILocation(line: 6831, column: 7, scope: !8466)
!8494 = !DILocation(line: 6832, column: 12, scope: !8490)
!8495 = !DILocation(line: 6832, column: 5, scope: !8490)
!8496 = !DILocation(line: 6835, column: 7, scope: !8474)
!8497 = !DILocation(line: 6835, column: 7, scope: !8466)
!8498 = !DILocation(line: 6837, column: 20, scope: !8473)
!8499 = !DILocation(line: 6838, column: 19, scope: !8473)
!8500 = !DILocation(line: 0, scope: !8473)
!8501 = !DILocation(line: 6839, column: 22, scope: !8473)
!8502 = !DILocation(line: 6842, column: 11, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8473, file: !3, line: 6842, column: 11)
!8504 = !DILocation(line: 6842, column: 38, scope: !8503)
!8505 = !DILocation(line: 6842, column: 36, scope: !8503)
!8506 = !DILocation(line: 6843, column: 4, scope: !8503)
!8507 = !DILocation(line: 6843, column: 15, scope: !8503)
!8508 = !DILocation(line: 6843, column: 13, scope: !8503)
!8509 = !DILocation(line: 6842, column: 11, scope: !8473)
!8510 = !DILocation(line: 6845, column: 5, scope: !8503)
!8511 = !DILocation(line: 6844, column: 9, scope: !8503)
!8512 = !DILocation(line: 6844, column: 2, scope: !8503)
!8513 = !DILocation(line: 6850, column: 7, scope: !8480)
!8514 = !DILocation(line: 6851, column: 10, scope: !8480)
!8515 = !DILocation(line: 6851, column: 7, scope: !8480)
!8516 = !DILocation(line: 6850, column: 7, scope: !8466)
!8517 = !DILocation(line: 0, scope: !8479)
!8518 = !DILocation(line: 6854, column: 7, scope: !8479)
!8519 = !DILocation(line: 6857, column: 29, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8479, file: !3, line: 6855, column: 2)
!8521 = !DILocation(line: 6857, column: 12, scope: !8520)
!8522 = !DILocation(line: 6858, column: 4, scope: !8520)
!8523 = !DILocation(line: 6861, column: 29, scope: !8520)
!8524 = !DILocation(line: 6861, column: 12, scope: !8520)
!8525 = !DILocation(line: 6862, column: 4, scope: !8520)
!8526 = !DILocation(line: 6865, column: 29, scope: !8520)
!8527 = !DILocation(line: 6865, column: 12, scope: !8520)
!8528 = !DILocation(line: 6866, column: 4, scope: !8520)
!8529 = !DILocation(line: 6869, column: 29, scope: !8520)
!8530 = !DILocation(line: 6869, column: 12, scope: !8520)
!8531 = !DILocation(line: 6870, column: 4, scope: !8520)
!8532 = !DILocation(line: 6876, column: 11, scope: !8483)
!8533 = !DILocation(line: 6876, column: 11, scope: !8479)
!8534 = !DILocation(line: 6878, column: 19, scope: !8482)
!8535 = !DILocation(line: 0, scope: !8482)
!8536 = !DILocation(line: 6880, column: 8, scope: !8482)
!8537 = !DILocation(line: 6879, column: 11, scope: !8482)
!8538 = !DILocation(line: 6884, column: 3, scope: !8466)
!8539 = !DILocation(line: 6885, column: 1, scope: !8466)
!8540 = distinct !DISubprogram(name: "fold_builtin_bswap", scope: !3, file: !3, line: 7648, type: !8141, scopeLine: 7649, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8541)
!8541 = !{!8542, !8543, !8544, !8547, !8548, !8549, !8550, !8551, !8552, !8555, !8559}
!8542 = !DILocalVariable(name: "fndecl", arg: 1, scope: !8540, file: !3, line: 7648, type: !2914)
!8543 = !DILocalVariable(name: "arg", arg: 2, scope: !8540, file: !3, line: 7648, type: !2914)
!8544 = !DILocalVariable(name: "hi", scope: !8545, file: !3, line: 7656, type: !2929)
!8545 = distinct !DILexicalBlock(scope: !8546, file: !3, line: 7655, column: 5)
!8546 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 7654, column: 7)
!8547 = !DILocalVariable(name: "width", scope: !8545, file: !3, line: 7656, type: !2929)
!8548 = !DILocalVariable(name: "r_hi", scope: !8545, file: !3, line: 7656, type: !2929)
!8549 = !DILocalVariable(name: "lo", scope: !8545, file: !3, line: 7657, type: !2927)
!8550 = !DILocalVariable(name: "r_lo", scope: !8545, file: !3, line: 7657, type: !2927)
!8551 = !DILocalVariable(name: "type", scope: !8545, file: !3, line: 7658, type: !2914)
!8552 = !DILocalVariable(name: "s", scope: !8553, file: !3, line: 7670, type: !1249)
!8553 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 7669, column: 6)
!8554 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 7666, column: 2)
!8555 = !DILocalVariable(name: "d", scope: !8556, file: !3, line: 7674, type: !1249)
!8556 = distinct !DILexicalBlock(scope: !8557, file: !3, line: 7673, column: 3)
!8557 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 7672, column: 8)
!8558 = distinct !DILexicalBlock(scope: !8553, file: !3, line: 7672, column: 8)
!8559 = !DILocalVariable(name: "byte", scope: !8556, file: !3, line: 7675, type: !2927)
!8560 = !DILocation(line: 0, scope: !8540)
!8561 = !DILocation(line: 7650, column: 9, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 7650, column: 7)
!8563 = !DILocation(line: 7650, column: 7, scope: !8540)
!8564 = !DILocation(line: 7654, column: 7, scope: !8546)
!8565 = !DILocation(line: 7654, column: 23, scope: !8546)
!8566 = !DILocation(line: 7654, column: 38, scope: !8546)
!8567 = !DILocation(line: 7654, column: 42, scope: !8546)
!8568 = !DILocation(line: 7654, column: 7, scope: !8540)
!8569 = !DILocation(line: 0, scope: !8545)
!8570 = !DILocation(line: 7660, column: 14, scope: !8545)
!8571 = !DILocation(line: 7661, column: 15, scope: !8545)
!8572 = !DILocation(line: 7662, column: 12, scope: !8545)
!8573 = !DILocation(line: 7663, column: 12, scope: !8545)
!8574 = !DILocation(line: 7665, column: 15, scope: !8545)
!8575 = !DILocation(line: 7665, column: 7, scope: !8545)
!8576 = !DILocation(line: 7672, column: 8, scope: !8558)
!8577 = !DILocation(line: 7656, column: 32, scope: !8545)
!8578 = !DILocation(line: 0, scope: !8553)
!8579 = !DILocation(line: 7672, column: 22, scope: !8557)
!8580 = !DILocation(line: 7674, column: 19, scope: !8556)
!8581 = !DILocation(line: 7674, column: 23, scope: !8556)
!8582 = !DILocation(line: 7677, column: 11, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 7677, column: 9)
!8584 = !DILocation(line: 7677, column: 9, scope: !8556)
!8585 = !DILocation(line: 7678, column: 18, scope: !8583)
!8586 = !DILocation(line: 0, scope: !8556)
!8587 = !DILocation(line: 7678, column: 7, scope: !8583)
!8588 = !DILocation(line: 7680, column: 18, scope: !8583)
!8589 = !DILocation(line: 0, scope: !8583)
!8590 = !DILocation(line: 7682, column: 11, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8556, file: !3, line: 7682, column: 9)
!8592 = !DILocation(line: 7682, column: 9, scope: !8556)
!8593 = !DILocation(line: 7683, column: 20, scope: !8591)
!8594 = !DILocation(line: 7683, column: 12, scope: !8591)
!8595 = !DILocation(line: 7683, column: 7, scope: !8591)
!8596 = !DILocation(line: 7685, column: 20, scope: !8591)
!8597 = !DILocation(line: 7685, column: 12, scope: !8591)
!8598 = !DILocation(line: 7672, column: 33, scope: !8557)
!8599 = !DILocation(line: 7672, column: 8, scope: !8557)
!8600 = distinct !{!8600, !8576, !8601}
!8601 = !DILocation(line: 7686, column: 3, scope: !8558)
!8602 = !DILocation(line: 7692, column: 4, scope: !8554)
!8603 = !DILocation(line: 7693, column: 2, scope: !8554)
!8604 = !DILocation(line: 7695, column: 17, scope: !8605)
!8605 = distinct !DILexicalBlock(scope: !8545, file: !3, line: 7695, column: 11)
!8606 = !DILocation(line: 7657, column: 34, scope: !8545)
!8607 = !DILocation(line: 0, scope: !8605)
!8608 = !DILocation(line: 7695, column: 11, scope: !8545)
!8609 = !DILocation(line: 7696, column: 9, scope: !8605)
!8610 = !DILocation(line: 7696, column: 2, scope: !8605)
!8611 = !DILocation(line: 7698, column: 9, scope: !8605)
!8612 = !DILocation(line: 7698, column: 2, scope: !8605)
!8613 = !DILocation(line: 7702, column: 1, scope: !8540)
!8614 = distinct !DISubprogram(name: "fold_builtin_bitop", scope: !3, file: !3, line: 7559, type: !8141, scopeLine: 7560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8615)
!8615 = !{!8616, !8617, !8618, !8621, !8622, !8623, !8624}
!8616 = !DILocalVariable(name: "fndecl", arg: 1, scope: !8614, file: !3, line: 7559, type: !2914)
!8617 = !DILocalVariable(name: "arg", arg: 2, scope: !8614, file: !3, line: 7559, type: !2914)
!8618 = !DILocalVariable(name: "hi", scope: !8619, file: !3, line: 7567, type: !2929)
!8619 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 7566, column: 5)
!8620 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 7565, column: 7)
!8621 = !DILocalVariable(name: "width", scope: !8619, file: !3, line: 7567, type: !2929)
!8622 = !DILocalVariable(name: "result", scope: !8619, file: !3, line: 7567, type: !2929)
!8623 = !DILocalVariable(name: "lo", scope: !8619, file: !3, line: 7568, type: !2927)
!8624 = !DILocalVariable(name: "type", scope: !8619, file: !3, line: 7569, type: !2914)
!8625 = !DILocation(line: 0, scope: !8614)
!8626 = !DILocation(line: 7561, column: 8, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 7561, column: 7)
!8628 = !DILocation(line: 7561, column: 7, scope: !8614)
!8629 = !DILocation(line: 7565, column: 7, scope: !8620)
!8630 = !DILocation(line: 7565, column: 23, scope: !8620)
!8631 = !DILocation(line: 7565, column: 38, scope: !8620)
!8632 = !DILocation(line: 7565, column: 42, scope: !8620)
!8633 = !DILocation(line: 7565, column: 7, scope: !8614)
!8634 = !DILocation(line: 7571, column: 14, scope: !8619)
!8635 = !DILocation(line: 7572, column: 15, scope: !8619)
!8636 = !DILocation(line: 0, scope: !8619)
!8637 = !DILocation(line: 7573, column: 12, scope: !8619)
!8638 = !DILocation(line: 7576, column: 17, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 7576, column: 11)
!8640 = !DILocation(line: 7576, column: 11, scope: !8619)
!8641 = !DILocation(line: 7578, column: 9, scope: !8642)
!8642 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 7577, column: 2)
!8643 = !DILocation(line: 7579, column: 14, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8642, file: !3, line: 7579, column: 8)
!8645 = !DILocation(line: 7579, column: 8, scope: !8642)
!8646 = !DILocation(line: 7580, column: 6, scope: !8644)
!8647 = !DILocation(line: 7585, column: 14, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 7585, column: 8)
!8649 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 7583, column: 2)
!8650 = !DILocation(line: 7585, column: 8, scope: !8649)
!8651 = !DILocation(line: 7586, column: 44, scope: !8648)
!8652 = !DILocation(line: 7586, column: 12, scope: !8648)
!8653 = !DILocation(line: 7586, column: 9, scope: !8648)
!8654 = !DILocation(line: 7586, column: 6, scope: !8648)
!8655 = !DILocation(line: 0, scope: !8639)
!8656 = !DILocation(line: 7589, column: 15, scope: !8619)
!8657 = !DILocation(line: 7589, column: 7, scope: !8619)
!8658 = !DILocation(line: 7592, column: 11, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 7592, column: 8)
!8660 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 7590, column: 2)
!8661 = !DILocation(line: 7592, column: 8, scope: !8660)
!8662 = !DILocation(line: 7593, column: 32, scope: !8659)
!8663 = !DILocation(line: 7593, column: 30, scope: !8659)
!8664 = !DILocation(line: 7593, column: 15, scope: !8659)
!8665 = !DILocation(line: 7593, column: 37, scope: !8659)
!8666 = !DILocation(line: 7593, column: 6, scope: !8659)
!8667 = !DILocation(line: 7594, column: 16, scope: !8668)
!8668 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 7594, column: 13)
!8669 = !DILocation(line: 7594, column: 13, scope: !8659)
!8670 = !DILocation(line: 7595, column: 57, scope: !8668)
!8671 = !DILocation(line: 7595, column: 55, scope: !8668)
!8672 = !DILocation(line: 7595, column: 40, scope: !8668)
!8673 = !DILocation(line: 7595, column: 62, scope: !8668)
!8674 = !DILocation(line: 7595, column: 15, scope: !8668)
!8675 = !DILocation(line: 7595, column: 6, scope: !8668)
!8676 = !DILocation(line: 7601, column: 11, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 7601, column: 8)
!8678 = !DILocation(line: 7601, column: 8, scope: !8660)
!8679 = !DILocation(line: 7602, column: 23, scope: !8677)
!8680 = !DILocation(line: 7602, column: 39, scope: !8677)
!8681 = !DILocation(line: 7602, column: 43, scope: !8677)
!8682 = !DILocation(line: 7602, column: 6, scope: !8677)
!8683 = !DILocation(line: 7603, column: 16, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 7603, column: 13)
!8685 = !DILocation(line: 7603, column: 13, scope: !8677)
!8686 = !DILocation(line: 7604, column: 23, scope: !8684)
!8687 = !DILocation(line: 7604, column: 39, scope: !8684)
!8688 = !DILocation(line: 7604, column: 6, scope: !8684)
!8689 = !DILocation(line: 7610, column: 11, scope: !8690)
!8690 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 7610, column: 8)
!8691 = !DILocation(line: 7610, column: 8, scope: !8660)
!8692 = !DILocation(line: 7611, column: 32, scope: !8690)
!8693 = !DILocation(line: 7611, column: 30, scope: !8690)
!8694 = !DILocation(line: 7611, column: 15, scope: !8690)
!8695 = !DILocation(line: 7611, column: 6, scope: !8690)
!8696 = !DILocation(line: 7612, column: 16, scope: !8697)
!8697 = distinct !DILexicalBlock(scope: !8690, file: !3, line: 7612, column: 13)
!8698 = !DILocation(line: 7612, column: 13, scope: !8690)
!8699 = !DILocation(line: 7613, column: 57, scope: !8697)
!8700 = !DILocation(line: 7613, column: 55, scope: !8697)
!8701 = !DILocation(line: 7613, column: 40, scope: !8697)
!8702 = !DILocation(line: 7613, column: 38, scope: !8697)
!8703 = !DILocation(line: 7613, column: 15, scope: !8697)
!8704 = !DILocation(line: 7613, column: 6, scope: !8697)
!8705 = !DILocation(line: 7620, column: 4, scope: !8660)
!8706 = !DILocation(line: 0, scope: !8660)
!8707 = !DILocation(line: 7622, column: 4, scope: !8660)
!8708 = !DILocation(line: 7621, column: 12, scope: !8660)
!8709 = !DILocation(line: 7621, column: 25, scope: !8660)
!8710 = !DILocation(line: 7621, column: 19, scope: !8660)
!8711 = distinct !{!8711, !8705, !8712}
!8712 = !DILocation(line: 7621, column: 27, scope: !8660)
!8713 = !DILocation(line: 7623, column: 12, scope: !8660)
!8714 = !DILocation(line: 7623, column: 25, scope: !8660)
!8715 = !DILocation(line: 7623, column: 19, scope: !8660)
!8716 = distinct !{!8716, !8707, !8717}
!8717 = !DILocation(line: 7623, column: 27, scope: !8660)
!8718 = !DILocation(line: 7628, column: 4, scope: !8660)
!8719 = !DILocation(line: 7630, column: 4, scope: !8660)
!8720 = !DILocation(line: 7629, column: 12, scope: !8660)
!8721 = !DILocation(line: 7629, column: 25, scope: !8660)
!8722 = !DILocation(line: 7629, column: 19, scope: !8660)
!8723 = distinct !{!8723, !8718, !8724}
!8724 = !DILocation(line: 7629, column: 27, scope: !8660)
!8725 = !DILocation(line: 7631, column: 12, scope: !8660)
!8726 = !DILocation(line: 7631, column: 25, scope: !8660)
!8727 = !DILocation(line: 7631, column: 19, scope: !8660)
!8728 = distinct !{!8728, !8719, !8729}
!8729 = !DILocation(line: 7631, column: 27, scope: !8660)
!8730 = !DILocation(line: 7632, column: 11, scope: !8660)
!8731 = !DILocation(line: 7633, column: 4, scope: !8660)
!8732 = !DILocation(line: 7636, column: 4, scope: !8660)
!8733 = !DILocation(line: 7637, column: 2, scope: !8660)
!8734 = !DILocation(line: 7639, column: 29, scope: !8619)
!8735 = !DILocation(line: 7639, column: 14, scope: !8619)
!8736 = !DILocation(line: 7643, column: 1, scope: !8614)
!8737 = distinct !DISubprogram(name: "fold_builtin_signbit", scope: !3, file: !3, line: 8892, type: !6344, scopeLine: 8893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8738)
!8738 = !{!8739, !8740, !8741, !8742, !8743}
!8739 = !DILocalVariable(name: "loc", arg: 1, scope: !8737, file: !3, line: 8892, type: !2998)
!8740 = !DILocalVariable(name: "arg", arg: 2, scope: !8737, file: !3, line: 8892, type: !2914)
!8741 = !DILocalVariable(name: "type", arg: 3, scope: !8737, file: !3, line: 8892, type: !2914)
!8742 = !DILocalVariable(name: "temp", scope: !8737, file: !3, line: 8894, type: !2914)
!8743 = !DILocalVariable(name: "c", scope: !8744, file: !3, line: 8903, type: !2936)
!8744 = distinct !DILexicalBlock(scope: !8745, file: !3, line: 8902, column: 5)
!8745 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 8900, column: 7)
!8746 = !DILocation(line: 0, scope: !8737)
!8747 = !DILocation(line: 8896, column: 8, scope: !8748)
!8748 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 8896, column: 7)
!8749 = !DILocation(line: 8896, column: 7, scope: !8737)
!8750 = !DILocation(line: 8900, column: 7, scope: !8745)
!8751 = !DILocation(line: 8900, column: 23, scope: !8745)
!8752 = !DILocation(line: 8901, column: 7, scope: !8745)
!8753 = !DILocation(line: 8901, column: 11, scope: !8745)
!8754 = !DILocation(line: 8900, column: 7, scope: !8737)
!8755 = !DILocation(line: 8903, column: 7, scope: !8744)
!8756 = !DILocation(line: 8905, column: 11, scope: !8744)
!8757 = !DILocation(line: 0, scope: !8744)
!8758 = !DILocation(line: 8906, column: 14, scope: !8744)
!8759 = !DILocation(line: 8907, column: 14, scope: !8744)
!8760 = !DILocation(line: 8908, column: 5, scope: !8745)
!8761 = !DILocation(line: 8911, column: 7, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 8911, column: 7)
!8763 = !DILocation(line: 8911, column: 7, scope: !8737)
!8764 = !DILocation(line: 8912, column: 45, scope: !8762)
!8765 = !DILocation(line: 8912, column: 12, scope: !8762)
!8766 = !DILocation(line: 8912, column: 5, scope: !8762)
!8767 = !DILocation(line: 8915, column: 8, scope: !8768)
!8768 = distinct !DILexicalBlock(scope: !8737, file: !3, line: 8915, column: 7)
!8769 = !DILocation(line: 8916, column: 12, scope: !8768)
!8770 = !DILocation(line: 8916, column: 5, scope: !8768)
!8771 = !DILocation(line: 8920, column: 1, scope: !8737)
!8772 = distinct !DISubprogram(name: "fold_builtin_significand", scope: !3, file: !3, line: 9171, type: !6344, scopeLine: 9172, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8773)
!8773 = !{!8774, !8775, !8776, !8777, !8782}
!8774 = !DILocalVariable(name: "loc", arg: 1, scope: !8772, file: !3, line: 9171, type: !2998)
!8775 = !DILocalVariable(name: "arg", arg: 2, scope: !8772, file: !3, line: 9171, type: !2914)
!8776 = !DILocalVariable(name: "rettype", arg: 3, scope: !8772, file: !3, line: 9171, type: !2914)
!8777 = !DILocalVariable(name: "value", scope: !8778, file: !3, line: 9180, type: !8780)
!8778 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 9179, column: 5)
!8779 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 9178, column: 7)
!8780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8781)
!8781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8399, size: 64)
!8782 = !DILocalVariable(name: "result", scope: !8783, file: !3, line: 9193, type: !2936)
!8783 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 9192, column: 4)
!8784 = distinct !DILexicalBlock(scope: !8785, file: !3, line: 9191, column: 6)
!8785 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 9183, column: 7)
!8786 = !DILocation(line: 0, scope: !8772)
!8787 = !DILocation(line: 9173, column: 9, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !8772, file: !3, line: 9173, column: 7)
!8789 = !DILocation(line: 9173, column: 7, scope: !8772)
!8790 = !DILocation(line: 9176, column: 3, scope: !8772)
!8791 = !DILocation(line: 9178, column: 7, scope: !8779)
!8792 = !DILocation(line: 9178, column: 23, scope: !8779)
!8793 = !DILocation(line: 9178, column: 35, scope: !8779)
!8794 = !DILocation(line: 9178, column: 40, scope: !8779)
!8795 = !DILocation(line: 9178, column: 7, scope: !8772)
!8796 = !DILocation(line: 9180, column: 44, scope: !8778)
!8797 = !DILocation(line: 0, scope: !8778)
!8798 = !DILocation(line: 9182, column: 22, scope: !8778)
!8799 = !DILocation(line: 9182, column: 7, scope: !8778)
!8800 = !DILocation(line: 9188, column: 9, scope: !8785)
!8801 = !DILocation(line: 9188, column: 2, scope: !8785)
!8802 = !DILocation(line: 9191, column: 6, scope: !8784)
!8803 = !DILocation(line: 9191, column: 54, scope: !8784)
!8804 = !DILocation(line: 9191, column: 56, scope: !8784)
!8805 = !DILocation(line: 9191, column: 6, scope: !8785)
!8806 = !DILocation(line: 9193, column: 6, scope: !8783)
!8807 = !DILocation(line: 9193, column: 31, scope: !8783)
!8808 = !DILocation(line: 9197, column: 6, scope: !8783)
!8809 = !DILocation(line: 0, scope: !8783)
!8810 = !DILocation(line: 9198, column: 13, scope: !8783)
!8811 = !DILocation(line: 9199, column: 4, scope: !8784)
!8812 = !DILocation(line: 9204, column: 3, scope: !8772)
!8813 = !DILocation(line: 9205, column: 1, scope: !8772)
!8814 = distinct !DISubprogram(name: "fold_builtin_logb", scope: !3, file: !3, line: 9129, type: !6344, scopeLine: 9130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8815)
!8815 = !{!8816, !8817, !8818, !8819}
!8816 = !DILocalVariable(name: "loc", arg: 1, scope: !8814, file: !3, line: 9129, type: !2998)
!8817 = !DILocalVariable(name: "arg", arg: 2, scope: !8814, file: !3, line: 9129, type: !2914)
!8818 = !DILocalVariable(name: "rettype", arg: 3, scope: !8814, file: !3, line: 9129, type: !2914)
!8819 = !DILocalVariable(name: "value", scope: !8820, file: !3, line: 9138, type: !8780)
!8820 = distinct !DILexicalBlock(scope: !8821, file: !3, line: 9137, column: 5)
!8821 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 9136, column: 7)
!8822 = !DILocation(line: 0, scope: !8814)
!8823 = !DILocation(line: 9131, column: 9, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8814, file: !3, line: 9131, column: 7)
!8825 = !DILocation(line: 9131, column: 7, scope: !8814)
!8826 = !DILocation(line: 9134, column: 3, scope: !8814)
!8827 = !DILocation(line: 9136, column: 7, scope: !8821)
!8828 = !DILocation(line: 9136, column: 23, scope: !8821)
!8829 = !DILocation(line: 9136, column: 35, scope: !8821)
!8830 = !DILocation(line: 9136, column: 40, scope: !8821)
!8831 = !DILocation(line: 9136, column: 7, scope: !8814)
!8832 = !DILocation(line: 9138, column: 44, scope: !8820)
!8833 = !DILocation(line: 0, scope: !8820)
!8834 = !DILocation(line: 9140, column: 22, scope: !8820)
!8835 = !DILocation(line: 9140, column: 7, scope: !8820)
!8836 = !DILocation(line: 9145, column: 6, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 9145, column: 6)
!8838 = distinct !DILexicalBlock(scope: !8820, file: !3, line: 9141, column: 7)
!8839 = !DILocation(line: 9145, column: 26, scope: !8837)
!8840 = !DILocation(line: 9145, column: 6, scope: !8838)
!8841 = !DILocation(line: 9146, column: 11, scope: !8837)
!8842 = !DILocation(line: 9146, column: 4, scope: !8837)
!8843 = !DILocation(line: 9157, column: 6, scope: !8844)
!8844 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 9157, column: 6)
!8845 = !DILocation(line: 9157, column: 54, scope: !8844)
!8846 = !DILocation(line: 9157, column: 56, scope: !8844)
!8847 = !DILocation(line: 9157, column: 6, scope: !8838)
!8848 = !DILocation(line: 9160, column: 9, scope: !8844)
!8849 = !DILocation(line: 9160, column: 25, scope: !8844)
!8850 = !DILocation(line: 9159, column: 8, scope: !8844)
!8851 = !DILocation(line: 9158, column: 11, scope: !8844)
!8852 = !DILocation(line: 9158, column: 4, scope: !8844)
!8853 = !DILocation(line: 9165, column: 3, scope: !8814)
!8854 = !DILocation(line: 9166, column: 1, scope: !8814)
!8855 = distinct !DISubprogram(name: "fold_builtin_isascii", scope: !3, file: !3, line: 8973, type: !8856, scopeLine: 8974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8858)
!8856 = !DISubroutineType(types: !8857)
!8857 = !{!2914, !2998, !2914}
!8858 = !{!8859, !8860}
!8859 = !DILocalVariable(name: "loc", arg: 1, scope: !8855, file: !3, line: 8973, type: !2998)
!8860 = !DILocalVariable(name: "arg", arg: 2, scope: !8855, file: !3, line: 8973, type: !2914)
!8861 = !DILocation(line: 0, scope: !8855)
!8862 = !DILocation(line: 8975, column: 8, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8855, file: !3, line: 8975, column: 7)
!8864 = !DILocation(line: 8975, column: 7, scope: !8855)
!8865 = !DILocation(line: 8980, column: 13, scope: !8866)
!8866 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 8978, column: 5)
!8867 = !DILocation(line: 8983, column: 14, scope: !8866)
!8868 = !DILocation(line: 8983, column: 7, scope: !8866)
!8869 = !DILocation(line: 0, scope: !8863)
!8870 = !DILocation(line: 8986, column: 1, scope: !8855)
!8871 = distinct !DISubprogram(name: "fold_builtin_toascii", scope: !3, file: !3, line: 8991, type: !8856, scopeLine: 8992, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8872)
!8872 = !{!8873, !8874}
!8873 = !DILocalVariable(name: "loc", arg: 1, scope: !8871, file: !3, line: 8991, type: !2998)
!8874 = !DILocalVariable(name: "arg", arg: 2, scope: !8871, file: !3, line: 8991, type: !2914)
!8875 = !DILocation(line: 0, scope: !8871)
!8876 = !DILocation(line: 8993, column: 8, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 8993, column: 7)
!8878 = !DILocation(line: 8993, column: 7, scope: !8871)
!8879 = !DILocation(line: 8997, column: 10, scope: !8871)
!8880 = !DILocation(line: 8997, column: 3, scope: !8871)
!8881 = !DILocation(line: 8999, column: 1, scope: !8871)
!8882 = distinct !DISubprogram(name: "fold_builtin_isdigit", scope: !3, file: !3, line: 9004, type: !8856, scopeLine: 9005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8883)
!8883 = !{!8884, !8885, !8886}
!8884 = !DILocalVariable(name: "loc", arg: 1, scope: !8882, file: !3, line: 9004, type: !2998)
!8885 = !DILocalVariable(name: "arg", arg: 2, scope: !8882, file: !3, line: 9004, type: !2914)
!8886 = !DILocalVariable(name: "target_digit0", scope: !8887, file: !3, line: 9013, type: !2927)
!8887 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 9009, column: 5)
!8888 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 9006, column: 7)
!8889 = !DILocation(line: 0, scope: !8882)
!8890 = !DILocation(line: 9006, column: 8, scope: !8888)
!8891 = !DILocation(line: 9006, column: 7, scope: !8882)
!8892 = !DILocation(line: 9014, column: 15, scope: !8887)
!8893 = !DILocation(line: 9014, column: 4, scope: !8887)
!8894 = !DILocation(line: 0, scope: !8887)
!8895 = !DILocation(line: 9016, column: 25, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8887, file: !3, line: 9016, column: 11)
!8897 = !DILocation(line: 9016, column: 11, scope: !8887)
!8898 = !DILocation(line: 9019, column: 36, scope: !8887)
!8899 = !DILocation(line: 9019, column: 13, scope: !8887)
!8900 = !DILocation(line: 9020, column: 13, scope: !8887)
!8901 = !DILocation(line: 9022, column: 14, scope: !8887)
!8902 = !DILocation(line: 9022, column: 7, scope: !8887)
!8903 = !DILocation(line: 0, scope: !8888)
!8904 = !DILocation(line: 9025, column: 1, scope: !8882)
!8905 = distinct !DISubprogram(name: "fold_builtin_classify", scope: !3, file: !3, line: 9474, type: !8906, scopeLine: 9475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8908)
!8906 = !DISubroutineType(types: !8907)
!8907 = !{!2914, !2998, !2914, !2914, !1249}
!8908 = !{!8909, !8910, !8911, !8912, !8913, !8914, !8915, !8918, !8919, !8920, !8923}
!8909 = !DILocalVariable(name: "loc", arg: 1, scope: !8905, file: !3, line: 9474, type: !2998)
!8910 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8905, file: !3, line: 9474, type: !2914)
!8911 = !DILocalVariable(name: "arg", arg: 3, scope: !8905, file: !3, line: 9474, type: !2914)
!8912 = !DILocalVariable(name: "builtin_index", arg: 4, scope: !8905, file: !3, line: 9474, type: !1249)
!8913 = !DILocalVariable(name: "type", scope: !8905, file: !3, line: 9476, type: !2914)
!8914 = !DILocalVariable(name: "r", scope: !8905, file: !3, line: 9477, type: !2936)
!8915 = !DILocalVariable(name: "signbit_fn", scope: !8916, file: !3, line: 9506, type: !2914)
!8916 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 9501, column: 7)
!8917 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 9483, column: 5)
!8918 = !DILocalVariable(name: "isinf_fn", scope: !8916, file: !3, line: 9507, type: !2914)
!8919 = !DILocalVariable(name: "tmp", scope: !8916, file: !3, line: 9508, type: !2914)
!8920 = !DILocalVariable(name: "signbit_call", scope: !8921, file: !3, line: 9514, type: !2914)
!8921 = distinct !DILexicalBlock(scope: !8922, file: !3, line: 9513, column: 4)
!8922 = distinct !DILexicalBlock(scope: !8916, file: !3, line: 9512, column: 6)
!8923 = !DILocalVariable(name: "isinf_call", scope: !8921, file: !3, line: 9515, type: !2914)
!8924 = !DILocation(line: 0, scope: !8905)
!8925 = !DILocation(line: 9476, column: 15, scope: !8905)
!8926 = !DILocation(line: 9477, column: 3, scope: !8905)
!8927 = !DILocation(line: 9479, column: 8, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 9479, column: 7)
!8929 = !DILocation(line: 9479, column: 7, scope: !8905)
!8930 = !DILocation(line: 9482, column: 3, scope: !8905)
!8931 = !DILocation(line: 9485, column: 12, scope: !8932)
!8932 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 9485, column: 11)
!8933 = !DILocation(line: 9486, column: 42, scope: !8932)
!8934 = !DILocation(line: 9486, column: 9, scope: !8932)
!8935 = !DILocation(line: 9486, column: 2, scope: !8932)
!8936 = !DILocation(line: 9488, column: 11, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 9488, column: 11)
!8938 = !DILocation(line: 9488, column: 27, scope: !8937)
!8939 = !DILocation(line: 9488, column: 11, scope: !8917)
!8940 = !DILocation(line: 9490, column: 8, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8937, file: !3, line: 9489, column: 2)
!8942 = !DILocation(line: 9491, column: 8, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 9491, column: 8)
!8944 = !DILocation(line: 9491, column: 8, scope: !8941)
!8945 = !DILocation(line: 9492, column: 13, scope: !8943)
!8946 = !DILocation(line: 9495, column: 13, scope: !8943)
!8947 = !DILocation(line: 9495, column: 6, scope: !8943)
!8948 = !DILocation(line: 9506, column: 39, scope: !8916)
!8949 = !DILocation(line: 9506, column: 20, scope: !8916)
!8950 = !DILocation(line: 0, scope: !8916)
!8951 = !DILocation(line: 9507, column: 18, scope: !8916)
!8952 = !DILocation(line: 9510, column: 8, scope: !8916)
!8953 = !DILocation(line: 9512, column: 6, scope: !8922)
!8954 = !DILocation(line: 9512, column: 20, scope: !8922)
!8955 = !DILocation(line: 9512, column: 17, scope: !8922)
!8956 = !DILocation(line: 9514, column: 26, scope: !8921)
!8957 = !DILocation(line: 0, scope: !8921)
!8958 = !DILocation(line: 9515, column: 24, scope: !8921)
!8959 = !DILocation(line: 9517, column: 21, scope: !8921)
!8960 = !DILocation(line: 9519, column: 19, scope: !8921)
!8961 = !DILocation(line: 9522, column: 12, scope: !8921)
!8962 = !DILocation(line: 9524, column: 12, scope: !8921)
!8963 = !DILocation(line: 9527, column: 4, scope: !8921)
!8964 = !DILocation(line: 9533, column: 12, scope: !8965)
!8965 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 9533, column: 11)
!8966 = !DILocation(line: 9534, column: 8, scope: !8965)
!8967 = !DILocation(line: 9535, column: 42, scope: !8965)
!8968 = !DILocation(line: 9535, column: 9, scope: !8965)
!8969 = !DILocation(line: 9535, column: 2, scope: !8965)
!8970 = !DILocation(line: 9537, column: 11, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 9537, column: 11)
!8972 = !DILocation(line: 9537, column: 27, scope: !8971)
!8973 = !DILocation(line: 9537, column: 11, scope: !8917)
!8974 = !DILocation(line: 9539, column: 8, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 9538, column: 2)
!8976 = !DILocation(line: 9540, column: 11, scope: !8975)
!8977 = !DILocation(line: 9546, column: 12, scope: !8978)
!8978 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 9546, column: 11)
!8979 = !DILocation(line: 9547, column: 42, scope: !8978)
!8980 = !DILocation(line: 9547, column: 9, scope: !8978)
!8981 = !DILocation(line: 9547, column: 2, scope: !8978)
!8982 = !DILocation(line: 9549, column: 11, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8917, file: !3, line: 9549, column: 11)
!8984 = !DILocation(line: 9549, column: 27, scope: !8983)
!8985 = !DILocation(line: 9549, column: 11, scope: !8917)
!8986 = !DILocation(line: 9551, column: 8, scope: !8987)
!8987 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 9550, column: 2)
!8988 = !DILocation(line: 9552, column: 11, scope: !8987)
!8989 = !DILocation(line: 9555, column: 13, scope: !8917)
!8990 = !DILocation(line: 9556, column: 14, scope: !8917)
!8991 = !DILocation(line: 9556, column: 7, scope: !8917)
!8992 = !DILocation(line: 9559, column: 7, scope: !8917)
!8993 = !DILocation(line: 9562, column: 5, scope: !8905)
!8994 = !DILocation(line: 9564, column: 1, scope: !8905)
!8995 = distinct !DISubprogram(name: "fold_builtin_interclass_mathfn", scope: !3, file: !3, line: 9386, type: !6344, scopeLine: 9387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8996)
!8996 = !{!8997, !8998, !8999, !9000, !9001, !9004, !9005, !9006, !9010, !9012, !9013, !9014, !9015, !9017, !9018, !9019, !9020, !9021}
!8997 = !DILocalVariable(name: "loc", arg: 1, scope: !8995, file: !3, line: 9386, type: !2998)
!8998 = !DILocalVariable(name: "fndecl", arg: 2, scope: !8995, file: !3, line: 9386, type: !2914)
!8999 = !DILocalVariable(name: "arg", arg: 3, scope: !8995, file: !3, line: 9386, type: !2914)
!9000 = !DILocalVariable(name: "mode", scope: !8995, file: !3, line: 9388, type: !5)
!9001 = !DILocalVariable(name: "isgr_fn", scope: !9002, file: !3, line: 9406, type: !5266)
!9002 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 9404, column: 7)
!9003 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 9400, column: 5)
!9004 = !DILocalVariable(name: "type", scope: !9002, file: !3, line: 9407, type: !5266)
!9005 = !DILocalVariable(name: "r", scope: !9002, file: !3, line: 9408, type: !2936)
!9006 = !DILocalVariable(name: "buf", scope: !9002, file: !3, line: 9409, type: !9007)
!9007 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2869, size: 1024, elements: !9008)
!9008 = !{!9009}
!9009 = !DISubrange(count: 128)
!9010 = !DILocalVariable(name: "isle_fn", scope: !9011, file: !3, line: 9422, type: !5266)
!9011 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 9420, column: 7)
!9012 = !DILocalVariable(name: "type", scope: !9011, file: !3, line: 9423, type: !5266)
!9013 = !DILocalVariable(name: "r", scope: !9011, file: !3, line: 9424, type: !2936)
!9014 = !DILocalVariable(name: "buf", scope: !9011, file: !3, line: 9425, type: !9007)
!9015 = !DILocalVariable(name: "isle_fn", scope: !9016, file: !3, line: 9445, type: !5266)
!9016 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 9442, column: 7)
!9017 = !DILocalVariable(name: "isge_fn", scope: !9016, file: !3, line: 9446, type: !5266)
!9018 = !DILocalVariable(name: "type", scope: !9016, file: !3, line: 9447, type: !5266)
!9019 = !DILocalVariable(name: "rmax", scope: !9016, file: !3, line: 9448, type: !2936)
!9020 = !DILocalVariable(name: "rmin", scope: !9016, file: !3, line: 9448, type: !2936)
!9021 = !DILocalVariable(name: "buf", scope: !9016, file: !3, line: 9449, type: !9007)
!9022 = !DILocation(line: 0, scope: !8995)
!9023 = !DILocation(line: 9390, column: 8, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 9390, column: 7)
!9025 = !DILocation(line: 9390, column: 7, scope: !8995)
!9026 = !DILocation(line: 9393, column: 7, scope: !9027)
!9027 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 9393, column: 7)
!9028 = !DILocation(line: 9393, column: 45, scope: !9027)
!9029 = !DILocation(line: 9393, column: 7, scope: !8995)
!9030 = !DILocation(line: 9396, column: 10, scope: !8995)
!9031 = !DILocation(line: 9399, column: 11, scope: !8995)
!9032 = !DILocation(line: 9399, column: 3, scope: !8995)
!9033 = !DILocation(line: 9406, column: 23, scope: !9002)
!9034 = !DILocation(line: 0, scope: !9002)
!9035 = !DILocation(line: 9407, column: 20, scope: !9002)
!9036 = !DILocation(line: 9408, column: 2, scope: !9002)
!9037 = !DILocation(line: 9409, column: 2, scope: !9002)
!9038 = !DILocation(line: 9409, column: 7, scope: !9002)
!9039 = !DILocation(line: 9411, column: 17, scope: !9002)
!9040 = !DILocation(line: 9411, column: 2, scope: !9002)
!9041 = !DILocation(line: 9412, column: 2, scope: !9002)
!9042 = !DILocation(line: 9413, column: 11, scope: !9002)
!9043 = !DILocation(line: 9417, column: 7, scope: !9003)
!9044 = !DILocation(line: 9422, column: 23, scope: !9011)
!9045 = !DILocation(line: 0, scope: !9011)
!9046 = !DILocation(line: 9423, column: 20, scope: !9011)
!9047 = !DILocation(line: 9424, column: 2, scope: !9011)
!9048 = !DILocation(line: 9425, column: 2, scope: !9011)
!9049 = !DILocation(line: 9425, column: 7, scope: !9011)
!9050 = !DILocation(line: 9427, column: 17, scope: !9011)
!9051 = !DILocation(line: 9427, column: 2, scope: !9011)
!9052 = !DILocation(line: 9428, column: 2, scope: !9011)
!9053 = !DILocation(line: 9429, column: 11, scope: !9011)
!9054 = !DILocation(line: 9440, column: 7, scope: !9003)
!9055 = !DILocation(line: 9445, column: 23, scope: !9016)
!9056 = !DILocation(line: 0, scope: !9016)
!9057 = !DILocation(line: 9446, column: 23, scope: !9016)
!9058 = !DILocation(line: 9447, column: 20, scope: !9016)
!9059 = !DILocation(line: 9448, column: 2, scope: !9016)
!9060 = !DILocation(line: 9449, column: 2, scope: !9016)
!9061 = !DILocation(line: 9449, column: 7, scope: !9016)
!9062 = !DILocation(line: 9451, column: 17, scope: !9016)
!9063 = !DILocation(line: 9451, column: 2, scope: !9016)
!9064 = !DILocation(line: 9452, column: 2, scope: !9016)
!9065 = !DILocation(line: 9453, column: 26, scope: !9016)
!9066 = !DILocation(line: 9453, column: 51, scope: !9016)
!9067 = !DILocation(line: 9453, column: 56, scope: !9016)
!9068 = !DILocation(line: 9453, column: 2, scope: !9016)
!9069 = !DILocation(line: 9454, column: 2, scope: !9016)
!9070 = !DILocation(line: 9455, column: 27, scope: !9016)
!9071 = !DILocation(line: 9455, column: 8, scope: !9016)
!9072 = !DILocation(line: 9456, column: 11, scope: !9016)
!9073 = !DILocation(line: 9458, column: 11, scope: !9016)
!9074 = !DILocation(line: 9462, column: 7, scope: !9003)
!9075 = !DILocation(line: 9468, column: 1, scope: !8995)
!9076 = distinct !DISubprogram(name: "fold_builtin_printf", scope: !3, file: !3, line: 12678, type: !9077, scopeLine: 12681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9079)
!9077 = !DISubroutineType(types: !9078)
!9078 = !{!2914, !2998, !2914, !2914, !2914, !2866, !527}
!9079 = !{!9080, !9081, !9082, !9083, !9084, !9085, !9086, !9087, !9088, !9089, !9090, !9091, !9094, !9097}
!9080 = !DILocalVariable(name: "loc", arg: 1, scope: !9076, file: !3, line: 12678, type: !2998)
!9081 = !DILocalVariable(name: "fndecl", arg: 2, scope: !9076, file: !3, line: 12678, type: !2914)
!9082 = !DILocalVariable(name: "fmt", arg: 3, scope: !9076, file: !3, line: 12678, type: !2914)
!9083 = !DILocalVariable(name: "arg", arg: 4, scope: !9076, file: !3, line: 12679, type: !2914)
!9084 = !DILocalVariable(name: "ignore", arg: 5, scope: !9076, file: !3, line: 12679, type: !2866)
!9085 = !DILocalVariable(name: "fcode", arg: 6, scope: !9076, file: !3, line: 12680, type: !527)
!9086 = !DILocalVariable(name: "fn_putchar", scope: !9076, file: !3, line: 12682, type: !2914)
!9087 = !DILocalVariable(name: "fn_puts", scope: !9076, file: !3, line: 12682, type: !2914)
!9088 = !DILocalVariable(name: "newarg", scope: !9076, file: !3, line: 12682, type: !2914)
!9089 = !DILocalVariable(name: "call", scope: !9076, file: !3, line: 12682, type: !2914)
!9090 = !DILocalVariable(name: "fmt_str", scope: !9076, file: !3, line: 12683, type: !2871)
!9091 = !DILocalVariable(name: "str", scope: !9092, file: !3, line: 12717, type: !2871)
!9092 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 12716, column: 5)
!9093 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 12714, column: 7)
!9094 = !DILocalVariable(name: "len", scope: !9095, file: !3, line: 12757, type: !3342)
!9095 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 12755, column: 2)
!9096 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 12745, column: 11)
!9097 = !DILocalVariable(name: "newstr", scope: !9098, file: !3, line: 12762, type: !2868)
!9098 = distinct !DILexicalBlock(scope: !9099, file: !3, line: 12759, column: 6)
!9099 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 12758, column: 8)
!9100 = !DILocation(line: 0, scope: !9076)
!9101 = !DILocation(line: 12686, column: 9, scope: !9102)
!9102 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 12686, column: 7)
!9103 = !DILocation(line: 12686, column: 7, scope: !9076)
!9104 = !DILocation(line: 12690, column: 8, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 12690, column: 7)
!9106 = !DILocation(line: 12690, column: 7, scope: !9076)
!9107 = !DILocation(line: 12694, column: 13, scope: !9076)
!9108 = !DILocation(line: 12695, column: 15, scope: !9109)
!9109 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 12695, column: 7)
!9110 = !DILocation(line: 12695, column: 7, scope: !9076)
!9111 = !DILocation(line: 12698, column: 13, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 12698, column: 7)
!9113 = !DILocation(line: 12698, column: 7, scope: !9076)
!9114 = !DILocation(line: 12711, column: 8, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 12711, column: 7)
!9116 = !DILocation(line: 12711, column: 7, scope: !9076)
!9117 = !DILocation(line: 12714, column: 7, scope: !9093)
!9118 = !DILocation(line: 12714, column: 42, scope: !9093)
!9119 = !DILocation(line: 12715, column: 7, scope: !9093)
!9120 = !DILocation(line: 12715, column: 27, scope: !9093)
!9121 = !DILocation(line: 12715, column: 10, scope: !9093)
!9122 = !DILocation(line: 12715, column: 43, scope: !9093)
!9123 = !DILocation(line: 12714, column: 7, scope: !9076)
!9124 = !DILocation(line: 12719, column: 11, scope: !9125)
!9125 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 12719, column: 11)
!9126 = !DILocation(line: 12719, column: 46, scope: !9125)
!9127 = !DILocation(line: 12719, column: 11, scope: !9092)
!9128 = !DILocation(line: 12721, column: 34, scope: !9129)
!9129 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 12721, column: 8)
!9130 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 12720, column: 2)
!9131 = !DILocation(line: 12724, column: 9, scope: !9132)
!9132 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 12724, column: 8)
!9133 = !DILocation(line: 12724, column: 13, scope: !9132)
!9134 = !DILocation(line: 12724, column: 17, scope: !9132)
!9135 = !DILocation(line: 12724, column: 8, scope: !9130)
!9136 = !DILocation(line: 12727, column: 10, scope: !9130)
!9137 = !DILocation(line: 0, scope: !9092)
!9138 = !DILocation(line: 12728, column: 12, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9130, file: !3, line: 12728, column: 8)
!9140 = !DILocation(line: 12728, column: 8, scope: !9130)
!9141 = !DILocation(line: 12734, column: 34, scope: !9142)
!9142 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 12734, column: 8)
!9143 = distinct !DILexicalBlock(scope: !9125, file: !3, line: 12732, column: 2)
!9144 = !DILocation(line: 12735, column: 11, scope: !9142)
!9145 = !DILocation(line: 12734, column: 8, scope: !9143)
!9146 = !DILocation(line: 0, scope: !9125)
!9147 = !DILocation(line: 12741, column: 11, scope: !9148)
!9148 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 12741, column: 11)
!9149 = !DILocation(line: 12741, column: 18, scope: !9148)
!9150 = !DILocation(line: 12741, column: 11, scope: !9092)
!9151 = !DILocation(line: 12742, column: 24, scope: !9148)
!9152 = !DILocation(line: 12742, column: 9, scope: !9148)
!9153 = !DILocation(line: 12742, column: 2, scope: !9148)
!9154 = !DILocation(line: 12745, column: 11, scope: !9096)
!9155 = !DILocation(line: 12745, column: 18, scope: !9096)
!9156 = !DILocation(line: 12745, column: 11, scope: !9092)
!9157 = !DILocation(line: 12750, column: 39, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 12746, column: 2)
!9159 = !DILocation(line: 12750, column: 13, scope: !9158)
!9160 = !DILocation(line: 12751, column: 8, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9158, file: !3, line: 12751, column: 8)
!9162 = !DILocation(line: 12751, column: 8, scope: !9158)
!9163 = !DILocation(line: 12752, column: 13, scope: !9161)
!9164 = !DILocation(line: 12752, column: 6, scope: !9161)
!9165 = !DILocation(line: 12757, column: 17, scope: !9095)
!9166 = !DILocation(line: 0, scope: !9095)
!9167 = !DILocation(line: 12758, column: 31, scope: !9099)
!9168 = !DILocation(line: 12758, column: 23, scope: !9099)
!9169 = !DILocation(line: 12758, column: 8, scope: !9099)
!9170 = !DILocation(line: 12758, column: 39, scope: !9099)
!9171 = !DILocation(line: 12758, column: 36, scope: !9099)
!9172 = !DILocation(line: 12758, column: 8, scope: !9095)
!9173 = !DILocation(line: 12762, column: 23, scope: !9098)
!9174 = !DILocation(line: 0, scope: !9098)
!9175 = !DILocation(line: 12763, column: 8, scope: !9098)
!9176 = !DILocation(line: 12764, column: 8, scope: !9098)
!9177 = !DILocation(line: 12764, column: 24, scope: !9098)
!9178 = !DILocation(line: 12766, column: 39, scope: !9098)
!9179 = !DILocation(line: 12766, column: 17, scope: !9098)
!9180 = !DILocation(line: 12767, column: 12, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 12767, column: 12)
!9182 = !DILocation(line: 12767, column: 12, scope: !9098)
!9183 = !DILocation(line: 12768, column: 10, scope: !9181)
!9184 = !DILocation(line: 12768, column: 3, scope: !9181)
!9185 = !DILocation(line: 0, scope: !9096)
!9186 = !DILocation(line: 12775, column: 5, scope: !9093)
!9187 = !DILocation(line: 12778, column: 38, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9093, file: !3, line: 12778, column: 12)
!9189 = !DILocation(line: 12782, column: 12, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 12782, column: 12)
!9191 = !DILocation(line: 12782, column: 55, scope: !9190)
!9192 = !DILocation(line: 12782, column: 12, scope: !9188)
!9193 = !DILocation(line: 12784, column: 12, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 12784, column: 11)
!9195 = distinct !DILexicalBlock(scope: !9190, file: !3, line: 12783, column: 5)
!9196 = !DILocation(line: 12784, column: 16, scope: !9194)
!9197 = !DILocation(line: 12784, column: 20, scope: !9194)
!9198 = !DILocation(line: 12784, column: 11, scope: !9195)
!9199 = !DILocation(line: 12786, column: 11, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 12786, column: 11)
!9201 = !DILocation(line: 12786, column: 11, scope: !9195)
!9202 = !DILocation(line: 12787, column: 9, scope: !9200)
!9203 = !DILocation(line: 12787, column: 2, scope: !9200)
!9204 = !DILocation(line: 12791, column: 12, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9190, file: !3, line: 12791, column: 12)
!9206 = !DILocation(line: 12791, column: 47, scope: !9205)
!9207 = !DILocation(line: 12791, column: 12, scope: !9190)
!9208 = !DILocation(line: 12793, column: 12, scope: !9209)
!9209 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 12793, column: 11)
!9210 = distinct !DILexicalBlock(scope: !9205, file: !3, line: 12792, column: 5)
!9211 = !DILocation(line: 12793, column: 16, scope: !9209)
!9212 = !DILocation(line: 12793, column: 20, scope: !9209)
!9213 = !DILocation(line: 12793, column: 11, scope: !9210)
!9214 = !DILocation(line: 12795, column: 11, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9210, file: !3, line: 12795, column: 11)
!9216 = !DILocation(line: 12795, column: 11, scope: !9210)
!9217 = !DILocation(line: 12796, column: 9, scope: !9215)
!9218 = !DILocation(line: 12796, column: 2, scope: !9215)
!9219 = !DILocation(line: 12799, column: 8, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9076, file: !3, line: 12799, column: 7)
!9221 = !DILocation(line: 12799, column: 7, scope: !9076)
!9222 = !DILocation(line: 12802, column: 33, scope: !9076)
!9223 = !DILocation(line: 12802, column: 10, scope: !9076)
!9224 = !DILocation(line: 12802, column: 3, scope: !9076)
!9225 = !DILocation(line: 12803, column: 1, scope: !9076)
!9226 = distinct !DISubprogram(name: "builtin_save_expr", scope: !3, file: !3, line: 609, type: !5487, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9227)
!9227 = !{!9228}
!9228 = !DILocalVariable(name: "exp", arg: 1, scope: !9226, file: !3, line: 609, type: !2914)
!9229 = !DILocation(line: 0, scope: !9226)
!9230 = !DILocation(line: 611, column: 7, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9226, file: !3, line: 611, column: 7)
!9232 = !DILocation(line: 611, column: 30, scope: !9231)
!9233 = !DILocation(line: 612, column: 7, scope: !9231)
!9234 = !DILocation(line: 612, column: 27, scope: !9231)
!9235 = !DILocation(line: 613, column: 4, scope: !9231)
!9236 = !DILocation(line: 613, column: 24, scope: !9231)
!9237 = !DILocation(line: 613, column: 36, scope: !9231)
!9238 = !DILocation(line: 613, column: 40, scope: !9231)
!9239 = !DILocation(line: 611, column: 7, scope: !9226)
!9240 = !DILocation(line: 616, column: 10, scope: !9226)
!9241 = !DILocation(line: 616, column: 3, scope: !9226)
!9242 = !DILocation(line: 617, column: 1, scope: !9226)
!9243 = distinct !DISubprogram(name: "integer_valued_real_p", scope: !3, file: !3, line: 6710, type: !4846, scopeLine: 6711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9244)
!9244 = !{!9245, !9246}
!9245 = !DILocalVariable(name: "t", arg: 1, scope: !9243, file: !3, line: 6710, type: !2914)
!9246 = !DILocalVariable(name: "type", scope: !9247, file: !3, line: 6743, type: !2914)
!9247 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 6742, column: 7)
!9248 = distinct !DILexicalBlock(scope: !9243, file: !3, line: 6713, column: 5)
!9249 = !DILocation(line: 6719, column: 14, scope: !9248)
!9250 = !DILocation(line: 0, scope: !9243)
!9251 = !DILocation(line: 6712, column: 11, scope: !9243)
!9252 = !DILocation(line: 6712, column: 3, scope: !9243)
!9253 = !DILocation(line: 6719, column: 37, scope: !9248)
!9254 = !DILocation(line: 0, scope: !9248)
!9255 = !DILocation(line: 6724, column: 37, scope: !9248)
!9256 = !DILocation(line: 6724, column: 14, scope: !9248)
!9257 = !DILocation(line: 6731, column: 37, scope: !9248)
!9258 = !DILocation(line: 6731, column: 14, scope: !9248)
!9259 = !DILocation(line: 6732, column: 7, scope: !9248)
!9260 = !DILocation(line: 6732, column: 33, scope: !9248)
!9261 = !DILocation(line: 6732, column: 10, scope: !9248)
!9262 = !DILocation(line: 6731, column: 7, scope: !9248)
!9263 = !DILocation(line: 6735, column: 37, scope: !9248)
!9264 = !DILocation(line: 6735, column: 14, scope: !9248)
!9265 = !DILocation(line: 6736, column: 7, scope: !9248)
!9266 = !DILocation(line: 6736, column: 33, scope: !9248)
!9267 = !DILocation(line: 6736, column: 10, scope: !9248)
!9268 = !DILocation(line: 6735, column: 7, scope: !9248)
!9269 = !DILocation(line: 6739, column: 30, scope: !9248)
!9270 = !DILocation(line: 6739, column: 53, scope: !9248)
!9271 = !DILocation(line: 6739, column: 14, scope: !9248)
!9272 = !DILocation(line: 6739, column: 7, scope: !9248)
!9273 = !DILocation(line: 6743, column: 14, scope: !9247)
!9274 = !DILocation(line: 0, scope: !9247)
!9275 = !DILocation(line: 6744, column: 6, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 6744, column: 6)
!9277 = !DILocation(line: 6744, column: 23, scope: !9276)
!9278 = !DILocation(line: 6744, column: 6, scope: !9247)
!9279 = !DILocation(line: 6746, column: 23, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9247, file: !3, line: 6746, column: 6)
!9281 = !DILocation(line: 6746, column: 6, scope: !9247)
!9282 = !DILocation(line: 6747, column: 11, scope: !9280)
!9283 = !DILocation(line: 6747, column: 4, scope: !9280)
!9284 = !DILocation(line: 6752, column: 15, scope: !9248)
!9285 = !DILocation(line: 6752, column: 7, scope: !9248)
!9286 = !DILocation(line: 6764, column: 34, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 6753, column: 2)
!9288 = !DILocation(line: 6764, column: 11, scope: !9287)
!9289 = !DILocation(line: 6765, column: 7, scope: !9287)
!9290 = !DILocation(line: 6765, column: 33, scope: !9287)
!9291 = !DILocation(line: 6765, column: 10, scope: !9287)
!9292 = !DILocation(line: 6764, column: 4, scope: !9287)
!9293 = !DILocation(line: 6775, column: 3, scope: !9243)
!9294 = !DILocation(line: 6776, column: 1, scope: !9243)
!9295 = distinct !DISubprogram(name: "interclass_mathfn_icode", scope: !3, file: !3, line: 2254, type: !9296, scopeLine: 2255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9298)
!9296 = !DISubroutineType(types: !9297)
!9297 = !{!1308, !2914, !2914}
!9298 = !{!9299, !9300, !9301, !9302, !9322}
!9299 = !DILocalVariable(name: "arg", arg: 1, scope: !9295, file: !3, line: 2254, type: !2914)
!9300 = !DILocalVariable(name: "fndecl", arg: 2, scope: !9295, file: !3, line: 2254, type: !2914)
!9301 = !DILocalVariable(name: "errno_set", scope: !9295, file: !3, line: 2256, type: !2866)
!9302 = !DILocalVariable(name: "builtin_optab", scope: !9295, file: !3, line: 2257, type: !9303)
!9303 = !DIDerivedType(tag: DW_TAG_typedef, name: "optab", file: !9304, line: 55, baseType: !9305)
!9304 = !DIFile(filename: "./optabs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!9305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9306, size: 64)
!9306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_d", file: !9304, line: 46, size: 3072, elements: !9307)
!9307 = !{!9308, !9309, !9310, !9311, !9315}
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !9306, file: !9304, line: 48, baseType: !384, size: 32)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_basename", scope: !9306, file: !9304, line: 49, baseType: !2871, size: 64, offset: 64)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_suffix", scope: !9306, file: !9304, line: 50, baseType: !2869, size: 8, offset: 128)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "libcall_gen", scope: !9306, file: !9304, line: 51, baseType: !9312, size: 64, offset: 192)
!9312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9313, size: 64)
!9313 = !DISubroutineType(types: !9314)
!9314 = !{null, !9305, !2871, !2869, !5}
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !9306, file: !9304, line: 53, baseType: !9316, size: 2784, offset: 256)
!9316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9317, size: 2784, elements: !9320)
!9317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "optab_handlers", file: !9304, line: 41, size: 32, elements: !9318)
!9318 = !{!9319}
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "insn_code", scope: !9317, file: !9304, line: 43, baseType: !1308, size: 32)
!9320 = !{!9321}
!9321 = !DISubrange(count: 87)
!9322 = !DILocalVariable(name: "mode", scope: !9295, file: !3, line: 2258, type: !5)
!9323 = !DILocation(line: 0, scope: !9295)
!9324 = !DILocation(line: 2260, column: 11, scope: !9295)
!9325 = !DILocation(line: 2260, column: 3, scope: !9295)
!9326 = !DILocation(line: 2265, column: 36, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 2261, column: 5)
!9328 = !DILocation(line: 2276, column: 7, scope: !9327)
!9329 = !DILocation(line: 2278, column: 7, scope: !9327)
!9330 = !DILocation(line: 2279, column: 5, scope: !9327)
!9331 = !DILocation(line: 2282, column: 7, scope: !9332)
!9332 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 2282, column: 7)
!9333 = !DILocation(line: 2282, column: 23, scope: !9332)
!9334 = !DILocation(line: 2286, column: 10, scope: !9295)
!9335 = !DILocation(line: 2288, column: 7, scope: !9336)
!9336 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 2288, column: 7)
!9337 = !DILocation(line: 2288, column: 7, scope: !9295)
!9338 = !DILocation(line: 2289, column: 12, scope: !9336)
!9339 = !DILocation(line: 2289, column: 49, scope: !9336)
!9340 = !DILocation(line: 2289, column: 5, scope: !9336)
!9341 = !DILocation(line: 2291, column: 1, scope: !9295)
!9342 = distinct !DISubprogram(name: "fold_builtin_hypot", scope: !3, file: !3, line: 7803, type: !6050, scopeLine: 7805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9343)
!9343 = !{!9344, !9345, !9346, !9347, !9348}
!9344 = !DILocalVariable(name: "loc", arg: 1, scope: !9342, file: !3, line: 7803, type: !2998)
!9345 = !DILocalVariable(name: "fndecl", arg: 2, scope: !9342, file: !3, line: 7803, type: !2914)
!9346 = !DILocalVariable(name: "arg0", arg: 3, scope: !9342, file: !3, line: 7804, type: !2914)
!9347 = !DILocalVariable(name: "arg1", arg: 4, scope: !9342, file: !3, line: 7804, type: !2914)
!9348 = !DILocalVariable(name: "type", arg: 5, scope: !9342, file: !3, line: 7804, type: !2914)
!9349 = !DILocation(line: 0, scope: !9342)
!9350 = !DILocation(line: 7807, column: 7, scope: !9342)
!9351 = distinct !DISubprogram(name: "fold_builtin_load_exponent", scope: !3, file: !3, line: 9268, type: !7702, scopeLine: 9270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9352)
!9352 = !{!9353, !9354, !9355, !9356, !9357, !9358, !9364, !9365, !9368}
!9353 = !DILocalVariable(name: "loc", arg: 1, scope: !9351, file: !3, line: 9268, type: !2998)
!9354 = !DILocalVariable(name: "arg0", arg: 2, scope: !9351, file: !3, line: 9268, type: !2914)
!9355 = !DILocalVariable(name: "arg1", arg: 3, scope: !9351, file: !3, line: 9268, type: !2914)
!9356 = !DILocalVariable(name: "type", arg: 4, scope: !9351, file: !3, line: 9269, type: !2914)
!9357 = !DILocalVariable(name: "ldexp", arg: 5, scope: !9351, file: !3, line: 9269, type: !2866)
!9358 = !DILocalVariable(name: "max_exp_adj", scope: !9359, file: !3, line: 9290, type: !9363)
!9359 = distinct !DILexicalBlock(scope: !9360, file: !3, line: 9286, column: 9)
!9360 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 9283, column: 11)
!9361 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 9272, column: 5)
!9362 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 9271, column: 7)
!9363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2929)
!9364 = !DILocalVariable(name: "req_exp_adj", scope: !9359, file: !3, line: 9295, type: !9363)
!9365 = !DILocalVariable(name: "initial_result", scope: !9366, file: !3, line: 9302, type: !2936)
!9366 = distinct !DILexicalBlock(scope: !9367, file: !3, line: 9301, column: 6)
!9367 = distinct !DILexicalBlock(scope: !9359, file: !3, line: 9300, column: 8)
!9368 = !DILocalVariable(name: "trunc_result", scope: !9369, file: !3, line: 9309, type: !8399)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 9308, column: 10)
!9370 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 9307, column: 12)
!9371 = !DILocation(line: 0, scope: !9351)
!9372 = !DILocation(line: 9271, column: 7, scope: !9362)
!9373 = !DILocation(line: 9271, column: 38, scope: !9362)
!9374 = !DILocation(line: 9271, column: 41, scope: !9362)
!9375 = !DILocation(line: 9271, column: 7, scope: !9351)
!9376 = !DILocation(line: 9273, column: 7, scope: !9361)
!9377 = !DILocation(line: 9274, column: 7, scope: !9361)
!9378 = !DILocation(line: 9277, column: 11, scope: !9379)
!9379 = distinct !DILexicalBlock(scope: !9361, file: !3, line: 9277, column: 11)
!9380 = !DILocation(line: 9277, column: 29, scope: !9379)
!9381 = !DILocation(line: 9277, column: 32, scope: !9379)
!9382 = !DILocation(line: 9278, column: 4, scope: !9379)
!9383 = !DILocation(line: 9278, column: 8, scope: !9379)
!9384 = !DILocation(line: 9278, column: 25, scope: !9379)
!9385 = !DILocation(line: 9279, column: 8, scope: !9379)
!9386 = !DILocation(line: 9279, column: 28, scope: !9379)
!9387 = !DILocation(line: 9279, column: 12, scope: !9379)
!9388 = !DILocation(line: 9277, column: 11, scope: !9361)
!9389 = !DILocation(line: 9280, column: 9, scope: !9379)
!9390 = !DILocation(line: 9280, column: 2, scope: !9379)
!9391 = !DILocation(line: 9283, column: 12, scope: !9360)
!9392 = !DILocation(line: 9283, column: 18, scope: !9360)
!9393 = !DILocation(line: 9283, column: 21, scope: !9360)
!9394 = !DILocation(line: 9283, column: 58, scope: !9360)
!9395 = !DILocation(line: 9283, column: 60, scope: !9360)
!9396 = !DILocation(line: 9284, column: 4, scope: !9360)
!9397 = !DILocation(line: 9284, column: 7, scope: !9360)
!9398 = !DILocation(line: 9284, column: 24, scope: !9360)
!9399 = !DILocation(line: 9284, column: 36, scope: !9360)
!9400 = !DILocation(line: 9284, column: 40, scope: !9360)
!9401 = !DILocation(line: 9285, column: 4, scope: !9360)
!9402 = !DILocation(line: 9285, column: 7, scope: !9360)
!9403 = !DILocation(line: 9283, column: 11, scope: !9361)
!9404 = !DILocation(line: 9291, column: 12, scope: !9359)
!9405 = !DILocation(line: 9291, column: 49, scope: !9359)
!9406 = !DILocation(line: 9292, column: 6, scope: !9359)
!9407 = !DILocation(line: 9292, column: 43, scope: !9359)
!9408 = !DILocation(line: 9292, column: 4, scope: !9359)
!9409 = !DILocation(line: 9291, column: 6, scope: !9359)
!9410 = !DILocation(line: 9290, column: 31, scope: !9359)
!9411 = !DILocation(line: 0, scope: !9359)
!9412 = !DILocation(line: 9295, column: 38, scope: !9359)
!9413 = !DILocation(line: 9300, column: 8, scope: !9367)
!9414 = !DILocation(line: 9300, column: 21, scope: !9367)
!9415 = !DILocation(line: 9300, column: 50, scope: !9367)
!9416 = !DILocation(line: 9300, column: 35, scope: !9367)
!9417 = !DILocation(line: 9302, column: 8, scope: !9366)
!9418 = !DILocation(line: 9304, column: 38, scope: !9366)
!9419 = !DILocation(line: 9304, column: 60, scope: !9366)
!9420 = !DILocation(line: 0, scope: !9366)
!9421 = !DILocation(line: 9304, column: 8, scope: !9366)
!9422 = !DILocation(line: 9307, column: 14, scope: !9370)
!9423 = !DILocation(line: 9307, column: 12, scope: !9366)
!9424 = !DILocation(line: 9309, column: 5, scope: !9369)
!9425 = !DILocation(line: 9310, column: 30, scope: !9369)
!9426 = !DILocation(line: 0, scope: !9369)
!9427 = !DILocation(line: 9310, column: 9, scope: !9369)
!9428 = !DILocation(line: 9314, column: 9, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 9314, column: 9)
!9430 = !DILocation(line: 9314, column: 9, scope: !9369)
!9431 = !DILocation(line: 9315, column: 14, scope: !9429)
!9432 = !DILocation(line: 9315, column: 7, scope: !9429)
!9433 = !DILocation(line: 9316, column: 3, scope: !9370)
!9434 = !DILocation(line: 9317, column: 6, scope: !9367)
!9435 = !DILocation(line: 9318, column: 2, scope: !9360)
!9436 = !DILocation(line: 0, scope: !9360)
!9437 = !DILocation(line: 9321, column: 3, scope: !9351)
!9438 = !DILocation(line: 9322, column: 1, scope: !9351)
!9439 = distinct !DISubprogram(name: "fold_builtin_frexp", scope: !3, file: !3, line: 9210, type: !8079, scopeLine: 9211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9440)
!9440 = !{!9441, !9442, !9443, !9444, !9445, !9448, !9449, !9450}
!9441 = !DILocalVariable(name: "loc", arg: 1, scope: !9439, file: !3, line: 9210, type: !2998)
!9442 = !DILocalVariable(name: "arg0", arg: 2, scope: !9439, file: !3, line: 9210, type: !2914)
!9443 = !DILocalVariable(name: "arg1", arg: 3, scope: !9439, file: !3, line: 9210, type: !2914)
!9444 = !DILocalVariable(name: "rettype", arg: 4, scope: !9439, file: !3, line: 9210, type: !2914)
!9445 = !DILocalVariable(name: "value", scope: !9446, file: !3, line: 9225, type: !8780)
!9446 = distinct !DILexicalBlock(scope: !9447, file: !3, line: 9224, column: 5)
!9447 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 9223, column: 7)
!9448 = !DILocalVariable(name: "frac", scope: !9446, file: !3, line: 9226, type: !2914)
!9449 = !DILocalVariable(name: "exp", scope: !9446, file: !3, line: 9226, type: !2914)
!9450 = !DILocalVariable(name: "frac_rvt", scope: !9451, file: !3, line: 9244, type: !2936)
!9451 = distinct !DILexicalBlock(scope: !9452, file: !3, line: 9240, column: 2)
!9452 = distinct !DILexicalBlock(scope: !9446, file: !3, line: 9229, column: 7)
!9453 = !DILocation(line: 0, scope: !9439)
!9454 = !DILocation(line: 9212, column: 9, scope: !9455)
!9455 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 9212, column: 7)
!9456 = !DILocation(line: 9212, column: 40, scope: !9455)
!9457 = !DILocation(line: 9212, column: 45, scope: !9455)
!9458 = !DILocation(line: 9212, column: 7, scope: !9439)
!9459 = !DILocation(line: 9215, column: 3, scope: !9439)
!9460 = !DILocation(line: 9217, column: 9, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9439, file: !3, line: 9217, column: 7)
!9462 = !DILocation(line: 9217, column: 26, scope: !9461)
!9463 = !DILocation(line: 9217, column: 38, scope: !9461)
!9464 = !DILocation(line: 9217, column: 43, scope: !9461)
!9465 = !DILocation(line: 9217, column: 7, scope: !9439)
!9466 = !DILocation(line: 9220, column: 10, scope: !9439)
!9467 = !DILocation(line: 9223, column: 7, scope: !9447)
!9468 = !DILocation(line: 9223, column: 47, scope: !9447)
!9469 = !DILocation(line: 9223, column: 44, scope: !9447)
!9470 = !DILocation(line: 9223, column: 7, scope: !9439)
!9471 = !DILocation(line: 9225, column: 44, scope: !9446)
!9472 = !DILocation(line: 0, scope: !9446)
!9473 = !DILocation(line: 9228, column: 22, scope: !9446)
!9474 = !DILocation(line: 9228, column: 7, scope: !9446)
!9475 = !DILocation(line: 9232, column: 8, scope: !9452)
!9476 = !DILocation(line: 9234, column: 2, scope: !9452)
!9477 = !DILocation(line: 9238, column: 9, scope: !9452)
!9478 = !DILocation(line: 9238, column: 2, scope: !9452)
!9479 = !DILocation(line: 9244, column: 4, scope: !9451)
!9480 = !DILocation(line: 9244, column: 31, scope: !9451)
!9481 = !DILocation(line: 9245, column: 4, scope: !9451)
!9482 = !DILocation(line: 0, scope: !9451)
!9483 = !DILocation(line: 9246, column: 11, scope: !9451)
!9484 = !DILocation(line: 9247, column: 36, scope: !9451)
!9485 = !DILocation(line: 9247, column: 10, scope: !9451)
!9486 = !DILocation(line: 9248, column: 2, scope: !9452)
!9487 = !DILocation(line: 9249, column: 2, scope: !9452)
!9488 = !DILocation(line: 9255, column: 14, scope: !9446)
!9489 = !DILocation(line: 9256, column: 7, scope: !9446)
!9490 = !DILocation(line: 9256, column: 32, scope: !9446)
!9491 = !DILocation(line: 9257, column: 14, scope: !9446)
!9492 = !DILocation(line: 9257, column: 7, scope: !9446)
!9493 = !DILocation(line: 9261, column: 1, scope: !9439)
!9494 = distinct !DISubprogram(name: "fold_builtin_modf", scope: !3, file: !3, line: 9327, type: !8079, scopeLine: 9328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9495)
!9495 = !{!9496, !9497, !9498, !9499, !9500, !9503, !9504}
!9496 = !DILocalVariable(name: "loc", arg: 1, scope: !9494, file: !3, line: 9327, type: !2998)
!9497 = !DILocalVariable(name: "arg0", arg: 2, scope: !9494, file: !3, line: 9327, type: !2914)
!9498 = !DILocalVariable(name: "arg1", arg: 3, scope: !9494, file: !3, line: 9327, type: !2914)
!9499 = !DILocalVariable(name: "rettype", arg: 4, scope: !9494, file: !3, line: 9327, type: !2914)
!9500 = !DILocalVariable(name: "value", scope: !9501, file: !3, line: 9342, type: !8780)
!9501 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 9341, column: 5)
!9502 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 9340, column: 7)
!9503 = !DILocalVariable(name: "trunc", scope: !9501, file: !3, line: 9343, type: !2936)
!9504 = !DILocalVariable(name: "frac", scope: !9501, file: !3, line: 9343, type: !2936)
!9505 = !DILocation(line: 0, scope: !9494)
!9506 = !DILocation(line: 9329, column: 9, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 9329, column: 7)
!9508 = !DILocation(line: 9329, column: 40, scope: !9507)
!9509 = !DILocation(line: 9329, column: 45, scope: !9507)
!9510 = !DILocation(line: 9329, column: 7, scope: !9494)
!9511 = !DILocation(line: 9332, column: 3, scope: !9494)
!9512 = !DILocation(line: 9334, column: 9, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9494, file: !3, line: 9334, column: 7)
!9514 = !DILocation(line: 9334, column: 26, scope: !9513)
!9515 = !DILocation(line: 9334, column: 38, scope: !9513)
!9516 = !DILocation(line: 9334, column: 43, scope: !9513)
!9517 = !DILocation(line: 9334, column: 7, scope: !9494)
!9518 = !DILocation(line: 9337, column: 10, scope: !9494)
!9519 = !DILocation(line: 9340, column: 7, scope: !9502)
!9520 = !DILocation(line: 9340, column: 47, scope: !9502)
!9521 = !DILocation(line: 9340, column: 44, scope: !9502)
!9522 = !DILocation(line: 9340, column: 7, scope: !9494)
!9523 = !DILocation(line: 9342, column: 44, scope: !9501)
!9524 = !DILocation(line: 0, scope: !9501)
!9525 = !DILocation(line: 9343, column: 7, scope: !9501)
!9526 = !DILocation(line: 9345, column: 22, scope: !9501)
!9527 = !DILocation(line: 9345, column: 7, scope: !9501)
!9528 = !DILocation(line: 9350, column: 17, scope: !9529)
!9529 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 9346, column: 7)
!9530 = !DILocation(line: 9350, column: 15, scope: !9529)
!9531 = !DILocation(line: 9351, column: 2, scope: !9529)
!9532 = !DILocation(line: 9354, column: 9, scope: !9529)
!9533 = !DILocation(line: 9355, column: 21, scope: !9529)
!9534 = !DILocation(line: 9355, column: 7, scope: !9529)
!9535 = !DILocation(line: 9355, column: 12, scope: !9529)
!9536 = !DILocation(line: 9356, column: 10, scope: !9529)
!9537 = !DILocation(line: 9357, column: 2, scope: !9529)
!9538 = !DILocation(line: 9360, column: 2, scope: !9529)
!9539 = !DILocation(line: 9361, column: 2, scope: !9529)
!9540 = !DILocation(line: 9364, column: 13, scope: !9541)
!9541 = distinct !DILexicalBlock(scope: !9529, file: !3, line: 9364, column: 6)
!9542 = !DILocation(line: 9364, column: 6, scope: !9541)
!9543 = !DILocation(line: 9364, column: 18, scope: !9541)
!9544 = !DILocation(line: 9364, column: 26, scope: !9541)
!9545 = !DILocation(line: 9364, column: 29, scope: !9541)
!9546 = !DILocation(line: 9364, column: 6, scope: !9529)
!9547 = !DILocation(line: 9365, column: 14, scope: !9541)
!9548 = !DILocation(line: 9365, column: 4, scope: !9541)
!9549 = !DILocation(line: 9370, column: 14, scope: !9501)
!9550 = !DILocation(line: 9372, column: 7, scope: !9501)
!9551 = !DILocation(line: 9372, column: 32, scope: !9501)
!9552 = !DILocation(line: 9373, column: 14, scope: !9501)
!9553 = !DILocation(line: 9375, column: 5, scope: !9502)
!9554 = !DILocation(line: 9378, column: 1, scope: !9494)
!9555 = distinct !DISubprogram(name: "fold_builtin_bzero", scope: !3, file: !3, line: 8191, type: !6314, scopeLine: 8192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9556)
!9556 = !{!9557, !9558, !9559, !9560}
!9557 = !DILocalVariable(name: "loc", arg: 1, scope: !9555, file: !3, line: 8191, type: !2998)
!9558 = !DILocalVariable(name: "dest", arg: 2, scope: !9555, file: !3, line: 8191, type: !2914)
!9559 = !DILocalVariable(name: "size", arg: 3, scope: !9555, file: !3, line: 8191, type: !2914)
!9560 = !DILocalVariable(name: "ignore", arg: 4, scope: !9555, file: !3, line: 8191, type: !2866)
!9561 = !DILocation(line: 0, scope: !9555)
!9562 = !DILocation(line: 8193, column: 9, scope: !9563)
!9563 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 8193, column: 7)
!9564 = !DILocation(line: 8194, column: 7, scope: !9563)
!9565 = !DILocation(line: 8194, column: 12, scope: !9563)
!9566 = !DILocation(line: 8197, column: 8, scope: !9567)
!9567 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 8197, column: 7)
!9568 = !DILocation(line: 8193, column: 7, scope: !9555)
!9569 = !DILocation(line: 8205, column: 42, scope: !9555)
!9570 = !DILocation(line: 8206, column: 33, scope: !9555)
!9571 = !DILocation(line: 8206, column: 10, scope: !9555)
!9572 = !DILocation(line: 8207, column: 10, scope: !9555)
!9573 = !DILocation(line: 8205, column: 10, scope: !9555)
!9574 = !DILocation(line: 8205, column: 3, scope: !9555)
!9575 = !DILocation(line: 8208, column: 1, scope: !9555)
!9576 = distinct !DISubprogram(name: "fold_builtin_strstr", scope: !3, file: !3, line: 11113, type: !8079, scopeLine: 11114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9577)
!9577 = !{!9578, !9579, !9580, !9581, !9582, !9585, !9586, !9587, !9590}
!9578 = !DILocalVariable(name: "loc", arg: 1, scope: !9576, file: !3, line: 11113, type: !2998)
!9579 = !DILocalVariable(name: "s1", arg: 2, scope: !9576, file: !3, line: 11113, type: !2914)
!9580 = !DILocalVariable(name: "s2", arg: 3, scope: !9576, file: !3, line: 11113, type: !2914)
!9581 = !DILocalVariable(name: "type", arg: 4, scope: !9576, file: !3, line: 11113, type: !2914)
!9582 = !DILocalVariable(name: "fn", scope: !9583, file: !3, line: 11120, type: !2914)
!9583 = distinct !DILexicalBlock(scope: !9584, file: !3, line: 11119, column: 5)
!9584 = distinct !DILexicalBlock(scope: !9576, file: !3, line: 11115, column: 7)
!9585 = !DILocalVariable(name: "p1", scope: !9583, file: !3, line: 11121, type: !2871)
!9586 = !DILocalVariable(name: "p2", scope: !9583, file: !3, line: 11121, type: !2871)
!9587 = !DILocalVariable(name: "r", scope: !9588, file: !3, line: 11130, type: !2871)
!9588 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 11129, column: 2)
!9589 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 11128, column: 11)
!9590 = !DILocalVariable(name: "tem", scope: !9588, file: !3, line: 11131, type: !2914)
!9591 = !DILocation(line: 0, scope: !9576)
!9592 = !DILocation(line: 11115, column: 8, scope: !9584)
!9593 = !DILocation(line: 11116, column: 7, scope: !9584)
!9594 = !DILocation(line: 11116, column: 11, scope: !9584)
!9595 = !DILocation(line: 11115, column: 7, scope: !9576)
!9596 = !DILocation(line: 11123, column: 12, scope: !9583)
!9597 = !DILocation(line: 0, scope: !9583)
!9598 = !DILocation(line: 11124, column: 14, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 11124, column: 11)
!9600 = !DILocation(line: 11124, column: 11, scope: !9583)
!9601 = !DILocation(line: 11127, column: 12, scope: !9583)
!9602 = !DILocation(line: 11128, column: 14, scope: !9589)
!9603 = !DILocation(line: 11128, column: 11, scope: !9583)
!9604 = !DILocation(line: 11130, column: 20, scope: !9588)
!9605 = !DILocation(line: 0, scope: !9588)
!9606 = !DILocation(line: 11133, column: 10, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 11133, column: 8)
!9608 = !DILocation(line: 11133, column: 8, scope: !9588)
!9609 = !DILocation(line: 11134, column: 13, scope: !9607)
!9610 = !DILocation(line: 11134, column: 6, scope: !9607)
!9611 = !DILocation(line: 11137, column: 10, scope: !9588)
!9612 = !DILocation(line: 11139, column: 11, scope: !9588)
!9613 = !DILocation(line: 11139, column: 4, scope: !9588)
!9614 = !DILocation(line: 11144, column: 11, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 11144, column: 11)
!9616 = !DILocation(line: 11144, column: 17, scope: !9615)
!9617 = !DILocation(line: 11144, column: 11, scope: !9583)
!9618 = !DILocation(line: 11145, column: 9, scope: !9615)
!9619 = !DILocation(line: 11145, column: 2, scope: !9615)
!9620 = !DILocation(line: 11147, column: 11, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 11147, column: 11)
!9622 = !DILocation(line: 11147, column: 17, scope: !9621)
!9623 = !DILocation(line: 11147, column: 11, scope: !9583)
!9624 = !DILocation(line: 11150, column: 12, scope: !9583)
!9625 = !DILocation(line: 11151, column: 12, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 11151, column: 11)
!9627 = !DILocation(line: 11151, column: 11, scope: !9583)
!9628 = !DILocation(line: 11156, column: 77, scope: !9583)
!9629 = !DILocation(line: 11156, column: 51, scope: !9583)
!9630 = !DILocation(line: 11156, column: 14, scope: !9583)
!9631 = !DILocation(line: 11156, column: 7, scope: !9583)
!9632 = !DILocation(line: 0, scope: !9584)
!9633 = !DILocation(line: 11158, column: 1, scope: !9576)
!9634 = distinct !DISubprogram(name: "fold_builtin_strcat", scope: !3, file: !3, line: 11365, type: !6344, scopeLine: 11366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9635)
!9635 = !{!9636, !9637, !9638, !9639, !9642, !9645, !9646, !9647, !9648}
!9636 = !DILocalVariable(name: "loc", arg: 1, scope: !9634, file: !3, line: 11365, type: !2998)
!9637 = !DILocalVariable(name: "dst", arg: 2, scope: !9634, file: !3, line: 11365, type: !2914)
!9638 = !DILocalVariable(name: "src", arg: 3, scope: !9634, file: !3, line: 11365, type: !2914)
!9639 = !DILocalVariable(name: "p", scope: !9640, file: !3, line: 11372, type: !2871)
!9640 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 11371, column: 5)
!9641 = distinct !DILexicalBlock(scope: !9634, file: !3, line: 11367, column: 7)
!9642 = !DILocalVariable(name: "newdst", scope: !9643, file: !3, line: 11381, type: !2914)
!9643 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 11379, column: 2)
!9644 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 11378, column: 11)
!9645 = !DILocalVariable(name: "call", scope: !9643, file: !3, line: 11381, type: !2914)
!9646 = !DILocalVariable(name: "strlen_fn", scope: !9643, file: !3, line: 11382, type: !2914)
!9647 = !DILocalVariable(name: "strcpy_fn", scope: !9643, file: !3, line: 11383, type: !2914)
!9648 = !DILocalVariable(name: "len", scope: !9649, file: !3, line: 11395, type: !2914)
!9649 = distinct !DILexicalBlock(scope: !9650, file: !3, line: 11394, column: 6)
!9650 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 11393, column: 8)
!9651 = !DILocation(line: 0, scope: !9634)
!9652 = !DILocation(line: 11367, column: 8, scope: !9641)
!9653 = !DILocation(line: 11368, column: 7, scope: !9641)
!9654 = !DILocation(line: 11368, column: 11, scope: !9641)
!9655 = !DILocation(line: 11367, column: 7, scope: !9634)
!9656 = !DILocation(line: 11372, column: 23, scope: !9640)
!9657 = !DILocation(line: 0, scope: !9640)
!9658 = !DILocation(line: 11375, column: 11, scope: !9659)
!9659 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 11375, column: 11)
!9660 = !DILocation(line: 11375, column: 13, scope: !9659)
!9661 = !DILocation(line: 11375, column: 16, scope: !9659)
!9662 = !DILocation(line: 11375, column: 19, scope: !9659)
!9663 = !DILocation(line: 11375, column: 11, scope: !9640)
!9664 = !DILocation(line: 11378, column: 11, scope: !9644)
!9665 = !DILocation(line: 11378, column: 11, scope: !9640)
!9666 = !DILocation(line: 11382, column: 21, scope: !9643)
!9667 = !DILocation(line: 0, scope: !9643)
!9668 = !DILocation(line: 11383, column: 21, scope: !9643)
!9669 = !DILocation(line: 11385, column: 9, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 11385, column: 8)
!9671 = !DILocation(line: 11385, column: 23, scope: !9670)
!9672 = !DILocation(line: 11385, column: 19, scope: !9670)
!9673 = !DILocation(line: 11395, column: 19, scope: !9649)
!9674 = !DILocation(line: 0, scope: !9649)
!9675 = !DILocation(line: 11396, column: 14, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9649, file: !3, line: 11396, column: 12)
!9677 = !DILocation(line: 11396, column: 18, scope: !9676)
!9678 = !DILocation(line: 11396, column: 21, scope: !9676)
!9679 = !DILocation(line: 11396, column: 12, scope: !9649)
!9680 = !DILocation(line: 11401, column: 10, scope: !9643)
!9681 = !DILocation(line: 11404, column: 13, scope: !9643)
!9682 = !DILocation(line: 11407, column: 13, scope: !9643)
!9683 = !DILocation(line: 11409, column: 13, scope: !9643)
!9684 = !DILocation(line: 11411, column: 11, scope: !9643)
!9685 = !DILocation(line: 11412, column: 11, scope: !9643)
!9686 = !DILocation(line: 11412, column: 4, scope: !9643)
!9687 = !DILocation(line: 0, scope: !9641)
!9688 = !DILocation(line: 11416, column: 1, scope: !9634)
!9689 = distinct !DISubprogram(name: "fold_builtin_strspn", scope: !3, file: !3, line: 11489, type: !6344, scopeLine: 11490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9690)
!9690 = !{!9691, !9692, !9693, !9694, !9697, !9698}
!9691 = !DILocalVariable(name: "loc", arg: 1, scope: !9689, file: !3, line: 11489, type: !2998)
!9692 = !DILocalVariable(name: "s1", arg: 2, scope: !9689, file: !3, line: 11489, type: !2914)
!9693 = !DILocalVariable(name: "s2", arg: 3, scope: !9689, file: !3, line: 11489, type: !2914)
!9694 = !DILocalVariable(name: "p1", scope: !9695, file: !3, line: 11496, type: !2871)
!9695 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 11495, column: 5)
!9696 = distinct !DILexicalBlock(scope: !9689, file: !3, line: 11491, column: 7)
!9697 = !DILocalVariable(name: "p2", scope: !9695, file: !3, line: 11496, type: !2871)
!9698 = !DILocalVariable(name: "r", scope: !9699, file: !3, line: 11501, type: !9701)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 11500, column: 2)
!9700 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 11499, column: 11)
!9701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3342)
!9702 = !DILocation(line: 0, scope: !9689)
!9703 = !DILocation(line: 11491, column: 8, scope: !9696)
!9704 = !DILocation(line: 11492, column: 7, scope: !9696)
!9705 = !DILocation(line: 11492, column: 11, scope: !9696)
!9706 = !DILocation(line: 11491, column: 7, scope: !9689)
!9707 = !DILocation(line: 11496, column: 24, scope: !9695)
!9708 = !DILocation(line: 0, scope: !9695)
!9709 = !DILocation(line: 11496, column: 45, scope: !9695)
!9710 = !DILocation(line: 11499, column: 11, scope: !9700)
!9711 = !DILocation(line: 11499, column: 17, scope: !9700)
!9712 = !DILocation(line: 11499, column: 14, scope: !9700)
!9713 = !DILocation(line: 11501, column: 21, scope: !9699)
!9714 = !DILocation(line: 0, scope: !9699)
!9715 = !DILocation(line: 11502, column: 11, scope: !9699)
!9716 = !DILocation(line: 11506, column: 12, scope: !9717)
!9717 = distinct !DILexicalBlock(scope: !9695, file: !3, line: 11506, column: 11)
!9718 = !DILocation(line: 11506, column: 15, scope: !9717)
!9719 = !DILocation(line: 11506, column: 18, scope: !9717)
!9720 = !DILocation(line: 11506, column: 22, scope: !9717)
!9721 = !DILocation(line: 11506, column: 31, scope: !9717)
!9722 = !DILocation(line: 11506, column: 35, scope: !9717)
!9723 = !DILocation(line: 11506, column: 38, scope: !9717)
!9724 = !DILocation(line: 11506, column: 41, scope: !9717)
!9725 = !DILocation(line: 11506, column: 45, scope: !9717)
!9726 = !DILocation(line: 11506, column: 11, scope: !9695)
!9727 = !DILocation(line: 11509, column: 37, scope: !9717)
!9728 = !DILocation(line: 11509, column: 53, scope: !9717)
!9729 = !DILocation(line: 11509, column: 9, scope: !9717)
!9730 = !DILocation(line: 11509, column: 2, scope: !9717)
!9731 = !DILocation(line: 0, scope: !9696)
!9732 = !DILocation(line: 11513, column: 1, scope: !9689)
!9733 = distinct !DISubprogram(name: "fold_builtin_strcspn", scope: !3, file: !3, line: 11534, type: !6344, scopeLine: 11535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9734)
!9734 = !{!9735, !9736, !9737, !9738, !9741, !9742, !9745}
!9735 = !DILocalVariable(name: "loc", arg: 1, scope: !9733, file: !3, line: 11534, type: !2998)
!9736 = !DILocalVariable(name: "s1", arg: 2, scope: !9733, file: !3, line: 11534, type: !2914)
!9737 = !DILocalVariable(name: "s2", arg: 3, scope: !9733, file: !3, line: 11534, type: !2914)
!9738 = !DILocalVariable(name: "p1", scope: !9739, file: !3, line: 11541, type: !2871)
!9739 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 11540, column: 5)
!9740 = distinct !DILexicalBlock(scope: !9733, file: !3, line: 11536, column: 7)
!9741 = !DILocalVariable(name: "p2", scope: !9739, file: !3, line: 11541, type: !2871)
!9742 = !DILocalVariable(name: "r", scope: !9743, file: !3, line: 11546, type: !9701)
!9743 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 11545, column: 2)
!9744 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 11544, column: 11)
!9745 = !DILocalVariable(name: "fn", scope: !9746, file: !3, line: 11562, type: !2914)
!9746 = distinct !DILexicalBlock(scope: !9747, file: !3, line: 11561, column: 2)
!9747 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 11560, column: 11)
!9748 = !DILocation(line: 0, scope: !9733)
!9749 = !DILocation(line: 11536, column: 8, scope: !9740)
!9750 = !DILocation(line: 11537, column: 7, scope: !9740)
!9751 = !DILocation(line: 11537, column: 11, scope: !9740)
!9752 = !DILocation(line: 11536, column: 7, scope: !9733)
!9753 = !DILocation(line: 11541, column: 24, scope: !9739)
!9754 = !DILocation(line: 0, scope: !9739)
!9755 = !DILocation(line: 11541, column: 45, scope: !9739)
!9756 = !DILocation(line: 11544, column: 11, scope: !9744)
!9757 = !DILocation(line: 11544, column: 17, scope: !9744)
!9758 = !DILocation(line: 11544, column: 14, scope: !9744)
!9759 = !DILocation(line: 11546, column: 21, scope: !9743)
!9760 = !DILocation(line: 0, scope: !9743)
!9761 = !DILocation(line: 11547, column: 11, scope: !9743)
!9762 = !DILocation(line: 11551, column: 11, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 11551, column: 11)
!9764 = !DILocation(line: 11551, column: 14, scope: !9763)
!9765 = !DILocation(line: 11551, column: 17, scope: !9763)
!9766 = !DILocation(line: 11551, column: 21, scope: !9763)
!9767 = !DILocation(line: 11551, column: 11, scope: !9739)
!9768 = !DILocation(line: 11555, column: 38, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 11552, column: 2)
!9770 = !DILocation(line: 11556, column: 8, scope: !9769)
!9771 = !DILocation(line: 11555, column: 11, scope: !9769)
!9772 = !DILocation(line: 11555, column: 4, scope: !9769)
!9773 = !DILocation(line: 11560, column: 11, scope: !9747)
!9774 = !DILocation(line: 11560, column: 14, scope: !9747)
!9775 = !DILocation(line: 11560, column: 17, scope: !9747)
!9776 = !DILocation(line: 11560, column: 21, scope: !9747)
!9777 = !DILocation(line: 11560, column: 11, scope: !9739)
!9778 = !DILocation(line: 11562, column: 14, scope: !9746)
!9779 = !DILocation(line: 0, scope: !9746)
!9780 = !DILocation(line: 11566, column: 9, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9746, file: !3, line: 11566, column: 8)
!9782 = !DILocation(line: 11566, column: 8, scope: !9746)
!9783 = !DILocation(line: 11569, column: 11, scope: !9746)
!9784 = !DILocation(line: 11569, column: 4, scope: !9746)
!9785 = !DILocation(line: 0, scope: !9740)
!9786 = !DILocation(line: 11573, column: 1, scope: !9733)
!9787 = distinct !DISubprogram(name: "fold_builtin_strchr", scope: !3, file: !3, line: 11179, type: !8079, scopeLine: 11180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9788)
!9788 = !{!9789, !9790, !9791, !9792, !9793, !9796, !9799, !9800}
!9789 = !DILocalVariable(name: "loc", arg: 1, scope: !9787, file: !3, line: 11179, type: !2998)
!9790 = !DILocalVariable(name: "s1", arg: 2, scope: !9787, file: !3, line: 11179, type: !2914)
!9791 = !DILocalVariable(name: "s2", arg: 3, scope: !9787, file: !3, line: 11179, type: !2914)
!9792 = !DILocalVariable(name: "type", arg: 4, scope: !9787, file: !3, line: 11179, type: !2914)
!9793 = !DILocalVariable(name: "p1", scope: !9794, file: !3, line: 11186, type: !2871)
!9794 = distinct !DILexicalBlock(scope: !9795, file: !3, line: 11185, column: 5)
!9795 = distinct !DILexicalBlock(scope: !9787, file: !3, line: 11181, column: 7)
!9796 = !DILocalVariable(name: "c", scope: !9797, file: !3, line: 11194, type: !2869)
!9797 = distinct !DILexicalBlock(scope: !9798, file: !3, line: 11193, column: 2)
!9798 = distinct !DILexicalBlock(scope: !9794, file: !3, line: 11192, column: 11)
!9799 = !DILocalVariable(name: "r", scope: !9797, file: !3, line: 11195, type: !2871)
!9800 = !DILocalVariable(name: "tem", scope: !9797, file: !3, line: 11196, type: !2914)
!9801 = !DILocation(line: 0, scope: !9787)
!9802 = !DILocation(line: 11181, column: 8, scope: !9795)
!9803 = !DILocation(line: 11182, column: 7, scope: !9795)
!9804 = !DILocation(line: 11182, column: 11, scope: !9795)
!9805 = !DILocation(line: 11181, column: 7, scope: !9787)
!9806 = !DILocation(line: 11188, column: 11, scope: !9807)
!9807 = distinct !DILexicalBlock(scope: !9794, file: !3, line: 11188, column: 11)
!9808 = !DILocation(line: 11188, column: 26, scope: !9807)
!9809 = !DILocation(line: 11188, column: 11, scope: !9794)
!9810 = !DILocation(line: 11191, column: 12, scope: !9794)
!9811 = !DILocation(line: 0, scope: !9794)
!9812 = !DILocation(line: 11192, column: 14, scope: !9798)
!9813 = !DILocation(line: 11192, column: 11, scope: !9794)
!9814 = !DILocation(line: 0, scope: !9797)
!9815 = !DILocation(line: 11194, column: 4, scope: !9797)
!9816 = !DILocation(line: 11198, column: 8, scope: !9817)
!9817 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 11198, column: 8)
!9818 = !DILocation(line: 11198, column: 8, scope: !9797)
!9819 = !DILocation(line: 11201, column: 20, scope: !9797)
!9820 = !DILocation(line: 11201, column: 8, scope: !9797)
!9821 = !DILocation(line: 11203, column: 10, scope: !9822)
!9822 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 11203, column: 8)
!9823 = !DILocation(line: 11203, column: 8, scope: !9797)
!9824 = !DILocation(line: 11204, column: 13, scope: !9822)
!9825 = !DILocation(line: 11204, column: 6, scope: !9822)
!9826 = !DILocation(line: 11207, column: 10, scope: !9797)
!9827 = !DILocation(line: 11209, column: 11, scope: !9797)
!9828 = !DILocation(line: 11209, column: 4, scope: !9797)
!9829 = !DILocation(line: 11210, column: 2, scope: !9798)
!9830 = !DILocation(line: 0, scope: !9795)
!9831 = !DILocation(line: 11213, column: 1, scope: !9787)
!9832 = distinct !DISubprogram(name: "fold_builtin_strrchr", scope: !3, file: !3, line: 11234, type: !8079, scopeLine: 11235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9833)
!9833 = !{!9834, !9835, !9836, !9837, !9838, !9841, !9842, !9845, !9846}
!9834 = !DILocalVariable(name: "loc", arg: 1, scope: !9832, file: !3, line: 11234, type: !2998)
!9835 = !DILocalVariable(name: "s1", arg: 2, scope: !9832, file: !3, line: 11234, type: !2914)
!9836 = !DILocalVariable(name: "s2", arg: 3, scope: !9832, file: !3, line: 11234, type: !2914)
!9837 = !DILocalVariable(name: "type", arg: 4, scope: !9832, file: !3, line: 11234, type: !2914)
!9838 = !DILocalVariable(name: "fn", scope: !9839, file: !3, line: 11241, type: !2914)
!9839 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 11240, column: 5)
!9840 = distinct !DILexicalBlock(scope: !9832, file: !3, line: 11236, column: 7)
!9841 = !DILocalVariable(name: "p1", scope: !9839, file: !3, line: 11242, type: !2871)
!9842 = !DILocalVariable(name: "c", scope: !9843, file: !3, line: 11250, type: !2869)
!9843 = distinct !DILexicalBlock(scope: !9844, file: !3, line: 11249, column: 2)
!9844 = distinct !DILexicalBlock(scope: !9839, file: !3, line: 11248, column: 11)
!9845 = !DILocalVariable(name: "r", scope: !9843, file: !3, line: 11251, type: !2871)
!9846 = !DILocalVariable(name: "tem", scope: !9843, file: !3, line: 11252, type: !2914)
!9847 = !DILocation(line: 0, scope: !9832)
!9848 = !DILocation(line: 11236, column: 8, scope: !9840)
!9849 = !DILocation(line: 11237, column: 7, scope: !9840)
!9850 = !DILocation(line: 11237, column: 11, scope: !9840)
!9851 = !DILocation(line: 11236, column: 7, scope: !9832)
!9852 = !DILocation(line: 11244, column: 11, scope: !9853)
!9853 = distinct !DILexicalBlock(scope: !9839, file: !3, line: 11244, column: 11)
!9854 = !DILocation(line: 11244, column: 26, scope: !9853)
!9855 = !DILocation(line: 11244, column: 11, scope: !9839)
!9856 = !DILocation(line: 11247, column: 12, scope: !9839)
!9857 = !DILocation(line: 0, scope: !9839)
!9858 = !DILocation(line: 11248, column: 14, scope: !9844)
!9859 = !DILocation(line: 11248, column: 11, scope: !9839)
!9860 = !DILocation(line: 0, scope: !9843)
!9861 = !DILocation(line: 11250, column: 4, scope: !9843)
!9862 = !DILocation(line: 11254, column: 8, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 11254, column: 8)
!9864 = !DILocation(line: 11254, column: 8, scope: !9843)
!9865 = !DILocation(line: 11257, column: 21, scope: !9843)
!9866 = !DILocation(line: 11257, column: 8, scope: !9843)
!9867 = !DILocation(line: 11259, column: 10, scope: !9868)
!9868 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 11259, column: 8)
!9869 = !DILocation(line: 11259, column: 8, scope: !9843)
!9870 = !DILocation(line: 11260, column: 13, scope: !9868)
!9871 = !DILocation(line: 11260, column: 6, scope: !9868)
!9872 = !DILocation(line: 11263, column: 10, scope: !9843)
!9873 = !DILocation(line: 11265, column: 11, scope: !9843)
!9874 = !DILocation(line: 11265, column: 4, scope: !9843)
!9875 = !DILocation(line: 11266, column: 2, scope: !9844)
!9876 = !DILocation(line: 11268, column: 13, scope: !9877)
!9877 = distinct !DILexicalBlock(scope: !9839, file: !3, line: 11268, column: 11)
!9878 = !DILocation(line: 11268, column: 11, scope: !9839)
!9879 = !DILocation(line: 11271, column: 12, scope: !9839)
!9880 = !DILocation(line: 11272, column: 12, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9839, file: !3, line: 11272, column: 11)
!9882 = !DILocation(line: 11272, column: 11, scope: !9839)
!9883 = !DILocation(line: 11276, column: 14, scope: !9839)
!9884 = !DILocation(line: 11276, column: 7, scope: !9839)
!9885 = !DILocation(line: 0, scope: !9840)
!9886 = !DILocation(line: 11278, column: 1, scope: !9832)
!9887 = distinct !DISubprogram(name: "fold_builtin_stpcpy", scope: !3, file: !3, line: 8538, type: !8079, scopeLine: 8539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9888)
!9888 = !{!9889, !9890, !9891, !9892, !9893, !9894, !9895, !9896, !9897}
!9889 = !DILocalVariable(name: "loc", arg: 1, scope: !9887, file: !3, line: 8538, type: !2998)
!9890 = !DILocalVariable(name: "fndecl", arg: 2, scope: !9887, file: !3, line: 8538, type: !2914)
!9891 = !DILocalVariable(name: "dest", arg: 3, scope: !9887, file: !3, line: 8538, type: !2914)
!9892 = !DILocalVariable(name: "src", arg: 4, scope: !9887, file: !3, line: 8538, type: !2914)
!9893 = !DILocalVariable(name: "fn", scope: !9887, file: !3, line: 8540, type: !2914)
!9894 = !DILocalVariable(name: "len", scope: !9887, file: !3, line: 8540, type: !2914)
!9895 = !DILocalVariable(name: "lenp1", scope: !9887, file: !3, line: 8540, type: !2914)
!9896 = !DILocalVariable(name: "call", scope: !9887, file: !3, line: 8540, type: !2914)
!9897 = !DILocalVariable(name: "type", scope: !9887, file: !3, line: 8540, type: !2914)
!9898 = !DILocation(line: 0, scope: !9887)
!9899 = !DILocation(line: 8542, column: 8, scope: !9900)
!9900 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 8542, column: 7)
!9901 = !DILocation(line: 8543, column: 7, scope: !9900)
!9902 = !DILocation(line: 8543, column: 11, scope: !9900)
!9903 = !DILocation(line: 8542, column: 7, scope: !9887)
!9904 = !DILocation(line: 8546, column: 9, scope: !9887)
!9905 = !DILocation(line: 8547, column: 8, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 8547, column: 7)
!9907 = !DILocation(line: 8548, column: 7, scope: !9906)
!9908 = !DILocation(line: 8548, column: 10, scope: !9906)
!9909 = !DILocation(line: 8548, column: 26, scope: !9906)
!9910 = !DILocation(line: 8547, column: 7, scope: !9887)
!9911 = !DILocation(line: 8551, column: 37, scope: !9912)
!9912 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 8551, column: 7)
!9913 = !DILocation(line: 8551, column: 7, scope: !9912)
!9914 = !DILocation(line: 8553, column: 7, scope: !9912)
!9915 = !DILocation(line: 8553, column: 11, scope: !9912)
!9916 = !DILocation(line: 8551, column: 7, scope: !9887)
!9917 = !DILocation(line: 8556, column: 8, scope: !9887)
!9918 = !DILocation(line: 8557, column: 8, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9887, file: !3, line: 8557, column: 7)
!9920 = !DILocation(line: 8557, column: 7, scope: !9887)
!9921 = !DILocation(line: 8560, column: 48, scope: !9887)
!9922 = !DILocation(line: 8560, column: 11, scope: !9887)
!9923 = !DILocation(line: 8563, column: 10, scope: !9887)
!9924 = !DILocation(line: 8564, column: 10, scope: !9887)
!9925 = !DILocation(line: 8566, column: 10, scope: !9887)
!9926 = !DILocation(line: 8567, column: 32, scope: !9887)
!9927 = !DILocation(line: 8567, column: 9, scope: !9887)
!9928 = !DILocation(line: 8568, column: 10, scope: !9887)
!9929 = !DILocation(line: 8569, column: 10, scope: !9887)
!9930 = !DILocation(line: 8570, column: 10, scope: !9887)
!9931 = !DILocation(line: 8571, column: 3, scope: !9887)
!9932 = !DILocation(line: 8572, column: 1, scope: !9887)
!9933 = distinct !DISubprogram(name: "fold_builtin_strcmp", scope: !3, file: !3, line: 8734, type: !6344, scopeLine: 8735, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !9934)
!9934 = !{!9935, !9936, !9937, !9938, !9939, !9940, !9943, !9946, !9947, !9950, !9951}
!9935 = !DILocalVariable(name: "loc", arg: 1, scope: !9933, file: !3, line: 8734, type: !2998)
!9936 = !DILocalVariable(name: "arg1", arg: 2, scope: !9933, file: !3, line: 8734, type: !2914)
!9937 = !DILocalVariable(name: "arg2", arg: 3, scope: !9933, file: !3, line: 8734, type: !2914)
!9938 = !DILocalVariable(name: "p1", scope: !9933, file: !3, line: 8736, type: !2871)
!9939 = !DILocalVariable(name: "p2", scope: !9933, file: !3, line: 8736, type: !2871)
!9940 = !DILocalVariable(name: "i", scope: !9941, file: !3, line: 8751, type: !4324)
!9941 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 8750, column: 5)
!9942 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 8749, column: 7)
!9943 = !DILocalVariable(name: "cst_uchar_node", scope: !9944, file: !3, line: 8763, type: !2914)
!9944 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 8762, column: 5)
!9945 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 8761, column: 7)
!9946 = !DILocalVariable(name: "cst_uchar_ptr_node", scope: !9944, file: !3, line: 8764, type: !2914)
!9947 = !DILocalVariable(name: "cst_uchar_node", scope: !9948, file: !3, line: 8777, type: !2914)
!9948 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 8776, column: 5)
!9949 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 8775, column: 7)
!9950 = !DILocalVariable(name: "cst_uchar_ptr_node", scope: !9948, file: !3, line: 8778, type: !2914)
!9951 = !DILocalVariable(name: "temp", scope: !9948, file: !3, line: 8781, type: !2914)
!9952 = !DILocation(line: 0, scope: !9933)
!9953 = !DILocation(line: 8738, column: 8, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 8738, column: 7)
!9955 = !DILocation(line: 8739, column: 7, scope: !9954)
!9956 = !DILocation(line: 8739, column: 11, scope: !9954)
!9957 = !DILocation(line: 8738, column: 7, scope: !9933)
!9958 = !DILocation(line: 8743, column: 7, scope: !9959)
!9959 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 8743, column: 7)
!9960 = !DILocation(line: 8743, column: 7, scope: !9933)
!9961 = !DILocation(line: 8744, column: 12, scope: !9959)
!9962 = !DILocation(line: 8744, column: 5, scope: !9959)
!9963 = !DILocation(line: 8746, column: 8, scope: !9933)
!9964 = !DILocation(line: 8747, column: 8, scope: !9933)
!9965 = !DILocation(line: 8749, column: 7, scope: !9942)
!9966 = !DILocation(line: 8749, column: 13, scope: !9942)
!9967 = !DILocation(line: 8749, column: 10, scope: !9942)
!9968 = !DILocation(line: 8751, column: 21, scope: !9941)
!9969 = !DILocation(line: 0, scope: !9941)
!9970 = !DILocation(line: 8752, column: 13, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9941, file: !3, line: 8752, column: 11)
!9972 = !DILocation(line: 8752, column: 11, scope: !9941)
!9973 = !DILocation(line: 8753, column: 9, scope: !9971)
!9974 = !DILocation(line: 8753, column: 2, scope: !9971)
!9975 = !DILocation(line: 8754, column: 18, scope: !9976)
!9976 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 8754, column: 16)
!9977 = !DILocation(line: 8754, column: 16, scope: !9971)
!9978 = !DILocation(line: 8755, column: 9, scope: !9976)
!9979 = !DILocation(line: 8755, column: 2, scope: !9976)
!9980 = !DILocation(line: 8757, column: 9, scope: !9976)
!9981 = !DILocation(line: 8757, column: 2, scope: !9976)
!9982 = !DILocation(line: 8761, column: 7, scope: !9945)
!9983 = !DILocation(line: 8761, column: 10, scope: !9945)
!9984 = !DILocation(line: 8761, column: 13, scope: !9945)
!9985 = !DILocation(line: 8761, column: 17, scope: !9945)
!9986 = !DILocation(line: 8761, column: 7, scope: !9933)
!9987 = !DILocation(line: 8763, column: 29, scope: !9944)
!9988 = !DILocation(line: 0, scope: !9944)
!9989 = !DILocation(line: 8765, column: 49, scope: !9944)
!9990 = !DILocation(line: 8765, column: 4, scope: !9944)
!9991 = !DILocation(line: 8767, column: 37, scope: !9944)
!9992 = !DILocation(line: 8768, column: 11, scope: !9944)
!9993 = !DILocation(line: 8767, column: 14, scope: !9944)
!9994 = !DILocation(line: 8775, column: 7, scope: !9949)
!9995 = !DILocation(line: 8775, column: 10, scope: !9949)
!9996 = !DILocation(line: 8775, column: 13, scope: !9949)
!9997 = !DILocation(line: 8775, column: 17, scope: !9949)
!9998 = !DILocation(line: 8775, column: 7, scope: !9933)
!9999 = !DILocation(line: 8777, column: 29, scope: !9948)
!10000 = !DILocation(line: 0, scope: !9948)
!10001 = !DILocation(line: 8779, column: 49, scope: !9948)
!10002 = !DILocation(line: 8779, column: 4, scope: !9948)
!10003 = !DILocation(line: 8782, column: 27, scope: !9948)
!10004 = !DILocation(line: 8783, column: 8, scope: !9948)
!10005 = !DILocation(line: 8782, column: 4, scope: !9948)
!10006 = !DILocation(line: 8787, column: 14, scope: !9948)
!10007 = !DILocation(line: 8791, column: 1, scope: !9933)
!10008 = distinct !DISubprogram(name: "fold_builtin_strpbrk", scope: !3, file: !3, line: 11299, type: !8079, scopeLine: 11300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10009)
!10009 = !{!10010, !10011, !10012, !10013, !10014, !10017, !10018, !10019, !10022}
!10010 = !DILocalVariable(name: "loc", arg: 1, scope: !10008, file: !3, line: 11299, type: !2998)
!10011 = !DILocalVariable(name: "s1", arg: 2, scope: !10008, file: !3, line: 11299, type: !2914)
!10012 = !DILocalVariable(name: "s2", arg: 3, scope: !10008, file: !3, line: 11299, type: !2914)
!10013 = !DILocalVariable(name: "type", arg: 4, scope: !10008, file: !3, line: 11299, type: !2914)
!10014 = !DILocalVariable(name: "fn", scope: !10015, file: !3, line: 11306, type: !2914)
!10015 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 11305, column: 5)
!10016 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 11301, column: 7)
!10017 = !DILocalVariable(name: "p1", scope: !10015, file: !3, line: 11307, type: !2871)
!10018 = !DILocalVariable(name: "p2", scope: !10015, file: !3, line: 11307, type: !2871)
!10019 = !DILocalVariable(name: "r", scope: !10020, file: !3, line: 11316, type: !2871)
!10020 = distinct !DILexicalBlock(scope: !10021, file: !3, line: 11315, column: 2)
!10021 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 11314, column: 11)
!10022 = !DILocalVariable(name: "tem", scope: !10020, file: !3, line: 11317, type: !2914)
!10023 = !DILocation(line: 0, scope: !10008)
!10024 = !DILocation(line: 11301, column: 8, scope: !10016)
!10025 = !DILocation(line: 11302, column: 7, scope: !10016)
!10026 = !DILocation(line: 11302, column: 11, scope: !10016)
!10027 = !DILocation(line: 11301, column: 7, scope: !10008)
!10028 = !DILocation(line: 11309, column: 12, scope: !10015)
!10029 = !DILocation(line: 0, scope: !10015)
!10030 = !DILocation(line: 11310, column: 14, scope: !10031)
!10031 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 11310, column: 11)
!10032 = !DILocation(line: 11310, column: 11, scope: !10015)
!10033 = !DILocation(line: 11313, column: 12, scope: !10015)
!10034 = !DILocation(line: 11314, column: 14, scope: !10021)
!10035 = !DILocation(line: 11314, column: 11, scope: !10015)
!10036 = !DILocation(line: 11316, column: 20, scope: !10020)
!10037 = !DILocation(line: 0, scope: !10020)
!10038 = !DILocation(line: 11319, column: 10, scope: !10039)
!10039 = distinct !DILexicalBlock(scope: !10020, file: !3, line: 11319, column: 8)
!10040 = !DILocation(line: 11319, column: 8, scope: !10020)
!10041 = !DILocation(line: 11320, column: 13, scope: !10039)
!10042 = !DILocation(line: 11320, column: 6, scope: !10039)
!10043 = !DILocation(line: 11323, column: 10, scope: !10020)
!10044 = !DILocation(line: 11325, column: 11, scope: !10020)
!10045 = !DILocation(line: 11325, column: 4, scope: !10020)
!10046 = !DILocation(line: 11328, column: 11, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 11328, column: 11)
!10048 = !DILocation(line: 11328, column: 17, scope: !10047)
!10049 = !DILocation(line: 11328, column: 11, scope: !10015)
!10050 = !DILocation(line: 11331, column: 36, scope: !10047)
!10051 = !DILocation(line: 11331, column: 52, scope: !10047)
!10052 = !DILocation(line: 11331, column: 9, scope: !10047)
!10053 = !DILocation(line: 11331, column: 2, scope: !10047)
!10054 = !DILocation(line: 11333, column: 11, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 11333, column: 11)
!10056 = !DILocation(line: 11333, column: 17, scope: !10055)
!10057 = !DILocation(line: 11333, column: 11, scope: !10015)
!10058 = !DILocation(line: 11336, column: 12, scope: !10015)
!10059 = !DILocation(line: 11337, column: 12, scope: !10060)
!10060 = distinct !DILexicalBlock(scope: !10015, file: !3, line: 11337, column: 11)
!10061 = !DILocation(line: 11337, column: 11, scope: !10015)
!10062 = !DILocation(line: 11342, column: 77, scope: !10015)
!10063 = !DILocation(line: 11342, column: 51, scope: !10015)
!10064 = !DILocation(line: 11342, column: 14, scope: !10015)
!10065 = !DILocation(line: 11342, column: 7, scope: !10015)
!10066 = !DILocation(line: 0, scope: !10016)
!10067 = !DILocation(line: 11344, column: 1, scope: !10008)
!10068 = distinct !DISubprogram(name: "fold_builtin_expect", scope: !3, file: !3, line: 6569, type: !6344, scopeLine: 6570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10069)
!10069 = !{!10070, !10071, !10072, !10073, !10074, !10075, !10076, !10079}
!10070 = !DILocalVariable(name: "loc", arg: 1, scope: !10068, file: !3, line: 6569, type: !2998)
!10071 = !DILocalVariable(name: "arg0", arg: 2, scope: !10068, file: !3, line: 6569, type: !2914)
!10072 = !DILocalVariable(name: "arg1", arg: 3, scope: !10068, file: !3, line: 6569, type: !2914)
!10073 = !DILocalVariable(name: "inner", scope: !10068, file: !3, line: 6571, type: !2914)
!10074 = !DILocalVariable(name: "fndecl", scope: !10068, file: !3, line: 6571, type: !2914)
!10075 = !DILocalVariable(name: "code", scope: !10068, file: !3, line: 6572, type: !134)
!10076 = !DILocalVariable(name: "op0", scope: !10077, file: !3, line: 6599, type: !2914)
!10077 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 6598, column: 5)
!10078 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 6597, column: 7)
!10079 = !DILocalVariable(name: "op1", scope: !10077, file: !3, line: 6600, type: !2914)
!10080 = !DILocation(line: 0, scope: !10068)
!10081 = !DILocation(line: 6578, column: 7, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 6578, column: 7)
!10083 = !DILocation(line: 6579, column: 7, scope: !10082)
!10084 = !DILocation(line: 6579, column: 10, scope: !10082)
!10085 = !DILocation(line: 6579, column: 46, scope: !10082)
!10086 = !DILocation(line: 6578, column: 7, scope: !10068)
!10087 = !DILocation(line: 6580, column: 13, scope: !10082)
!10088 = !DILocation(line: 0, scope: !10089)
!10089 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 6582, column: 7)
!10090 = !DILocation(line: 6582, column: 7, scope: !10089)
!10091 = !DILocation(line: 6580, column: 5, scope: !10082)
!10092 = !DILocation(line: 6582, column: 25, scope: !10089)
!10093 = !DILocation(line: 6583, column: 7, scope: !10089)
!10094 = !DILocation(line: 6583, column: 20, scope: !10089)
!10095 = !DILocation(line: 6583, column: 18, scope: !10089)
!10096 = !DILocation(line: 6584, column: 7, scope: !10089)
!10097 = !DILocation(line: 6584, column: 10, scope: !10089)
!10098 = !DILocation(line: 6584, column: 39, scope: !10089)
!10099 = !DILocation(line: 6585, column: 7, scope: !10089)
!10100 = !DILocation(line: 6585, column: 10, scope: !10089)
!10101 = !DILocation(line: 6585, column: 38, scope: !10089)
!10102 = !DILocation(line: 6582, column: 7, scope: !10068)
!10103 = !DILocation(line: 6591, column: 3, scope: !10068)
!10104 = !DILocation(line: 6591, column: 10, scope: !10068)
!10105 = !DILocation(line: 6591, column: 28, scope: !10068)
!10106 = !DILocation(line: 6592, column: 3, scope: !10068)
!10107 = !DILocation(line: 6592, column: 6, scope: !10068)
!10108 = !DILocation(line: 6593, column: 6, scope: !10068)
!10109 = distinct !{!10109, !10103, !10110}
!10110 = !DILocation(line: 6594, column: 13, scope: !10068)
!10111 = !DILocation(line: 6596, column: 10, scope: !10068)
!10112 = !DILocation(line: 6597, column: 32, scope: !10078)
!10113 = !DILocation(line: 6599, column: 18, scope: !10077)
!10114 = !DILocation(line: 0, scope: !10077)
!10115 = !DILocation(line: 6600, column: 18, scope: !10077)
!10116 = !DILocation(line: 6602, column: 13, scope: !10077)
!10117 = !DILocation(line: 6603, column: 13, scope: !10077)
!10118 = !DILocation(line: 6604, column: 15, scope: !10077)
!10119 = !DILocation(line: 6606, column: 37, scope: !10077)
!10120 = !DILocation(line: 6606, column: 14, scope: !10077)
!10121 = !DILocation(line: 6610, column: 8, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 6610, column: 7)
!10123 = !DILocation(line: 6610, column: 7, scope: !10068)
!10124 = !DILocation(line: 6617, column: 3, scope: !10068)
!10125 = !DILocation(line: 6618, column: 7, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 6618, column: 7)
!10127 = !DILocation(line: 6618, column: 25, scope: !10126)
!10128 = !DILocation(line: 6618, column: 7, scope: !10068)
!10129 = !DILocation(line: 6625, column: 7, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 6619, column: 5)
!10131 = !DILocation(line: 6622, column: 12, scope: !10132)
!10132 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 6621, column: 2)
!10133 = !DILocation(line: 6624, column: 14, scope: !10130)
!10134 = !DILocation(line: 6624, column: 32, scope: !10130)
!10135 = distinct !{!10135, !10136, !10137}
!10136 = !DILocation(line: 6620, column: 7, scope: !10130)
!10137 = !DILocation(line: 6625, column: 40, scope: !10130)
!10138 = !DILocation(line: 6626, column: 30, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10130, file: !3, line: 6626, column: 11)
!10140 = !DILocation(line: 6627, column: 12, scope: !10139)
!10141 = !DILocation(line: 6627, column: 33, scope: !10139)
!10142 = !DILocation(line: 6628, column: 4, scope: !10139)
!10143 = !DILocation(line: 6628, column: 7, scope: !10139)
!10144 = !DILocation(line: 6626, column: 11, scope: !10130)
!10145 = !DILocation(line: 6633, column: 3, scope: !10068)
!10146 = !DILocation(line: 6634, column: 1, scope: !10068)
!10147 = distinct !DISubprogram(name: "fold_builtin_pow", scope: !3, file: !3, line: 7854, type: !6050, scopeLine: 7855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10148)
!10148 = !{!10149, !10150, !10151, !10152, !10153}
!10149 = !DILocalVariable(name: "loc", arg: 1, scope: !10147, file: !3, line: 7854, type: !2998)
!10150 = !DILocalVariable(name: "fndecl", arg: 2, scope: !10147, file: !3, line: 7854, type: !2914)
!10151 = !DILocalVariable(name: "arg0", arg: 3, scope: !10147, file: !3, line: 7854, type: !2914)
!10152 = !DILocalVariable(name: "arg1", arg: 4, scope: !10147, file: !3, line: 7854, type: !2914)
!10153 = !DILocalVariable(name: "type", arg: 5, scope: !10147, file: !3, line: 7854, type: !2914)
!10154 = !DILocation(line: 0, scope: !10147)
!10155 = !DILocation(line: 7857, column: 7, scope: !10147)
!10156 = distinct !DISubprogram(name: "fold_builtin_powi", scope: !3, file: !3, line: 8010, type: !6050, scopeLine: 8012, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10157)
!10157 = !{!10158, !10159, !10160, !10161, !10162, !10163, !10166}
!10158 = !DILocalVariable(name: "loc", arg: 1, scope: !10156, file: !3, line: 8010, type: !2998)
!10159 = !DILocalVariable(name: "fndecl", arg: 2, scope: !10156, file: !3, line: 8010, type: !2914)
!10160 = !DILocalVariable(name: "arg0", arg: 3, scope: !10156, file: !3, line: 8011, type: !2914)
!10161 = !DILocalVariable(name: "arg1", arg: 4, scope: !10156, file: !3, line: 8011, type: !2914)
!10162 = !DILocalVariable(name: "type", arg: 5, scope: !10156, file: !3, line: 8011, type: !2914)
!10163 = !DILocalVariable(name: "c", scope: !10164, file: !3, line: 8023, type: !2929)
!10164 = distinct !DILexicalBlock(scope: !10165, file: !3, line: 8022, column: 5)
!10165 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 8021, column: 7)
!10166 = !DILocalVariable(name: "x", scope: !10167, file: !3, line: 8029, type: !2936)
!10167 = distinct !DILexicalBlock(scope: !10168, file: !3, line: 8028, column: 2)
!10168 = distinct !DILexicalBlock(scope: !10164, file: !3, line: 8026, column: 11)
!10169 = !DILocation(line: 0, scope: !10156)
!10170 = !DILocation(line: 8013, column: 8, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 8013, column: 7)
!10172 = !DILocation(line: 8014, column: 7, scope: !10171)
!10173 = !DILocation(line: 8014, column: 11, scope: !10171)
!10174 = !DILocation(line: 8013, column: 7, scope: !10156)
!10175 = !DILocation(line: 8018, column: 7, scope: !10176)
!10176 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 8018, column: 7)
!10177 = !DILocation(line: 8018, column: 7, scope: !10156)
!10178 = !DILocation(line: 8019, column: 45, scope: !10176)
!10179 = !DILocation(line: 8019, column: 12, scope: !10176)
!10180 = !DILocation(line: 8019, column: 5, scope: !10176)
!10181 = !DILocation(line: 8021, column: 7, scope: !10165)
!10182 = !DILocation(line: 8021, column: 7, scope: !10156)
!10183 = !DILocation(line: 8023, column: 25, scope: !10164)
!10184 = !DILocation(line: 0, scope: !10164)
!10185 = !DILocation(line: 8026, column: 11, scope: !10168)
!10186 = !DILocation(line: 8026, column: 28, scope: !10168)
!10187 = !DILocation(line: 8027, column: 4, scope: !10168)
!10188 = !DILocation(line: 8027, column: 8, scope: !10168)
!10189 = !DILocation(line: 8026, column: 11, scope: !10164)
!10190 = !DILocation(line: 8029, column: 4, scope: !10167)
!10191 = !DILocation(line: 8030, column: 8, scope: !10167)
!10192 = !DILocation(line: 8031, column: 19, scope: !10167)
!10193 = !DILocation(line: 0, scope: !10167)
!10194 = !DILocation(line: 8031, column: 4, scope: !10167)
!10195 = !DILocation(line: 8032, column: 11, scope: !10167)
!10196 = !DILocation(line: 8033, column: 2, scope: !10168)
!10197 = !DILocation(line: 8036, column: 11, scope: !10164)
!10198 = !DILocation(line: 8037, column: 42, scope: !10199)
!10199 = distinct !DILexicalBlock(scope: !10164, file: !3, line: 8036, column: 11)
!10200 = !DILocation(line: 8037, column: 9, scope: !10199)
!10201 = !DILocation(line: 8037, column: 2, scope: !10199)
!10202 = !DILocation(line: 8046, column: 9, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10164, file: !3, line: 8045, column: 11)
!10204 = !DILocation(line: 8046, column: 2, scope: !10203)
!10205 = !DILocation(line: 8048, column: 5, scope: !10165)
!10206 = !DILocation(line: 8050, column: 3, scope: !10156)
!10207 = !DILocation(line: 8051, column: 1, scope: !10156)
!10208 = distinct !DISubprogram(name: "fold_builtin_copysign", scope: !3, file: !3, line: 8927, type: !6050, scopeLine: 8929, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10209)
!10209 = !{!10210, !10211, !10212, !10213, !10214, !10215, !10216, !10219}
!10210 = !DILocalVariable(name: "loc", arg: 1, scope: !10208, file: !3, line: 8927, type: !2998)
!10211 = !DILocalVariable(name: "fndecl", arg: 2, scope: !10208, file: !3, line: 8927, type: !2914)
!10212 = !DILocalVariable(name: "arg1", arg: 3, scope: !10208, file: !3, line: 8928, type: !2914)
!10213 = !DILocalVariable(name: "arg2", arg: 4, scope: !10208, file: !3, line: 8928, type: !2914)
!10214 = !DILocalVariable(name: "type", arg: 5, scope: !10208, file: !3, line: 8928, type: !2914)
!10215 = !DILocalVariable(name: "tem", scope: !10208, file: !3, line: 8930, type: !2914)
!10216 = !DILocalVariable(name: "c1", scope: !10217, file: !3, line: 8946, type: !2936)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 8945, column: 5)
!10218 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 8941, column: 7)
!10219 = !DILocalVariable(name: "c2", scope: !10217, file: !3, line: 8946, type: !2936)
!10220 = !DILocation(line: 0, scope: !10208)
!10221 = !DILocation(line: 8932, column: 8, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 8932, column: 7)
!10223 = !DILocation(line: 8933, column: 7, scope: !10222)
!10224 = !DILocation(line: 8933, column: 11, scope: !10222)
!10225 = !DILocation(line: 8932, column: 7, scope: !10208)
!10226 = !DILocation(line: 8937, column: 7, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 8937, column: 7)
!10228 = !DILocation(line: 8937, column: 7, scope: !10208)
!10229 = !DILocation(line: 8938, column: 12, scope: !10227)
!10230 = !DILocation(line: 8938, column: 5, scope: !10227)
!10231 = !DILocation(line: 8941, column: 7, scope: !10218)
!10232 = !DILocation(line: 8941, column: 24, scope: !10218)
!10233 = !DILocation(line: 8942, column: 7, scope: !10218)
!10234 = !DILocation(line: 8942, column: 10, scope: !10218)
!10235 = !DILocation(line: 8942, column: 27, scope: !10218)
!10236 = !DILocation(line: 8943, column: 7, scope: !10218)
!10237 = !DILocation(line: 8943, column: 11, scope: !10218)
!10238 = !DILocation(line: 8944, column: 7, scope: !10218)
!10239 = !DILocation(line: 8944, column: 11, scope: !10218)
!10240 = !DILocation(line: 8941, column: 7, scope: !10208)
!10241 = !DILocation(line: 8946, column: 7, scope: !10217)
!10242 = !DILocation(line: 8948, column: 12, scope: !10217)
!10243 = !DILocation(line: 8949, column: 12, scope: !10217)
!10244 = !DILocation(line: 0, scope: !10217)
!10245 = !DILocation(line: 8951, column: 7, scope: !10217)
!10246 = !DILocation(line: 8952, column: 14, scope: !10217)
!10247 = !DILocation(line: 8953, column: 5, scope: !10218)
!10248 = !DILocation(line: 8957, column: 7, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 8957, column: 7)
!10250 = !DILocation(line: 8957, column: 7, scope: !10208)
!10251 = !DILocation(line: 8959, column: 9, scope: !10249)
!10252 = !DILocation(line: 8958, column: 12, scope: !10249)
!10253 = !DILocation(line: 8958, column: 5, scope: !10249)
!10254 = !DILocation(line: 8963, column: 9, scope: !10208)
!10255 = !DILocation(line: 8964, column: 7, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 8964, column: 7)
!10257 = !DILocation(line: 8964, column: 7, scope: !10208)
!10258 = !DILocation(line: 8965, column: 12, scope: !10256)
!10259 = !DILocation(line: 8965, column: 5, scope: !10256)
!10260 = !DILocation(line: 8968, column: 1, scope: !10208)
!10261 = distinct !DISubprogram(name: "fold_builtin_fmin_fmax", scope: !3, file: !3, line: 9058, type: !7702, scopeLine: 9060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10262)
!10262 = !{!10263, !10264, !10265, !10266, !10267}
!10263 = !DILocalVariable(name: "loc", arg: 1, scope: !10261, file: !3, line: 9058, type: !2998)
!10264 = !DILocalVariable(name: "arg0", arg: 2, scope: !10261, file: !3, line: 9058, type: !2914)
!10265 = !DILocalVariable(name: "arg1", arg: 3, scope: !10261, file: !3, line: 9058, type: !2914)
!10266 = !DILocalVariable(name: "type", arg: 4, scope: !10261, file: !3, line: 9059, type: !2914)
!10267 = !DILocalVariable(name: "max", arg: 5, scope: !10261, file: !3, line: 9059, type: !2866)
!10268 = !DILocation(line: 0, scope: !10261)
!10269 = !DILocation(line: 9062, column: 7, scope: !10261)
!10270 = distinct !DISubprogram(name: "fold_builtin_unordered_cmp", scope: !3, file: !3, line: 9643, type: !10271, scopeLine: 9646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10273)
!10271 = !DISubroutineType(types: !10272)
!10272 = !{!2914, !2998, !2914, !2914, !2914, !134, !134}
!10273 = !{!10274, !10275, !10276, !10277, !10278, !10279, !10280, !10281, !10282, !10283, !10284, !10285, !10286}
!10274 = !DILocalVariable(name: "loc", arg: 1, scope: !10270, file: !3, line: 9643, type: !2998)
!10275 = !DILocalVariable(name: "fndecl", arg: 2, scope: !10270, file: !3, line: 9643, type: !2914)
!10276 = !DILocalVariable(name: "arg0", arg: 3, scope: !10270, file: !3, line: 9643, type: !2914)
!10277 = !DILocalVariable(name: "arg1", arg: 4, scope: !10270, file: !3, line: 9643, type: !2914)
!10278 = !DILocalVariable(name: "unordered_code", arg: 5, scope: !10270, file: !3, line: 9644, type: !134)
!10279 = !DILocalVariable(name: "ordered_code", arg: 6, scope: !10270, file: !3, line: 9645, type: !134)
!10280 = !DILocalVariable(name: "type", scope: !10270, file: !3, line: 9647, type: !2914)
!10281 = !DILocalVariable(name: "code", scope: !10270, file: !3, line: 9648, type: !134)
!10282 = !DILocalVariable(name: "type0", scope: !10270, file: !3, line: 9649, type: !2914)
!10283 = !DILocalVariable(name: "type1", scope: !10270, file: !3, line: 9649, type: !2914)
!10284 = !DILocalVariable(name: "code0", scope: !10270, file: !3, line: 9650, type: !134)
!10285 = !DILocalVariable(name: "code1", scope: !10270, file: !3, line: 9650, type: !134)
!10286 = !DILocalVariable(name: "cmp_type", scope: !10270, file: !3, line: 9651, type: !2914)
!10287 = !DILocation(line: 0, scope: !10270)
!10288 = !DILocation(line: 9647, column: 15, scope: !10270)
!10289 = !DILocation(line: 9653, column: 11, scope: !10270)
!10290 = !DILocation(line: 9654, column: 11, scope: !10270)
!10291 = !DILocation(line: 9656, column: 11, scope: !10270)
!10292 = !DILocation(line: 9657, column: 11, scope: !10270)
!10293 = !DILocation(line: 9659, column: 13, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 9659, column: 7)
!10295 = !DILocation(line: 9659, column: 35, scope: !10294)
!10296 = !DILocation(line: 9659, column: 26, scope: !10294)
!10297 = !DILocation(line: 9661, column: 16, scope: !10294)
!10298 = !DILocation(line: 9661, column: 42, scope: !10294)
!10299 = !DILocation(line: 9661, column: 39, scope: !10294)
!10300 = !DILocation(line: 9661, column: 5, scope: !10294)
!10301 = !DILocation(line: 9663, column: 40, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 9663, column: 12)
!10303 = !DILocation(line: 9663, column: 31, scope: !10302)
!10304 = !DILocation(line: 9665, column: 18, scope: !10305)
!10305 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 9665, column: 12)
!10306 = !DILocation(line: 9665, column: 34, scope: !10305)
!10307 = !DILocation(line: 0, scope: !10294)
!10308 = !DILocation(line: 9668, column: 10, scope: !10270)
!10309 = !DILocation(line: 9669, column: 10, scope: !10270)
!10310 = !DILocation(line: 9671, column: 22, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10270, file: !3, line: 9671, column: 7)
!10312 = !DILocation(line: 9671, column: 7, scope: !10270)
!10313 = !DILocation(line: 9673, column: 12, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10315, file: !3, line: 9673, column: 11)
!10315 = distinct !DILexicalBlock(scope: !10311, file: !3, line: 9672, column: 5)
!10316 = !DILocation(line: 9674, column: 43, scope: !10314)
!10317 = !DILocation(line: 9674, column: 9, scope: !10314)
!10318 = !DILocation(line: 9674, column: 2, scope: !10314)
!10319 = !DILocation(line: 9675, column: 14, scope: !10315)
!10320 = !DILocation(line: 9675, column: 7, scope: !10315)
!10321 = !DILocation(line: 9678, column: 10, scope: !10270)
!10322 = !DILocation(line: 9680, column: 10, scope: !10270)
!10323 = !DILocation(line: 9680, column: 3, scope: !10270)
!10324 = !DILocation(line: 9682, column: 1, scope: !10270)
!10325 = distinct !DISubprogram(name: "fold_builtin_sprintf", scope: !3, file: !3, line: 11757, type: !10326, scopeLine: 11759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10328)
!10326 = !DISubroutineType(types: !10327)
!10327 = !{!2914, !2998, !2914, !2914, !2914, !1249}
!10328 = !{!10329, !10330, !10331, !10332, !10333, !10334, !10335, !10336, !10337, !10340}
!10329 = !DILocalVariable(name: "loc", arg: 1, scope: !10325, file: !3, line: 11757, type: !2998)
!10330 = !DILocalVariable(name: "dest", arg: 2, scope: !10325, file: !3, line: 11757, type: !2914)
!10331 = !DILocalVariable(name: "fmt", arg: 3, scope: !10325, file: !3, line: 11757, type: !2914)
!10332 = !DILocalVariable(name: "orig", arg: 4, scope: !10325, file: !3, line: 11758, type: !2914)
!10333 = !DILocalVariable(name: "ignored", arg: 5, scope: !10325, file: !3, line: 11758, type: !1249)
!10334 = !DILocalVariable(name: "call", scope: !10325, file: !3, line: 11760, type: !2914)
!10335 = !DILocalVariable(name: "retval", scope: !10325, file: !3, line: 11760, type: !2914)
!10336 = !DILocalVariable(name: "fmt_str", scope: !10325, file: !3, line: 11761, type: !2871)
!10337 = !DILocalVariable(name: "fn", scope: !10338, file: !3, line: 11786, type: !2914)
!10338 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 11785, column: 5)
!10339 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 11784, column: 7)
!10340 = !DILocalVariable(name: "fn", scope: !10341, file: !3, line: 11805, type: !2914)
!10341 = distinct !DILexicalBlock(scope: !10342, file: !3, line: 11804, column: 5)
!10342 = distinct !DILexicalBlock(scope: !10339, file: !3, line: 11803, column: 12)
!10343 = !DILocation(line: 0, scope: !10325)
!10344 = !DILocation(line: 11766, column: 8, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 11766, column: 7)
!10346 = !DILocation(line: 11767, column: 7, scope: !10345)
!10347 = !DILocation(line: 11767, column: 11, scope: !10345)
!10348 = !DILocation(line: 11766, column: 7, scope: !10325)
!10349 = !DILocation(line: 11769, column: 7, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 11769, column: 7)
!10351 = !DILocation(line: 11769, column: 12, scope: !10350)
!10352 = !DILocation(line: 11769, column: 16, scope: !10350)
!10353 = !DILocation(line: 11769, column: 7, scope: !10325)
!10354 = !DILocation(line: 11773, column: 13, scope: !10325)
!10355 = !DILocation(line: 11774, column: 15, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 11774, column: 7)
!10357 = !DILocation(line: 11774, column: 7, scope: !10325)
!10358 = !DILocation(line: 11780, column: 8, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 11780, column: 7)
!10360 = !DILocation(line: 11780, column: 7, scope: !10325)
!10361 = !DILocation(line: 11784, column: 24, scope: !10339)
!10362 = !DILocation(line: 11784, column: 7, scope: !10339)
!10363 = !DILocation(line: 11784, column: 40, scope: !10339)
!10364 = !DILocation(line: 11784, column: 7, scope: !10325)
!10365 = !DILocation(line: 11786, column: 17, scope: !10338)
!10366 = !DILocation(line: 0, scope: !10338)
!10367 = !DILocation(line: 11788, column: 12, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 11788, column: 11)
!10369 = !DILocation(line: 11792, column: 11, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 11792, column: 11)
!10371 = !DILocation(line: 11788, column: 11, scope: !10338)
!10372 = !DILocation(line: 11797, column: 14, scope: !10338)
!10373 = !DILocation(line: 11798, column: 12, scope: !10374)
!10374 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 11798, column: 11)
!10375 = !DILocation(line: 11798, column: 11, scope: !10338)
!10376 = !DILocation(line: 11799, column: 37, scope: !10374)
!10377 = !DILocation(line: 11799, column: 11, scope: !10374)
!10378 = !DILocation(line: 11799, column: 2, scope: !10374)
!10379 = !DILocation(line: 11778, column: 10, scope: !10325)
!10380 = !DILocation(line: 11803, column: 23, scope: !10342)
!10381 = !DILocation(line: 11803, column: 58, scope: !10342)
!10382 = !DILocation(line: 11803, column: 12, scope: !10339)
!10383 = !DILocation(line: 11806, column: 12, scope: !10341)
!10384 = !DILocation(line: 0, scope: !10341)
!10385 = !DILocation(line: 11808, column: 12, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 11808, column: 11)
!10387 = !DILocation(line: 11812, column: 12, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 11812, column: 11)
!10389 = !DILocation(line: 11808, column: 11, scope: !10341)
!10390 = !DILocation(line: 11816, column: 12, scope: !10391)
!10391 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 11816, column: 11)
!10392 = !DILocation(line: 11816, column: 11, scope: !10341)
!10393 = !DILocation(line: 11818, column: 13, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 11817, column: 2)
!10395 = !DILocation(line: 11819, column: 9, scope: !10396)
!10396 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 11819, column: 8)
!10397 = !DILocation(line: 11819, column: 16, scope: !10396)
!10398 = !DILocation(line: 11819, column: 19, scope: !10396)
!10399 = !DILocation(line: 11819, column: 38, scope: !10396)
!10400 = !DILocation(line: 11819, column: 8, scope: !10394)
!10401 = !DILocation(line: 11822, column: 14, scope: !10341)
!10402 = !DILocation(line: 11823, column: 5, scope: !10342)
!10403 = !DILocation(line: 11825, column: 7, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 11825, column: 7)
!10405 = !DILocation(line: 11825, column: 15, scope: !10404)
!10406 = !DILocation(line: 11825, column: 12, scope: !10404)
!10407 = !DILocation(line: 11828, column: 8, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10404, file: !3, line: 11826, column: 5)
!10409 = !DILocation(line: 11827, column: 16, scope: !10408)
!10410 = !DILocation(line: 11830, column: 14, scope: !10408)
!10411 = !DILocation(line: 11830, column: 7, scope: !10408)
!10412 = !DILocation(line: 11834, column: 1, scope: !10325)
!10413 = distinct !DISubprogram(name: "fold_builtin_object_size", scope: !3, file: !3, line: 12144, type: !8141, scopeLine: 12145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10414)
!10414 = !{!10415, !10416, !10417, !10418, !10419, !10423, !10426}
!10415 = !DILocalVariable(name: "ptr", arg: 1, scope: !10413, file: !3, line: 12144, type: !2914)
!10416 = !DILocalVariable(name: "ost", arg: 2, scope: !10413, file: !3, line: 12144, type: !2914)
!10417 = !DILocalVariable(name: "ret", scope: !10413, file: !3, line: 12146, type: !2914)
!10418 = !DILocalVariable(name: "object_size_type", scope: !10413, file: !3, line: 12147, type: !1249)
!10419 = !DILocalVariable(name: "bytes", scope: !10420, file: !3, line: 12174, type: !2927)
!10420 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 12173, column: 5)
!10421 = distinct !DILexicalBlock(scope: !10422, file: !3, line: 12172, column: 12)
!10422 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 12168, column: 7)
!10423 = !DILocalVariable(name: "low", scope: !10424, file: !3, line: 12187, type: !2927)
!10424 = distinct !DILexicalBlock(scope: !10425, file: !3, line: 12186, column: 5)
!10425 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 12185, column: 7)
!10426 = !DILocalVariable(name: "high", scope: !10424, file: !3, line: 12188, type: !2929)
!10427 = !DILocation(line: 0, scope: !10413)
!10428 = !DILocation(line: 12149, column: 8, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 12149, column: 7)
!10430 = !DILocation(line: 12150, column: 7, scope: !10429)
!10431 = !DILocation(line: 12150, column: 11, scope: !10429)
!10432 = !DILocation(line: 12149, column: 7, scope: !10413)
!10433 = !DILocation(line: 12153, column: 3, scope: !10413)
!10434 = !DILocation(line: 12155, column: 7, scope: !10435)
!10435 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 12155, column: 7)
!10436 = !DILocation(line: 12155, column: 23, scope: !10435)
!10437 = !DILocation(line: 12156, column: 7, scope: !10435)
!10438 = !DILocation(line: 12156, column: 10, scope: !10435)
!10439 = !DILocation(line: 12156, column: 33, scope: !10435)
!10440 = !DILocation(line: 12157, column: 7, scope: !10435)
!10441 = !DILocation(line: 12157, column: 10, scope: !10435)
!10442 = !DILocation(line: 12157, column: 36, scope: !10435)
!10443 = !DILocation(line: 12155, column: 7, scope: !10413)
!10444 = !DILocation(line: 12160, column: 22, scope: !10413)
!10445 = !DILocation(line: 12165, column: 7, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 12165, column: 7)
!10447 = !DILocation(line: 12165, column: 7, scope: !10413)
!10448 = !DILocation(line: 12166, column: 32, scope: !10446)
!10449 = !DILocation(line: 12166, column: 65, scope: !10446)
!10450 = !DILocation(line: 12166, column: 48, scope: !10446)
!10451 = !DILocation(line: 12166, column: 12, scope: !10446)
!10452 = !DILocation(line: 12166, column: 5, scope: !10446)
!10453 = !DILocation(line: 12168, column: 23, scope: !10422)
!10454 = !DILocation(line: 12168, column: 7, scope: !10413)
!10455 = !DILocation(line: 12169, column: 27, scope: !10422)
!10456 = !DILocation(line: 12170, column: 6, scope: !10422)
!10457 = !DILocation(line: 12169, column: 11, scope: !10422)
!10458 = !DILocation(line: 12169, column: 5, scope: !10422)
!10459 = !DILocation(line: 12172, column: 28, scope: !10421)
!10460 = !DILocation(line: 12172, column: 12, scope: !10422)
!10461 = !DILocation(line: 12179, column: 15, scope: !10420)
!10462 = !DILocation(line: 0, scope: !10420)
!10463 = !DILocation(line: 12180, column: 63, scope: !10464)
!10464 = distinct !DILexicalBlock(scope: !10420, file: !3, line: 12180, column: 11)
!10465 = !DILocation(line: 12180, column: 20, scope: !10464)
!10466 = !DILocation(line: 12180, column: 17, scope: !10464)
!10467 = !DILocation(line: 12180, column: 11, scope: !10420)
!10468 = !DILocation(line: 12182, column: 24, scope: !10464)
!10469 = !DILocation(line: 12182, column: 8, scope: !10464)
!10470 = !DILocation(line: 12182, column: 2, scope: !10464)
!10471 = !DILocation(line: 0, scope: !10422)
!10472 = !DILocation(line: 12185, column: 7, scope: !10425)
!10473 = !DILocation(line: 12185, column: 7, scope: !10413)
!10474 = !DILocation(line: 12187, column: 7, scope: !10424)
!10475 = !DILocation(line: 12187, column: 36, scope: !10424)
!10476 = !DILocation(line: 0, scope: !10424)
!10477 = !DILocation(line: 12187, column: 30, scope: !10424)
!10478 = !DILocation(line: 12188, column: 7, scope: !10424)
!10479 = !DILocation(line: 12188, column: 28, scope: !10424)
!10480 = !DILocation(line: 12188, column: 21, scope: !10424)
!10481 = !DILocation(line: 12189, column: 52, scope: !10482)
!10482 = distinct !DILexicalBlock(scope: !10424, file: !3, line: 12189, column: 11)
!10483 = !DILocation(line: 12189, column: 11, scope: !10482)
!10484 = !DILocation(line: 12189, column: 11, scope: !10424)
!10485 = !DILocation(line: 12191, column: 5, scope: !10425)
!10486 = !DILocation(line: 12191, column: 5, scope: !10424)
!10487 = !DILocation(line: 12194, column: 1, scope: !10413)
!10488 = distinct !DISubprogram(name: "fold_builtin_fprintf", scope: !3, file: !3, line: 12814, type: !10489, scopeLine: 12817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10491)
!10489 = !DISubroutineType(types: !10490)
!10490 = !{!2914, !2998, !2914, !2914, !2914, !2914, !2866, !527}
!10491 = !{!10492, !10493, !10494, !10495, !10496, !10497, !10498, !10499, !10500, !10501, !10502}
!10492 = !DILocalVariable(name: "loc", arg: 1, scope: !10488, file: !3, line: 12814, type: !2998)
!10493 = !DILocalVariable(name: "fndecl", arg: 2, scope: !10488, file: !3, line: 12814, type: !2914)
!10494 = !DILocalVariable(name: "fp", arg: 3, scope: !10488, file: !3, line: 12814, type: !2914)
!10495 = !DILocalVariable(name: "fmt", arg: 4, scope: !10488, file: !3, line: 12815, type: !2914)
!10496 = !DILocalVariable(name: "arg", arg: 5, scope: !10488, file: !3, line: 12815, type: !2914)
!10497 = !DILocalVariable(name: "ignore", arg: 6, scope: !10488, file: !3, line: 12815, type: !2866)
!10498 = !DILocalVariable(name: "fcode", arg: 7, scope: !10488, file: !3, line: 12816, type: !527)
!10499 = !DILocalVariable(name: "fn_fputc", scope: !10488, file: !3, line: 12818, type: !2914)
!10500 = !DILocalVariable(name: "fn_fputs", scope: !10488, file: !3, line: 12818, type: !2914)
!10501 = !DILocalVariable(name: "call", scope: !10488, file: !3, line: 12818, type: !2914)
!10502 = !DILocalVariable(name: "fmt_str", scope: !10488, file: !3, line: 12819, type: !2871)
!10503 = !DILocation(line: 0, scope: !10488)
!10504 = !DILocation(line: 12822, column: 9, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 12822, column: 7)
!10506 = !DILocation(line: 12822, column: 7, scope: !10488)
!10507 = !DILocation(line: 12826, column: 8, scope: !10508)
!10508 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 12826, column: 7)
!10509 = !DILocation(line: 12826, column: 7, scope: !10488)
!10510 = !DILocation(line: 12828, column: 8, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 12828, column: 7)
!10512 = !DILocation(line: 12828, column: 7, scope: !10488)
!10513 = !DILocation(line: 12832, column: 13, scope: !10488)
!10514 = !DILocation(line: 12833, column: 15, scope: !10515)
!10515 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 12833, column: 7)
!10516 = !DILocation(line: 12833, column: 7, scope: !10488)
!10517 = !DILocation(line: 12836, column: 13, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 12836, column: 7)
!10519 = !DILocation(line: 12836, column: 7, scope: !10488)
!10520 = !DILocation(line: 12849, column: 8, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 12849, column: 7)
!10522 = !DILocation(line: 12849, column: 7, scope: !10488)
!10523 = !DILocation(line: 12853, column: 24, scope: !10524)
!10524 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 12853, column: 7)
!10525 = !DILocation(line: 12853, column: 7, scope: !10524)
!10526 = !DILocation(line: 12853, column: 40, scope: !10524)
!10527 = !DILocation(line: 12853, column: 7, scope: !10488)
!10528 = !DILocation(line: 12855, column: 38, scope: !10529)
!10529 = distinct !DILexicalBlock(scope: !10530, file: !3, line: 12855, column: 11)
!10530 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 12854, column: 5)
!10531 = !DILocation(line: 12856, column: 7, scope: !10529)
!10532 = !DILocation(line: 12855, column: 11, scope: !10530)
!10533 = !DILocation(line: 12860, column: 11, scope: !10534)
!10534 = distinct !DILexicalBlock(scope: !10530, file: !3, line: 12860, column: 11)
!10535 = !DILocation(line: 12860, column: 22, scope: !10534)
!10536 = !DILocation(line: 12860, column: 11, scope: !10530)
!10537 = !DILocation(line: 12864, column: 8, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10539, file: !3, line: 12864, column: 8)
!10539 = distinct !DILexicalBlock(scope: !10534, file: !3, line: 12861, column: 2)
!10540 = !DILocation(line: 12864, column: 8, scope: !10539)
!10541 = !DILocation(line: 12867, column: 26, scope: !10539)
!10542 = !DILocation(line: 12867, column: 11, scope: !10539)
!10543 = !DILocation(line: 12867, column: 4, scope: !10539)
!10544 = !DILocation(line: 12873, column: 11, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10530, file: !3, line: 12873, column: 11)
!10546 = !DILocation(line: 12873, column: 11, scope: !10530)
!10547 = !DILocation(line: 12874, column: 9, scope: !10545)
!10548 = !DILocation(line: 12874, column: 2, scope: !10545)
!10549 = !DILocation(line: 12878, column: 39, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10524, file: !3, line: 12878, column: 12)
!10551 = !DILocation(line: 12882, column: 12, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10550, file: !3, line: 12882, column: 12)
!10553 = !DILocation(line: 12882, column: 47, scope: !10552)
!10554 = !DILocation(line: 12882, column: 12, scope: !10550)
!10555 = !DILocation(line: 12884, column: 12, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 12884, column: 11)
!10557 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 12883, column: 5)
!10558 = !DILocation(line: 12884, column: 16, scope: !10556)
!10559 = !DILocation(line: 12884, column: 20, scope: !10556)
!10560 = !DILocation(line: 12884, column: 11, scope: !10557)
!10561 = !DILocation(line: 12886, column: 11, scope: !10562)
!10562 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 12886, column: 11)
!10563 = !DILocation(line: 12886, column: 11, scope: !10557)
!10564 = !DILocation(line: 12887, column: 9, scope: !10562)
!10565 = !DILocation(line: 12887, column: 2, scope: !10562)
!10566 = !DILocation(line: 12891, column: 12, scope: !10567)
!10567 = distinct !DILexicalBlock(scope: !10552, file: !3, line: 12891, column: 12)
!10568 = !DILocation(line: 12891, column: 47, scope: !10567)
!10569 = !DILocation(line: 12891, column: 12, scope: !10552)
!10570 = !DILocation(line: 12893, column: 12, scope: !10571)
!10571 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 12893, column: 11)
!10572 = distinct !DILexicalBlock(scope: !10567, file: !3, line: 12892, column: 5)
!10573 = !DILocation(line: 12893, column: 16, scope: !10571)
!10574 = !DILocation(line: 12893, column: 20, scope: !10571)
!10575 = !DILocation(line: 12893, column: 11, scope: !10572)
!10576 = !DILocation(line: 12895, column: 11, scope: !10577)
!10577 = distinct !DILexicalBlock(scope: !10572, file: !3, line: 12895, column: 11)
!10578 = !DILocation(line: 12895, column: 11, scope: !10572)
!10579 = !DILocation(line: 12896, column: 9, scope: !10577)
!10580 = !DILocation(line: 12896, column: 2, scope: !10577)
!10581 = !DILocation(line: 0, scope: !10524)
!10582 = !DILocation(line: 12899, column: 8, scope: !10583)
!10583 = distinct !DILexicalBlock(scope: !10488, file: !3, line: 12899, column: 7)
!10584 = !DILocation(line: 12899, column: 7, scope: !10488)
!10585 = !DILocation(line: 12901, column: 33, scope: !10488)
!10586 = !DILocation(line: 12901, column: 10, scope: !10488)
!10587 = !DILocation(line: 12901, column: 3, scope: !10488)
!10588 = !DILocation(line: 12902, column: 1, scope: !10488)
!10589 = distinct !DISubprogram(name: "fold_builtin_memset", scope: !3, file: !3, line: 8111, type: !7808, scopeLine: 8113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10590)
!10590 = !{!10591, !10592, !10593, !10594, !10595, !10596, !10597, !10598, !10599, !10600, !10601}
!10591 = !DILocalVariable(name: "loc", arg: 1, scope: !10589, file: !3, line: 8111, type: !2998)
!10592 = !DILocalVariable(name: "dest", arg: 2, scope: !10589, file: !3, line: 8111, type: !2914)
!10593 = !DILocalVariable(name: "c", arg: 3, scope: !10589, file: !3, line: 8111, type: !2914)
!10594 = !DILocalVariable(name: "len", arg: 4, scope: !10589, file: !3, line: 8111, type: !2914)
!10595 = !DILocalVariable(name: "type", arg: 5, scope: !10589, file: !3, line: 8112, type: !2914)
!10596 = !DILocalVariable(name: "ignore", arg: 6, scope: !10589, file: !3, line: 8112, type: !2866)
!10597 = !DILocalVariable(name: "var", scope: !10589, file: !3, line: 8114, type: !2914)
!10598 = !DILocalVariable(name: "ret", scope: !10589, file: !3, line: 8114, type: !2914)
!10599 = !DILocalVariable(name: "etype", scope: !10589, file: !3, line: 8114, type: !2914)
!10600 = !DILocalVariable(name: "length", scope: !10589, file: !3, line: 8115, type: !2927)
!10601 = !DILocalVariable(name: "cval", scope: !10589, file: !3, line: 8115, type: !2927)
!10602 = !DILocation(line: 0, scope: !10589)
!10603 = !DILocation(line: 8117, column: 9, scope: !10604)
!10604 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8117, column: 7)
!10605 = !DILocation(line: 8118, column: 7, scope: !10604)
!10606 = !DILocation(line: 8118, column: 12, scope: !10604)
!10607 = !DILocation(line: 8119, column: 7, scope: !10604)
!10608 = !DILocation(line: 8119, column: 12, scope: !10604)
!10609 = !DILocation(line: 8117, column: 7, scope: !10589)
!10610 = !DILocation(line: 8122, column: 9, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8122, column: 7)
!10612 = !DILocation(line: 8122, column: 7, scope: !10589)
!10613 = !DILocation(line: 8126, column: 7, scope: !10614)
!10614 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8126, column: 7)
!10615 = !DILocation(line: 8126, column: 7, scope: !10589)
!10616 = !DILocation(line: 8127, column: 12, scope: !10614)
!10617 = !DILocation(line: 8127, column: 5, scope: !10614)
!10618 = !DILocation(line: 8129, column: 9, scope: !10619)
!10619 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8129, column: 7)
!10620 = !DILocation(line: 8129, column: 30, scope: !10619)
!10621 = !DILocation(line: 8129, column: 33, scope: !10619)
!10622 = !DILocation(line: 8129, column: 7, scope: !10589)
!10623 = !DILocation(line: 8133, column: 3, scope: !10589)
!10624 = !DILocation(line: 8134, column: 7, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8134, column: 7)
!10626 = !DILocation(line: 8134, column: 23, scope: !10625)
!10627 = !DILocation(line: 8134, column: 7, scope: !10589)
!10628 = !DILocation(line: 8137, column: 9, scope: !10589)
!10629 = !DILocation(line: 8138, column: 7, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8138, column: 7)
!10631 = !DILocation(line: 8138, column: 7, scope: !10589)
!10632 = !DILocation(line: 8141, column: 11, scope: !10589)
!10633 = !DILocation(line: 8142, column: 7, scope: !10634)
!10634 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8142, column: 7)
!10635 = !DILocation(line: 8142, column: 25, scope: !10634)
!10636 = !DILocation(line: 8142, column: 7, scope: !10589)
!10637 = !DILocation(line: 8143, column: 13, scope: !10634)
!10638 = !DILocation(line: 0, scope: !10639)
!10639 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8145, column: 7)
!10640 = !DILocation(line: 8145, column: 8, scope: !10639)
!10641 = !DILocation(line: 8143, column: 5, scope: !10634)
!10642 = !DILocation(line: 8146, column: 7, scope: !10639)
!10643 = !DILocation(line: 8146, column: 11, scope: !10639)
!10644 = !DILocation(line: 8145, column: 7, scope: !10589)
!10645 = !DILocation(line: 8149, column: 9, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8149, column: 7)
!10647 = !DILocation(line: 8149, column: 7, scope: !10589)
!10648 = !DILocation(line: 8152, column: 12, scope: !10589)
!10649 = !DILocation(line: 8153, column: 7, scope: !10650)
!10650 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8153, column: 7)
!10651 = !DILocation(line: 8153, column: 41, scope: !10650)
!10652 = !DILocation(line: 8154, column: 7, scope: !10650)
!10653 = !DILocation(line: 8154, column: 39, scope: !10650)
!10654 = !DILocation(line: 8154, column: 10, scope: !10650)
!10655 = !DILocation(line: 8154, column: 58, scope: !10650)
!10656 = !DILocation(line: 8155, column: 5, scope: !10650)
!10657 = !DILocation(line: 8155, column: 3, scope: !10650)
!10658 = !DILocation(line: 8158, column: 14, scope: !10659)
!10659 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8158, column: 7)
!10660 = !DILocation(line: 8153, column: 7, scope: !10589)
!10661 = !DILocation(line: 8161, column: 7, scope: !10662)
!10662 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8161, column: 7)
!10663 = !DILocation(line: 8161, column: 7, scope: !10589)
!10664 = !DILocation(line: 8168, column: 14, scope: !10665)
!10665 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 8164, column: 5)
!10666 = !DILocation(line: 8169, column: 12, scope: !10665)
!10667 = !DILocation(line: 8170, column: 20, scope: !10665)
!10668 = !DILocation(line: 8170, column: 12, scope: !10665)
!10669 = !DILocation(line: 8171, column: 20, scope: !10665)
!10670 = !DILocation(line: 8171, column: 12, scope: !10665)
!10671 = !DILocation(line: 8172, column: 21, scope: !10665)
!10672 = !DILocation(line: 8172, column: 12, scope: !10665)
!10673 = !DILocation(line: 0, scope: !10662)
!10674 = !DILocation(line: 8175, column: 9, scope: !10589)
!10675 = !DILocation(line: 8178, column: 10, scope: !10589)
!10676 = !DILocation(line: 8177, column: 6, scope: !10589)
!10677 = !DILocation(line: 8176, column: 9, scope: !10589)
!10678 = !DILocation(line: 8180, column: 9, scope: !10589)
!10679 = !DILocation(line: 8181, column: 7, scope: !10680)
!10680 = distinct !DILexicalBlock(scope: !10589, file: !3, line: 8181, column: 7)
!10681 = !DILocation(line: 8181, column: 7, scope: !10589)
!10682 = !DILocation(line: 8184, column: 10, scope: !10589)
!10683 = !DILocation(line: 8184, column: 3, scope: !10589)
!10684 = !DILocation(line: 8185, column: 1, scope: !10589)
!10685 = distinct !DISubprogram(name: "var_decl_component_p", scope: !3, file: !3, line: 8099, type: !4846, scopeLine: 8100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10686)
!10686 = !{!10687, !10688}
!10687 = !DILocalVariable(name: "var", arg: 1, scope: !10685, file: !3, line: 8099, type: !2914)
!10688 = !DILocalVariable(name: "inner", scope: !10685, file: !3, line: 8101, type: !2914)
!10689 = !DILocation(line: 0, scope: !10685)
!10690 = !DILocation(line: 8102, column: 3, scope: !10685)
!10691 = !DILocation(line: 8102, column: 10, scope: !10685)
!10692 = !DILocation(line: 8103, column: 13, scope: !10685)
!10693 = distinct !{!10693, !10690, !10692}
!10694 = !DILocation(line: 8104, column: 10, scope: !10685)
!10695 = !DILocation(line: 8104, column: 3, scope: !10685)
!10696 = distinct !DISubprogram(name: "target_char_cast", scope: !3, file: !3, line: 581, type: !10697, scopeLine: 582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10699)
!10697 = !DISubroutineType(types: !10698)
!10698 = !{!1249, !2914, !2868}
!10699 = !{!10700, !10701, !10702, !10703}
!10700 = !DILocalVariable(name: "cst", arg: 1, scope: !10696, file: !3, line: 581, type: !2914)
!10701 = !DILocalVariable(name: "p", arg: 2, scope: !10696, file: !3, line: 581, type: !2868)
!10702 = !DILocalVariable(name: "val", scope: !10696, file: !3, line: 583, type: !2927)
!10703 = !DILocalVariable(name: "hostval", scope: !10696, file: !3, line: 583, type: !2927)
!10704 = !DILocation(line: 0, scope: !10696)
!10705 = !DILocation(line: 585, column: 8, scope: !10706)
!10706 = distinct !DILexicalBlock(scope: !10696, file: !3, line: 585, column: 7)
!10707 = !DILocation(line: 585, column: 7, scope: !10696)
!10708 = !DILocation(line: 589, column: 9, scope: !10696)
!10709 = !DILocation(line: 600, column: 8, scope: !10696)
!10710 = !DILocation(line: 600, column: 6, scope: !10696)
!10711 = !DILocation(line: 601, column: 3, scope: !10696)
!10712 = !DILocation(line: 602, column: 1, scope: !10696)
!10713 = distinct !DISubprogram(name: "build_builtin_expect_predicate", scope: !3, file: !3, line: 6547, type: !6344, scopeLine: 6548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10714)
!10714 = !{!10715, !10716, !10717, !10718, !10719, !10720, !10721, !10722, !10723}
!10715 = !DILocalVariable(name: "loc", arg: 1, scope: !10713, file: !3, line: 6547, type: !2998)
!10716 = !DILocalVariable(name: "pred", arg: 2, scope: !10713, file: !3, line: 6547, type: !2914)
!10717 = !DILocalVariable(name: "expected", arg: 3, scope: !10713, file: !3, line: 6547, type: !2914)
!10718 = !DILocalVariable(name: "fn", scope: !10713, file: !3, line: 6549, type: !2914)
!10719 = !DILocalVariable(name: "arg_types", scope: !10713, file: !3, line: 6549, type: !2914)
!10720 = !DILocalVariable(name: "pred_type", scope: !10713, file: !3, line: 6549, type: !2914)
!10721 = !DILocalVariable(name: "expected_type", scope: !10713, file: !3, line: 6549, type: !2914)
!10722 = !DILocalVariable(name: "call_expr", scope: !10713, file: !3, line: 6549, type: !2914)
!10723 = !DILocalVariable(name: "ret_type", scope: !10713, file: !3, line: 6549, type: !2914)
!10724 = !DILocation(line: 0, scope: !10713)
!10725 = !DILocation(line: 6551, column: 8, scope: !10713)
!10726 = !DILocation(line: 6552, column: 15, scope: !10713)
!10727 = !DILocation(line: 6553, column: 14, scope: !10713)
!10728 = !DILocation(line: 6554, column: 15, scope: !10713)
!10729 = !DILocation(line: 6555, column: 19, scope: !10713)
!10730 = !DILocation(line: 6557, column: 10, scope: !10713)
!10731 = !DILocation(line: 6558, column: 14, scope: !10713)
!10732 = !DILocation(line: 6559, column: 15, scope: !10713)
!10733 = !DILocation(line: 6561, column: 10, scope: !10713)
!10734 = !DILocation(line: 6561, column: 3, scope: !10713)
!10735 = distinct !DISubprogram(name: "fold_builtin_sincos", scope: !3, file: !3, line: 7260, type: !8079, scopeLine: 7262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10736)
!10736 = !{!10737, !10738, !10739, !10740}
!10737 = !DILocalVariable(name: "loc", arg: 1, scope: !10735, file: !3, line: 7260, type: !2998)
!10738 = !DILocalVariable(name: "arg0", arg: 2, scope: !10735, file: !3, line: 7261, type: !2914)
!10739 = !DILocalVariable(name: "arg1", arg: 3, scope: !10735, file: !3, line: 7261, type: !2914)
!10740 = !DILocalVariable(name: "arg2", arg: 4, scope: !10735, file: !3, line: 7261, type: !2914)
!10741 = !DILocation(line: 0, scope: !10735)
!10742 = !DILocation(line: 7264, column: 2, scope: !10735)
!10743 = distinct !DISubprogram(name: "fold_builtin_memory_op", scope: !3, file: !3, line: 8219, type: !10744, scopeLine: 8221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !10746)
!10744 = !DISubroutineType(types: !10745)
!10745 = !{!2914, !2998, !2914, !2914, !2914, !2914, !2866, !1249}
!10746 = !{!10747, !10748, !10749, !10750, !10751, !10752, !10753, !10754, !10755, !10756, !10757, !10760, !10761, !10762, !10763, !10768, !10771, !10772, !10773, !10774, !10775, !10776, !10777, !10780, !10783, !10786}
!10747 = !DILocalVariable(name: "loc", arg: 1, scope: !10743, file: !3, line: 8219, type: !2998)
!10748 = !DILocalVariable(name: "dest", arg: 2, scope: !10743, file: !3, line: 8219, type: !2914)
!10749 = !DILocalVariable(name: "src", arg: 3, scope: !10743, file: !3, line: 8219, type: !2914)
!10750 = !DILocalVariable(name: "len", arg: 4, scope: !10743, file: !3, line: 8220, type: !2914)
!10751 = !DILocalVariable(name: "type", arg: 5, scope: !10743, file: !3, line: 8220, type: !2914)
!10752 = !DILocalVariable(name: "ignore", arg: 6, scope: !10743, file: !3, line: 8220, type: !2866)
!10753 = !DILocalVariable(name: "endp", arg: 7, scope: !10743, file: !3, line: 8220, type: !1249)
!10754 = !DILocalVariable(name: "destvar", scope: !10743, file: !3, line: 8222, type: !2914)
!10755 = !DILocalVariable(name: "srcvar", scope: !10743, file: !3, line: 8222, type: !2914)
!10756 = !DILocalVariable(name: "expr", scope: !10743, file: !3, line: 8222, type: !2914)
!10757 = !DILocalVariable(name: "srctype", scope: !10758, file: !3, line: 8239, type: !2914)
!10758 = distinct !DILexicalBlock(scope: !10759, file: !3, line: 8238, column: 5)
!10759 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 8235, column: 7)
!10760 = !DILocalVariable(name: "desttype", scope: !10758, file: !3, line: 8239, type: !2914)
!10761 = !DILocalVariable(name: "src_align", scope: !10758, file: !3, line: 8240, type: !1249)
!10762 = !DILocalVariable(name: "dest_align", scope: !10758, file: !3, line: 8240, type: !1249)
!10763 = !DILocalVariable(name: "fn", scope: !10764, file: !3, line: 8259, type: !2914)
!10764 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 8258, column: 6)
!10765 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 8254, column: 8)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 8243, column: 2)
!10767 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8242, column: 11)
!10768 = !DILocalVariable(name: "src_base", scope: !10769, file: !3, line: 8273, type: !2914)
!10769 = distinct !DILexicalBlock(scope: !10770, file: !3, line: 8272, column: 6)
!10770 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 8268, column: 8)
!10771 = !DILocalVariable(name: "dest_base", scope: !10769, file: !3, line: 8273, type: !2914)
!10772 = !DILocalVariable(name: "fn", scope: !10769, file: !3, line: 8273, type: !2914)
!10773 = !DILocalVariable(name: "src_offset", scope: !10769, file: !3, line: 8274, type: !2929)
!10774 = !DILocalVariable(name: "dest_offset", scope: !10769, file: !3, line: 8274, type: !2929)
!10775 = !DILocalVariable(name: "size", scope: !10769, file: !3, line: 8275, type: !2929)
!10776 = !DILocalVariable(name: "maxsize", scope: !10769, file: !3, line: 8276, type: !2929)
!10777 = !DILocalVariable(name: "tem", scope: !10778, file: !3, line: 8336, type: !2914)
!10778 = distinct !DILexicalBlock(scope: !10779, file: !3, line: 8335, column: 2)
!10779 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8334, column: 11)
!10780 = !DILocalVariable(name: "tem", scope: !10781, file: !3, line: 8343, type: !2914)
!10781 = distinct !DILexicalBlock(scope: !10782, file: !3, line: 8342, column: 2)
!10782 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8341, column: 11)
!10783 = !DILocalVariable(name: "srcptype", scope: !10784, file: !3, line: 8419, type: !2914)
!10784 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 8418, column: 2)
!10785 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8417, column: 11)
!10786 = !DILocalVariable(name: "destptype", scope: !10787, file: !3, line: 8441, type: !2914)
!10787 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 8440, column: 2)
!10788 = distinct !DILexicalBlock(scope: !10785, file: !3, line: 8439, column: 16)
!10789 = !DILocation(line: 0, scope: !10743)
!10790 = !DILocation(line: 8224, column: 9, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 8224, column: 7)
!10792 = !DILocation(line: 8225, column: 7, scope: !10791)
!10793 = !DILocation(line: 8225, column: 12, scope: !10791)
!10794 = !DILocation(line: 8226, column: 7, scope: !10791)
!10795 = !DILocation(line: 8226, column: 12, scope: !10791)
!10796 = !DILocation(line: 8224, column: 7, scope: !10743)
!10797 = !DILocation(line: 8230, column: 7, scope: !10798)
!10798 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 8230, column: 7)
!10799 = !DILocation(line: 8230, column: 7, scope: !10743)
!10800 = !DILocation(line: 8231, column: 12, scope: !10798)
!10801 = !DILocation(line: 8231, column: 5, scope: !10798)
!10802 = !DILocation(line: 8235, column: 7, scope: !10759)
!10803 = !DILocation(line: 8235, column: 7, scope: !10743)
!10804 = !DILocation(line: 8242, column: 16, scope: !10767)
!10805 = !DILocation(line: 8242, column: 11, scope: !10758)
!10806 = !DILocation(line: 8244, column: 44, scope: !10766)
!10807 = !DILocation(line: 8244, column: 16, scope: !10766)
!10808 = !DILocation(line: 0, scope: !10758)
!10809 = !DILocation(line: 8245, column: 46, scope: !10766)
!10810 = !DILocation(line: 8245, column: 17, scope: !10766)
!10811 = !DILocation(line: 8252, column: 9, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10766, file: !3, line: 8252, column: 8)
!10813 = !DILocation(line: 8252, column: 24, scope: !10812)
!10814 = !DILocation(line: 8252, column: 20, scope: !10812)
!10815 = !DILocation(line: 8254, column: 8, scope: !10765)
!10816 = !DILocation(line: 8255, column: 8, scope: !10765)
!10817 = !DILocation(line: 8255, column: 12, scope: !10765)
!10818 = !DILocation(line: 8256, column: 5, scope: !10765)
!10819 = !DILocation(line: 8256, column: 9, scope: !10765)
!10820 = !DILocation(line: 8256, column: 37, scope: !10765)
!10821 = !DILocation(line: 8257, column: 12, scope: !10765)
!10822 = !DILocation(line: 8257, column: 9, scope: !10765)
!10823 = !DILocation(line: 8254, column: 8, scope: !10766)
!10824 = !DILocation(line: 8259, column: 18, scope: !10764)
!10825 = !DILocation(line: 0, scope: !10764)
!10826 = !DILocation(line: 8260, column: 13, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 8260, column: 12)
!10828 = !DILocation(line: 8260, column: 12, scope: !10764)
!10829 = !DILocation(line: 8262, column: 22, scope: !10764)
!10830 = !DILocation(line: 8262, column: 15, scope: !10764)
!10831 = !DILocation(line: 8266, column: 13, scope: !10766)
!10832 = !DILocation(line: 8267, column: 14, scope: !10766)
!10833 = !DILocation(line: 8268, column: 8, scope: !10770)
!10834 = !DILocation(line: 8269, column: 8, scope: !10770)
!10835 = !DILocation(line: 8269, column: 12, scope: !10770)
!10836 = !DILocation(line: 8270, column: 11, scope: !10770)
!10837 = !DILocation(line: 8270, column: 8, scope: !10770)
!10838 = !DILocation(line: 8271, column: 12, scope: !10770)
!10839 = !DILocation(line: 8268, column: 8, scope: !10766)
!10840 = !DILocation(line: 8274, column: 8, scope: !10769)
!10841 = !DILocation(line: 0, scope: !10769)
!10842 = !DILocation(line: 8274, column: 22, scope: !10769)
!10843 = !DILocation(line: 8274, column: 38, scope: !10769)
!10844 = !DILocation(line: 8275, column: 8, scope: !10769)
!10845 = !DILocation(line: 8275, column: 22, scope: !10769)
!10846 = !DILocation(line: 8276, column: 8, scope: !10769)
!10847 = !DILocation(line: 8276, column: 22, scope: !10769)
!10848 = !DILocation(line: 8279, column: 12, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10769, file: !3, line: 8279, column: 12)
!10850 = !DILocation(line: 8279, column: 12, scope: !10769)
!10851 = !DILocation(line: 8280, column: 14, scope: !10849)
!10852 = !DILocation(line: 8280, column: 3, scope: !10849)
!10853 = !DILocation(line: 8283, column: 12, scope: !10854)
!10854 = distinct !DILexicalBlock(scope: !10769, file: !3, line: 8283, column: 12)
!10855 = !DILocation(line: 8283, column: 12, scope: !10769)
!10856 = !DILocation(line: 8284, column: 15, scope: !10854)
!10857 = !DILocation(line: 8284, column: 3, scope: !10854)
!10858 = !DILocation(line: 8286, column: 12, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10769, file: !3, line: 8286, column: 12)
!10860 = !DILocation(line: 8286, column: 12, scope: !10769)
!10861 = !DILocation(line: 8288, column: 15, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 8287, column: 3)
!10863 = !DILocation(line: 8288, column: 13, scope: !10862)
!10864 = !DILocation(line: 8290, column: 9, scope: !10865)
!10865 = distinct !DILexicalBlock(scope: !10862, file: !3, line: 8289, column: 9)
!10866 = !DILocation(line: 8289, column: 9, scope: !10862)
!10867 = !DILocation(line: 8291, column: 15, scope: !10865)
!10868 = !DILocation(line: 8291, column: 7, scope: !10865)
!10869 = !DILocation(line: 8293, column: 15, scope: !10865)
!10870 = !DILocation(line: 8296, column: 11, scope: !10859)
!10871 = !DILocation(line: 8297, column: 12, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10769, file: !3, line: 8297, column: 12)
!10873 = !DILocation(line: 8298, column: 5, scope: !10872)
!10874 = !DILocation(line: 8298, column: 8, scope: !10872)
!10875 = !DILocation(line: 8297, column: 12, scope: !10769)
!10876 = !DILocation(line: 8300, column: 9, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10878, file: !3, line: 8300, column: 9)
!10878 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 8299, column: 3)
!10879 = !DILocation(line: 8301, column: 9, scope: !10877)
!10880 = !DILocation(line: 8301, column: 30, scope: !10877)
!10881 = !DILocation(line: 8301, column: 42, scope: !10877)
!10882 = !DILocation(line: 8302, column: 9, scope: !10877)
!10883 = !DILocation(line: 8301, column: 12, scope: !10877)
!10884 = !DILocation(line: 8300, column: 9, scope: !10878)
!10885 = !DILocation(line: 8305, column: 38, scope: !10886)
!10886 = distinct !DILexicalBlock(scope: !10872, file: !3, line: 8305, column: 17)
!10887 = !DILocation(line: 8306, column: 10, scope: !10886)
!10888 = !DILocation(line: 8306, column: 13, scope: !10886)
!10889 = !DILocation(line: 8306, column: 35, scope: !10886)
!10890 = !DILocation(line: 8305, column: 17, scope: !10872)
!10891 = !DILocation(line: 8308, column: 28, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10893, file: !3, line: 8308, column: 9)
!10893 = distinct !DILexicalBlock(scope: !10886, file: !3, line: 8307, column: 3)
!10894 = !DILocation(line: 8309, column: 7, scope: !10892)
!10895 = !DILocation(line: 8308, column: 11, scope: !10892)
!10896 = !DILocation(line: 8310, column: 9, scope: !10892)
!10897 = !DILocation(line: 8310, column: 30, scope: !10892)
!10898 = !DILocation(line: 8310, column: 42, scope: !10892)
!10899 = !DILocation(line: 8311, column: 9, scope: !10892)
!10900 = !DILocation(line: 8310, column: 12, scope: !10892)
!10901 = !DILocation(line: 8308, column: 9, scope: !10893)
!10902 = !DILocation(line: 8317, column: 13, scope: !10769)
!10903 = !DILocation(line: 8318, column: 13, scope: !10904)
!10904 = distinct !DILexicalBlock(scope: !10769, file: !3, line: 8318, column: 12)
!10905 = !DILocation(line: 8318, column: 12, scope: !10769)
!10906 = !DILocation(line: 8320, column: 15, scope: !10769)
!10907 = !DILocation(line: 8320, column: 8, scope: !10769)
!10908 = !DILocation(line: 8321, column: 6, scope: !10770)
!10909 = !DILocation(line: 8325, column: 12, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8325, column: 11)
!10911 = !DILocation(line: 8325, column: 11, scope: !10758)
!10912 = !DILocation(line: 8331, column: 7, scope: !10758)
!10913 = !DILocation(line: 8332, column: 7, scope: !10758)
!10914 = !DILocation(line: 8334, column: 11, scope: !10779)
!10915 = !DILocation(line: 8334, column: 27, scope: !10779)
!10916 = !DILocation(line: 8334, column: 11, scope: !10758)
!10917 = !DILocation(line: 8336, column: 15, scope: !10778)
!10918 = !DILocation(line: 0, scope: !10778)
!10919 = !DILocation(line: 8337, column: 4, scope: !10778)
!10920 = !DILocation(line: 8338, column: 15, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10778, file: !3, line: 8338, column: 8)
!10922 = !DILocation(line: 8338, column: 12, scope: !10921)
!10923 = !DILocation(line: 8338, column: 8, scope: !10778)
!10924 = !DILocation(line: 8339, column: 12, scope: !10921)
!10925 = !DILocation(line: 8339, column: 6, scope: !10921)
!10926 = !DILocation(line: 8341, column: 11, scope: !10782)
!10927 = !DILocation(line: 8341, column: 28, scope: !10782)
!10928 = !DILocation(line: 8341, column: 11, scope: !10758)
!10929 = !DILocation(line: 8343, column: 15, scope: !10781)
!10930 = !DILocation(line: 0, scope: !10781)
!10931 = !DILocation(line: 8344, column: 4, scope: !10781)
!10932 = !DILocation(line: 8345, column: 15, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 8345, column: 8)
!10934 = !DILocation(line: 8345, column: 12, scope: !10933)
!10935 = !DILocation(line: 8345, column: 8, scope: !10781)
!10936 = !DILocation(line: 8346, column: 13, scope: !10933)
!10937 = !DILocation(line: 8346, column: 6, scope: !10933)
!10938 = !DILocation(line: 8348, column: 17, scope: !10758)
!10939 = !DILocation(line: 8349, column: 11, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8349, column: 11)
!10941 = !DILocation(line: 8350, column: 4, scope: !10940)
!10942 = !DILocation(line: 8350, column: 7, scope: !10940)
!10943 = !DILocation(line: 8350, column: 27, scope: !10940)
!10944 = !DILocation(line: 8351, column: 4, scope: !10940)
!10945 = !DILocation(line: 8351, column: 28, scope: !10940)
!10946 = !DILocation(line: 8351, column: 8, scope: !10940)
!10947 = !DILocation(line: 8349, column: 11, scope: !10758)
!10948 = !DILocation(line: 8353, column: 14, scope: !10949)
!10949 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 8352, column: 2)
!10950 = !DILocation(line: 8354, column: 4, scope: !10949)
!10951 = !DILocation(line: 8355, column: 10, scope: !10949)
!10952 = !DILocation(line: 8356, column: 2, scope: !10949)
!10953 = !DILocation(line: 8357, column: 18, scope: !10758)
!10954 = !DILocation(line: 8358, column: 11, scope: !10955)
!10955 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8358, column: 11)
!10956 = !DILocation(line: 8359, column: 4, scope: !10955)
!10957 = !DILocation(line: 8359, column: 7, scope: !10955)
!10958 = !DILocation(line: 8359, column: 28, scope: !10955)
!10959 = !DILocation(line: 8360, column: 4, scope: !10955)
!10960 = !DILocation(line: 8360, column: 28, scope: !10955)
!10961 = !DILocation(line: 8360, column: 8, scope: !10955)
!10962 = !DILocation(line: 8358, column: 11, scope: !10758)
!10963 = !DILocation(line: 8362, column: 15, scope: !10964)
!10964 = distinct !DILexicalBlock(scope: !10955, file: !3, line: 8361, column: 2)
!10965 = !DILocation(line: 8363, column: 4, scope: !10964)
!10966 = !DILocation(line: 8364, column: 11, scope: !10964)
!10967 = !DILocation(line: 8365, column: 2, scope: !10964)
!10968 = !DILocation(line: 8366, column: 12, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8366, column: 11)
!10970 = !DILocation(line: 8366, column: 24, scope: !10969)
!10971 = !DILocation(line: 8366, column: 20, scope: !10969)
!10972 = !DILocation(line: 8367, column: 8, scope: !10969)
!10973 = !DILocation(line: 8368, column: 4, scope: !10969)
!10974 = !DILocation(line: 8368, column: 8, scope: !10969)
!10975 = !DILocation(line: 8369, column: 4, scope: !10969)
!10976 = !DILocation(line: 8369, column: 7, scope: !10969)
!10977 = !DILocation(line: 8369, column: 44, scope: !10969)
!10978 = !DILocation(line: 8370, column: 4, scope: !10969)
!10979 = !DILocation(line: 8370, column: 7, scope: !10969)
!10980 = !DILocation(line: 8370, column: 45, scope: !10969)
!10981 = !DILocation(line: 8371, column: 4, scope: !10969)
!10982 = !DILocation(line: 8371, column: 7, scope: !10969)
!10983 = !DILocation(line: 8372, column: 4, scope: !10969)
!10984 = !DILocation(line: 8372, column: 7, scope: !10969)
!10985 = !DILocation(line: 8366, column: 11, scope: !10758)
!10986 = !DILocation(line: 8375, column: 47, scope: !10758)
!10987 = !DILocation(line: 8375, column: 19, scope: !10758)
!10988 = !DILocation(line: 8376, column: 49, scope: !10758)
!10989 = !DILocation(line: 8376, column: 20, scope: !10758)
!10990 = !DILocation(line: 8377, column: 30, scope: !10991)
!10991 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8377, column: 11)
!10992 = !DILocation(line: 8377, column: 22, scope: !10991)
!10993 = !DILocation(line: 8378, column: 4, scope: !10991)
!10994 = !DILocation(line: 8378, column: 25, scope: !10991)
!10995 = !DILocation(line: 8378, column: 17, scope: !10991)
!10996 = !DILocation(line: 8377, column: 11, scope: !10758)
!10997 = !DILocation(line: 8381, column: 12, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8381, column: 11)
!10999 = !DILocation(line: 8381, column: 11, scope: !10758)
!11000 = !DILocation(line: 8382, column: 16, scope: !10998)
!11001 = !DILocation(line: 8382, column: 9, scope: !10998)
!11002 = !DILocation(line: 8385, column: 31, scope: !11003)
!11003 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8385, column: 11)
!11004 = !DILocation(line: 8385, column: 11, scope: !11003)
!11005 = !DILocation(line: 8385, column: 11, scope: !10758)
!11006 = !DILocation(line: 8387, column: 13, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11003, file: !3, line: 8386, column: 2)
!11008 = !DILocation(line: 8388, column: 8, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11007, file: !3, line: 8388, column: 8)
!11010 = !DILocation(line: 8388, column: 8, scope: !11007)
!11011 = !DILocation(line: 8390, column: 34, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 8390, column: 13)
!11013 = !DILocation(line: 8390, column: 14, scope: !11012)
!11014 = !DILocation(line: 8390, column: 13, scope: !11009)
!11015 = !DILocation(line: 8398, column: 14, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 8398, column: 13)
!11017 = !DILocation(line: 8398, column: 13, scope: !11012)
!11018 = !DILocation(line: 8403, column: 31, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8403, column: 11)
!11020 = !DILocation(line: 8403, column: 11, scope: !11019)
!11021 = !DILocation(line: 8403, column: 11, scope: !10758)
!11022 = !DILocation(line: 8405, column: 14, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 8404, column: 2)
!11024 = !DILocation(line: 8406, column: 8, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 8406, column: 8)
!11026 = !DILocation(line: 8406, column: 8, scope: !11023)
!11027 = !DILocation(line: 8408, column: 34, scope: !11028)
!11028 = distinct !DILexicalBlock(scope: !11025, file: !3, line: 8408, column: 13)
!11029 = !DILocation(line: 8408, column: 14, scope: !11028)
!11030 = !DILocation(line: 8408, column: 13, scope: !11025)
!11031 = !DILocation(line: 8410, column: 14, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 8410, column: 13)
!11033 = !DILocation(line: 8410, column: 13, scope: !11028)
!11034 = !DILocation(line: 8414, column: 18, scope: !11035)
!11035 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8414, column: 11)
!11036 = !DILocation(line: 8414, column: 42, scope: !11035)
!11037 = !DILocation(line: 8414, column: 31, scope: !11035)
!11038 = !DILocation(line: 8417, column: 11, scope: !10758)
!11039 = !DILocation(line: 8420, column: 8, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 8420, column: 8)
!11041 = !DILocation(line: 8420, column: 8, scope: !10784)
!11042 = !DILocation(line: 8423, column: 14, scope: !10784)
!11043 = !DILocation(line: 8424, column: 26, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 8424, column: 8)
!11045 = !DILocation(line: 8424, column: 18, scope: !11044)
!11046 = !DILocation(line: 8424, column: 8, scope: !10784)
!11047 = !DILocation(line: 8426, column: 12, scope: !11048)
!11048 = distinct !DILexicalBlock(scope: !11049, file: !3, line: 8426, column: 12)
!11049 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 8425, column: 6)
!11050 = !DILocation(line: 8426, column: 12, scope: !11049)
!11051 = !DILocation(line: 8430, column: 18, scope: !11049)
!11052 = !DILocation(line: 8431, column: 8, scope: !11049)
!11053 = !DILocation(line: 8431, column: 29, scope: !11049)
!11054 = !DILocation(line: 8432, column: 8, scope: !11049)
!11055 = !DILocation(line: 8432, column: 34, scope: !11049)
!11056 = !DILocation(line: 8433, column: 30, scope: !11049)
!11057 = !DILocation(line: 8434, column: 6, scope: !11049)
!11058 = !DILocation(line: 0, scope: !10784)
!11059 = !DILocation(line: 8435, column: 53, scope: !10784)
!11060 = !DILocation(line: 8435, column: 15, scope: !10784)
!11061 = !DILocation(line: 8436, column: 10, scope: !10784)
!11062 = !DILocation(line: 8437, column: 13, scope: !10784)
!11063 = !DILocation(line: 8438, column: 2, scope: !10785)
!11064 = !DILocation(line: 8439, column: 16, scope: !10785)
!11065 = !DILocation(line: 8442, column: 8, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !10787, file: !3, line: 8442, column: 8)
!11067 = !DILocation(line: 8442, column: 8, scope: !10787)
!11068 = !DILocation(line: 8445, column: 15, scope: !10787)
!11069 = !DILocation(line: 8446, column: 27, scope: !11070)
!11070 = distinct !DILexicalBlock(scope: !10787, file: !3, line: 8446, column: 8)
!11071 = !DILocation(line: 8446, column: 19, scope: !11070)
!11072 = !DILocation(line: 8446, column: 8, scope: !10787)
!11073 = !DILocation(line: 8448, column: 12, scope: !11074)
!11074 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 8448, column: 12)
!11075 = distinct !DILexicalBlock(scope: !11070, file: !3, line: 8447, column: 6)
!11076 = !DILocation(line: 8448, column: 12, scope: !11075)
!11077 = !DILocation(line: 8452, column: 19, scope: !11075)
!11078 = !DILocation(line: 8453, column: 8, scope: !11075)
!11079 = !DILocation(line: 8453, column: 30, scope: !11075)
!11080 = !DILocation(line: 8454, column: 8, scope: !11075)
!11081 = !DILocation(line: 8454, column: 35, scope: !11075)
!11082 = !DILocation(line: 8455, column: 31, scope: !11075)
!11083 = !DILocation(line: 8456, column: 6, scope: !11075)
!11084 = !DILocation(line: 0, scope: !10787)
!11085 = !DILocation(line: 8457, column: 55, scope: !10787)
!11086 = !DILocation(line: 8457, column: 16, scope: !10787)
!11087 = !DILocation(line: 8458, column: 11, scope: !10787)
!11088 = !DILocation(line: 8459, column: 14, scope: !10787)
!11089 = !DILocation(line: 8460, column: 2, scope: !10788)
!11090 = !DILocation(line: 8357, column: 16, scope: !10758)
!11091 = !DILocation(line: 8348, column: 15, scope: !10758)
!11092 = !DILocation(line: 8387, column: 11, scope: !11007)
!11093 = !DILocation(line: 8405, column: 12, scope: !11023)
!11094 = !DILocation(line: 8346, column: 11, scope: !10933)
!11095 = !DILocation(line: 8462, column: 19, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !10758, file: !3, line: 8462, column: 11)
!11097 = !DILocation(line: 8463, column: 4, scope: !11096)
!11098 = !DILocation(line: 8463, column: 25, scope: !11096)
!11099 = !DILocation(line: 8463, column: 8, scope: !11096)
!11100 = !DILocation(line: 8464, column: 8, scope: !11096)
!11101 = !DILocation(line: 8464, column: 11, scope: !11096)
!11102 = !DILocation(line: 8462, column: 11, scope: !10758)
!11103 = !DILocation(line: 8466, column: 17, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 8466, column: 16)
!11105 = !DILocation(line: 8467, column: 5, scope: !11104)
!11106 = !DILocation(line: 8467, column: 8, scope: !11104)
!11107 = !DILocation(line: 8468, column: 4, scope: !11104)
!11108 = !DILocation(line: 0, scope: !11104)
!11109 = !DILocation(line: 8472, column: 9, scope: !11104)
!11110 = !DILocation(line: 8468, column: 8, scope: !11104)
!11111 = !DILocation(line: 8469, column: 8, scope: !11104)
!11112 = !DILocation(line: 8469, column: 11, scope: !11104)
!11113 = !DILocation(line: 8466, column: 16, scope: !11096)
!11114 = !DILocation(line: 8470, column: 9, scope: !11104)
!11115 = !DILocation(line: 8470, column: 2, scope: !11104)
!11116 = !DILocation(line: 0, scope: !11096)
!11117 = !DILocation(line: 8474, column: 14, scope: !10758)
!11118 = !DILocation(line: 8475, column: 5, scope: !10759)
!11119 = !DILocation(line: 8477, column: 7, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 8477, column: 7)
!11121 = !DILocation(line: 8477, column: 7, scope: !10743)
!11122 = !DILocation(line: 8480, column: 17, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 8480, column: 7)
!11124 = !DILocation(line: 8481, column: 12, scope: !11123)
!11125 = !DILocation(line: 8481, column: 5, scope: !11123)
!11126 = !DILocation(line: 8483, column: 12, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 8483, column: 7)
!11128 = !DILocation(line: 8483, column: 7, scope: !10743)
!11129 = !DILocation(line: 8486, column: 12, scope: !11130)
!11130 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 8486, column: 7)
!11131 = !DILocation(line: 8486, column: 7, scope: !10743)
!11132 = !DILocation(line: 8487, column: 11, scope: !11130)
!11133 = !DILocation(line: 8487, column: 5, scope: !11130)
!11134 = !DILocation(line: 8490, column: 32, scope: !10743)
!11135 = !DILocation(line: 8490, column: 9, scope: !10743)
!11136 = !DILocation(line: 8491, column: 10, scope: !10743)
!11137 = !DILocation(line: 8492, column: 10, scope: !10743)
!11138 = !DILocation(line: 8493, column: 7, scope: !11139)
!11139 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 8493, column: 7)
!11140 = !DILocation(line: 8493, column: 7, scope: !10743)
!11141 = !DILocation(line: 8494, column: 12, scope: !11139)
!11142 = !DILocation(line: 8494, column: 5, scope: !11139)
!11143 = !DILocation(line: 8496, column: 1, scope: !10743)
!11144 = distinct !DISubprogram(name: "fold_builtin_strncat", scope: !3, file: !3, line: 11437, type: !8079, scopeLine: 11438, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11145)
!11145 = !{!11146, !11147, !11148, !11149, !11150, !11153}
!11146 = !DILocalVariable(name: "loc", arg: 1, scope: !11144, file: !3, line: 11437, type: !2998)
!11147 = !DILocalVariable(name: "dst", arg: 2, scope: !11144, file: !3, line: 11437, type: !2914)
!11148 = !DILocalVariable(name: "src", arg: 3, scope: !11144, file: !3, line: 11437, type: !2914)
!11149 = !DILocalVariable(name: "len", arg: 4, scope: !11144, file: !3, line: 11437, type: !2914)
!11150 = !DILocalVariable(name: "p", scope: !11151, file: !3, line: 11445, type: !2871)
!11151 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 11444, column: 5)
!11152 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 11439, column: 7)
!11153 = !DILocalVariable(name: "fn", scope: !11154, file: !3, line: 11457, type: !2914)
!11154 = distinct !DILexicalBlock(scope: !11155, file: !3, line: 11456, column: 2)
!11155 = distinct !DILexicalBlock(scope: !11151, file: !3, line: 11454, column: 11)
!11156 = !DILocation(line: 0, scope: !11144)
!11157 = !DILocation(line: 11439, column: 8, scope: !11152)
!11158 = !DILocation(line: 11440, column: 7, scope: !11152)
!11159 = !DILocation(line: 11440, column: 11, scope: !11152)
!11160 = !DILocation(line: 11441, column: 7, scope: !11152)
!11161 = !DILocation(line: 11441, column: 11, scope: !11152)
!11162 = !DILocation(line: 11439, column: 7, scope: !11144)
!11163 = !DILocation(line: 11445, column: 23, scope: !11151)
!11164 = !DILocation(line: 0, scope: !11151)
!11165 = !DILocation(line: 11449, column: 11, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11151, file: !3, line: 11449, column: 11)
!11167 = !DILocation(line: 11449, column: 31, scope: !11166)
!11168 = !DILocation(line: 11449, column: 35, scope: !11166)
!11169 = !DILocation(line: 11449, column: 37, scope: !11166)
!11170 = !DILocation(line: 11449, column: 40, scope: !11166)
!11171 = !DILocation(line: 11449, column: 43, scope: !11166)
!11172 = !DILocation(line: 11449, column: 11, scope: !11151)
!11173 = !DILocation(line: 11450, column: 37, scope: !11166)
!11174 = !DILocation(line: 11450, column: 9, scope: !11166)
!11175 = !DILocation(line: 11450, column: 2, scope: !11166)
!11176 = !DILocation(line: 11454, column: 11, scope: !11155)
!11177 = !DILocation(line: 11454, column: 27, scope: !11155)
!11178 = !DILocation(line: 11454, column: 45, scope: !11155)
!11179 = !DILocation(line: 11454, column: 42, scope: !11155)
!11180 = !DILocation(line: 11455, column: 30, scope: !11155)
!11181 = !DILocation(line: 11455, column: 7, scope: !11155)
!11182 = !DILocation(line: 11455, column: 42, scope: !11155)
!11183 = !DILocation(line: 11454, column: 11, scope: !11151)
!11184 = !DILocation(line: 11457, column: 14, scope: !11154)
!11185 = !DILocation(line: 0, scope: !11154)
!11186 = !DILocation(line: 11461, column: 9, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 11461, column: 8)
!11188 = !DILocation(line: 11461, column: 8, scope: !11154)
!11189 = !DILocation(line: 11464, column: 11, scope: !11154)
!11190 = !DILocation(line: 11464, column: 4, scope: !11154)
!11191 = !DILocation(line: 0, scope: !11152)
!11192 = !DILocation(line: 11468, column: 1, scope: !11144)
!11193 = distinct !DISubprogram(name: "fold_builtin_strncmp", scope: !3, file: !3, line: 8797, type: !8079, scopeLine: 8798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11194)
!11194 = !{!11195, !11196, !11197, !11198, !11199, !11200, !11201, !11204, !11207, !11208, !11211, !11212, !11213, !11216, !11217, !11218}
!11195 = !DILocalVariable(name: "loc", arg: 1, scope: !11193, file: !3, line: 8797, type: !2998)
!11196 = !DILocalVariable(name: "arg1", arg: 2, scope: !11193, file: !3, line: 8797, type: !2914)
!11197 = !DILocalVariable(name: "arg2", arg: 3, scope: !11193, file: !3, line: 8797, type: !2914)
!11198 = !DILocalVariable(name: "len", arg: 4, scope: !11193, file: !3, line: 8797, type: !2914)
!11199 = !DILocalVariable(name: "p1", scope: !11193, file: !3, line: 8799, type: !2871)
!11200 = !DILocalVariable(name: "p2", scope: !11193, file: !3, line: 8799, type: !2871)
!11201 = !DILocalVariable(name: "i", scope: !11202, file: !3, line: 8820, type: !4324)
!11202 = distinct !DILexicalBlock(scope: !11203, file: !3, line: 8819, column: 5)
!11203 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 8818, column: 7)
!11204 = !DILocalVariable(name: "cst_uchar_node", scope: !11205, file: !3, line: 8835, type: !2914)
!11205 = distinct !DILexicalBlock(scope: !11206, file: !3, line: 8834, column: 5)
!11206 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 8831, column: 7)
!11207 = !DILocalVariable(name: "cst_uchar_ptr_node", scope: !11205, file: !3, line: 8836, type: !2914)
!11208 = !DILocalVariable(name: "cst_uchar_node", scope: !11209, file: !3, line: 8852, type: !2914)
!11209 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 8851, column: 5)
!11210 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 8848, column: 7)
!11211 = !DILocalVariable(name: "cst_uchar_ptr_node", scope: !11209, file: !3, line: 8853, type: !2914)
!11212 = !DILocalVariable(name: "temp", scope: !11209, file: !3, line: 8856, type: !2914)
!11213 = !DILocalVariable(name: "cst_uchar_node", scope: !11214, file: !3, line: 8868, type: !2914)
!11214 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 8867, column: 5)
!11215 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 8866, column: 7)
!11216 = !DILocalVariable(name: "cst_uchar_ptr_node", scope: !11214, file: !3, line: 8869, type: !2914)
!11217 = !DILocalVariable(name: "ind1", scope: !11214, file: !3, line: 8872, type: !2914)
!11218 = !DILocalVariable(name: "ind2", scope: !11214, file: !3, line: 8877, type: !2914)
!11219 = !DILocation(line: 0, scope: !11193)
!11220 = !DILocation(line: 8801, column: 8, scope: !11221)
!11221 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 8801, column: 7)
!11222 = !DILocation(line: 8802, column: 7, scope: !11221)
!11223 = !DILocation(line: 8802, column: 11, scope: !11221)
!11224 = !DILocation(line: 8803, column: 7, scope: !11221)
!11225 = !DILocation(line: 8803, column: 11, scope: !11221)
!11226 = !DILocation(line: 8801, column: 7, scope: !11193)
!11227 = !DILocation(line: 8807, column: 7, scope: !11228)
!11228 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 8807, column: 7)
!11229 = !DILocation(line: 8807, column: 7, scope: !11193)
!11230 = !DILocation(line: 8808, column: 40, scope: !11228)
!11231 = !DILocation(line: 8808, column: 59, scope: !11228)
!11232 = !DILocation(line: 8808, column: 12, scope: !11228)
!11233 = !DILocation(line: 8808, column: 5, scope: !11228)
!11234 = !DILocation(line: 8812, column: 7, scope: !11235)
!11235 = distinct !DILexicalBlock(scope: !11193, file: !3, line: 8812, column: 7)
!11236 = !DILocation(line: 8812, column: 7, scope: !11193)
!11237 = !DILocation(line: 8813, column: 39, scope: !11235)
!11238 = !DILocation(line: 8813, column: 58, scope: !11235)
!11239 = !DILocation(line: 8813, column: 12, scope: !11235)
!11240 = !DILocation(line: 8813, column: 5, scope: !11235)
!11241 = !DILocation(line: 8815, column: 8, scope: !11193)
!11242 = !DILocation(line: 8816, column: 8, scope: !11193)
!11243 = !DILocation(line: 8818, column: 7, scope: !11203)
!11244 = !DILocation(line: 8818, column: 33, scope: !11203)
!11245 = !DILocation(line: 8818, column: 30, scope: !11203)
!11246 = !DILocation(line: 8818, column: 39, scope: !11203)
!11247 = !DILocation(line: 8820, column: 38, scope: !11202)
!11248 = !DILocation(line: 8820, column: 21, scope: !11202)
!11249 = !DILocation(line: 0, scope: !11202)
!11250 = !DILocation(line: 8821, column: 13, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 8821, column: 11)
!11252 = !DILocation(line: 8821, column: 11, scope: !11202)
!11253 = !DILocation(line: 8822, column: 9, scope: !11251)
!11254 = !DILocation(line: 8822, column: 2, scope: !11251)
!11255 = !DILocation(line: 8823, column: 18, scope: !11256)
!11256 = distinct !DILexicalBlock(scope: !11251, file: !3, line: 8823, column: 16)
!11257 = !DILocation(line: 8823, column: 16, scope: !11251)
!11258 = !DILocation(line: 8824, column: 9, scope: !11256)
!11259 = !DILocation(line: 8824, column: 2, scope: !11256)
!11260 = !DILocation(line: 8826, column: 9, scope: !11256)
!11261 = !DILocation(line: 8826, column: 2, scope: !11256)
!11262 = !DILocation(line: 8831, column: 7, scope: !11206)
!11263 = !DILocation(line: 8831, column: 10, scope: !11206)
!11264 = !DILocation(line: 8831, column: 13, scope: !11206)
!11265 = !DILocation(line: 8831, column: 17, scope: !11206)
!11266 = !DILocation(line: 8832, column: 7, scope: !11206)
!11267 = !DILocation(line: 8832, column: 10, scope: !11206)
!11268 = !DILocation(line: 8832, column: 26, scope: !11206)
!11269 = !DILocation(line: 8833, column: 7, scope: !11206)
!11270 = !DILocation(line: 8833, column: 10, scope: !11206)
!11271 = !DILocation(line: 8833, column: 33, scope: !11206)
!11272 = !DILocation(line: 8831, column: 7, scope: !11193)
!11273 = !DILocation(line: 8835, column: 29, scope: !11205)
!11274 = !DILocation(line: 0, scope: !11205)
!11275 = !DILocation(line: 8837, column: 49, scope: !11205)
!11276 = !DILocation(line: 8837, column: 4, scope: !11205)
!11277 = !DILocation(line: 8839, column: 37, scope: !11205)
!11278 = !DILocation(line: 8840, column: 11, scope: !11205)
!11279 = !DILocation(line: 8839, column: 14, scope: !11205)
!11280 = !DILocation(line: 8848, column: 7, scope: !11210)
!11281 = !DILocation(line: 8848, column: 10, scope: !11210)
!11282 = !DILocation(line: 8848, column: 13, scope: !11210)
!11283 = !DILocation(line: 8848, column: 17, scope: !11210)
!11284 = !DILocation(line: 8849, column: 7, scope: !11210)
!11285 = !DILocation(line: 8849, column: 10, scope: !11210)
!11286 = !DILocation(line: 8849, column: 26, scope: !11210)
!11287 = !DILocation(line: 8850, column: 7, scope: !11210)
!11288 = !DILocation(line: 8850, column: 10, scope: !11210)
!11289 = !DILocation(line: 8850, column: 33, scope: !11210)
!11290 = !DILocation(line: 8848, column: 7, scope: !11193)
!11291 = !DILocation(line: 8852, column: 29, scope: !11209)
!11292 = !DILocation(line: 0, scope: !11209)
!11293 = !DILocation(line: 8854, column: 49, scope: !11209)
!11294 = !DILocation(line: 8854, column: 4, scope: !11209)
!11295 = !DILocation(line: 8856, column: 42, scope: !11209)
!11296 = !DILocation(line: 8857, column: 9, scope: !11209)
!11297 = !DILocation(line: 8856, column: 19, scope: !11209)
!11298 = !DILocation(line: 8861, column: 14, scope: !11209)
!11299 = !DILocation(line: 8866, column: 7, scope: !11215)
!11300 = !DILocation(line: 8866, column: 30, scope: !11215)
!11301 = !DILocation(line: 8866, column: 33, scope: !11215)
!11302 = !DILocation(line: 8866, column: 55, scope: !11215)
!11303 = !DILocation(line: 8866, column: 7, scope: !11193)
!11304 = !DILocation(line: 8868, column: 29, scope: !11214)
!11305 = !DILocation(line: 0, scope: !11214)
!11306 = !DILocation(line: 8870, column: 49, scope: !11214)
!11307 = !DILocation(line: 8870, column: 4, scope: !11214)
!11308 = !DILocation(line: 8872, column: 42, scope: !11214)
!11309 = !DILocation(line: 8873, column: 9, scope: !11214)
!11310 = !DILocation(line: 8872, column: 19, scope: !11214)
!11311 = !DILocation(line: 8877, column: 42, scope: !11214)
!11312 = !DILocation(line: 8878, column: 9, scope: !11214)
!11313 = !DILocation(line: 8877, column: 19, scope: !11214)
!11314 = !DILocation(line: 8882, column: 14, scope: !11214)
!11315 = !DILocation(line: 8886, column: 1, scope: !11193)
!11316 = distinct !DISubprogram(name: "fold_builtin_memchr", scope: !3, file: !3, line: 8626, type: !6050, scopeLine: 8627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11317)
!11317 = !{!11318, !11319, !11320, !11321, !11322, !11323, !11326, !11329, !11330}
!11318 = !DILocalVariable(name: "loc", arg: 1, scope: !11316, file: !3, line: 8626, type: !2998)
!11319 = !DILocalVariable(name: "arg1", arg: 2, scope: !11316, file: !3, line: 8626, type: !2914)
!11320 = !DILocalVariable(name: "arg2", arg: 3, scope: !11316, file: !3, line: 8626, type: !2914)
!11321 = !DILocalVariable(name: "len", arg: 4, scope: !11316, file: !3, line: 8626, type: !2914)
!11322 = !DILocalVariable(name: "type", arg: 5, scope: !11316, file: !3, line: 8626, type: !2914)
!11323 = !DILocalVariable(name: "p1", scope: !11324, file: !3, line: 8634, type: !2871)
!11324 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 8633, column: 5)
!11325 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 8628, column: 7)
!11326 = !DILocalVariable(name: "c", scope: !11327, file: !3, line: 8643, type: !2869)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 8642, column: 2)
!11328 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 8641, column: 11)
!11329 = !DILocalVariable(name: "r", scope: !11327, file: !3, line: 8644, type: !2871)
!11330 = !DILocalVariable(name: "tem", scope: !11327, file: !3, line: 8645, type: !2914)
!11331 = !DILocation(line: 0, scope: !11316)
!11332 = !DILocation(line: 8628, column: 8, scope: !11325)
!11333 = !DILocation(line: 8629, column: 7, scope: !11325)
!11334 = !DILocation(line: 8629, column: 11, scope: !11325)
!11335 = !DILocation(line: 8630, column: 7, scope: !11325)
!11336 = !DILocation(line: 8630, column: 11, scope: !11325)
!11337 = !DILocation(line: 8628, column: 7, scope: !11316)
!11338 = !DILocation(line: 8636, column: 11, scope: !11339)
!11339 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 8636, column: 11)
!11340 = !DILocation(line: 8636, column: 28, scope: !11339)
!11341 = !DILocation(line: 8637, column: 4, scope: !11339)
!11342 = !DILocation(line: 8637, column: 8, scope: !11339)
!11343 = !DILocation(line: 8636, column: 11, scope: !11324)
!11344 = !DILocation(line: 8640, column: 12, scope: !11324)
!11345 = !DILocation(line: 0, scope: !11324)
!11346 = !DILocation(line: 8641, column: 11, scope: !11328)
!11347 = !DILocation(line: 8641, column: 14, scope: !11328)
!11348 = !DILocation(line: 8641, column: 40, scope: !11328)
!11349 = !DILocation(line: 8641, column: 52, scope: !11328)
!11350 = !DILocation(line: 8641, column: 17, scope: !11328)
!11351 = !DILocation(line: 8641, column: 57, scope: !11328)
!11352 = !DILocation(line: 8641, column: 11, scope: !11324)
!11353 = !DILocation(line: 0, scope: !11327)
!11354 = !DILocation(line: 8643, column: 4, scope: !11327)
!11355 = !DILocation(line: 8647, column: 8, scope: !11356)
!11356 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 8647, column: 8)
!11357 = !DILocation(line: 8647, column: 8, scope: !11327)
!11358 = !DILocation(line: 8650, column: 29, scope: !11327)
!11359 = !DILocation(line: 8650, column: 32, scope: !11327)
!11360 = !DILocation(line: 8650, column: 17, scope: !11327)
!11361 = !DILocation(line: 8652, column: 10, scope: !11362)
!11362 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 8652, column: 8)
!11363 = !DILocation(line: 8652, column: 8, scope: !11327)
!11364 = !DILocation(line: 8653, column: 13, scope: !11362)
!11365 = !DILocation(line: 8653, column: 6, scope: !11362)
!11366 = !DILocation(line: 8655, column: 10, scope: !11327)
!11367 = !DILocation(line: 8657, column: 11, scope: !11327)
!11368 = !DILocation(line: 8657, column: 4, scope: !11327)
!11369 = !DILocation(line: 8658, column: 2, scope: !11328)
!11370 = !DILocation(line: 0, scope: !11325)
!11371 = !DILocation(line: 8661, column: 1, scope: !11316)
!11372 = distinct !DISubprogram(name: "fold_builtin_memcmp", scope: !3, file: !3, line: 8667, type: !8079, scopeLine: 8668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11373)
!11373 = !{!11374, !11375, !11376, !11377, !11378, !11379, !11380, !11383, !11386, !11387, !11388}
!11374 = !DILocalVariable(name: "loc", arg: 1, scope: !11372, file: !3, line: 8667, type: !2998)
!11375 = !DILocalVariable(name: "arg1", arg: 2, scope: !11372, file: !3, line: 8667, type: !2914)
!11376 = !DILocalVariable(name: "arg2", arg: 3, scope: !11372, file: !3, line: 8667, type: !2914)
!11377 = !DILocalVariable(name: "len", arg: 4, scope: !11372, file: !3, line: 8667, type: !2914)
!11378 = !DILocalVariable(name: "p1", scope: !11372, file: !3, line: 8669, type: !2871)
!11379 = !DILocalVariable(name: "p2", scope: !11372, file: !3, line: 8669, type: !2871)
!11380 = !DILocalVariable(name: "r", scope: !11381, file: !3, line: 8694, type: !4324)
!11381 = distinct !DILexicalBlock(scope: !11382, file: !3, line: 8693, column: 5)
!11382 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 8690, column: 7)
!11383 = !DILocalVariable(name: "cst_uchar_node", scope: !11384, file: !3, line: 8708, type: !2914)
!11384 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 8707, column: 5)
!11385 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 8706, column: 7)
!11386 = !DILocalVariable(name: "cst_uchar_ptr_node", scope: !11384, file: !3, line: 8709, type: !2914)
!11387 = !DILocalVariable(name: "ind1", scope: !11384, file: !3, line: 8712, type: !2914)
!11388 = !DILocalVariable(name: "ind2", scope: !11384, file: !3, line: 8718, type: !2914)
!11389 = !DILocation(line: 0, scope: !11372)
!11390 = !DILocation(line: 8671, column: 8, scope: !11391)
!11391 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 8671, column: 7)
!11392 = !DILocation(line: 8672, column: 7, scope: !11391)
!11393 = !DILocation(line: 8672, column: 11, scope: !11391)
!11394 = !DILocation(line: 8673, column: 7, scope: !11391)
!11395 = !DILocation(line: 8673, column: 11, scope: !11391)
!11396 = !DILocation(line: 8671, column: 7, scope: !11372)
!11397 = !DILocation(line: 8677, column: 7, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 8677, column: 7)
!11399 = !DILocation(line: 8677, column: 7, scope: !11372)
!11400 = !DILocation(line: 8678, column: 40, scope: !11398)
!11401 = !DILocation(line: 8678, column: 59, scope: !11398)
!11402 = !DILocation(line: 8678, column: 12, scope: !11398)
!11403 = !DILocation(line: 8678, column: 5, scope: !11398)
!11404 = !DILocation(line: 8682, column: 7, scope: !11405)
!11405 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 8682, column: 7)
!11406 = !DILocation(line: 8682, column: 7, scope: !11372)
!11407 = !DILocation(line: 8683, column: 39, scope: !11405)
!11408 = !DILocation(line: 8683, column: 58, scope: !11405)
!11409 = !DILocation(line: 8683, column: 12, scope: !11405)
!11410 = !DILocation(line: 8683, column: 5, scope: !11405)
!11411 = !DILocation(line: 8685, column: 8, scope: !11372)
!11412 = !DILocation(line: 8686, column: 8, scope: !11372)
!11413 = !DILocation(line: 8690, column: 7, scope: !11382)
!11414 = !DILocation(line: 8690, column: 33, scope: !11382)
!11415 = !DILocation(line: 8690, column: 30, scope: !11382)
!11416 = !DILocation(line: 8690, column: 39, scope: !11382)
!11417 = !DILocation(line: 8691, column: 33, scope: !11382)
!11418 = !DILocation(line: 8691, column: 45, scope: !11382)
!11419 = !DILocation(line: 8691, column: 10, scope: !11382)
!11420 = !DILocation(line: 8691, column: 50, scope: !11382)
!11421 = !DILocation(line: 8692, column: 7, scope: !11382)
!11422 = !DILocation(line: 8692, column: 33, scope: !11382)
!11423 = !DILocation(line: 8692, column: 45, scope: !11382)
!11424 = !DILocation(line: 8692, column: 10, scope: !11382)
!11425 = !DILocation(line: 8692, column: 50, scope: !11382)
!11426 = !DILocation(line: 8690, column: 7, scope: !11372)
!11427 = !DILocation(line: 8694, column: 37, scope: !11381)
!11428 = !DILocation(line: 8694, column: 21, scope: !11381)
!11429 = !DILocation(line: 0, scope: !11381)
!11430 = !DILocation(line: 8696, column: 13, scope: !11431)
!11431 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 8696, column: 11)
!11432 = !DILocation(line: 8696, column: 11, scope: !11381)
!11433 = !DILocation(line: 8697, column: 9, scope: !11431)
!11434 = !DILocation(line: 8697, column: 2, scope: !11431)
!11435 = !DILocation(line: 8698, column: 18, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11431, file: !3, line: 8698, column: 16)
!11437 = !DILocation(line: 8698, column: 16, scope: !11431)
!11438 = !DILocation(line: 8699, column: 9, scope: !11436)
!11439 = !DILocation(line: 8699, column: 2, scope: !11436)
!11440 = !DILocation(line: 8701, column: 9, scope: !11436)
!11441 = !DILocation(line: 8701, column: 2, scope: !11436)
!11442 = !DILocation(line: 8706, column: 7, scope: !11385)
!11443 = !DILocation(line: 8706, column: 30, scope: !11385)
!11444 = !DILocation(line: 8706, column: 33, scope: !11385)
!11445 = !DILocation(line: 8706, column: 55, scope: !11385)
!11446 = !DILocation(line: 8706, column: 7, scope: !11372)
!11447 = !DILocation(line: 8708, column: 29, scope: !11384)
!11448 = !DILocation(line: 0, scope: !11384)
!11449 = !DILocation(line: 8710, column: 49, scope: !11384)
!11450 = !DILocation(line: 8710, column: 4, scope: !11384)
!11451 = !DILocation(line: 8713, column: 27, scope: !11384)
!11452 = !DILocation(line: 8714, column: 8, scope: !11384)
!11453 = !DILocation(line: 8713, column: 4, scope: !11384)
!11454 = !DILocation(line: 8719, column: 27, scope: !11384)
!11455 = !DILocation(line: 8720, column: 8, scope: !11384)
!11456 = !DILocation(line: 8719, column: 4, scope: !11384)
!11457 = !DILocation(line: 8724, column: 14, scope: !11384)
!11458 = !DILocation(line: 8728, column: 1, scope: !11372)
!11459 = distinct !DISubprogram(name: "fold_builtin_strcat_chk", scope: !3, file: !3, line: 12421, type: !6050, scopeLine: 12423, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11460)
!11460 = !{!11461, !11462, !11463, !11464, !11465, !11466, !11467}
!11461 = !DILocalVariable(name: "loc", arg: 1, scope: !11459, file: !3, line: 12421, type: !2998)
!11462 = !DILocalVariable(name: "fndecl", arg: 2, scope: !11459, file: !3, line: 12421, type: !2914)
!11463 = !DILocalVariable(name: "dest", arg: 3, scope: !11459, file: !3, line: 12421, type: !2914)
!11464 = !DILocalVariable(name: "src", arg: 4, scope: !11459, file: !3, line: 12422, type: !2914)
!11465 = !DILocalVariable(name: "size", arg: 5, scope: !11459, file: !3, line: 12422, type: !2914)
!11466 = !DILocalVariable(name: "fn", scope: !11459, file: !3, line: 12424, type: !2914)
!11467 = !DILocalVariable(name: "p", scope: !11459, file: !3, line: 12425, type: !2871)
!11468 = !DILocation(line: 0, scope: !11459)
!11469 = !DILocation(line: 12427, column: 8, scope: !11470)
!11470 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 12427, column: 7)
!11471 = !DILocation(line: 12428, column: 7, scope: !11470)
!11472 = !DILocation(line: 12428, column: 11, scope: !11470)
!11473 = !DILocation(line: 12429, column: 7, scope: !11470)
!11474 = !DILocation(line: 12429, column: 11, scope: !11470)
!11475 = !DILocation(line: 12427, column: 7, scope: !11459)
!11476 = !DILocation(line: 12432, column: 7, scope: !11459)
!11477 = !DILocation(line: 12434, column: 7, scope: !11478)
!11478 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 12434, column: 7)
!11479 = !DILocation(line: 12434, column: 9, scope: !11478)
!11480 = !DILocation(line: 12434, column: 12, scope: !11478)
!11481 = !DILocation(line: 12434, column: 15, scope: !11478)
!11482 = !DILocation(line: 12434, column: 7, scope: !11459)
!11483 = !DILocation(line: 12435, column: 39, scope: !11478)
!11484 = !DILocation(line: 12435, column: 12, scope: !11478)
!11485 = !DILocation(line: 12435, column: 5, scope: !11478)
!11486 = !DILocation(line: 12437, column: 9, scope: !11487)
!11487 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 12437, column: 7)
!11488 = !DILocation(line: 12437, column: 33, scope: !11487)
!11489 = !DILocation(line: 12437, column: 38, scope: !11487)
!11490 = !DILocation(line: 12437, column: 7, scope: !11459)
!11491 = !DILocation(line: 12441, column: 8, scope: !11459)
!11492 = !DILocation(line: 12442, column: 8, scope: !11493)
!11493 = distinct !DILexicalBlock(scope: !11459, file: !3, line: 12442, column: 7)
!11494 = !DILocation(line: 12442, column: 7, scope: !11459)
!11495 = !DILocation(line: 12445, column: 10, scope: !11459)
!11496 = !DILocation(line: 12445, column: 3, scope: !11459)
!11497 = !DILocation(line: 12446, column: 1, scope: !11459)
!11498 = distinct !DISubprogram(name: "readonly_data_expr", scope: !3, file: !3, line: 11072, type: !4846, scopeLine: 11073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11499)
!11499 = !{!11500}
!11500 = !DILocalVariable(name: "exp", arg: 1, scope: !11498, file: !3, line: 11072, type: !2914)
!11501 = !DILocation(line: 0, scope: !11498)
!11502 = !DILocation(line: 11074, column: 3, scope: !11498)
!11503 = !DILocation(line: 11076, column: 7, scope: !11504)
!11504 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 11076, column: 7)
!11505 = !DILocation(line: 11076, column: 23, scope: !11504)
!11506 = !DILocation(line: 11076, column: 7, scope: !11498)
!11507 = !DILocation(line: 11079, column: 27, scope: !11498)
!11508 = !DILocation(line: 11079, column: 9, scope: !11498)
!11509 = !DILocation(line: 11080, column: 8, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 11080, column: 7)
!11511 = !DILocation(line: 11080, column: 7, scope: !11498)
!11512 = !DILocation(line: 11086, column: 7, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 11086, column: 7)
!11514 = !DILocation(line: 11086, column: 23, scope: !11513)
!11515 = !DILocation(line: 11087, column: 7, scope: !11513)
!11516 = !DILocation(line: 11087, column: 26, scope: !11513)
!11517 = !DILocation(line: 11088, column: 7, scope: !11513)
!11518 = !DILocation(line: 11088, column: 27, scope: !11513)
!11519 = !DILocation(line: 11088, column: 39, scope: !11513)
!11520 = !DILocation(line: 11088, column: 42, scope: !11513)
!11521 = !DILocation(line: 11086, column: 7, scope: !11498)
!11522 = !DILocation(line: 11089, column: 12, scope: !11513)
!11523 = !DILocation(line: 11089, column: 5, scope: !11513)
!11524 = !DILocation(line: 11092, column: 1, scope: !11498)
!11525 = distinct !DISubprogram(name: "ranges_overlap_p", scope: !11526, file: !11526, line: 1192, type: !11527, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11529)
!11526 = !DIFile(filename: "./tree-flow-inline.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!11527 = !DISubroutineType(types: !11528)
!11528 = !{!2866, !2927, !2927, !2927, !2927}
!11529 = !{!11530, !11531, !11532, !11533}
!11530 = !DILocalVariable(name: "pos1", arg: 1, scope: !11525, file: !11526, line: 1192, type: !2927)
!11531 = !DILocalVariable(name: "size1", arg: 2, scope: !11525, file: !11526, line: 1193, type: !2927)
!11532 = !DILocalVariable(name: "pos2", arg: 3, scope: !11525, file: !11526, line: 1194, type: !2927)
!11533 = !DILocalVariable(name: "size2", arg: 4, scope: !11525, file: !11526, line: 1195, type: !2927)
!11534 = !DILocation(line: 0, scope: !11525)
!11535 = !DILocation(line: 1197, column: 12, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11525, file: !11526, line: 1197, column: 7)
!11537 = !DILocation(line: 1198, column: 7, scope: !11536)
!11538 = !DILocation(line: 1198, column: 17, scope: !11536)
!11539 = !DILocation(line: 1199, column: 20, scope: !11536)
!11540 = !DILocation(line: 1199, column: 12, scope: !11536)
!11541 = !DILocation(line: 1199, column: 4, scope: !11536)
!11542 = !DILocation(line: 1201, column: 12, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11525, file: !11526, line: 1201, column: 7)
!11544 = !DILocation(line: 1202, column: 7, scope: !11543)
!11545 = !DILocation(line: 1202, column: 17, scope: !11543)
!11546 = !DILocation(line: 1203, column: 20, scope: !11543)
!11547 = !DILocation(line: 1203, column: 12, scope: !11543)
!11548 = !DILocation(line: 1203, column: 4, scope: !11543)
!11549 = !DILocation(line: 1206, column: 3, scope: !11525)
!11550 = !DILocation(line: 1207, column: 1, scope: !11525)
!11551 = distinct !DISubprogram(name: "gimple_in_ssa_p", scope: !11526, file: !11526, line: 33, type: !11552, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11556)
!11552 = !DISubroutineType(types: !11553)
!11553 = !{!2866, !11554}
!11554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11555, size: 64)
!11555 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3619)
!11556 = !{!11557}
!11557 = !DILocalVariable(name: "fun", arg: 1, scope: !11551, file: !11526, line: 33, type: !11554)
!11558 = !DILocation(line: 0, scope: !11551)
!11559 = !DILocation(line: 35, column: 10, scope: !11551)
!11560 = !DILocation(line: 35, column: 14, scope: !11551)
!11561 = !DILocation(line: 35, column: 22, scope: !11551)
!11562 = !DILocation(line: 35, column: 17, scope: !11551)
!11563 = !DILocation(line: 35, column: 32, scope: !11551)
!11564 = !DILocation(line: 35, column: 51, scope: !11551)
!11565 = !DILocation(line: 35, column: 3, scope: !11551)
!11566 = distinct !DISubprogram(name: "fold_builtin_strncat_chk", scope: !3, file: !3, line: 12452, type: !6119, scopeLine: 12454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11567)
!11567 = !{!11568, !11569, !11570, !11571, !11572, !11573, !11574, !11575, !11576}
!11568 = !DILocalVariable(name: "loc", arg: 1, scope: !11566, file: !3, line: 12452, type: !2998)
!11569 = !DILocalVariable(name: "fndecl", arg: 2, scope: !11566, file: !3, line: 12452, type: !2914)
!11570 = !DILocalVariable(name: "dest", arg: 3, scope: !11566, file: !3, line: 12453, type: !2914)
!11571 = !DILocalVariable(name: "src", arg: 4, scope: !11566, file: !3, line: 12453, type: !2914)
!11572 = !DILocalVariable(name: "len", arg: 5, scope: !11566, file: !3, line: 12453, type: !2914)
!11573 = !DILocalVariable(name: "size", arg: 6, scope: !11566, file: !3, line: 12453, type: !2914)
!11574 = !DILocalVariable(name: "fn", scope: !11566, file: !3, line: 12455, type: !2914)
!11575 = !DILocalVariable(name: "p", scope: !11566, file: !3, line: 12456, type: !2871)
!11576 = !DILocalVariable(name: "src_len", scope: !11577, file: !3, line: 12476, type: !2914)
!11577 = distinct !DILexicalBlock(scope: !11578, file: !3, line: 12475, column: 5)
!11578 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 12474, column: 7)
!11579 = !DILocation(line: 0, scope: !11566)
!11580 = !DILocation(line: 12458, column: 8, scope: !11581)
!11581 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 12458, column: 7)
!11582 = !DILocation(line: 12459, column: 7, scope: !11581)
!11583 = !DILocation(line: 12459, column: 11, scope: !11581)
!11584 = !DILocation(line: 12460, column: 7, scope: !11581)
!11585 = !DILocation(line: 12460, column: 11, scope: !11581)
!11586 = !DILocation(line: 12461, column: 7, scope: !11581)
!11587 = !DILocation(line: 12461, column: 11, scope: !11581)
!11588 = !DILocation(line: 12458, column: 7, scope: !11566)
!11589 = !DILocation(line: 12464, column: 7, scope: !11566)
!11590 = !DILocation(line: 12466, column: 7, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 12466, column: 7)
!11592 = !DILocation(line: 12466, column: 9, scope: !11591)
!11593 = !DILocation(line: 12466, column: 12, scope: !11591)
!11594 = !DILocation(line: 12466, column: 15, scope: !11591)
!11595 = !DILocation(line: 12466, column: 7, scope: !11566)
!11596 = !DILocation(line: 12467, column: 39, scope: !11591)
!11597 = !DILocation(line: 12467, column: 12, scope: !11591)
!11598 = !DILocation(line: 12467, column: 5, scope: !11591)
!11599 = !DILocation(line: 12468, column: 12, scope: !11600)
!11600 = distinct !DILexicalBlock(scope: !11591, file: !3, line: 12468, column: 12)
!11601 = !DILocation(line: 12468, column: 12, scope: !11591)
!11602 = !DILocation(line: 12469, column: 39, scope: !11600)
!11603 = !DILocation(line: 12469, column: 12, scope: !11600)
!11604 = !DILocation(line: 12469, column: 5, scope: !11600)
!11605 = !DILocation(line: 12471, column: 9, scope: !11606)
!11606 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 12471, column: 7)
!11607 = !DILocation(line: 12471, column: 7, scope: !11566)
!11608 = !DILocation(line: 12474, column: 9, scope: !11578)
!11609 = !DILocation(line: 12474, column: 7, scope: !11566)
!11610 = !DILocation(line: 12476, column: 22, scope: !11577)
!11611 = !DILocation(line: 0, scope: !11577)
!11612 = !DILocation(line: 12477, column: 11, scope: !11613)
!11613 = distinct !DILexicalBlock(scope: !11577, file: !3, line: 12477, column: 11)
!11614 = !DILocation(line: 12478, column: 4, scope: !11613)
!11615 = !DILocation(line: 12478, column: 7, scope: !11613)
!11616 = !DILocation(line: 12479, column: 4, scope: !11613)
!11617 = !DILocation(line: 12479, column: 7, scope: !11613)
!11618 = !DILocation(line: 12480, column: 4, scope: !11613)
!11619 = !DILocation(line: 12480, column: 9, scope: !11613)
!11620 = !DILocation(line: 12477, column: 11, scope: !11577)
!11621 = !DILocation(line: 12483, column: 9, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11613, file: !3, line: 12481, column: 2)
!11623 = !DILocation(line: 12484, column: 9, scope: !11624)
!11624 = distinct !DILexicalBlock(scope: !11622, file: !3, line: 12484, column: 8)
!11625 = !DILocation(line: 12484, column: 8, scope: !11622)
!11626 = !DILocation(line: 12487, column: 11, scope: !11622)
!11627 = !DILocation(line: 12487, column: 4, scope: !11622)
!11628 = !DILocation(line: 12493, column: 8, scope: !11566)
!11629 = !DILocation(line: 12494, column: 8, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11566, file: !3, line: 12494, column: 7)
!11631 = !DILocation(line: 12494, column: 7, scope: !11566)
!11632 = !DILocation(line: 12497, column: 10, scope: !11566)
!11633 = !DILocation(line: 12497, column: 3, scope: !11566)
!11634 = !DILocation(line: 12498, column: 1, scope: !11566)
!11635 = distinct !DISubprogram(name: "fold_builtin_sprintf_chk", scope: !3, file: !3, line: 12505, type: !11636, scopeLine: 12507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11638)
!11636 = !DISubroutineType(types: !11637)
!11637 = !{!2914, !2998, !2914, !527}
!11638 = !{!11639, !11640, !11641, !11642, !11643, !11644, !11645, !11646, !11647, !11648, !11649, !11650}
!11639 = !DILocalVariable(name: "loc", arg: 1, scope: !11635, file: !3, line: 12505, type: !2998)
!11640 = !DILocalVariable(name: "exp", arg: 2, scope: !11635, file: !3, line: 12505, type: !2914)
!11641 = !DILocalVariable(name: "fcode", arg: 3, scope: !11635, file: !3, line: 12506, type: !527)
!11642 = !DILocalVariable(name: "dest", scope: !11635, file: !3, line: 12508, type: !2914)
!11643 = !DILocalVariable(name: "size", scope: !11635, file: !3, line: 12508, type: !2914)
!11644 = !DILocalVariable(name: "len", scope: !11635, file: !3, line: 12508, type: !2914)
!11645 = !DILocalVariable(name: "fn", scope: !11635, file: !3, line: 12508, type: !2914)
!11646 = !DILocalVariable(name: "fmt", scope: !11635, file: !3, line: 12508, type: !2914)
!11647 = !DILocalVariable(name: "flag", scope: !11635, file: !3, line: 12508, type: !2914)
!11648 = !DILocalVariable(name: "fmt_str", scope: !11635, file: !3, line: 12509, type: !2871)
!11649 = !DILocalVariable(name: "nargs", scope: !11635, file: !3, line: 12510, type: !1249)
!11650 = !DILocalVariable(name: "arg", scope: !11651, file: !3, line: 12551, type: !2914)
!11651 = distinct !DILexicalBlock(scope: !11652, file: !3, line: 12550, column: 2)
!11652 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 12548, column: 16)
!11653 = distinct !DILexicalBlock(scope: !11654, file: !3, line: 12541, column: 11)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 12539, column: 5)
!11655 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12538, column: 7)
!11656 = !DILocation(line: 0, scope: !11635)
!11657 = !DILocation(line: 12510, column: 15, scope: !11635)
!11658 = !DILocation(line: 12513, column: 13, scope: !11659)
!11659 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12513, column: 7)
!11660 = !DILocation(line: 12513, column: 7, scope: !11635)
!11661 = !DILocation(line: 12515, column: 10, scope: !11635)
!11662 = !DILocation(line: 12516, column: 8, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12516, column: 7)
!11664 = !DILocation(line: 12516, column: 7, scope: !11635)
!11665 = !DILocation(line: 12518, column: 10, scope: !11635)
!11666 = !DILocation(line: 12519, column: 8, scope: !11667)
!11667 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12519, column: 7)
!11668 = !DILocation(line: 12519, column: 7, scope: !11635)
!11669 = !DILocation(line: 12521, column: 10, scope: !11635)
!11670 = !DILocation(line: 12522, column: 8, scope: !11671)
!11671 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12522, column: 7)
!11672 = !DILocation(line: 12522, column: 7, scope: !11635)
!11673 = !DILocation(line: 12524, column: 9, scope: !11635)
!11674 = !DILocation(line: 12525, column: 8, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12525, column: 7)
!11676 = !DILocation(line: 12525, column: 7, scope: !11635)
!11677 = !DILocation(line: 12528, column: 9, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12528, column: 7)
!11679 = !DILocation(line: 12528, column: 7, scope: !11635)
!11680 = !DILocation(line: 12533, column: 8, scope: !11681)
!11681 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12533, column: 7)
!11682 = !DILocation(line: 12533, column: 7, scope: !11635)
!11683 = !DILocation(line: 12537, column: 13, scope: !11635)
!11684 = !DILocation(line: 12538, column: 15, scope: !11655)
!11685 = !DILocation(line: 12538, column: 7, scope: !11635)
!11686 = !DILocation(line: 12541, column: 28, scope: !11653)
!11687 = !DILocation(line: 12541, column: 11, scope: !11653)
!11688 = !DILocation(line: 12541, column: 44, scope: !11653)
!11689 = !DILocation(line: 12541, column: 11, scope: !11654)
!11690 = !DILocation(line: 12543, column: 14, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11692, file: !3, line: 12543, column: 8)
!11692 = distinct !DILexicalBlock(scope: !11653, file: !3, line: 12542, column: 2)
!11693 = !DILocation(line: 12543, column: 47, scope: !11691)
!11694 = !DILocation(line: 12543, column: 38, scope: !11691)
!11695 = !DILocation(line: 12544, column: 28, scope: !11691)
!11696 = !DILocation(line: 12544, column: 44, scope: !11691)
!11697 = !DILocation(line: 12544, column: 12, scope: !11691)
!11698 = !DILocation(line: 12544, column: 6, scope: !11691)
!11699 = !DILocation(line: 12548, column: 22, scope: !11652)
!11700 = !DILocation(line: 12549, column: 9, scope: !11652)
!11701 = !DILocation(line: 12549, column: 12, scope: !11652)
!11702 = !DILocation(line: 12549, column: 47, scope: !11652)
!11703 = !DILocation(line: 12553, column: 14, scope: !11704)
!11704 = distinct !DILexicalBlock(scope: !11651, file: !3, line: 12553, column: 8)
!11705 = !DILocation(line: 12548, column: 16, scope: !11653)
!11706 = !DILocation(line: 12555, column: 14, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 12554, column: 6)
!11708 = !DILocation(line: 0, scope: !11651)
!11709 = !DILocation(line: 12556, column: 12, scope: !11710)
!11710 = distinct !DILexicalBlock(scope: !11707, file: !3, line: 12556, column: 12)
!11711 = !DILocation(line: 12556, column: 12, scope: !11707)
!11712 = !DILocation(line: 12558, column: 11, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 12557, column: 3)
!11714 = !DILocation(line: 12559, column: 11, scope: !11715)
!11715 = distinct !DILexicalBlock(scope: !11713, file: !3, line: 12559, column: 9)
!11716 = !DILocation(line: 12559, column: 15, scope: !11715)
!11717 = !DILocation(line: 12559, column: 20, scope: !11715)
!11718 = !DILocation(line: 12559, column: 9, scope: !11713)
!11719 = !DILocation(line: 12560, column: 7, scope: !11715)
!11720 = !DILocation(line: 12566, column: 9, scope: !11721)
!11721 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12566, column: 7)
!11722 = !DILocation(line: 12566, column: 7, scope: !11635)
!11723 = !DILocation(line: 12568, column: 13, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11725, file: !3, line: 12568, column: 11)
!11725 = distinct !DILexicalBlock(scope: !11721, file: !3, line: 12567, column: 5)
!11726 = !DILocation(line: 12568, column: 17, scope: !11724)
!11727 = !DILocation(line: 12568, column: 22, scope: !11724)
!11728 = !DILocation(line: 12568, column: 11, scope: !11725)
!11729 = !DILocation(line: 12574, column: 9, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12574, column: 7)
!11731 = !DILocation(line: 12574, column: 7, scope: !11635)
!11732 = !DILocation(line: 12576, column: 11, scope: !11733)
!11733 = distinct !DILexicalBlock(scope: !11730, file: !3, line: 12575, column: 5)
!11734 = !DILocation(line: 12578, column: 28, scope: !11735)
!11735 = distinct !DILexicalBlock(scope: !11733, file: !3, line: 12578, column: 11)
!11736 = !DILocation(line: 12578, column: 11, scope: !11735)
!11737 = !DILocation(line: 12578, column: 44, scope: !11735)
!11738 = !DILocation(line: 12579, column: 4, scope: !11735)
!11739 = !DILocation(line: 12579, column: 7, scope: !11735)
!11740 = !DILocation(line: 12578, column: 11, scope: !11733)
!11741 = !DILocation(line: 12584, column: 29, scope: !11635)
!11742 = !DILocation(line: 12584, column: 23, scope: !11635)
!11743 = !DILocation(line: 12584, column: 8, scope: !11635)
!11744 = !DILocation(line: 12586, column: 8, scope: !11745)
!11745 = distinct !DILexicalBlock(scope: !11635, file: !3, line: 12586, column: 7)
!11746 = !DILocation(line: 12586, column: 7, scope: !11635)
!11747 = !DILocation(line: 12589, column: 10, scope: !11635)
!11748 = !DILocation(line: 12589, column: 3, scope: !11635)
!11749 = !DILocation(line: 12590, column: 1, scope: !11635)
!11750 = distinct !DISubprogram(name: "fold_builtin_fpclassify", scope: !3, file: !3, line: 9575, type: !8856, scopeLine: 9576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11751)
!11751 = !{!11752, !11753, !11754, !11755, !11756, !11757, !11758, !11759, !11760, !11761, !11762, !11763, !11764, !11765}
!11752 = !DILocalVariable(name: "loc", arg: 1, scope: !11750, file: !3, line: 9575, type: !2998)
!11753 = !DILocalVariable(name: "exp", arg: 2, scope: !11750, file: !3, line: 9575, type: !2914)
!11754 = !DILocalVariable(name: "fp_nan", scope: !11750, file: !3, line: 9577, type: !2914)
!11755 = !DILocalVariable(name: "fp_infinite", scope: !11750, file: !3, line: 9577, type: !2914)
!11756 = !DILocalVariable(name: "fp_normal", scope: !11750, file: !3, line: 9577, type: !2914)
!11757 = !DILocalVariable(name: "fp_subnormal", scope: !11750, file: !3, line: 9577, type: !2914)
!11758 = !DILocalVariable(name: "fp_zero", scope: !11750, file: !3, line: 9577, type: !2914)
!11759 = !DILocalVariable(name: "arg", scope: !11750, file: !3, line: 9578, type: !2914)
!11760 = !DILocalVariable(name: "type", scope: !11750, file: !3, line: 9578, type: !2914)
!11761 = !DILocalVariable(name: "res", scope: !11750, file: !3, line: 9578, type: !2914)
!11762 = !DILocalVariable(name: "tmp", scope: !11750, file: !3, line: 9578, type: !2914)
!11763 = !DILocalVariable(name: "mode", scope: !11750, file: !3, line: 9579, type: !5)
!11764 = !DILocalVariable(name: "r", scope: !11750, file: !3, line: 9580, type: !2936)
!11765 = !DILocalVariable(name: "buf", scope: !11750, file: !3, line: 9581, type: !9007)
!11766 = !DILocation(line: 0, scope: !11750)
!11767 = !DILocation(line: 9580, column: 3, scope: !11750)
!11768 = !DILocation(line: 9581, column: 3, scope: !11750)
!11769 = !DILocation(line: 9581, column: 8, scope: !11750)
!11770 = !DILocation(line: 9584, column: 8, scope: !11771)
!11771 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 9584, column: 7)
!11772 = !DILocation(line: 9584, column: 7, scope: !11750)
!11773 = !DILocation(line: 9589, column: 12, scope: !11750)
!11774 = !DILocation(line: 9590, column: 17, scope: !11750)
!11775 = !DILocation(line: 9591, column: 15, scope: !11750)
!11776 = !DILocation(line: 9592, column: 18, scope: !11750)
!11777 = !DILocation(line: 9593, column: 13, scope: !11750)
!11778 = !DILocation(line: 9594, column: 9, scope: !11750)
!11779 = !DILocation(line: 9595, column: 10, scope: !11750)
!11780 = !DILocation(line: 9596, column: 10, scope: !11750)
!11781 = !DILocation(line: 9597, column: 28, scope: !11750)
!11782 = !DILocation(line: 9597, column: 9, scope: !11750)
!11783 = !DILocation(line: 9605, column: 9, scope: !11750)
!11784 = !DILocation(line: 9607, column: 9, scope: !11750)
!11785 = !DILocation(line: 9610, column: 27, scope: !11750)
!11786 = !DILocation(line: 9610, column: 52, scope: !11750)
!11787 = !DILocation(line: 9610, column: 57, scope: !11750)
!11788 = !DILocation(line: 9610, column: 3, scope: !11750)
!11789 = !DILocation(line: 9611, column: 3, scope: !11750)
!11790 = !DILocation(line: 9612, column: 9, scope: !11750)
!11791 = !DILocation(line: 9614, column: 9, scope: !11750)
!11792 = !DILocation(line: 9616, column: 7, scope: !11793)
!11793 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 9616, column: 7)
!11794 = !DILocation(line: 0, scope: !11793)
!11795 = !DILocation(line: 9618, column: 7, scope: !11796)
!11796 = distinct !DILexicalBlock(scope: !11793, file: !3, line: 9617, column: 5)
!11797 = !DILocation(line: 9619, column: 13, scope: !11796)
!11798 = !DILocation(line: 9621, column: 13, scope: !11796)
!11799 = !DILocation(line: 9623, column: 5, scope: !11796)
!11800 = !DILocation(line: 9625, column: 7, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11750, file: !3, line: 9625, column: 7)
!11802 = !DILocation(line: 0, scope: !11801)
!11803 = !DILocation(line: 9627, column: 13, scope: !11804)
!11804 = distinct !DILexicalBlock(scope: !11801, file: !3, line: 9626, column: 5)
!11805 = !DILocation(line: 9628, column: 13, scope: !11804)
!11806 = !DILocation(line: 9629, column: 5, scope: !11804)
!11807 = !DILocation(line: 9632, column: 1, scope: !11750)
!11808 = distinct !DISubprogram(name: "gimple_num_ops", scope: !1248, file: !1248, line: 1596, type: !6509, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11809)
!11809 = !{!11810}
!11810 = !DILocalVariable(name: "gs", arg: 1, scope: !11808, file: !1248, line: 1596, type: !6475)
!11811 = !DILocation(line: 0, scope: !11808)
!11812 = !DILocation(line: 1598, column: 21, scope: !11808)
!11813 = !DILocation(line: 1598, column: 3, scope: !11808)
!11814 = distinct !DISubprogram(name: "gimple_op", scope: !1248, file: !1248, line: 1631, type: !6519, scopeLine: 1632, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11815)
!11815 = !{!11816, !11817}
!11816 = !DILocalVariable(name: "gs", arg: 1, scope: !11814, file: !1248, line: 1631, type: !6475)
!11817 = !DILocalVariable(name: "i", arg: 2, scope: !11814, file: !1248, line: 1631, type: !7)
!11818 = !DILocation(line: 0, scope: !11814)
!11819 = !DILocation(line: 1633, column: 7, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11814, file: !1248, line: 1633, column: 7)
!11821 = !DILocation(line: 1633, column: 7, scope: !11814)
!11822 = !DILocation(line: 1638, column: 14, scope: !11823)
!11823 = distinct !DILexicalBlock(scope: !11820, file: !1248, line: 1634, column: 5)
!11824 = !DILocation(line: 1638, column: 7, scope: !11823)
!11825 = !DILocation(line: 0, scope: !11820)
!11826 = !DILocation(line: 1642, column: 1, scope: !11814)
!11827 = distinct !DISubprogram(name: "gimple_has_ops", scope: !1248, file: !1248, line: 1274, type: !7490, scopeLine: 1275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11828)
!11828 = !{!11829}
!11829 = !DILocalVariable(name: "g", arg: 1, scope: !11827, file: !1248, line: 1274, type: !6475)
!11830 = !DILocation(line: 0, scope: !11827)
!11831 = !DILocation(line: 1276, column: 10, scope: !11827)
!11832 = !DILocation(line: 1276, column: 26, scope: !11827)
!11833 = !DILocation(line: 1276, column: 41, scope: !11827)
!11834 = !DILocation(line: 1276, column: 44, scope: !11827)
!11835 = !DILocation(line: 1276, column: 60, scope: !11827)
!11836 = !DILocation(line: 1276, column: 3, scope: !11827)
!11837 = distinct !DISubprogram(name: "gimple_ops", scope: !1248, file: !1248, line: 1614, type: !11838, scopeLine: 1615, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11840)
!11838 = !DISubroutineType(types: !11839)
!11839 = !{!3231, !3196}
!11840 = !{!11841, !11842}
!11841 = !DILocalVariable(name: "gs", arg: 1, scope: !11837, file: !1248, line: 1614, type: !3196)
!11842 = !DILocalVariable(name: "off", scope: !11837, file: !1248, line: 1616, type: !3342)
!11843 = !DILocation(line: 0, scope: !11837)
!11844 = !DILocation(line: 1621, column: 28, scope: !11837)
!11845 = !DILocation(line: 1621, column: 9, scope: !11837)
!11846 = !DILocation(line: 1622, column: 3, scope: !11837)
!11847 = !DILocation(line: 1624, column: 20, scope: !11837)
!11848 = !DILocation(line: 1624, column: 32, scope: !11837)
!11849 = !DILocation(line: 1624, column: 10, scope: !11837)
!11850 = !DILocation(line: 1624, column: 3, scope: !11837)
!11851 = distinct !DISubprogram(name: "gimple_code", scope: !1248, file: !1248, line: 1052, type: !11852, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11854)
!11852 = !DISubroutineType(types: !11853)
!11853 = !{!2800, !6475}
!11854 = !{!11855}
!11855 = !DILocalVariable(name: "g", arg: 1, scope: !11851, file: !1248, line: 1052, type: !6475)
!11856 = !DILocation(line: 0, scope: !11851)
!11857 = !DILocation(line: 1054, column: 20, scope: !11851)
!11858 = !DILocation(line: 1054, column: 3, scope: !11851)
!11859 = distinct !DISubprogram(name: "gimple_statement_structure", scope: !1248, file: !1248, line: 1073, type: !11860, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11862)
!11860 = !DISubroutineType(types: !11861)
!11861 = !{!2838, !3196}
!11862 = !{!11863}
!11863 = !DILocalVariable(name: "gs", arg: 1, scope: !11859, file: !1248, line: 1073, type: !3196)
!11864 = !DILocation(line: 0, scope: !11859)
!11865 = !DILocation(line: 1075, column: 24, scope: !11859)
!11866 = !DILocation(line: 1075, column: 10, scope: !11859)
!11867 = !DILocation(line: 1075, column: 3, scope: !11859)
!11868 = distinct !DISubprogram(name: "gss_for_code", scope: !1248, file: !1248, line: 1061, type: !11869, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11871)
!11869 = !DISubroutineType(types: !11870)
!11870 = !{!2838, !2800}
!11871 = !{!11872}
!11872 = !DILocalVariable(name: "code", arg: 1, scope: !11868, file: !1248, line: 1061, type: !2800)
!11873 = !DILocation(line: 0, scope: !11868)
!11874 = !DILocation(line: 1066, column: 10, scope: !11868)
!11875 = !DILocation(line: 1066, column: 3, scope: !11868)
!11876 = distinct !DISubprogram(name: "gimple_call_fn", scope: !1248, file: !1248, line: 1911, type: !7432, scopeLine: 1912, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11877)
!11877 = !{!11878}
!11878 = !DILocalVariable(name: "gs", arg: 1, scope: !11876, file: !1248, line: 1911, type: !6475)
!11879 = !DILocation(line: 0, scope: !11876)
!11880 = !DILocation(line: 1914, column: 10, scope: !11876)
!11881 = !DILocation(line: 1914, column: 3, scope: !11876)
!11882 = distinct !DISubprogram(name: "gimple_fold_builtin_sprintf_chk", scope: !3, file: !3, line: 13596, type: !11883, scopeLine: 13597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !11885)
!11883 = !DISubroutineType(types: !11884)
!11884 = !{!2914, !3196, !527}
!11885 = !{!11886, !11887, !11888, !11889, !11890, !11891, !11892, !11893, !11894, !11895, !11896}
!11886 = !DILocalVariable(name: "stmt", arg: 1, scope: !11882, file: !3, line: 13596, type: !3196)
!11887 = !DILocalVariable(name: "fcode", arg: 2, scope: !11882, file: !3, line: 13596, type: !527)
!11888 = !DILocalVariable(name: "dest", scope: !11882, file: !3, line: 13598, type: !2914)
!11889 = !DILocalVariable(name: "size", scope: !11882, file: !3, line: 13598, type: !2914)
!11890 = !DILocalVariable(name: "len", scope: !11882, file: !3, line: 13598, type: !2914)
!11891 = !DILocalVariable(name: "fn", scope: !11882, file: !3, line: 13598, type: !2914)
!11892 = !DILocalVariable(name: "fmt", scope: !11882, file: !3, line: 13598, type: !2914)
!11893 = !DILocalVariable(name: "flag", scope: !11882, file: !3, line: 13598, type: !2914)
!11894 = !DILocalVariable(name: "fmt_str", scope: !11882, file: !3, line: 13599, type: !2871)
!11895 = !DILocalVariable(name: "nargs", scope: !11882, file: !3, line: 13600, type: !1249)
!11896 = !DILocalVariable(name: "arg", scope: !11897, file: !3, line: 13641, type: !2914)
!11897 = distinct !DILexicalBlock(scope: !11898, file: !3, line: 13640, column: 2)
!11898 = distinct !DILexicalBlock(scope: !11899, file: !3, line: 13638, column: 16)
!11899 = distinct !DILexicalBlock(scope: !11900, file: !3, line: 13631, column: 11)
!11900 = distinct !DILexicalBlock(scope: !11901, file: !3, line: 13629, column: 5)
!11901 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13628, column: 7)
!11902 = !DILocation(line: 0, scope: !11882)
!11903 = !DILocation(line: 13600, column: 15, scope: !11882)
!11904 = !DILocation(line: 13603, column: 13, scope: !11905)
!11905 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13603, column: 7)
!11906 = !DILocation(line: 13603, column: 7, scope: !11882)
!11907 = !DILocation(line: 13605, column: 10, scope: !11882)
!11908 = !DILocation(line: 13606, column: 8, scope: !11909)
!11909 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13606, column: 7)
!11910 = !DILocation(line: 13606, column: 7, scope: !11882)
!11911 = !DILocation(line: 13608, column: 10, scope: !11882)
!11912 = !DILocation(line: 13609, column: 8, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13609, column: 7)
!11914 = !DILocation(line: 13609, column: 7, scope: !11882)
!11915 = !DILocation(line: 13611, column: 10, scope: !11882)
!11916 = !DILocation(line: 13612, column: 8, scope: !11917)
!11917 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13612, column: 7)
!11918 = !DILocation(line: 13612, column: 7, scope: !11882)
!11919 = !DILocation(line: 13614, column: 9, scope: !11882)
!11920 = !DILocation(line: 13615, column: 8, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13615, column: 7)
!11922 = !DILocation(line: 13615, column: 7, scope: !11882)
!11923 = !DILocation(line: 13618, column: 9, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13618, column: 7)
!11925 = !DILocation(line: 13618, column: 7, scope: !11882)
!11926 = !DILocation(line: 13623, column: 8, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13623, column: 7)
!11928 = !DILocation(line: 13623, column: 7, scope: !11882)
!11929 = !DILocation(line: 13627, column: 13, scope: !11882)
!11930 = !DILocation(line: 13628, column: 15, scope: !11901)
!11931 = !DILocation(line: 13628, column: 7, scope: !11882)
!11932 = !DILocation(line: 13631, column: 28, scope: !11899)
!11933 = !DILocation(line: 13631, column: 11, scope: !11899)
!11934 = !DILocation(line: 13631, column: 44, scope: !11899)
!11935 = !DILocation(line: 13631, column: 11, scope: !11900)
!11936 = !DILocation(line: 13633, column: 14, scope: !11937)
!11937 = distinct !DILexicalBlock(scope: !11938, file: !3, line: 13633, column: 8)
!11938 = distinct !DILexicalBlock(scope: !11899, file: !3, line: 13632, column: 2)
!11939 = !DILocation(line: 13633, column: 47, scope: !11937)
!11940 = !DILocation(line: 13633, column: 38, scope: !11937)
!11941 = !DILocation(line: 13634, column: 28, scope: !11937)
!11942 = !DILocation(line: 13634, column: 44, scope: !11937)
!11943 = !DILocation(line: 13634, column: 12, scope: !11937)
!11944 = !DILocation(line: 13634, column: 6, scope: !11937)
!11945 = !DILocation(line: 13638, column: 22, scope: !11898)
!11946 = !DILocation(line: 13639, column: 9, scope: !11898)
!11947 = !DILocation(line: 13639, column: 12, scope: !11898)
!11948 = !DILocation(line: 13639, column: 47, scope: !11898)
!11949 = !DILocation(line: 13643, column: 14, scope: !11950)
!11950 = distinct !DILexicalBlock(scope: !11897, file: !3, line: 13643, column: 8)
!11951 = !DILocation(line: 13638, column: 16, scope: !11899)
!11952 = !DILocation(line: 13645, column: 14, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11950, file: !3, line: 13644, column: 6)
!11954 = !DILocation(line: 0, scope: !11897)
!11955 = !DILocation(line: 13646, column: 12, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11953, file: !3, line: 13646, column: 12)
!11957 = !DILocation(line: 13646, column: 12, scope: !11953)
!11958 = !DILocation(line: 13648, column: 11, scope: !11959)
!11959 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 13647, column: 3)
!11960 = !DILocation(line: 13649, column: 11, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11959, file: !3, line: 13649, column: 9)
!11962 = !DILocation(line: 13649, column: 15, scope: !11961)
!11963 = !DILocation(line: 13649, column: 20, scope: !11961)
!11964 = !DILocation(line: 13649, column: 9, scope: !11959)
!11965 = !DILocation(line: 13650, column: 7, scope: !11961)
!11966 = !DILocation(line: 13656, column: 9, scope: !11967)
!11967 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13656, column: 7)
!11968 = !DILocation(line: 13656, column: 7, scope: !11882)
!11969 = !DILocation(line: 13658, column: 13, scope: !11970)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 13658, column: 11)
!11971 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 13657, column: 5)
!11972 = !DILocation(line: 13658, column: 17, scope: !11970)
!11973 = !DILocation(line: 13658, column: 22, scope: !11970)
!11974 = !DILocation(line: 13658, column: 11, scope: !11971)
!11975 = !DILocation(line: 13664, column: 9, scope: !11976)
!11976 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13664, column: 7)
!11977 = !DILocation(line: 13664, column: 7, scope: !11882)
!11978 = !DILocation(line: 13666, column: 11, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11976, file: !3, line: 13665, column: 5)
!11980 = !DILocation(line: 13668, column: 28, scope: !11981)
!11981 = distinct !DILexicalBlock(scope: !11979, file: !3, line: 13668, column: 11)
!11982 = !DILocation(line: 13668, column: 11, scope: !11981)
!11983 = !DILocation(line: 13668, column: 44, scope: !11981)
!11984 = !DILocation(line: 13669, column: 4, scope: !11981)
!11985 = !DILocation(line: 13669, column: 7, scope: !11981)
!11986 = !DILocation(line: 13668, column: 11, scope: !11979)
!11987 = !DILocation(line: 13674, column: 29, scope: !11882)
!11988 = !DILocation(line: 13674, column: 23, scope: !11882)
!11989 = !DILocation(line: 13674, column: 8, scope: !11882)
!11990 = !DILocation(line: 13676, column: 8, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11882, file: !3, line: 13676, column: 7)
!11992 = !DILocation(line: 13676, column: 7, scope: !11882)
!11993 = !DILocation(line: 13679, column: 10, scope: !11882)
!11994 = !DILocation(line: 13679, column: 3, scope: !11882)
!11995 = !DILocation(line: 13680, column: 1, scope: !11882)
