; ModuleID = 'df-problems.bc'
source_filename = "df-problems.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.df_live_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.df_scan_bb_info = type { %union.df_ref_d**, %union.df_ref_d** }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.df_byte_lr_problem_data = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, %struct.bitmap_obstack }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.df_rd_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.df_rd_problem_data = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_obstack }
%struct.df_byte_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.df_md_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@.str = private unnamed_addr constant [14 x i8] c"df-problems.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@.str.2 = private unnamed_addr constant [3 x i8] c"{ \00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"%c%d(bb %d insn %d) \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"\0A( \00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"%d%s \00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"(EH)\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [12 x i8] c")->[%d]->( \00", align 1
@.str.10 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@problem_RD = internal global %struct.df_problem { i32 3, i32 1, void (%struct.bitmap_head_def*)* @df_rd_alloc, void (%struct.bitmap_head_def*)* null, void (%struct.basic_block_def*, i8*)* @df_rd_free_bb_info, void (%struct.bitmap_head_def*)* @df_rd_local_compute, void (%struct.bitmap_head_def*)* @df_rd_init_solution, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* null, void (%struct.edge_def*)* @df_rd_confluence_n, i8 (i32)* @df_rd_transfer_function, void (%struct.bitmap_head_def*)* null, void ()* @df_rd_free, void ()* @df_rd_free, void (%struct._IO_FILE*)* @df_rd_start_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_rd_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_rd_bottom_dump, void ()* null, void ()* null, %struct.df_problem* null, i32 30, i8 1 }, align 8, !dbg !0
@problem_LR = internal global %struct.df_problem { i32 1, i32 2, void (%struct.bitmap_head_def*)* @df_lr_alloc, void (%struct.bitmap_head_def*)* @df_lr_reset, void (%struct.basic_block_def*, i8*)* @df_lr_free_bb_info, void (%struct.bitmap_head_def*)* @df_lr_local_compute, void (%struct.bitmap_head_def*)* @df_lr_init, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* @df_lr_confluence_0, void (%struct.edge_def*)* @df_lr_confluence_n, i8 (i32)* @df_lr_transfer_function, void (%struct.bitmap_head_def*)* @df_lr_finalize, void ()* @df_lr_free, void ()* null, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_lr_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_lr_bottom_dump, void ()* @df_lr_verify_solution_start, void ()* @df_lr_verify_solution_end, %struct.df_problem* null, i32 31, i8 0 }, align 8, !dbg !2062
@problem_LIVE = internal global %struct.df_problem { i32 2, i32 1, void (%struct.bitmap_head_def*)* @df_live_alloc, void (%struct.bitmap_head_def*)* @df_live_reset, void (%struct.basic_block_def*, i8*)* @df_live_free_bb_info, void (%struct.bitmap_head_def*)* @df_live_local_compute, void (%struct.bitmap_head_def*)* @df_live_init, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* null, void (%struct.edge_def*)* @df_live_confluence_n, i8 (i32)* @df_live_transfer_function, void (%struct.bitmap_head_def*)* @df_live_finalize, void ()* @df_live_free, void ()* @df_live_free, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_live_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_live_bottom_dump, void ()* @df_live_verify_solution_start, void ()* @df_live_verify_solution_end, %struct.df_problem* @problem_LR, i32 32, i8 0 }, align 8, !dbg !2218
@problem_CHAIN = internal global %struct.df_problem { i32 4, i32 0, void (%struct.bitmap_head_def*)* @df_chain_alloc, void (%struct.bitmap_head_def*)* @df_chain_reset, void (%struct.basic_block_def*, i8*)* null, void (%struct.bitmap_head_def*)* null, void (%struct.bitmap_head_def*)* null, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* null, void (%struct.basic_block_def*)* null, void (%struct.edge_def*)* null, i8 (i32)* null, void (%struct.bitmap_head_def*)* @df_chain_finalize, void ()* @df_chain_free, void ()* @df_chain_fully_remove_problem, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_chain_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_chain_bottom_dump, void ()* null, void ()* null, %struct.df_problem* @problem_RD, i32 34, i8 0 }, align 8, !dbg !2222
@problem_BYTE_LR = internal global %struct.df_problem { i32 5, i32 2, void (%struct.bitmap_head_def*)* @df_byte_lr_alloc, void (%struct.bitmap_head_def*)* @df_byte_lr_reset, void (%struct.basic_block_def*, i8*)* @df_byte_lr_free_bb_info, void (%struct.bitmap_head_def*)* @df_byte_lr_local_compute, void (%struct.bitmap_head_def*)* @df_byte_lr_init, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* @df_byte_lr_confluence_0, void (%struct.edge_def*)* @df_byte_lr_confluence_n, i8 (i32)* @df_byte_lr_transfer_function, void (%struct.bitmap_head_def*)* null, void ()* @df_byte_lr_free, void ()* @df_byte_lr_free, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_byte_lr_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_byte_lr_bottom_dump, void ()* null, void ()* null, %struct.df_problem* null, i32 35, i8 0 }, align 8, !dbg !2224
@problem_NOTE = internal global %struct.df_problem { i32 6, i32 0, void (%struct.bitmap_head_def*)* @df_note_alloc, void (%struct.bitmap_head_def*)* null, void (%struct.basic_block_def*, i8*)* null, void (%struct.bitmap_head_def*)* @df_note_compute, void (%struct.bitmap_head_def*)* null, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* null, void (%struct.basic_block_def*)* null, void (%struct.edge_def*)* null, i8 (i32)* null, void (%struct.bitmap_head_def*)* null, void ()* @df_note_free, void ()* @df_note_free, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* null, void ()* null, void ()* null, %struct.df_problem* @problem_LR, i32 36, i8 0 }, align 8, !dbg !2226
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@problem_MD = internal global %struct.df_problem { i32 7, i32 1, void (%struct.bitmap_head_def*)* @df_md_alloc, void (%struct.bitmap_head_def*)* @df_md_reset, void (%struct.basic_block_def*, i8*)* @df_md_free_bb_info, void (%struct.bitmap_head_def*)* @df_md_local_compute, void (%struct.bitmap_head_def*)* @df_md_init, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)* @df_worklist_dataflow, void (%struct.basic_block_def*)* @df_md_confluence_0, void (%struct.edge_def*)* @df_md_confluence_n, i8 (i32)* @df_md_transfer_function, void (%struct.bitmap_head_def*)* null, void ()* @df_md_free, void ()* @df_md_free, void (%struct._IO_FILE*)* null, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_md_top_dump, void (%struct.basic_block_def*, %struct._IO_FILE*)* @df_md_bottom_dump, void ()* null, void ()* null, %struct.df_problem* null, i32 29, i8 0 }, align 8, !dbg !2228
@.str.11 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@.str.12 = private unnamed_addr constant [17 x i8] c"df_rd_block pool\00", align 1
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@df_bitmap_obstack = external dso_local global %struct.bitmap_obstack, align 8
@seen_in_block = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2058
@seen_in_insn = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2060
@regs_invalidated_by_call_regset = external dso_local local_unnamed_addr global %struct.bitmap_head_def*, align 8
@.str.13 = private unnamed_addr constant [20 x i8] c";; Reaching defs:\0A\0A\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"  sparse invalidated \09\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"  dense invalidated \09\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"%d[%d,%d] \00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c";; rd  in  \09(%d)\0A\00", align 1
@.str.19 = private unnamed_addr constant [18 x i8] c";; rd  gen \09(%d)\0A\00", align 1
@.str.20 = private unnamed_addr constant [18 x i8] c";; rd  kill\09(%d)\0A\00", align 1
@.str.21 = private unnamed_addr constant [18 x i8] c";; rd  out \09(%d)\0A\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"df_lr_block pool\00", align 1
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@pic_offset_table_rtx = external dso_local local_unnamed_addr global %struct.rtx_def*, align 8
@.str.23 = private unnamed_addr constant [13 x i8] c";; lr  in  \09\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c";;  old in  \09\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c";; lr  use \09\00", align 1
@.str.26 = private unnamed_addr constant [13 x i8] c";; lr  def \09\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c";; lr  out \09\00", align 1
@.str.28 = private unnamed_addr constant [15 x i8] c";;  old out  \09\00", align 1
@.str.29 = private unnamed_addr constant [19 x i8] c"df_live_block pool\00", align 1
@df_live_scratch = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2220
@optimize = external dso_local local_unnamed_addr global i32, align 4
@.str.30 = private unnamed_addr constant [15 x i8] c";; live  in  \09\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c";; live  gen \09\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c";; live  kill\09\00", align 1
@.str.33 = private unnamed_addr constant [15 x i8] c";; live  out \09\00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"df_chain_block pool\00", align 1
@.str.35 = private unnamed_addr constant [35 x i8] c";;  DU chains for artificial defs\0A\00", align 1
@.str.36 = private unnamed_addr constant [13 x i8] c";;   reg %d \00", align 1
@.str.37 = private unnamed_addr constant [40 x i8] c";;   DU chains for insn luid %d uid %d\0A\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c";;      reg %d \00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"read/write \00", align 1
@.str.40 = private unnamed_addr constant [35 x i8] c";;  UD chains for artificial uses\0A\00", align 1
@.str.41 = private unnamed_addr constant [40 x i8] c";;   UD chains for insn luid %d uid %d\0A\00", align 1
@.str.42 = private unnamed_addr constant [21 x i8] c";;   eq_note reg %d \00", align 1
@.str.43 = private unnamed_addr constant [22 x i8] c"df_byte_lr_block pool\00", align 1
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@regno_reg_rtx = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@.str.44 = private unnamed_addr constant [14 x i8] c";; blr  in  \09\00", align 1
@.str.45 = private unnamed_addr constant [14 x i8] c";; blr  use \09\00", align 1
@.str.46 = private unnamed_addr constant [14 x i8] c";; blr  def \09\00", align 1
@.str.47 = private unnamed_addr constant [14 x i8] c";; blr  out \09\00", align 1
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@regstack_completed = external dso_local local_unnamed_addr global i32, align 4
@.str.48 = private unnamed_addr constant [17 x i8] c"df_md_block pool\00", align 1
@df_md_scratch = internal unnamed_addr global %struct.bitmap_head_def* null, align 8, !dbg !2230
@.str.49 = private unnamed_addr constant [13 x i8] c";; md  in  \09\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c";; md  init  \09\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c";; md  gen \09\00", align 1
@.str.52 = private unnamed_addr constant [14 x i8] c";; md  kill \09\00", align 1
@.str.53 = private unnamed_addr constant [13 x i8] c";; md  out \09\00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2236 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2249, metadata !DIExpression()), !dbg !2251
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2250, metadata !DIExpression()), !dbg !2251
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2252
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2253
  ret i32 %call, !dbg !2254
}

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2255 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2259
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2260
  ret i32 %call, !dbg !2261
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2262 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2266, metadata !DIExpression()), !dbg !2267
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2268
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2268
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2268
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2268
  %cmp = icmp uge i8* %0, %1, !dbg !2268
  %conv1 = zext i1 %cmp to i64, !dbg !2268
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2268
  %tobool = icmp eq i64 %expval, 0, !dbg !2268
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2268

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2268
  br label %cond.end, !dbg !2268

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2268
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2268
  %2 = load i8, i8* %0, align 1, !dbg !2268
  %conv3 = zext i8 %2 to i32, !dbg !2268
  br label %cond.end, !dbg !2268

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2268
  ret i32 %cond, !dbg !2269
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #2

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2270 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2272, metadata !DIExpression()), !dbg !2273
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2274
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2274
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2274
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2274
  %cmp = icmp uge i8* %0, %1, !dbg !2274
  %conv1 = zext i1 %cmp to i64, !dbg !2274
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2274
  %tobool = icmp eq i64 %expval, 0, !dbg !2274
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2274

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2274
  br label %cond.end, !dbg !2274

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2274
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2274
  %2 = load i8, i8* %0, align 1, !dbg !2274
  %conv3 = zext i8 %2 to i32, !dbg !2274
  br label %cond.end, !dbg !2274

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2274
  ret i32 %cond, !dbg !2275
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2276 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2277
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2277
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2277
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2277
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2277
  %cmp = icmp uge i8* %1, %2, !dbg !2277
  %conv1 = zext i1 %cmp to i64, !dbg !2277
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2277
  %tobool = icmp eq i64 %expval, 0, !dbg !2277
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2277

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2277
  br label %cond.end, !dbg !2277

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2277
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2277
  %3 = load i8, i8* %1, align 1, !dbg !2277
  %conv3 = zext i8 %3 to i32, !dbg !2277
  br label %cond.end, !dbg !2277

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2277
  ret i32 %cond, !dbg !2278
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2279 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2283, metadata !DIExpression()), !dbg !2284
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2285
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2286
  ret i32 %call, !dbg !2287
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2288 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2292, metadata !DIExpression()), !dbg !2294
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2293, metadata !DIExpression()), !dbg !2294
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2295
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2295
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2295
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2295
  %cmp = icmp uge i8* %0, %1, !dbg !2295
  %conv1 = zext i1 %cmp to i64, !dbg !2295
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2295
  %tobool = icmp eq i64 %expval, 0, !dbg !2295
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2295

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2295
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2295
  br label %cond.end, !dbg !2295

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2295
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2295
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2295
  store i8 %conv2, i8* %0, align 1, !dbg !2295
  %conv6 = and i32 %__c, 255, !dbg !2295
  br label %cond.end, !dbg !2295

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2295
  ret i32 %cond, !dbg !2296
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2297 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2299, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2300, metadata !DIExpression()), !dbg !2301
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2302
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2302
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2302
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2302
  %cmp = icmp uge i8* %0, %1, !dbg !2302
  %conv1 = zext i1 %cmp to i64, !dbg !2302
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2302
  %tobool = icmp eq i64 %expval, 0, !dbg !2302
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2302

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2302
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2302
  br label %cond.end, !dbg !2302

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2302
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2302
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2302
  store i8 %conv2, i8* %0, align 1, !dbg !2302
  %conv6 = and i32 %__c, 255, !dbg !2302
  br label %cond.end, !dbg !2302

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2302
  ret i32 %cond, !dbg !2303
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2304 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2306, metadata !DIExpression()), !dbg !2307
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2308
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2308
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2308
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2308
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2308
  %cmp = icmp uge i8* %1, %2, !dbg !2308
  %conv1 = zext i1 %cmp to i64, !dbg !2308
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2308
  %tobool = icmp eq i64 %expval, 0, !dbg !2308
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2308

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2308
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2308
  br label %cond.end, !dbg !2308

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2308
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2308
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2308
  store i8 %conv4, i8* %1, align 1, !dbg !2308
  %conv6 = and i32 %__c, 255, !dbg !2308
  br label %cond.end, !dbg !2308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2308
  ret i32 %cond, !dbg !2309
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2310 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2316, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2317, metadata !DIExpression()), !dbg !2319
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2318, metadata !DIExpression()), !dbg !2319
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2320
  ret i64 %call, !dbg !2321
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2322 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2324, metadata !DIExpression()), !dbg !2325
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2326
  %0 = load i32, i32* %_flags, align 8, !dbg !2326
  %and = lshr i32 %0, 4, !dbg !2326
  %and.lobit = and i32 %and, 1, !dbg !2326
  ret i32 %and.lobit, !dbg !2327
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2328 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2330, metadata !DIExpression()), !dbg !2331
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2332
  %0 = load i32, i32* %_flags, align 8, !dbg !2332
  %and = lshr i32 %0, 5, !dbg !2332
  %and.lobit = and i32 %and, 1, !dbg !2332
  ret i32 %and.lobit, !dbg !2333
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2334 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2337, metadata !DIExpression()), !dbg !2338
  %__c.off = add i32 %__c, 128, !dbg !2339
  %0 = icmp ult i32 %__c.off, 384, !dbg !2339
  br i1 %0, label %cond.true, label %cond.end, !dbg !2339

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2340
  %1 = load i32*, i32** %call, align 8, !dbg !2341
  %idxprom = sext i32 %__c to i64, !dbg !2342
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2342
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2342
  br label %cond.end, !dbg !2343

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2343
  ret i32 %cond, !dbg !2344
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2345 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2347, metadata !DIExpression()), !dbg !2348
  %__c.off = add i32 %__c, 128, !dbg !2349
  %0 = icmp ult i32 %__c.off, 384, !dbg !2349
  br i1 %0, label %cond.true, label %cond.end, !dbg !2349

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2350
  %1 = load i32*, i32** %call, align 8, !dbg !2351
  %idxprom = sext i32 %__c to i64, !dbg !2352
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2352
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2352
  br label %cond.end, !dbg !2353

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2353
  ret i32 %cond, !dbg !2354
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2355 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2360, metadata !DIExpression()), !dbg !2361
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2362
  %conv = trunc i64 %call to i32, !dbg !2363
  ret i32 %conv, !dbg !2364
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2365 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2369, metadata !DIExpression()), !dbg !2370
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2371
  ret i64 %call, !dbg !2372
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2373 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2378, metadata !DIExpression()), !dbg !2379
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2380
  ret i64 %call, !dbg !2381
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2382 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2388, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2389, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2390, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2391, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2392, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i64 0, metadata !2393, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2394, metadata !DIExpression()), !dbg !2398
  br label %while.cond, !dbg !2399

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2400
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2398
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2394, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2393, metadata !DIExpression()), !dbg !2398
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2401
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2399

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2402
  %div = lshr i64 %add, 1, !dbg !2404
  call void @llvm.dbg.value(metadata i64 %div, metadata !2395, metadata !DIExpression()), !dbg !2398
  %mul = mul i64 %div, %__size, !dbg !2405
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2406
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2396, metadata !DIExpression()), !dbg !2398
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2407
  call void @llvm.dbg.value(metadata i32 %call, metadata !2397, metadata !DIExpression()), !dbg !2398
  %cmp1 = icmp slt i32 %call, 0, !dbg !2408
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2410

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2411
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2413

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2414
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2393, metadata !DIExpression()), !dbg !2398
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2398
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2398
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2394, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2393, metadata !DIExpression()), !dbg !2398
  br label %while.cond, !dbg !2399, !llvm.loop !2415

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2398
  ret i8* %retval.0, !dbg !2417
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2418 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2424, metadata !DIExpression()), !dbg !2425
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2426
  ret double %call, !dbg !2427
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2428 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2437, metadata !DIExpression()), !dbg !2440
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2438, metadata !DIExpression()), !dbg !2440
  call void @llvm.dbg.value(metadata i32 %base, metadata !2439, metadata !DIExpression()), !dbg !2440
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2441
  ret i64 %call, !dbg !2442
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2443 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2449, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2450, metadata !DIExpression()), !dbg !2452
  call void @llvm.dbg.value(metadata i32 %base, metadata !2451, metadata !DIExpression()), !dbg !2452
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2453
  ret i64 %call, !dbg !2454
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2455 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2466, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2467, metadata !DIExpression()), !dbg !2469
  call void @llvm.dbg.value(metadata i32 %base, metadata !2468, metadata !DIExpression()), !dbg !2469
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2470
  ret i64 %call, !dbg !2471
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2472 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2476, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2477, metadata !DIExpression()), !dbg !2479
  call void @llvm.dbg.value(metadata i32 %base, metadata !2478, metadata !DIExpression()), !dbg !2479
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2480
  ret i64 %call, !dbg !2481
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2482 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2522, metadata !DIExpression()), !dbg !2524
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2523, metadata !DIExpression()), !dbg !2524
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2525
  ret i32 %call, !dbg !2526
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2527 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2529, metadata !DIExpression()), !dbg !2531
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2530, metadata !DIExpression()), !dbg !2531
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2532
  ret i32 %call, !dbg !2533
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2534 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2538, metadata !DIExpression()), !dbg !2540
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2539, metadata !DIExpression()), !dbg !2540
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2541
  ret i32 %call, !dbg !2542
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2543 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2547, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2548, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2549, metadata !DIExpression()), !dbg !2551
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2550, metadata !DIExpression()), !dbg !2551
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2552
  ret i32 %call, !dbg !2553
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2554 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2558, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2559, metadata !DIExpression()), !dbg !2561
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2560, metadata !DIExpression()), !dbg !2561
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2560, metadata !DIExpression(DW_OP_deref)), !dbg !2561
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2562
  ret i32 %call, !dbg !2563
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2564 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2568, metadata !DIExpression()), !dbg !2572
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2569, metadata !DIExpression()), !dbg !2572
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2570, metadata !DIExpression()), !dbg !2572
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2571, metadata !DIExpression()), !dbg !2572
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2571, metadata !DIExpression(DW_OP_deref)), !dbg !2572
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2573
  ret i32 %call, !dbg !2574
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2575 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2599, metadata !DIExpression()), !dbg !2601
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2600, metadata !DIExpression()), !dbg !2601
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2602
  ret i32 %call, !dbg !2603
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2604 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2606, metadata !DIExpression()), !dbg !2608
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2607, metadata !DIExpression()), !dbg !2608
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2609
  ret i32 %call, !dbg !2610
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2611 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2615, metadata !DIExpression()), !dbg !2617
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2616, metadata !DIExpression()), !dbg !2617
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2618
  ret i32 %call, !dbg !2619
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2620 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2624, metadata !DIExpression()), !dbg !2628
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2625, metadata !DIExpression()), !dbg !2628
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2626, metadata !DIExpression()), !dbg !2628
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2627, metadata !DIExpression()), !dbg !2628
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2629
  ret i32 %call, !dbg !2630
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def* %bb) local_unnamed_addr #4 !dbg !2631 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2635, metadata !DIExpression()), !dbg !2636
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2637
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !2637
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2637
  %tobool = icmp eq %struct.dataflow* %1, null, !dbg !2637
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2637

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2637
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !2638
  br label %cond.end, !dbg !2637

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.df* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !2638
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 2, !dbg !2638
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !2638
  %tobool3 = icmp eq %struct.dataflow* %3, null, !dbg !2638
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !2640
  %4 = load i32, i32* %index, align 8, !dbg !2640
  br i1 %tobool3, label %if.else, label %if.then, !dbg !2641

if.then:                                          ; preds = %cond.end
  %call = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %4) #7, !dbg !2642
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 3, !dbg !2642
  br label %return, !dbg !2643

if.else:                                          ; preds = %cond.end
  %call5 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %4) #7, !dbg !2644
  %out6 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call5, i64 0, i32 3, !dbg !2644
  br label %return, !dbg !2645

return:                                           ; preds = %if.else, %if.then
  %retval.0.in = phi %struct.bitmap_head_def** [ %out, %if.then ], [ %out6, %if.else ]
  %retval.0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %retval.0.in, align 8, !dbg !2640
  ret %struct.bitmap_head_def* %retval.0, !dbg !2646
}

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %index) unnamed_addr #0 !dbg !2647 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !2651, metadata !DIExpression()), !dbg !2652
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2653
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 2, !dbg !2653
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2653
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !2655
  %2 = load i32, i32* %block_info_size, align 8, !dbg !2655
  %cmp = icmp ugt i32 %2, %index, !dbg !2656
  br i1 %cmp, label %if.then, label %return, !dbg !2657

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !2658
  %3 = load i8**, i8*** %block_info, align 8, !dbg !2658
  %idxprom = zext i32 %index to i64, !dbg !2659
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !2659
  %4 = bitcast i8** %arrayidx3 to %struct.df_live_bb_info**, !dbg !2659
  %5 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %4, align 8, !dbg !2659
  br label %return, !dbg !2660

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_live_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !2661
  ret %struct.df_live_bb_info* %retval.0, !dbg !2662
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) unnamed_addr #0 !dbg !2663 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !2667, metadata !DIExpression()), !dbg !2668
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2669
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !2669
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2669
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !2671
  %2 = load i32, i32* %block_info_size, align 8, !dbg !2671
  %cmp = icmp ugt i32 %2, %index, !dbg !2672
  br i1 %cmp, label %if.then, label %return, !dbg !2673

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !2674
  %3 = load i8**, i8*** %block_info, align 8, !dbg !2674
  %idxprom = zext i32 %index to i64, !dbg !2675
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !2675
  %4 = bitcast i8** %arrayidx3 to %struct.df_lr_bb_info**, !dbg !2675
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %4, align 8, !dbg !2675
  br label %return, !dbg !2676

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_lr_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !2677
  ret %struct.df_lr_bb_info* %retval.0, !dbg !2678
}

; Function Attrs: nounwind uwtable
define dso_local %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %bb) local_unnamed_addr #4 !dbg !2679 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2681, metadata !DIExpression()), !dbg !2682
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2683
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !2683
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2683
  %tobool = icmp eq %struct.dataflow* %1, null, !dbg !2683
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !2683

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 88, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2683
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !2684
  br label %cond.end, !dbg !2683

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.df* [ %0, %entry ], [ %.pre, %cond.true ], !dbg !2684
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 2, !dbg !2684
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !2684
  %tobool3 = icmp eq %struct.dataflow* %3, null, !dbg !2684
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !2686
  %4 = load i32, i32* %index, align 8, !dbg !2686
  br i1 %tobool3, label %if.else, label %if.then, !dbg !2687

if.then:                                          ; preds = %cond.end
  %call = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %4) #7, !dbg !2688
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 2, !dbg !2688
  br label %return, !dbg !2689

if.else:                                          ; preds = %cond.end
  %call5 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %4) #7, !dbg !2690
  %in6 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call5, i64 0, i32 2, !dbg !2690
  br label %return, !dbg !2691

return:                                           ; preds = %if.else, %if.then
  %retval.0.in = phi %struct.bitmap_head_def** [ %in, %if.then ], [ %in6, %if.else ]
  %retval.0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %retval.0.in, align 8, !dbg !2686
  ret %struct.bitmap_head_def* %retval.0, !dbg !2692
}

; Function Attrs: nounwind uwtable
define dso_local void @df_grow_bb_info(%struct.dataflow* %dflow) local_unnamed_addr #4 !dbg !2693 {
entry:
  call void @llvm.dbg.value(metadata %struct.dataflow* %dflow, metadata !2697, metadata !DIExpression()), !dbg !2699
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2700
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !2700
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2700
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 5, !dbg !2700
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !2700
  %add = add nsw i32 %2, 1, !dbg !2701
  call void @llvm.dbg.value(metadata i32 %add, metadata !2698, metadata !DIExpression()), !dbg !2699
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %dflow, i64 0, i32 2, !dbg !2702
  %3 = load i32, i32* %block_info_size, align 8, !dbg !2702
  %cmp = icmp ult i32 %3, %add, !dbg !2704
  br i1 %cmp, label %if.then, label %if.end, !dbg !2705

if.then:                                          ; preds = %entry
  %div = lshr i32 %add, 2, !dbg !2706
  %add1 = add i32 %add, %div, !dbg !2708
  call void @llvm.dbg.value(metadata i32 %add1, metadata !2698, metadata !DIExpression()), !dbg !2699
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %dflow, i64 0, i32 1, !dbg !2709
  %4 = bitcast i8*** %block_info to i8**, !dbg !2709
  %5 = load i8*, i8** %4, align 8, !dbg !2709
  %conv = zext i32 %add1 to i64, !dbg !2709
  %mul = shl nuw nsw i64 %conv, 3, !dbg !2709
  %call = tail call i8* @xrealloc(i8* %5, i64 %mul) #6, !dbg !2709
  store i8* %call, i8** %4, align 8, !dbg !2710
  %.cast = bitcast i8* %call to i8**, !dbg !2711
  %6 = load i32, i32* %block_info_size, align 8, !dbg !2712
  %idx.ext = zext i32 %6 to i64, !dbg !2713
  %add.ptr5 = getelementptr inbounds i8*, i8** %.cast, i64 %idx.ext, !dbg !2713
  %7 = bitcast i8** %add.ptr5 to i8*, !dbg !2714
  %sub = sub i32 %add1, %6, !dbg !2715
  %conv7 = zext i32 %sub to i64, !dbg !2716
  %mul8 = shl nuw nsw i64 %conv7, 3, !dbg !2717
  %call9 = tail call i8* @memset(i8* %7, i32 0, i64 %mul8) #6, !dbg !2718
  store i32 %add1, i32* %block_info_size, align 8, !dbg !2719
  br label %if.end, !dbg !2720

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !2721
}

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #1

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_chain_dump(%struct.df_link* %link, %struct._IO_FILE* %file) local_unnamed_addr #4 !dbg !2722 {
entry:
  call void @llvm.dbg.value(metadata %struct.df_link* %link, metadata !2726, metadata !DIExpression()), !dbg !2728
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2727, metadata !DIExpression()), !dbg !2728
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #6, !dbg !2729
  br label %for.cond, !dbg !2730

for.cond:                                         ; preds = %cond.end26, %entry
  %link.addr.0 = phi %struct.df_link* [ %link, %entry ], [ %13, %cond.end26 ]
  call void @llvm.dbg.value(metadata %struct.df_link* %link.addr.0, metadata !2726, metadata !DIExpression()), !dbg !2728
  %tobool = icmp eq %struct.df_link* %link.addr.0, null, !dbg !2731
  br i1 %tobool, label %for.end, label %for.body, !dbg !2731

for.body:                                         ; preds = %for.cond
  %0 = bitcast %struct.df_link* %link.addr.0 to i32**, !dbg !2733
  %1 = load i32*, i32** %0, align 8, !dbg !2733
  %bf.load = load i32, i32* %1, align 8, !dbg !2733
  %bf.clear = and i32 %bf.load, 65280, !dbg !2733
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !2733
  %cond = select i1 %cmp, i32 100, i32 117, !dbg !2733
  %2 = getelementptr inbounds i32, i32* %1, i64 13, !dbg !2736
  %3 = load i32, i32* %2, align 4, !dbg !2736
  %bf.clear6 = and i32 %bf.load, 255, !dbg !2737
  %cmp7 = icmp eq i32 %bf.clear6, 1, !dbg !2737
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !2737

cond.true:                                        ; preds = %for.body
  %bb = getelementptr inbounds i32, i32* %1, i64 16, !dbg !2737
  %4 = bitcast i32* %bb to %struct.basic_block_def**, !dbg !2737
  br label %cond.end, !dbg !2737

cond.false:                                       ; preds = %for.body
  %insn_info = getelementptr inbounds i32, i32* %1, i64 6, !dbg !2737
  %5 = bitcast i32* %insn_info to %struct.df_insn_info**, !dbg !2737
  %6 = load %struct.df_insn_info*, %struct.df_insn_info** %5, align 8, !dbg !2737
  %insn = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %6, i64 0, i32 0, !dbg !2737
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2737
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 1, !dbg !2737
  %rt_bb = bitcast %struct.object_block** %arrayidx to %struct.basic_block_def**, !dbg !2737
  br label %cond.end, !dbg !2737

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond11.in = phi %struct.basic_block_def** [ %4, %cond.true ], [ %rt_bb, %cond.false ]
  %cond11 = load %struct.basic_block_def*, %struct.basic_block_def** %cond11.in, align 8, !dbg !2737
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %cond11, i64 0, i32 9, !dbg !2737
  %8 = load i32, i32* %index, align 8, !dbg !2737
  br i1 %cmp7, label %cond.end26, label %cond.false18, !dbg !2738

cond.false18:                                     ; preds = %cond.end
  %insn_info21 = getelementptr inbounds i32, i32* %1, i64 6, !dbg !2739
  %9 = bitcast i32* %insn_info21 to %struct.df_insn_info**, !dbg !2739
  %10 = load %struct.df_insn_info*, %struct.df_insn_info** %9, align 8, !dbg !2739
  %insn22 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %10, i64 0, i32 0, !dbg !2739
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn22, align 8, !dbg !2739
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2739
  %rt_int = bitcast %union.rtunion_def* %arrayidx25 to i32*, !dbg !2739
  %12 = load i32, i32* %rt_int, align 8, !dbg !2739
  br label %cond.end26, !dbg !2738

cond.end26:                                       ; preds = %cond.end, %cond.false18
  %cond27 = phi i32 [ %12, %cond.false18 ], [ -1, %cond.end ], !dbg !2738
  %call28 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i32 %cond, i32 %3, i32 %8, i32 %cond27) #6, !dbg !2740
  %next = getelementptr inbounds %struct.df_link, %struct.df_link* %link.addr.0, i64 0, i32 1, !dbg !2741
  %13 = load %struct.df_link*, %struct.df_link** %next, align 8, !dbg !2741
  call void @llvm.dbg.value(metadata %struct.df_link* %13, metadata !2726, metadata !DIExpression()), !dbg !2728
  br label %for.cond, !dbg !2742, !llvm.loop !2743

for.end:                                          ; preds = %for.cond
  %call29 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #6, !dbg !2745
  ret void, !dbg !2746
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_print_bb_index(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) local_unnamed_addr #4 !dbg !2747 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp7 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2749, metadata !DIExpression()), !dbg !2767
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !2750, metadata !DIExpression()), !dbg !2767
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !2768
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2768
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !2769
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2769
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #6, !dbg !2770
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !2771
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !2771
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !2771
  %call1 = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !2771
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !2771
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 0, !dbg !2771
  store i32 %4, i32* %3, align 8, !dbg !2771
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !2771
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call1, 1, !dbg !2771
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !2771
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !2771
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !2771
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !2772
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !2772
  br label %for.cond, !dbg !2771

for.cond:                                         ; preds = %for.body, %entry
  %9 = load i32, i32* %7, align 8, !dbg !2773
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !2773
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2751, metadata !DIExpression(DW_OP_deref)), !dbg !2767
  %call2 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !2773
  %tobool = icmp eq i8 %call2, 0, !dbg !2771
  br i1 %tobool, label %for.end, label %for.body, !dbg !2771

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2774
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !2751, metadata !DIExpression()), !dbg !2767
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 0, !dbg !2775
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !2775
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %12, metadata !2759, metadata !DIExpression()), !dbg !2776
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i64 0, i32 9, !dbg !2777
  %13 = load i32, i32* %index, align 8, !dbg !2777
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !2751, metadata !DIExpression()), !dbg !2767
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !2778
  %14 = load i32, i32* %flags, align 8, !dbg !2778
  %and = and i32 %14, 8, !dbg !2779
  %tobool3 = icmp eq i32 %and, 0, !dbg !2780
  %cond = select i1 %tobool3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), !dbg !2780
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i32 %13, i8* %cond) #6, !dbg !2781
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2752, metadata !DIExpression(DW_OP_deref)), !dbg !2767
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !2773
  br label %for.cond, !dbg !2773, !llvm.loop !2782

for.end:                                          ; preds = %for.cond
  %index5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !2784
  %15 = load i32, i32* %index5, align 8, !dbg !2784
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0), i32 %15) #6, !dbg !2785
  %16 = bitcast %struct.edge_iterator* %tmp7 to i8*, !dbg !2786
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #8, !dbg !2786
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 1, !dbg !2786
  %call8 = call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** nonnull %succs) #7, !dbg !2786
  %17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp7, i64 0, i32 0, !dbg !2786
  %18 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 0, !dbg !2786
  store i32 %18, i32* %17, align 8, !dbg !2786
  %19 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp7, i64 0, i32 1, !dbg !2786
  %20 = extractvalue { i32, %struct.VEC_edge_gc** } %call8, 1, !dbg !2786
  store %struct.VEC_edge_gc** %20, %struct.VEC_edge_gc*** %19, align 8, !dbg !2786
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %16, i64 16, i1 false), !dbg !2786
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #8, !dbg !2786
  br label %for.cond9, !dbg !2786

for.cond9:                                        ; preds = %for.body12, %for.end
  %21 = load i32, i32* %7, align 8, !dbg !2787
  %22 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !2787
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !2751, metadata !DIExpression(DW_OP_deref)), !dbg !2767
  %call10 = call fastcc zeroext i8 @ei_cond(i32 %21, %struct.VEC_edge_gc** %22, %struct.edge_def** nonnull %e) #7, !dbg !2787
  %tobool11 = icmp eq i8 %call10, 0, !dbg !2786
  br i1 %tobool11, label %for.end20, label %for.body12, !dbg !2786

for.body12:                                       ; preds = %for.cond9
  %23 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !2788
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !2751, metadata !DIExpression()), !dbg !2767
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 1, !dbg !2789
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !2789
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %24, metadata !2763, metadata !DIExpression()), !dbg !2790
  %index13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i64 0, i32 9, !dbg !2791
  %25 = load i32, i32* %index13, align 8, !dbg !2791
  call void @llvm.dbg.value(metadata %struct.edge_def* %23, metadata !2751, metadata !DIExpression()), !dbg !2767
  %flags14 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %23, i64 0, i32 7, !dbg !2792
  %26 = load i32, i32* %flags14, align 8, !dbg !2792
  %and15 = and i32 %26, 8, !dbg !2793
  %tobool16 = icmp eq i32 %and15, 0, !dbg !2794
  %cond17 = select i1 %tobool16, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), !dbg !2794
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i32 %25, i8* %cond17) #6, !dbg !2795
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !2752, metadata !DIExpression(DW_OP_deref)), !dbg !2767
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !2787
  br label %for.cond9, !dbg !2787, !llvm.loop !2796

for.end20:                                        ; preds = %for.cond9
  %call21 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.10, i64 0, i64 0)) #6, !dbg !2798
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !2799
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !2799
  ret void, !dbg !2799
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) unnamed_addr #0 !dbg !2800 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.VEC_edge_gc** %ev, metadata !2804, metadata !DIExpression()), !dbg !2806
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 0, !dbg !2807
  store i32 0, i32* %index, align 8, !dbg !2808
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i64 0, i32 1, !dbg !2809
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %container, align 8, !dbg !2810
  %0 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !2811
  %1 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, align 8, !dbg !2811
  ret { i32, %struct.VEC_edge_gc** } %1, !dbg !2811
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) unnamed_addr #0 !dbg !2812 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def** %p, metadata !2818, metadata !DIExpression()), !dbg !2819
  %call = tail call fastcc zeroext i8 @ei_end_p(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !2820
  %tobool = icmp eq i8 %call, 0, !dbg !2820
  br i1 %tobool, label %if.then, label %if.else, !dbg !2822

if.then:                                          ; preds = %entry
  %call1 = tail call fastcc %struct.edge_def* @ei_edge(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1) #7, !dbg !2823
  br label %return, !dbg !2825

if.else:                                          ; preds = %entry
  br label %return, !dbg !2826

return:                                           ; preds = %if.else, %if.then
  %storemerge = phi %struct.edge_def* [ %call1, %if.then ], [ null, %if.else ], !dbg !2828
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %if.else ], !dbg !2828
  store %struct.edge_def* %storemerge, %struct.edge_def** %p, align 8, !dbg !2828
  ret i8 %retval.0, !dbg !2829
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ei_next(%struct.edge_iterator* %i) unnamed_addr #0 !dbg !2830 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %i, metadata !2835, metadata !DIExpression()), !dbg !2836
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 0, !dbg !2837
  %0 = load i32, i32* %index, align 8, !dbg !2837
  %1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i64 0, i32 1, !dbg !2837
  %2 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2837
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %0, %struct.VEC_edge_gc** %2) #7, !dbg !2837
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !2837
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !2837

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %index, align 8, !dbg !2837
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %1, align 8, !dbg !2837
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %3, %struct.VEC_edge_gc** %4) #7, !dbg !2837
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !2837
  br label %cond.end, !dbg !2837

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !2837
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !2837
  %cmp = icmp ult i32 %0, %call2, !dbg !2837
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !2837

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2837
  br label %cond.end5, !dbg !2837

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %5 = load i32, i32* %index, align 8, !dbg !2838
  %inc = add i32 %5, 1, !dbg !2838
  store i32 %inc, i32* %index, align 8, !dbg !2838
  ret void, !dbg !2839
}

; Function Attrs: nounwind uwtable
define dso_local void @df_rd_simulate_artificial_defs_at_top(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %local_rd) local_unnamed_addr #4 !dbg !2840 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2844, metadata !DIExpression()), !dbg !2855
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %local_rd, metadata !2845, metadata !DIExpression()), !dbg !2855
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !2856
  %0 = load i32, i32* %index, align 8, !dbg !2856
  call void @llvm.dbg.value(metadata i32 %0, metadata !2846, metadata !DIExpression()), !dbg !2855
  %call = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %0) #7, !dbg !2857
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call, metadata !2847, metadata !DIExpression()), !dbg !2855
  br label %for.cond, !dbg !2858

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %call, %entry ], [ %incdec.ptr, %for.inc ], !dbg !2859
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !2847, metadata !DIExpression()), !dbg !2855
  %1 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !2860
  %tobool = icmp eq %union.df_ref_d* %1, null, !dbg !2861
  br i1 %tobool, label %for.end, label %for.body, !dbg !2861

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %1, metadata !2848, metadata !DIExpression()), !dbg !2862
  %2 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !2863
  %bf.load = load i32, i32* %2, align 8, !dbg !2863
  %and = and i32 %bf.load, 131072, !dbg !2864
  %tobool1 = icmp eq i32 %and, 0, !dbg !2864
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !2865

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !2852, metadata !DIExpression()), !dbg !2866
  %and6 = and i32 %bf.load, 1114112, !dbg !2867
  %tobool7 = icmp eq i32 %and6, 0, !dbg !2867
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !2869

if.then8:                                         ; preds = %if.then
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !2870
  %3 = load i32, i32* %regno, align 8, !dbg !2870
  call void @llvm.dbg.value(metadata i32 %3, metadata !2852, metadata !DIExpression()), !dbg !2866
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !2871
  %begin = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 3, i32 1, !dbg !2871
  %5 = load i32*, i32** %begin, align 8, !dbg !2871
  %idxprom = zext i32 %3 to i64, !dbg !2871
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !2871
  %6 = load i32, i32* %arrayidx, align 4, !dbg !2871
  %count = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 3, i32 2, !dbg !2872
  %7 = load i32*, i32** %count, align 8, !dbg !2872
  %arrayidx11 = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !2872
  %8 = load i32, i32* %arrayidx11, align 4, !dbg !2872
  tail call void @bitmap_clear_range(%struct.bitmap_head_def* %local_rd, i32 %6, i32 %8) #6, !dbg !2873
  br label %if.end, !dbg !2873

if.end:                                           ; preds = %if.then, %if.then8
  %id = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 7, !dbg !2874
  %9 = load i32, i32* %id, align 4, !dbg !2874
  %call13 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %local_rd, i32 %9) #6, !dbg !2875
  br label %for.inc, !dbg !2876

for.inc:                                          ; preds = %for.body, %if.end
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !2877
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !2847, metadata !DIExpression()), !dbg !2855
  br label %for.cond, !dbg !2878, !llvm.loop !2879

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2881
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) unnamed_addr #0 !dbg !2882 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !2886, metadata !DIExpression()), !dbg !2887
  %call = tail call fastcc %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %bb_index) #7, !dbg !2888
  %artificial_defs = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %call, i64 0, i32 0, !dbg !2889
  %0 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_defs, align 8, !dbg !2889
  ret %union.df_ref_d** %0, !dbg !2890
}

declare dso_local void @bitmap_clear_range(%struct.bitmap_head_def*, i32, i32) local_unnamed_addr #1

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_rd_simulate_one_insn(%struct.basic_block_def* %bb, %struct.rtx_def* %insn, %struct.bitmap_head_def* %local_rd) local_unnamed_addr #4 !dbg !2891 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !2895, metadata !DIExpression()), !dbg !2905
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !2896, metadata !DIExpression()), !dbg !2905
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %local_rd, metadata !2897, metadata !DIExpression()), !dbg !2905
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !2906
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !2906
  %0 = load i32, i32* %rt_int, align 8, !dbg !2906
  call void @llvm.dbg.value(metadata i32 %0, metadata !2898, metadata !DIExpression()), !dbg !2905
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !2907
  %insns = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 10, !dbg !2907
  %2 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !2907
  %idxprom = zext i32 %0 to i64, !dbg !2907
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %2, i64 %idxprom, !dbg !2907
  %3 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !2907
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %3, i64 0, i32 1, !dbg !2907
  %4 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !2907
  call void @llvm.dbg.value(metadata %union.df_ref_d** %4, metadata !2899, metadata !DIExpression()), !dbg !2905
  br label %for.cond, !dbg !2908

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %4, %entry ], [ %incdec.ptr, %for.inc ], !dbg !2909
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !2899, metadata !DIExpression()), !dbg !2905
  %5 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !2910
  %tobool = icmp eq %union.df_ref_d* %5, null, !dbg !2911
  br i1 %tobool, label %for.end, label %for.body, !dbg !2911

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %5, metadata !2900, metadata !DIExpression()), !dbg !2912
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !2913
  %6 = load i32, i32* %regno, align 8, !dbg !2913
  call void @llvm.dbg.value(metadata i32 %6, metadata !2904, metadata !DIExpression()), !dbg !2912
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !2914
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 27, !dbg !2916
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !2916
  %8 = and i8 %bf.load, 2, !dbg !2917
  %tobool2 = icmp eq i8 %8, 0, !dbg !2917
  %cmp = icmp ugt i32 %6, 52, !dbg !2918
  %or.cond = or i1 %tobool2, %cmp, !dbg !2919
  br i1 %or.cond, label %if.then, label %for.inc, !dbg !2919

if.then:                                          ; preds = %for.body
  %9 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !2920
  %bf.load4 = load i32, i32* %9, align 8, !dbg !2920
  %and5 = and i32 %bf.load4, 1114112, !dbg !2923
  %tobool6 = icmp eq i32 %and5, 0, !dbg !2923
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !2924

if.then7:                                         ; preds = %if.then
  %begin = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 3, i32 1, !dbg !2925
  %10 = load i32*, i32** %begin, align 8, !dbg !2925
  %idxprom8 = zext i32 %6 to i64, !dbg !2925
  %arrayidx9 = getelementptr inbounds i32, i32* %10, i64 %idxprom8, !dbg !2925
  %11 = load i32, i32* %arrayidx9, align 4, !dbg !2925
  %count = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 3, i32 2, !dbg !2926
  %12 = load i32*, i32** %count, align 8, !dbg !2926
  %arrayidx12 = getelementptr inbounds i32, i32* %12, i64 %idxprom8, !dbg !2926
  %13 = load i32, i32* %arrayidx12, align 4, !dbg !2926
  tail call void @bitmap_clear_range(%struct.bitmap_head_def* %local_rd, i32 %11, i32 %13) #6, !dbg !2927
  %bf.load14.pre = load i32, i32* %9, align 8, !dbg !2928
  br label %if.end, !dbg !2927

if.end:                                           ; preds = %if.then, %if.then7
  %bf.load14 = phi i32 [ %bf.load4, %if.then ], [ %bf.load14.pre, %if.then7 ], !dbg !2928
  %and16 = and i32 %bf.load14, 12582912, !dbg !2930
  %tobool17 = icmp eq i32 %and16, 0, !dbg !2930
  br i1 %tobool17, label %if.then18, label %for.inc, !dbg !2931

if.then18:                                        ; preds = %if.end
  %id = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 7, !dbg !2932
  %14 = load i32, i32* %id, align 4, !dbg !2932
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %local_rd, i32 %14) #6, !dbg !2933
  br label %for.inc, !dbg !2933

for.inc:                                          ; preds = %if.end, %for.body, %if.then18
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !2934
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !2899, metadata !DIExpression()), !dbg !2905
  br label %for.cond, !dbg !2935, !llvm.loop !2936

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2938
}

; Function Attrs: nounwind uwtable
define dso_local void @df_rd_add_problem() local_unnamed_addr #4 !dbg !2939 {
entry:
  tail call void @df_add_problem(%struct.df_problem* nonnull @problem_RD) #6, !dbg !2940
  ret void, !dbg !2941
}

declare dso_local void @df_add_problem(%struct.df_problem*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_lr_add_problem() local_unnamed_addr #4 !dbg !2942 {
entry:
  tail call void @df_add_problem(%struct.df_problem* nonnull @problem_LR) #6, !dbg !2943
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2944
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2945
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !2945
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2945
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 4, !dbg !2946
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !2947
  ret void, !dbg !2948
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_lr_verify_transfer_functions() local_unnamed_addr #4 !dbg !2949 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !2961
  %tobool = icmp eq %struct.df* %0, null, !dbg !2961
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !2963

if.end:                                           ; preds = %entry
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2964
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !2952, metadata !DIExpression()), !dbg !2965
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2966
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !2953, metadata !DIExpression()), !dbg !2965
  %call2 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2967
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call2, metadata !2954, metadata !DIExpression()), !dbg !2965
  %call3 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2968
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call3, metadata !2955, metadata !DIExpression()), !dbg !2965
  %call4 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !2969
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call4, metadata !2956, metadata !DIExpression()), !dbg !2965
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2970
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !2970
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2970
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !2970
  br label %for.cond, !dbg !2970

for.cond:                                         ; preds = %for.inc, %if.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.end ], [ %next_bb, %for.inc ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !2971
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !2951, metadata !DIExpression()), !dbg !2965
  %tobool5 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !2970
  br i1 %tobool5, label %for.end, label %for.body, !dbg !2970

for.body:                                         ; preds = %for.cond
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !2972
  %3 = load i32, i32* %index, align 8, !dbg !2972
  %call6 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %3) #7, !dbg !2973
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call6, metadata !2957, metadata !DIExpression()), !dbg !2974
  %4 = load i32, i32* %index, align 8, !dbg !2975
  %call8 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call4, i32 %4) #6, !dbg !2976
  %tobool9 = icmp eq %struct.df_lr_bb_info* %call6, null, !dbg !2977
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !2979
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 1, i64 1, !dbg !2979
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !2979
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i64 0, i32 4, !dbg !2979
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !2979
  %8 = load i32, i32* %index, align 8, !dbg !2979
  %call12 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %7, i32 %8) #6, !dbg !2979
  %tobool13 = icmp ne i32 %call12, 0, !dbg !2979
  br i1 %tobool9, label %if.else, label %if.then10, !dbg !2980

if.then10:                                        ; preds = %for.body
  br i1 %tobool13, label %if.end39, label %if.then14, !dbg !2981

if.then14:                                        ; preds = %if.then10
  %def = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call6, i64 0, i32 0, !dbg !2983
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !2983
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %9) #6, !dbg !2986
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call6, i64 0, i32 1, !dbg !2987
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !2987
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call1, %struct.bitmap_head_def* %10) #6, !dbg !2988
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !2989
  tail call void @bitmap_clear(%struct.bitmap_head_def* %11) #6, !dbg !2990
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !2991
  tail call void @bitmap_clear(%struct.bitmap_head_def* %12) #6, !dbg !2992
  %13 = load i32, i32* %index, align 8, !dbg !2993
  tail call fastcc void @df_lr_bb_local_compute(i32 %13) #7, !dbg !2994
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !2995
  %call19 = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %14) #6, !dbg !2995
  %tobool20 = icmp eq i8 %call19, 0, !dbg !2995
  br i1 %tobool20, label %cond.true, label %cond.end, !dbg !2995

cond.true:                                        ; preds = %if.then14
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1306, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2995
  br label %cond.end, !dbg !2995

cond.end:                                         ; preds = %if.then14, %cond.true
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !2996
  %call22 = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %call1, %struct.bitmap_head_def* %15) #6, !dbg !2996
  %tobool23 = icmp eq i8 %call22, 0, !dbg !2996
  br i1 %tobool23, label %cond.true24, label %if.end39, !dbg !2996

cond.true24:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1307, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2996
  br label %if.end39, !dbg !2996

if.else:                                          ; preds = %for.body
  br i1 %tobool13, label %if.end39, label %cond.true35, !dbg !2997

cond.true35:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1316, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2997
  br label %if.end39, !dbg !2997

if.end39:                                         ; preds = %cond.end, %cond.true35, %if.else, %if.then10, %cond.true24
  %16 = load i32, i32* %index, align 8, !dbg !2999
  %call41 = tail call fastcc %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %16) #7, !dbg !2999
  %tobool42 = icmp eq %struct.df_scan_bb_info* %call41, null, !dbg !2999
  br i1 %tobool42, label %cond.true43, label %for.inc, !dbg !2999

cond.true43:                                      ; preds = %if.end39
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1320, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2999
  br label %for.inc, !dbg !2999

for.inc:                                          ; preds = %if.end39, %cond.true43
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3000
  br label %for.cond, !dbg !3000, !llvm.loop !3001

for.end:                                          ; preds = %for.cond
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !3003
  %arrayidx48 = getelementptr inbounds %struct.df, %struct.df* %17, i64 0, i32 1, i64 1, !dbg !3003
  %18 = load %struct.dataflow*, %struct.dataflow** %arrayidx48, align 8, !dbg !3003
  %out_of_date_transfer_functions49 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %18, i64 0, i32 4, !dbg !3003
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions49, align 8, !dbg !3003
  %call50 = tail call zeroext i8 @bitmap_intersect_compl_p(%struct.bitmap_head_def* %19, %struct.bitmap_head_def* %call4) #6, !dbg !3003
  %tobool51 = icmp eq i8 %call50, 0, !dbg !3003
  br i1 %tobool51, label %cond.end54, label %cond.true52, !dbg !3003

cond.true52:                                      ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1325, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3003
  br label %cond.end54, !dbg !3003

cond.end54:                                       ; preds = %for.end, %cond.true52
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !3004
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2952, metadata !DIExpression()), !dbg !2965
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1) #6, !dbg !3005
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2953, metadata !DIExpression()), !dbg !2965
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call2) #6, !dbg !3006
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2954, metadata !DIExpression()), !dbg !2965
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call3) #6, !dbg !3007
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2955, metadata !DIExpression()), !dbg !2965
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call4) #6, !dbg !3008
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !2956, metadata !DIExpression()), !dbg !2965
  br label %cleanup.cont, !dbg !3009

cleanup.cont:                                     ; preds = %entry, %cond.end54
  ret void, !dbg !3009
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @df_lr_bb_local_compute(i32 %bb_index) unnamed_addr #4 !dbg !3010 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !3014, metadata !DIExpression()), !dbg !3053
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3054
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3054
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3054
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !3054
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3054
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !3054
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3054

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !3054
  br label %cond.end, !dbg !3054

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3054
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %bb_index) #7, !dbg !3054
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !3015, metadata !DIExpression()), !dbg !3053
  %call4 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %bb_index) #7, !dbg !3055
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call4, metadata !3016, metadata !DIExpression()), !dbg !3053
  %call5 = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !3056
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call5, metadata !3018, metadata !DIExpression()), !dbg !3053
  %def9 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call4, i64 0, i32 0, !dbg !3057
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call4, i64 0, i32 1, !dbg !3057
  br label %for.cond, !dbg !3058

for.cond:                                         ; preds = %for.inc, %cond.end
  %def_rec.0 = phi %union.df_ref_d** [ %call5, %cond.end ], [ %incdec.ptr, %for.inc ], !dbg !3059
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3018, metadata !DIExpression()), !dbg !3053
  %3 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3060
  %tobool6 = icmp eq %union.df_ref_d* %3, null, !dbg !3061
  br i1 %tobool6, label %for.end, label %for.body, !dbg !3061

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %3, metadata !3020, metadata !DIExpression()), !dbg !3062
  %4 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %3, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3063
  %bf.load = load i32, i32* %4, align 8, !dbg !3063
  %and = and i32 %bf.load, 131072, !dbg !3064
  %cmp = icmp eq i32 %and, 0, !dbg !3065
  br i1 %cmp, label %if.then, label %for.inc, !dbg !3066

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %3, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3067
  %5 = load i32, i32* %regno, align 8, !dbg !3067
  call void @llvm.dbg.value(metadata i32 %5, metadata !3024, metadata !DIExpression()), !dbg !3057
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def9, align 8, !dbg !3068
  %call10 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 %5) #6, !dbg !3069
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !3070
  %call11 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %7, i32 %5) #6, !dbg !3071
  br label %for.inc, !dbg !3072

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3073
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3018, metadata !DIExpression()), !dbg !3053
  br label %for.cond, !dbg !3074, !llvm.loop !3075

for.end:                                          ; preds = %for.cond
  %call12 = tail call fastcc %union.df_ref_d** @df_get_artificial_uses(i32 %bb_index) #7, !dbg !3077
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call12, metadata !3019, metadata !DIExpression()), !dbg !3053
  br label %for.cond13, !dbg !3078

for.cond13:                                       ; preds = %for.inc28, %for.end
  %use_rec.0 = phi %union.df_ref_d** [ %call12, %for.end ], [ %incdec.ptr29, %for.inc28 ], !dbg !3079
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !3019, metadata !DIExpression()), !dbg !3053
  %8 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !3080
  %tobool14 = icmp eq %union.df_ref_d* %8, null, !dbg !3081
  br i1 %tobool14, label %for.end30, label %for.body15, !dbg !3081

for.body15:                                       ; preds = %for.cond13
  call void @llvm.dbg.value(metadata %union.df_ref_d* %8, metadata !3027, metadata !DIExpression()), !dbg !3082
  %9 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %8, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3083
  %bf.load18 = load i32, i32* %9, align 8, !dbg !3083
  %and20 = and i32 %bf.load18, 131072, !dbg !3085
  %cmp21 = icmp eq i32 %and20, 0, !dbg !3086
  br i1 %cmp21, label %if.then22, label %for.inc28, !dbg !3087

if.then22:                                        ; preds = %for.body15
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !3088
  %regno25 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %8, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3089
  %11 = load i32, i32* %regno25, align 8, !dbg !3089
  %call26 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %10, i32 %11) #6, !dbg !3090
  br label %for.inc28, !dbg !3090

for.inc28:                                        ; preds = %for.body15, %if.then22
  %incdec.ptr29 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !3091
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr29, metadata !3019, metadata !DIExpression()), !dbg !3053
  br label %for.cond13, !dbg !3092, !llvm.loop !3093

for.end30:                                        ; preds = %for.cond13
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !3095
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3095
  %12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3095
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %12, i64 0, i32 1, !dbg !3095
  br label %for.cond31, !dbg !3095

for.cond31:                                       ; preds = %cleanup, %for.end30
  %insn.0.in = phi %struct.rtx_def** [ %end_, %for.end30 ], [ %rt_rtx98, %cleanup ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3096
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3017, metadata !DIExpression()), !dbg !3053
  %tobool32 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !3097
  br i1 %tobool32, label %for.end99, label %land.rhs, !dbg !3097

land.rhs:                                         ; preds = %for.cond31
  %13 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3097
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %13, i64 0, i32 0, !dbg !3097
  %14 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3097
  %15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3097
  %rt_rtx = bitcast %union.rtunion_def* %15 to %struct.rtx_def**, !dbg !3097
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3097
  %cmp35 = icmp eq %struct.rtx_def* %insn.0, %16, !dbg !3097
  br i1 %cmp35, label %for.end99, label %for.body36, !dbg !3095

for.body36:                                       ; preds = %land.rhs
  %arrayidx39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3098
  %rt_int = bitcast %union.rtunion_def* %arrayidx39 to i32*, !dbg !3098
  %17 = load i32, i32* %rt_int, align 8, !dbg !3098
  call void @llvm.dbg.value(metadata i32 %17, metadata !3031, metadata !DIExpression()), !dbg !3099
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3100
  %bf.load40 = load i32, i32* %18, align 8, !dbg !3100
  %bf.clear = and i32 %bf.load40, 65535, !dbg !3100
  %cmp41 = icmp eq i32 %bf.clear, 8, !dbg !3100
  br i1 %cmp41, label %land.lhs.true, label %lor.lhs.false, !dbg !3100

lor.lhs.false:                                    ; preds = %for.body36
  %cmp44 = icmp eq i32 %bf.clear, 7, !dbg !3100
  br i1 %cmp44, label %land.lhs.true, label %lor.lhs.false45, !dbg !3100

lor.lhs.false45:                                  ; preds = %lor.lhs.false
  %cmp48 = icmp eq i32 %bf.clear, 9, !dbg !3100
  br i1 %cmp48, label %land.lhs.true, label %lor.lhs.false49, !dbg !3100

lor.lhs.false49:                                  ; preds = %lor.lhs.false45
  %cmp52 = icmp eq i32 %bf.clear, 10, !dbg !3100
  br i1 %cmp52, label %land.lhs.true, label %cleanup, !dbg !3100

land.lhs.true:                                    ; preds = %lor.lhs.false49, %lor.lhs.false45, %lor.lhs.false, %for.body36
  %cmp55 = icmp eq i32 %bf.clear, 7, !dbg !3100
  br i1 %cmp55, label %cleanup, label %if.end57, !dbg !3102

if.end57:                                         ; preds = %land.lhs.true
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !3103
  %insns = getelementptr inbounds %struct.df, %struct.df* %19, i64 0, i32 10, !dbg !3103
  %20 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3103
  %idxprom = zext i32 %17 to i64, !dbg !3103
  %arrayidx58 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %20, i64 %idxprom, !dbg !3103
  %21 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx58, align 8, !dbg !3103
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %21, i64 0, i32 1, !dbg !3103
  %22 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !3103
  call void @llvm.dbg.value(metadata %union.df_ref_d** %22, metadata !3018, metadata !DIExpression()), !dbg !3053
  br label %for.cond59, !dbg !3104

for.cond59:                                       ; preds = %for.inc77, %if.end57
  %def_rec.1 = phi %union.df_ref_d** [ %22, %if.end57 ], [ %incdec.ptr78, %for.inc77 ], !dbg !3105
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.1, metadata !3018, metadata !DIExpression()), !dbg !3053
  %23 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.1, align 8, !dbg !3106
  %tobool60 = icmp eq %union.df_ref_d* %23, null, !dbg !3107
  br i1 %tobool60, label %for.end79, label %for.body61, !dbg !3107

for.body61:                                       ; preds = %for.cond59
  call void @llvm.dbg.value(metadata %union.df_ref_d* %23, metadata !3035, metadata !DIExpression()), !dbg !3108
  %24 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %23, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3109
  %bf.load64 = load i32, i32* %24, align 8, !dbg !3109
  %and66 = and i32 %bf.load64, 1114112, !dbg !3110
  %tobool67 = icmp eq i32 %and66, 0, !dbg !3110
  br i1 %tobool67, label %if.then68, label %for.inc77, !dbg !3111

if.then68:                                        ; preds = %for.body61
  %regno71 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %23, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3112
  %25 = load i32, i32* %regno71, align 8, !dbg !3112
  call void @llvm.dbg.value(metadata i32 %25, metadata !3039, metadata !DIExpression()), !dbg !3113
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def9, align 8, !dbg !3114
  %call73 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %26, i32 %25) #6, !dbg !3115
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !3116
  %call75 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %27, i32 %25) #6, !dbg !3117
  br label %for.inc77, !dbg !3118

for.inc77:                                        ; preds = %for.body61, %if.then68
  %incdec.ptr78 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.1, i64 1, !dbg !3119
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr78, metadata !3018, metadata !DIExpression()), !dbg !3053
  br label %for.cond59, !dbg !3120, !llvm.loop !3121

for.end79:                                        ; preds = %for.cond59
  %28 = load %struct.df*, %struct.df** @df, align 8, !dbg !3123
  %insns80 = getelementptr inbounds %struct.df, %struct.df* %28, i64 0, i32 10, !dbg !3123
  %29 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns80, align 8, !dbg !3123
  %arrayidx82 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %29, i64 %idxprom, !dbg !3123
  %30 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx82, align 8, !dbg !3123
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %30, i64 0, i32 2, !dbg !3123
  %31 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !3123
  call void @llvm.dbg.value(metadata %union.df_ref_d** %31, metadata !3019, metadata !DIExpression()), !dbg !3053
  br label %for.cond83, !dbg !3124

for.cond83:                                       ; preds = %for.body85, %for.end79
  %use_rec.1 = phi %union.df_ref_d** [ %31, %for.end79 ], [ %incdec.ptr92, %for.body85 ], !dbg !3125
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.1, metadata !3019, metadata !DIExpression()), !dbg !3053
  %32 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.1, align 8, !dbg !3126
  %tobool84 = icmp eq %union.df_ref_d* %32, null, !dbg !3127
  br i1 %tobool84, label %cleanup.loopexit, label %for.body85, !dbg !3127

for.body85:                                       ; preds = %for.cond83
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !3128
  %regno89 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %32, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3129
  %34 = load i32, i32* %regno89, align 8, !dbg !3129
  %call90 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %33, i32 %34) #6, !dbg !3130
  %incdec.ptr92 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.1, i64 1, !dbg !3131
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr92, metadata !3019, metadata !DIExpression()), !dbg !3053
  br label %for.cond83, !dbg !3132, !llvm.loop !3133

cleanup.loopexit:                                 ; preds = %for.cond83
  br label %cleanup, !dbg !3097

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false49, %land.lhs.true
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3097
  %rt_rtx98 = bitcast %union.rtunion_def* %35 to %struct.rtx_def**, !dbg !3097
  br label %for.cond31, !dbg !3097, !llvm.loop !3135

for.end99:                                        ; preds = %land.rhs, %for.cond31
  %call100 = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !3137
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call100, metadata !3018, metadata !DIExpression()), !dbg !3053
  br label %for.cond101, !dbg !3138

for.cond101:                                      ; preds = %for.inc119, %for.end99
  %def_rec.2 = phi %union.df_ref_d** [ %call100, %for.end99 ], [ %incdec.ptr120, %for.inc119 ], !dbg !3139
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.2, metadata !3018, metadata !DIExpression()), !dbg !3053
  %36 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.2, align 8, !dbg !3140
  %tobool102 = icmp eq %union.df_ref_d* %36, null, !dbg !3141
  br i1 %tobool102, label %for.end121, label %for.body103, !dbg !3141

for.body103:                                      ; preds = %for.cond101
  call void @llvm.dbg.value(metadata %union.df_ref_d* %36, metadata !3046, metadata !DIExpression()), !dbg !3142
  %37 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %36, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3143
  %bf.load106 = load i32, i32* %37, align 8, !dbg !3143
  %and108 = and i32 %bf.load106, 131072, !dbg !3144
  %tobool109 = icmp eq i32 %and108, 0, !dbg !3144
  br i1 %tobool109, label %for.inc119, label %if.then110, !dbg !3145

if.then110:                                       ; preds = %for.body103
  %regno113 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %36, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3146
  %38 = load i32, i32* %regno113, align 8, !dbg !3146
  call void @llvm.dbg.value(metadata i32 %38, metadata !3050, metadata !DIExpression()), !dbg !3147
  %39 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def9, align 8, !dbg !3148
  %call115 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %39, i32 %38) #6, !dbg !3149
  %40 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !3150
  %call117 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %40, i32 %38) #6, !dbg !3151
  br label %for.inc119, !dbg !3152

for.inc119:                                       ; preds = %for.body103, %if.then110
  %incdec.ptr120 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.2, i64 1, !dbg !3153
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr120, metadata !3018, metadata !DIExpression()), !dbg !3053
  br label %for.cond101, !dbg !3154, !llvm.loop !3155

for.end121:                                       ; preds = %for.cond101
  %41 = load %struct.df*, %struct.df** @df, align 8, !dbg !3157
  %arrayidx122 = getelementptr inbounds %struct.df, %struct.df* %41, i64 0, i32 1, i64 2, !dbg !3157
  %42 = load %struct.dataflow*, %struct.dataflow** %arrayidx122, align 8, !dbg !3157
  %tobool123 = icmp eq %struct.dataflow* %42, null, !dbg !3157
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !3159

if.then124:                                       ; preds = %for.end121
  tail call void @df_recompute_luids(%struct.basic_block_def* %call) #6, !dbg !3160
  br label %if.end125, !dbg !3160

if.end125:                                        ; preds = %for.end121, %if.then124
  ret void, !dbg !3161
}

declare dso_local zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %index) unnamed_addr #0 !dbg !3162 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !3166, metadata !DIExpression()), !dbg !3167
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3168
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 0, !dbg !3168
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3168
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !3170
  %2 = load i32, i32* %block_info_size, align 8, !dbg !3170
  %cmp = icmp ugt i32 %2, %index, !dbg !3171
  br i1 %cmp, label %if.then, label %return, !dbg !3172

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !3173
  %3 = load i8**, i8*** %block_info, align 8, !dbg !3173
  %idxprom = zext i32 %index to i64, !dbg !3174
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !3174
  %4 = bitcast i8** %arrayidx3 to %struct.df_scan_bb_info**, !dbg !3174
  %5 = load %struct.df_scan_bb_info*, %struct.df_scan_bb_info** %4, align 8, !dbg !3174
  br label %return, !dbg !3175

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_scan_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !3176
  ret %struct.df_scan_bb_info* %retval.0, !dbg !3177
}

declare dso_local zeroext i8 @bitmap_intersect_compl_p(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_live_add_problem() local_unnamed_addr #4 !dbg !3178 {
entry:
  tail call void @df_add_problem(%struct.df_problem* nonnull @problem_LIVE) #6, !dbg !3179
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3180
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3181
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 2, !dbg !3181
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3181
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 4, !dbg !3182
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !3183
  ret void, !dbg !3184
}

; Function Attrs: nounwind uwtable
define dso_local void @df_live_set_all_dirty() local_unnamed_addr #4 !dbg !3185 {
entry:
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3188
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3188
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3188
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3188
  br label %for.cond, !dbg !3188

for.cond:                                         ; preds = %for.body, %entry
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %entry ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3190
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3187, metadata !DIExpression()), !dbg !3191
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !3188
  br i1 %tobool, label %for.end, label %for.body, !dbg !3188

for.body:                                         ; preds = %for.cond
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !3192
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 2, !dbg !3192
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3192
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 4, !dbg !3194
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !3194
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3195
  %5 = load i32, i32* %index, align 8, !dbg !3195
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %4, i32 %5) #6, !dbg !3196
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3197
  br label %for.cond, !dbg !3197, !llvm.loop !3198

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3200
}

; Function Attrs: nounwind uwtable
define dso_local void @df_live_verify_transfer_functions() local_unnamed_addr #4 !dbg !3201 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3211
  %tobool = icmp eq %struct.df* %0, null, !dbg !3211
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !3213

if.end:                                           ; preds = %entry
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3214
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !3204, metadata !DIExpression()), !dbg !3215
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3216
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !3205, metadata !DIExpression()), !dbg !3215
  %call2 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3217
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call2, metadata !3206, metadata !DIExpression()), !dbg !3215
  tail call void @df_grow_insn_info() #6, !dbg !3218
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3219
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !3219
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3219
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 0, !dbg !3219
  br label %for.cond, !dbg !3219

for.cond:                                         ; preds = %for.inc, %if.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.end ], [ %next_bb, %for.inc ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3220
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3203, metadata !DIExpression()), !dbg !3215
  %tobool3 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !3219
  br i1 %tobool3, label %for.end, label %for.body, !dbg !3219

for.body:                                         ; preds = %for.cond
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3221
  %3 = load i32, i32* %index, align 8, !dbg !3221
  %call4 = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %3) #7, !dbg !3222
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call4, metadata !3207, metadata !DIExpression()), !dbg !3223
  %4 = load i32, i32* %index, align 8, !dbg !3224
  %call6 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call2, i32 %4) #6, !dbg !3225
  %tobool7 = icmp eq %struct.df_live_bb_info* %call4, null, !dbg !3226
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !3228
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 1, i64 2, !dbg !3228
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3228
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i64 0, i32 4, !dbg !3228
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !3228
  %8 = load i32, i32* %index, align 8, !dbg !3228
  %call10 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %7, i32 %8) #6, !dbg !3228
  %tobool11 = icmp ne i32 %call10, 0, !dbg !3228
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !3229

if.then8:                                         ; preds = %for.body
  br i1 %tobool11, label %if.end37, label %if.then12, !dbg !3230

if.then12:                                        ; preds = %if.then8
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call4, i64 0, i32 1, !dbg !3232
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3232
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %9) #6, !dbg !3235
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call4, i64 0, i32 0, !dbg !3236
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !3236
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call1, %struct.bitmap_head_def* %10) #6, !dbg !3237
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3238
  tail call void @bitmap_clear(%struct.bitmap_head_def* %11) #6, !dbg !3239
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !3240
  tail call void @bitmap_clear(%struct.bitmap_head_def* %12) #6, !dbg !3241
  %13 = load i32, i32* %index, align 8, !dbg !3242
  tail call fastcc void @df_live_bb_local_compute(i32 %13) #7, !dbg !3243
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3244
  %call17 = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %14) #6, !dbg !3244
  %tobool18 = icmp eq i8 %call17, 0, !dbg !3244
  br i1 %tobool18, label %cond.true, label %cond.end, !dbg !3244

cond.true:                                        ; preds = %if.then12
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1863, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3244
  br label %cond.end, !dbg !3244

cond.end:                                         ; preds = %if.then12, %cond.true
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !3245
  %call20 = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %call1, %struct.bitmap_head_def* %15) #6, !dbg !3245
  %tobool21 = icmp eq i8 %call20, 0, !dbg !3245
  br i1 %tobool21, label %cond.true22, label %if.end37, !dbg !3245

cond.true22:                                      ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3245
  br label %if.end37, !dbg !3245

if.else:                                          ; preds = %for.body
  br i1 %tobool11, label %if.end37, label %cond.true33, !dbg !3246

cond.true33:                                      ; preds = %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1873, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3246
  br label %if.end37, !dbg !3246

if.end37:                                         ; preds = %cond.end, %cond.true33, %if.else, %if.then8, %cond.true22
  %16 = load i32, i32* %index, align 8, !dbg !3248
  %call39 = tail call fastcc %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %16) #7, !dbg !3248
  %tobool40 = icmp eq %struct.df_scan_bb_info* %call39, null, !dbg !3248
  br i1 %tobool40, label %cond.true41, label %for.inc, !dbg !3248

cond.true41:                                      ; preds = %if.end37
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1877, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3248
  br label %for.inc, !dbg !3248

for.inc:                                          ; preds = %if.end37, %cond.true41
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !3249
  br label %for.cond, !dbg !3249, !llvm.loop !3250

for.end:                                          ; preds = %for.cond
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !3252
  %arrayidx46 = getelementptr inbounds %struct.df, %struct.df* %17, i64 0, i32 1, i64 2, !dbg !3252
  %18 = load %struct.dataflow*, %struct.dataflow** %arrayidx46, align 8, !dbg !3252
  %out_of_date_transfer_functions47 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %18, i64 0, i32 4, !dbg !3252
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions47, align 8, !dbg !3252
  %call48 = tail call zeroext i8 @bitmap_intersect_compl_p(%struct.bitmap_head_def* %19, %struct.bitmap_head_def* %call2) #6, !dbg !3252
  %tobool49 = icmp eq i8 %call48, 0, !dbg !3252
  br i1 %tobool49, label %cond.end52, label %cond.true50, !dbg !3252

cond.true50:                                      ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1882, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3252
  br label %cond.end52, !dbg !3252

cond.end52:                                       ; preds = %for.end, %cond.true50
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !3253
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3204, metadata !DIExpression()), !dbg !3215
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1) #6, !dbg !3254
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3205, metadata !DIExpression()), !dbg !3215
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call2) #6, !dbg !3255
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !3206, metadata !DIExpression()), !dbg !3215
  br label %cleanup.cont, !dbg !3256

cleanup.cont:                                     ; preds = %entry, %cond.end52
  ret void, !dbg !3256
}

declare dso_local void @df_grow_insn_info() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @df_live_bb_local_compute(i32 %bb_index) unnamed_addr #4 !dbg !3257 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !3259, metadata !DIExpression()), !dbg !3279
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3280
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3280
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3280
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !3280
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !3280
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !3280
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !3280

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !3280
  br label %cond.end, !dbg !3280

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !3280
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %bb_index) #7, !dbg !3280
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !3260, metadata !DIExpression()), !dbg !3279
  %call4 = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %bb_index) #7, !dbg !3281
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call4, metadata !3261, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata i32 0, metadata !3264, metadata !DIExpression()), !dbg !3279
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !3282
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3282
  %3 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3282
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %3, i64 0, i32 0, !dbg !3282
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call4, i64 0, i32 1, !dbg !3283
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call4, i64 0, i32 0, !dbg !3285
  br label %for.cond, !dbg !3282

for.cond:                                         ; preds = %cleanup, %cond.end
  %insn.0.in = phi %struct.rtx_def** [ %head_, %cond.end ], [ %rt_rtx82, %cleanup ]
  %luid.0 = phi i32 [ 0, %cond.end ], [ %luid.1, %cleanup ], !dbg !3279
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3287
  call void @llvm.dbg.value(metadata i32 %luid.0, metadata !3264, metadata !DIExpression()), !dbg !3279
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3262, metadata !DIExpression()), !dbg !3279
  %tobool5 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !3288
  br i1 %tobool5, label %for.end83, label %land.rhs, !dbg !3288

land.rhs:                                         ; preds = %for.cond
  %4 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3288
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %4, i64 0, i32 1, !dbg !3288
  %5 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3288
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3288
  %rt_rtx = bitcast %union.rtunion_def* %6 to %struct.rtx_def**, !dbg !3288
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3288
  %cmp = icmp eq %struct.rtx_def* %insn.0, %7, !dbg !3288
  br i1 %cmp, label %for.end83, label %for.body, !dbg !3282

for.body:                                         ; preds = %land.rhs
  %arrayidx10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3289
  %rt_int = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !3289
  %8 = load i32, i32* %rt_int, align 8, !dbg !3289
  call void @llvm.dbg.value(metadata i32 %8, metadata !3265, metadata !DIExpression()), !dbg !3290
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !3291
  %insns = getelementptr inbounds %struct.df, %struct.df* %9, i64 0, i32 10, !dbg !3291
  %10 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3291
  %idxprom = zext i32 %8 to i64, !dbg !3291
  %arrayidx11 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %10, i64 %idxprom, !dbg !3291
  %11 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx11, align 8, !dbg !3291
  call void @llvm.dbg.value(metadata %struct.df_insn_info* %11, metadata !3269, metadata !DIExpression()), !dbg !3290
  %tobool12 = icmp eq %struct.df_insn_info* %11, null, !dbg !3292
  br i1 %tobool12, label %if.then, label %if.end, !dbg !3294

if.then:                                          ; preds = %for.body
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3295
  %bf.load = load i32, i32* %12, align 8, !dbg !3295
  %bf.clear = and i32 %bf.load, 65535, !dbg !3295
  %cmp13 = icmp eq i32 %bf.clear, 8, !dbg !3295
  br i1 %cmp13, label %cond.true25, label %lor.lhs.false, !dbg !3295

lor.lhs.false:                                    ; preds = %if.then
  %cmp16 = icmp eq i32 %bf.clear, 7, !dbg !3295
  br i1 %cmp16, label %cond.true25, label %lor.lhs.false17, !dbg !3295

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %cmp20 = icmp eq i32 %bf.clear, 9, !dbg !3295
  br i1 %cmp20, label %cond.true25, label %lor.lhs.false21, !dbg !3295

lor.lhs.false21:                                  ; preds = %lor.lhs.false17
  %cmp24 = icmp eq i32 %bf.clear, 10, !dbg !3295
  br i1 %cmp24, label %cond.true25, label %cond.end27, !dbg !3295

cond.true25:                                      ; preds = %lor.lhs.false21, %lor.lhs.false17, %lor.lhs.false, %if.then
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1474, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3295
  br label %cond.end27, !dbg !3295

cond.end27:                                       ; preds = %lor.lhs.false21, %cond.true25
  %call29 = tail call %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def* nonnull %insn.0) #6, !dbg !3297
  call void @llvm.dbg.value(metadata %struct.df_insn_info* %call29, metadata !3269, metadata !DIExpression()), !dbg !3290
  br label %if.end, !dbg !3298

if.end:                                           ; preds = %for.body, %cond.end27
  %insn_info.0 = phi %struct.df_insn_info* [ %11, %for.body ], [ %call29, %cond.end27 ], !dbg !3290
  call void @llvm.dbg.value(metadata %struct.df_insn_info* %insn_info.0, metadata !3269, metadata !DIExpression()), !dbg !3290
  %luid30 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %insn_info.0, i64 0, i32 5, !dbg !3299
  store i32 %luid.0, i32* %luid30, align 8, !dbg !3300
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !3301
  %bf.load31 = load i32, i32* %13, align 8, !dbg !3301
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !3301
  %cmp33 = icmp eq i32 %bf.clear32, 8, !dbg !3301
  br i1 %cmp33, label %if.end47, label %lor.lhs.false34, !dbg !3301

lor.lhs.false34:                                  ; preds = %if.end
  %cmp37 = icmp eq i32 %bf.clear32, 7, !dbg !3301
  br i1 %cmp37, label %if.end47, label %lor.lhs.false38, !dbg !3301

lor.lhs.false38:                                  ; preds = %lor.lhs.false34
  %cmp41 = icmp eq i32 %bf.clear32, 9, !dbg !3301
  br i1 %cmp41, label %if.end47, label %lor.lhs.false42, !dbg !3301

lor.lhs.false42:                                  ; preds = %lor.lhs.false38
  %cmp45 = icmp eq i32 %bf.clear32, 10, !dbg !3301
  br i1 %cmp45, label %if.end47, label %cleanup, !dbg !3303

if.end47:                                         ; preds = %lor.lhs.false42, %lor.lhs.false38, %lor.lhs.false34, %if.end
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3264, metadata !DIExpression()), !dbg !3279
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %insn_info.0, i64 0, i32 1, !dbg !3304
  %14 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !3304
  call void @llvm.dbg.value(metadata %union.df_ref_d** %14, metadata !3263, metadata !DIExpression()), !dbg !3279
  br label %for.cond48, !dbg !3305

for.cond48:                                       ; preds = %for.inc, %if.end47
  %def_rec.0 = phi %union.df_ref_d** [ %14, %if.end47 ], [ %incdec.ptr, %for.inc ], !dbg !3306
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3263, metadata !DIExpression()), !dbg !3279
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3307
  %tobool49 = icmp eq %union.df_ref_d* %15, null, !dbg !3308
  br i1 %tobool49, label %cleanup.loopexit, label %for.body50, !dbg !3308

for.body50:                                       ; preds = %for.cond48
  call void @llvm.dbg.value(metadata %union.df_ref_d* %15, metadata !3270, metadata !DIExpression()), !dbg !3309
  %regno52 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %15, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3310
  %16 = load i32, i32* %regno52, align 8, !dbg !3310
  call void @llvm.dbg.value(metadata i32 %16, metadata !3274, metadata !DIExpression()), !dbg !3309
  %17 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %15, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3311
  %bf.load54 = load i32, i32* %17, align 8, !dbg !3311
  %and = and i32 %bf.load54, 1114112, !dbg !3311
  %cmp55 = icmp eq i32 %and, 0, !dbg !3311
  br i1 %cmp55, label %if.else, label %if.then56, !dbg !3312

if.then56:                                        ; preds = %for.body50
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3313
  %call57 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %18, i32 %16) #6, !dbg !3314
  br label %for.inc, !dbg !3314

if.else:                                          ; preds = %for.body50
  %and61 = and i32 %bf.load54, 8388608, !dbg !3315
  %cmp62 = icmp eq i32 %and61, 0, !dbg !3315
  br i1 %cmp62, label %if.else65, label %if.then63, !dbg !3316

if.then63:                                        ; preds = %if.else
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !3317
  %call64 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %19, i32 %16) #6, !dbg !3318
  br label %for.inc, !dbg !3318

if.else65:                                        ; preds = %if.else
  %and69 = and i32 %bf.load54, 4194304, !dbg !3319
  %cmp70 = icmp eq i32 %and69, 0, !dbg !3319
  br i1 %cmp70, label %if.then71, label %for.inc, !dbg !3321

if.then71:                                        ; preds = %if.else65
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3322
  %call73 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %20, i32 %16) #6, !dbg !3323
  br label %for.inc, !dbg !3323

for.inc:                                          ; preds = %if.else65, %if.then56, %if.then71, %if.then63
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3324
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3263, metadata !DIExpression()), !dbg !3279
  br label %for.cond48, !dbg !3325, !llvm.loop !3326

cleanup.loopexit:                                 ; preds = %for.cond48
  %inc = add nsw i32 %luid.0, 1, !dbg !3328
  br label %cleanup, !dbg !3288

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false42
  %luid.1 = phi i32 [ %luid.0, %lor.lhs.false42 ], [ %inc, %cleanup.loopexit ], !dbg !3279
  call void @llvm.dbg.value(metadata i32 %luid.1, metadata !3264, metadata !DIExpression()), !dbg !3279
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !3288
  %rt_rtx82 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !3288
  br label %for.cond, !dbg !3288, !llvm.loop !3329

for.end83:                                        ; preds = %land.rhs, %for.cond
  %call84 = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !3331
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call84, metadata !3263, metadata !DIExpression()), !dbg !3279
  br label %for.cond85, !dbg !3332

for.cond85:                                       ; preds = %for.body87, %for.end83
  %def_rec.1 = phi %union.df_ref_d** [ %call84, %for.end83 ], [ %incdec.ptr94, %for.body87 ], !dbg !3333
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.1, metadata !3263, metadata !DIExpression()), !dbg !3279
  %22 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.1, align 8, !dbg !3334
  %tobool86 = icmp eq %union.df_ref_d* %22, null, !dbg !3335
  br i1 %tobool86, label %for.end95, label %for.body87, !dbg !3335

for.body87:                                       ; preds = %for.cond85
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !3336
  %regno91 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %22, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3337
  %24 = load i32, i32* %regno91, align 8, !dbg !3337
  %call92 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %23, i32 %24) #6, !dbg !3338
  %incdec.ptr94 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.1, i64 1, !dbg !3339
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr94, metadata !3263, metadata !DIExpression()), !dbg !3279
  br label %for.cond85, !dbg !3340, !llvm.loop !3341

for.end95:                                        ; preds = %for.cond85
  ret void, !dbg !3343
}

; Function Attrs: nounwind uwtable
define dso_local %struct.df_link* @df_chain_create(%union.df_ref_d* %src, %union.df_ref_d* %dst) local_unnamed_addr #4 !dbg !3344 {
entry:
  call void @llvm.dbg.value(metadata %union.df_ref_d* %src, metadata !3348, metadata !DIExpression()), !dbg !3352
  call void @llvm.dbg.value(metadata %union.df_ref_d* %dst, metadata !3349, metadata !DIExpression()), !dbg !3352
  %chain = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %src, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3353
  %0 = bitcast %struct.df_link** %chain to i64*, !dbg !3353
  %1 = load i64, i64* %0, align 8, !dbg !3353
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !3354
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 4, !dbg !3354
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3354
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 3, !dbg !3355
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !3355
  %call = tail call i8* @pool_alloc(%struct.alloc_pool_def* %4) #6, !dbg !3356
  %5 = bitcast i8* %call to %struct.df_link*, !dbg !3357
  call void @llvm.dbg.value(metadata %struct.df_link* %5, metadata !3351, metadata !DIExpression()), !dbg !3352
  %6 = bitcast %struct.df_link** %chain to i8**, !dbg !3358
  store i8* %call, i8** %6, align 8, !dbg !3358
  %next = getelementptr inbounds i8, i8* %call, i64 8, !dbg !3359
  %7 = bitcast i8* %next to i64*, !dbg !3360
  store i64 %1, i64* %7, align 8, !dbg !3360
  %ref = bitcast i8* %call to %union.df_ref_d**, !dbg !3361
  store %union.df_ref_d* %dst, %union.df_ref_d** %ref, align 8, !dbg !3362
  ret %struct.df_link* %5, !dbg !3363
}

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_chain_unlink(%union.df_ref_d* %ref) local_unnamed_addr #4 !dbg !3364 {
entry:
  call void @llvm.dbg.value(metadata %union.df_ref_d* %ref, metadata !3368, metadata !DIExpression()), !dbg !3372
  %chain1 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %ref, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3373
  %0 = load %struct.df_link*, %struct.df_link** %chain1, align 8, !dbg !3373
  call void @llvm.dbg.value(metadata %struct.df_link* %0, metadata !3369, metadata !DIExpression()), !dbg !3372
  br label %while.cond, !dbg !3374

while.cond:                                       ; preds = %while.body, %entry
  %.in = phi %struct.df_link* [ %0, %entry ], [ %2, %while.body ]
  %chain.0 = phi %struct.df_link* [ %0, %entry ], [ %2, %while.body ], !dbg !3372
  call void @llvm.dbg.value(metadata %struct.df_link* %chain.0, metadata !3369, metadata !DIExpression()), !dbg !3372
  %tobool = icmp eq %struct.df_link* %chain.0, null, !dbg !3374
  br i1 %tobool, label %while.end, label %while.body, !dbg !3374

while.body:                                       ; preds = %while.cond
  %1 = bitcast %struct.df_link* %.in to i8*, !dbg !3372
  %next2 = getelementptr inbounds %struct.df_link, %struct.df_link* %chain.0, i64 0, i32 1, !dbg !3375
  %2 = load %struct.df_link*, %struct.df_link** %next2, align 8, !dbg !3375
  call void @llvm.dbg.value(metadata %struct.df_link* %2, metadata !3370, metadata !DIExpression()), !dbg !3376
  %ref3 = getelementptr inbounds %struct.df_link, %struct.df_link* %chain.0, i64 0, i32 0, !dbg !3377
  %3 = load %union.df_ref_d*, %union.df_ref_d** %ref3, align 8, !dbg !3377
  tail call fastcc void @df_chain_unlink_1(%union.df_ref_d* %3, %union.df_ref_d* %ref) #7, !dbg !3378
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !3379
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 1, i64 4, !dbg !3379
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3379
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i64 0, i32 3, !dbg !3380
  %6 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !3380
  tail call void @pool_free(%struct.alloc_pool_def* %6, i8* %1) #6, !dbg !3381
  call void @llvm.dbg.value(metadata %struct.df_link* %2, metadata !3369, metadata !DIExpression()), !dbg !3372
  br label %while.cond, !dbg !3374, !llvm.loop !3382

while.end:                                        ; preds = %while.cond
  store %struct.df_link* null, %struct.df_link** %chain1, align 8, !dbg !3384
  ret void, !dbg !3385
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_chain_unlink_1(%union.df_ref_d* %ref, %union.df_ref_d* %target) unnamed_addr #4 !dbg !3386 {
entry:
  call void @llvm.dbg.value(metadata %union.df_ref_d* %ref, metadata !3390, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata %union.df_ref_d* %target, metadata !3391, metadata !DIExpression()), !dbg !3394
  %chain1 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %ref, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !3395
  call void @llvm.dbg.value(metadata %struct.df_link* null, metadata !3393, metadata !DIExpression()), !dbg !3394
  br label %while.cond, !dbg !3396

while.cond:                                       ; preds = %if.end9, %entry
  %chain.0.in = phi %struct.df_link** [ %chain1, %entry ], [ %next10, %if.end9 ]
  %prev.0 = phi %struct.df_link* [ null, %entry ], [ %chain.0, %if.end9 ], !dbg !3394
  %chain.0 = load %struct.df_link*, %struct.df_link** %chain.0.in, align 8, !dbg !3394
  call void @llvm.dbg.value(metadata %struct.df_link* %prev.0, metadata !3393, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata %struct.df_link* %chain.0, metadata !3392, metadata !DIExpression()), !dbg !3394
  %tobool = icmp eq %struct.df_link* %chain.0, null, !dbg !3396
  br i1 %tobool, label %cleanup.cont.loopexit, label %while.body, !dbg !3396

while.body:                                       ; preds = %while.cond
  %ref2 = getelementptr inbounds %struct.df_link, %struct.df_link* %chain.0, i64 0, i32 0, !dbg !3397
  %0 = load %union.df_ref_d*, %union.df_ref_d** %ref2, align 8, !dbg !3397
  %cmp = icmp eq %union.df_ref_d* %0, %target, !dbg !3400
  br i1 %cmp, label %if.then, label %if.end9, !dbg !3401

if.then:                                          ; preds = %while.body
  %prev.0.lcssa6 = phi %struct.df_link* [ %prev.0, %while.body ], !dbg !3394
  %chain.0.lcssa5 = phi %struct.df_link* [ %chain.0, %while.body ], !dbg !3394
  call void @llvm.dbg.value(metadata %struct.df_link* %prev.0.lcssa6, metadata !3393, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata %struct.df_link* %prev.0.lcssa6, metadata !3393, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.value(metadata %struct.df_link* %prev.0.lcssa6, metadata !3393, metadata !DIExpression()), !dbg !3394
  %tobool3 = icmp eq %struct.df_link* %prev.0.lcssa6, null, !dbg !3402
  %next = getelementptr inbounds %struct.df_link, %struct.df_link* %chain.0.lcssa5, i64 0, i32 1, !dbg !3405
  %1 = bitcast %struct.df_link** %next to i64*, !dbg !3405
  %2 = load i64, i64* %1, align 8, !dbg !3405
  br i1 %tobool3, label %if.else, label %if.then4, !dbg !3406

if.then4:                                         ; preds = %if.then
  %next5 = getelementptr inbounds %struct.df_link, %struct.df_link* %prev.0.lcssa6, i64 0, i32 1, !dbg !3407
  %3 = bitcast %struct.df_link** %next5 to i64*, !dbg !3408
  store i64 %2, i64* %3, align 8, !dbg !3408
  br label %if.end, !dbg !3409

if.else:                                          ; preds = %if.then
  %4 = bitcast %struct.df_link** %chain1 to i64*, !dbg !3410
  store i64 %2, i64* %4, align 8, !dbg !3410
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !3411
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 1, i64 4, !dbg !3411
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3411
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i64 0, i32 3, !dbg !3412
  %7 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !3412
  %8 = bitcast %struct.df_link* %chain.0.lcssa5 to i8*, !dbg !3413
  tail call void @pool_free(%struct.alloc_pool_def* %7, i8* nonnull %8) #6, !dbg !3414
  br label %cleanup.cont, !dbg !3415

if.end9:                                          ; preds = %while.body
  call void @llvm.dbg.value(metadata %struct.df_link* %chain.0, metadata !3393, metadata !DIExpression()), !dbg !3394
  %next10 = getelementptr inbounds %struct.df_link, %struct.df_link* %chain.0, i64 0, i32 1, !dbg !3416
  br label %while.cond, !dbg !3396, !llvm.loop !3417

cleanup.cont.loopexit:                            ; preds = %while.cond
  br label %cleanup.cont, !dbg !3419

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end
  ret void, !dbg !3419
}

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_chain_copy(%union.df_ref_d* %to_ref, %struct.df_link* %from_ref) local_unnamed_addr #4 !dbg !3420 {
entry:
  call void @llvm.dbg.value(metadata %union.df_ref_d* %to_ref, metadata !3424, metadata !DIExpression()), !dbg !3426
  call void @llvm.dbg.value(metadata %struct.df_link* %from_ref, metadata !3425, metadata !DIExpression()), !dbg !3426
  br label %while.cond, !dbg !3427

while.cond:                                       ; preds = %while.body, %entry
  %from_ref.addr.0 = phi %struct.df_link* [ %from_ref, %entry ], [ %1, %while.body ]
  call void @llvm.dbg.value(metadata %struct.df_link* %from_ref.addr.0, metadata !3425, metadata !DIExpression()), !dbg !3426
  %tobool = icmp eq %struct.df_link* %from_ref.addr.0, null, !dbg !3427
  br i1 %tobool, label %while.end, label %while.body, !dbg !3427

while.body:                                       ; preds = %while.cond
  %ref = getelementptr inbounds %struct.df_link, %struct.df_link* %from_ref.addr.0, i64 0, i32 0, !dbg !3428
  %0 = load %union.df_ref_d*, %union.df_ref_d** %ref, align 8, !dbg !3428
  %call = tail call %struct.df_link* @df_chain_create(%union.df_ref_d* %to_ref, %union.df_ref_d* %0) #7, !dbg !3430
  %next = getelementptr inbounds %struct.df_link, %struct.df_link* %from_ref.addr.0, i64 0, i32 1, !dbg !3431
  %1 = load %struct.df_link*, %struct.df_link** %next, align 8, !dbg !3431
  call void @llvm.dbg.value(metadata %struct.df_link* %1, metadata !3425, metadata !DIExpression()), !dbg !3426
  br label %while.cond, !dbg !3427, !llvm.loop !3432

while.end:                                        ; preds = %while.cond
  ret void, !dbg !3434
}

; Function Attrs: nounwind uwtable
define dso_local void @df_chain_add_problem(i32 %chain_flags) local_unnamed_addr #4 !dbg !3435 {
entry:
  call void @llvm.dbg.value(metadata i32 %chain_flags, metadata !3437, metadata !DIExpression()), !dbg !3438
  tail call void @df_add_problem(%struct.df_problem* nonnull @problem_CHAIN) #6, !dbg !3439
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3440
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 4, !dbg !3440
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3440
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 6, !dbg !3441
  store i32 %chain_flags, i32* %local_flags, align 8, !dbg !3442
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3443
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !3444
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 4, !dbg !3444
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !3444
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 4, !dbg !3445
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !3446
  ret void, !dbg !3447
}

; Function Attrs: nounwind uwtable
define dso_local i32 @df_byte_lr_get_regno_start(i32 %regno) local_unnamed_addr #4 !dbg !3448 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3452, metadata !DIExpression()), !dbg !3454
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3455
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !3455
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3455
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !3456
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !3456
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !3456
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !3453, metadata !DIExpression()), !dbg !3454
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 3, !dbg !3457
  %4 = load i32*, i32** %regno_start, align 8, !dbg !3457
  %idxprom = zext i32 %regno to i64, !dbg !3458
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !3458
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !3458
  ret i32 %5, !dbg !3459
}

; Function Attrs: nounwind uwtable
define dso_local i32 @df_byte_lr_get_regno_len(i32 %regno) local_unnamed_addr #4 !dbg !3460 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !3462, metadata !DIExpression()), !dbg !3464
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3465
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !3465
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3465
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !3466
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !3466
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !3466
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !3463, metadata !DIExpression()), !dbg !3464
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 4, !dbg !3467
  %4 = load i32*, i32** %regno_len, align 8, !dbg !3467
  %idxprom = zext i32 %regno to i64, !dbg !3468
  %arrayidx2 = getelementptr inbounds i32, i32* %4, i64 %idxprom, !dbg !3468
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !3468
  ret i32 %5, !dbg !3469
}

; Function Attrs: nounwind uwtable
define dso_local void @df_byte_lr_add_problem() local_unnamed_addr #4 !dbg !3470 {
entry:
  tail call void @df_add_problem(%struct.df_problem* nonnull @problem_BYTE_LR) #6, !dbg !3471
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !3472
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3473
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !3473
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3473
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 4, !dbg !3474
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !3475
  ret void, !dbg !3476
}

; Function Attrs: nounwind uwtable
define dso_local void @df_byte_lr_simulate_defs(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3477 {
entry:
  %sb = alloca i32, align 4
  %lb = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3481, metadata !DIExpression()), !dbg !3497
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3482, metadata !DIExpression()), !dbg !3497
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3498
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !3498
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3498
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !3499
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !3499
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !3499
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !3483, metadata !DIExpression()), !dbg !3497
  %arrayidx2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3500
  %rt_int = bitcast %union.rtunion_def* %arrayidx2 to i32*, !dbg !3500
  %4 = load i32, i32* %rt_int, align 8, !dbg !3500
  call void @llvm.dbg.value(metadata i32 %4, metadata !3485, metadata !DIExpression()), !dbg !3497
  %insns = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 10, !dbg !3501
  %5 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3501
  %idxprom = zext i32 %4 to i64, !dbg !3501
  %arrayidx3 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %5, i64 %idxprom, !dbg !3501
  %6 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx3, align 8, !dbg !3501
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %6, i64 0, i32 1, !dbg !3501
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !3501
  call void @llvm.dbg.value(metadata %union.df_ref_d** %7, metadata !3484, metadata !DIExpression()), !dbg !3497
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 3, !dbg !3502
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 4, !dbg !3502
  %8 = bitcast i32* %sb to i8*, !dbg !3502
  %9 = bitcast i32* %lb to i8*, !dbg !3502
  br label %for.cond, !dbg !3503

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %7, %entry ], [ %incdec.ptr, %for.inc ], !dbg !3504
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3484, metadata !DIExpression()), !dbg !3497
  %10 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3505
  %tobool = icmp eq %union.df_ref_d* %10, null, !dbg !3506
  br i1 %tobool, label %for.end, label %for.body, !dbg !3506

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %10, metadata !3486, metadata !DIExpression()), !dbg !3507
  %11 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %10, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3508
  %bf.load = load i32, i32* %11, align 8, !dbg !3508
  %and = and i32 %bf.load, 65536, !dbg !3509
  %tobool4 = icmp eq i32 %and, 0, !dbg !3509
  br i1 %tobool4, label %if.then, label %for.inc, !dbg !3510

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %10, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3511
  %12 = load i32, i32* %regno, align 8, !dbg !3511
  call void @llvm.dbg.value(metadata i32 %12, metadata !3490, metadata !DIExpression()), !dbg !3502
  %13 = load i32*, i32** %regno_start, align 8, !dbg !3512
  %idxprom6 = zext i32 %12 to i64, !dbg !3513
  %arrayidx7 = getelementptr inbounds i32, i32* %13, i64 %idxprom6, !dbg !3513
  %14 = load i32, i32* %arrayidx7, align 4, !dbg !3513
  call void @llvm.dbg.value(metadata i32 %14, metadata !3493, metadata !DIExpression()), !dbg !3502
  %15 = load i32*, i32** %regno_len, align 8, !dbg !3514
  %arrayidx9 = getelementptr inbounds i32, i32* %15, i64 %idxprom6, !dbg !3515
  %16 = load i32, i32* %arrayidx9, align 4, !dbg !3515
  call void @llvm.dbg.value(metadata i32 %16, metadata !3494, metadata !DIExpression()), !dbg !3502
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8, !dbg !3516
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8, !dbg !3517
  call void @llvm.dbg.value(metadata i32* %sb, metadata !3495, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  call void @llvm.dbg.value(metadata i32* %lb, metadata !3496, metadata !DIExpression(DW_OP_deref)), !dbg !3502
  %call = call zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d* nonnull %10, i32 1, i32* nonnull %sb, i32* nonnull %lb) #6, !dbg !3518
  %tobool10 = icmp eq i8 %call, 0, !dbg !3518
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !3520

if.then11:                                        ; preds = %if.then
  %17 = load i32, i32* %sb, align 4, !dbg !3521
  call void @llvm.dbg.value(metadata i32 %17, metadata !3495, metadata !DIExpression()), !dbg !3502
  %add = add i32 %14, %17, !dbg !3523
  call void @llvm.dbg.value(metadata i32 %add, metadata !3493, metadata !DIExpression()), !dbg !3502
  %18 = load i32, i32* %lb, align 4, !dbg !3524
  call void @llvm.dbg.value(metadata i32 %18, metadata !3496, metadata !DIExpression()), !dbg !3502
  call void @llvm.dbg.value(metadata i32 %17, metadata !3495, metadata !DIExpression()), !dbg !3502
  %sub = sub i32 %18, %17, !dbg !3525
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3494, metadata !DIExpression()), !dbg !3502
  br label %if.end, !dbg !3526

if.end:                                           ; preds = %if.then, %if.then11
  %start.0 = phi i32 [ %14, %if.then ], [ %add, %if.then11 ], !dbg !3502
  %len.0 = phi i32 [ %16, %if.then ], [ %sub, %if.then11 ], !dbg !3502
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !3494, metadata !DIExpression()), !dbg !3502
  call void @llvm.dbg.value(metadata i32 %start.0, metadata !3493, metadata !DIExpression()), !dbg !3502
  %tobool12 = icmp eq i32 %len.0, 0, !dbg !3527
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !3529

if.then13:                                        ; preds = %if.end
  call void @bitmap_clear_range(%struct.bitmap_head_def* %live, i32 %start.0, i32 %len.0) #6, !dbg !3530
  br label %if.end14, !dbg !3530

if.end14:                                         ; preds = %if.end, %if.then13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8, !dbg !3531
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8, !dbg !3531
  br label %for.inc, !dbg !3532

for.inc:                                          ; preds = %for.body, %if.end14
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3533
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3484, metadata !DIExpression()), !dbg !3497
  br label %for.cond, !dbg !3534, !llvm.loop !3535

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3537
}

declare dso_local zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d*, i32, i32*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_byte_lr_simulate_uses(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3538 {
entry:
  %sb = alloca i32, align 4
  %lb = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3540, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3541, metadata !DIExpression()), !dbg !3554
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3555
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !3555
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3555
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !3556
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !3556
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !3556
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !3542, metadata !DIExpression()), !dbg !3554
  %arrayidx2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3557
  %rt_int = bitcast %union.rtunion_def* %arrayidx2 to i32*, !dbg !3557
  %4 = load i32, i32* %rt_int, align 8, !dbg !3557
  call void @llvm.dbg.value(metadata i32 %4, metadata !3544, metadata !DIExpression()), !dbg !3554
  %insns = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 10, !dbg !3558
  %5 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3558
  %idxprom = zext i32 %4 to i64, !dbg !3558
  %arrayidx3 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %5, i64 %idxprom, !dbg !3558
  %6 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx3, align 8, !dbg !3558
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %6, i64 0, i32 2, !dbg !3558
  %7 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !3558
  call void @llvm.dbg.value(metadata %union.df_ref_d** %7, metadata !3543, metadata !DIExpression()), !dbg !3554
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 3, !dbg !3559
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 4, !dbg !3559
  %8 = bitcast i32* %sb to i8*, !dbg !3559
  %9 = bitcast i32* %lb to i8*, !dbg !3559
  br label %for.cond, !dbg !3560

for.cond:                                         ; preds = %if.end11, %entry
  %use_rec.0 = phi %union.df_ref_d** [ %7, %entry ], [ %incdec.ptr, %if.end11 ], !dbg !3561
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !3543, metadata !DIExpression()), !dbg !3554
  %10 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !3562
  %tobool = icmp eq %union.df_ref_d* %10, null, !dbg !3563
  br i1 %tobool, label %for.end, label %for.body, !dbg !3563

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %10, metadata !3545, metadata !DIExpression()), !dbg !3559
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %10, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3564
  %11 = load i32, i32* %regno, align 8, !dbg !3564
  call void @llvm.dbg.value(metadata i32 %11, metadata !3549, metadata !DIExpression()), !dbg !3559
  %12 = load i32*, i32** %regno_start, align 8, !dbg !3565
  %idxprom4 = zext i32 %11 to i64, !dbg !3566
  %arrayidx5 = getelementptr inbounds i32, i32* %12, i64 %idxprom4, !dbg !3566
  %13 = load i32, i32* %arrayidx5, align 4, !dbg !3566
  call void @llvm.dbg.value(metadata i32 %13, metadata !3550, metadata !DIExpression()), !dbg !3559
  %14 = load i32*, i32** %regno_len, align 8, !dbg !3567
  %arrayidx7 = getelementptr inbounds i32, i32* %14, i64 %idxprom4, !dbg !3568
  %15 = load i32, i32* %arrayidx7, align 4, !dbg !3568
  call void @llvm.dbg.value(metadata i32 %15, metadata !3551, metadata !DIExpression()), !dbg !3559
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #8, !dbg !3569
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #8, !dbg !3570
  call void @llvm.dbg.value(metadata i32* %sb, metadata !3552, metadata !DIExpression(DW_OP_deref)), !dbg !3559
  call void @llvm.dbg.value(metadata i32* %lb, metadata !3553, metadata !DIExpression(DW_OP_deref)), !dbg !3559
  %call = call zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d* nonnull %10, i32 0, i32* nonnull %sb, i32* nonnull %lb) #6, !dbg !3571
  %tobool8 = icmp eq i8 %call, 0, !dbg !3571
  br i1 %tobool8, label %if.then, label %if.end, !dbg !3573

if.then:                                          ; preds = %for.body
  %16 = load i32, i32* %sb, align 4, !dbg !3574
  call void @llvm.dbg.value(metadata i32 %16, metadata !3552, metadata !DIExpression()), !dbg !3559
  %add = add i32 %13, %16, !dbg !3576
  call void @llvm.dbg.value(metadata i32 %add, metadata !3550, metadata !DIExpression()), !dbg !3559
  %17 = load i32, i32* %lb, align 4, !dbg !3577
  call void @llvm.dbg.value(metadata i32 %17, metadata !3553, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.value(metadata i32 %16, metadata !3552, metadata !DIExpression()), !dbg !3559
  %sub = sub i32 %17, %16, !dbg !3578
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3551, metadata !DIExpression()), !dbg !3559
  br label %if.end, !dbg !3579

if.end:                                           ; preds = %for.body, %if.then
  %start.0 = phi i32 [ %13, %for.body ], [ %add, %if.then ], !dbg !3559
  %len.0 = phi i32 [ %15, %for.body ], [ %sub, %if.then ], !dbg !3559
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !3551, metadata !DIExpression()), !dbg !3559
  call void @llvm.dbg.value(metadata i32 %start.0, metadata !3550, metadata !DIExpression()), !dbg !3559
  %tobool9 = icmp eq i32 %len.0, 0, !dbg !3580
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !3582

if.then10:                                        ; preds = %if.end
  call void @bitmap_set_range(%struct.bitmap_head_def* %live, i32 %start.0, i32 %len.0) #6, !dbg !3583
  br label %if.end11, !dbg !3583

if.end11:                                         ; preds = %if.end, %if.then10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #8, !dbg !3584
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #8, !dbg !3584
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !3585
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3543, metadata !DIExpression()), !dbg !3554
  br label %for.cond, !dbg !3586, !llvm.loop !3587

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3589
}

declare dso_local void @bitmap_set_range(%struct.bitmap_head_def*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_byte_lr_simulate_artificial_refs_at_top(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3590 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3592, metadata !DIExpression()), !dbg !3606
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3593, metadata !DIExpression()), !dbg !3606
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3607
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !3607
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3607
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !3608
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !3608
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !3608
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !3594, metadata !DIExpression()), !dbg !3606
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !3609
  %4 = load i32, i32* %index, align 8, !dbg !3609
  call void @llvm.dbg.value(metadata i32 %4, metadata !3596, metadata !DIExpression()), !dbg !3606
  %call = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %4) #7, !dbg !3610
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call, metadata !3595, metadata !DIExpression()), !dbg !3606
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 3, !dbg !3611
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 4, !dbg !3611
  br label %for.cond, !dbg !3612

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %call, %entry ], [ %incdec.ptr, %for.inc ], !dbg !3613
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3595, metadata !DIExpression()), !dbg !3606
  %5 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3614
  %tobool = icmp eq %union.df_ref_d* %5, null, !dbg !3615
  br i1 %tobool, label %for.end, label %for.body, !dbg !3615

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %5, metadata !3597, metadata !DIExpression()), !dbg !3616
  %6 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3617
  %bf.load = load i32, i32* %6, align 8, !dbg !3617
  %and = and i32 %bf.load, 131072, !dbg !3618
  %tobool2 = icmp eq i32 %and, 0, !dbg !3618
  br i1 %tobool2, label %for.inc, label %if.then, !dbg !3619

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3620
  %7 = load i32, i32* %regno, align 8, !dbg !3620
  call void @llvm.dbg.value(metadata i32 %7, metadata !3601, metadata !DIExpression()), !dbg !3611
  %8 = load i32*, i32** %regno_start, align 8, !dbg !3621
  %idxprom = zext i32 %7 to i64, !dbg !3622
  %arrayidx4 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !3622
  %9 = load i32, i32* %arrayidx4, align 4, !dbg !3622
  call void @llvm.dbg.value(metadata i32 %9, metadata !3604, metadata !DIExpression()), !dbg !3611
  %10 = load i32*, i32** %regno_len, align 8, !dbg !3623
  %arrayidx6 = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !3624
  %11 = load i32, i32* %arrayidx6, align 4, !dbg !3624
  call void @llvm.dbg.value(metadata i32 %11, metadata !3605, metadata !DIExpression()), !dbg !3611
  tail call void @bitmap_clear_range(%struct.bitmap_head_def* %live, i32 %9, i32 %11) #6, !dbg !3625
  br label %for.inc, !dbg !3626

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3627
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3595, metadata !DIExpression()), !dbg !3606
  br label %for.cond, !dbg !3628, !llvm.loop !3629

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3631
}

; Function Attrs: nounwind uwtable
define dso_local void @df_byte_lr_simulate_artificial_refs_at_end(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3632 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3634, metadata !DIExpression()), !dbg !3658
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3635, metadata !DIExpression()), !dbg !3658
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3659
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !3659
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3659
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !3660
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !3660
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !3660
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !3636, metadata !DIExpression()), !dbg !3658
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !3661
  %4 = load i32, i32* %index, align 8, !dbg !3661
  call void @llvm.dbg.value(metadata i32 %4, metadata !3639, metadata !DIExpression()), !dbg !3658
  %call = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %4) #7, !dbg !3662
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call, metadata !3637, metadata !DIExpression()), !dbg !3658
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 3, !dbg !3663
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 4, !dbg !3663
  br label %for.cond, !dbg !3664

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %call, %entry ], [ %incdec.ptr, %for.inc ], !dbg !3665
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3637, metadata !DIExpression()), !dbg !3658
  %5 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3666
  %tobool = icmp eq %union.df_ref_d* %5, null, !dbg !3667
  br i1 %tobool, label %for.end, label %for.body, !dbg !3667

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %5, metadata !3640, metadata !DIExpression()), !dbg !3668
  %6 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3669
  %bf.load = load i32, i32* %6, align 8, !dbg !3669
  %and = and i32 %bf.load, 131072, !dbg !3670
  %cmp = icmp eq i32 %and, 0, !dbg !3671
  br i1 %cmp, label %if.then, label %for.inc, !dbg !3672

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3673
  %7 = load i32, i32* %regno, align 8, !dbg !3673
  call void @llvm.dbg.value(metadata i32 %7, metadata !3644, metadata !DIExpression()), !dbg !3663
  %8 = load i32*, i32** %regno_start, align 8, !dbg !3674
  %idxprom = zext i32 %7 to i64, !dbg !3675
  %arrayidx3 = getelementptr inbounds i32, i32* %8, i64 %idxprom, !dbg !3675
  %9 = load i32, i32* %arrayidx3, align 4, !dbg !3675
  call void @llvm.dbg.value(metadata i32 %9, metadata !3647, metadata !DIExpression()), !dbg !3663
  %10 = load i32*, i32** %regno_len, align 8, !dbg !3676
  %arrayidx5 = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !3677
  %11 = load i32, i32* %arrayidx5, align 4, !dbg !3677
  call void @llvm.dbg.value(metadata i32 %11, metadata !3648, metadata !DIExpression()), !dbg !3663
  tail call void @bitmap_clear_range(%struct.bitmap_head_def* %live, i32 %9, i32 %11) #6, !dbg !3678
  br label %for.inc, !dbg !3679

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3680
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3637, metadata !DIExpression()), !dbg !3658
  br label %for.cond, !dbg !3681, !llvm.loop !3682

for.end:                                          ; preds = %for.cond
  %call6 = tail call fastcc %union.df_ref_d** @df_get_artificial_uses(i32 %4) #7, !dbg !3684
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call6, metadata !3638, metadata !DIExpression()), !dbg !3658
  br label %for.cond7, !dbg !3685

for.cond7:                                        ; preds = %for.inc27, %for.end
  %use_rec.0 = phi %union.df_ref_d** [ %call6, %for.end ], [ %incdec.ptr28, %for.inc27 ], !dbg !3686
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !3638, metadata !DIExpression()), !dbg !3658
  %12 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !3687
  %tobool8 = icmp eq %union.df_ref_d* %12, null, !dbg !3688
  br i1 %tobool8, label %for.end29, label %for.body9, !dbg !3688

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.value(metadata %union.df_ref_d* %12, metadata !3649, metadata !DIExpression()), !dbg !3689
  %13 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %12, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3690
  %bf.load11 = load i32, i32* %13, align 8, !dbg !3690
  %and13 = and i32 %bf.load11, 131072, !dbg !3691
  %cmp14 = icmp eq i32 %and13, 0, !dbg !3692
  br i1 %cmp14, label %if.then15, label %for.inc27, !dbg !3693

if.then15:                                        ; preds = %for.body9
  %regno17 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %12, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3694
  %14 = load i32, i32* %regno17, align 8, !dbg !3694
  call void @llvm.dbg.value(metadata i32 %14, metadata !3653, metadata !DIExpression()), !dbg !3695
  %15 = load i32*, i32** %regno_start, align 8, !dbg !3696
  %idxprom20 = zext i32 %14 to i64, !dbg !3697
  %arrayidx21 = getelementptr inbounds i32, i32* %15, i64 %idxprom20, !dbg !3697
  %16 = load i32, i32* %arrayidx21, align 4, !dbg !3697
  call void @llvm.dbg.value(metadata i32 %16, metadata !3656, metadata !DIExpression()), !dbg !3695
  %17 = load i32*, i32** %regno_len, align 8, !dbg !3698
  %arrayidx25 = getelementptr inbounds i32, i32* %17, i64 %idxprom20, !dbg !3699
  %18 = load i32, i32* %arrayidx25, align 4, !dbg !3699
  call void @llvm.dbg.value(metadata i32 %18, metadata !3657, metadata !DIExpression()), !dbg !3695
  tail call void @bitmap_set_range(%struct.bitmap_head_def* %live, i32 %16, i32 %18) #6, !dbg !3700
  br label %for.inc27, !dbg !3701

for.inc27:                                        ; preds = %for.body9, %if.then15
  %incdec.ptr28 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !3702
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr28, metadata !3638, metadata !DIExpression()), !dbg !3658
  br label %for.cond7, !dbg !3703, !llvm.loop !3704

for.end29:                                        ; preds = %for.cond7
  ret void, !dbg !3706
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %union.df_ref_d** @df_get_artificial_uses(i32 %bb_index) unnamed_addr #0 !dbg !3707 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !3709, metadata !DIExpression()), !dbg !3710
  %call = tail call fastcc %struct.df_scan_bb_info* @df_scan_get_bb_info(i32 %bb_index) #7, !dbg !3711
  %artificial_uses = getelementptr inbounds %struct.df_scan_bb_info, %struct.df_scan_bb_info* %call, i64 0, i32 1, !dbg !3712
  %0 = load %union.df_ref_d**, %union.df_ref_d*** %artificial_uses, align 8, !dbg !3712
  ret %union.df_ref_d** %0, !dbg !3713
}

; Function Attrs: nounwind uwtable
define dso_local void @df_note_add_problem() local_unnamed_addr #4 !dbg !3714 {
entry:
  tail call void @df_add_problem(%struct.df_problem* nonnull @problem_NOTE) #6, !dbg !3715
  ret void, !dbg !3716
}

; Function Attrs: nounwind uwtable
define dso_local void @df_simulate_find_defs(%struct.rtx_def* %insn, %struct.bitmap_head_def* %defs) local_unnamed_addr #4 !dbg !3717 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3719, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %defs, metadata !3720, metadata !DIExpression()), !dbg !3727
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3728
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3728
  %0 = load i32, i32* %rt_int, align 8, !dbg !3728
  call void @llvm.dbg.value(metadata i32 %0, metadata !3722, metadata !DIExpression()), !dbg !3727
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !3729
  %insns = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 10, !dbg !3729
  %2 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3729
  %idxprom = zext i32 %0 to i64, !dbg !3729
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %2, i64 %idxprom, !dbg !3729
  %3 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !3729
  %defs2 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %3, i64 0, i32 1, !dbg !3729
  %4 = load %union.df_ref_d**, %union.df_ref_d*** %defs2, align 8, !dbg !3729
  call void @llvm.dbg.value(metadata %union.df_ref_d** %4, metadata !3721, metadata !DIExpression()), !dbg !3727
  br label %for.cond, !dbg !3730

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %4, %entry ], [ %incdec.ptr, %for.inc ], !dbg !3731
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3721, metadata !DIExpression()), !dbg !3727
  %5 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3732
  %tobool = icmp eq %union.df_ref_d* %5, null, !dbg !3733
  br i1 %tobool, label %for.end, label %for.body, !dbg !3733

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %5, metadata !3723, metadata !DIExpression()), !dbg !3734
  %6 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3735
  %bf.load = load i32, i32* %6, align 8, !dbg !3735
  %and = and i32 %bf.load, 1114112, !dbg !3737
  %tobool3 = icmp eq i32 %and, 0, !dbg !3737
  br i1 %tobool3, label %if.then, label %for.inc, !dbg !3738

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3739
  %7 = load i32, i32* %regno, align 8, !dbg !3739
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %defs, i32 %7) #6, !dbg !3740
  br label %for.inc, !dbg !3740

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3741
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3721, metadata !DIExpression()), !dbg !3727
  br label %for.cond, !dbg !3742, !llvm.loop !3743

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3745
}

; Function Attrs: nounwind uwtable
define dso_local void @df_simulate_defs(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3746 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3748, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3749, metadata !DIExpression()), !dbg !3757
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3758
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3758
  %0 = load i32, i32* %rt_int, align 8, !dbg !3758
  call void @llvm.dbg.value(metadata i32 %0, metadata !3751, metadata !DIExpression()), !dbg !3757
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !3759
  %insns = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 10, !dbg !3759
  %2 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3759
  %idxprom = zext i32 %0 to i64, !dbg !3759
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %2, i64 %idxprom, !dbg !3759
  %3 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !3759
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %3, i64 0, i32 1, !dbg !3759
  %4 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !3759
  call void @llvm.dbg.value(metadata %union.df_ref_d** %4, metadata !3750, metadata !DIExpression()), !dbg !3757
  br label %for.cond, !dbg !3760

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %4, %entry ], [ %incdec.ptr, %for.inc ], !dbg !3761
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3750, metadata !DIExpression()), !dbg !3757
  %5 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3762
  %tobool = icmp eq %union.df_ref_d* %5, null, !dbg !3763
  br i1 %tobool, label %for.end, label %for.body, !dbg !3763

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %5, metadata !3752, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.value(metadata i32 undef, metadata !3756, metadata !DIExpression()), !dbg !3764
  %6 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3765
  %bf.load = load i32, i32* %6, align 8, !dbg !3765
  %and = and i32 %bf.load, 1114112, !dbg !3767
  %tobool3 = icmp eq i32 %and, 0, !dbg !3767
  br i1 %tobool3, label %if.then, label %for.inc, !dbg !3768

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3769
  %7 = load i32, i32* %regno, align 8, !dbg !3769
  call void @llvm.dbg.value(metadata i32 %7, metadata !3756, metadata !DIExpression()), !dbg !3764
  %call = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live, i32 %7) #6, !dbg !3770
  br label %for.inc, !dbg !3770

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3771
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3750, metadata !DIExpression()), !dbg !3757
  br label %for.cond, !dbg !3772, !llvm.loop !3773

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3775
}

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define dso_local void @df_simulate_uses(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3776 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3778, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3779, metadata !DIExpression()), !dbg !3786
  call void @llvm.dbg.value(metadata i32 undef, metadata !3781, metadata !DIExpression()), !dbg !3786
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3787
  %bf.load = load i32, i32* %0, align 8, !dbg !3787
  %bf.clear = and i32 %bf.load, 65535, !dbg !3787
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !3787
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !3789

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3790
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3790
  %1 = load i32, i32* %rt_int, align 8, !dbg !3790
  call void @llvm.dbg.value(metadata i32 %1, metadata !3781, metadata !DIExpression()), !dbg !3786
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !3791
  %insns = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 10, !dbg !3791
  %3 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3791
  %idxprom = zext i32 %1 to i64, !dbg !3791
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %3, i64 %idxprom, !dbg !3791
  %4 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !3791
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %4, i64 0, i32 2, !dbg !3791
  %5 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !3791
  call void @llvm.dbg.value(metadata %union.df_ref_d** %5, metadata !3780, metadata !DIExpression()), !dbg !3786
  br label %for.cond, !dbg !3792

for.cond:                                         ; preds = %for.body, %if.end
  %use_rec.0 = phi %union.df_ref_d** [ %5, %if.end ], [ %incdec.ptr, %for.body ], !dbg !3793
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !3780, metadata !DIExpression()), !dbg !3786
  %6 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !3794
  %tobool = icmp eq %union.df_ref_d* %6, null, !dbg !3795
  br i1 %tobool, label %cleanup.cont.loopexit, label %for.body, !dbg !3795

for.body:                                         ; preds = %for.cond
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %6, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3796
  %7 = load i32, i32* %regno, align 8, !dbg !3796
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %live, i32 %7) #6, !dbg !3797
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !3798
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3780, metadata !DIExpression()), !dbg !3786
  br label %for.cond, !dbg !3799, !llvm.loop !3800

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !3802

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %entry
  ret void, !dbg !3802
}

; Function Attrs: nounwind uwtable
define dso_local void @df_simulate_initialize_backwards(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3803 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3805, metadata !DIExpression()), !dbg !3818
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3806, metadata !DIExpression()), !dbg !3818
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !3819
  %0 = load i32, i32* %index, align 8, !dbg !3819
  call void @llvm.dbg.value(metadata i32 %0, metadata !3809, metadata !DIExpression()), !dbg !3818
  %call = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %0) #7, !dbg !3820
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call, metadata !3807, metadata !DIExpression()), !dbg !3818
  br label %for.cond, !dbg !3821

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %call, %entry ], [ %incdec.ptr, %for.inc ], !dbg !3822
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3807, metadata !DIExpression()), !dbg !3818
  %1 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3823
  %tobool = icmp eq %union.df_ref_d* %1, null, !dbg !3824
  br i1 %tobool, label %for.end, label %for.body, !dbg !3824

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %1, metadata !3810, metadata !DIExpression()), !dbg !3825
  %2 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3826
  %bf.load = load i32, i32* %2, align 8, !dbg !3826
  %and = and i32 %bf.load, 131072, !dbg !3828
  %cmp = icmp eq i32 %and, 0, !dbg !3829
  br i1 %cmp, label %if.then, label %for.inc, !dbg !3830

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3831
  %3 = load i32, i32* %regno, align 8, !dbg !3831
  %call2 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live, i32 %3) #6, !dbg !3832
  br label %for.inc, !dbg !3832

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3833
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3807, metadata !DIExpression()), !dbg !3818
  br label %for.cond, !dbg !3834, !llvm.loop !3835

for.end:                                          ; preds = %for.cond
  %call3 = tail call fastcc %union.df_ref_d** @df_get_artificial_uses(i32 %0) #7, !dbg !3837
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call3, metadata !3808, metadata !DIExpression()), !dbg !3818
  br label %for.cond4, !dbg !3838

for.cond4:                                        ; preds = %for.inc17, %for.end
  %use_rec.0 = phi %union.df_ref_d** [ %call3, %for.end ], [ %incdec.ptr18, %for.inc17 ], !dbg !3839
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !3808, metadata !DIExpression()), !dbg !3818
  %4 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !3840
  %tobool5 = icmp eq %union.df_ref_d* %4, null, !dbg !3841
  br i1 %tobool5, label %for.end19, label %for.body6, !dbg !3841

for.body6:                                        ; preds = %for.cond4
  call void @llvm.dbg.value(metadata %union.df_ref_d* %4, metadata !3814, metadata !DIExpression()), !dbg !3842
  %5 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %4, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3843
  %bf.load8 = load i32, i32* %5, align 8, !dbg !3843
  %and10 = and i32 %bf.load8, 131072, !dbg !3845
  %cmp11 = icmp eq i32 %and10, 0, !dbg !3846
  br i1 %cmp11, label %if.then12, label %for.inc17, !dbg !3847

if.then12:                                        ; preds = %for.body6
  %regno14 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %4, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3848
  %6 = load i32, i32* %regno14, align 8, !dbg !3848
  %call15 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %live, i32 %6) #6, !dbg !3849
  br label %for.inc17, !dbg !3849

for.inc17:                                        ; preds = %for.body6, %if.then12
  %incdec.ptr18 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !3850
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr18, metadata !3808, metadata !DIExpression()), !dbg !3818
  br label %for.cond4, !dbg !3851, !llvm.loop !3852

for.end19:                                        ; preds = %for.cond4
  ret void, !dbg !3854
}

; Function Attrs: nounwind uwtable
define dso_local void @df_simulate_one_insn_backwards(%struct.basic_block_def* %bb, %struct.rtx_def* %insn, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3855 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3857, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3858, metadata !DIExpression()), !dbg !3860
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3859, metadata !DIExpression()), !dbg !3860
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3861
  %bf.load = load i32, i32* %0, align 8, !dbg !3861
  %bf.clear = and i32 %bf.load, 65535, !dbg !3861
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3861
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !3861

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3861
  br i1 %cmp3, label %land.lhs.true, label %lor.lhs.false4, !dbg !3861

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3861
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false8, !dbg !3861

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3861
  br i1 %cmp11, label %land.lhs.true, label %return, !dbg !3861

land.lhs.true:                                    ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %cmp14 = icmp eq i32 %bf.clear, 7, !dbg !3861
  br i1 %cmp14, label %return, label %if.end, !dbg !3863

if.end:                                           ; preds = %land.lhs.true
  tail call void @df_simulate_defs(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) #7, !dbg !3864
  tail call void @df_simulate_uses(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) #7, !dbg !3865
  tail call fastcc void @df_simulate_fixup_sets(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) #7, !dbg !3866
  br label %return, !dbg !3867

return:                                           ; preds = %lor.lhs.false8, %land.lhs.true, %if.end
  ret void, !dbg !3867
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @df_simulate_fixup_sets(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) unnamed_addr #0 !dbg !3868 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3870, metadata !DIExpression()), !dbg !3872
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3871, metadata !DIExpression()), !dbg !3872
  %call = tail call fastcc zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %bb) #7, !dbg !3873
  %tobool = icmp eq i8 %call, 0, !dbg !3873
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3875
  br i1 %tobool, label %if.else, label %if.then, !dbg !3876

if.then:                                          ; preds = %entry
  %eh_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 15, !dbg !3877
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %eh_block_artificial_uses, align 8, !dbg !3877
  %call1 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %live, %struct.bitmap_head_def* %1) #6, !dbg !3878
  br label %if.end, !dbg !3878

if.else:                                          ; preds = %entry
  %regular_block_artificial_uses = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 14, !dbg !3879
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regular_block_artificial_uses, align 8, !dbg !3879
  %call2 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %live, %struct.bitmap_head_def* %2) #6, !dbg !3880
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !3881
}

; Function Attrs: nounwind uwtable
define dso_local void @df_simulate_finalize_backwards(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3882 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3884, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3885, metadata !DIExpression()), !dbg !3892
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !3893
  %0 = load i32, i32* %index, align 8, !dbg !3893
  call void @llvm.dbg.value(metadata i32 %0, metadata !3887, metadata !DIExpression()), !dbg !3892
  %call = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %0) #7, !dbg !3894
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call, metadata !3886, metadata !DIExpression()), !dbg !3892
  br label %for.cond, !dbg !3895

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %call, %entry ], [ %incdec.ptr, %for.inc ], !dbg !3896
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3886, metadata !DIExpression()), !dbg !3892
  %1 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3897
  %tobool = icmp eq %union.df_ref_d* %1, null, !dbg !3898
  br i1 %tobool, label %for.end, label %for.body, !dbg !3898

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %1, metadata !3888, metadata !DIExpression()), !dbg !3899
  %2 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3900
  %bf.load = load i32, i32* %2, align 8, !dbg !3900
  %and = and i32 %bf.load, 131072, !dbg !3902
  %tobool1 = icmp eq i32 %and, 0, !dbg !3902
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !3903

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3904
  %3 = load i32, i32* %regno, align 8, !dbg !3904
  %call3 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live, i32 %3) #6, !dbg !3905
  br label %for.inc, !dbg !3905

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3906
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3886, metadata !DIExpression()), !dbg !3892
  br label %for.cond, !dbg !3907, !llvm.loop !3908

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3910
}

; Function Attrs: nounwind uwtable
define dso_local void @df_simulate_initialize_forwards(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3911 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3913, metadata !DIExpression()), !dbg !3921
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3914, metadata !DIExpression()), !dbg !3921
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !3922
  %0 = load i32, i32* %index, align 8, !dbg !3922
  call void @llvm.dbg.value(metadata i32 %0, metadata !3916, metadata !DIExpression()), !dbg !3921
  %call = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %0) #7, !dbg !3923
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call, metadata !3915, metadata !DIExpression()), !dbg !3921
  br label %for.cond, !dbg !3924

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %call, %entry ], [ %incdec.ptr, %for.inc ], !dbg !3925
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3915, metadata !DIExpression()), !dbg !3921
  %1 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3926
  %tobool = icmp eq %union.df_ref_d* %1, null, !dbg !3927
  br i1 %tobool, label %for.end, label %for.body, !dbg !3927

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %1, metadata !3917, metadata !DIExpression()), !dbg !3928
  %2 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !3929
  %bf.load = load i32, i32* %2, align 8, !dbg !3929
  %and = and i32 %bf.load, 131072, !dbg !3931
  %tobool1 = icmp eq i32 %and, 0, !dbg !3931
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !3932

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3933
  %3 = load i32, i32* %regno, align 8, !dbg !3933
  %call3 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live, i32 %3) #6, !dbg !3934
  br label %for.inc, !dbg !3934

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3935
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3915, metadata !DIExpression()), !dbg !3921
  br label %for.cond, !dbg !3936, !llvm.loop !3937

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3939
}

; Function Attrs: nounwind uwtable
define dso_local void @df_simulate_one_insn_forwards(%struct.basic_block_def* %bb, %struct.rtx_def* %insn, %struct.bitmap_head_def* %live) local_unnamed_addr #4 !dbg !3940 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !3942, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !3943, metadata !DIExpression()), !dbg !3956
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !3944, metadata !DIExpression()), !dbg !3956
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !3957
  %bf.load = load i32, i32* %0, align 8, !dbg !3957
  %bf.clear = and i32 %bf.load, 65535, !dbg !3957
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !3957
  br i1 %cmp, label %if.end, label %lor.lhs.false, !dbg !3957

lor.lhs.false:                                    ; preds = %entry
  %cmp3 = icmp eq i32 %bf.clear, 7, !dbg !3957
  br i1 %cmp3, label %if.end, label %lor.lhs.false4, !dbg !3957

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %cmp7 = icmp eq i32 %bf.clear, 9, !dbg !3957
  br i1 %cmp7, label %if.end, label %lor.lhs.false8, !dbg !3957

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %cmp11 = icmp eq i32 %bf.clear, 10, !dbg !3957
  br i1 %cmp11, label %if.end, label %cleanup.cont, !dbg !3959

if.end:                                           ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !3960
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 1, i64 6, !dbg !3960
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3960
  %tobool = icmp eq %struct.dataflow* %2, null, !dbg !3960
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !3960

cond.true:                                        ; preds = %if.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 3935, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3960
  br label %cond.end, !dbg !3960

cond.end:                                         ; preds = %if.end, %cond.true
  tail call void @df_simulate_find_defs(%struct.rtx_def* %insn, %struct.bitmap_head_def* %live) #7, !dbg !3961
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !3962
  %3 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !3962
  br label %for.cond, !dbg !3963

for.cond:                                         ; preds = %for.inc, %cond.end
  %link.0.in.in = phi %union.rtunion_def* [ %3, %cond.end ], [ %8, %for.inc ]
  %link.0.in = bitcast %union.rtunion_def* %link.0.in.in to %struct.rtx_def**, !dbg !3964
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !3964
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !3945, metadata !DIExpression()), !dbg !3956
  %tobool13 = icmp eq %struct.rtx_def* %link.0, null, !dbg !3965
  br i1 %tobool13, label %for.end, label %for.body, !dbg !3965

for.body:                                         ; preds = %for.cond
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 0, !dbg !3966
  %bf.load14 = load i32, i32* %4, align 8, !dbg !3966
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !3966
  %trunc = trunc i32 %bf.lshr to i8, !dbg !3967
  switch i8 %trunc, label %for.inc [
    i8 1, label %sw.bb
    i8 6, label %sw.bb
  ], !dbg !3967

sw.bb:                                            ; preds = %for.body, %for.body
  %arrayidx18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3968
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !3968
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !3968
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !3946, metadata !DIExpression()), !dbg !3969
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !3970
  call void @llvm.dbg.value(metadata i32 %call, metadata !3952, metadata !DIExpression()), !dbg !3969
  %cmp20 = icmp slt i32 %call, 53, !dbg !3971
  br i1 %cmp20, label %if.then21, label %if.else, !dbg !3972

if.then21:                                        ; preds = %sw.bb
  %idxprom = sext i32 %call to i64, !dbg !3973
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i64 0, i32 0, !dbg !3974
  %bf.load23 = load i32, i32* %6, align 8, !dbg !3974
  %bf.lshr24 = lshr i32 %bf.load23, 16, !dbg !3974
  %bf.clear25 = and i32 %bf.lshr24, 255, !dbg !3974
  %idxprom26 = zext i32 %bf.clear25 to i64, !dbg !3973
  %arrayidx27 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom26, !dbg !3973
  %7 = load i8, i8* %arrayidx27, align 1, !dbg !3973
  %conv = zext i8 %7 to i32, !dbg !3973
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3953, metadata !DIExpression()), !dbg !3975
  br label %while.cond, !dbg !3976

while.cond:                                       ; preds = %while.body, %if.then21
  %n.0 = phi i32 [ %conv, %if.then21 ], [ %dec, %while.body ], !dbg !3975
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !3953, metadata !DIExpression()), !dbg !3975
  %dec = add nsw i32 %n.0, -1, !dbg !3977
  call void @llvm.dbg.value(metadata i32 %dec, metadata !3953, metadata !DIExpression()), !dbg !3975
  %cmp28 = icmp sgt i32 %n.0, 0, !dbg !3978
  br i1 %cmp28, label %while.body, label %for.inc.loopexit, !dbg !3976

while.body:                                       ; preds = %while.cond
  %add = add nsw i32 %call, %dec, !dbg !3979
  %call30 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live, i32 %add) #6, !dbg !3980
  br label %while.cond, !dbg !3976, !llvm.loop !3981

if.else:                                          ; preds = %sw.bb
  %call31 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live, i32 %call) #6, !dbg !3983
  br label %for.inc

for.inc.loopexit:                                 ; preds = %while.cond
  br label %for.inc, !dbg !3984

for.inc:                                          ; preds = %for.inc.loopexit, %if.else, %for.body
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3984
  br label %for.cond, !dbg !3985, !llvm.loop !3986

for.end:                                          ; preds = %for.cond
  tail call fastcc void @df_simulate_fixup_sets(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %live) #7, !dbg !3988
  br label %cleanup.cont, !dbg !3989

cleanup.cont:                                     ; preds = %for.end, %lor.lhs.false8
  ret void, !dbg !3989
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !3990 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !3997, metadata !DIExpression()), !dbg !3998
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3999
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !3999
  %0 = load i32, i32* %rt_uint, align 8, !dbg !3999
  ret i32 %0, !dbg !4000
}

; Function Attrs: nounwind uwtable
define dso_local void @df_md_simulate_artificial_defs_at_top(%struct.basic_block_def* %bb, %struct.bitmap_head_def* %local_md) local_unnamed_addr #4 !dbg !4001 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4003, metadata !DIExpression()), !dbg !4014
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %local_md, metadata !4004, metadata !DIExpression()), !dbg !4014
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4015
  %0 = load i32, i32* %index, align 8, !dbg !4015
  call void @llvm.dbg.value(metadata i32 %0, metadata !4005, metadata !DIExpression()), !dbg !4014
  %call = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %0) #7, !dbg !4016
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call, metadata !4006, metadata !DIExpression()), !dbg !4014
  br label %for.cond, !dbg !4017

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %call, %entry ], [ %incdec.ptr, %for.inc ], !dbg !4018
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !4006, metadata !DIExpression()), !dbg !4014
  %1 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !4019
  %tobool = icmp eq %union.df_ref_d* %1, null, !dbg !4020
  br i1 %tobool, label %for.end, label %for.body, !dbg !4020

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %1, metadata !4007, metadata !DIExpression()), !dbg !4021
  %2 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !4022
  %bf.load = load i32, i32* %2, align 8, !dbg !4022
  %and = and i32 %bf.load, 131072, !dbg !4023
  %tobool1 = icmp eq i32 %and, 0, !dbg !4023
  br i1 %tobool1, label %for.inc, label %if.then, !dbg !4024

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !4025
  %3 = load i32, i32* %regno, align 8, !dbg !4025
  call void @llvm.dbg.value(metadata i32 %3, metadata !4011, metadata !DIExpression()), !dbg !4026
  %and6 = and i32 %bf.load, 5308416, !dbg !4027
  %tobool7 = icmp eq i32 %and6, 0, !dbg !4027
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !4029

if.then8:                                         ; preds = %if.then
  %call9 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %local_md, i32 %3) #6, !dbg !4030
  br label %for.inc, !dbg !4030

if.else:                                          ; preds = %if.then
  %call10 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %local_md, i32 %3) #6, !dbg !4031
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else, %if.then8
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !4032
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !4006, metadata !DIExpression()), !dbg !4014
  br label %for.cond, !dbg !4033, !llvm.loop !4034

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4036
}

; Function Attrs: nounwind uwtable
define dso_local void @df_md_simulate_one_insn(%struct.basic_block_def* %bb, %struct.rtx_def* %insn, %struct.bitmap_head_def* %local_md) local_unnamed_addr #4 !dbg !4037 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4039, metadata !DIExpression()), !dbg !4049
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4040, metadata !DIExpression()), !dbg !4049
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %local_md, metadata !4041, metadata !DIExpression()), !dbg !4049
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4050
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4050
  %0 = load i32, i32* %rt_int, align 8, !dbg !4050
  call void @llvm.dbg.value(metadata i32 %0, metadata !4042, metadata !DIExpression()), !dbg !4049
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !4051
  %insns = getelementptr inbounds %struct.df, %struct.df* %1, i64 0, i32 10, !dbg !4051
  %2 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4051
  %idxprom = zext i32 %0 to i64, !dbg !4051
  %arrayidx1 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %2, i64 %idxprom, !dbg !4051
  %3 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx1, align 8, !dbg !4051
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %3, i64 0, i32 1, !dbg !4051
  %4 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !4051
  call void @llvm.dbg.value(metadata %union.df_ref_d** %4, metadata !4043, metadata !DIExpression()), !dbg !4049
  br label %for.cond, !dbg !4052

for.cond:                                         ; preds = %for.inc, %entry
  %def_rec.0 = phi %union.df_ref_d** [ %4, %entry ], [ %incdec.ptr, %for.inc ], !dbg !4053
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !4043, metadata !DIExpression()), !dbg !4049
  %5 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !4054
  %tobool = icmp eq %union.df_ref_d* %5, null, !dbg !4055
  br i1 %tobool, label %for.end, label %for.body, !dbg !4055

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %5, metadata !4044, metadata !DIExpression()), !dbg !4056
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !4057
  %6 = load i32, i32* %regno, align 8, !dbg !4057
  call void @llvm.dbg.value(metadata i32 %6, metadata !4048, metadata !DIExpression()), !dbg !4056
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !4058
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 27, !dbg !4060
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !4060
  %8 = and i8 %bf.load, 2, !dbg !4061
  %tobool2 = icmp eq i8 %8, 0, !dbg !4061
  %cmp = icmp ugt i32 %6, 52, !dbg !4062
  %or.cond = or i1 %tobool2, %cmp, !dbg !4063
  br i1 %or.cond, label %if.then, label %for.inc, !dbg !4063

if.then:                                          ; preds = %for.body
  %9 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !4064
  %bf.load4 = load i32, i32* %9, align 8, !dbg !4064
  %and5 = and i32 %bf.load4, 5308416, !dbg !4067
  %tobool6 = icmp eq i32 %and5, 0, !dbg !4067
  %id = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 7, !dbg !4068
  %10 = load i32, i32* %id, align 4, !dbg !4068
  br i1 %tobool6, label %if.else, label %if.then7, !dbg !4069

if.then7:                                         ; preds = %if.then
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %local_md, i32 %10) #6, !dbg !4070
  br label %for.inc, !dbg !4070

if.else:                                          ; preds = %if.then
  %call11 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %local_md, i32 %10) #6, !dbg !4071
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.else, %if.then7
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !4072
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !4043, metadata !DIExpression()), !dbg !4049
  br label %for.cond, !dbg !4073, !llvm.loop !4074

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4076
}

; Function Attrs: nounwind uwtable
define dso_local void @df_md_add_problem() local_unnamed_addr #4 !dbg !4077 {
entry:
  tail call void @df_add_problem(%struct.df_problem* nonnull @problem_MD) #6, !dbg !4078
  ret void, !dbg !4079
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4080 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4085
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4085
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4085

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4085
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4085
  br label %cond.end, !dbg !4085

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4085
  %call2 = tail call fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond) #7, !dbg !4085
  %cmp = icmp eq i32 %call2, %i.coerce0, !dbg !4086
  %conv3 = zext i1 %cmp to i8, !dbg !4087
  ret i8 %conv3, !dbg !4088
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4089 {
entry:
  %call = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4094
  %tobool = icmp eq %struct.VEC_edge_gc* %call, null, !dbg !4094
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4094

cond.true:                                        ; preds = %entry
  %call1 = tail call fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #7, !dbg !4094
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i64 0, i32 0, !dbg !4094
  br label %cond.end, !dbg !4094

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4094
  %call2 = tail call fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %i.coerce0) #7, !dbg !4094
  ret %struct.edge_def* %call2, !dbg !4095
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) unnamed_addr #0 !dbg !4096 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4102, metadata !DIExpression()), !dbg !4103
  %tobool = icmp eq %struct.VEC_edge_base* %vec_, null, !dbg !4104
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4104

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 0, !dbg !4104
  %0 = load i32, i32* %num, align 8, !dbg !4104
  br label %cond.end, !dbg !4104

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !4104
  ret i32 %cond, !dbg !4104
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) unnamed_addr #0 !dbg !4105 {
entry:
  %tobool = icmp eq %struct.VEC_edge_gc** %i.coerce1, null, !dbg !4110
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4110

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4110
  br label %cond.end, !dbg !4110

cond.end:                                         ; preds = %entry, %cond.true
  %0 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %i.coerce1, align 8, !dbg !4111
  ret %struct.VEC_edge_gc* %0, !dbg !4112
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4113 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_edge_base* %vec_, metadata !4117, metadata !DIExpression()), !dbg !4119
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4118, metadata !DIExpression()), !dbg !4119
  br label %land.end, !dbg !4120

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4120
  %arrayidx = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4120
  %0 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !4120
  ret %struct.edge_def* %0, !dbg !4120
}

; Function Attrs: nounwind uwtable
define internal void @df_rd_alloc(%struct.bitmap_head_def* %all_blocks) #4 !dbg !4121 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !4123, metadata !DIExpression()), !dbg !4138
  %0 = bitcast i32* %bb_index to i8*, !dbg !4139
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4139
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4140
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4140
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !4141
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 3, !dbg !4141
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4141
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 3, !dbg !4143
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !4143
  %tobool = icmp eq %struct.alloc_pool_def* %4, null, !dbg !4141
  br i1 %tobool, label %if.then, label %if.end, !dbg !4144

if.then:                                          ; preds = %entry
  %call = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.12, i64 0, i64 0), i64 40, i64 50) #6, !dbg !4145
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !4146
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 1, i64 3, !dbg !4146
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !4146
  %block_pool3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i64 0, i32 3, !dbg !4147
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool3, align 8, !dbg !4148
  %.pre = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !4149
  br label %if.end, !dbg !4146

if.end:                                           ; preds = %entry, %if.then
  %7 = phi %struct.dataflow* [ %3, %entry ], [ %.pre, %if.then ], !dbg !4149
  %problem_data6 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %7, i64 0, i32 5, !dbg !4151
  %8 = load i8*, i8** %problem_data6, align 8, !dbg !4151
  %tobool7 = icmp eq i8* %8, null, !dbg !4149
  br i1 %tobool7, label %if.else, label %if.then8, !dbg !4152

if.then8:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %8, metadata !4133, metadata !DIExpression()), !dbg !4138
  %sparse_invalidated_by_call = bitcast i8* %8 to %struct.bitmap_head_def**, !dbg !4153
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated_by_call, align 8, !dbg !4153
  tail call void @bitmap_clear(%struct.bitmap_head_def* %9) #6, !dbg !4155
  %dense_invalidated_by_call = getelementptr inbounds i8, i8* %8, i64 8, !dbg !4156
  %10 = bitcast i8* %dense_invalidated_by_call to %struct.bitmap_head_def**, !dbg !4156
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %10, align 8, !dbg !4156
  tail call void @bitmap_clear(%struct.bitmap_head_def* %11) #6, !dbg !4157
  br label %if.end22, !dbg !4158

if.else:                                          ; preds = %if.end
  %call12 = tail call i8* @xmalloc(i64 120) #6, !dbg !4159
  call void @llvm.dbg.value(metadata i8* %call12, metadata !4133, metadata !DIExpression()), !dbg !4138
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !4161
  %arrayidx14 = getelementptr inbounds %struct.df, %struct.df* %12, i64 0, i32 1, i64 3, !dbg !4161
  %13 = load %struct.dataflow*, %struct.dataflow** %arrayidx14, align 8, !dbg !4161
  %problem_data15 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %13, i64 0, i32 5, !dbg !4162
  store i8* %call12, i8** %problem_data15, align 8, !dbg !4163
  %rd_bitmaps = getelementptr inbounds i8, i8* %call12, i64 16, !dbg !4164
  %14 = bitcast i8* %rd_bitmaps to %struct.bitmap_obstack*, !dbg !4164
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull %14) #6, !dbg !4165
  %call17 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %14) #6, !dbg !4166
  %sparse_invalidated_by_call18 = bitcast i8* %call12 to %struct.bitmap_head_def**, !dbg !4167
  store %struct.bitmap_head_def* %call17, %struct.bitmap_head_def** %sparse_invalidated_by_call18, align 8, !dbg !4168
  %call20 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %14) #6, !dbg !4169
  %dense_invalidated_by_call21 = getelementptr inbounds i8, i8* %call12, i64 8, !dbg !4170
  %15 = bitcast i8* %dense_invalidated_by_call21 to %struct.bitmap_head_def**, !dbg !4170
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %15, align 8, !dbg !4171
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then8
  %problem_data.0.in = phi i8* [ %8, %if.then8 ], [ %call12, %if.else ]
  call void @llvm.dbg.value(metadata i8* %problem_data.0.in, metadata !4133, metadata !DIExpression()), !dbg !4138
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !4172
  %arrayidx24 = getelementptr inbounds %struct.df, %struct.df* %16, i64 0, i32 1, i64 3, !dbg !4172
  %17 = load %struct.dataflow*, %struct.dataflow** %arrayidx24, align 8, !dbg !4172
  tail call void @df_grow_bb_info(%struct.dataflow* %17) #7, !dbg !4173
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4124, metadata !DIExpression(DW_OP_deref)), !dbg !4138
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4125, metadata !DIExpression(DW_OP_deref)), !dbg !4138
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !4174
  %rd_bitmaps35 = getelementptr inbounds i8, i8* %problem_data.0.in, i64 16, !dbg !4175
  %18 = bitcast i8* %rd_bitmaps35 to %struct.bitmap_obstack*, !dbg !4175
  br label %for.cond, !dbg !4174

for.cond:                                         ; preds = %for.inc, %if.end22
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4124, metadata !DIExpression(DW_OP_deref)), !dbg !4138
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4125, metadata !DIExpression(DW_OP_deref)), !dbg !4138
  %call25 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4178
  %tobool26 = icmp eq i8 %call25, 0, !dbg !4174
  br i1 %tobool26, label %for.end, label %for.body, !dbg !4174

for.body:                                         ; preds = %for.cond
  %19 = load i32, i32* %bb_index, align 4, !dbg !4179
  call void @llvm.dbg.value(metadata i32 %19, metadata !4124, metadata !DIExpression()), !dbg !4138
  %call27 = call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %19) #7, !dbg !4180
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %call27, metadata !4134, metadata !DIExpression()), !dbg !4181
  %tobool28 = icmp eq %struct.df_rd_bb_info* %call27, null, !dbg !4182
  br i1 %tobool28, label %if.else30, label %if.then29, !dbg !4183

if.then29:                                        ; preds = %for.body
  %kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call27, i64 0, i32 0, !dbg !4184
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4184
  call void @bitmap_clear(%struct.bitmap_head_def* %20) #6, !dbg !4186
  %sparse_kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call27, i64 0, i32 1, !dbg !4187
  %21 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_kill, align 8, !dbg !4187
  call void @bitmap_clear(%struct.bitmap_head_def* %21) #6, !dbg !4188
  %gen = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call27, i64 0, i32 2, !dbg !4189
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4189
  call void @bitmap_clear(%struct.bitmap_head_def* %22) #6, !dbg !4190
  br label %for.inc, !dbg !4191

if.else30:                                        ; preds = %for.body
  %23 = load %struct.df*, %struct.df** @df, align 8, !dbg !4192
  %arrayidx32 = getelementptr inbounds %struct.df, %struct.df* %23, i64 0, i32 1, i64 3, !dbg !4192
  %24 = load %struct.dataflow*, %struct.dataflow** %arrayidx32, align 8, !dbg !4192
  %block_pool33 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %24, i64 0, i32 3, !dbg !4193
  %25 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool33, align 8, !dbg !4193
  %call34 = call i8* @pool_alloc(%struct.alloc_pool_def* %25) #6, !dbg !4194
  %26 = bitcast i8* %call34 to %struct.df_rd_bb_info*, !dbg !4195
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %26, metadata !4134, metadata !DIExpression()), !dbg !4181
  %27 = load i32, i32* %bb_index, align 4, !dbg !4196
  call void @llvm.dbg.value(metadata i32 %27, metadata !4124, metadata !DIExpression()), !dbg !4138
  call fastcc void @df_rd_set_bb_info(i32 %27, %struct.df_rd_bb_info* %26) #7, !dbg !4197
  %call36 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %18) #6, !dbg !4198
  %kill37 = bitcast i8* %call34 to %struct.bitmap_head_def**, !dbg !4199
  store %struct.bitmap_head_def* %call36, %struct.bitmap_head_def** %kill37, align 8, !dbg !4200
  %call39 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %18) #6, !dbg !4201
  %sparse_kill40 = getelementptr inbounds i8, i8* %call34, i64 8, !dbg !4202
  %28 = bitcast i8* %sparse_kill40 to %struct.bitmap_head_def**, !dbg !4202
  store %struct.bitmap_head_def* %call39, %struct.bitmap_head_def** %28, align 8, !dbg !4203
  %call42 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %18) #6, !dbg !4204
  %gen43 = getelementptr inbounds i8, i8* %call34, i64 16, !dbg !4205
  %29 = bitcast i8* %gen43 to %struct.bitmap_head_def**, !dbg !4205
  store %struct.bitmap_head_def* %call42, %struct.bitmap_head_def** %29, align 8, !dbg !4206
  %call45 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %18) #6, !dbg !4207
  %in = getelementptr inbounds i8, i8* %call34, i64 24, !dbg !4208
  %30 = bitcast i8* %in to %struct.bitmap_head_def**, !dbg !4208
  store %struct.bitmap_head_def* %call45, %struct.bitmap_head_def** %30, align 8, !dbg !4209
  %call47 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %18) #6, !dbg !4210
  %out = getelementptr inbounds i8, i8* %call34, i64 32, !dbg !4211
  %31 = bitcast i8* %out to %struct.bitmap_head_def**, !dbg !4211
  store %struct.bitmap_head_def* %call47, %struct.bitmap_head_def** %31, align 8, !dbg !4212
  br label %for.inc

for.inc:                                          ; preds = %if.then29, %if.else30
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4124, metadata !DIExpression(DW_OP_deref)), !dbg !4138
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4125, metadata !DIExpression(DW_OP_deref)), !dbg !4138
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4178
  br label %for.cond, !dbg !4178, !llvm.loop !4213

for.end:                                          ; preds = %for.cond
  %32 = load %struct.df*, %struct.df** @df, align 8, !dbg !4215
  %arrayidx50 = getelementptr inbounds %struct.df, %struct.df* %32, i64 0, i32 1, i64 3, !dbg !4215
  %33 = load %struct.dataflow*, %struct.dataflow** %arrayidx50, align 8, !dbg !4215
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %33, i64 0, i32 9, !dbg !4216
  store i8 1, i8* %optional_p, align 2, !dbg !4217
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4218
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4218
  ret void, !dbg !4218
}

; Function Attrs: nounwind uwtable
define internal void @df_rd_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #4 !dbg !4219 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4221, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !4222, metadata !DIExpression()), !dbg !4224
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !4223, metadata !DIExpression()), !dbg !4224
  %tobool = icmp eq i8* %vbb_info, null, !dbg !4225
  br i1 %tobool, label %if.end, label %if.then, !dbg !4227

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !4223, metadata !DIExpression()), !dbg !4224
  %kill = bitcast i8* %vbb_info to %struct.bitmap_head_def**, !dbg !4228
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4228
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %0) #6, !dbg !4228
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill, align 8, !dbg !4228
  %sparse_kill = getelementptr inbounds i8, i8* %vbb_info, i64 8, !dbg !4230
  %1 = bitcast i8* %sparse_kill to %struct.bitmap_head_def**, !dbg !4230
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %1, align 8, !dbg !4230
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !4230
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %1, align 8, !dbg !4230
  %gen = getelementptr inbounds i8, i8* %vbb_info, i64 16, !dbg !4231
  %3 = bitcast i8* %gen to %struct.bitmap_head_def**, !dbg !4231
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, align 8, !dbg !4231
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !4231
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %3, align 8, !dbg !4231
  %in = getelementptr inbounds i8, i8* %vbb_info, i64 24, !dbg !4232
  %5 = bitcast i8* %in to %struct.bitmap_head_def**, !dbg !4232
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %5, align 8, !dbg !4232
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !4232
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %5, align 8, !dbg !4232
  %out = getelementptr inbounds i8, i8* %vbb_info, i64 32, !dbg !4233
  %7 = bitcast i8* %out to %struct.bitmap_head_def**, !dbg !4233
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, align 8, !dbg !4233
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %8) #6, !dbg !4233
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %7, align 8, !dbg !4233
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !4234
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %9, i64 0, i32 1, i64 3, !dbg !4234
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4234
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i64 0, i32 3, !dbg !4235
  %11 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !4235
  tail call void @pool_free(%struct.alloc_pool_def* %11, i8* nonnull %vbb_info) #6, !dbg !4236
  br label %if.end, !dbg !4237

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4238
}

; Function Attrs: nounwind uwtable
define internal void @df_rd_local_compute(%struct.bitmap_head_def* %all_blocks) #4 !dbg !4239 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %regno = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !4241, metadata !DIExpression()), !dbg !4248
  %0 = bitcast i32* %bb_index to i8*, !dbg !4249
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4249
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4250
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4250
  %2 = bitcast i32* %regno to i8*, !dbg !4251
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4251
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !4252
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 3, !dbg !4252
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4252
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 5, !dbg !4253
  %5 = bitcast i8** %problem_data1 to %struct.df_rd_problem_data**, !dbg !4253
  %6 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %5, align 8, !dbg !4253
  call void @llvm.dbg.value(metadata %struct.df_rd_problem_data* %6, metadata !4245, metadata !DIExpression()), !dbg !4248
  %sparse_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %6, i64 0, i32 0, !dbg !4254
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated_by_call, align 8, !dbg !4254
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %7, metadata !4246, metadata !DIExpression()), !dbg !4248
  %dense_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %6, i64 0, i32 1, !dbg !4255
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dense_invalidated_by_call, align 8, !dbg !4255
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %8, metadata !4247, metadata !DIExpression()), !dbg !4248
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @df_bitmap_obstack) #6, !dbg !4256
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4257
  %call2 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @df_bitmap_obstack) #6, !dbg !4258
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4259
  tail call void @df_maybe_reorganize_def_refs(i32 3) #6, !dbg !4260
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4242, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4243, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !4261
  br label %for.cond, !dbg !4261

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4242, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4243, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  %call3 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4263
  %tobool = icmp eq i8 %call3, 0, !dbg !4261
  br i1 %tobool, label %for.end, label %for.body, !dbg !4261

for.body:                                         ; preds = %for.cond
  %9 = load i32, i32* %bb_index, align 4, !dbg !4265
  call void @llvm.dbg.value(metadata i32 %9, metadata !4242, metadata !DIExpression()), !dbg !4248
  call fastcc void @df_rd_bb_local_compute(i32 %9) #7, !dbg !4267
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4242, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4243, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4263
  br label %for.cond, !dbg !4263, !llvm.loop !4268

for.end:                                          ; preds = %for.cond
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !4270
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4243, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call void @llvm.dbg.value(metadata i32* %regno, metadata !4244, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %10, i32 0, i32* nonnull %regno) #7, !dbg !4270
  br label %for.cond4, !dbg !4270

for.cond4:                                        ; preds = %for.inc17, %for.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4243, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call void @llvm.dbg.value(metadata i32* %regno, metadata !4244, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  %call5 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %regno) #7, !dbg !4272
  %tobool6 = icmp eq i8 %call5, 0, !dbg !4270
  br i1 %tobool6, label %for.end18, label %for.body7, !dbg !4270

for.body7:                                        ; preds = %for.cond4
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !4274
  %count = getelementptr inbounds %struct.df, %struct.df* %11, i64 0, i32 3, i32 2, !dbg !4274
  %12 = load i32*, i32** %count, align 8, !dbg !4274
  %13 = load i32, i32* %regno, align 4, !dbg !4274
  call void @llvm.dbg.value(metadata i32 %13, metadata !4244, metadata !DIExpression()), !dbg !4248
  %idxprom = zext i32 %13 to i64, !dbg !4274
  %arrayidx8 = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !4274
  %14 = load i32, i32* %arrayidx8, align 4, !dbg !4274
  %cmp = icmp ugt i32 %14, 32, !dbg !4277
  br i1 %cmp, label %if.then, label %if.else, !dbg !4278

if.then:                                          ; preds = %for.body7
  call void @llvm.dbg.value(metadata i32 %13, metadata !4244, metadata !DIExpression()), !dbg !4248
  %call9 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %7, i32 %13) #6, !dbg !4279
  br label %for.inc17, !dbg !4279

if.else:                                          ; preds = %for.body7
  %begin = getelementptr inbounds %struct.df, %struct.df* %11, i64 0, i32 3, i32 1, !dbg !4280
  %15 = load i32*, i32** %begin, align 8, !dbg !4280
  call void @llvm.dbg.value(metadata i32 %13, metadata !4244, metadata !DIExpression()), !dbg !4248
  %arrayidx12 = getelementptr inbounds i32, i32* %15, i64 %idxprom, !dbg !4280
  %16 = load i32, i32* %arrayidx12, align 4, !dbg !4280
  call void @llvm.dbg.value(metadata i32 %13, metadata !4244, metadata !DIExpression()), !dbg !4248
  call void @bitmap_set_range(%struct.bitmap_head_def* %8, i32 %16, i32 %14) #6, !dbg !4281
  br label %for.inc17

for.inc17:                                        ; preds = %if.then, %if.else
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4243, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call void @llvm.dbg.value(metadata i32* %regno, metadata !4244, metadata !DIExpression(DW_OP_deref)), !dbg !4248
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %regno) #7, !dbg !4272
  br label %for.cond4, !dbg !4272, !llvm.loop !4282

for.end18:                                        ; preds = %for.cond4
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4284
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %17) #6, !dbg !4284
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4284
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4285
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %18) #6, !dbg !4285
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4285
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %2) #8, !dbg !4286
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4286
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4286
  ret void, !dbg !4286
}

; Function Attrs: nounwind uwtable
define internal void @df_rd_init_solution(%struct.bitmap_head_def* %all_blocks) #4 !dbg !4287 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !4289, metadata !DIExpression()), !dbg !4296
  %0 = bitcast i32* %bb_index to i8*, !dbg !4297
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4297
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4298
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4298
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4290, metadata !DIExpression(DW_OP_deref)), !dbg !4296
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4291, metadata !DIExpression(DW_OP_deref)), !dbg !4296
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !4299
  br label %for.cond, !dbg !4299

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4290, metadata !DIExpression(DW_OP_deref)), !dbg !4296
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4291, metadata !DIExpression(DW_OP_deref)), !dbg !4296
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4300
  %tobool = icmp eq i8 %call, 0, !dbg !4299
  br i1 %tobool, label %for.end, label %for.body, !dbg !4299

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !4301
  call void @llvm.dbg.value(metadata i32 %2, metadata !4290, metadata !DIExpression()), !dbg !4296
  %call1 = call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %2) #7, !dbg !4302
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %call1, metadata !4292, metadata !DIExpression()), !dbg !4303
  %out = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call1, i64 0, i32 4, !dbg !4304
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4304
  %gen = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call1, i64 0, i32 2, !dbg !4305
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4305
  call void @bitmap_copy(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %4) #6, !dbg !4306
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call1, i64 0, i32 3, !dbg !4307
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4307
  call void @bitmap_clear(%struct.bitmap_head_def* %5) #6, !dbg !4308
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4290, metadata !DIExpression(DW_OP_deref)), !dbg !4296
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4291, metadata !DIExpression(DW_OP_deref)), !dbg !4296
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4300
  br label %for.cond, !dbg !4300, !llvm.loop !4309

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4311
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4311
  ret void, !dbg !4311
}

declare dso_local void @df_worklist_dataflow(%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32) #1

; Function Attrs: nounwind uwtable
define internal void @df_rd_confluence_n(%struct.edge_def* %e) #4 !dbg !4312 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %regno = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !4314, metadata !DIExpression()), !dbg !4325
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !4326
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4326
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !4327
  %1 = load i32, i32* %index, align 8, !dbg !4327
  %call = tail call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %1) #7, !dbg !4328
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 3, !dbg !4329
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4329
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !4315, metadata !DIExpression()), !dbg !4325
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !4330
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4330
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !4331
  %4 = load i32, i32* %index1, align 8, !dbg !4331
  %call2 = tail call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %4) #7, !dbg !4332
  %out = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call2, i64 0, i32 4, !dbg !4333
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4333
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %5, metadata !4316, metadata !DIExpression()), !dbg !4325
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !4334
  %6 = load i32, i32* %flags, align 8, !dbg !4334
  %and = and i32 %6, 16, !dbg !4336
  %tobool = icmp eq i32 %and, 0, !dbg !4336
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !4337

if.end:                                           ; preds = %entry
  %and4 = and i32 %6, 8, !dbg !4338
  %tobool5 = icmp eq i32 %and4, 0, !dbg !4338
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !4339

if.then6:                                         ; preds = %if.end
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !4340
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 1, i64 3, !dbg !4340
  %8 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4340
  %problem_data7 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %8, i64 0, i32 5, !dbg !4341
  %9 = bitcast i8** %problem_data7 to %struct.df_rd_problem_data**, !dbg !4341
  %10 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %9, align 8, !dbg !4341
  call void @llvm.dbg.value(metadata %struct.df_rd_problem_data* %10, metadata !4317, metadata !DIExpression()), !dbg !4342
  %sparse_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %10, i64 0, i32 0, !dbg !4343
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated_by_call, align 8, !dbg !4343
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %11, metadata !4320, metadata !DIExpression()), !dbg !4342
  %dense_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %10, i64 0, i32 1, !dbg !4344
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dense_invalidated_by_call, align 8, !dbg !4344
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %12, metadata !4321, metadata !DIExpression()), !dbg !4342
  %13 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4345
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #8, !dbg !4345
  %14 = bitcast i32* %regno to i8*, !dbg !4346
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #8, !dbg !4346
  %call8 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @df_bitmap_obstack) #6, !dbg !4347
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call8, metadata !4324, metadata !DIExpression()), !dbg !4342
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call8, %struct.bitmap_head_def* %5) #6, !dbg !4348
  %call9 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %call8, %struct.bitmap_head_def* %12) #6, !dbg !4349
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4322, metadata !DIExpression(DW_OP_deref)), !dbg !4342
  call void @llvm.dbg.value(metadata i32* %regno, metadata !4323, metadata !DIExpression(DW_OP_deref)), !dbg !4342
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %11, i32 0, i32* nonnull %regno) #7, !dbg !4350
  br label %for.cond, !dbg !4350

for.cond:                                         ; preds = %for.body, %if.then6
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4322, metadata !DIExpression(DW_OP_deref)), !dbg !4342
  call void @llvm.dbg.value(metadata i32* %regno, metadata !4323, metadata !DIExpression(DW_OP_deref)), !dbg !4342
  %call10 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %regno) #7, !dbg !4352
  %tobool11 = icmp eq i8 %call10, 0, !dbg !4350
  br i1 %tobool11, label %for.end, label %for.body, !dbg !4350

for.body:                                         ; preds = %for.cond
  %15 = load %struct.df*, %struct.df** @df, align 8, !dbg !4354
  %begin = getelementptr inbounds %struct.df, %struct.df* %15, i64 0, i32 3, i32 1, !dbg !4354
  %16 = load i32*, i32** %begin, align 8, !dbg !4354
  %17 = load i32, i32* %regno, align 4, !dbg !4354
  call void @llvm.dbg.value(metadata i32 %17, metadata !4323, metadata !DIExpression()), !dbg !4342
  %idxprom = zext i32 %17 to i64, !dbg !4354
  %arrayidx12 = getelementptr inbounds i32, i32* %16, i64 %idxprom, !dbg !4354
  %18 = load i32, i32* %arrayidx12, align 4, !dbg !4354
  %count = getelementptr inbounds %struct.df, %struct.df* %15, i64 0, i32 3, i32 2, !dbg !4356
  %19 = load i32*, i32** %count, align 8, !dbg !4356
  call void @llvm.dbg.value(metadata i32 %17, metadata !4323, metadata !DIExpression()), !dbg !4342
  %arrayidx15 = getelementptr inbounds i32, i32* %19, i64 %idxprom, !dbg !4356
  %20 = load i32, i32* %arrayidx15, align 4, !dbg !4356
  call void @bitmap_clear_range(%struct.bitmap_head_def* %call8, i32 %18, i32 %20) #6, !dbg !4357
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4322, metadata !DIExpression(DW_OP_deref)), !dbg !4342
  call void @llvm.dbg.value(metadata i32* %regno, metadata !4323, metadata !DIExpression(DW_OP_deref)), !dbg !4342
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %regno) #7, !dbg !4352
  br label %for.cond, !dbg !4352, !llvm.loop !4358

for.end:                                          ; preds = %for.cond
  %call16 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %call8) #6, !dbg !4360
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call8) #6, !dbg !4361
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4324, metadata !DIExpression()), !dbg !4342
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #8, !dbg !4362
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #8, !dbg !4362
  br label %cleanup.cont, !dbg !4363

if.else:                                          ; preds = %if.end
  %call17 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %5) #6, !dbg !4364
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %entry, %if.else, %for.end
  ret void, !dbg !4365
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @df_rd_transfer_function(i32 %bb_index) #4 !dbg !4366 {
entry:
  %regno = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !4368, metadata !DIExpression()), !dbg !4382
  %call = tail call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %bb_index) #7, !dbg !4383
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %call, metadata !4369, metadata !DIExpression()), !dbg !4382
  %0 = bitcast i32* %regno to i8*, !dbg !4384
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4384
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4385
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4385
  %in1 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 3, !dbg !4386
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in1, align 8, !dbg !4386
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !4372, metadata !DIExpression()), !dbg !4382
  %out2 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 4, !dbg !4387
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out2, align 8, !dbg !4387
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %3, metadata !4373, metadata !DIExpression()), !dbg !4382
  %gen3 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 2, !dbg !4388
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen3, align 8, !dbg !4388
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %4, metadata !4374, metadata !DIExpression()), !dbg !4382
  %kill4 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 0, !dbg !4389
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill4, align 8, !dbg !4389
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %5, metadata !4375, metadata !DIExpression()), !dbg !4382
  %sparse_kill5 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 1, !dbg !4390
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_kill5, align 8, !dbg !4390
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !4376, metadata !DIExpression()), !dbg !4382
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %6, i64 0, i32 0, !dbg !4391
  %7 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !4391
  %tobool = icmp eq %struct.bitmap_element_def* %7, null, !dbg !4391
  br i1 %tobool, label %if.then, label %if.else, !dbg !4392

if.then:                                          ; preds = %entry
  %call6 = tail call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %4, %struct.bitmap_head_def* %2, %struct.bitmap_head_def* %5) #6, !dbg !4393
  br label %cleanup, !dbg !4394

if.else:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8 0, metadata !4380, metadata !DIExpression()), !dbg !4395
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !4396
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %8, i64 0, i32 1, i64 3, !dbg !4396
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4396
  %problem_data7 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i64 0, i32 5, !dbg !4397
  %10 = bitcast i8** %problem_data7 to %struct.df_rd_problem_data**, !dbg !4397
  %11 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %10, align 8, !dbg !4397
  call void @llvm.dbg.value(metadata %struct.df_rd_problem_data* %11, metadata !4377, metadata !DIExpression()), !dbg !4395
  %rd_bitmaps = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %11, i64 0, i32 2, !dbg !4398
  %call8 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %rd_bitmaps) #6, !dbg !4398
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call8, metadata !4381, metadata !DIExpression()), !dbg !4395
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call8, %struct.bitmap_head_def* %2) #6, !dbg !4399
  call void @llvm.dbg.value(metadata i32* %regno, metadata !4370, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4371, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %6, i32 0, i32* nonnull %regno) #7, !dbg !4400
  br label %for.cond, !dbg !4400

for.cond:                                         ; preds = %for.body, %if.else
  call void @llvm.dbg.value(metadata i32* %regno, metadata !4370, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4371, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  %call9 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %regno) #7, !dbg !4402
  %tobool10 = icmp eq i8 %call9, 0, !dbg !4400
  br i1 %tobool10, label %for.end, label %for.body, !dbg !4400

for.body:                                         ; preds = %for.cond
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !4404
  %begin = getelementptr inbounds %struct.df, %struct.df* %12, i64 0, i32 3, i32 1, !dbg !4404
  %13 = load i32*, i32** %begin, align 8, !dbg !4404
  %14 = load i32, i32* %regno, align 4, !dbg !4404
  call void @llvm.dbg.value(metadata i32 %14, metadata !4370, metadata !DIExpression()), !dbg !4382
  %idxprom = zext i32 %14 to i64, !dbg !4404
  %arrayidx11 = getelementptr inbounds i32, i32* %13, i64 %idxprom, !dbg !4404
  %15 = load i32, i32* %arrayidx11, align 4, !dbg !4404
  %count = getelementptr inbounds %struct.df, %struct.df* %12, i64 0, i32 3, i32 2, !dbg !4406
  %16 = load i32*, i32** %count, align 8, !dbg !4406
  call void @llvm.dbg.value(metadata i32 %14, metadata !4370, metadata !DIExpression()), !dbg !4382
  %arrayidx14 = getelementptr inbounds i32, i32* %16, i64 %idxprom, !dbg !4406
  %17 = load i32, i32* %arrayidx14, align 4, !dbg !4406
  call void @bitmap_clear_range(%struct.bitmap_head_def* %call8, i32 %15, i32 %17) #6, !dbg !4407
  call void @llvm.dbg.value(metadata i32* %regno, metadata !4370, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4371, metadata !DIExpression(DW_OP_deref)), !dbg !4382
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %regno) #7, !dbg !4402
  br label %for.cond, !dbg !4402, !llvm.loop !4408

for.end:                                          ; preds = %for.cond
  %call15 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %call8, %struct.bitmap_head_def* %5) #6, !dbg !4410
  %call16 = call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %call8, %struct.bitmap_head_def* %4) #6, !dbg !4411
  %call17 = call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %call8, %struct.bitmap_head_def* %3) #6, !dbg !4412
  %tobool18 = icmp eq i8 %call17, 0, !dbg !4413
  %conv = zext i1 %tobool18 to i8, !dbg !4413
  call void @llvm.dbg.value(metadata i8 %conv, metadata !4380, metadata !DIExpression()), !dbg !4395
  br i1 %tobool18, label %if.then20, label %if.else22, !dbg !4414

if.then20:                                        ; preds = %for.end
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %3) #6, !dbg !4415
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4373, metadata !DIExpression()), !dbg !4382
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** %out2, align 8, !dbg !4418
  br label %cleanup, !dbg !4419

if.else22:                                        ; preds = %for.end
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call8) #6, !dbg !4420
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4381, metadata !DIExpression()), !dbg !4395
  br label %cleanup

cleanup:                                          ; preds = %if.then20, %if.else22, %if.then
  %retval.0 = phi i8 [ %call6, %if.then ], [ %conv, %if.else22 ], [ %conv, %if.then20 ], !dbg !4421
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4422
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4422
  ret i8 %retval.0, !dbg !4422
}

; Function Attrs: nounwind uwtable
define internal void @df_rd_free() #4 !dbg !4423 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4426
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 3, !dbg !4426
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4426
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !4427
  %2 = bitcast i8** %problem_data1 to %struct.df_rd_problem_data**, !dbg !4427
  %3 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %2, align 8, !dbg !4427
  call void @llvm.dbg.value(metadata %struct.df_rd_problem_data* %3, metadata !4425, metadata !DIExpression()), !dbg !4428
  %tobool = icmp eq %struct.df_rd_problem_data* %3, null, !dbg !4429
  br i1 %tobool, label %if.end, label %if.then, !dbg !4431

if.then:                                          ; preds = %entry
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 3, !dbg !4432
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !4432
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %4) #6, !dbg !4434
  %rd_bitmaps = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %3, i64 0, i32 2, !dbg !4435
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull %rd_bitmaps) #6, !dbg !4436
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !4437
  %arrayidx5 = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 1, i64 3, !dbg !4437
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !4437
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i64 0, i32 2, !dbg !4438
  store i32 0, i32* %block_info_size, align 8, !dbg !4439
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx5, align 8, !dbg !4440
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %7, i64 0, i32 1, !dbg !4441
  %8 = bitcast i8*** %block_info to i8**, !dbg !4441
  %9 = load i8*, i8** %8, align 8, !dbg !4441
  tail call void @free(i8* %9) #6, !dbg !4442
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !4443
  %arrayidx9 = getelementptr inbounds %struct.df, %struct.df* %10, i64 0, i32 1, i64 3, !dbg !4443
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx9, align 8, !dbg !4443
  %problem_data10 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i64 0, i32 5, !dbg !4444
  %12 = load i8*, i8** %problem_data10, align 8, !dbg !4444
  tail call void @free(i8* %12) #6, !dbg !4445
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !4446
  br label %if.end, !dbg !4447

if.end:                                           ; preds = %entry, %if.then
  %13 = phi %struct.df* [ %0, %entry ], [ %.pre, %if.then ], !dbg !4446
  %arrayidx12 = getelementptr inbounds %struct.df, %struct.df* %13, i64 0, i32 1, i64 3, !dbg !4446
  %14 = bitcast %struct.dataflow** %arrayidx12 to i8**, !dbg !4446
  %15 = load i8*, i8** %14, align 8, !dbg !4446
  tail call void @free(i8* %15) #6, !dbg !4448
  ret void, !dbg !4449
}

; Function Attrs: nounwind uwtable
define internal void @df_rd_start_dump(%struct._IO_FILE* %file) #4 !dbg !4450 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !4452, metadata !DIExpression()), !dbg !4456
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4457
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 3, !dbg !4457
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4457
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !4458
  %2 = bitcast i8** %problem_data1 to %struct.df_rd_problem_data**, !dbg !4458
  %3 = load %struct.df_rd_problem_data*, %struct.df_rd_problem_data** %2, align 8, !dbg !4458
  call void @llvm.dbg.value(metadata %struct.df_rd_problem_data* %3, metadata !4453, metadata !DIExpression()), !dbg !4456
  call void @llvm.dbg.value(metadata i32 undef, metadata !4454, metadata !DIExpression()), !dbg !4456
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !4459
  %4 = load i8**, i8*** %block_info, align 8, !dbg !4459
  %tobool = icmp eq i8** %4, null, !dbg !4461
  br i1 %tobool, label %cleanup.cont, label %if.end, !dbg !4462

if.end:                                           ; preds = %entry
  %regs_inited = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 9, !dbg !4463
  %5 = load i32, i32* %regs_inited, align 4, !dbg !4463
  call void @llvm.dbg.value(metadata i32 %5, metadata !4454, metadata !DIExpression()), !dbg !4456
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.13, i64 0, i64 0)) #6, !dbg !4464
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0)) #6, !dbg !4465
  %sparse_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %3, i64 0, i32 0, !dbg !4466
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_invalidated_by_call, align 8, !dbg !4466
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4466
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #6, !dbg !4467
  %dense_invalidated_by_call = getelementptr inbounds %struct.df_rd_problem_data, %struct.df_rd_problem_data* %3, i64 0, i32 1, !dbg !4468
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %dense_invalidated_by_call, align 8, !dbg !4468
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4468
  call void @llvm.dbg.value(metadata i32 0, metadata !4455, metadata !DIExpression()), !dbg !4456
  %wide.trip.count = zext i32 %5 to i64, !dbg !4469
  br label %for.cond, !dbg !4472

for.cond:                                         ; preds = %for.inc, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %if.end ], !dbg !4473
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4455, metadata !DIExpression()), !dbg !4456
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !4469
  br i1 %exitcond, label %for.end, label %for.body, !dbg !4474

for.body:                                         ; preds = %for.cond
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !4475
  %count = getelementptr inbounds %struct.df, %struct.df* %8, i64 0, i32 3, i32 2, !dbg !4475
  %9 = load i32*, i32** %count, align 8, !dbg !4475
  %arrayidx6 = getelementptr inbounds i32, i32* %9, i64 %indvars.iv, !dbg !4475
  %10 = load i32, i32* %arrayidx6, align 4, !dbg !4475
  %tobool7 = icmp eq i32 %10, 0, !dbg !4475
  br i1 %tobool7, label %for.inc, label %if.then8, !dbg !4477

if.then8:                                         ; preds = %for.body
  %begin = getelementptr inbounds %struct.df, %struct.df* %8, i64 0, i32 3, i32 1, !dbg !4478
  %11 = load i32*, i32** %begin, align 8, !dbg !4478
  %arrayidx11 = getelementptr inbounds i32, i32* %11, i64 %indvars.iv, !dbg !4478
  %12 = load i32, i32* %arrayidx11, align 4, !dbg !4478
  %13 = trunc i64 %indvars.iv to i32, !dbg !4479
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i32 %13, i32 %12, i32 %10) #6, !dbg !4479
  br label %for.inc, !dbg !4479

for.inc:                                          ; preds = %for.body, %if.then8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4480
  br label %for.cond, !dbg !4481, !llvm.loop !4482

for.end:                                          ; preds = %for.cond
  %call18 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4484
  br label %cleanup.cont, !dbg !4485

cleanup.cont:                                     ; preds = %entry, %for.end
  ret void, !dbg !4485
}

; Function Attrs: nounwind uwtable
define internal void @df_rd_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !4486 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4488, metadata !DIExpression()), !dbg !4491
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !4489, metadata !DIExpression()), !dbg !4491
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4492
  %0 = load i32, i32* %index, align 8, !dbg !4492
  %call = tail call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %0) #7, !dbg !4493
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %call, metadata !4490, metadata !DIExpression()), !dbg !4491
  %tobool = icmp eq %struct.df_rd_bb_info* %call, null, !dbg !4494
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !4496

lor.lhs.false:                                    ; preds = %entry
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 3, !dbg !4497
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4497
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !4498
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !4499

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call i64 @bitmap_count_bits(%struct.bitmap_head_def* nonnull %1) #6, !dbg !4500
  %conv = trunc i64 %call3 to i32, !dbg !4501
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0), i32 %conv) #6, !dbg !4502
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4503
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4503
  %gen = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 2, !dbg !4504
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4504
  %call6 = tail call i64 @bitmap_count_bits(%struct.bitmap_head_def* %3) #6, !dbg !4505
  %conv7 = trunc i64 %call6 to i32, !dbg !4506
  %call8 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i32 %conv7) #6, !dbg !4507
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !4508
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4508
  %kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 0, !dbg !4509
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4509
  %call10 = tail call i64 @bitmap_count_bits(%struct.bitmap_head_def* %5) #6, !dbg !4510
  %conv11 = trunc i64 %call10 to i32, !dbg !4511
  %call12 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.20, i64 0, i64 0), i32 %conv11) #6, !dbg !4512
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4513
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4513
  br label %cleanup.cont, !dbg !4514

cleanup.cont:                                     ; preds = %lor.lhs.false, %entry, %if.end
  ret void, !dbg !4514
}

; Function Attrs: nounwind uwtable
define internal void @df_rd_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !4515 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4517, metadata !DIExpression()), !dbg !4520
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !4518, metadata !DIExpression()), !dbg !4520
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !4521
  %0 = load i32, i32* %index, align 8, !dbg !4521
  %call = tail call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %0) #7, !dbg !4522
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %call, metadata !4519, metadata !DIExpression()), !dbg !4520
  %tobool = icmp eq %struct.df_rd_bb_info* %call, null, !dbg !4523
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !4525

lor.lhs.false:                                    ; preds = %entry
  %out = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call, i64 0, i32 4, !dbg !4526
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4526
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !4527
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !4528

if.end:                                           ; preds = %lor.lhs.false
  %call3 = tail call i64 @bitmap_count_bits(%struct.bitmap_head_def* nonnull %1) #6, !dbg !4529
  %conv = trunc i64 %call3 to i32, !dbg !4530
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.21, i64 0, i64 0), i32 %conv) #6, !dbg !4531
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4532
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !4532
  br label %cleanup.cont, !dbg !4533

cleanup.cont:                                     ; preds = %lor.lhs.false, %entry, %if.end
  ret void, !dbg !4533
}

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) local_unnamed_addr #1

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #1

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !4534 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4542, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !4543, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i32 %start_bit, metadata !4544, metadata !DIExpression()), !dbg !4546
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4545, metadata !DIExpression()), !dbg !4546
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !4547
  %1 = load i64, i64* %0, align 8, !dbg !4547
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4548
  store i64 %1, i64* %2, align 8, !dbg !4548
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !4549
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !4550
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4551
  %div = lshr i32 %start_bit, 7, !dbg !4554
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !4556
  br label %while.body, !dbg !4556

while.body:                                       ; preds = %entry, %if.end5
  %4 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %5 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %6 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %.in = phi i64 [ %1, %entry ], [ %11, %if.end5 ]
  %7 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %8 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ], !dbg !4557
  %9 = inttoptr i64 %.in to i64*, !dbg !4556
  %tobool = icmp eq %struct.bitmap_element_def* %8, null, !dbg !4558
  br i1 %tobool, label %if.then, label %if.end, !dbg !4559

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !4560
  br label %while.end, !dbg !4562

if.end:                                           ; preds = %while.body
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %7, i64 0, i32 2, !dbg !4563
  %10 = load i32, i32* %indx, align 8, !dbg !4563
  %cmp = icmp ult i32 %10, %div, !dbg !4564
  br i1 %cmp, label %if.end5, label %while.end.loopexit, !dbg !4565

if.end5:                                          ; preds = %if.end
  %11 = load i64, i64* %9, align 8, !dbg !4566
  store i64 %11, i64* %2, align 8, !dbg !4567
  %12 = inttoptr i64 %11 to %struct.bitmap_element_def*, !dbg !4556
  br label %while.body, !dbg !4556, !llvm.loop !4568

while.end.loopexit:                               ; preds = %if.end
  %.lcssa11 = phi %struct.bitmap_element_def* [ %4, %if.end ]
  %.lcssa9 = phi %struct.bitmap_element_def* [ %5, %if.end ]
  %.lcssa7 = phi %struct.bitmap_element_def* [ %6, %if.end ]
  br label %while.end, !dbg !4570

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %13 = phi %struct.bitmap_element_def* [ %.lcssa11, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %14 = phi %struct.bitmap_element_def* [ %.lcssa9, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %15 = phi %struct.bitmap_element_def* [ %.lcssa7, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !4570
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !4572
  %16 = load i32, i32* %indx9, align 8, !dbg !4572
  %cmp11 = icmp eq i32 %16, %div, !dbg !4573
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !4574

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %14, i64 0, i32 2, !dbg !4575
  %17 = load i32, i32* %indx14, align 8, !dbg !4575
  %mul = shl i32 %17, 7, !dbg !4576
  call void @llvm.dbg.value(metadata i32 %mul, metadata !4544, metadata !DIExpression()), !dbg !4546
  br label %if.end15, !dbg !4577

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ %start_bit, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !4544, metadata !DIExpression()), !dbg !4546
  %div16 = lshr i32 %start_bit.addr.0, 6, !dbg !4578
  %rem = and i32 %div16, 1, !dbg !4579
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4580
  store i32 %rem, i32* %word_no, align 8, !dbg !4581
  %idxprom = zext i32 %rem to i64, !dbg !4582
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %13, i64 0, i32 3, i64 %idxprom, !dbg !4582
  %18 = load i64, i64* %arrayidx, align 8, !dbg !4582
  %rem20 = and i32 %start_bit.addr.0, 63, !dbg !4583
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4584
  %sh_prom = zext i32 %rem20 to i64, !dbg !4585
  %shr = lshr i64 %18, %sh_prom, !dbg !4585
  store i64 %shr, i64* %bits21, align 8, !dbg !4585
  %tobool23 = icmp eq i64 %shr, 0, !dbg !4586
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !4586
  %add = add i32 %start_bit.addr.0, %lnot.ext, !dbg !4587
  call void @llvm.dbg.value(metadata i32 %add, metadata !4544, metadata !DIExpression()), !dbg !4546
  store i32 %add, i32* %bit_no, align 4, !dbg !4588
  ret void, !dbg !4589
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4590 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4594, metadata !DIExpression()), !dbg !4599
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4595, metadata !DIExpression()), !dbg !4599
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4600
  %0 = load i64, i64* %bits, align 8, !dbg !4600
  %tobool = icmp eq i64 %0, 0, !dbg !4601
  br i1 %tobool, label %if.end, label %next_bit, !dbg !4602

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !4603
  br label %next_bit, !dbg !4606

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !4596), !dbg !4607
  br label %while.cond, !dbg !4606

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !4608
  %and = and i64 %2, 1, !dbg !4609
  %tobool2 = icmp eq i64 %and, 0, !dbg !4610
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !4606

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !4611
  store i64 %shr, i64* %bits, align 8, !dbg !4611
  %3 = load i32, i32* %bit_no, align 4, !dbg !4613
  %add = add i32 %3, 1, !dbg !4613
  store i32 %add, i32* %bit_no, align 4, !dbg !4613
  %.pre = load i64, i64* %bits, align 8, !dbg !4608
  br label %while.cond, !dbg !4606, !llvm.loop !4614

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !4616
  %sub = add i32 %4, 63, !dbg !4617
  %div = and i32 %sub, -64, !dbg !4618
  store i32 %div, i32* %bit_no, align 4, !dbg !4619
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !4620
  %5 = load i32, i32* %word_no, align 8, !dbg !4621
  %inc = add i32 %5, 1, !dbg !4621
  store i32 %inc, i32* %word_no, align 8, !dbg !4621
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !4622
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !4622
  br label %while.body6, !dbg !4623

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !4624

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !4625
  %cmp = icmp eq i32 %8, 2, !dbg !4626
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !4622
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !4624

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !4603
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !4603
  %10 = load i64, i64* %arrayidx, align 8, !dbg !4603
  store i64 %10, i64* %bits, align 8, !dbg !4627
  %tobool14 = icmp eq i64 %10, 0, !dbg !4628
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !4630

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !4631
  %add17 = add i32 %11, 64, !dbg !4631
  store i32 %add17, i32* %bit_no, align 4, !dbg !4631
  %12 = load i32, i32* %word_no, align 8, !dbg !4632
  %inc19 = add i32 %12, 1, !dbg !4632
  store i32 %inc19, i32* %word_no, align 8, !dbg !4632
  br label %while.cond7, !dbg !4624, !llvm.loop !4633

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !4622
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !4635
  %14 = load i64, i64* %13, align 8, !dbg !4635
  store i64 %14, i64* %6, align 8, !dbg !4636
  %tobool24 = icmp eq i64 %14, 0, !dbg !4637
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !4639

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !4639
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !4640
  %16 = load i32, i32* %indx, align 8, !dbg !4640
  %mul28 = shl i32 %16, 7, !dbg !4641
  store i32 %mul28, i32* %bit_no, align 4, !dbg !4642
  store i32 0, i32* %word_no, align 8, !dbg !4643
  br label %while.body6, !dbg !4623, !llvm.loop !4644

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !4646

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !4646

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !4599
  ret i8 %retval.0, !dbg !4646
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %index) unnamed_addr #0 !dbg !4647 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !4651, metadata !DIExpression()), !dbg !4652
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4653
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 3, !dbg !4653
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4653
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !4655
  %2 = load i32, i32* %block_info_size, align 8, !dbg !4655
  %cmp = icmp ugt i32 %2, %index, !dbg !4656
  br i1 %cmp, label %if.then, label %return, !dbg !4657

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !4658
  %3 = load i8**, i8*** %block_info, align 8, !dbg !4658
  %idxprom = zext i32 %index to i64, !dbg !4659
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !4659
  %4 = bitcast i8** %arrayidx3 to %struct.df_rd_bb_info**, !dbg !4659
  %5 = load %struct.df_rd_bb_info*, %struct.df_rd_bb_info** %4, align 8, !dbg !4659
  br label %return, !dbg !4660

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_rd_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !4661
  ret %struct.df_rd_bb_info* %retval.0, !dbg !4662
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_rd_set_bb_info(i32 %index, %struct.df_rd_bb_info* %bb_info) unnamed_addr #4 !dbg !4663 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !4667, metadata !DIExpression()), !dbg !4669
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %bb_info, metadata !4668, metadata !DIExpression()), !dbg !4669
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !4670
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 3, !dbg !4670
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4670
  %tobool = icmp eq %struct.dataflow* %1, null, !dbg !4670
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !4670

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4670
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !4671
  %arrayidx2.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 3, !dbg !4669
  %.pre1 = load %struct.dataflow*, %struct.dataflow** %arrayidx2.phi.trans.insert, align 8, !dbg !4671
  br label %cond.end, !dbg !4670

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.dataflow* [ %1, %entry ], [ %.pre1, %cond.true ], !dbg !4671
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i64 0, i32 2, !dbg !4671
  %3 = load i32, i32* %block_info_size, align 8, !dbg !4671
  %cmp = icmp ugt i32 %3, %index, !dbg !4671
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !4671

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4671
  %.pre2 = load %struct.df*, %struct.df** @df, align 8, !dbg !4672
  %arrayidx8.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre2, i64 0, i32 1, i64 3, !dbg !4669
  %.pre3 = load %struct.dataflow*, %struct.dataflow** %arrayidx8.phi.trans.insert, align 8, !dbg !4672
  br label %cond.end5, !dbg !4671

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %4 = phi %struct.dataflow* [ %2, %cond.end ], [ %.pre3, %cond.true3 ], !dbg !4672
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 1, !dbg !4673
  %5 = load i8**, i8*** %block_info, align 8, !dbg !4673
  %idxprom = zext i32 %index to i64, !dbg !4672
  %arrayidx9 = getelementptr inbounds i8*, i8** %5, i64 %idxprom, !dbg !4672
  %6 = bitcast i8** %arrayidx9 to %struct.df_rd_bb_info**, !dbg !4674
  store %struct.df_rd_bb_info* %bb_info, %struct.df_rd_bb_info** %6, align 8, !dbg !4674
  ret void, !dbg !4675
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !4676 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4680, metadata !DIExpression()), !dbg !4682
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !4681, metadata !DIExpression()), !dbg !4682
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !4683
  %0 = load i64, i64* %bits, align 8, !dbg !4684
  %shr = lshr i64 %0, 1, !dbg !4684
  store i64 %shr, i64* %bits, align 8, !dbg !4684
  %1 = load i32, i32* %bit_no, align 4, !dbg !4685
  %add = add i32 %1, 1, !dbg !4685
  store i32 %add, i32* %bit_no, align 4, !dbg !4685
  ret void, !dbg !4686
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #5

declare dso_local void @df_maybe_reorganize_def_refs(i32) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @df_rd_bb_local_compute(i32 %bb_index) unnamed_addr #4 !dbg !4687 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !4689, metadata !DIExpression()), !dbg !4697
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4698
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !4698
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4698
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !4698
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !4698
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !4698
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !4698

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !4698
  br label %cond.end, !dbg !4698

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !4698
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %bb_index) #7, !dbg !4698
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !4690, metadata !DIExpression()), !dbg !4697
  %call4 = tail call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %bb_index) #7, !dbg !4699
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %call4, metadata !4691, metadata !DIExpression()), !dbg !4697
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4700
  tail call void @bitmap_clear(%struct.bitmap_head_def* %3) #6, !dbg !4701
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4702
  tail call void @bitmap_clear(%struct.bitmap_head_def* %4) #6, !dbg !4703
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !4704
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 27, !dbg !4706
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !4706
  %6 = and i8 %bf.load, 2, !dbg !4707
  %tobool5 = icmp eq i8 %6, 0, !dbg !4707
  br i1 %tobool5, label %if.then, label %if.end, !dbg !4708

if.then:                                          ; preds = %cond.end
  %call6 = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !4709
  tail call fastcc void @df_rd_bb_local_compute_process_def(%struct.df_rd_bb_info* %call4, %union.df_ref_d** %call6, i32 0) #7, !dbg !4710
  br label %if.end, !dbg !4710

if.end:                                           ; preds = %cond.end, %if.then
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !4711
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4711
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4711
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 1, !dbg !4711
  br label %for.cond, !dbg !4711

for.cond:                                         ; preds = %cleanup, %if.end
  %insn.0.in = phi %struct.rtx_def** [ %end_, %if.end ], [ %rt_rtx33, %cleanup ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !4712
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4692, metadata !DIExpression()), !dbg !4697
  %tobool7 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !4713
  br i1 %tobool7, label %for.end, label %land.rhs, !dbg !4713

land.rhs:                                         ; preds = %for.cond
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4713
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 0, !dbg !4713
  %9 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4713
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4713
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !4713
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4713
  %cmp = icmp eq %struct.rtx_def* %insn.0, %11, !dbg !4713
  br i1 %cmp, label %for.end, label %for.body, !dbg !4711

for.body:                                         ; preds = %land.rhs
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4714
  %rt_int = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !4714
  %12 = load i32, i32* %rt_int, align 8, !dbg !4714
  call void @llvm.dbg.value(metadata i32 %12, metadata !4693, metadata !DIExpression()), !dbg !4715
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4716
  %bf.load13 = load i32, i32* %13, align 8, !dbg !4716
  %bf.clear = and i32 %bf.load13, 65535, !dbg !4716
  %cmp14 = icmp eq i32 %bf.clear, 8, !dbg !4716
  br i1 %cmp14, label %if.end27, label %lor.lhs.false, !dbg !4716

lor.lhs.false:                                    ; preds = %for.body
  %cmp17 = icmp eq i32 %bf.clear, 7, !dbg !4716
  br i1 %cmp17, label %if.end27, label %lor.lhs.false18, !dbg !4716

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp21 = icmp eq i32 %bf.clear, 9, !dbg !4716
  br i1 %cmp21, label %if.end27, label %lor.lhs.false22, !dbg !4716

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %cmp25 = icmp eq i32 %bf.clear, 10, !dbg !4716
  br i1 %cmp25, label %if.end27, label %cleanup, !dbg !4718

if.end27:                                         ; preds = %lor.lhs.false22, %lor.lhs.false18, %lor.lhs.false, %for.body
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !4719
  %insns = getelementptr inbounds %struct.df, %struct.df* %14, i64 0, i32 10, !dbg !4719
  %15 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !4719
  %idxprom = zext i32 %12 to i64, !dbg !4719
  %arrayidx28 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %15, i64 %idxprom, !dbg !4719
  %16 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx28, align 8, !dbg !4719
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %16, i64 0, i32 1, !dbg !4719
  %17 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !4719
  tail call fastcc void @df_rd_bb_local_compute_process_def(%struct.df_rd_bb_info* %call4, %union.df_ref_d** %17, i32 0) #7, !dbg !4720
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4721
  %19 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4722
  %call29 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %18, %struct.bitmap_head_def* %19) #6, !dbg !4723
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4724
  tail call void @bitmap_clear(%struct.bitmap_head_def* %20) #6, !dbg !4725
  br label %cleanup, !dbg !4726

cleanup:                                          ; preds = %lor.lhs.false22, %if.end27
  %21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !4713
  %rt_rtx33 = bitcast %union.rtunion_def* %21 to %struct.rtx_def**, !dbg !4713
  br label %for.cond, !dbg !4713, !llvm.loop !4727

for.end:                                          ; preds = %land.rhs, %for.cond
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !4729
  %changeable_flags34 = getelementptr inbounds %struct.df, %struct.df* %22, i64 0, i32 27, !dbg !4731
  %bf.load35 = load i8, i8* %changeable_flags34, align 4, !dbg !4731
  %23 = and i8 %bf.load35, 2, !dbg !4732
  %tobool38 = icmp eq i8 %23, 0, !dbg !4732
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !4733

if.then39:                                        ; preds = %for.end
  %call40 = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !4734
  tail call fastcc void @df_rd_bb_local_compute_process_def(%struct.df_rd_bb_info* %call4, %union.df_ref_d** %call40, i32 2) #7, !dbg !4735
  br label %if.end41, !dbg !4735

if.end41:                                         ; preds = %for.end, %if.then39
  ret void, !dbg !4736
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %vec_, i32 %ix_) unnamed_addr #0 !dbg !4737 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_basic_block_base* %vec_, metadata !4743, metadata !DIExpression()), !dbg !4745
  call void @llvm.dbg.value(metadata i32 %ix_, metadata !4744, metadata !DIExpression()), !dbg !4745
  br label %land.end, !dbg !4746

land.rhs:                                         ; No predecessors!
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %idxprom = zext i32 %ix_ to i64, !dbg !4746
  %arrayidx = getelementptr inbounds %struct.VEC_basic_block_base, %struct.VEC_basic_block_base* %vec_, i64 0, i32 2, i64 %idxprom, !dbg !4746
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %arrayidx, align 8, !dbg !4746
  ret %struct.basic_block_def* %0, !dbg !4746
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_rd_bb_local_compute_process_def(%struct.df_rd_bb_info* %bb_info, %union.df_ref_d** %def_rec, i32 %top_flag) unnamed_addr #4 !dbg !4747 {
entry:
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %bb_info, metadata !4751, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec, metadata !4752, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.value(metadata i32 %top_flag, metadata !4753, metadata !DIExpression()), !dbg !4761
  %kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %bb_info, i64 0, i32 0, !dbg !4762
  %gen25 = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %bb_info, i64 0, i32 2, !dbg !4762
  %sparse_kill = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %bb_info, i64 0, i32 1, !dbg !4771
  br label %while.cond, !dbg !4773

while.cond:                                       ; preds = %if.end40, %entry
  %def_rec.addr.0 = phi %union.df_ref_d** [ %def_rec, %entry ], [ %incdec.ptr, %if.end40 ]
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.addr.0, metadata !4752, metadata !DIExpression()), !dbg !4761
  %0 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.addr.0, align 8, !dbg !4774
  %tobool = icmp eq %union.df_ref_d* %0, null, !dbg !4773
  br i1 %tobool, label %while.end, label %while.body, !dbg !4773

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %0, metadata !4754, metadata !DIExpression()), !dbg !4775
  %1 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %0, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !4776
  %bf.load = load i32, i32* %1, align 8, !dbg !4776
  %2 = lshr i32 %bf.load, 16, !dbg !4776
  %and = and i32 %2, 2, !dbg !4777
  %cmp = icmp eq i32 %and, %top_flag, !dbg !4778
  br i1 %cmp, label %if.then, label %if.end40, !dbg !4779

if.then:                                          ; preds = %while.body
  %regno2 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %0, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !4780
  %3 = load i32, i32* %regno2, align 8, !dbg !4780
  call void @llvm.dbg.value(metadata i32 %3, metadata !4756, metadata !DIExpression()), !dbg !4781
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !4782
  %begin3 = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 3, i32 1, !dbg !4782
  %5 = load i32*, i32** %begin3, align 8, !dbg !4782
  %idxprom = zext i32 %3 to i64, !dbg !4782
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !4782
  %6 = load i32, i32* %arrayidx, align 4, !dbg !4782
  call void @llvm.dbg.value(metadata i32 %6, metadata !4759, metadata !DIExpression()), !dbg !4781
  %count = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 3, i32 2, !dbg !4783
  %7 = load i32*, i32** %count, align 8, !dbg !4783
  %arrayidx6 = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !4783
  %8 = load i32, i32* %arrayidx6, align 4, !dbg !4783
  call void @llvm.dbg.value(metadata i32 %8, metadata !4760, metadata !DIExpression()), !dbg !4781
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 27, !dbg !4784
  %bf.load7 = load i8, i8* %changeable_flags, align 4, !dbg !4784
  %9 = and i8 %bf.load7, 2, !dbg !4785
  %tobool9 = icmp eq i8 %9, 0, !dbg !4785
  %cmp10 = icmp ugt i32 %3, 52, !dbg !4786
  %or.cond = or i1 %tobool9, %cmp10, !dbg !4787
  br i1 %or.cond, label %if.then11, label %if.end40, !dbg !4787

if.then11:                                        ; preds = %if.then
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_block, align 8, !dbg !4788
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %10, i32 %3) #6, !dbg !4789
  %tobool12 = icmp eq i32 %call, 0, !dbg !4789
  br i1 %tobool12, label %if.then13, label %if.end40, !dbg !4790

if.then13:                                        ; preds = %if.then11
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4791
  %call14 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %11, i32 %3) #6, !dbg !4792
  %tobool15 = icmp eq i32 %call14, 0, !dbg !4792
  br i1 %tobool15, label %land.lhs.true, label %if.end26, !dbg !4793

land.lhs.true:                                    ; preds = %if.then13
  %bf.load17 = load i32, i32* %1, align 8, !dbg !4794
  %and19 = and i32 %bf.load17, 5308416, !dbg !4795
  %tobool20 = icmp eq i32 %and19, 0, !dbg !4795
  br i1 %tobool20, label %if.then21, label %if.end26, !dbg !4796

if.then21:                                        ; preds = %land.lhs.true
  %cmp22 = icmp ugt i32 %8, 32, !dbg !4797
  br i1 %cmp22, label %if.then23, label %if.else, !dbg !4798

if.then23:                                        ; preds = %if.then21
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %sparse_kill, align 8, !dbg !4799
  %call24 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %12, i32 %3) #6, !dbg !4800
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen25, align 8, !dbg !4801
  tail call void @bitmap_clear_range(%struct.bitmap_head_def* %13, i32 %6, i32 %8) #6, !dbg !4802
  br label %if.end26, !dbg !4803

if.else:                                          ; preds = %if.then21
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !4804
  tail call void @bitmap_set_range(%struct.bitmap_head_def* %14, i32 %6, i32 %8) #6, !dbg !4805
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen25, align 8, !dbg !4806
  tail call void @bitmap_clear_range(%struct.bitmap_head_def* %15, i32 %6, i32 %8) #6, !dbg !4807
  br label %if.end26

if.end26:                                         ; preds = %land.lhs.true, %if.then13, %if.then23, %if.else
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !4808
  %call27 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %16, i32 %3) #6, !dbg !4809
  %bf.load29 = load i32, i32* %1, align 8, !dbg !4810
  %and31 = and i32 %bf.load29, 12582912, !dbg !4812
  %tobool32 = icmp eq i32 %and31, 0, !dbg !4812
  br i1 %tobool32, label %if.then33, label %if.end40, !dbg !4813

if.then33:                                        ; preds = %if.end26
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen25, align 8, !dbg !4814
  %id = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %0, i64 0, i32 0, i32 0, i32 0, i32 7, !dbg !4815
  %18 = load i32, i32* %id, align 4, !dbg !4815
  %call36 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %17, i32 %18) #6, !dbg !4816
  br label %if.end40, !dbg !4816

if.end40:                                         ; preds = %if.end26, %if.then11, %if.then, %if.then33, %while.body
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.addr.0, i64 1, !dbg !4817
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !4752, metadata !DIExpression()), !dbg !4761
  br label %while.cond, !dbg !4773, !llvm.loop !4818

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4820
}

declare dso_local zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) local_unnamed_addr #1

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) local_unnamed_addr #1

declare dso_local void @free(i8*) local_unnamed_addr #1

declare dso_local void @bitmap_print(%struct._IO_FILE*, %struct.bitmap_head_def*, i8*, i8*) local_unnamed_addr #1

declare dso_local i64 @bitmap_count_bits(%struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @df_lr_alloc(%struct.bitmap_head_def* %all_blocks) #4 !dbg !4821 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !4823, metadata !DIExpression()), !dbg !4830
  %0 = bitcast i32* %bb_index to i8*, !dbg !4831
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4831
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4832
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4832
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !4833
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 1, !dbg !4833
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4833
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 3, !dbg !4835
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !4835
  %tobool = icmp eq %struct.alloc_pool_def* %4, null, !dbg !4833
  br i1 %tobool, label %if.then, label %if.end, !dbg !4836

if.then:                                          ; preds = %entry
  %call = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0), i64 32, i64 50) #6, !dbg !4837
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !4838
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 1, i64 1, !dbg !4838
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !4838
  %block_pool3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i64 0, i32 3, !dbg !4839
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool3, align 8, !dbg !4840
  %.pre = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !4841
  br label %if.end, !dbg !4838

if.end:                                           ; preds = %entry, %if.then
  %7 = phi %struct.dataflow* [ %3, %entry ], [ %.pre, %if.then ], !dbg !4841
  tail call void @df_grow_bb_info(%struct.dataflow* %7) #7, !dbg !4842
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !4843
  %arrayidx7 = getelementptr inbounds %struct.df, %struct.df* %8, i64 0, i32 1, i64 1, !dbg !4843
  %9 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !4843
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %9, i64 0, i32 4, !dbg !4843
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !4843
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4824, metadata !DIExpression(DW_OP_deref)), !dbg !4830
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4825, metadata !DIExpression(DW_OP_deref)), !dbg !4830
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %10, i32 0, i32* nonnull %bb_index) #7, !dbg !4843
  br label %for.cond, !dbg !4843

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4824, metadata !DIExpression(DW_OP_deref)), !dbg !4830
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4825, metadata !DIExpression(DW_OP_deref)), !dbg !4830
  %call8 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4844
  %tobool9 = icmp eq i8 %call8, 0, !dbg !4843
  br i1 %tobool9, label %for.end, label %for.body, !dbg !4843

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %bb_index, align 4, !dbg !4845
  call void @llvm.dbg.value(metadata i32 %11, metadata !4824, metadata !DIExpression()), !dbg !4830
  %call10 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %11) #7, !dbg !4846
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call10, metadata !4826, metadata !DIExpression()), !dbg !4847
  %tobool11 = icmp eq %struct.df_lr_bb_info* %call10, null, !dbg !4848
  br i1 %tobool11, label %if.else, label %if.then12, !dbg !4850

if.then12:                                        ; preds = %for.body
  %def = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call10, i64 0, i32 0, !dbg !4851
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !4851
  call void @bitmap_clear(%struct.bitmap_head_def* %12) #6, !dbg !4853
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call10, i64 0, i32 1, !dbg !4854
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !4854
  call void @bitmap_clear(%struct.bitmap_head_def* %13) #6, !dbg !4855
  br label %for.inc, !dbg !4856

if.else:                                          ; preds = %for.body
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !4857
  %arrayidx14 = getelementptr inbounds %struct.df, %struct.df* %14, i64 0, i32 1, i64 1, !dbg !4857
  %15 = load %struct.dataflow*, %struct.dataflow** %arrayidx14, align 8, !dbg !4857
  %block_pool15 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %15, i64 0, i32 3, !dbg !4859
  %16 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool15, align 8, !dbg !4859
  %call16 = call i8* @pool_alloc(%struct.alloc_pool_def* %16) #6, !dbg !4860
  %17 = bitcast i8* %call16 to %struct.df_lr_bb_info*, !dbg !4861
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %17, metadata !4826, metadata !DIExpression()), !dbg !4847
  %18 = load i32, i32* %bb_index, align 4, !dbg !4862
  call void @llvm.dbg.value(metadata i32 %18, metadata !4824, metadata !DIExpression()), !dbg !4830
  call fastcc void @df_lr_set_bb_info(i32 %18, %struct.df_lr_bb_info* %17) #7, !dbg !4863
  %call17 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4864
  %use18 = getelementptr inbounds i8, i8* %call16, i64 8, !dbg !4865
  %19 = bitcast i8* %use18 to %struct.bitmap_head_def**, !dbg !4865
  store %struct.bitmap_head_def* %call17, %struct.bitmap_head_def** %19, align 8, !dbg !4866
  %call19 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4867
  %def20 = bitcast i8* %call16 to %struct.bitmap_head_def**, !dbg !4868
  store %struct.bitmap_head_def* %call19, %struct.bitmap_head_def** %def20, align 8, !dbg !4869
  %call21 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4870
  %in = getelementptr inbounds i8, i8* %call16, i64 16, !dbg !4871
  %20 = bitcast i8* %in to %struct.bitmap_head_def**, !dbg !4871
  store %struct.bitmap_head_def* %call21, %struct.bitmap_head_def** %20, align 8, !dbg !4872
  %call22 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !4873
  %out = getelementptr inbounds i8, i8* %call16, i64 24, !dbg !4874
  %21 = bitcast i8* %out to %struct.bitmap_head_def**, !dbg !4874
  store %struct.bitmap_head_def* %call22, %struct.bitmap_head_def** %21, align 8, !dbg !4875
  br label %for.inc

for.inc:                                          ; preds = %if.then12, %if.else
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4824, metadata !DIExpression(DW_OP_deref)), !dbg !4830
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4825, metadata !DIExpression(DW_OP_deref)), !dbg !4830
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4844
  br label %for.cond, !dbg !4844, !llvm.loop !4876

for.end:                                          ; preds = %for.cond
  %22 = load %struct.df*, %struct.df** @df, align 8, !dbg !4878
  %arrayidx25 = getelementptr inbounds %struct.df, %struct.df* %22, i64 0, i32 1, i64 1, !dbg !4878
  %23 = load %struct.dataflow*, %struct.dataflow** %arrayidx25, align 8, !dbg !4878
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %23, i64 0, i32 9, !dbg !4879
  store i8 0, i8* %optional_p, align 2, !dbg !4880
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4881
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4881
  ret void, !dbg !4881
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_reset(%struct.bitmap_head_def* %all_blocks) #4 !dbg !4882 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !4884, metadata !DIExpression()), !dbg !4891
  %0 = bitcast i32* %bb_index to i8*, !dbg !4892
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4892
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4893
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4893
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4885, metadata !DIExpression(DW_OP_deref)), !dbg !4891
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4886, metadata !DIExpression(DW_OP_deref)), !dbg !4891
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !4894
  br label %for.cond, !dbg !4894

for.cond:                                         ; preds = %cond.end, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4885, metadata !DIExpression(DW_OP_deref)), !dbg !4891
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4886, metadata !DIExpression(DW_OP_deref)), !dbg !4891
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4895
  %tobool = icmp eq i8 %call, 0, !dbg !4894
  br i1 %tobool, label %for.end, label %for.body, !dbg !4894

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !4896
  call void @llvm.dbg.value(metadata i32 %2, metadata !4885, metadata !DIExpression()), !dbg !4891
  %call1 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %2) #7, !dbg !4897
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call1, metadata !4887, metadata !DIExpression()), !dbg !4898
  %tobool2 = icmp eq %struct.df_lr_bb_info* %call1, null, !dbg !4899
  br i1 %tobool2, label %cond.true, label %cond.end, !dbg !4899

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 818, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !4899
  br label %cond.end, !dbg !4899

cond.end:                                         ; preds = %for.body, %cond.true
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call1, i64 0, i32 2, !dbg !4900
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !4900
  call void @bitmap_clear(%struct.bitmap_head_def* %3) #6, !dbg !4901
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call1, i64 0, i32 3, !dbg !4902
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !4902
  call void @bitmap_clear(%struct.bitmap_head_def* %4) #6, !dbg !4903
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4885, metadata !DIExpression(DW_OP_deref)), !dbg !4891
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4886, metadata !DIExpression(DW_OP_deref)), !dbg !4891
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4895
  br label %for.cond, !dbg !4895, !llvm.loop !4904

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4906
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4906
  ret void, !dbg !4906
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #4 !dbg !4907 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !4909, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !4910, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !4911, metadata !DIExpression()), !dbg !4912
  %tobool = icmp eq i8* %vbb_info, null, !dbg !4913
  br i1 %tobool, label %if.end, label %if.then, !dbg !4915

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !4911, metadata !DIExpression()), !dbg !4912
  %use = getelementptr inbounds i8, i8* %vbb_info, i64 8, !dbg !4916
  %0 = bitcast i8* %use to %struct.bitmap_head_def**, !dbg !4916
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, align 8, !dbg !4916
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !4916
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %0, align 8, !dbg !4916
  %def = bitcast i8* %vbb_info to %struct.bitmap_head_def**, !dbg !4918
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !4918
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !4918
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %def, align 8, !dbg !4918
  %in = getelementptr inbounds i8, i8* %vbb_info, i64 16, !dbg !4919
  %3 = bitcast i8* %in to %struct.bitmap_head_def**, !dbg !4919
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, align 8, !dbg !4919
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !4919
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %3, align 8, !dbg !4919
  %out = getelementptr inbounds i8, i8* %vbb_info, i64 24, !dbg !4920
  %5 = bitcast i8* %out to %struct.bitmap_head_def**, !dbg !4920
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %5, align 8, !dbg !4920
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !4920
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %5, align 8, !dbg !4920
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !4921
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 1, i64 1, !dbg !4921
  %8 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !4921
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %8, i64 0, i32 3, !dbg !4922
  %9 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !4922
  tail call void @pool_free(%struct.alloc_pool_def* %9, i8* nonnull %vbb_info) #6, !dbg !4923
  br label %if.end, !dbg !4924

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !4925
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_local_compute(%struct.bitmap_head_def* %all_blocks) #4 !dbg !4926 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !4928, metadata !DIExpression()), !dbg !4937
  %0 = bitcast i32* %bb_index to i8*, !dbg !4938
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4938
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4939
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4939
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !4940
  %hardware_regs_used = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 13, !dbg !4941
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !4941
  tail call void @bitmap_clear(%struct.bitmap_head_def* %3) #6, !dbg !4942
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !4943
  %hardware_regs_used1 = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 13, !dbg !4944
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used1, align 8, !dbg !4944
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %5, i32 7) #6, !dbg !4945
  %6 = load i32, i32* @reload_completed, align 4, !dbg !4946
  %tobool = icmp eq i32 %6, 0, !dbg !4946
  br i1 %tobool, label %if.then, label %if.end42, !dbg !4948

if.then:                                          ; preds = %entry
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !4949
  %hardware_regs_used2 = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 13, !dbg !4951
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used2, align 8, !dbg !4951
  %call3 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %8, i32 20) #6, !dbg !4952
  %9 = load i8, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 16), align 16, !dbg !4953
  %tobool4 = icmp eq i8 %9, 0, !dbg !4953
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !4955

if.then5:                                         ; preds = %if.then
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !4956
  %hardware_regs_used6 = getelementptr inbounds %struct.df, %struct.df* %10, i64 0, i32 13, !dbg !4957
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used6, align 8, !dbg !4957
  %call7 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %11, i32 16) #6, !dbg !4958
  br label %if.end, !dbg !4958

if.end:                                           ; preds = %if.then, %if.then5
  %12 = load i32, i32* @flag_pic, align 4, !dbg !4959
  %tobool8 = icmp eq i32 %12, 0, !dbg !4959
  br i1 %tobool8, label %cond.end13, label %cond.false, !dbg !4959

cond.false:                                       ; preds = %if.end
  %13 = load i32, i32* @reload_completed, align 4, !dbg !4959
  %tobool9 = icmp eq i32 %13, 0, !dbg !4959
  br i1 %tobool9, label %cond.end13, label %cond.true10, !dbg !4959

cond.true10:                                      ; preds = %cond.false
  %14 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !4959
  %call11 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %14) #7, !dbg !4959
  %phitmp = icmp ne i32 %call11, -1, !dbg !4959
  br label %cond.end13, !dbg !4959

cond.end13:                                       ; preds = %cond.false, %if.end, %cond.true10
  %cond14 = phi i1 [ false, %if.end ], [ %phitmp, %cond.true10 ], [ true, %cond.false ]
  br i1 %cond14, label %land.lhs.true, label %if.end42, !dbg !4961

land.lhs.true:                                    ; preds = %cond.end13
  %15 = load i32, i32* @flag_pic, align 4, !dbg !4962
  %tobool15 = icmp eq i32 %15, 0, !dbg !4962
  br i1 %tobool15, label %cond.end24, label %cond.false17, !dbg !4962

cond.false17:                                     ; preds = %land.lhs.true
  %16 = load i32, i32* @reload_completed, align 4, !dbg !4962
  %tobool18 = icmp eq i32 %16, 0, !dbg !4962
  br i1 %tobool18, label %cond.end24, label %cond.true19, !dbg !4962

cond.true19:                                      ; preds = %cond.false17
  %17 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !4962
  %call20 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %17) #7, !dbg !4962
  %phitmp1 = zext i32 %call20 to i64, !dbg !4962
  br label %cond.end24, !dbg !4962

cond.end24:                                       ; preds = %cond.false17, %land.lhs.true, %cond.true19
  %cond25 = phi i64 [ 4294967295, %land.lhs.true ], [ %phitmp1, %cond.true19 ], [ 3, %cond.false17 ]
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %cond25, !dbg !4963
  %18 = load i8, i8* %arrayidx, align 1, !dbg !4963
  %tobool26 = icmp eq i8 %18, 0, !dbg !4963
  br i1 %tobool26, label %if.end42, label %if.then27, !dbg !4964

if.then27:                                        ; preds = %cond.end24
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !4965
  %hardware_regs_used28 = getelementptr inbounds %struct.df, %struct.df* %19, i64 0, i32 13, !dbg !4966
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used28, align 8, !dbg !4966
  %21 = load i32, i32* @flag_pic, align 4, !dbg !4967
  %tobool29 = icmp eq i32 %21, 0, !dbg !4967
  br i1 %tobool29, label %cond.end38, label %cond.false31, !dbg !4967

cond.false31:                                     ; preds = %if.then27
  %22 = load i32, i32* @reload_completed, align 4, !dbg !4967
  %tobool32 = icmp eq i32 %22, 0, !dbg !4967
  br i1 %tobool32, label %cond.end38, label %cond.true33, !dbg !4967

cond.true33:                                      ; preds = %cond.false31
  %23 = load %struct.rtx_def*, %struct.rtx_def** @pic_offset_table_rtx, align 8, !dbg !4967
  %call34 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %23) #7, !dbg !4967
  br label %cond.end38, !dbg !4967

cond.end38:                                       ; preds = %cond.false31, %if.then27, %cond.true33
  %cond39 = phi i32 [ -1, %if.then27 ], [ %call34, %cond.true33 ], [ 3, %cond.false31 ], !dbg !4967
  %call40 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %20, i32 %cond39) #6, !dbg !4968
  br label %if.end42, !dbg !4968

if.end42:                                         ; preds = %cond.end24, %entry, %cond.end13, %cond.end38
  %24 = load %struct.df*, %struct.df** @df, align 8, !dbg !4969
  %arrayidx43 = getelementptr inbounds %struct.df, %struct.df* %24, i64 0, i32 1, i64 1, !dbg !4969
  %25 = load %struct.dataflow*, %struct.dataflow** %arrayidx43, align 8, !dbg !4969
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %25, i64 0, i32 4, !dbg !4969
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !4969
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4929, metadata !DIExpression(DW_OP_deref)), !dbg !4937
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4930, metadata !DIExpression(DW_OP_deref)), !dbg !4937
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %26, i32 0, i32* nonnull %bb_index) #7, !dbg !4969
  br label %for.cond, !dbg !4969

for.cond:                                         ; preds = %for.inc, %if.end42
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4929, metadata !DIExpression(DW_OP_deref)), !dbg !4937
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4930, metadata !DIExpression(DW_OP_deref)), !dbg !4937
  %call44 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4970
  %tobool45 = icmp eq i8 %call44, 0, !dbg !4969
  br i1 %tobool45, label %for.end, label %for.body, !dbg !4969

for.body:                                         ; preds = %for.cond
  %27 = load i32, i32* %bb_index, align 4, !dbg !4971
  call void @llvm.dbg.value(metadata i32 %27, metadata !4929, metadata !DIExpression()), !dbg !4937
  %cmp46 = icmp eq i32 %27, 1, !dbg !4972
  br i1 %cmp46, label %if.then48, label %if.else, !dbg !4973

if.then48:                                        ; preds = %for.body
  %call49 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 1) #7, !dbg !4974
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call49, metadata !4931, metadata !DIExpression()), !dbg !4975
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call49, i64 0, i32 1, !dbg !4976
  %28 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !4976
  %29 = load %struct.df*, %struct.df** @df, align 8, !dbg !4977
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %29, i64 0, i32 17, !dbg !4978
  %30 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !4978
  call void @bitmap_copy(%struct.bitmap_head_def* %28, %struct.bitmap_head_def* %30) #6, !dbg !4979
  br label %for.inc, !dbg !4980

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %27, metadata !4929, metadata !DIExpression()), !dbg !4937
  call fastcc void @df_lr_bb_local_compute(i32 %27) #7, !dbg !4981
  br label %for.inc

for.inc:                                          ; preds = %if.then48, %if.else
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4929, metadata !DIExpression(DW_OP_deref)), !dbg !4937
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4930, metadata !DIExpression(DW_OP_deref)), !dbg !4937
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !4970
  br label %for.cond, !dbg !4970, !llvm.loop !4982

for.end:                                          ; preds = %for.cond
  %31 = load %struct.df*, %struct.df** @df, align 8, !dbg !4984
  %arrayidx52 = getelementptr inbounds %struct.df, %struct.df* %31, i64 0, i32 1, i64 1, !dbg !4984
  %32 = load %struct.dataflow*, %struct.dataflow** %arrayidx52, align 8, !dbg !4984
  %out_of_date_transfer_functions53 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %32, i64 0, i32 4, !dbg !4985
  %33 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions53, align 8, !dbg !4985
  call void @bitmap_clear(%struct.bitmap_head_def* %33) #6, !dbg !4986
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4987
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4987
  ret void, !dbg !4987
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_init(%struct.bitmap_head_def* %all_blocks) #4 !dbg !4988 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !4990, metadata !DIExpression()), !dbg !4997
  %0 = bitcast i32* %bb_index to i8*, !dbg !4998
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !4998
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !4999
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !4999
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4991, metadata !DIExpression(DW_OP_deref)), !dbg !4997
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4992, metadata !DIExpression(DW_OP_deref)), !dbg !4997
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !5000
  br label %for.cond, !dbg !5000

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4991, metadata !DIExpression(DW_OP_deref)), !dbg !4997
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4992, metadata !DIExpression(DW_OP_deref)), !dbg !4997
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5001
  %tobool = icmp eq i8 %call, 0, !dbg !5000
  br i1 %tobool, label %for.end, label %for.body, !dbg !5000

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !5002
  call void @llvm.dbg.value(metadata i32 %2, metadata !4991, metadata !DIExpression()), !dbg !4997
  %call1 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %2) #7, !dbg !5003
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call1, metadata !4993, metadata !DIExpression()), !dbg !5004
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call1, i64 0, i32 2, !dbg !5005
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5005
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call1, i64 0, i32 1, !dbg !5006
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5006
  call void @bitmap_copy(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %4) #6, !dbg !5007
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call1, i64 0, i32 3, !dbg !5008
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5008
  call void @bitmap_clear(%struct.bitmap_head_def* %5) #6, !dbg !5009
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !4991, metadata !DIExpression(DW_OP_deref)), !dbg !4997
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !4992, metadata !DIExpression(DW_OP_deref)), !dbg !4997
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5001
  br label %for.cond, !dbg !5001, !llvm.loop !5010

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5012
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5012
  ret void, !dbg !5012
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_confluence_0(%struct.basic_block_def* %bb) #4 !dbg !5013 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5015, metadata !DIExpression()), !dbg !5017
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5018
  %0 = load i32, i32* %index, align 8, !dbg !5018
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %0) #7, !dbg !5019
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* undef, metadata !5016, metadata !DIExpression()), !dbg !5017
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5020
  %cfg = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, i32 1, !dbg !5020
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5020
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i64 0, i32 1, !dbg !5020
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5020
  %cmp = icmp eq %struct.basic_block_def* %3, %bb, !dbg !5022
  br i1 %cmp, label %if.end, label %if.then, !dbg !5023

if.then:                                          ; preds = %entry
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 3, !dbg !5024
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5024
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %4, metadata !5016, metadata !DIExpression()), !dbg !5017
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !5025
  %hardware_regs_used = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 13, !dbg !5026
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !5026
  tail call void @bitmap_copy(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %6) #6, !dbg !5027
  br label %if.end, !dbg !5027

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5028
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_confluence_n(%struct.edge_def* %e) #4 !dbg !5029 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !5031, metadata !DIExpression()), !dbg !5034
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !5035
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5035
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !5036
  %1 = load i32, i32* %index, align 8, !dbg !5036
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %1) #7, !dbg !5037
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 3, !dbg !5038
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5038
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !5032, metadata !DIExpression()), !dbg !5034
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !5039
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5039
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !5040
  %4 = load i32, i32* %index1, align 8, !dbg !5040
  %call2 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %4) #7, !dbg !5041
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call2, i64 0, i32 2, !dbg !5042
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5042
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %5, metadata !5033, metadata !DIExpression()), !dbg !5034
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !5043
  %6 = load i32, i32* %flags, align 8, !dbg !5043
  %and = and i32 %6, 8, !dbg !5045
  %tobool = icmp eq i32 %and, 0, !dbg !5045
  br i1 %tobool, label %if.else, label %if.then, !dbg !5046

if.then:                                          ; preds = %entry
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !5047
  %call3 = tail call zeroext i8 @bitmap_ior_and_compl_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %5, %struct.bitmap_head_def* %7) #6, !dbg !5048
  br label %if.end, !dbg !5048

if.else:                                          ; preds = %entry
  %call4 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %5) #6, !dbg !5049
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.df*, %struct.df** @df, align 8, !dbg !5050
  %hardware_regs_used = getelementptr inbounds %struct.df, %struct.df* %8, i64 0, i32 13, !dbg !5051
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !5051
  %call5 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %9) #6, !dbg !5052
  ret void, !dbg !5053
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @df_lr_transfer_function(i32 %bb_index) #4 !dbg !5054 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !5056, metadata !DIExpression()), !dbg !5062
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %bb_index) #7, !dbg !5063
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call, metadata !5057, metadata !DIExpression()), !dbg !5062
  %in1 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 2, !dbg !5064
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in1, align 8, !dbg !5064
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %0, metadata !5058, metadata !DIExpression()), !dbg !5062
  %out2 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 3, !dbg !5065
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out2, align 8, !dbg !5065
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %1, metadata !5059, metadata !DIExpression()), !dbg !5062
  %use3 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 1, !dbg !5066
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use3, align 8, !dbg !5066
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !5060, metadata !DIExpression()), !dbg !5062
  %def4 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 0, !dbg !5067
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def4, align 8, !dbg !5067
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %3, metadata !5061, metadata !DIExpression()), !dbg !5062
  %call5 = tail call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %0, %struct.bitmap_head_def* %2, %struct.bitmap_head_def* %1, %struct.bitmap_head_def* %3) #6, !dbg !5068
  ret i8 %call5, !dbg !5069
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_finalize(%struct.bitmap_head_def* %all_blocks) #4 !dbg !5070 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !5072, metadata !DIExpression()), !dbg !5073
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5074
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !5074
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5074
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 8, !dbg !5075
  store i8 0, i8* %solutions_dirty, align 1, !dbg !5076
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 27, !dbg !5077
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !5077
  %2 = and i8 %bf.load, 1, !dbg !5079
  %tobool = icmp eq i8 %2, 0, !dbg !5079
  br i1 %tobool, label %if.end9, label %if.then, !dbg !5080

if.then:                                          ; preds = %entry
  tail call void @run_fast_df_dce() #6, !dbg !5081
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5083
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 1, !dbg !5083
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5083
  %solutions_dirty3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 8, !dbg !5085
  %5 = load i8, i8* %solutions_dirty3, align 1, !dbg !5085
  %tobool4 = icmp eq i8 %5, 0, !dbg !5083
  br i1 %tobool4, label %if.end9, label %if.then5, !dbg !5086

if.then5:                                         ; preds = %if.then
  %call = tail call i32 @df_clear_flags(i32 1) #6, !dbg !5087
  tail call void @df_lr_alloc(%struct.bitmap_head_def* %all_blocks) #7, !dbg !5089
  tail call void @df_lr_local_compute(%struct.bitmap_head_def* %all_blocks) #7, !dbg !5090
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !5091
  %arrayidx7 = getelementptr inbounds %struct.df, %struct.df* %6, i64 0, i32 1, i64 1, !dbg !5091
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !5091
  %postorder = getelementptr inbounds %struct.df, %struct.df* %6, i64 0, i32 21, !dbg !5092
  %8 = load i32*, i32** %postorder, align 8, !dbg !5092
  %n_blocks = getelementptr inbounds %struct.df, %struct.df* %6, i64 0, i32 23, !dbg !5093
  %9 = load i32, i32* %n_blocks, align 8, !dbg !5093
  tail call void @df_worklist_dataflow(%struct.dataflow* %7, %struct.bitmap_head_def* %all_blocks, i32* %8, i32 %9) #6, !dbg !5094
  tail call void @df_lr_finalize(%struct.bitmap_head_def* %all_blocks) #7, !dbg !5095
  %call8 = tail call i32 @df_set_flags(i32 1) #6, !dbg !5096
  ret void, !dbg !5097

if.end9:                                          ; preds = %if.then, %entry
  ret void, !dbg !5097
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_free() #4 !dbg !5098 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5107
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !5107
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5107
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !5108
  %2 = load i8**, i8*** %block_info, align 8, !dbg !5108
  %tobool = icmp eq i8** %2, null, !dbg !5107
  br i1 %tobool, label %if.end17, label %for.cond.preheader, !dbg !5109

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5110

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %3 = phi %struct.dataflow* [ %.pre1, %for.inc ], [ %1, %for.cond.preheader ], !dbg !5111
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5112
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5100, metadata !DIExpression()), !dbg !5113
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 2, !dbg !5114
  %4 = load i32, i32* %block_info_size, align 8, !dbg !5114
  %cmp = icmp ult i32 %i.0, %4, !dbg !5115
  br i1 %cmp, label %for.body, label %for.end, !dbg !5110

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %i.0) #7, !dbg !5116
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call, metadata !5103, metadata !DIExpression()), !dbg !5117
  %tobool3 = icmp eq %struct.df_lr_bb_info* %call, null, !dbg !5118
  br i1 %tobool3, label %for.inc, label %if.then4, !dbg !5120

if.then4:                                         ; preds = %for.body
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 1, !dbg !5121
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5121
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %5) #6, !dbg !5121
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %use, align 8, !dbg !5121
  %def = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 0, !dbg !5123
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !5123
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !5123
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %def, align 8, !dbg !5123
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 2, !dbg !5124
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5124
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %7) #6, !dbg !5124
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in, align 8, !dbg !5124
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 3, !dbg !5125
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5125
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %8) #6, !dbg !5125
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out, align 8, !dbg !5125
  br label %for.inc, !dbg !5126

for.inc:                                          ; preds = %for.body, %if.then4
  %inc = add i32 %i.0, 1, !dbg !5127
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5100, metadata !DIExpression()), !dbg !5113
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !5111
  %arrayidx2.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 1, !dbg !5128
  %.pre1 = load %struct.dataflow*, %struct.dataflow** %arrayidx2.phi.trans.insert, align 8, !dbg !5111
  br label %for.cond, !dbg !5129, !llvm.loop !5130

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.dataflow* [ %3, %for.cond ], !dbg !5111
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %.lcssa, i64 0, i32 3, !dbg !5132
  %9 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5132
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %9) #6, !dbg !5133
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !5134
  %arrayidx12 = getelementptr inbounds %struct.df, %struct.df* %10, i64 0, i32 1, i64 1, !dbg !5134
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !5134
  %block_info_size13 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i64 0, i32 2, !dbg !5135
  store i32 0, i32* %block_info_size13, align 8, !dbg !5136
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !5137
  %block_info16 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i64 0, i32 1, !dbg !5138
  %13 = bitcast i8*** %block_info16 to i8**, !dbg !5138
  %14 = load i8*, i8** %13, align 8, !dbg !5138
  tail call void @free(i8* %14) #6, !dbg !5139
  %.pre2 = load %struct.df*, %struct.df** @df, align 8, !dbg !5140
  %arrayidx19.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre2, i64 0, i32 1, i64 1, !dbg !5141
  %.pre3 = load %struct.dataflow*, %struct.dataflow** %arrayidx19.phi.trans.insert, align 8, !dbg !5140
  br label %if.end17, !dbg !5142

if.end17:                                         ; preds = %entry, %for.end
  %15 = phi %struct.dataflow* [ %1, %entry ], [ %.pre3, %for.end ], !dbg !5140
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %15, i64 0, i32 4, !dbg !5140
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5140
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %16) #6, !dbg !5140
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !5140
  %arrayidx21 = getelementptr inbounds %struct.df, %struct.df* %17, i64 0, i32 1, i64 1, !dbg !5140
  %18 = load %struct.dataflow*, %struct.dataflow** %arrayidx21, align 8, !dbg !5140
  %out_of_date_transfer_functions22 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %18, i64 0, i32 4, !dbg !5140
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions22, align 8, !dbg !5140
  %19 = bitcast %struct.dataflow** %arrayidx21 to i8**, !dbg !5143
  %20 = load i8*, i8** %19, align 8, !dbg !5143
  tail call void @free(i8* %20) #6, !dbg !5144
  ret void, !dbg !5145
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !5146 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5148, metadata !DIExpression()), !dbg !5152
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5149, metadata !DIExpression()), !dbg !5152
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5153
  %0 = load i32, i32* %index, align 8, !dbg !5153
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %0) #7, !dbg !5154
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call, metadata !5150, metadata !DIExpression()), !dbg !5152
  %tobool = icmp eq %struct.df_lr_bb_info* %call, null, !dbg !5155
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !5157

lor.lhs.false:                                    ; preds = %entry
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 2, !dbg !5158
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5158
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !5159
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !5160

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0)) #6, !dbg !5161
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5162
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2) #6, !dbg !5163
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5164
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 1, !dbg !5164
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5164
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 5, !dbg !5166
  %5 = load i8*, i8** %problem_data4, align 8, !dbg !5166
  %tobool5 = icmp eq i8* %5, null, !dbg !5164
  br i1 %tobool5, label %if.end14, label %if.then6, !dbg !5167

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %5, metadata !5151, metadata !DIExpression()), !dbg !5152
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !5168
  %in11 = bitcast i8* %5 to %struct.bitmap_head_def***, !dbg !5170
  %6 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in11, align 8, !dbg !5170
  %7 = load i32, i32* %index, align 8, !dbg !5171
  %idxprom = sext i32 %7 to i64, !dbg !5172
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %6, i64 %idxprom, !dbg !5172
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx13, align 8, !dbg !5172
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %8) #6, !dbg !5173
  br label %if.end14, !dbg !5174

if.end14:                                         ; preds = %if.end, %if.then6
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i64 0, i64 0)) #6, !dbg !5175
  %use = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 1, !dbg !5176
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !5176
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %9) #6, !dbg !5177
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26, i64 0, i64 0)) #6, !dbg !5178
  %def = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 0, !dbg !5179
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !5179
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %10) #6, !dbg !5180
  br label %cleanup.cont, !dbg !5181

cleanup.cont:                                     ; preds = %lor.lhs.false, %entry, %if.end14
  ret void, !dbg !5181
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !5182 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5184, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5185, metadata !DIExpression()), !dbg !5188
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5189
  %0 = load i32, i32* %index, align 8, !dbg !5189
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %0) #7, !dbg !5190
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call, metadata !5186, metadata !DIExpression()), !dbg !5188
  %tobool = icmp eq %struct.df_lr_bb_info* %call, null, !dbg !5191
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !5193

lor.lhs.false:                                    ; preds = %entry
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 3, !dbg !5194
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5194
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !5195
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !5196

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0)) #6, !dbg !5197
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5198
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2) #6, !dbg !5199
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5200
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 1, !dbg !5200
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5200
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 5, !dbg !5202
  %5 = load i8*, i8** %problem_data4, align 8, !dbg !5202
  %tobool5 = icmp eq i8* %5, null, !dbg !5200
  br i1 %tobool5, label %cleanup.cont, label %if.then6, !dbg !5203

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %5, metadata !5187, metadata !DIExpression()), !dbg !5188
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !5204
  %out11 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !5206
  %6 = bitcast i8* %out11 to %struct.bitmap_head_def***, !dbg !5206
  %7 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %6, align 8, !dbg !5206
  %8 = load i32, i32* %index, align 8, !dbg !5207
  %idxprom = sext i32 %8 to i64, !dbg !5208
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, i64 %idxprom, !dbg !5208
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx13, align 8, !dbg !5208
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %9) #6, !dbg !5209
  br label %cleanup.cont, !dbg !5210

cleanup.cont:                                     ; preds = %if.end, %lor.lhs.false, %entry, %if.then6
  ret void, !dbg !5211
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_verify_solution_start() #4 !dbg !5212 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5216
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !5216
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5216
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 8, !dbg !5218
  %2 = load i8, i8* %solutions_dirty, align 1, !dbg !5218
  %tobool = icmp eq i8 %2, 0, !dbg !5216
  br i1 %tobool, label %if.end, label %if.then, !dbg !5219

if.then:                                          ; preds = %entry
  %problem_data3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !5220
  store i8* null, i8** %problem_data3, align 8, !dbg !5222
  br label %cleanup.cont, !dbg !5223

if.end:                                           ; preds = %entry
  store i8 1, i8* %solutions_dirty, align 1, !dbg !5224
  %call = tail call i8* @xmalloc(i64 16) #6, !dbg !5225
  call void @llvm.dbg.value(metadata i8* %call, metadata !5215, metadata !DIExpression()), !dbg !5226
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5227
  %arrayidx8 = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 1, !dbg !5227
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !5227
  %problem_data9 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 5, !dbg !5228
  store i8* %call, i8** %problem_data9, align 8, !dbg !5229
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5230
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !5230
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5230
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 5, !dbg !5230
  %7 = load i32, i32* %x_last_basic_block, align 8, !dbg !5230
  %conv = sext i32 %7 to i64, !dbg !5230
  %mul = shl nsw i64 %conv, 3, !dbg !5230
  %call10 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !5230
  %8 = bitcast i8* %call to i8**, !dbg !5231
  store i8* %call10, i8** %8, align 8, !dbg !5231
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5232
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !5232
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !5232
  %x_last_basic_block13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 5, !dbg !5232
  %11 = load i32, i32* %x_last_basic_block13, align 8, !dbg !5232
  %conv14 = sext i32 %11 to i64, !dbg !5232
  %mul15 = shl nsw i64 %conv14, 3, !dbg !5232
  %call16 = tail call i8* @xmalloc(i64 %mul15) #6, !dbg !5232
  %out = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5233
  %12 = bitcast i8* %out to i8**, !dbg !5234
  store i8* %call16, i8** %12, align 8, !dbg !5234
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5235
  %cfg18 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !5235
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18, align 8, !dbg !5235
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 0, !dbg !5235
  %in21 = bitcast i8* %call to %struct.bitmap_head_def***, !dbg !5237
  %15 = bitcast i8* %out to %struct.bitmap_head_def***, !dbg !5237
  br label %for.cond, !dbg !5235

for.cond:                                         ; preds = %for.body, %if.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.end ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5240
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5214, metadata !DIExpression()), !dbg !5226
  %tobool19 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !5235
  br i1 %tobool19, label %cleanup.cont.loopexit, label %for.body, !dbg !5235

for.body:                                         ; preds = %for.cond
  %call20 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5241
  %16 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in21, align 8, !dbg !5242
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !5243
  %17 = load i32, i32* %index, align 8, !dbg !5243
  %idxprom = sext i32 %17 to i64, !dbg !5244
  %arrayidx22 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %16, i64 %idxprom, !dbg !5244
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %arrayidx22, align 8, !dbg !5245
  %call23 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5246
  %18 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %15, align 8, !dbg !5247
  %19 = load i32, i32* %index, align 8, !dbg !5248
  %idxprom26 = sext i32 %19 to i64, !dbg !5249
  %arrayidx27 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %18, i64 %idxprom26, !dbg !5249
  store %struct.bitmap_head_def* %call23, %struct.bitmap_head_def** %arrayidx27, align 8, !dbg !5250
  %20 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in21, align 8, !dbg !5251
  %21 = load i32, i32* %index, align 8, !dbg !5252
  %idxprom30 = sext i32 %21 to i64, !dbg !5253
  %arrayidx31 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %20, i64 %idxprom30, !dbg !5253
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx31, align 8, !dbg !5253
  %call33 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %21) #7, !dbg !5254
  %in34 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call33, i64 0, i32 2, !dbg !5254
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in34, align 8, !dbg !5254
  tail call void @bitmap_copy(%struct.bitmap_head_def* %22, %struct.bitmap_head_def* %23) #6, !dbg !5255
  %24 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %15, align 8, !dbg !5256
  %25 = load i32, i32* %index, align 8, !dbg !5257
  %idxprom37 = sext i32 %25 to i64, !dbg !5258
  %arrayidx38 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %24, i64 %idxprom37, !dbg !5258
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx38, align 8, !dbg !5258
  %call40 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %25) #7, !dbg !5259
  %out41 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call40, i64 0, i32 3, !dbg !5259
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out41, align 8, !dbg !5259
  tail call void @bitmap_copy(%struct.bitmap_head_def* %26, %struct.bitmap_head_def* %27) #6, !dbg !5260
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !5261
  br label %for.cond, !dbg !5261, !llvm.loop !5262

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !5264

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then
  ret void, !dbg !5264
}

; Function Attrs: nounwind uwtable
define internal void @df_lr_verify_solution_end() #4 !dbg !5265 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5269
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !5269
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5269
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !5271
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !5271
  %cmp = icmp eq i8* %2, null, !dbg !5272
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !5273

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %2, metadata !5267, metadata !DIExpression()), !dbg !5274
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 8, !dbg !5275
  %3 = load i8, i8* %solutions_dirty, align 1, !dbg !5275
  %tobool = icmp eq i8 %3, 0, !dbg !5277
  br i1 %tobool, label %if.else, label %if.then7, !dbg !5278

if.then7:                                         ; preds = %if.end
  store i8 0, i8* %solutions_dirty, align 1, !dbg !5279
  br label %if.end27, !dbg !5280

if.else:                                          ; preds = %if.end
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5281
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !5281
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5281
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 0, !dbg !5281
  %in = bitcast i8* %2 to %struct.bitmap_head_def***, !dbg !5283
  %out = getelementptr inbounds i8, i8* %2, i64 8, !dbg !5283
  %6 = bitcast i8* %out to %struct.bitmap_head_def***, !dbg !5283
  br label %for.cond, !dbg !5281

for.cond:                                         ; preds = %for.inc, %if.else
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.else ], [ %next_bb, %for.inc ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5287
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5268, metadata !DIExpression()), !dbg !5274
  %tobool11 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !5281
  br i1 %tobool11, label %if.end27.loopexit, label %for.body, !dbg !5281

for.body:                                         ; preds = %for.cond
  %7 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in, align 8, !dbg !5288
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !5289
  %8 = load i32, i32* %index, align 8, !dbg !5289
  %idxprom = sext i32 %8 to i64, !dbg !5290
  %arrayidx12 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, i64 %idxprom, !dbg !5290
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx12, align 8, !dbg !5290
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %8) #7, !dbg !5291
  %in14 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 2, !dbg !5291
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in14, align 8, !dbg !5291
  %call15 = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %9, %struct.bitmap_head_def* %10) #6, !dbg !5292
  %tobool16 = icmp eq i8 %call15, 0, !dbg !5292
  br i1 %tobool16, label %if.then25, label %lor.lhs.false, !dbg !5293

lor.lhs.false:                                    ; preds = %for.body
  %11 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %6, align 8, !dbg !5294
  %12 = load i32, i32* %index, align 8, !dbg !5295
  %idxprom18 = sext i32 %12 to i64, !dbg !5296
  %arrayidx19 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %11, i64 %idxprom18, !dbg !5296
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx19, align 8, !dbg !5296
  %call21 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %12) #7, !dbg !5297
  %out22 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call21, i64 0, i32 3, !dbg !5297
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out22, align 8, !dbg !5297
  %call23 = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %13, %struct.bitmap_head_def* %14) #6, !dbg !5298
  %tobool24 = icmp eq i8 %call23, 0, !dbg !5298
  br i1 %tobool24, label %if.then25, label %for.inc, !dbg !5299

if.then25:                                        ; preds = %lor.lhs.false, %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1203, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5300
  br label %for.inc, !dbg !5302

for.inc:                                          ; preds = %lor.lhs.false, %if.then25
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !5303
  br label %for.cond, !dbg !5303, !llvm.loop !5304

if.end27.loopexit:                                ; preds = %for.cond
  br label %if.end27, !dbg !5306

if.end27:                                         ; preds = %if.end27.loopexit, %if.then7
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5306
  %cfg29 = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, i32 1, !dbg !5306
  %16 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg29, align 8, !dbg !5306
  %x_entry_block_ptr30 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %16, i64 0, i32 0, !dbg !5306
  %in34 = bitcast i8* %2 to %struct.bitmap_head_def***, !dbg !5274
  %out42 = getelementptr inbounds i8, i8* %2, i64 8, !dbg !5308
  %17 = bitcast i8* %out42 to %struct.bitmap_head_def***, !dbg !5308
  br label %for.cond31, !dbg !5306

for.cond31:                                       ; preds = %for.body33, %if.end27
  %bb.1.in = phi %struct.basic_block_def** [ %x_entry_block_ptr30, %if.end27 ], [ %next_bb51, %for.body33 ]
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !5311
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !5268, metadata !DIExpression()), !dbg !5274
  %tobool32 = icmp eq %struct.basic_block_def* %bb.1, null, !dbg !5306
  %18 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in34, align 8, !dbg !5274
  br i1 %tobool32, label %for.end52, label %for.body33, !dbg !5306

for.body33:                                       ; preds = %for.cond31
  %index35 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5312
  %19 = load i32, i32* %index35, align 8, !dbg !5312
  %idxprom36 = sext i32 %19 to i64, !dbg !5312
  %arrayidx37 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %18, i64 %idxprom36, !dbg !5312
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx37, align 8, !dbg !5312
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %20) #6, !dbg !5312
  %21 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in34, align 8, !dbg !5312
  %22 = load i32, i32* %index35, align 8, !dbg !5312
  %idxprom40 = sext i32 %22 to i64, !dbg !5312
  %arrayidx41 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %21, i64 %idxprom40, !dbg !5312
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx41, align 8, !dbg !5312
  %23 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %17, align 8, !dbg !5313
  %24 = load i32, i32* %index35, align 8, !dbg !5313
  %idxprom44 = sext i32 %24 to i64, !dbg !5313
  %arrayidx45 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %23, i64 %idxprom44, !dbg !5313
  %25 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx45, align 8, !dbg !5313
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %25) #6, !dbg !5313
  %26 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %17, align 8, !dbg !5313
  %27 = load i32, i32* %index35, align 8, !dbg !5313
  %idxprom48 = sext i32 %27 to i64, !dbg !5313
  %arrayidx49 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %26, i64 %idxprom48, !dbg !5313
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx49, align 8, !dbg !5313
  %next_bb51 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 6, !dbg !5314
  br label %for.cond31, !dbg !5314, !llvm.loop !5315

for.end52:                                        ; preds = %for.cond31
  %.lcssa = phi %struct.bitmap_head_def** [ %18, %for.cond31 ], !dbg !5274
  %28 = bitcast %struct.bitmap_head_def** %.lcssa to i8*, !dbg !5317
  tail call void @free(i8* %28) #6, !dbg !5318
  %29 = bitcast i8* %out42 to i8**, !dbg !5319
  %30 = load i8*, i8** %29, align 8, !dbg !5319
  tail call void @free(i8* %30) #6, !dbg !5320
  tail call void @free(i8* nonnull %2) #6, !dbg !5321
  %31 = load %struct.df*, %struct.df** @df, align 8, !dbg !5322
  %arrayidx56 = getelementptr inbounds %struct.df, %struct.df* %31, i64 0, i32 1, i64 1, !dbg !5322
  %32 = load %struct.dataflow*, %struct.dataflow** %arrayidx56, align 8, !dbg !5322
  %problem_data57 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %32, i64 0, i32 5, !dbg !5323
  store i8* null, i8** %problem_data57, align 8, !dbg !5324
  br label %cleanup.cont, !dbg !5325

cleanup.cont:                                     ; preds = %for.end52, %entry
  ret void, !dbg !5325
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_lr_set_bb_info(i32 %index, %struct.df_lr_bb_info* %bb_info) unnamed_addr #4 !dbg !5326 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !5330, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %bb_info, metadata !5331, metadata !DIExpression()), !dbg !5332
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5333
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !5333
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5333
  %tobool = icmp eq %struct.dataflow* %1, null, !dbg !5333
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5333

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 745, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5333
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !5334
  %arrayidx2.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 1, !dbg !5332
  %.pre1 = load %struct.dataflow*, %struct.dataflow** %arrayidx2.phi.trans.insert, align 8, !dbg !5334
  br label %cond.end, !dbg !5333

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.dataflow* [ %1, %entry ], [ %.pre1, %cond.true ], !dbg !5334
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i64 0, i32 2, !dbg !5334
  %3 = load i32, i32* %block_info_size, align 8, !dbg !5334
  %cmp = icmp ugt i32 %3, %index, !dbg !5334
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !5334

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 746, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5334
  %.pre2 = load %struct.df*, %struct.df** @df, align 8, !dbg !5335
  %arrayidx8.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre2, i64 0, i32 1, i64 1, !dbg !5332
  %.pre3 = load %struct.dataflow*, %struct.dataflow** %arrayidx8.phi.trans.insert, align 8, !dbg !5335
  br label %cond.end5, !dbg !5334

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %4 = phi %struct.dataflow* [ %2, %cond.end ], [ %.pre3, %cond.true3 ], !dbg !5335
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 1, !dbg !5336
  %5 = load i8**, i8*** %block_info, align 8, !dbg !5336
  %idxprom = zext i32 %index to i64, !dbg !5335
  %arrayidx9 = getelementptr inbounds i8*, i8** %5, i64 %idxprom, !dbg !5335
  %6 = bitcast i8** %arrayidx9 to %struct.df_lr_bb_info**, !dbg !5337
  store %struct.df_lr_bb_info* %bb_info, %struct.df_lr_bb_info** %6, align 8, !dbg !5337
  ret void, !dbg !5338
}

declare dso_local zeroext i8 @bitmap_ior_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @run_fast_df_dce() local_unnamed_addr #1

declare dso_local i32 @df_clear_flags(i32) local_unnamed_addr #1

declare dso_local i32 @df_set_flags(i32) local_unnamed_addr #1

declare dso_local void @df_print_regset(%struct._IO_FILE*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @df_recompute_luids(%struct.basic_block_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @df_live_alloc(%struct.bitmap_head_def* %all_blocks) #4 !dbg !5339 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !5341, metadata !DIExpression()), !dbg !5348
  %0 = bitcast i32* %bb_index to i8*, !dbg !5349
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5349
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5350
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5350
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !5351
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 2, !dbg !5351
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5351
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 3, !dbg !5353
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5353
  %tobool = icmp eq %struct.alloc_pool_def* %4, null, !dbg !5351
  br i1 %tobool, label %if.then, label %if.end, !dbg !5354

if.then:                                          ; preds = %entry
  %call = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.29, i64 0, i64 0), i64 32, i64 100) #6, !dbg !5355
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !5356
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 1, i64 2, !dbg !5356
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5356
  %block_pool3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i64 0, i32 3, !dbg !5357
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool3, align 8, !dbg !5358
  br label %if.end, !dbg !5356

if.end:                                           ; preds = %entry, %if.then
  %7 = phi %struct.df* [ %2, %entry ], [ %5, %if.then ]
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !5359
  %tobool4 = icmp eq %struct.bitmap_head_def* %8, null, !dbg !5359
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !5361

if.then5:                                         ; preds = %if.end
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5362
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !5363
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !5364
  br label %if.end7, !dbg !5365

if.end7:                                          ; preds = %if.end, %if.then5
  %9 = phi %struct.df* [ %7, %if.end ], [ %.pre, %if.then5 ], !dbg !5364
  %arrayidx9 = getelementptr inbounds %struct.df, %struct.df* %9, i64 0, i32 1, i64 2, !dbg !5364
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx9, align 8, !dbg !5364
  tail call void @df_grow_bb_info(%struct.dataflow* %10) #7, !dbg !5366
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !5367
  %arrayidx11 = getelementptr inbounds %struct.df, %struct.df* %11, i64 0, i32 1, i64 2, !dbg !5367
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx11, align 8, !dbg !5367
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i64 0, i32 4, !dbg !5367
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5367
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5342, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5343, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %13, i32 0, i32* nonnull %bb_index) #7, !dbg !5367
  br label %for.cond, !dbg !5367

for.cond:                                         ; preds = %for.inc, %if.end7
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5342, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5343, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  %call12 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5368
  %tobool13 = icmp eq i8 %call12, 0, !dbg !5367
  br i1 %tobool13, label %for.end, label %for.body, !dbg !5367

for.body:                                         ; preds = %for.cond
  %14 = load i32, i32* %bb_index, align 4, !dbg !5369
  call void @llvm.dbg.value(metadata i32 %14, metadata !5342, metadata !DIExpression()), !dbg !5348
  %call14 = call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %14) #7, !dbg !5370
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call14, metadata !5344, metadata !DIExpression()), !dbg !5371
  %tobool15 = icmp eq %struct.df_live_bb_info* %call14, null, !dbg !5372
  br i1 %tobool15, label %if.else, label %if.then16, !dbg !5374

if.then16:                                        ; preds = %for.body
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call14, i64 0, i32 0, !dbg !5375
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !5375
  call void @bitmap_clear(%struct.bitmap_head_def* %15) #6, !dbg !5377
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call14, i64 0, i32 1, !dbg !5378
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !5378
  call void @bitmap_clear(%struct.bitmap_head_def* %16) #6, !dbg !5379
  br label %for.inc, !dbg !5380

if.else:                                          ; preds = %for.body
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !5381
  %arrayidx18 = getelementptr inbounds %struct.df, %struct.df* %17, i64 0, i32 1, i64 2, !dbg !5381
  %18 = load %struct.dataflow*, %struct.dataflow** %arrayidx18, align 8, !dbg !5381
  %block_pool19 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %18, i64 0, i32 3, !dbg !5383
  %19 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool19, align 8, !dbg !5383
  %call20 = call i8* @pool_alloc(%struct.alloc_pool_def* %19) #6, !dbg !5384
  %20 = bitcast i8* %call20 to %struct.df_live_bb_info*, !dbg !5385
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %20, metadata !5344, metadata !DIExpression()), !dbg !5371
  %21 = load i32, i32* %bb_index, align 4, !dbg !5386
  call void @llvm.dbg.value(metadata i32 %21, metadata !5342, metadata !DIExpression()), !dbg !5348
  call fastcc void @df_live_set_bb_info(i32 %21, %struct.df_live_bb_info* %20) #7, !dbg !5387
  %call21 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5388
  %kill22 = bitcast i8* %call20 to %struct.bitmap_head_def**, !dbg !5389
  store %struct.bitmap_head_def* %call21, %struct.bitmap_head_def** %kill22, align 8, !dbg !5390
  %call23 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5391
  %gen24 = getelementptr inbounds i8, i8* %call20, i64 8, !dbg !5392
  %22 = bitcast i8* %gen24 to %struct.bitmap_head_def**, !dbg !5392
  store %struct.bitmap_head_def* %call23, %struct.bitmap_head_def** %22, align 8, !dbg !5393
  %call25 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5394
  %in = getelementptr inbounds i8, i8* %call20, i64 16, !dbg !5395
  %23 = bitcast i8* %in to %struct.bitmap_head_def**, !dbg !5395
  store %struct.bitmap_head_def* %call25, %struct.bitmap_head_def** %23, align 8, !dbg !5396
  %call26 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5397
  %out = getelementptr inbounds i8, i8* %call20, i64 24, !dbg !5398
  %24 = bitcast i8* %out to %struct.bitmap_head_def**, !dbg !5398
  store %struct.bitmap_head_def* %call26, %struct.bitmap_head_def** %24, align 8, !dbg !5399
  br label %for.inc

for.inc:                                          ; preds = %if.then16, %if.else
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5342, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5343, metadata !DIExpression(DW_OP_deref)), !dbg !5348
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5368
  br label %for.cond, !dbg !5368, !llvm.loop !5400

for.end:                                          ; preds = %for.cond
  %25 = load i32, i32* @optimize, align 4, !dbg !5402
  %cmp = icmp slt i32 %25, 2, !dbg !5403
  %conv28 = zext i1 %cmp to i8, !dbg !5404
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !5405
  %arrayidx30 = getelementptr inbounds %struct.df, %struct.df* %26, i64 0, i32 1, i64 2, !dbg !5405
  %27 = load %struct.dataflow*, %struct.dataflow** %arrayidx30, align 8, !dbg !5405
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %27, i64 0, i32 9, !dbg !5406
  store i8 %conv28, i8* %optional_p, align 2, !dbg !5407
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5408
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5408
  ret void, !dbg !5408
}

; Function Attrs: nounwind uwtable
define internal void @df_live_reset(%struct.bitmap_head_def* %all_blocks) #4 !dbg !5409 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !5411, metadata !DIExpression()), !dbg !5418
  %0 = bitcast i32* %bb_index to i8*, !dbg !5419
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5419
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5420
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5420
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5412, metadata !DIExpression(DW_OP_deref)), !dbg !5418
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5413, metadata !DIExpression(DW_OP_deref)), !dbg !5418
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !5421
  br label %for.cond, !dbg !5421

for.cond:                                         ; preds = %cond.end, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5412, metadata !DIExpression(DW_OP_deref)), !dbg !5418
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5413, metadata !DIExpression(DW_OP_deref)), !dbg !5418
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5422
  %tobool = icmp eq i8 %call, 0, !dbg !5421
  br i1 %tobool, label %for.end, label %for.body, !dbg !5421

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !5423
  call void @llvm.dbg.value(metadata i32 %2, metadata !5412, metadata !DIExpression()), !dbg !5418
  %call1 = call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %2) #7, !dbg !5424
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call1, metadata !5414, metadata !DIExpression()), !dbg !5425
  %tobool2 = icmp eq %struct.df_live_bb_info* %call1, null, !dbg !5426
  br i1 %tobool2, label %cond.true, label %cond.end, !dbg !5426

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1447, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5426
  br label %cond.end, !dbg !5426

cond.end:                                         ; preds = %for.body, %cond.true
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call1, i64 0, i32 2, !dbg !5427
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5427
  call void @bitmap_clear(%struct.bitmap_head_def* %3) #6, !dbg !5428
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call1, i64 0, i32 3, !dbg !5429
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5429
  call void @bitmap_clear(%struct.bitmap_head_def* %4) #6, !dbg !5430
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5412, metadata !DIExpression(DW_OP_deref)), !dbg !5418
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5413, metadata !DIExpression(DW_OP_deref)), !dbg !5418
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5422
  br label %for.cond, !dbg !5422, !llvm.loop !5431

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5433
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5433
  ret void, !dbg !5433
}

; Function Attrs: nounwind uwtable
define internal void @df_live_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #4 !dbg !5434 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5436, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !5437, metadata !DIExpression()), !dbg !5439
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !5438, metadata !DIExpression()), !dbg !5439
  %tobool = icmp eq i8* %vbb_info, null, !dbg !5440
  br i1 %tobool, label %if.end, label %if.then, !dbg !5442

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !5438, metadata !DIExpression()), !dbg !5439
  %gen = getelementptr inbounds i8, i8* %vbb_info, i64 8, !dbg !5443
  %0 = bitcast i8* %gen to %struct.bitmap_head_def**, !dbg !5443
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, align 8, !dbg !5443
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !5443
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %0, align 8, !dbg !5443
  %kill = bitcast i8* %vbb_info to %struct.bitmap_head_def**, !dbg !5445
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !5445
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !5445
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill, align 8, !dbg !5445
  %in = getelementptr inbounds i8, i8* %vbb_info, i64 16, !dbg !5446
  %3 = bitcast i8* %in to %struct.bitmap_head_def**, !dbg !5446
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, align 8, !dbg !5446
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !5446
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %3, align 8, !dbg !5446
  %out = getelementptr inbounds i8, i8* %vbb_info, i64 24, !dbg !5447
  %5 = bitcast i8* %out to %struct.bitmap_head_def**, !dbg !5447
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %5, align 8, !dbg !5447
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !5447
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %5, align 8, !dbg !5447
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !5448
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 1, i64 2, !dbg !5448
  %8 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5448
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %8, i64 0, i32 3, !dbg !5449
  %9 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5449
  tail call void @pool_free(%struct.alloc_pool_def* %9, i8* nonnull %vbb_info) #6, !dbg !5450
  br label %if.end, !dbg !5451

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !5452
}

; Function Attrs: nounwind uwtable
define internal void @df_live_local_compute(%struct.bitmap_head_def* %all_blocks) #4 !dbg !5453 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !5455, metadata !DIExpression()), !dbg !5458
  %0 = bitcast i32* %bb_index to i8*, !dbg !5459
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5459
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5460
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5460
  tail call void @df_grow_insn_info() #6, !dbg !5461
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !5462
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 2, !dbg !5462
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5462
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 4, !dbg !5462
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5462
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5456, metadata !DIExpression(DW_OP_deref)), !dbg !5458
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5457, metadata !DIExpression(DW_OP_deref)), !dbg !5458
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %4, i32 0, i32* nonnull %bb_index) #7, !dbg !5462
  br label %for.cond, !dbg !5462

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5456, metadata !DIExpression(DW_OP_deref)), !dbg !5458
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5457, metadata !DIExpression(DW_OP_deref)), !dbg !5458
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5464
  %tobool = icmp eq i8 %call, 0, !dbg !5462
  br i1 %tobool, label %for.end, label %for.body, !dbg !5462

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %bb_index, align 4, !dbg !5466
  call void @llvm.dbg.value(metadata i32 %5, metadata !5456, metadata !DIExpression()), !dbg !5458
  call fastcc void @df_live_bb_local_compute(i32 %5) #7, !dbg !5468
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5456, metadata !DIExpression(DW_OP_deref)), !dbg !5458
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5457, metadata !DIExpression(DW_OP_deref)), !dbg !5458
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5464
  br label %for.cond, !dbg !5464, !llvm.loop !5469

for.end:                                          ; preds = %for.cond
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !5471
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %6, i64 0, i32 1, i64 2, !dbg !5471
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5471
  %out_of_date_transfer_functions3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %7, i64 0, i32 4, !dbg !5472
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions3, align 8, !dbg !5472
  call void @bitmap_clear(%struct.bitmap_head_def* %8) #6, !dbg !5473
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5474
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5474
  ret void, !dbg !5474
}

; Function Attrs: nounwind uwtable
define internal void @df_live_init(%struct.bitmap_head_def* %all_blocks) #4 !dbg !5475 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !5477, metadata !DIExpression()), !dbg !5485
  %0 = bitcast i32* %bb_index to i8*, !dbg !5486
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5486
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5487
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5487
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5478, metadata !DIExpression(DW_OP_deref)), !dbg !5485
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5479, metadata !DIExpression(DW_OP_deref)), !dbg !5485
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !5488
  br label %for.cond, !dbg !5488

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5478, metadata !DIExpression(DW_OP_deref)), !dbg !5485
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5479, metadata !DIExpression(DW_OP_deref)), !dbg !5485
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5489
  %tobool = icmp eq i8 %call, 0, !dbg !5488
  br i1 %tobool, label %for.end, label %for.body, !dbg !5488

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !5490
  call void @llvm.dbg.value(metadata i32 %2, metadata !5478, metadata !DIExpression()), !dbg !5485
  %call1 = call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %2) #7, !dbg !5491
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call1, metadata !5480, metadata !DIExpression()), !dbg !5492
  %3 = load i32, i32* %bb_index, align 4, !dbg !5493
  call void @llvm.dbg.value(metadata i32 %3, metadata !5478, metadata !DIExpression()), !dbg !5485
  %call2 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %3) #7, !dbg !5494
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call2, metadata !5484, metadata !DIExpression()), !dbg !5492
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call1, i64 0, i32 3, !dbg !5495
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5495
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call1, i64 0, i32 1, !dbg !5496
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !5496
  %out3 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call2, i64 0, i32 3, !dbg !5497
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out3, align 8, !dbg !5497
  call void @bitmap_and(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %5, %struct.bitmap_head_def* %6) #6, !dbg !5498
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call1, i64 0, i32 2, !dbg !5499
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5499
  call void @bitmap_clear(%struct.bitmap_head_def* %7) #6, !dbg !5500
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5478, metadata !DIExpression(DW_OP_deref)), !dbg !5485
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5479, metadata !DIExpression(DW_OP_deref)), !dbg !5485
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5489
  br label %for.cond, !dbg !5489, !llvm.loop !5501

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5503
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5503
  ret void, !dbg !5503
}

; Function Attrs: nounwind uwtable
define internal void @df_live_confluence_n(%struct.edge_def* %e) #4 !dbg !5504 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !5506, metadata !DIExpression()), !dbg !5509
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !5510
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !5510
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !5511
  %1 = load i32, i32* %index, align 8, !dbg !5511
  %call = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %1) #7, !dbg !5512
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 2, !dbg !5513
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5513
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !5507, metadata !DIExpression()), !dbg !5509
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !5514
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !5514
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !5515
  %4 = load i32, i32* %index1, align 8, !dbg !5515
  %call2 = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %4) #7, !dbg !5516
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* undef, metadata !5508, metadata !DIExpression()), !dbg !5509
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !5517
  %5 = load i32, i32* %flags, align 8, !dbg !5517
  %and = and i32 %5, 16, !dbg !5519
  %tobool = icmp eq i32 %and, 0, !dbg !5519
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !5520

if.end:                                           ; preds = %entry
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call2, i64 0, i32 3, !dbg !5521
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5521
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !5508, metadata !DIExpression()), !dbg !5509
  %call3 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %6) #6, !dbg !5522
  br label %cleanup.cont, !dbg !5523

cleanup.cont:                                     ; preds = %entry, %if.end
  ret void, !dbg !5523
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @df_live_transfer_function(i32 %bb_index) #4 !dbg !5524 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !5526, metadata !DIExpression()), !dbg !5533
  %call = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %bb_index) #7, !dbg !5534
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call, metadata !5527, metadata !DIExpression()), !dbg !5533
  %call1 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %bb_index) #7, !dbg !5535
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call1, metadata !5528, metadata !DIExpression()), !dbg !5533
  %in2 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 2, !dbg !5536
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in2, align 8, !dbg !5536
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %0, metadata !5529, metadata !DIExpression()), !dbg !5533
  %out3 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 3, !dbg !5537
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out3, align 8, !dbg !5537
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %1, metadata !5530, metadata !DIExpression()), !dbg !5533
  %gen4 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 1, !dbg !5538
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen4, align 8, !dbg !5538
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !5531, metadata !DIExpression()), !dbg !5533
  %kill5 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 0, !dbg !5539
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill5, align 8, !dbg !5539
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %3, metadata !5532, metadata !DIExpression()), !dbg !5533
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !5540
  %out6 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call1, i64 0, i32 3, !dbg !5541
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out6, align 8, !dbg !5541
  tail call void @bitmap_and(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %2, %struct.bitmap_head_def* %5) #6, !dbg !5542
  %in7 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call1, i64 0, i32 2, !dbg !5543
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in7, align 8, !dbg !5543
  tail call void @bitmap_and_into(%struct.bitmap_head_def* %0, %struct.bitmap_head_def* %6) #6, !dbg !5544
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !5545
  %call8 = tail call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %7, %struct.bitmap_head_def* %0, %struct.bitmap_head_def* %3) #6, !dbg !5546
  ret i8 %call8, !dbg !5547
}

; Function Attrs: nounwind uwtable
define internal void @df_live_finalize(%struct.bitmap_head_def* %all_blocks) #4 !dbg !5548 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_index = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !5550, metadata !DIExpression()), !dbg !5560
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5561
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 2, !dbg !5561
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5561
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 8, !dbg !5562
  %2 = load i8, i8* %solutions_dirty, align 1, !dbg !5562
  %tobool = icmp eq i8 %2, 0, !dbg !5561
  br i1 %tobool, label %if.end, label %if.then, !dbg !5563

if.then:                                          ; preds = %entry
  %3 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5564
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !5564
  %4 = bitcast i32* %bb_index to i8*, !dbg !5565
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8, !dbg !5565
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5551, metadata !DIExpression(DW_OP_deref)), !dbg !5566
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5554, metadata !DIExpression(DW_OP_deref)), !dbg !5566
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !5567
  br label %for.cond, !dbg !5567

for.cond:                                         ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5551, metadata !DIExpression(DW_OP_deref)), !dbg !5566
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5554, metadata !DIExpression(DW_OP_deref)), !dbg !5566
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5568
  %tobool1 = icmp eq i8 %call, 0, !dbg !5567
  br i1 %tobool1, label %for.end, label %for.body, !dbg !5567

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %bb_index, align 4, !dbg !5569
  call void @llvm.dbg.value(metadata i32 %5, metadata !5554, metadata !DIExpression()), !dbg !5566
  %call2 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %5) #7, !dbg !5570
  call void @llvm.dbg.value(metadata %struct.df_lr_bb_info* %call2, metadata !5555, metadata !DIExpression()), !dbg !5571
  %6 = load i32, i32* %bb_index, align 4, !dbg !5572
  call void @llvm.dbg.value(metadata i32 %6, metadata !5554, metadata !DIExpression()), !dbg !5566
  %call3 = call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %6) #7, !dbg !5573
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call3, metadata !5559, metadata !DIExpression()), !dbg !5571
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call3, i64 0, i32 2, !dbg !5574
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5574
  %in4 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call2, i64 0, i32 2, !dbg !5575
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in4, align 8, !dbg !5575
  call void @bitmap_and_into(%struct.bitmap_head_def* %7, %struct.bitmap_head_def* %8) #6, !dbg !5576
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call3, i64 0, i32 3, !dbg !5577
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5577
  %out5 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call2, i64 0, i32 3, !dbg !5578
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out5, align 8, !dbg !5578
  call void @bitmap_and_into(%struct.bitmap_head_def* %9, %struct.bitmap_head_def* %10) #6, !dbg !5579
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5551, metadata !DIExpression(DW_OP_deref)), !dbg !5566
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5554, metadata !DIExpression(DW_OP_deref)), !dbg !5566
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5568
  br label %for.cond, !dbg !5568, !llvm.loop !5580

for.end:                                          ; preds = %for.cond
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !5582
  %arrayidx7 = getelementptr inbounds %struct.df, %struct.df* %11, i64 0, i32 1, i64 2, !dbg !5582
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !5582
  %solutions_dirty8 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i64 0, i32 8, !dbg !5583
  store i8 0, i8* %solutions_dirty8, align 1, !dbg !5584
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8, !dbg !5585
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !5585
  br label %if.end, !dbg !5586

if.end:                                           ; preds = %entry, %for.end
  ret void, !dbg !5587
}

; Function Attrs: nounwind uwtable
define internal void @df_live_free() #4 !dbg !5588 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5597
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 2, !dbg !5597
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5597
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !5598
  %2 = load i8**, i8*** %block_info, align 8, !dbg !5598
  %tobool = icmp eq i8** %2, null, !dbg !5597
  br i1 %tobool, label %if.end20, label %for.cond.preheader, !dbg !5599

for.cond.preheader:                               ; preds = %entry
  br label %for.cond, !dbg !5600

for.cond:                                         ; preds = %for.cond.preheader, %for.inc
  %3 = phi %struct.dataflow* [ %.pre1, %for.inc ], [ %1, %for.cond.preheader ], !dbg !5601
  %i.0 = phi i32 [ %inc, %for.inc ], [ 0, %for.cond.preheader ], !dbg !5602
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5590, metadata !DIExpression()), !dbg !5603
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 2, !dbg !5604
  %4 = load i32, i32* %block_info_size, align 8, !dbg !5604
  %cmp = icmp ult i32 %i.0, %4, !dbg !5605
  br i1 %cmp, label %for.body, label %for.end, !dbg !5600

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %i.0) #7, !dbg !5606
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call, metadata !5593, metadata !DIExpression()), !dbg !5607
  %tobool3 = icmp eq %struct.df_live_bb_info* %call, null, !dbg !5608
  br i1 %tobool3, label %for.inc, label %if.then4, !dbg !5610

if.then4:                                         ; preds = %for.body
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 1, !dbg !5611
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !5611
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %5) #6, !dbg !5611
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %gen, align 8, !dbg !5611
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 0, !dbg !5613
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !5613
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !5613
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill, align 8, !dbg !5613
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 2, !dbg !5614
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5614
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %7) #6, !dbg !5614
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in, align 8, !dbg !5614
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 3, !dbg !5615
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5615
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %8) #6, !dbg !5615
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out, align 8, !dbg !5615
  br label %for.inc, !dbg !5616

for.inc:                                          ; preds = %for.body, %if.then4
  %inc = add i32 %i.0, 1, !dbg !5617
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5590, metadata !DIExpression()), !dbg !5603
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !5601
  %arrayidx2.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 2, !dbg !5618
  %.pre1 = load %struct.dataflow*, %struct.dataflow** %arrayidx2.phi.trans.insert, align 8, !dbg !5601
  br label %for.cond, !dbg !5619, !llvm.loop !5620

for.end:                                          ; preds = %for.cond
  %.lcssa = phi %struct.dataflow* [ %3, %for.cond ], !dbg !5601
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %.lcssa, i64 0, i32 3, !dbg !5622
  %9 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5622
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %9) #6, !dbg !5623
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !5624
  %arrayidx12 = getelementptr inbounds %struct.df, %struct.df* %10, i64 0, i32 1, i64 2, !dbg !5624
  %11 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !5624
  %block_info_size13 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i64 0, i32 2, !dbg !5625
  store i32 0, i32* %block_info_size13, align 8, !dbg !5626
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx12, align 8, !dbg !5627
  %block_info16 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i64 0, i32 1, !dbg !5628
  %13 = bitcast i8*** %block_info16 to i8**, !dbg !5628
  %14 = load i8*, i8** %13, align 8, !dbg !5628
  tail call void @free(i8* %14) #6, !dbg !5629
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !5630
  %tobool17 = icmp eq %struct.bitmap_head_def* %15, null, !dbg !5630
  br i1 %tobool17, label %if.end20, label %if.then18, !dbg !5632

if.then18:                                        ; preds = %for.end
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* nonnull %15) #6, !dbg !5633
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @df_live_scratch, align 8, !dbg !5633
  br label %if.end20, !dbg !5633

if.end20:                                         ; preds = %for.end, %entry, %if.then18
  %16 = load %struct.df*, %struct.df** @df, align 8, !dbg !5634
  %arrayidx22 = getelementptr inbounds %struct.df, %struct.df* %16, i64 0, i32 1, i64 2, !dbg !5634
  %17 = load %struct.dataflow*, %struct.dataflow** %arrayidx22, align 8, !dbg !5634
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %17, i64 0, i32 4, !dbg !5634
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5634
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %18) #6, !dbg !5634
  %19 = load %struct.df*, %struct.df** @df, align 8, !dbg !5634
  %arrayidx24 = getelementptr inbounds %struct.df, %struct.df* %19, i64 0, i32 1, i64 2, !dbg !5634
  %20 = load %struct.dataflow*, %struct.dataflow** %arrayidx24, align 8, !dbg !5634
  %out_of_date_transfer_functions25 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %20, i64 0, i32 4, !dbg !5634
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions25, align 8, !dbg !5634
  %21 = bitcast %struct.dataflow** %arrayidx24 to i8**, !dbg !5635
  %22 = load i8*, i8** %21, align 8, !dbg !5635
  tail call void @free(i8* %22) #6, !dbg !5636
  ret void, !dbg !5637
}

; Function Attrs: nounwind uwtable
define internal void @df_live_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !5638 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5640, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5641, metadata !DIExpression()), !dbg !5644
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5645
  %0 = load i32, i32* %index, align 8, !dbg !5645
  %call = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %0) #7, !dbg !5646
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call, metadata !5642, metadata !DIExpression()), !dbg !5644
  %tobool = icmp eq %struct.df_live_bb_info* %call, null, !dbg !5647
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !5649

lor.lhs.false:                                    ; preds = %entry
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 2, !dbg !5650
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5650
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !5651
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !5652

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.30, i64 0, i64 0)) #6, !dbg !5653
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5654
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2) #6, !dbg !5655
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5656
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 2, !dbg !5656
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5656
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 5, !dbg !5658
  %5 = load i8*, i8** %problem_data4, align 8, !dbg !5658
  %tobool5 = icmp eq i8* %5, null, !dbg !5656
  br i1 %tobool5, label %if.end14, label %if.then6, !dbg !5659

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %5, metadata !5643, metadata !DIExpression()), !dbg !5644
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i64 0, i64 0)) #6, !dbg !5660
  %in11 = bitcast i8* %5 to %struct.bitmap_head_def***, !dbg !5662
  %6 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in11, align 8, !dbg !5662
  %7 = load i32, i32* %index, align 8, !dbg !5663
  %idxprom = sext i32 %7 to i64, !dbg !5664
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %6, i64 %idxprom, !dbg !5664
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx13, align 8, !dbg !5664
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %8) #6, !dbg !5665
  br label %if.end14, !dbg !5666

if.end14:                                         ; preds = %if.end, %if.then6
  %call15 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i64 0, i64 0)) #6, !dbg !5667
  %gen = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 1, !dbg !5668
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !5668
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %9) #6, !dbg !5669
  %call16 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i64 0, i64 0)) #6, !dbg !5670
  %kill = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 0, !dbg !5671
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !5671
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %10) #6, !dbg !5672
  br label %cleanup.cont, !dbg !5673

cleanup.cont:                                     ; preds = %lor.lhs.false, %entry, %if.end14
  ret void, !dbg !5673
}

; Function Attrs: nounwind uwtable
define internal void @df_live_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !5674 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5676, metadata !DIExpression()), !dbg !5680
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5677, metadata !DIExpression()), !dbg !5680
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5681
  %0 = load i32, i32* %index, align 8, !dbg !5681
  %call = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %0) #7, !dbg !5682
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %call, metadata !5678, metadata !DIExpression()), !dbg !5680
  %tobool = icmp eq %struct.df_live_bb_info* %call, null, !dbg !5683
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !5685

lor.lhs.false:                                    ; preds = %entry
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 3, !dbg !5686
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5686
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !5687
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !5688

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i64 0, i64 0)) #6, !dbg !5689
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5690
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2) #6, !dbg !5691
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5692
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 2, !dbg !5692
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5692
  %problem_data4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 5, !dbg !5694
  %5 = load i8*, i8** %problem_data4, align 8, !dbg !5694
  %tobool5 = icmp eq i8* %5, null, !dbg !5692
  br i1 %tobool5, label %cleanup.cont, label %if.then6, !dbg !5695

if.then6:                                         ; preds = %if.end
  call void @llvm.dbg.value(metadata i8* %5, metadata !5679, metadata !DIExpression()), !dbg !5680
  %call10 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.28, i64 0, i64 0)) #6, !dbg !5696
  %out11 = getelementptr inbounds i8, i8* %5, i64 8, !dbg !5698
  %6 = bitcast i8* %out11 to %struct.bitmap_head_def***, !dbg !5698
  %7 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %6, align 8, !dbg !5698
  %8 = load i32, i32* %index, align 8, !dbg !5699
  %idxprom = sext i32 %8 to i64, !dbg !5700
  %arrayidx13 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, i64 %idxprom, !dbg !5700
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx13, align 8, !dbg !5700
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %9) #6, !dbg !5701
  br label %cleanup.cont, !dbg !5702

cleanup.cont:                                     ; preds = %if.end, %lor.lhs.false, %entry, %if.then6
  ret void, !dbg !5703
}

; Function Attrs: nounwind uwtable
define internal void @df_live_verify_solution_start() #4 !dbg !5704 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5708
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 2, !dbg !5708
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5708
  %solutions_dirty = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 8, !dbg !5710
  %2 = load i8, i8* %solutions_dirty, align 1, !dbg !5710
  %tobool = icmp eq i8 %2, 0, !dbg !5708
  br i1 %tobool, label %if.end, label %if.then, !dbg !5711

if.then:                                          ; preds = %entry
  %problem_data3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !5712
  store i8* null, i8** %problem_data3, align 8, !dbg !5714
  br label %cleanup.cont, !dbg !5715

if.end:                                           ; preds = %entry
  store i8 1, i8* %solutions_dirty, align 1, !dbg !5716
  %call = tail call i8* @xmalloc(i64 16) #6, !dbg !5717
  call void @llvm.dbg.value(metadata i8* %call, metadata !5707, metadata !DIExpression()), !dbg !5718
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5719
  %arrayidx8 = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 2, !dbg !5719
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx8, align 8, !dbg !5719
  %problem_data9 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 5, !dbg !5720
  store i8* %call, i8** %problem_data9, align 8, !dbg !5721
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5722
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !5722
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5722
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 5, !dbg !5722
  %7 = load i32, i32* %x_last_basic_block, align 8, !dbg !5722
  %conv = sext i32 %7 to i64, !dbg !5722
  %mul = shl nsw i64 %conv, 3, !dbg !5722
  %call10 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !5722
  %8 = bitcast i8* %call to i8**, !dbg !5723
  store i8* %call10, i8** %8, align 8, !dbg !5723
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5724
  %cfg12 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, i32 1, !dbg !5724
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg12, align 8, !dbg !5724
  %x_last_basic_block13 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i64 0, i32 5, !dbg !5724
  %11 = load i32, i32* %x_last_basic_block13, align 8, !dbg !5724
  %conv14 = sext i32 %11 to i64, !dbg !5724
  %mul15 = shl nsw i64 %conv14, 3, !dbg !5724
  %call16 = tail call i8* @xmalloc(i64 %mul15) #6, !dbg !5724
  %out = getelementptr inbounds i8, i8* %call, i64 8, !dbg !5725
  %12 = bitcast i8* %out to i8**, !dbg !5726
  store i8* %call16, i8** %12, align 8, !dbg !5726
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5727
  %cfg18 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, i32 1, !dbg !5727
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18, align 8, !dbg !5727
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i64 0, i32 0, !dbg !5727
  %in21 = bitcast i8* %call to %struct.bitmap_head_def***, !dbg !5729
  %15 = bitcast i8* %out to %struct.bitmap_head_def***, !dbg !5729
  br label %for.cond, !dbg !5727

for.cond:                                         ; preds = %for.body, %if.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.end ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5732
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5706, metadata !DIExpression()), !dbg !5718
  %tobool19 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !5727
  br i1 %tobool19, label %cleanup.cont.loopexit, label %for.body, !dbg !5727

for.body:                                         ; preds = %for.cond
  %call20 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5733
  %16 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in21, align 8, !dbg !5734
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !5735
  %17 = load i32, i32* %index, align 8, !dbg !5735
  %idxprom = sext i32 %17 to i64, !dbg !5736
  %arrayidx22 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %16, i64 %idxprom, !dbg !5736
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %arrayidx22, align 8, !dbg !5737
  %call23 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5738
  %18 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %15, align 8, !dbg !5739
  %19 = load i32, i32* %index, align 8, !dbg !5740
  %idxprom26 = sext i32 %19 to i64, !dbg !5741
  %arrayidx27 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %18, i64 %idxprom26, !dbg !5741
  store %struct.bitmap_head_def* %call23, %struct.bitmap_head_def** %arrayidx27, align 8, !dbg !5742
  %20 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in21, align 8, !dbg !5743
  %21 = load i32, i32* %index, align 8, !dbg !5744
  %idxprom30 = sext i32 %21 to i64, !dbg !5745
  %arrayidx31 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %20, i64 %idxprom30, !dbg !5745
  %22 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx31, align 8, !dbg !5745
  %call33 = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %21) #7, !dbg !5746
  %in34 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call33, i64 0, i32 2, !dbg !5746
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in34, align 8, !dbg !5746
  tail call void @bitmap_copy(%struct.bitmap_head_def* %22, %struct.bitmap_head_def* %23) #6, !dbg !5747
  %24 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %15, align 8, !dbg !5748
  %25 = load i32, i32* %index, align 8, !dbg !5749
  %idxprom37 = sext i32 %25 to i64, !dbg !5750
  %arrayidx38 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %24, i64 %idxprom37, !dbg !5750
  %26 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx38, align 8, !dbg !5750
  %call40 = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %25) #7, !dbg !5751
  %out41 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call40, i64 0, i32 3, !dbg !5751
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out41, align 8, !dbg !5751
  tail call void @bitmap_copy(%struct.bitmap_head_def* %26, %struct.bitmap_head_def* %27) #6, !dbg !5752
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !5753
  br label %for.cond, !dbg !5753, !llvm.loop !5754

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !5756

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.then
  ret void, !dbg !5756
}

; Function Attrs: nounwind uwtable
define internal void @df_live_verify_solution_end() #4 !dbg !5757 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5761
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 2, !dbg !5761
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5761
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !5763
  %2 = load i8*, i8** %problem_data1, align 8, !dbg !5763
  %cmp = icmp eq i8* %2, null, !dbg !5764
  br i1 %cmp, label %cleanup.cont, label %if.end, !dbg !5765

if.end:                                           ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %2, metadata !5759, metadata !DIExpression()), !dbg !5766
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5767
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !5767
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5767
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !5767
  %in = bitcast i8* %2 to %struct.bitmap_head_def***, !dbg !5769
  %out = getelementptr inbounds i8, i8* %2, i64 8, !dbg !5769
  %5 = bitcast i8* %out to %struct.bitmap_head_def***, !dbg !5769
  br label %for.cond, !dbg !5767

for.cond:                                         ; preds = %for.inc, %if.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.end ], [ %next_bb, %for.inc ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5773
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5760, metadata !DIExpression()), !dbg !5766
  %tobool = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !5767
  br i1 %tobool, label %for.end, label %for.body, !dbg !5767

for.body:                                         ; preds = %for.cond
  %6 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in, align 8, !dbg !5774
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !5775
  %7 = load i32, i32* %index, align 8, !dbg !5775
  %idxprom = sext i32 %7 to i64, !dbg !5776
  %arrayidx5 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %6, i64 %idxprom, !dbg !5776
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx5, align 8, !dbg !5776
  %call = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %7) #7, !dbg !5777
  %in7 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call, i64 0, i32 2, !dbg !5777
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in7, align 8, !dbg !5777
  %call8 = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %8, %struct.bitmap_head_def* %9) #6, !dbg !5778
  %tobool9 = icmp eq i8 %call8, 0, !dbg !5778
  br i1 %tobool9, label %if.then18, label %lor.lhs.false, !dbg !5779

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %5, align 8, !dbg !5780
  %11 = load i32, i32* %index, align 8, !dbg !5781
  %idxprom11 = sext i32 %11 to i64, !dbg !5782
  %arrayidx12 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %10, i64 %idxprom11, !dbg !5782
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx12, align 8, !dbg !5782
  %call14 = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %11) #7, !dbg !5783
  %out15 = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call14, i64 0, i32 3, !dbg !5783
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out15, align 8, !dbg !5783
  %call16 = tail call zeroext i8 @bitmap_equal_p(%struct.bitmap_head_def* %12, %struct.bitmap_head_def* %13) #6, !dbg !5784
  %tobool17 = icmp eq i8 %call16, 0, !dbg !5784
  br i1 %tobool17, label %if.then18, label %for.inc, !dbg !5785

if.then18:                                        ; preds = %lor.lhs.false, %for.body
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1749, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5786
  br label %for.inc, !dbg !5788

for.inc:                                          ; preds = %lor.lhs.false, %if.then18
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !5789
  br label %for.cond, !dbg !5789, !llvm.loop !5790

for.end:                                          ; preds = %for.cond
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5792
  %cfg21 = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !5792
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg21, align 8, !dbg !5792
  %x_entry_block_ptr22 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 0, !dbg !5792
  br label %for.cond23, !dbg !5792

for.cond23:                                       ; preds = %for.body25, %for.end
  %bb.1.in = phi %struct.basic_block_def** [ %x_entry_block_ptr22, %for.end ], [ %next_bb43, %for.body25 ]
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !5794
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !5760, metadata !DIExpression()), !dbg !5766
  %tobool24 = icmp eq %struct.basic_block_def* %bb.1, null, !dbg !5792
  %16 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in, align 8, !dbg !5766
  br i1 %tobool24, label %for.end44, label %for.body25, !dbg !5792

for.body25:                                       ; preds = %for.cond23
  %index27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5795
  %17 = load i32, i32* %index27, align 8, !dbg !5795
  %idxprom28 = sext i32 %17 to i64, !dbg !5795
  %arrayidx29 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %16, i64 %idxprom28, !dbg !5795
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx29, align 8, !dbg !5795
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %18) #6, !dbg !5795
  %19 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %in, align 8, !dbg !5795
  %20 = load i32, i32* %index27, align 8, !dbg !5795
  %idxprom32 = sext i32 %20 to i64, !dbg !5795
  %arrayidx33 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %19, i64 %idxprom32, !dbg !5795
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx33, align 8, !dbg !5795
  %21 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %5, align 8, !dbg !5798
  %22 = load i32, i32* %index27, align 8, !dbg !5798
  %idxprom36 = sext i32 %22 to i64, !dbg !5798
  %arrayidx37 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %21, i64 %idxprom36, !dbg !5798
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx37, align 8, !dbg !5798
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %23) #6, !dbg !5798
  %24 = load %struct.bitmap_head_def**, %struct.bitmap_head_def*** %5, align 8, !dbg !5798
  %25 = load i32, i32* %index27, align 8, !dbg !5798
  %idxprom40 = sext i32 %25 to i64, !dbg !5798
  %arrayidx41 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %24, i64 %idxprom40, !dbg !5798
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx41, align 8, !dbg !5798
  %next_bb43 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 6, !dbg !5799
  br label %for.cond23, !dbg !5799, !llvm.loop !5800

for.end44:                                        ; preds = %for.cond23
  %.lcssa = phi %struct.bitmap_head_def** [ %16, %for.cond23 ], !dbg !5766
  %26 = bitcast %struct.bitmap_head_def** %.lcssa to i8*, !dbg !5802
  tail call void @free(i8* %26) #6, !dbg !5803
  %27 = bitcast i8* %out to i8**, !dbg !5804
  %28 = load i8*, i8** %27, align 8, !dbg !5804
  tail call void @free(i8* %28) #6, !dbg !5805
  tail call void @free(i8* nonnull %2) #6, !dbg !5806
  %29 = load %struct.df*, %struct.df** @df, align 8, !dbg !5807
  %arrayidx48 = getelementptr inbounds %struct.df, %struct.df* %29, i64 0, i32 1, i64 2, !dbg !5807
  %30 = load %struct.dataflow*, %struct.dataflow** %arrayidx48, align 8, !dbg !5807
  %problem_data49 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %30, i64 0, i32 5, !dbg !5808
  store i8* null, i8** %problem_data49, align 8, !dbg !5809
  br label %cleanup.cont, !dbg !5810

cleanup.cont:                                     ; preds = %for.end44, %entry
  ret void, !dbg !5810
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_live_set_bb_info(i32 %index, %struct.df_live_bb_info* %bb_info) unnamed_addr #4 !dbg !5811 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !5815, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.value(metadata %struct.df_live_bb_info* %bb_info, metadata !5816, metadata !DIExpression()), !dbg !5817
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5818
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 2, !dbg !5818
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5818
  %tobool = icmp eq %struct.dataflow* %1, null, !dbg !5818
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !5818

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5818
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !5819
  %arrayidx2.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 2, !dbg !5817
  %.pre1 = load %struct.dataflow*, %struct.dataflow** %arrayidx2.phi.trans.insert, align 8, !dbg !5819
  br label %cond.end, !dbg !5818

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.dataflow* [ %1, %entry ], [ %.pre1, %cond.true ], !dbg !5819
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i64 0, i32 2, !dbg !5819
  %3 = load i32, i32* %block_info_size, align 8, !dbg !5819
  %cmp = icmp ugt i32 %3, %index, !dbg !5819
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !5819

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 1374, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !5819
  %.pre2 = load %struct.df*, %struct.df** @df, align 8, !dbg !5820
  %arrayidx8.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre2, i64 0, i32 1, i64 2, !dbg !5817
  %.pre3 = load %struct.dataflow*, %struct.dataflow** %arrayidx8.phi.trans.insert, align 8, !dbg !5820
  br label %cond.end5, !dbg !5819

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %4 = phi %struct.dataflow* [ %2, %cond.end ], [ %.pre3, %cond.true3 ], !dbg !5820
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 1, !dbg !5821
  %5 = load i8**, i8*** %block_info, align 8, !dbg !5821
  %idxprom = zext i32 %index to i64, !dbg !5820
  %arrayidx9 = getelementptr inbounds i8*, i8** %5, i64 %idxprom, !dbg !5820
  %6 = bitcast i8** %arrayidx9 to %struct.df_live_bb_info**, !dbg !5822
  store %struct.df_live_bb_info* %bb_info, %struct.df_live_bb_info** %6, align 8, !dbg !5822
  ret void, !dbg !5823
}

declare dso_local void @bitmap_and(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local void @bitmap_and_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

declare dso_local %struct.df_insn_info* @df_insn_create_insn_record(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @df_chain_alloc(%struct.bitmap_head_def* %all_blocks) #4 !dbg !5824 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !5826, metadata !DIExpression()), !dbg !5827
  tail call fastcc void @df_chain_remove_problem() #7, !dbg !5828
  %call = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34, i64 0, i64 0), i64 16, i64 50) #6, !dbg !5829
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5830
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 4, !dbg !5830
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5830
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 3, !dbg !5831
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5832
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5833
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i64 0, i32 9, !dbg !5834
  store i8 1, i8* %optional_p, align 2, !dbg !5835
  ret void, !dbg !5836
}

; Function Attrs: nounwind uwtable
define internal void @df_chain_reset(%struct.bitmap_head_def* %blocks_to_clear) #4 !dbg !5837 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %blocks_to_clear, metadata !5839, metadata !DIExpression()), !dbg !5840
  tail call fastcc void @df_chain_remove_problem() #7, !dbg !5841
  ret void, !dbg !5842
}

; Function Attrs: nounwind uwtable
define internal void @df_chain_finalize(%struct.bitmap_head_def* %all_blocks) #4 !dbg !5843 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !5845, metadata !DIExpression()), !dbg !5848
  %0 = bitcast i32* %bb_index to i8*, !dbg !5849
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5849
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5850
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5850
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5846, metadata !DIExpression(DW_OP_deref)), !dbg !5848
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5847, metadata !DIExpression(DW_OP_deref)), !dbg !5848
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !5851
  br label %for.cond, !dbg !5851

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5846, metadata !DIExpression(DW_OP_deref)), !dbg !5848
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5847, metadata !DIExpression(DW_OP_deref)), !dbg !5848
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5853
  %tobool = icmp eq i8 %call, 0, !dbg !5851
  br i1 %tobool, label %for.end, label %for.body, !dbg !5851

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !5855
  call void @llvm.dbg.value(metadata i32 %2, metadata !5846, metadata !DIExpression()), !dbg !5848
  call fastcc void @df_chain_create_bb(i32 %2) #7, !dbg !5857
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !5846, metadata !DIExpression(DW_OP_deref)), !dbg !5848
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5847, metadata !DIExpression(DW_OP_deref)), !dbg !5848
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !5853
  br label %for.cond, !dbg !5853, !llvm.loop !5858

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !5860
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5860
  ret void, !dbg !5860
}

; Function Attrs: nounwind uwtable
define internal void @df_chain_free() #4 !dbg !5861 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5862
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 4, !dbg !5862
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5862
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 3, !dbg !5863
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !5863
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %2) #6, !dbg !5864
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5865
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 4, !dbg !5865
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5865
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 4, !dbg !5865
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5865
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %5) #6, !dbg !5865
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !5865
  %arrayidx4 = getelementptr inbounds %struct.df, %struct.df* %6, i64 0, i32 1, i64 4, !dbg !5865
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx4, align 8, !dbg !5865
  %out_of_date_transfer_functions5 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %7, i64 0, i32 4, !dbg !5865
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions5, align 8, !dbg !5865
  %8 = bitcast %struct.dataflow** %arrayidx4 to i8**, !dbg !5866
  %9 = load i8*, i8** %8, align 8, !dbg !5866
  tail call void @free(i8* %9) #6, !dbg !5867
  ret void, !dbg !5868
}

; Function Attrs: nounwind uwtable
define internal void @df_chain_fully_remove_problem() #4 !dbg !5869 {
entry:
  tail call fastcc void @df_chain_remove_problem() #7, !dbg !5870
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5871
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 4, !dbg !5871
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5871
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 4, !dbg !5871
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !5871
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !5871
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !5871
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 1, i64 4, !dbg !5871
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !5871
  %out_of_date_transfer_functions3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 4, !dbg !5871
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions3, align 8, !dbg !5871
  %5 = bitcast %struct.dataflow** %arrayidx2 to i8**, !dbg !5872
  %6 = load i8*, i8** %5, align 8, !dbg !5872
  tail call void @free(i8* %6) #6, !dbg !5873
  ret void, !dbg !5874
}

; Function Attrs: nounwind uwtable
define internal void @df_chain_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !5875 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5877, metadata !DIExpression()), !dbg !5897
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5878, metadata !DIExpression()), !dbg !5897
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5898
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 4, !dbg !5898
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5898
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 6, !dbg !5898
  %2 = load i32, i32* %local_flags, align 8, !dbg !5898
  %and = and i32 %2, 1, !dbg !5898
  %tobool = icmp eq i32 %and, 0, !dbg !5898
  br i1 %tobool, label %if.end61, label %if.then, !dbg !5899

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5900
  %3 = load i32, i32* %index, align 8, !dbg !5900
  %call = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %3) #7, !dbg !5901
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call, metadata !5882, metadata !DIExpression()), !dbg !5902
  %4 = load %union.df_ref_d*, %union.df_ref_d** %call, align 8, !dbg !5903
  %tobool1 = icmp eq %union.df_ref_d* %4, null, !dbg !5903
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !5904

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.35, i64 0, i64 0)) #6, !dbg !5905
  br label %while.cond, !dbg !5906

while.cond:                                       ; preds = %while.body, %if.then2
  %def_rec.0 = phi %union.df_ref_d** [ %call, %if.then2 ], [ %incdec.ptr, %while.body ], !dbg !5902
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !5882, metadata !DIExpression()), !dbg !5902
  %5 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !5907
  %tobool4 = icmp eq %union.df_ref_d* %5, null, !dbg !5906
  br i1 %tobool4, label %if.end.loopexit, label %while.body, !dbg !5906

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %5, metadata !5883, metadata !DIExpression()), !dbg !5908
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !5909
  %6 = load i32, i32* %regno, align 8, !dbg !5909
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i32 %6) #6, !dbg !5910
  %chain = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5911
  %7 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !5911
  tail call void @df_chain_dump(%struct.df_link* %7, %struct._IO_FILE* %file) #7, !dbg !5912
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5913
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !5914
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !5882, metadata !DIExpression()), !dbg !5902
  br label %while.cond, !dbg !5906, !llvm.loop !5915

if.end.loopexit:                                  ; preds = %while.cond
  br label %if.end, !dbg !5917

if.end:                                           ; preds = %if.end.loopexit, %if.then
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !5917
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5917
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5917
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 0, !dbg !5917
  br label %for.cond, !dbg !5917

for.cond:                                         ; preds = %for.inc, %if.end
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.end ], [ %rt_rtx60, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !5918
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5879, metadata !DIExpression()), !dbg !5902
  %tobool8 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5919
  br i1 %tobool8, label %if.end61.loopexit, label %land.rhs, !dbg !5919

land.rhs:                                         ; preds = %for.cond
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5919
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !5919
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5919
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5919
  %rt_rtx = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !5919
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5919
  %cmp = icmp eq %struct.rtx_def* %insn.0, %12, !dbg !5919
  br i1 %cmp, label %if.end61.loopexit, label %for.body, !dbg !5917

for.body:                                         ; preds = %land.rhs
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5920
  %bf.load = load i32, i32* %13, align 8, !dbg !5920
  %bf.clear = and i32 %bf.load, 65535, !dbg !5920
  %cmp12 = icmp eq i32 %bf.clear, 8, !dbg !5920
  br i1 %cmp12, label %if.then24, label %lor.lhs.false, !dbg !5920

lor.lhs.false:                                    ; preds = %for.body
  %cmp15 = icmp eq i32 %bf.clear, 7, !dbg !5920
  br i1 %cmp15, label %if.then24, label %lor.lhs.false16, !dbg !5920

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %cmp19 = icmp eq i32 %bf.clear, 9, !dbg !5920
  br i1 %cmp19, label %if.then24, label %lor.lhs.false20, !dbg !5920

lor.lhs.false20:                                  ; preds = %lor.lhs.false16
  %cmp23 = icmp eq i32 %bf.clear, 10, !dbg !5920
  br i1 %cmp23, label %if.then24, label %for.inc, !dbg !5921

if.then24:                                        ; preds = %lor.lhs.false20, %lor.lhs.false16, %lor.lhs.false, %for.body
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !5922
  %insns = getelementptr inbounds %struct.df, %struct.df* %14, i64 0, i32 10, !dbg !5922
  %15 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !5922
  %arrayidx27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5922
  %rt_int = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !5922
  %16 = load i32, i32* %rt_int, align 8, !dbg !5922
  %idxprom = sext i32 %16 to i64, !dbg !5922
  %arrayidx28 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %15, i64 %idxprom, !dbg !5922
  %17 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx28, align 8, !dbg !5922
  call void @llvm.dbg.value(metadata %struct.df_insn_info* %17, metadata !5887, metadata !DIExpression()), !dbg !5923
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %17, i64 0, i32 1, !dbg !5924
  %18 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !5924
  call void @llvm.dbg.value(metadata %union.df_ref_d** %18, metadata !5882, metadata !DIExpression()), !dbg !5902
  %19 = load %union.df_ref_d*, %union.df_ref_d** %18, align 8, !dbg !5925
  %tobool29 = icmp eq %union.df_ref_d* %19, null, !dbg !5925
  br i1 %tobool29, label %for.inc, label %if.then30, !dbg !5926

if.then30:                                        ; preds = %if.then24
  %luid = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %17, i64 0, i32 5, !dbg !5927
  %20 = load i32, i32* %luid, align 8, !dbg !5927
  %call35 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.37, i64 0, i64 0), i32 %20, i32 %16) #6, !dbg !5928
  br label %while.cond36, !dbg !5929

while.cond36:                                     ; preds = %if.end49, %if.then30
  %def_rec.1 = phi %union.df_ref_d** [ %18, %if.then30 ], [ %incdec.ptr53, %if.end49 ], !dbg !5923
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.1, metadata !5882, metadata !DIExpression()), !dbg !5902
  %21 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.1, align 8, !dbg !5930
  %tobool37 = icmp eq %union.df_ref_d* %21, null, !dbg !5929
  br i1 %tobool37, label %for.inc.loopexit, label %while.body38, !dbg !5929

while.body38:                                     ; preds = %while.cond36
  call void @llvm.dbg.value(metadata %union.df_ref_d* %21, metadata !5893, metadata !DIExpression()), !dbg !5931
  %regno41 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %21, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !5932
  %22 = load i32, i32* %regno41, align 8, !dbg !5932
  %call42 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i32 %22) #6, !dbg !5933
  %23 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %21, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !5934
  %bf.load44 = load i32, i32* %23, align 8, !dbg !5934
  %and45 = and i32 %bf.load44, 2097152, !dbg !5936
  %tobool46 = icmp eq i32 %and45, 0, !dbg !5936
  br i1 %tobool46, label %if.end49, label %if.then47, !dbg !5937

if.then47:                                        ; preds = %while.body38
  %call48 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !5938
  br label %if.end49, !dbg !5938

if.end49:                                         ; preds = %while.body38, %if.then47
  %chain51 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %21, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5939
  %24 = load %struct.df_link*, %struct.df_link** %chain51, align 8, !dbg !5939
  tail call void @df_chain_dump(%struct.df_link* %24, %struct._IO_FILE* %file) #7, !dbg !5940
  %call52 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5941
  %incdec.ptr53 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.1, i64 1, !dbg !5942
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr53, metadata !5882, metadata !DIExpression()), !dbg !5902
  br label %while.cond36, !dbg !5929, !llvm.loop !5943

for.inc.loopexit:                                 ; preds = %while.cond36
  br label %for.inc, !dbg !5919

for.inc:                                          ; preds = %for.inc.loopexit, %if.then24, %lor.lhs.false20
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5919
  %rt_rtx60 = bitcast %union.rtunion_def* %25 to %struct.rtx_def**, !dbg !5919
  br label %for.cond, !dbg !5919, !llvm.loop !5945

if.end61.loopexit:                                ; preds = %for.cond, %land.rhs
  br label %if.end61, !dbg !5947

if.end61:                                         ; preds = %if.end61.loopexit, %entry
  ret void, !dbg !5947
}

; Function Attrs: nounwind uwtable
define internal void @df_chain_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !5948 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !5950, metadata !DIExpression()), !dbg !5973
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !5951, metadata !DIExpression()), !dbg !5973
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !5974
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 4, !dbg !5974
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !5974
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 6, !dbg !5974
  %2 = load i32, i32* %local_flags, align 8, !dbg !5974
  %and = and i32 %2, 2, !dbg !5974
  %tobool = icmp eq i32 %and, 0, !dbg !5974
  br i1 %tobool, label %if.end75, label %if.then, !dbg !5975

if.then:                                          ; preds = %entry
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !5976
  %3 = load i32, i32* %index, align 8, !dbg !5976
  %call = tail call fastcc %union.df_ref_d** @df_get_artificial_uses(i32 %3) #7, !dbg !5977
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call, metadata !5955, metadata !DIExpression()), !dbg !5978
  %4 = load %union.df_ref_d*, %union.df_ref_d** %call, align 8, !dbg !5979
  %tobool1 = icmp eq %union.df_ref_d* %4, null, !dbg !5979
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !5980

if.then2:                                         ; preds = %if.then
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.40, i64 0, i64 0)) #6, !dbg !5981
  br label %while.cond, !dbg !5982

while.cond:                                       ; preds = %while.body, %if.then2
  %use_rec.0 = phi %union.df_ref_d** [ %call, %if.then2 ], [ %incdec.ptr, %while.body ], !dbg !5978
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !5955, metadata !DIExpression()), !dbg !5978
  %5 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !5983
  %tobool4 = icmp eq %union.df_ref_d* %5, null, !dbg !5982
  br i1 %tobool4, label %if.end.loopexit, label %while.body, !dbg !5982

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %5, metadata !5956, metadata !DIExpression()), !dbg !5984
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !5985
  %6 = load i32, i32* %regno, align 8, !dbg !5985
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36, i64 0, i64 0), i32 %6) #6, !dbg !5986
  %chain = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %5, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !5987
  %7 = load %struct.df_link*, %struct.df_link** %chain, align 8, !dbg !5987
  tail call void @df_chain_dump(%struct.df_link* %7, %struct._IO_FILE* %file) #7, !dbg !5988
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !5989
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !5990
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !5955, metadata !DIExpression()), !dbg !5978
  br label %while.cond, !dbg !5982, !llvm.loop !5991

if.end.loopexit:                                  ; preds = %while.cond
  br label %if.end, !dbg !5993

if.end:                                           ; preds = %if.end.loopexit, %if.then
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 7, !dbg !5993
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !5993
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5993
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 0, !dbg !5993
  br label %for.cond, !dbg !5993

for.cond:                                         ; preds = %for.inc, %if.end
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.end ], [ %rt_rtx74, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !5994
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5952, metadata !DIExpression()), !dbg !5978
  %tobool8 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !5995
  br i1 %tobool8, label %if.end75.loopexit, label %land.rhs, !dbg !5995

land.rhs:                                         ; preds = %for.cond
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !5995
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !5995
  %10 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !5995
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5995
  %rt_rtx = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !5995
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5995
  %cmp = icmp eq %struct.rtx_def* %insn.0, %12, !dbg !5995
  br i1 %cmp, label %if.end75.loopexit, label %for.body, !dbg !5993

for.body:                                         ; preds = %land.rhs
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !5996
  %bf.load = load i32, i32* %13, align 8, !dbg !5996
  %bf.clear = and i32 %bf.load, 65535, !dbg !5996
  %cmp12 = icmp eq i32 %bf.clear, 8, !dbg !5996
  br i1 %cmp12, label %if.then24, label %lor.lhs.false, !dbg !5996

lor.lhs.false:                                    ; preds = %for.body
  %cmp15 = icmp eq i32 %bf.clear, 7, !dbg !5996
  br i1 %cmp15, label %if.then24, label %lor.lhs.false16, !dbg !5996

lor.lhs.false16:                                  ; preds = %lor.lhs.false
  %cmp19 = icmp eq i32 %bf.clear, 9, !dbg !5996
  br i1 %cmp19, label %if.then24, label %lor.lhs.false20, !dbg !5996

lor.lhs.false20:                                  ; preds = %lor.lhs.false16
  %cmp23 = icmp eq i32 %bf.clear, 10, !dbg !5996
  br i1 %cmp23, label %if.then24, label %for.inc, !dbg !5997

if.then24:                                        ; preds = %lor.lhs.false20, %lor.lhs.false16, %lor.lhs.false, %for.body
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !5998
  %insns = getelementptr inbounds %struct.df, %struct.df* %14, i64 0, i32 10, !dbg !5998
  %15 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !5998
  %arrayidx27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5998
  %rt_int = bitcast %union.rtunion_def* %arrayidx27 to i32*, !dbg !5998
  %16 = load i32, i32* %rt_int, align 8, !dbg !5998
  %idxprom = sext i32 %16 to i64, !dbg !5998
  %arrayidx28 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %15, i64 %idxprom, !dbg !5998
  %17 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx28, align 8, !dbg !5998
  call void @llvm.dbg.value(metadata %struct.df_insn_info* %17, metadata !5960, metadata !DIExpression()), !dbg !5999
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %17, i64 0, i32 3, !dbg !6000
  %18 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !6000
  call void @llvm.dbg.value(metadata %union.df_ref_d** %18, metadata !5966, metadata !DIExpression()), !dbg !5999
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %17, i64 0, i32 2, !dbg !6001
  %19 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6001
  call void @llvm.dbg.value(metadata %union.df_ref_d** %19, metadata !5955, metadata !DIExpression()), !dbg !5978
  %20 = load %union.df_ref_d*, %union.df_ref_d** %19, align 8, !dbg !6002
  %tobool29 = icmp eq %union.df_ref_d* %20, null, !dbg !6002
  br i1 %tobool29, label %lor.lhs.false30, label %if.then32, !dbg !6003

lor.lhs.false30:                                  ; preds = %if.then24
  %21 = load %union.df_ref_d*, %union.df_ref_d** %18, align 8, !dbg !6004
  %tobool31 = icmp eq %union.df_ref_d* %21, null, !dbg !6004
  br i1 %tobool31, label %for.inc, label %if.then32, !dbg !6005

if.then32:                                        ; preds = %lor.lhs.false30, %if.then24
  %luid = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %17, i64 0, i32 5, !dbg !6006
  %22 = load i32, i32* %luid, align 8, !dbg !6006
  %call37 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.41, i64 0, i64 0), i32 %22, i32 %16) #6, !dbg !6007
  br label %while.cond38, !dbg !6008

while.cond38:                                     ; preds = %if.end51, %if.then32
  %use_rec.1 = phi %union.df_ref_d** [ %19, %if.then32 ], [ %incdec.ptr55, %if.end51 ], !dbg !5999
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.1, metadata !5955, metadata !DIExpression()), !dbg !5978
  %23 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.1, align 8, !dbg !6009
  %tobool39 = icmp eq %union.df_ref_d* %23, null, !dbg !6008
  br i1 %tobool39, label %while.cond57.preheader, label %while.body40, !dbg !6008

while.cond57.preheader:                           ; preds = %while.cond38
  br label %while.cond57, !dbg !6010

while.body40:                                     ; preds = %while.cond38
  call void @llvm.dbg.value(metadata %union.df_ref_d* %23, metadata !5967, metadata !DIExpression()), !dbg !6011
  %regno43 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %23, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6012
  %24 = load i32, i32* %regno43, align 8, !dbg !6012
  %call44 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i32 %24) #6, !dbg !6013
  %25 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %23, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6014
  %bf.load46 = load i32, i32* %25, align 8, !dbg !6014
  %and47 = and i32 %bf.load46, 2097152, !dbg !6016
  %tobool48 = icmp eq i32 %and47, 0, !dbg !6016
  br i1 %tobool48, label %if.end51, label %if.then49, !dbg !6017

if.then49:                                        ; preds = %while.body40
  %call50 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i64 0, i64 0)) #6, !dbg !6018
  br label %if.end51, !dbg !6018

if.end51:                                         ; preds = %while.body40, %if.then49
  %chain53 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %23, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6019
  %26 = load %struct.df_link*, %struct.df_link** %chain53, align 8, !dbg !6019
  tail call void @df_chain_dump(%struct.df_link* %26, %struct._IO_FILE* %file) #7, !dbg !6020
  %call54 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6021
  %incdec.ptr55 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.1, i64 1, !dbg !6022
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr55, metadata !5955, metadata !DIExpression()), !dbg !5978
  br label %while.cond38, !dbg !6008, !llvm.loop !6023

while.cond57:                                     ; preds = %while.cond57.preheader, %while.body59
  %eq_use_rec.0 = phi %union.df_ref_d** [ %incdec.ptr67, %while.body59 ], [ %18, %while.cond57.preheader ], !dbg !5999
  call void @llvm.dbg.value(metadata %union.df_ref_d** %eq_use_rec.0, metadata !5966, metadata !DIExpression()), !dbg !5999
  %27 = load %union.df_ref_d*, %union.df_ref_d** %eq_use_rec.0, align 8, !dbg !6025
  %tobool58 = icmp eq %union.df_ref_d* %27, null, !dbg !6010
  br i1 %tobool58, label %for.inc.loopexit, label %while.body59, !dbg !6010

while.body59:                                     ; preds = %while.cond57
  call void @llvm.dbg.value(metadata %union.df_ref_d* %27, metadata !5971, metadata !DIExpression()), !dbg !6026
  %regno62 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %27, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6027
  %28 = load i32, i32* %regno62, align 8, !dbg !6027
  %call63 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42, i64 0, i64 0), i32 %28) #6, !dbg !6028
  %chain65 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %27, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6029
  %29 = load %struct.df_link*, %struct.df_link** %chain65, align 8, !dbg !6029
  tail call void @df_chain_dump(%struct.df_link* %29, %struct._IO_FILE* %file) #7, !dbg !6030
  %call66 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #6, !dbg !6031
  %incdec.ptr67 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %eq_use_rec.0, i64 1, !dbg !6032
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr67, metadata !5966, metadata !DIExpression()), !dbg !5999
  br label %while.cond57, !dbg !6010, !llvm.loop !6033

for.inc.loopexit:                                 ; preds = %while.cond57
  br label %for.inc, !dbg !5995

for.inc:                                          ; preds = %for.inc.loopexit, %lor.lhs.false30, %lor.lhs.false20
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5995
  %rt_rtx74 = bitcast %union.rtunion_def* %30 to %struct.rtx_def**, !dbg !5995
  br label %for.cond, !dbg !5995, !llvm.loop !6035

if.end75.loopexit:                                ; preds = %for.cond, %land.rhs
  br label %if.end75, !dbg !6037

if.end75:                                         ; preds = %if.end75.loopexit, %entry
  ret void, !dbg !6037
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_chain_remove_problem() unnamed_addr #4 !dbg !6038 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %bb_index = alloca i32, align 4
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6053
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6053
  %1 = bitcast i32* %bb_index to i8*, !dbg !6054
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6054
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !6055
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 4, !dbg !6055
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6055
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 3, !dbg !6057
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !6057
  %tobool = icmp eq %struct.alloc_pool_def* %4, null, !dbg !6055
  br i1 %tobool, label %if.end, label %if.then, !dbg !6058

if.then:                                          ; preds = %entry
  tail call void @free_alloc_pool(%struct.alloc_pool_def* nonnull %4) #6, !dbg !6059
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !6060
  %arrayidx5.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 4, !dbg !6061
  %.pre1 = load %struct.dataflow*, %struct.dataflow** %arrayidx5.phi.trans.insert, align 8, !dbg !6060
  br label %if.end, !dbg !6059

if.end:                                           ; preds = %entry, %if.then
  %5 = phi %struct.dataflow* [ %3, %entry ], [ %.pre1, %if.then ], !dbg !6060
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i64 0, i32 4, !dbg !6060
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6060
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6040, metadata !DIExpression(DW_OP_deref)), !dbg !6062
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6041, metadata !DIExpression(DW_OP_deref)), !dbg !6062
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %6, i32 0, i32* nonnull %bb_index) #7, !dbg !6060
  br label %for.cond, !dbg !6060

for.cond:                                         ; preds = %for.inc113, %if.end
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6040, metadata !DIExpression(DW_OP_deref)), !dbg !6062
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6041, metadata !DIExpression(DW_OP_deref)), !dbg !6062
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6063
  %tobool6 = icmp eq i8 %call, 0, !dbg !6060
  br i1 %tobool6, label %for.end114, label %for.body, !dbg !6060

for.body:                                         ; preds = %for.cond
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6064
  %cfg = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !6064
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6064
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 2, !dbg !6064
  %9 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6064
  %tobool7 = icmp eq %struct.VEC_basic_block_gc* %9, null, !dbg !6064
  br i1 %tobool7, label %cond.end, label %cond.true, !dbg !6064

cond.true:                                        ; preds = %for.body
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %9, i64 0, i32 0, !dbg !6064
  br label %cond.end, !dbg !6064

cond.end:                                         ; preds = %for.body, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body ], !dbg !6064
  %10 = load i32, i32* %bb_index, align 4, !dbg !6064
  call void @llvm.dbg.value(metadata i32 %10, metadata !6041, metadata !DIExpression()), !dbg !6062
  %call11 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %10) #7, !dbg !6064
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call11, metadata !6048, metadata !DIExpression()), !dbg !6065
  %11 = load %struct.df*, %struct.df** @df, align 8, !dbg !6066
  %arrayidx13 = getelementptr inbounds %struct.df, %struct.df* %11, i64 0, i32 1, i64 4, !dbg !6066
  %12 = load %struct.dataflow*, %struct.dataflow** %arrayidx13, align 8, !dbg !6066
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %12, i64 0, i32 6, !dbg !6066
  %13 = load i32, i32* %local_flags, align 8, !dbg !6066
  %and = and i32 %13, 1, !dbg !6066
  %tobool14 = icmp eq i32 %and, 0, !dbg !6066
  br i1 %tobool14, label %if.end21, label %if.then15, !dbg !6068

if.then15:                                        ; preds = %cond.end
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call11, i64 0, i32 9, !dbg !6069
  %14 = load i32, i32* %index, align 8, !dbg !6069
  %call16 = call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %14) #7, !dbg !6071
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call16, metadata !6046, metadata !DIExpression()), !dbg !6065
  br label %for.cond17, !dbg !6072

for.cond17:                                       ; preds = %for.body19, %if.then15
  %def_rec.0 = phi %union.df_ref_d** [ %call16, %if.then15 ], [ %incdec.ptr, %for.body19 ], !dbg !6073
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !6046, metadata !DIExpression()), !dbg !6065
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !6074
  %tobool18 = icmp eq %union.df_ref_d* %15, null, !dbg !6076
  br i1 %tobool18, label %if.end21.loopexit, label %for.body19, !dbg !6076

for.body19:                                       ; preds = %for.cond17
  %chain = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %15, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6077
  store %struct.df_link* null, %struct.df_link** %chain, align 8, !dbg !6078
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !6079
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !6046, metadata !DIExpression()), !dbg !6065
  br label %for.cond17, !dbg !6080, !llvm.loop !6081

if.end21.loopexit:                                ; preds = %for.cond17
  %.pre2 = load %struct.df*, %struct.df** @df, align 8, !dbg !6083
  %arrayidx23.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre2, i64 0, i32 1, i64 4, !dbg !6085
  %.pre3 = load %struct.dataflow*, %struct.dataflow** %arrayidx23.phi.trans.insert, align 8, !dbg !6083
  %local_flags24.phi.trans.insert = getelementptr inbounds %struct.dataflow, %struct.dataflow* %.pre3, i64 0, i32 6, !dbg !6085
  %.pre4 = load i32, i32* %local_flags24.phi.trans.insert, align 8, !dbg !6083
  br label %if.end21, !dbg !6083

if.end21:                                         ; preds = %if.end21.loopexit, %cond.end
  %16 = phi i32 [ %.pre4, %if.end21.loopexit ], [ %13, %cond.end ], !dbg !6083
  %and25 = and i32 %16, 2, !dbg !6083
  %tobool26 = icmp eq i32 %and25, 0, !dbg !6083
  br i1 %tobool26, label %if.end38, label %if.then27, !dbg !6086

if.then27:                                        ; preds = %if.end21
  %index28 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call11, i64 0, i32 9, !dbg !6087
  %17 = load i32, i32* %index28, align 8, !dbg !6087
  %call29 = call fastcc %union.df_ref_d** @df_get_artificial_uses(i32 %17) #7, !dbg !6089
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call29, metadata !6047, metadata !DIExpression()), !dbg !6065
  br label %for.cond30, !dbg !6090

for.cond30:                                       ; preds = %for.body32, %if.then27
  %use_rec.0 = phi %union.df_ref_d** [ %call29, %if.then27 ], [ %incdec.ptr36, %for.body32 ], !dbg !6091
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !6047, metadata !DIExpression()), !dbg !6065
  %18 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !6092
  %tobool31 = icmp eq %union.df_ref_d* %18, null, !dbg !6094
  br i1 %tobool31, label %if.end38.loopexit, label %for.body32, !dbg !6094

for.body32:                                       ; preds = %for.cond30
  %chain34 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %18, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6095
  store %struct.df_link* null, %struct.df_link** %chain34, align 8, !dbg !6096
  %incdec.ptr36 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !6097
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr36, metadata !6047, metadata !DIExpression()), !dbg !6065
  br label %for.cond30, !dbg !6098, !llvm.loop !6099

if.end38.loopexit:                                ; preds = %for.cond30
  br label %if.end38, !dbg !6101

if.end38:                                         ; preds = %if.end38.loopexit, %if.end21
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call11, i64 0, i32 7, !dbg !6101
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6101
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6101
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i64 0, i32 0, !dbg !6101
  br label %for.cond39, !dbg !6101

for.cond39:                                       ; preds = %for.inc107, %if.end38
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.end38 ], [ %rt_rtx111, %for.inc107 ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6102
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6042, metadata !DIExpression()), !dbg !6065
  %tobool40 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6103
  br i1 %tobool40, label %for.inc113, label %land.rhs, !dbg !6103

land.rhs:                                         ; preds = %for.cond39
  %20 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6103
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %20, i64 0, i32 1, !dbg !6103
  %21 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6103
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6103
  %rt_rtx = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !6103
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6103
  %cmp = icmp eq %struct.rtx_def* %insn.0, %23, !dbg !6103
  br i1 %cmp, label %for.inc113, label %for.body44, !dbg !6101

for.body44:                                       ; preds = %land.rhs
  %arrayidx47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6104
  %rt_int = bitcast %union.rtunion_def* %arrayidx47 to i32*, !dbg !6104
  %24 = load i32, i32* %rt_int, align 8, !dbg !6104
  call void @llvm.dbg.value(metadata i32 %24, metadata !6049, metadata !DIExpression()), !dbg !6105
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6106
  %bf.load = load i32, i32* %25, align 8, !dbg !6106
  %bf.clear = and i32 %bf.load, 65535, !dbg !6106
  %cmp48 = icmp eq i32 %bf.clear, 8, !dbg !6106
  br i1 %cmp48, label %if.then60, label %lor.lhs.false, !dbg !6106

lor.lhs.false:                                    ; preds = %for.body44
  %cmp51 = icmp eq i32 %bf.clear, 7, !dbg !6106
  br i1 %cmp51, label %if.then60, label %lor.lhs.false52, !dbg !6106

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %cmp55 = icmp eq i32 %bf.clear, 9, !dbg !6106
  br i1 %cmp55, label %if.then60, label %lor.lhs.false56, !dbg !6106

lor.lhs.false56:                                  ; preds = %lor.lhs.false52
  %cmp59 = icmp eq i32 %bf.clear, 10, !dbg !6106
  br i1 %cmp59, label %if.then60, label %for.inc107, !dbg !6108

if.then60:                                        ; preds = %lor.lhs.false56, %lor.lhs.false52, %lor.lhs.false, %for.body44
  %26 = load %struct.df*, %struct.df** @df, align 8, !dbg !6109
  %arrayidx62 = getelementptr inbounds %struct.df, %struct.df* %26, i64 0, i32 1, i64 4, !dbg !6109
  %27 = load %struct.dataflow*, %struct.dataflow** %arrayidx62, align 8, !dbg !6109
  %local_flags63 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %27, i64 0, i32 6, !dbg !6109
  %28 = load i32, i32* %local_flags63, align 8, !dbg !6109
  %and64 = and i32 %28, 1, !dbg !6109
  %tobool65 = icmp eq i32 %and64, 0, !dbg !6109
  br i1 %tobool65, label %if.end76, label %if.then66, !dbg !6112

if.then66:                                        ; preds = %if.then60
  %insns = getelementptr inbounds %struct.df, %struct.df* %26, i64 0, i32 10, !dbg !6113
  %29 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6113
  %idxprom = zext i32 %24 to i64, !dbg !6113
  %arrayidx67 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %29, i64 %idxprom, !dbg !6113
  %30 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx67, align 8, !dbg !6113
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %30, i64 0, i32 1, !dbg !6113
  %31 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !6113
  call void @llvm.dbg.value(metadata %union.df_ref_d** %31, metadata !6046, metadata !DIExpression()), !dbg !6065
  br label %for.cond68, !dbg !6115

for.cond68:                                       ; preds = %for.body70, %if.then66
  %def_rec.1 = phi %union.df_ref_d** [ %31, %if.then66 ], [ %incdec.ptr74, %for.body70 ], !dbg !6116
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.1, metadata !6046, metadata !DIExpression()), !dbg !6065
  %32 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.1, align 8, !dbg !6117
  %tobool69 = icmp eq %union.df_ref_d* %32, null, !dbg !6119
  br i1 %tobool69, label %if.end76.loopexit, label %for.body70, !dbg !6119

for.body70:                                       ; preds = %for.cond68
  %chain72 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %32, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6120
  store %struct.df_link* null, %struct.df_link** %chain72, align 8, !dbg !6121
  %incdec.ptr74 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.1, i64 1, !dbg !6122
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr74, metadata !6046, metadata !DIExpression()), !dbg !6065
  br label %for.cond68, !dbg !6123, !llvm.loop !6124

if.end76.loopexit:                                ; preds = %for.cond68
  %.pre5 = load %struct.dataflow*, %struct.dataflow** %arrayidx62, align 8, !dbg !6126
  %local_flags79.phi.trans.insert = getelementptr inbounds %struct.dataflow, %struct.dataflow* %.pre5, i64 0, i32 6, !dbg !6128
  %.pre6 = load i32, i32* %local_flags79.phi.trans.insert, align 8, !dbg !6126
  br label %if.end76, !dbg !6126

if.end76:                                         ; preds = %if.end76.loopexit, %if.then60
  %33 = phi i32 [ %.pre6, %if.end76.loopexit ], [ %28, %if.then60 ], !dbg !6126
  %and80 = and i32 %33, 2, !dbg !6126
  %tobool81 = icmp eq i32 %and80, 0, !dbg !6126
  br i1 %tobool81, label %for.inc107, label %if.then82, !dbg !6129

if.then82:                                        ; preds = %if.end76
  %insns83 = getelementptr inbounds %struct.df, %struct.df* %26, i64 0, i32 10, !dbg !6130
  %34 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns83, align 8, !dbg !6130
  %idxprom84 = zext i32 %24 to i64, !dbg !6130
  %arrayidx85 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %34, i64 %idxprom84, !dbg !6130
  %35 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx85, align 8, !dbg !6130
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %35, i64 0, i32 2, !dbg !6130
  %36 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6130
  call void @llvm.dbg.value(metadata %union.df_ref_d** %36, metadata !6047, metadata !DIExpression()), !dbg !6065
  br label %for.cond86, !dbg !6133

for.cond86:                                       ; preds = %for.body88, %if.then82
  %use_rec.1 = phi %union.df_ref_d** [ %36, %if.then82 ], [ %incdec.ptr92, %for.body88 ], !dbg !6134
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.1, metadata !6047, metadata !DIExpression()), !dbg !6065
  %37 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.1, align 8, !dbg !6135
  %tobool87 = icmp eq %union.df_ref_d* %37, null, !dbg !6137
  br i1 %tobool87, label %for.end93, label %for.body88, !dbg !6137

for.body88:                                       ; preds = %for.cond86
  %chain90 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %37, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6138
  store %struct.df_link* null, %struct.df_link** %chain90, align 8, !dbg !6139
  %incdec.ptr92 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.1, i64 1, !dbg !6140
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr92, metadata !6047, metadata !DIExpression()), !dbg !6065
  br label %for.cond86, !dbg !6141, !llvm.loop !6142

for.end93:                                        ; preds = %for.cond86
  %38 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns83, align 8, !dbg !6144
  %arrayidx96 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %38, i64 %idxprom84, !dbg !6144
  %39 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx96, align 8, !dbg !6144
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %39, i64 0, i32 3, !dbg !6144
  %40 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !6144
  call void @llvm.dbg.value(metadata %union.df_ref_d** %40, metadata !6047, metadata !DIExpression()), !dbg !6065
  br label %for.cond97, !dbg !6146

for.cond97:                                       ; preds = %for.body99, %for.end93
  %use_rec.2 = phi %union.df_ref_d** [ %40, %for.end93 ], [ %incdec.ptr103, %for.body99 ], !dbg !6147
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.2, metadata !6047, metadata !DIExpression()), !dbg !6065
  %41 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.2, align 8, !dbg !6148
  %tobool98 = icmp eq %union.df_ref_d* %41, null, !dbg !6150
  br i1 %tobool98, label %for.inc107.loopexit, label %for.body99, !dbg !6150

for.body99:                                       ; preds = %for.cond97
  %chain101 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %41, i64 0, i32 0, i32 0, i32 0, i32 2, !dbg !6151
  store %struct.df_link* null, %struct.df_link** %chain101, align 8, !dbg !6152
  %incdec.ptr103 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.2, i64 1, !dbg !6153
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr103, metadata !6047, metadata !DIExpression()), !dbg !6065
  br label %for.cond97, !dbg !6154, !llvm.loop !6155

for.inc107.loopexit:                              ; preds = %for.cond97
  br label %for.inc107, !dbg !6103

for.inc107:                                       ; preds = %for.inc107.loopexit, %if.end76, %lor.lhs.false56
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6103
  %rt_rtx111 = bitcast %union.rtunion_def* %42 to %struct.rtx_def**, !dbg !6103
  br label %for.cond39, !dbg !6103, !llvm.loop !6157

for.inc113:                                       ; preds = %land.rhs, %for.cond39
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6040, metadata !DIExpression(DW_OP_deref)), !dbg !6062
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6041, metadata !DIExpression(DW_OP_deref)), !dbg !6062
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6063
  br label %for.cond, !dbg !6063, !llvm.loop !6159

for.end114:                                       ; preds = %for.cond
  %43 = load %struct.df*, %struct.df** @df, align 8, !dbg !6161
  %arrayidx116 = getelementptr inbounds %struct.df, %struct.df* %43, i64 0, i32 1, i64 4, !dbg !6161
  %44 = load %struct.dataflow*, %struct.dataflow** %arrayidx116, align 8, !dbg !6161
  %out_of_date_transfer_functions117 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %44, i64 0, i32 4, !dbg !6162
  %45 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions117, align 8, !dbg !6162
  call void @bitmap_clear(%struct.bitmap_head_def* %45) #6, !dbg !6163
  %46 = load %struct.df*, %struct.df** @df, align 8, !dbg !6164
  %arrayidx119 = getelementptr inbounds %struct.df, %struct.df* %46, i64 0, i32 1, i64 4, !dbg !6164
  %47 = load %struct.dataflow*, %struct.dataflow** %arrayidx119, align 8, !dbg !6164
  %block_pool120 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %47, i64 0, i32 3, !dbg !6165
  store %struct.alloc_pool_def* null, %struct.alloc_pool_def** %block_pool120, align 8, !dbg !6166
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6167
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6167
  ret void, !dbg !6167
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_chain_create_bb(i32 %bb_index) unnamed_addr #4 !dbg !6168 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !6170, metadata !DIExpression()), !dbg !6180
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6181
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !6181
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6181
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !6181
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6181
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !6181
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6181

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !6181
  br label %cond.end, !dbg !6181

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6181
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %bb_index) #7, !dbg !6181
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !6171, metadata !DIExpression()), !dbg !6180
  %call4 = tail call fastcc %struct.df_rd_bb_info* @df_rd_get_bb_info(i32 %bb_index) #7, !dbg !6182
  call void @llvm.dbg.value(metadata %struct.df_rd_bb_info* %call4, metadata !6172, metadata !DIExpression()), !dbg !6180
  %call5 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !6183
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call5, metadata !6174, metadata !DIExpression()), !dbg !6180
  %in = getelementptr inbounds %struct.df_rd_bb_info, %struct.df_rd_bb_info* %call4, i64 0, i32 3, !dbg !6184
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6184
  tail call void @bitmap_copy(%struct.bitmap_head_def* %call5, %struct.bitmap_head_def* %3) #6, !dbg !6185
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !6186
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 1, i64 4, !dbg !6186
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6186
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i64 0, i32 4, !dbg !6187
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6187
  %call6 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 %bb_index) #6, !dbg !6188
  tail call void @df_rd_simulate_artificial_defs_at_top(%struct.basic_block_def* %call, %struct.bitmap_head_def* %call5) #7, !dbg !6189
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !6190
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6190
  %7 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6190
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %7, i64 0, i32 0, !dbg !6190
  br label %for.cond, !dbg !6190

for.cond:                                         ; preds = %for.inc, %cond.end
  %insn.0.in = phi %struct.rtx_def** [ %head_, %cond.end ], [ %rt_rtx37, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6191
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6173, metadata !DIExpression()), !dbg !6180
  %tobool7 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6192
  br i1 %tobool7, label %for.end, label %land.rhs, !dbg !6192

land.rhs:                                         ; preds = %for.cond
  %8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6192
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %8, i64 0, i32 1, !dbg !6192
  %9 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6192
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6192
  %rt_rtx = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !6192
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6192
  %cmp = icmp eq %struct.rtx_def* %insn.0, %11, !dbg !6192
  br i1 %cmp, label %for.end, label %for.body, !dbg !6190

for.body:                                         ; preds = %land.rhs
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6193
  %bf.load = load i32, i32* %12, align 8, !dbg !6193
  %bf.clear = and i32 %bf.load, 65535, !dbg !6193
  %cmp11 = icmp eq i32 %bf.clear, 8, !dbg !6193
  br i1 %cmp11, label %if.then, label %lor.lhs.false, !dbg !6193

lor.lhs.false:                                    ; preds = %for.body
  %cmp14 = icmp eq i32 %bf.clear, 7, !dbg !6193
  br i1 %cmp14, label %if.then, label %lor.lhs.false15, !dbg !6193

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %cmp18 = icmp eq i32 %bf.clear, 9, !dbg !6193
  br i1 %cmp18, label %if.then, label %lor.lhs.false19, !dbg !6193

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %cmp22 = icmp eq i32 %bf.clear, 10, !dbg !6193
  br i1 %cmp22, label %if.then, label %for.inc, !dbg !6194

if.then:                                          ; preds = %lor.lhs.false19, %lor.lhs.false15, %lor.lhs.false, %for.body
  %arrayidx25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6195
  %rt_int = bitcast %union.rtunion_def* %arrayidx25 to i32*, !dbg !6195
  %13 = load i32, i32* %rt_int, align 8, !dbg !6195
  call void @llvm.dbg.value(metadata i32 %13, metadata !6175, metadata !DIExpression()), !dbg !6196
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !6197
  %insns = getelementptr inbounds %struct.df, %struct.df* %14, i64 0, i32 10, !dbg !6197
  %15 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6197
  %idxprom = zext i32 %13 to i64, !dbg !6197
  %arrayidx26 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %15, i64 %idxprom, !dbg !6197
  %16 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx26, align 8, !dbg !6197
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %16, i64 0, i32 2, !dbg !6197
  %17 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6197
  tail call fastcc void @df_chain_create_bb_process_use(%struct.bitmap_head_def* %call5, %union.df_ref_d** %17, i32 0) #7, !dbg !6198
  %18 = load %struct.df*, %struct.df** @df, align 8, !dbg !6199
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %18, i64 0, i32 27, !dbg !6201
  %bf.load27 = load i8, i8* %changeable_flags, align 4, !dbg !6201
  %19 = and i8 %bf.load27, 4, !dbg !6202
  %tobool28 = icmp eq i8 %19, 0, !dbg !6202
  br i1 %tobool28, label %if.end, label %if.then29, !dbg !6203

if.then29:                                        ; preds = %if.then
  %insns30 = getelementptr inbounds %struct.df, %struct.df* %18, i64 0, i32 10, !dbg !6204
  %20 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns30, align 8, !dbg !6204
  %arrayidx32 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %20, i64 %idxprom, !dbg !6204
  %21 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx32, align 8, !dbg !6204
  %eq_uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %21, i64 0, i32 3, !dbg !6204
  %22 = load %union.df_ref_d**, %union.df_ref_d*** %eq_uses, align 8, !dbg !6204
  tail call fastcc void @df_chain_create_bb_process_use(%struct.bitmap_head_def* %call5, %union.df_ref_d** %22, i32 0) #7, !dbg !6205
  br label %if.end, !dbg !6205

if.end:                                           ; preds = %if.then, %if.then29
  tail call void @df_rd_simulate_one_insn(%struct.basic_block_def* %call, %struct.rtx_def* nonnull %insn.0, %struct.bitmap_head_def* %call5) #7, !dbg !6206
  br label %for.inc, !dbg !6207

for.inc:                                          ; preds = %lor.lhs.false19, %if.end
  %23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6192
  %rt_rtx37 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !6192
  br label %for.cond, !dbg !6192, !llvm.loop !6208

for.end:                                          ; preds = %land.rhs, %for.cond
  %24 = load %struct.df*, %struct.df** @df, align 8, !dbg !6210
  %changeable_flags38 = getelementptr inbounds %struct.df, %struct.df* %24, i64 0, i32 27, !dbg !6212
  %bf.load39 = load i8, i8* %changeable_flags38, align 4, !dbg !6212
  %25 = and i8 %bf.load39, 2, !dbg !6213
  %tobool42 = icmp eq i8 %25, 0, !dbg !6213
  br i1 %tobool42, label %if.then43, label %if.end45, !dbg !6214

if.then43:                                        ; preds = %for.end
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 9, !dbg !6215
  %26 = load i32, i32* %index, align 8, !dbg !6215
  %call44 = tail call fastcc %union.df_ref_d** @df_get_artificial_uses(i32 %26) #7, !dbg !6216
  tail call fastcc void @df_chain_create_bb_process_use(%struct.bitmap_head_def* %call5, %union.df_ref_d** %call44, i32 0) #7, !dbg !6217
  br label %if.end45, !dbg !6217

if.end45:                                         ; preds = %for.end, %if.then43
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call5) #6, !dbg !6218
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !6174, metadata !DIExpression()), !dbg !6180
  ret void, !dbg !6219
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_chain_create_bb_process_use(%struct.bitmap_head_def* %local_rd, %union.df_ref_d** %use_rec, i32 %top_flag) unnamed_addr #4 !dbg !6220 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %def_index = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %local_rd, metadata !6224, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec, metadata !6225, metadata !DIExpression()), !dbg !6245
  call void @llvm.dbg.value(metadata i32 0, metadata !6226, metadata !DIExpression()), !dbg !6245
  %0 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6246
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6246
  %1 = bitcast i32* %def_index to i8*, !dbg !6247
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6247
  br label %while.cond, !dbg !6248

while.cond:                                       ; preds = %if.end35, %entry
  %use_rec.addr.0 = phi %union.df_ref_d** [ %use_rec, %entry ], [ %incdec.ptr, %if.end35 ]
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.addr.0, metadata !6225, metadata !DIExpression()), !dbg !6245
  %2 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.addr.0, align 8, !dbg !6249
  %tobool = icmp eq %union.df_ref_d* %2, null, !dbg !6248
  br i1 %tobool, label %while.end, label %while.body, !dbg !6248

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %2, metadata !6229, metadata !DIExpression()), !dbg !6250
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %2, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6251
  %3 = load i32, i32* %regno, align 8, !dbg !6251
  call void @llvm.dbg.value(metadata i32 %3, metadata !6231, metadata !DIExpression()), !dbg !6250
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !6252
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 27, !dbg !6253
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !6253
  %5 = and i8 %bf.load, 2, !dbg !6254
  %tobool1 = icmp eq i8 %5, 0, !dbg !6254
  %cmp = icmp ugt i32 %3, 52, !dbg !6255
  %or.cond = or i1 %tobool1, %cmp, !dbg !6256
  br i1 %or.cond, label %if.then, label %if.end35, !dbg !6256

if.then:                                          ; preds = %while.body
  %count2 = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 3, i32 2, !dbg !6257
  %6 = load i32*, i32** %count2, align 8, !dbg !6257
  %idxprom = zext i32 %3 to i64, !dbg !6257
  %arrayidx = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !6257
  %7 = load i32, i32* %arrayidx, align 4, !dbg !6257
  call void @llvm.dbg.value(metadata i32 %7, metadata !6232, metadata !DIExpression()), !dbg !6258
  %tobool3 = icmp eq i32 %7, 0, !dbg !6259
  br i1 %tobool3, label %if.end35, label %if.then4, !dbg !6260

if.then4:                                         ; preds = %if.then
  %8 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %2, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6261
  %bf.load6 = load i32, i32* %8, align 8, !dbg !6261
  %and7 = and i32 %bf.load6, 131072, !dbg !6262
  %cmp8 = icmp eq i32 %and7, 0, !dbg !6263
  br i1 %cmp8, label %if.then9, label %if.end35, !dbg !6264

if.then9:                                         ; preds = %if.then4
  %begin = getelementptr inbounds %struct.df, %struct.df* %4, i64 0, i32 3, i32 1, !dbg !6265
  %9 = load i32*, i32** %begin, align 8, !dbg !6265
  %arrayidx12 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !6265
  %10 = load i32, i32* %arrayidx12, align 4, !dbg !6265
  call void @llvm.dbg.value(metadata i32 %10, metadata !6235, metadata !DIExpression()), !dbg !6266
  %add = add i32 %10, %7, !dbg !6267
  %sub = add i32 %add, -1, !dbg !6268
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6240, metadata !DIExpression()), !dbg !6266
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6227, metadata !DIExpression(DW_OP_deref)), !dbg !6245
  call void @llvm.dbg.value(metadata i32* %def_index, metadata !6228, metadata !DIExpression(DW_OP_deref)), !dbg !6245
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %local_rd, i32 %10, i32* nonnull %def_index) #7, !dbg !6269
  br label %for.cond, !dbg !6269

for.cond:                                         ; preds = %for.inc, %if.then9
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6227, metadata !DIExpression(DW_OP_deref)), !dbg !6245
  call void @llvm.dbg.value(metadata i32* %def_index, metadata !6228, metadata !DIExpression(DW_OP_deref)), !dbg !6245
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %def_index) #7, !dbg !6270
  %tobool13 = icmp eq i8 %call, 0, !dbg !6269
  br i1 %tobool13, label %if.end35.loopexit, label %for.body, !dbg !6269

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %def_index, align 4, !dbg !6271
  call void @llvm.dbg.value(metadata i32 %11, metadata !6228, metadata !DIExpression()), !dbg !6245
  %cmp14 = icmp ugt i32 %11, %sub, !dbg !6273
  br i1 %cmp14, label %cleanup, label %if.end, !dbg !6274

if.end:                                           ; preds = %for.body
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !6275
  %refs = getelementptr inbounds %struct.df, %struct.df* %12, i64 0, i32 3, i32 0, !dbg !6275
  %13 = load %union.df_ref_d**, %union.df_ref_d*** %refs, align 8, !dbg !6275
  call void @llvm.dbg.value(metadata i32 %11, metadata !6228, metadata !DIExpression()), !dbg !6245
  %idxprom17 = zext i32 %11 to i64, !dbg !6275
  %arrayidx18 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %13, i64 %idxprom17, !dbg !6275
  %14 = load %union.df_ref_d*, %union.df_ref_d** %arrayidx18, align 8, !dbg !6275
  call void @llvm.dbg.value(metadata %union.df_ref_d* %14, metadata !6241, metadata !DIExpression()), !dbg !6276
  %arrayidx19 = getelementptr inbounds %struct.df, %struct.df* %12, i64 0, i32 1, i64 4, !dbg !6277
  %15 = load %struct.dataflow*, %struct.dataflow** %arrayidx19, align 8, !dbg !6277
  %local_flags = getelementptr inbounds %struct.dataflow, %struct.dataflow* %15, i64 0, i32 6, !dbg !6277
  %16 = load i32, i32* %local_flags, align 8, !dbg !6277
  %and20 = and i32 %16, 1, !dbg !6277
  %tobool21 = icmp eq i32 %and20, 0, !dbg !6277
  br i1 %tobool21, label %if.end24, label %if.then22, !dbg !6279

if.then22:                                        ; preds = %if.end
  %call23 = call %struct.df_link* @df_chain_create(%union.df_ref_d* %14, %union.df_ref_d* nonnull %2) #7, !dbg !6280
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !6281
  %arrayidx26.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 4, !dbg !6283
  %.pre2 = load %struct.dataflow*, %struct.dataflow** %arrayidx26.phi.trans.insert, align 8, !dbg !6281
  %local_flags27.phi.trans.insert = getelementptr inbounds %struct.dataflow, %struct.dataflow* %.pre2, i64 0, i32 6, !dbg !6283
  %.pre3 = load i32, i32* %local_flags27.phi.trans.insert, align 8, !dbg !6281
  br label %if.end24, !dbg !6280

if.end24:                                         ; preds = %if.end, %if.then22
  %17 = phi i32 [ %16, %if.end ], [ %.pre3, %if.then22 ], !dbg !6281
  %and28 = and i32 %17, 2, !dbg !6281
  %tobool29 = icmp eq i32 %and28, 0, !dbg !6281
  br i1 %tobool29, label %cleanup, label %if.then30, !dbg !6284

if.then30:                                        ; preds = %if.end24
  %call31 = call %struct.df_link* @df_chain_create(%union.df_ref_d* nonnull %2, %union.df_ref_d* %14) #7, !dbg !6285
  br label %cleanup, !dbg !6285

cleanup:                                          ; preds = %if.end24, %if.then30, %for.body
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body ], [ true, %if.then30 ], [ true, %if.end24 ]
  br i1 %cleanup.dest.slot.0, label %for.inc, label %if.end35.loopexit

for.inc:                                          ; preds = %cleanup
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6227, metadata !DIExpression(DW_OP_deref)), !dbg !6245
  call void @llvm.dbg.value(metadata i32* %def_index, metadata !6228, metadata !DIExpression(DW_OP_deref)), !dbg !6245
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %def_index) #7, !dbg !6270
  br label %for.cond, !dbg !6270, !llvm.loop !6286

if.end35.loopexit:                                ; preds = %cleanup, %for.cond
  br label %if.end35, !dbg !6288

if.end35:                                         ; preds = %if.end35.loopexit, %if.then, %if.then4, %while.body
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.addr.0, i64 1, !dbg !6288
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !6225, metadata !DIExpression()), !dbg !6245
  br label %while.cond, !dbg !6248, !llvm.loop !6289

while.end:                                        ; preds = %while.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !6291
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %0) #8, !dbg !6291
  ret void, !dbg !6291
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_alloc(%struct.bitmap_head_def* %all_blocks) #4 !dbg !6292 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !6294, metadata !DIExpression()), !dbg !6320
  %0 = bitcast i32* %bb_index to i8*, !dbg !6321
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6321
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6322
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6322
  call void @llvm.dbg.value(metadata i32 0, metadata !6299, metadata !DIExpression()), !dbg !6320
  %call = tail call i32 @max_reg_num() #6, !dbg !6323
  call void @llvm.dbg.value(metadata i32 %call, metadata !6300, metadata !DIExpression()), !dbg !6320
  %call1 = tail call i8* @xmalloc(i64 144) #6, !dbg !6324
  call void @llvm.dbg.value(metadata i8* %call1, metadata !6301, metadata !DIExpression()), !dbg !6320
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !6325
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 5, !dbg !6325
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6325
  %problem_data2 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 5, !dbg !6326
  store i8* %call1, i8** %problem_data2, align 8, !dbg !6327
  %4 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6328
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 3, !dbg !6330
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !6330
  %tobool = icmp eq %struct.alloc_pool_def* %5, null, !dbg !6328
  br i1 %tobool, label %if.then, label %if.end, !dbg !6331

if.then:                                          ; preds = %entry
  %call5 = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.43, i64 0, i64 0), i64 32, i64 50) #6, !dbg !6332
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !6333
  %arrayidx7 = getelementptr inbounds %struct.df, %struct.df* %6, i64 0, i32 1, i64 5, !dbg !6333
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !6333
  %block_pool8 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %7, i64 0, i32 3, !dbg !6334
  store %struct.alloc_pool_def* %call5, %struct.alloc_pool_def** %block_pool8, align 8, !dbg !6335
  %.pre = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !6336
  br label %if.end, !dbg !6333

if.end:                                           ; preds = %entry, %if.then
  %8 = phi %struct.dataflow* [ %4, %entry ], [ %.pre, %if.then ], !dbg !6336
  tail call void @df_grow_bb_info(%struct.dataflow* %8) #7, !dbg !6337
  %byte_lr_bitmaps = getelementptr inbounds i8, i8* %call1, i64 40, !dbg !6338
  %9 = bitcast i8* %byte_lr_bitmaps to %struct.bitmap_obstack*, !dbg !6338
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull %9) #6, !dbg !6339
  %conv = zext i32 %call to i64, !dbg !6340
  %mul = shl nuw nsw i64 %conv, 2, !dbg !6340
  %call11 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !6340
  %regno_start = getelementptr inbounds i8, i8* %call1, i64 24, !dbg !6341
  %10 = bitcast i8* %regno_start to i8**, !dbg !6342
  store i8* %call11, i8** %10, align 8, !dbg !6342
  %call14 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !6343
  %regno_len = getelementptr inbounds i8, i8* %call1, i64 32, !dbg !6344
  %11 = bitcast i8* %regno_len to i8**, !dbg !6345
  store i8* %call14, i8** %11, align 8, !dbg !6345
  %call16 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %9) #6, !dbg !6346
  %hardware_regs_used = getelementptr inbounds i8, i8* %call1, i64 8, !dbg !6347
  %12 = bitcast i8* %hardware_regs_used to %struct.bitmap_head_def**, !dbg !6347
  store %struct.bitmap_head_def* %call16, %struct.bitmap_head_def** %12, align 8, !dbg !6348
  %call18 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %9) #6, !dbg !6349
  %invalidated_by_call = bitcast i8* %call1 to %struct.bitmap_head_def**, !dbg !6350
  store %struct.bitmap_head_def* %call18, %struct.bitmap_head_def** %invalidated_by_call, align 8, !dbg !6351
  %call20 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %9) #6, !dbg !6352
  %needs_expansion = getelementptr inbounds i8, i8* %call1, i64 16, !dbg !6353
  %13 = bitcast i8* %needs_expansion to %struct.bitmap_head_def**, !dbg !6353
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %13, align 8, !dbg !6354
  %14 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6355
  %cfg = getelementptr inbounds %struct.function, %struct.function* %14, i64 0, i32 1, !dbg !6355
  %15 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6355
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %15, i64 0, i32 0, !dbg !6355
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6355
  br label %for.cond, !dbg !6355

for.cond:                                         ; preds = %for.end, %if.end
  %17 = phi %struct.control_flow_graph* [ %15, %if.end ], [ %.pre2, %for.end ], !dbg !6356
  %.pn = phi %struct.basic_block_def* [ %16, %if.end ], [ %bb.0, %for.end ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !6357
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !6357
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !6297, metadata !DIExpression()), !dbg !6320
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %17, i64 0, i32 1, !dbg !6356
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6356
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %18, !dbg !6356
  br i1 %cmp, label %for.end64, label %for.body, !dbg !6355

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !6358
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6358
  %19 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6358
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %19, i64 0, i32 0, !dbg !6358
  br label %for.cond24, !dbg !6358

for.cond24:                                       ; preds = %for.inc, %for.body
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx57, %for.inc ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6359
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6302, metadata !DIExpression()), !dbg !6360
  %tobool25 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6361
  br i1 %tobool25, label %for.end, label %land.rhs, !dbg !6361

land.rhs:                                         ; preds = %for.cond24
  %20 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6361
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %20, i64 0, i32 1, !dbg !6361
  %21 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6361
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6361
  %rt_rtx = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !6361
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6361
  %cmp29 = icmp eq %struct.rtx_def* %insn.0, %23, !dbg !6361
  br i1 %cmp29, label %for.end, label %for.body31, !dbg !6358

for.body31:                                       ; preds = %land.rhs
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6362
  %bf.load = load i32, i32* %24, align 8, !dbg !6362
  %bf.clear = and i32 %bf.load, 65535, !dbg !6362
  %cmp32 = icmp eq i32 %bf.clear, 8, !dbg !6362
  br i1 %cmp32, label %if.then48, label %lor.lhs.false, !dbg !6362

lor.lhs.false:                                    ; preds = %for.body31
  %cmp36 = icmp eq i32 %bf.clear, 7, !dbg !6362
  br i1 %cmp36, label %if.then48, label %lor.lhs.false38, !dbg !6362

lor.lhs.false38:                                  ; preds = %lor.lhs.false
  %cmp41 = icmp eq i32 %bf.clear, 9, !dbg !6362
  br i1 %cmp41, label %if.then48, label %lor.lhs.false43, !dbg !6362

lor.lhs.false43:                                  ; preds = %lor.lhs.false38
  %cmp46 = icmp eq i32 %bf.clear, 10, !dbg !6362
  br i1 %cmp46, label %if.then48, label %for.inc, !dbg !6363

if.then48:                                        ; preds = %lor.lhs.false43, %lor.lhs.false38, %lor.lhs.false, %for.body31
  %25 = load %struct.df*, %struct.df** @df, align 8, !dbg !6364
  %insns = getelementptr inbounds %struct.df, %struct.df* %25, i64 0, i32 10, !dbg !6364
  %26 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6364
  %arrayidx51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6364
  %rt_int = bitcast %union.rtunion_def* %arrayidx51 to i32*, !dbg !6364
  %27 = load i32, i32* %rt_int, align 8, !dbg !6364
  %idxprom = sext i32 %27 to i64, !dbg !6364
  %arrayidx52 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %26, i64 %idxprom, !dbg !6364
  %28 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx52, align 8, !dbg !6364
  call void @llvm.dbg.value(metadata %struct.df_insn_info* %28, metadata !6306, metadata !DIExpression()), !dbg !6365
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %28, i64 0, i32 1, !dbg !6366
  %29 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !6366
  tail call fastcc void @df_byte_lr_check_regs(%union.df_ref_d** %29) #7, !dbg !6367
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %28, i64 0, i32 2, !dbg !6368
  %30 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6368
  tail call fastcc void @df_byte_lr_check_regs(%union.df_ref_d** %30) #7, !dbg !6369
  br label %for.inc, !dbg !6370

for.inc:                                          ; preds = %lor.lhs.false43, %if.then48
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6361
  %rt_rtx57 = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !6361
  br label %for.cond24, !dbg !6361, !llvm.loop !6371

for.end:                                          ; preds = %land.rhs, %for.cond24
  %32 = load %struct.df*, %struct.df** @df, align 8, !dbg !6373
  %arrayidx59 = getelementptr inbounds %struct.df, %struct.df* %32, i64 0, i32 1, i64 5, !dbg !6373
  %33 = load %struct.dataflow*, %struct.dataflow** %arrayidx59, align 8, !dbg !6373
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %33, i64 0, i32 4, !dbg !6374
  %34 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6374
  %index60 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !6375
  %35 = load i32, i32* %index60, align 8, !dbg !6375
  %call61 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %34, i32 %35) #6, !dbg !6376
  %.pre1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6356
  %cfg22.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre1, i64 0, i32 1, !dbg !6377
  %.pre2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg22.phi.trans.insert, align 8, !dbg !6356
  br label %for.cond, !dbg !6356, !llvm.loop !6378

for.end64:                                        ; preds = %for.cond
  %36 = load %struct.df*, %struct.df** @df, align 8, !dbg !6380
  %arrayidx66 = getelementptr inbounds %struct.df, %struct.df* %36, i64 0, i32 1, i64 5, !dbg !6380
  %37 = load %struct.dataflow*, %struct.dataflow** %arrayidx66, align 8, !dbg !6380
  %out_of_date_transfer_functions67 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %37, i64 0, i32 4, !dbg !6381
  %38 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions67, align 8, !dbg !6381
  %call68 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %38, i32 0) #6, !dbg !6382
  %39 = load %struct.df*, %struct.df** @df, align 8, !dbg !6383
  %arrayidx70 = getelementptr inbounds %struct.df, %struct.df* %39, i64 0, i32 1, i64 5, !dbg !6383
  %40 = load %struct.dataflow*, %struct.dataflow** %arrayidx70, align 8, !dbg !6383
  %out_of_date_transfer_functions71 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %40, i64 0, i32 4, !dbg !6384
  %41 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions71, align 8, !dbg !6384
  %call72 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %41, i32 1) #6, !dbg !6385
  call void @llvm.dbg.value(metadata i32 0, metadata !6298, metadata !DIExpression()), !dbg !6320
  %42 = bitcast i8* %regno_start to i32**, !dbg !6386
  %43 = bitcast i8* %regno_len to i32**, !dbg !6386
  %wide.trip.count = zext i32 %call to i64, !dbg !6387
  br label %for.cond73, !dbg !6388

for.cond73:                                       ; preds = %if.end92, %for.end64
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end92 ], [ 0, %for.end64 ], !dbg !6320
  %index.0 = phi i32 [ %add, %if.end92 ], [ 0, %for.end64 ], !dbg !6320
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6298, metadata !DIExpression()), !dbg !6320
  call void @llvm.dbg.value(metadata i32 %index.0, metadata !6299, metadata !DIExpression()), !dbg !6320
  %exitcond = icmp eq i64 %indvars.iv, %wide.trip.count, !dbg !6387
  br i1 %exitcond, label %for.end97, label %for.body76, !dbg !6389

for.body76:                                       ; preds = %for.cond73
  %44 = load i32*, i32** %42, align 8, !dbg !6390
  %arrayidx79 = getelementptr inbounds i32, i32* %44, i64 %indvars.iv, !dbg !6391
  store i32 %index.0, i32* %arrayidx79, align 4, !dbg !6392
  %45 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %13, align 8, !dbg !6393
  %46 = trunc i64 %indvars.iv to i32, !dbg !6395
  %call81 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %45, i32 %46) #6, !dbg !6395
  %tobool82 = icmp eq i32 %call81, 0, !dbg !6395
  br i1 %tobool82, label %if.end92, label %if.then83, !dbg !6396

if.then83:                                        ; preds = %for.body76
  %47 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !6397
  %arrayidx85 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %47, i64 %indvars.iv, !dbg !6397
  %48 = bitcast %struct.rtx_def** %arrayidx85 to i32**, !dbg !6397
  %49 = load i32*, i32** %48, align 8, !dbg !6397
  %bf.load86 = load i32, i32* %49, align 8, !dbg !6397
  %bf.lshr = lshr i32 %bf.load86, 16, !dbg !6397
  %bf.clear87 = and i32 %bf.lshr, 255, !dbg !6397
  %idxprom88 = zext i32 %bf.clear87 to i64, !dbg !6397
  %arrayidx89 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom88, !dbg !6397
  %50 = load i8, i8* %arrayidx89, align 1, !dbg !6397
  %conv91 = zext i8 %50 to i32, !dbg !6397
  call void @llvm.dbg.value(metadata i32 %conv91, metadata !6312, metadata !DIExpression()), !dbg !6386
  br label %if.end92, !dbg !6398

if.end92:                                         ; preds = %for.body76, %if.then83
  %len.0 = phi i32 [ %conv91, %if.then83 ], [ 1, %for.body76 ], !dbg !6399
  call void @llvm.dbg.value(metadata i32 %len.0, metadata !6312, metadata !DIExpression()), !dbg !6386
  %51 = load i32*, i32** %43, align 8, !dbg !6400
  %arrayidx95 = getelementptr inbounds i32, i32* %51, i64 %indvars.iv, !dbg !6401
  store i32 %len.0, i32* %arrayidx95, align 4, !dbg !6402
  %add = add i32 %index.0, %len.0, !dbg !6403
  call void @llvm.dbg.value(metadata i32 %add, metadata !6299, metadata !DIExpression()), !dbg !6320
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6404
  br label %for.cond73, !dbg !6405, !llvm.loop !6406

for.end97:                                        ; preds = %for.cond73
  %52 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %12, align 8, !dbg !6408
  %53 = load %struct.df*, %struct.df** @df, align 8, !dbg !6409
  %hardware_regs_used99 = getelementptr inbounds %struct.df, %struct.df* %53, i64 0, i32 13, !dbg !6410
  %54 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used99, align 8, !dbg !6410
  tail call fastcc void @df_byte_lr_expand_bitmap(%struct.bitmap_head_def* %52, %struct.bitmap_head_def* %54) #7, !dbg !6411
  %55 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %invalidated_by_call, align 8, !dbg !6412
  %56 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !6413
  tail call fastcc void @df_byte_lr_expand_bitmap(%struct.bitmap_head_def* %55, %struct.bitmap_head_def* %56) #7, !dbg !6414
  %57 = load %struct.df*, %struct.df** @df, align 8, !dbg !6415
  %arrayidx102 = getelementptr inbounds %struct.df, %struct.df* %57, i64 0, i32 1, i64 5, !dbg !6415
  %58 = load %struct.dataflow*, %struct.dataflow** %arrayidx102, align 8, !dbg !6415
  %out_of_date_transfer_functions103 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %58, i64 0, i32 4, !dbg !6415
  %59 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions103, align 8, !dbg !6415
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6295, metadata !DIExpression(DW_OP_deref)), !dbg !6320
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6296, metadata !DIExpression(DW_OP_deref)), !dbg !6320
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %59, i32 0, i32* nonnull %bb_index) #7, !dbg !6415
  br label %for.cond104, !dbg !6415

for.cond104:                                      ; preds = %for.inc127, %for.end97
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6295, metadata !DIExpression(DW_OP_deref)), !dbg !6320
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6296, metadata !DIExpression(DW_OP_deref)), !dbg !6320
  %call105 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6416
  %tobool106 = icmp eq i8 %call105, 0, !dbg !6415
  br i1 %tobool106, label %for.end128, label %for.body107, !dbg !6415

for.body107:                                      ; preds = %for.cond104
  %60 = load i32, i32* %bb_index, align 4, !dbg !6417
  call void @llvm.dbg.value(metadata i32 %60, metadata !6295, metadata !DIExpression()), !dbg !6320
  %call108 = call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %60) #7, !dbg !6418
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %call108, metadata !6316, metadata !DIExpression()), !dbg !6419
  %tobool109 = icmp eq %struct.df_byte_lr_bb_info* %call108, null, !dbg !6420
  br i1 %tobool109, label %if.else111, label %if.then110, !dbg !6422

if.then110:                                       ; preds = %for.body107
  %def = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call108, i64 0, i32 0, !dbg !6423
  %61 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !6423
  call void @bitmap_clear(%struct.bitmap_head_def* %61) #6, !dbg !6425
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call108, i64 0, i32 1, !dbg !6426
  %62 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !6426
  call void @bitmap_clear(%struct.bitmap_head_def* %62) #6, !dbg !6427
  br label %for.inc127, !dbg !6428

if.else111:                                       ; preds = %for.body107
  %63 = load %struct.df*, %struct.df** @df, align 8, !dbg !6429
  %arrayidx113 = getelementptr inbounds %struct.df, %struct.df* %63, i64 0, i32 1, i64 5, !dbg !6429
  %64 = load %struct.dataflow*, %struct.dataflow** %arrayidx113, align 8, !dbg !6429
  %block_pool114 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %64, i64 0, i32 3, !dbg !6431
  %65 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool114, align 8, !dbg !6431
  %call115 = call i8* @pool_alloc(%struct.alloc_pool_def* %65) #6, !dbg !6432
  %66 = bitcast i8* %call115 to %struct.df_byte_lr_bb_info*, !dbg !6433
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %66, metadata !6316, metadata !DIExpression()), !dbg !6419
  %67 = load i32, i32* %bb_index, align 4, !dbg !6434
  call void @llvm.dbg.value(metadata i32 %67, metadata !6295, metadata !DIExpression()), !dbg !6320
  call fastcc void @df_byte_lr_set_bb_info(i32 %67, %struct.df_byte_lr_bb_info* %66) #7, !dbg !6435
  %call117 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %9) #6, !dbg !6436
  %use118 = getelementptr inbounds i8, i8* %call115, i64 8, !dbg !6437
  %68 = bitcast i8* %use118 to %struct.bitmap_head_def**, !dbg !6437
  store %struct.bitmap_head_def* %call117, %struct.bitmap_head_def** %68, align 8, !dbg !6438
  %call120 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %9) #6, !dbg !6439
  %def121 = bitcast i8* %call115 to %struct.bitmap_head_def**, !dbg !6440
  store %struct.bitmap_head_def* %call120, %struct.bitmap_head_def** %def121, align 8, !dbg !6441
  %call123 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %9) #6, !dbg !6442
  %in = getelementptr inbounds i8, i8* %call115, i64 16, !dbg !6443
  %69 = bitcast i8* %in to %struct.bitmap_head_def**, !dbg !6443
  store %struct.bitmap_head_def* %call123, %struct.bitmap_head_def** %69, align 8, !dbg !6444
  %call125 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull %9) #6, !dbg !6445
  %out = getelementptr inbounds i8, i8* %call115, i64 24, !dbg !6446
  %70 = bitcast i8* %out to %struct.bitmap_head_def**, !dbg !6446
  store %struct.bitmap_head_def* %call125, %struct.bitmap_head_def** %70, align 8, !dbg !6447
  br label %for.inc127

for.inc127:                                       ; preds = %if.then110, %if.else111
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6295, metadata !DIExpression(DW_OP_deref)), !dbg !6320
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6296, metadata !DIExpression(DW_OP_deref)), !dbg !6320
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6416
  br label %for.cond104, !dbg !6416, !llvm.loop !6448

for.end128:                                       ; preds = %for.cond104
  %71 = load %struct.df*, %struct.df** @df, align 8, !dbg !6450
  %arrayidx130 = getelementptr inbounds %struct.df, %struct.df* %71, i64 0, i32 1, i64 5, !dbg !6450
  %72 = load %struct.dataflow*, %struct.dataflow** %arrayidx130, align 8, !dbg !6450
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %72, i64 0, i32 9, !dbg !6451
  store i8 1, i8* %optional_p, align 2, !dbg !6452
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6453
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6453
  ret void, !dbg !6453
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_reset(%struct.bitmap_head_def* %all_blocks) #4 !dbg !6454 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !6456, metadata !DIExpression()), !dbg !6463
  %0 = bitcast i32* %bb_index to i8*, !dbg !6464
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6464
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6465
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6465
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6457, metadata !DIExpression(DW_OP_deref)), !dbg !6463
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6458, metadata !DIExpression(DW_OP_deref)), !dbg !6463
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !6466
  br label %for.cond, !dbg !6466

for.cond:                                         ; preds = %cond.end, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6457, metadata !DIExpression(DW_OP_deref)), !dbg !6463
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6458, metadata !DIExpression(DW_OP_deref)), !dbg !6463
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6467
  %tobool = icmp eq i8 %call, 0, !dbg !6466
  br i1 %tobool, label %for.end, label %for.body, !dbg !6466

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !6468
  call void @llvm.dbg.value(metadata i32 %2, metadata !6457, metadata !DIExpression()), !dbg !6463
  %call1 = call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %2) #7, !dbg !6469
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %call1, metadata !6459, metadata !DIExpression()), !dbg !6470
  %tobool2 = icmp eq %struct.df_byte_lr_bb_info* %call1, null, !dbg !6471
  br i1 %tobool2, label %cond.true, label %cond.end, !dbg !6471

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2589, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6471
  br label %cond.end, !dbg !6471

cond.end:                                         ; preds = %for.body, %cond.true
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call1, i64 0, i32 2, !dbg !6472
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6472
  call void @bitmap_clear(%struct.bitmap_head_def* %3) #6, !dbg !6473
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call1, i64 0, i32 3, !dbg !6474
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6474
  call void @bitmap_clear(%struct.bitmap_head_def* %4) #6, !dbg !6475
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6457, metadata !DIExpression(DW_OP_deref)), !dbg !6463
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6458, metadata !DIExpression(DW_OP_deref)), !dbg !6463
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6467
  br label %for.cond, !dbg !6467, !llvm.loop !6476

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6478
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6478
  ret void, !dbg !6478
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #4 !dbg !6479 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6481, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !6482, metadata !DIExpression()), !dbg !6484
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !6483, metadata !DIExpression()), !dbg !6484
  %tobool = icmp eq i8* %vbb_info, null, !dbg !6485
  br i1 %tobool, label %if.end, label %if.then, !dbg !6487

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !6483, metadata !DIExpression()), !dbg !6484
  %use = getelementptr inbounds i8, i8* %vbb_info, i64 8, !dbg !6488
  %0 = bitcast i8* %use to %struct.bitmap_head_def**, !dbg !6488
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, align 8, !dbg !6488
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !6488
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %0, align 8, !dbg !6488
  %def = bitcast i8* %vbb_info to %struct.bitmap_head_def**, !dbg !6490
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !6490
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !6490
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %def, align 8, !dbg !6490
  %in = getelementptr inbounds i8, i8* %vbb_info, i64 16, !dbg !6491
  %3 = bitcast i8* %in to %struct.bitmap_head_def**, !dbg !6491
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, align 8, !dbg !6491
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !6491
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %3, align 8, !dbg !6491
  %out = getelementptr inbounds i8, i8* %vbb_info, i64 24, !dbg !6492
  %5 = bitcast i8* %out to %struct.bitmap_head_def**, !dbg !6492
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %5, align 8, !dbg !6492
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !6492
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %5, align 8, !dbg !6492
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !6493
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 1, i64 5, !dbg !6493
  %8 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6493
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %8, i64 0, i32 3, !dbg !6494
  %9 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !6494
  tail call void @pool_free(%struct.alloc_pool_def* %9, i8* nonnull %vbb_info) #6, !dbg !6495
  br label %if.end, !dbg !6496

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6497
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_local_compute(%struct.bitmap_head_def* %all_blocks) #4 !dbg !6498 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !6500, metadata !DIExpression()), !dbg !6509
  %0 = bitcast i32* %bb_index to i8*, !dbg !6510
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6510
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6511
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6511
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !6512
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 5, !dbg !6512
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6512
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 4, !dbg !6512
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6512
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6501, metadata !DIExpression(DW_OP_deref)), !dbg !6509
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6502, metadata !DIExpression(DW_OP_deref)), !dbg !6509
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %4, i32 0, i32* nonnull %bb_index) #7, !dbg !6512
  br label %for.cond, !dbg !6512

for.cond:                                         ; preds = %for.inc, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6501, metadata !DIExpression(DW_OP_deref)), !dbg !6509
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6502, metadata !DIExpression(DW_OP_deref)), !dbg !6509
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6513
  %tobool = icmp eq i8 %call, 0, !dbg !6512
  br i1 %tobool, label %for.end, label %for.body, !dbg !6512

for.body:                                         ; preds = %for.cond
  %5 = load i32, i32* %bb_index, align 4, !dbg !6514
  call void @llvm.dbg.value(metadata i32 %5, metadata !6501, metadata !DIExpression()), !dbg !6509
  %cmp = icmp eq i32 %5, 1, !dbg !6515
  br i1 %cmp, label %if.then, label %if.else, !dbg !6516

if.then:                                          ; preds = %for.body
  %call1 = call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 1) #7, !dbg !6517
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %call1, metadata !6503, metadata !DIExpression()), !dbg !6518
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call1, i64 0, i32 1, !dbg !6519
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !6519
  %7 = load %struct.df*, %struct.df** @df, align 8, !dbg !6520
  %exit_block_uses = getelementptr inbounds %struct.df, %struct.df* %7, i64 0, i32 17, !dbg !6521
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %exit_block_uses, align 8, !dbg !6521
  call fastcc void @df_byte_lr_expand_bitmap(%struct.bitmap_head_def* %6, %struct.bitmap_head_def* %8) #7, !dbg !6522
  br label %for.inc, !dbg !6523

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %5, metadata !6501, metadata !DIExpression()), !dbg !6509
  call fastcc void @df_byte_lr_bb_local_compute(i32 %5) #7, !dbg !6524
  br label %for.inc

for.inc:                                          ; preds = %if.then, %if.else
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6501, metadata !DIExpression(DW_OP_deref)), !dbg !6509
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6502, metadata !DIExpression(DW_OP_deref)), !dbg !6509
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6513
  br label %for.cond, !dbg !6513, !llvm.loop !6525

for.end:                                          ; preds = %for.cond
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !6527
  %arrayidx3 = getelementptr inbounds %struct.df, %struct.df* %9, i64 0, i32 1, i64 5, !dbg !6527
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx3, align 8, !dbg !6527
  %out_of_date_transfer_functions4 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i64 0, i32 4, !dbg !6528
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions4, align 8, !dbg !6528
  call void @bitmap_clear(%struct.bitmap_head_def* %11) #6, !dbg !6529
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6530
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6530
  ret void, !dbg !6530
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_init(%struct.bitmap_head_def* %all_blocks) #4 !dbg !6531 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !6533, metadata !DIExpression()), !dbg !6540
  %0 = bitcast i32* %bb_index to i8*, !dbg !6541
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6541
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6542
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6542
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6534, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6535, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !6543
  br label %for.cond, !dbg !6543

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6534, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6535, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6544
  %tobool = icmp eq i8 %call, 0, !dbg !6543
  br i1 %tobool, label %for.end, label %for.body, !dbg !6543

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !6545
  call void @llvm.dbg.value(metadata i32 %2, metadata !6534, metadata !DIExpression()), !dbg !6540
  %call1 = call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %2) #7, !dbg !6546
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %call1, metadata !6536, metadata !DIExpression()), !dbg !6547
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call1, i64 0, i32 2, !dbg !6548
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6548
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call1, i64 0, i32 1, !dbg !6549
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !6549
  call void @bitmap_copy(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %4) #6, !dbg !6550
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call1, i64 0, i32 3, !dbg !6551
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6551
  call void @bitmap_clear(%struct.bitmap_head_def* %5) #6, !dbg !6552
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !6534, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6535, metadata !DIExpression(DW_OP_deref)), !dbg !6540
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !6544
  br label %for.cond, !dbg !6544, !llvm.loop !6553

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !6555
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6555
  ret void, !dbg !6555
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_confluence_0(%struct.basic_block_def* %bb) #4 !dbg !6556 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6558, metadata !DIExpression()), !dbg !6561
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6562
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !6562
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6562
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !6563
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !6563
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !6563
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !6559, metadata !DIExpression()), !dbg !6561
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6564
  %4 = load i32, i32* %index, align 8, !dbg !6564
  %call = tail call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %4) #7, !dbg !6565
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* undef, metadata !6560, metadata !DIExpression()), !dbg !6561
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6566
  %cfg = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, i32 1, !dbg !6566
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6566
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 1, !dbg !6566
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6566
  %cmp = icmp eq %struct.basic_block_def* %7, %bb, !dbg !6568
  br i1 %cmp, label %if.end, label %if.then, !dbg !6569

if.then:                                          ; preds = %entry
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 3, !dbg !6570
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6570
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %8, metadata !6560, metadata !DIExpression()), !dbg !6561
  %hardware_regs_used = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 1, !dbg !6571
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !6571
  tail call void @bitmap_copy(%struct.bitmap_head_def* %8, %struct.bitmap_head_def* %9) #6, !dbg !6572
  br label %if.end, !dbg !6572

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !6573
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_confluence_n(%struct.edge_def* %e) #4 !dbg !6574 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !6576, metadata !DIExpression()), !dbg !6580
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6581
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !6581
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6581
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !6582
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !6582
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !6582
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !6577, metadata !DIExpression()), !dbg !6580
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !6583
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !6583
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %4, i64 0, i32 9, !dbg !6584
  %5 = load i32, i32* %index, align 8, !dbg !6584
  %call = tail call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %5) #7, !dbg !6585
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 3, !dbg !6586
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6586
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !6578, metadata !DIExpression()), !dbg !6580
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !6587
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !6587
  %index2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i64 0, i32 9, !dbg !6588
  %8 = load i32, i32* %index2, align 8, !dbg !6588
  %call3 = tail call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %8) #7, !dbg !6589
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call3, i64 0, i32 2, !dbg !6590
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6590
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %9, metadata !6579, metadata !DIExpression()), !dbg !6580
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !6591
  %10 = load i32, i32* %flags, align 8, !dbg !6591
  %and = and i32 %10, 8, !dbg !6593
  %tobool = icmp eq i32 %and, 0, !dbg !6593
  br i1 %tobool, label %if.else, label %if.then, !dbg !6594

if.then:                                          ; preds = %entry
  %invalidated_by_call = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 0, !dbg !6595
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %invalidated_by_call, align 8, !dbg !6595
  %call4 = tail call zeroext i8 @bitmap_ior_and_compl_into(%struct.bitmap_head_def* %6, %struct.bitmap_head_def* %9, %struct.bitmap_head_def* %11) #6, !dbg !6596
  br label %if.end, !dbg !6596

if.else:                                          ; preds = %entry
  %call5 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %6, %struct.bitmap_head_def* %9) #6, !dbg !6597
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %hardware_regs_used = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 1, !dbg !6598
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %hardware_regs_used, align 8, !dbg !6598
  %call6 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %6, %struct.bitmap_head_def* %12) #6, !dbg !6599
  ret void, !dbg !6600
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @df_byte_lr_transfer_function(i32 %bb_index) #4 !dbg !6601 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !6603, metadata !DIExpression()), !dbg !6609
  %call = tail call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %bb_index) #7, !dbg !6610
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %call, metadata !6604, metadata !DIExpression()), !dbg !6609
  %in1 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 2, !dbg !6611
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in1, align 8, !dbg !6611
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %0, metadata !6605, metadata !DIExpression()), !dbg !6609
  %out2 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 3, !dbg !6612
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out2, align 8, !dbg !6612
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %1, metadata !6606, metadata !DIExpression()), !dbg !6609
  %use3 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 1, !dbg !6613
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use3, align 8, !dbg !6613
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !6607, metadata !DIExpression()), !dbg !6609
  %def4 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 0, !dbg !6614
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def4, align 8, !dbg !6614
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %3, metadata !6608, metadata !DIExpression()), !dbg !6609
  %call5 = tail call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %0, %struct.bitmap_head_def* %2, %struct.bitmap_head_def* %1, %struct.bitmap_head_def* %3) #6, !dbg !6615
  ret i8 %call5, !dbg !6616
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_free() #4 !dbg !6617 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6620
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !6620
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6620
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !6621
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !6621
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !6621
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !6619, metadata !DIExpression()), !dbg !6622
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !6623
  %4 = load i8**, i8*** %block_info, align 8, !dbg !6623
  %tobool = icmp eq i8** %4, null, !dbg !6625
  br i1 %tobool, label %if.end, label %if.then, !dbg !6626

if.then:                                          ; preds = %entry
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 3, !dbg !6627
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !6627
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %5) #6, !dbg !6629
  %6 = load %struct.df*, %struct.df** @df, align 8, !dbg !6630
  %arrayidx7 = getelementptr inbounds %struct.df, %struct.df* %6, i64 0, i32 1, i64 5, !dbg !6630
  %7 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !6630
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %7, i64 0, i32 2, !dbg !6631
  store i32 0, i32* %block_info_size, align 8, !dbg !6632
  %8 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !6633
  %block_info10 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %8, i64 0, i32 1, !dbg !6634
  %9 = bitcast i8*** %block_info10 to i8**, !dbg !6634
  %10 = load i8*, i8** %9, align 8, !dbg !6634
  tail call void @free(i8* %10) #6, !dbg !6635
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !6636
  %arrayidx12.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 5, !dbg !6622
  %.pre1 = load %struct.dataflow*, %struct.dataflow** %arrayidx12.phi.trans.insert, align 8, !dbg !6636
  br label %if.end, !dbg !6637

if.end:                                           ; preds = %entry, %if.then
  %11 = phi %struct.dataflow* [ %1, %entry ], [ %.pre1, %if.then ], !dbg !6636
  %out_of_date_transfer_functions = getelementptr inbounds %struct.dataflow, %struct.dataflow* %11, i64 0, i32 4, !dbg !6636
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out_of_date_transfer_functions, align 8, !dbg !6636
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %12) #6, !dbg !6636
  %13 = load %struct.df*, %struct.df** @df, align 8, !dbg !6636
  %arrayidx14 = getelementptr inbounds %struct.df, %struct.df* %13, i64 0, i32 1, i64 5, !dbg !6636
  %14 = load %struct.dataflow*, %struct.dataflow** %arrayidx14, align 8, !dbg !6636
  %out_of_date_transfer_functions15 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %14, i64 0, i32 4, !dbg !6636
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out_of_date_transfer_functions15, align 8, !dbg !6636
  %byte_lr_bitmaps = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 5, !dbg !6638
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull %byte_lr_bitmaps) #6, !dbg !6639
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 3, !dbg !6640
  %15 = bitcast i32** %regno_start to i8**, !dbg !6640
  %16 = load i8*, i8** %15, align 8, !dbg !6640
  tail call void @free(i8* %16) #6, !dbg !6641
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 4, !dbg !6642
  %17 = bitcast i32** %regno_len to i8**, !dbg !6642
  %18 = load i8*, i8** %17, align 8, !dbg !6642
  tail call void @free(i8* %18) #6, !dbg !6643
  %19 = bitcast %struct.df_byte_lr_problem_data* %3 to i8*, !dbg !6644
  tail call void @free(i8* %19) #6, !dbg !6645
  %20 = load %struct.df*, %struct.df** @df, align 8, !dbg !6646
  %arrayidx17 = getelementptr inbounds %struct.df, %struct.df* %20, i64 0, i32 1, i64 5, !dbg !6646
  %21 = bitcast %struct.dataflow** %arrayidx17 to i8**, !dbg !6646
  %22 = load i8*, i8** %21, align 8, !dbg !6646
  tail call void @free(i8* %22) #6, !dbg !6647
  ret void, !dbg !6648
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !6649 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6651, metadata !DIExpression()), !dbg !6654
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !6652, metadata !DIExpression()), !dbg !6654
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6655
  %0 = load i32, i32* %index, align 8, !dbg !6655
  %call = tail call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %0) #7, !dbg !6656
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %call, metadata !6653, metadata !DIExpression()), !dbg !6654
  %tobool = icmp eq %struct.df_byte_lr_bb_info* %call, null, !dbg !6657
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !6659

lor.lhs.false:                                    ; preds = %entry
  %in = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 2, !dbg !6660
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6660
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !6661
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !6662

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.44, i64 0, i64 0)) #6, !dbg !6663
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !6664
  tail call void @df_print_byte_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2) #6, !dbg !6665
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.45, i64 0, i64 0)) #6, !dbg !6666
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 1, !dbg !6667
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !6667
  tail call void @df_print_byte_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %3) #6, !dbg !6668
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.46, i64 0, i64 0)) #6, !dbg !6669
  %def = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 0, !dbg !6670
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def, align 8, !dbg !6670
  tail call void @df_print_byte_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %4) #6, !dbg !6671
  br label %cleanup.cont, !dbg !6672

cleanup.cont:                                     ; preds = %lor.lhs.false, %entry, %if.end
  ret void, !dbg !6672
}

; Function Attrs: nounwind uwtable
define internal void @df_byte_lr_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !6673 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !6675, metadata !DIExpression()), !dbg !6678
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !6676, metadata !DIExpression()), !dbg !6678
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !6679
  %0 = load i32, i32* %index, align 8, !dbg !6679
  %call = tail call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %0) #7, !dbg !6680
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %call, metadata !6677, metadata !DIExpression()), !dbg !6678
  %tobool = icmp eq %struct.df_byte_lr_bb_info* %call, null, !dbg !6681
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !6683

lor.lhs.false:                                    ; preds = %entry
  %out = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call, i64 0, i32 3, !dbg !6684
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6684
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !6685
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !6686

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.47, i64 0, i64 0)) #6, !dbg !6687
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !6688
  tail call void @df_print_byte_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2) #6, !dbg !6689
  br label %cleanup.cont, !dbg !6690

cleanup.cont:                                     ; preds = %lor.lhs.false, %entry, %if.end
  ret void, !dbg !6690
}

declare dso_local i32 @max_reg_num() local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @df_byte_lr_check_regs(%union.df_ref_d** %ref_rec) unnamed_addr #4 !dbg !6691 {
entry:
  call void @llvm.dbg.value(metadata %union.df_ref_d** %ref_rec, metadata !6695, metadata !DIExpression()), !dbg !6701
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6702
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !6702
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6702
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !6703
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !6703
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !6703
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !6696, metadata !DIExpression()), !dbg !6701
  %needs_expansion = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 2, !dbg !6704
  br label %for.cond, !dbg !6706

for.cond:                                         ; preds = %for.inc, %entry
  %ref_rec.addr.0 = phi %union.df_ref_d** [ %ref_rec, %entry ], [ %incdec.ptr, %for.inc ]
  call void @llvm.dbg.value(metadata %union.df_ref_d** %ref_rec.addr.0, metadata !6695, metadata !DIExpression()), !dbg !6701
  %4 = load %union.df_ref_d*, %union.df_ref_d** %ref_rec.addr.0, align 8, !dbg !6707
  %tobool = icmp eq %union.df_ref_d* %4, null, !dbg !6708
  br i1 %tobool, label %for.end, label %for.body, !dbg !6708

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %4, metadata !6697, metadata !DIExpression()), !dbg !6709
  %5 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %4, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6710
  %bf.load = load i32, i32* %5, align 8, !dbg !6710
  %and = and i32 %bf.load, 117440512, !dbg !6710
  %cmp = icmp eq i32 %and, 0, !dbg !6710
  br i1 %cmp, label %lor.lhs.false, label %if.then, !dbg !6711

lor.lhs.false:                                    ; preds = %for.body
  %reg = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %4, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6712
  %6 = bitcast %struct.rtx_def** %reg to i32**, !dbg !6712
  %7 = load i32*, i32** %6, align 8, !dbg !6712
  %bf.load3 = load i32, i32* %7, align 8, !dbg !6712
  %bf.clear = and i32 %bf.load3, 65535, !dbg !6712
  %cmp4 = icmp eq i32 %bf.clear, 39, !dbg !6713
  br i1 %cmp4, label %if.then, label %for.inc, !dbg !6714

if.then:                                          ; preds = %for.body, %lor.lhs.false
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %needs_expansion, align 8, !dbg !6715
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %4, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6716
  %9 = load i32, i32* %regno, align 8, !dbg !6716
  %call = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %8, i32 %9) #6, !dbg !6717
  br label %for.inc, !dbg !6717

for.inc:                                          ; preds = %lor.lhs.false, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %ref_rec.addr.0, i64 1, !dbg !6718
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !6695, metadata !DIExpression()), !dbg !6701
  br label %for.cond, !dbg !6719, !llvm.loop !6720

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6722
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_byte_lr_expand_bitmap(%struct.bitmap_head_def* %dest, %struct.bitmap_head_def* %src) unnamed_addr #4 !dbg !6723 {
entry:
  %bi = alloca %struct.bitmap_iterator, align 8
  %i = alloca i32, align 4
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %dest, metadata !6727, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %src, metadata !6728, metadata !DIExpression()), !dbg !6732
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6733
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !6733
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6733
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !6734
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !6734
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !6734
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !6729, metadata !DIExpression()), !dbg !6732
  %4 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !6735
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #8, !dbg !6735
  %5 = bitcast i32* %i to i8*, !dbg !6736
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8, !dbg !6736
  tail call void @bitmap_clear(%struct.bitmap_head_def* %dest) #6, !dbg !6737
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6730, metadata !DIExpression(DW_OP_deref)), !dbg !6732
  call void @llvm.dbg.value(metadata i32* %i, metadata !6731, metadata !DIExpression(DW_OP_deref)), !dbg !6732
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %src, i32 0, i32* nonnull %i) #7, !dbg !6738
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 3, !dbg !6740
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 4, !dbg !6740
  br label %for.cond, !dbg !6738

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6730, metadata !DIExpression(DW_OP_deref)), !dbg !6732
  call void @llvm.dbg.value(metadata i32* %i, metadata !6731, metadata !DIExpression(DW_OP_deref)), !dbg !6732
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6743
  %tobool = icmp eq i8 %call, 0, !dbg !6738
  br i1 %tobool, label %for.end, label %for.body, !dbg !6738

for.body:                                         ; preds = %for.cond
  %6 = load i32*, i32** %regno_start, align 8, !dbg !6744
  %7 = load i32, i32* %i, align 4, !dbg !6745
  call void @llvm.dbg.value(metadata i32 %7, metadata !6731, metadata !DIExpression()), !dbg !6732
  %idxprom = zext i32 %7 to i64, !dbg !6746
  %arrayidx2 = getelementptr inbounds i32, i32* %6, i64 %idxprom, !dbg !6746
  %8 = load i32, i32* %arrayidx2, align 4, !dbg !6746
  %9 = load i32*, i32** %regno_len, align 8, !dbg !6747
  call void @llvm.dbg.value(metadata i32 %7, metadata !6731, metadata !DIExpression()), !dbg !6732
  %arrayidx4 = getelementptr inbounds i32, i32* %9, i64 %idxprom, !dbg !6748
  %10 = load i32, i32* %arrayidx4, align 4, !dbg !6748
  call void @bitmap_set_range(%struct.bitmap_head_def* %dest, i32 %8, i32 %10) #6, !dbg !6749
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6730, metadata !DIExpression(DW_OP_deref)), !dbg !6732
  call void @llvm.dbg.value(metadata i32* %i, metadata !6731, metadata !DIExpression(DW_OP_deref)), !dbg !6732
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !6743
  br label %for.cond, !dbg !6743, !llvm.loop !6750

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8, !dbg !6752
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #8, !dbg !6752
  ret void, !dbg !6752
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %index) unnamed_addr #0 !dbg !6753 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !6757, metadata !DIExpression()), !dbg !6758
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6759
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !6759
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6759
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !6761
  %2 = load i32, i32* %block_info_size, align 8, !dbg !6761
  %cmp = icmp ugt i32 %2, %index, !dbg !6762
  br i1 %cmp, label %if.then, label %return, !dbg !6763

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !6764
  %3 = load i8**, i8*** %block_info, align 8, !dbg !6764
  %idxprom = zext i32 %index to i64, !dbg !6765
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !6765
  %4 = bitcast i8** %arrayidx3 to %struct.df_byte_lr_bb_info**, !dbg !6765
  %5 = load %struct.df_byte_lr_bb_info*, %struct.df_byte_lr_bb_info** %4, align 8, !dbg !6765
  br label %return, !dbg !6766

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_byte_lr_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !6767
  ret %struct.df_byte_lr_bb_info* %retval.0, !dbg !6768
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_byte_lr_set_bb_info(i32 %index, %struct.df_byte_lr_bb_info* %bb_info) unnamed_addr #4 !dbg !6769 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !6773, metadata !DIExpression()), !dbg !6775
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %bb_info, metadata !6774, metadata !DIExpression()), !dbg !6775
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6776
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !6776
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6776
  %tobool = icmp eq %struct.dataflow* %1, null, !dbg !6776
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !6776

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2415, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6776
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !6777
  %arrayidx2.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 5, !dbg !6775
  %.pre1 = load %struct.dataflow*, %struct.dataflow** %arrayidx2.phi.trans.insert, align 8, !dbg !6777
  br label %cond.end, !dbg !6776

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.dataflow* [ %1, %entry ], [ %.pre1, %cond.true ], !dbg !6777
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i64 0, i32 2, !dbg !6777
  %3 = load i32, i32* %block_info_size, align 8, !dbg !6777
  %cmp = icmp ugt i32 %3, %index, !dbg !6777
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !6777

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 2416, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !6777
  %.pre2 = load %struct.df*, %struct.df** @df, align 8, !dbg !6778
  %arrayidx8.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre2, i64 0, i32 1, i64 5, !dbg !6775
  %.pre3 = load %struct.dataflow*, %struct.dataflow** %arrayidx8.phi.trans.insert, align 8, !dbg !6778
  br label %cond.end5, !dbg !6777

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %4 = phi %struct.dataflow* [ %2, %cond.end ], [ %.pre3, %cond.true3 ], !dbg !6778
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 1, !dbg !6779
  %5 = load i8**, i8*** %block_info, align 8, !dbg !6779
  %idxprom = zext i32 %index to i64, !dbg !6778
  %arrayidx9 = getelementptr inbounds i8*, i8** %5, i64 %idxprom, !dbg !6778
  %6 = bitcast i8** %arrayidx9 to %struct.df_byte_lr_bb_info**, !dbg !6780
  store %struct.df_byte_lr_bb_info* %bb_info, %struct.df_byte_lr_bb_info** %6, align 8, !dbg !6780
  ret void, !dbg !6781
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_byte_lr_bb_local_compute(i32 %bb_index) unnamed_addr #4 !dbg !6782 {
entry:
  %sb = alloca i32, align 4
  %lb = alloca i32, align 4
  %sb119 = alloca i32, align 4
  %lb120 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !6784, metadata !DIExpression()), !dbg !6842
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6843
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 5, !dbg !6843
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6843
  %problem_data1 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 5, !dbg !6844
  %2 = bitcast i8** %problem_data1 to %struct.df_byte_lr_problem_data**, !dbg !6844
  %3 = load %struct.df_byte_lr_problem_data*, %struct.df_byte_lr_problem_data** %2, align 8, !dbg !6844
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_problem_data* %3, metadata !6785, metadata !DIExpression()), !dbg !6842
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6845
  %cfg = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, i32 1, !dbg !6845
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6845
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i64 0, i32 2, !dbg !6845
  %6 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !6845
  %tobool = icmp eq %struct.VEC_basic_block_gc* %6, null, !dbg !6845
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6845

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %6, i64 0, i32 0, !dbg !6845
  br label %cond.end, !dbg !6845

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6845
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %bb_index) #7, !dbg !6845
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !6786, metadata !DIExpression()), !dbg !6842
  %call5 = tail call fastcc %struct.df_byte_lr_bb_info* @df_byte_lr_get_bb_info(i32 %bb_index) #7, !dbg !6846
  call void @llvm.dbg.value(metadata %struct.df_byte_lr_bb_info* %call5, metadata !6787, metadata !DIExpression()), !dbg !6842
  %call6 = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !6847
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call6, metadata !6789, metadata !DIExpression()), !dbg !6842
  %regno_start = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 3, !dbg !6848
  %regno_len = getelementptr inbounds %struct.df_byte_lr_problem_data, %struct.df_byte_lr_problem_data* %3, i64 0, i32 4, !dbg !6848
  %def13 = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call5, i64 0, i32 0, !dbg !6848
  %use = getelementptr inbounds %struct.df_byte_lr_bb_info, %struct.df_byte_lr_bb_info* %call5, i64 0, i32 1, !dbg !6848
  br label %for.cond, !dbg !6849

for.cond:                                         ; preds = %for.inc, %cond.end
  %def_rec.0 = phi %union.df_ref_d** [ %call6, %cond.end ], [ %incdec.ptr, %for.inc ], !dbg !6850
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !6789, metadata !DIExpression()), !dbg !6842
  %7 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !6851
  %tobool7 = icmp eq %union.df_ref_d* %7, null, !dbg !6852
  br i1 %tobool7, label %for.end, label %for.body, !dbg !6852

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %7, metadata !6791, metadata !DIExpression()), !dbg !6853
  %8 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %7, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6854
  %bf.load = load i32, i32* %8, align 8, !dbg !6854
  %and = and i32 %bf.load, 131072, !dbg !6855
  %cmp = icmp eq i32 %and, 0, !dbg !6856
  br i1 %cmp, label %if.then, label %for.inc, !dbg !6857

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %7, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6858
  %9 = load i32, i32* %regno, align 8, !dbg !6858
  call void @llvm.dbg.value(metadata i32 %9, metadata !6795, metadata !DIExpression()), !dbg !6848
  %10 = load i32*, i32** %regno_start, align 8, !dbg !6859
  %idxprom = zext i32 %9 to i64, !dbg !6860
  %arrayidx10 = getelementptr inbounds i32, i32* %10, i64 %idxprom, !dbg !6860
  %11 = load i32, i32* %arrayidx10, align 4, !dbg !6860
  call void @llvm.dbg.value(metadata i32 %11, metadata !6798, metadata !DIExpression()), !dbg !6848
  %12 = load i32*, i32** %regno_len, align 8, !dbg !6861
  %arrayidx12 = getelementptr inbounds i32, i32* %12, i64 %idxprom, !dbg !6862
  %13 = load i32, i32* %arrayidx12, align 4, !dbg !6862
  call void @llvm.dbg.value(metadata i32 %13, metadata !6799, metadata !DIExpression()), !dbg !6848
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def13, align 8, !dbg !6863
  tail call void @bitmap_set_range(%struct.bitmap_head_def* %14, i32 %11, i32 %13) #6, !dbg !6864
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !6865
  tail call void @bitmap_clear_range(%struct.bitmap_head_def* %15, i32 %11, i32 %13) #6, !dbg !6866
  br label %for.inc, !dbg !6867

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !6868
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !6789, metadata !DIExpression()), !dbg !6842
  br label %for.cond, !dbg !6869, !llvm.loop !6870

for.end:                                          ; preds = %for.cond
  %call14 = tail call fastcc %union.df_ref_d** @df_get_artificial_uses(i32 %bb_index) #7, !dbg !6872
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call14, metadata !6790, metadata !DIExpression()), !dbg !6842
  br label %for.cond15, !dbg !6873

for.cond15:                                       ; preds = %for.inc37, %for.end
  %use_rec.0 = phi %union.df_ref_d** [ %call14, %for.end ], [ %incdec.ptr38, %for.inc37 ], !dbg !6874
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !6790, metadata !DIExpression()), !dbg !6842
  %16 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !6875
  %tobool16 = icmp eq %union.df_ref_d* %16, null, !dbg !6876
  br i1 %tobool16, label %for.end39, label %for.body17, !dbg !6876

for.body17:                                       ; preds = %for.cond15
  call void @llvm.dbg.value(metadata %union.df_ref_d* %16, metadata !6800, metadata !DIExpression()), !dbg !6877
  %17 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %16, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6878
  %bf.load20 = load i32, i32* %17, align 8, !dbg !6878
  %and22 = and i32 %bf.load20, 131072, !dbg !6879
  %cmp23 = icmp eq i32 %and22, 0, !dbg !6880
  br i1 %cmp23, label %if.then24, label %for.inc37, !dbg !6881

if.then24:                                        ; preds = %for.body17
  %regno26 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %16, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6882
  %18 = load i32, i32* %regno26, align 8, !dbg !6882
  call void @llvm.dbg.value(metadata i32 %18, metadata !6804, metadata !DIExpression()), !dbg !6883
  %19 = load i32*, i32** %regno_start, align 8, !dbg !6884
  %idxprom29 = zext i32 %18 to i64, !dbg !6885
  %arrayidx30 = getelementptr inbounds i32, i32* %19, i64 %idxprom29, !dbg !6885
  %20 = load i32, i32* %arrayidx30, align 4, !dbg !6885
  call void @llvm.dbg.value(metadata i32 %20, metadata !6807, metadata !DIExpression()), !dbg !6883
  %21 = load i32*, i32** %regno_len, align 8, !dbg !6886
  %arrayidx34 = getelementptr inbounds i32, i32* %21, i64 %idxprom29, !dbg !6887
  %22 = load i32, i32* %arrayidx34, align 4, !dbg !6887
  call void @llvm.dbg.value(metadata i32 %22, metadata !6808, metadata !DIExpression()), !dbg !6883
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !6888
  tail call void @bitmap_set_range(%struct.bitmap_head_def* %23, i32 %20, i32 %22) #6, !dbg !6889
  br label %for.inc37, !dbg !6890

for.inc37:                                        ; preds = %for.body17, %if.then24
  %incdec.ptr38 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !6891
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr38, metadata !6790, metadata !DIExpression()), !dbg !6842
  br label %for.cond15, !dbg !6892, !llvm.loop !6893

for.end39:                                        ; preds = %for.cond15
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !6895
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6895
  %24 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6895
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %24, i64 0, i32 1, !dbg !6895
  %25 = bitcast i32* %sb to i8*, !dbg !6896
  %26 = bitcast i32* %lb to i8*, !dbg !6896
  %27 = bitcast i32* %sb119 to i8*, !dbg !6897
  %28 = bitcast i32* %lb120 to i8*, !dbg !6897
  br label %for.cond40, !dbg !6895

for.cond40:                                       ; preds = %cleanup, %for.end39
  %insn.0.in = phi %struct.rtx_def** [ %end_, %for.end39 ], [ %rt_rtx138, %cleanup ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6898
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6788, metadata !DIExpression()), !dbg !6842
  %tobool41 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6899
  br i1 %tobool41, label %for.end139, label %land.rhs, !dbg !6899

land.rhs:                                         ; preds = %for.cond40
  %29 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6899
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %29, i64 0, i32 0, !dbg !6899
  %30 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6899
  %31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6899
  %rt_rtx = bitcast %union.rtunion_def* %31 to %struct.rtx_def**, !dbg !6899
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6899
  %cmp45 = icmp eq %struct.rtx_def* %insn.0, %32, !dbg !6899
  br i1 %cmp45, label %for.end139, label %for.body46, !dbg !6895

for.body46:                                       ; preds = %land.rhs
  %arrayidx49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6900
  %rt_int = bitcast %union.rtunion_def* %arrayidx49 to i32*, !dbg !6900
  %33 = load i32, i32* %rt_int, align 8, !dbg !6900
  call void @llvm.dbg.value(metadata i32 %33, metadata !6809, metadata !DIExpression()), !dbg !6901
  %34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6902
  %bf.load50 = load i32, i32* %34, align 8, !dbg !6902
  %bf.clear = and i32 %bf.load50, 65535, !dbg !6902
  %cmp51 = icmp eq i32 %bf.clear, 8, !dbg !6902
  br i1 %cmp51, label %if.end64, label %lor.lhs.false, !dbg !6902

lor.lhs.false:                                    ; preds = %for.body46
  %cmp54 = icmp eq i32 %bf.clear, 7, !dbg !6902
  br i1 %cmp54, label %if.end64, label %lor.lhs.false55, !dbg !6902

lor.lhs.false55:                                  ; preds = %lor.lhs.false
  %cmp58 = icmp eq i32 %bf.clear, 9, !dbg !6902
  br i1 %cmp58, label %if.end64, label %lor.lhs.false59, !dbg !6902

lor.lhs.false59:                                  ; preds = %lor.lhs.false55
  %cmp62 = icmp eq i32 %bf.clear, 10, !dbg !6902
  br i1 %cmp62, label %if.end64, label %cleanup, !dbg !6904

if.end64:                                         ; preds = %lor.lhs.false59, %lor.lhs.false55, %lor.lhs.false, %for.body46
  %35 = load %struct.df*, %struct.df** @df, align 8, !dbg !6905
  %insns = getelementptr inbounds %struct.df, %struct.df* %35, i64 0, i32 10, !dbg !6905
  %36 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6905
  %idxprom65 = zext i32 %33 to i64, !dbg !6905
  %arrayidx66 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %36, i64 %idxprom65, !dbg !6905
  %37 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx66, align 8, !dbg !6905
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %37, i64 0, i32 1, !dbg !6905
  %38 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !6905
  call void @llvm.dbg.value(metadata %union.df_ref_d** %38, metadata !6789, metadata !DIExpression()), !dbg !6842
  br label %for.cond67, !dbg !6906

for.cond67:                                       ; preds = %for.inc98, %if.end64
  %def_rec.1 = phi %union.df_ref_d** [ %38, %if.end64 ], [ %incdec.ptr99, %for.inc98 ], !dbg !6907
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.1, metadata !6789, metadata !DIExpression()), !dbg !6842
  %39 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.1, align 8, !dbg !6908
  %tobool68 = icmp eq %union.df_ref_d* %39, null, !dbg !6909
  br i1 %tobool68, label %for.end100, label %for.body69, !dbg !6909

for.body69:                                       ; preds = %for.cond67
  call void @llvm.dbg.value(metadata %union.df_ref_d* %39, metadata !6813, metadata !DIExpression()), !dbg !6910
  %40 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %39, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6911
  %bf.load72 = load i32, i32* %40, align 8, !dbg !6911
  %and74 = and i32 %bf.load72, 65536, !dbg !6912
  %tobool75 = icmp eq i32 %and74, 0, !dbg !6912
  br i1 %tobool75, label %if.then76, label %for.inc98, !dbg !6913

if.then76:                                        ; preds = %for.body69
  %regno79 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %39, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6914
  %41 = load i32, i32* %regno79, align 8, !dbg !6914
  call void @llvm.dbg.value(metadata i32 %41, metadata !6817, metadata !DIExpression()), !dbg !6896
  %42 = load i32*, i32** %regno_start, align 8, !dbg !6915
  %idxprom82 = zext i32 %41 to i64, !dbg !6916
  %arrayidx83 = getelementptr inbounds i32, i32* %42, i64 %idxprom82, !dbg !6916
  %43 = load i32, i32* %arrayidx83, align 4, !dbg !6916
  call void @llvm.dbg.value(metadata i32 %43, metadata !6820, metadata !DIExpression()), !dbg !6896
  %44 = load i32*, i32** %regno_len, align 8, !dbg !6917
  %arrayidx87 = getelementptr inbounds i32, i32* %44, i64 %idxprom82, !dbg !6918
  %45 = load i32, i32* %arrayidx87, align 4, !dbg !6918
  call void @llvm.dbg.value(metadata i32 %45, metadata !6821, metadata !DIExpression()), !dbg !6896
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #8, !dbg !6919
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #8, !dbg !6920
  call void @llvm.dbg.value(metadata i32* %sb, metadata !6822, metadata !DIExpression(DW_OP_deref)), !dbg !6896
  call void @llvm.dbg.value(metadata i32* %lb, metadata !6823, metadata !DIExpression(DW_OP_deref)), !dbg !6896
  %call88 = call zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d* nonnull %39, i32 1, i32* nonnull %sb, i32* nonnull %lb) #6, !dbg !6921
  %tobool89 = icmp eq i8 %call88, 0, !dbg !6921
  br i1 %tobool89, label %if.then90, label %if.end91, !dbg !6923

if.then90:                                        ; preds = %if.then76
  %46 = load i32, i32* %sb, align 4, !dbg !6924
  call void @llvm.dbg.value(metadata i32 %46, metadata !6822, metadata !DIExpression()), !dbg !6896
  %add = add i32 %43, %46, !dbg !6926
  call void @llvm.dbg.value(metadata i32 %add, metadata !6820, metadata !DIExpression()), !dbg !6896
  %47 = load i32, i32* %lb, align 4, !dbg !6927
  call void @llvm.dbg.value(metadata i32 %47, metadata !6823, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.value(metadata i32 %46, metadata !6822, metadata !DIExpression()), !dbg !6896
  %sub = sub i32 %47, %46, !dbg !6928
  call void @llvm.dbg.value(metadata i32 %sub, metadata !6821, metadata !DIExpression()), !dbg !6896
  br label %if.end91, !dbg !6929

if.end91:                                         ; preds = %if.then76, %if.then90
  %start80.0 = phi i32 [ %43, %if.then76 ], [ %add, %if.then90 ], !dbg !6896
  %len84.0 = phi i32 [ %45, %if.then76 ], [ %sub, %if.then90 ], !dbg !6896
  call void @llvm.dbg.value(metadata i32 %len84.0, metadata !6821, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.value(metadata i32 %start80.0, metadata !6820, metadata !DIExpression()), !dbg !6896
  %tobool92 = icmp eq i32 %len84.0, 0, !dbg !6930
  br i1 %tobool92, label %if.end96, label %if.then93, !dbg !6932

if.then93:                                        ; preds = %if.end91
  %48 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def13, align 8, !dbg !6933
  call void @bitmap_set_range(%struct.bitmap_head_def* %48, i32 %start80.0, i32 %len84.0) #6, !dbg !6935
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !6936
  call void @bitmap_clear_range(%struct.bitmap_head_def* %49, i32 %start80.0, i32 %len84.0) #6, !dbg !6937
  br label %if.end96, !dbg !6938

if.end96:                                         ; preds = %if.end91, %if.then93
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #8, !dbg !6939
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #8, !dbg !6939
  br label %for.inc98, !dbg !6940

for.inc98:                                        ; preds = %for.body69, %if.end96
  %incdec.ptr99 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.1, i64 1, !dbg !6941
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr99, metadata !6789, metadata !DIExpression()), !dbg !6842
  br label %for.cond67, !dbg !6942, !llvm.loop !6943

for.end100:                                       ; preds = %for.cond67
  %50 = load %struct.df*, %struct.df** @df, align 8, !dbg !6945
  %insns101 = getelementptr inbounds %struct.df, %struct.df* %50, i64 0, i32 10, !dbg !6945
  %51 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns101, align 8, !dbg !6945
  %arrayidx103 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %51, i64 %idxprom65, !dbg !6945
  %52 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx103, align 8, !dbg !6945
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %52, i64 0, i32 2, !dbg !6945
  %53 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6945
  call void @llvm.dbg.value(metadata %union.df_ref_d** %53, metadata !6790, metadata !DIExpression()), !dbg !6842
  br label %for.cond104, !dbg !6946

for.cond104:                                      ; preds = %if.end130, %for.end100
  %use_rec.1 = phi %union.df_ref_d** [ %53, %for.end100 ], [ %incdec.ptr132, %if.end130 ], !dbg !6947
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.1, metadata !6790, metadata !DIExpression()), !dbg !6842
  %54 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.1, align 8, !dbg !6948
  %tobool105 = icmp eq %union.df_ref_d* %54, null, !dbg !6949
  br i1 %tobool105, label %cleanup.loopexit, label %for.body106, !dbg !6949

for.body106:                                      ; preds = %for.cond104
  call void @llvm.dbg.value(metadata %union.df_ref_d* %54, metadata !6824, metadata !DIExpression()), !dbg !6897
  %regno110 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %54, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6950
  %55 = load i32, i32* %regno110, align 8, !dbg !6950
  call void @llvm.dbg.value(metadata i32 %55, metadata !6828, metadata !DIExpression()), !dbg !6897
  %56 = load i32*, i32** %regno_start, align 8, !dbg !6951
  %idxprom113 = zext i32 %55 to i64, !dbg !6952
  %arrayidx114 = getelementptr inbounds i32, i32* %56, i64 %idxprom113, !dbg !6952
  %57 = load i32, i32* %arrayidx114, align 4, !dbg !6952
  call void @llvm.dbg.value(metadata i32 %57, metadata !6829, metadata !DIExpression()), !dbg !6897
  %58 = load i32*, i32** %regno_len, align 8, !dbg !6953
  %arrayidx118 = getelementptr inbounds i32, i32* %58, i64 %idxprom113, !dbg !6954
  %59 = load i32, i32* %arrayidx118, align 4, !dbg !6954
  call void @llvm.dbg.value(metadata i32 %59, metadata !6830, metadata !DIExpression()), !dbg !6897
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %27) #8, !dbg !6955
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #8, !dbg !6956
  call void @llvm.dbg.value(metadata i32* %sb119, metadata !6831, metadata !DIExpression(DW_OP_deref)), !dbg !6897
  call void @llvm.dbg.value(metadata i32* %lb120, metadata !6832, metadata !DIExpression(DW_OP_deref)), !dbg !6897
  %call121 = call zeroext i8 @df_compute_accessed_bytes(%union.df_ref_d* nonnull %54, i32 0, i32* nonnull %sb119, i32* nonnull %lb120) #6, !dbg !6957
  %tobool122 = icmp eq i8 %call121, 0, !dbg !6957
  br i1 %tobool122, label %if.then123, label %if.end126, !dbg !6959

if.then123:                                       ; preds = %for.body106
  %60 = load i32, i32* %sb119, align 4, !dbg !6960
  call void @llvm.dbg.value(metadata i32 %60, metadata !6831, metadata !DIExpression()), !dbg !6897
  %add124 = add i32 %57, %60, !dbg !6962
  call void @llvm.dbg.value(metadata i32 %add124, metadata !6829, metadata !DIExpression()), !dbg !6897
  %61 = load i32, i32* %lb120, align 4, !dbg !6963
  call void @llvm.dbg.value(metadata i32 %61, metadata !6832, metadata !DIExpression()), !dbg !6897
  call void @llvm.dbg.value(metadata i32 %60, metadata !6831, metadata !DIExpression()), !dbg !6897
  %sub125 = sub i32 %61, %60, !dbg !6964
  call void @llvm.dbg.value(metadata i32 %sub125, metadata !6830, metadata !DIExpression()), !dbg !6897
  br label %if.end126, !dbg !6965

if.end126:                                        ; preds = %for.body106, %if.then123
  %start111.0 = phi i32 [ %57, %for.body106 ], [ %add124, %if.then123 ], !dbg !6897
  %len115.0 = phi i32 [ %59, %for.body106 ], [ %sub125, %if.then123 ], !dbg !6897
  call void @llvm.dbg.value(metadata i32 %len115.0, metadata !6830, metadata !DIExpression()), !dbg !6897
  call void @llvm.dbg.value(metadata i32 %start111.0, metadata !6829, metadata !DIExpression()), !dbg !6897
  %tobool127 = icmp eq i32 %len115.0, 0, !dbg !6966
  br i1 %tobool127, label %if.end130, label %if.then128, !dbg !6968

if.then128:                                       ; preds = %if.end126
  %62 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !6969
  call void @bitmap_set_range(%struct.bitmap_head_def* %62, i32 %start111.0, i32 %len115.0) #6, !dbg !6970
  br label %if.end130, !dbg !6970

if.end130:                                        ; preds = %if.end126, %if.then128
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #8, !dbg !6971
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %27) #8, !dbg !6971
  %incdec.ptr132 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.1, i64 1, !dbg !6972
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr132, metadata !6790, metadata !DIExpression()), !dbg !6842
  br label %for.cond104, !dbg !6973, !llvm.loop !6974

cleanup.loopexit:                                 ; preds = %for.cond104
  br label %cleanup, !dbg !6899

cleanup:                                          ; preds = %cleanup.loopexit, %lor.lhs.false59
  %63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6899
  %rt_rtx138 = bitcast %union.rtunion_def* %63 to %struct.rtx_def**, !dbg !6899
  br label %for.cond40, !dbg !6899, !llvm.loop !6976

for.end139:                                       ; preds = %land.rhs, %for.cond40
  %call140 = call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !6978
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call140, metadata !6789, metadata !DIExpression()), !dbg !6842
  br label %for.cond141, !dbg !6979

for.cond141:                                      ; preds = %for.inc165, %for.end139
  %def_rec.2 = phi %union.df_ref_d** [ %call140, %for.end139 ], [ %incdec.ptr166, %for.inc165 ], !dbg !6980
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.2, metadata !6789, metadata !DIExpression()), !dbg !6842
  %64 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.2, align 8, !dbg !6981
  %tobool142 = icmp eq %union.df_ref_d* %64, null, !dbg !6982
  br i1 %tobool142, label %for.end167, label %for.body143, !dbg !6982

for.body143:                                      ; preds = %for.cond141
  call void @llvm.dbg.value(metadata %union.df_ref_d* %64, metadata !6833, metadata !DIExpression()), !dbg !6983
  %65 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %64, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6984
  %bf.load146 = load i32, i32* %65, align 8, !dbg !6984
  %and148 = and i32 %bf.load146, 131072, !dbg !6985
  %tobool149 = icmp eq i32 %and148, 0, !dbg !6985
  br i1 %tobool149, label %for.inc165, label %if.then150, !dbg !6986

if.then150:                                       ; preds = %for.body143
  %regno153 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %64, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6987
  %66 = load i32, i32* %regno153, align 8, !dbg !6987
  call void @llvm.dbg.value(metadata i32 %66, metadata !6837, metadata !DIExpression()), !dbg !6988
  %67 = load i32*, i32** %regno_start, align 8, !dbg !6989
  %idxprom156 = zext i32 %66 to i64, !dbg !6990
  %arrayidx157 = getelementptr inbounds i32, i32* %67, i64 %idxprom156, !dbg !6990
  %68 = load i32, i32* %arrayidx157, align 4, !dbg !6990
  call void @llvm.dbg.value(metadata i32 %68, metadata !6840, metadata !DIExpression()), !dbg !6988
  %69 = load i32*, i32** %regno_len, align 8, !dbg !6991
  %arrayidx161 = getelementptr inbounds i32, i32* %69, i64 %idxprom156, !dbg !6992
  %70 = load i32, i32* %arrayidx161, align 4, !dbg !6992
  call void @llvm.dbg.value(metadata i32 %70, metadata !6841, metadata !DIExpression()), !dbg !6988
  %71 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %def13, align 8, !dbg !6993
  call void @bitmap_set_range(%struct.bitmap_head_def* %71, i32 %68, i32 %70) #6, !dbg !6994
  %72 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %use, align 8, !dbg !6995
  call void @bitmap_clear_range(%struct.bitmap_head_def* %72, i32 %68, i32 %70) #6, !dbg !6996
  br label %for.inc165, !dbg !6997

for.inc165:                                       ; preds = %for.body143, %if.then150
  %incdec.ptr166 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.2, i64 1, !dbg !6998
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr166, metadata !6789, metadata !DIExpression()), !dbg !6842
  br label %for.cond141, !dbg !6999, !llvm.loop !7000

for.end167:                                       ; preds = %for.cond141
  ret void, !dbg !7002
}

declare dso_local void @df_print_byte_regset(%struct._IO_FILE*, %struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal void @df_note_alloc(%struct.bitmap_head_def* %all_blocks) #4 !dbg !7003 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !7005, metadata !DIExpression()), !dbg !7006
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7007
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 6, !dbg !7007
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7007
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 9, !dbg !7008
  store i8 1, i8* %optional_p, align 2, !dbg !7009
  ret void, !dbg !7010
}

; Function Attrs: nounwind uwtable
define internal void @df_note_compute(%struct.bitmap_head_def* %all_blocks) #4 !dbg !7011 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !7013, metadata !DIExpression()), !dbg !7019
  %0 = bitcast i32* %bb_index to i8*, !dbg !7020
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7020
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7021
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7021
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @df_bitmap_obstack) #6, !dbg !7022
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !7016, metadata !DIExpression()), !dbg !7019
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @df_bitmap_obstack) #6, !dbg !7023
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !7017, metadata !DIExpression()), !dbg !7019
  %call2 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @df_bitmap_obstack) #6, !dbg !7024
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call2, metadata !7018, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7014, metadata !DIExpression(DW_OP_deref)), !dbg !7019
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7015, metadata !DIExpression(DW_OP_deref)), !dbg !7019
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !7025
  br label %for.cond, !dbg !7025

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7014, metadata !DIExpression(DW_OP_deref)), !dbg !7019
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7015, metadata !DIExpression(DW_OP_deref)), !dbg !7019
  %call3 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !7027
  %tobool = icmp eq i8 %call3, 0, !dbg !7025
  br i1 %tobool, label %for.end, label %for.body, !dbg !7025

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !7029
  call void @llvm.dbg.value(metadata i32 %2, metadata !7014, metadata !DIExpression()), !dbg !7019
  call fastcc void @df_note_bb_compute(i32 %2, %struct.bitmap_head_def* %call, %struct.bitmap_head_def* %call1, %struct.bitmap_head_def* %call2) #7, !dbg !7031
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7014, metadata !DIExpression(DW_OP_deref)), !dbg !7019
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7015, metadata !DIExpression(DW_OP_deref)), !dbg !7019
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !7027
  br label %for.cond, !dbg !7027, !llvm.loop !7032

for.end:                                          ; preds = %for.cond
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !7034
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !7016, metadata !DIExpression()), !dbg !7019
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1) #6, !dbg !7035
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !7017, metadata !DIExpression()), !dbg !7019
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call2) #6, !dbg !7036
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !7018, metadata !DIExpression()), !dbg !7019
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7037
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7037
  ret void, !dbg !7037
}

; Function Attrs: nounwind uwtable
define internal void @df_note_free() #4 !dbg !7038 {
entry:
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7039
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 6, !dbg !7039
  %1 = bitcast %struct.dataflow** %arrayidx to i8**, !dbg !7039
  %2 = load i8*, i8** %1, align 8, !dbg !7039
  tail call void @free(i8* %2) #6, !dbg !7040
  ret void, !dbg !7041
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_note_bb_compute(i32 %bb_index, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def* %artificial_uses) unnamed_addr #4 !dbg !7042 {
entry:
  %old_dead_notes = alloca %struct.rtx_def*, align 8
  %old_unused_notes = alloca %struct.rtx_def*, align 8
  %really_add_notes = alloca i8, align 1
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !7046, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !7047, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %do_not_gen, metadata !7048, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %artificial_uses, metadata !7049, metadata !DIExpression()), !dbg !7109
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7110
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7110
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7110
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !7110
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7110
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !7110
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7110

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !7110
  br label %cond.end, !dbg !7110

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7110
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %bb_index) #7, !dbg !7110
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !7050, metadata !DIExpression()), !dbg !7109
  %call4 = tail call %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def* %call) #7, !dbg !7111
  tail call void @bitmap_copy(%struct.bitmap_head_def* %live, %struct.bitmap_head_def* %call4) #6, !dbg !7112
  tail call void @bitmap_clear(%struct.bitmap_head_def* %artificial_uses) #6, !dbg !7113
  %call5 = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !7114
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call5, metadata !7052, metadata !DIExpression()), !dbg !7109
  br label %for.cond, !dbg !7115

for.cond:                                         ; preds = %for.inc, %cond.end
  %def_rec.0 = phi %union.df_ref_d** [ %call5, %cond.end ], [ %incdec.ptr, %for.inc ], !dbg !7116
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !7052, metadata !DIExpression()), !dbg !7109
  %3 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !7117
  %tobool6 = icmp eq %union.df_ref_d* %3, null, !dbg !7118
  br i1 %tobool6, label %for.end, label %for.body, !dbg !7118

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %union.df_ref_d* %3, metadata !7054, metadata !DIExpression()), !dbg !7119
  %4 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %3, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !7120
  %bf.load = load i32, i32* %4, align 8, !dbg !7120
  %and = and i32 %bf.load, 131072, !dbg !7122
  %cmp = icmp eq i32 %and, 0, !dbg !7123
  br i1 %cmp, label %if.then, label %for.inc, !dbg !7124

if.then:                                          ; preds = %for.body
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %3, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !7125
  %5 = load i32, i32* %regno, align 8, !dbg !7125
  %call9 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live, i32 %5) #6, !dbg !7126
  br label %for.inc, !dbg !7126

for.inc:                                          ; preds = %for.body, %if.then
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !7127
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !7052, metadata !DIExpression()), !dbg !7109
  br label %for.cond, !dbg !7128, !llvm.loop !7129

for.end:                                          ; preds = %for.cond
  %call10 = tail call fastcc %union.df_ref_d** @df_get_artificial_uses(i32 %bb_index) #7, !dbg !7131
  call void @llvm.dbg.value(metadata %union.df_ref_d** %call10, metadata !7053, metadata !DIExpression()), !dbg !7109
  br label %for.cond11, !dbg !7132

for.cond11:                                       ; preds = %for.inc26, %for.end
  %use_rec.0 = phi %union.df_ref_d** [ %call10, %for.end ], [ %incdec.ptr27, %for.inc26 ], !dbg !7133
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !7053, metadata !DIExpression()), !dbg !7109
  %6 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !7134
  %tobool12 = icmp eq %union.df_ref_d* %6, null, !dbg !7135
  br i1 %tobool12, label %for.end28, label %for.body13, !dbg !7135

for.body13:                                       ; preds = %for.cond11
  call void @llvm.dbg.value(metadata %union.df_ref_d* %6, metadata !7058, metadata !DIExpression()), !dbg !7136
  %7 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %6, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !7137
  %bf.load15 = load i32, i32* %7, align 8, !dbg !7137
  %and17 = and i32 %bf.load15, 131072, !dbg !7138
  %cmp18 = icmp eq i32 %and17, 0, !dbg !7139
  br i1 %cmp18, label %if.then19, label %for.inc26, !dbg !7140

if.then19:                                        ; preds = %for.body13
  %regno22 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %6, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !7141
  %8 = load i32, i32* %regno22, align 8, !dbg !7141
  call void @llvm.dbg.value(metadata i32 %8, metadata !7062, metadata !DIExpression()), !dbg !7142
  %call23 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %live, i32 %8) #6, !dbg !7143
  %call24 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %artificial_uses, i32 %8) #6, !dbg !7144
  br label %for.inc26, !dbg !7145

for.inc26:                                        ; preds = %for.body13, %if.then19
  %incdec.ptr27 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !7146
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr27, metadata !7053, metadata !DIExpression()), !dbg !7109
  br label %for.cond11, !dbg !7147, !llvm.loop !7148

for.end28:                                        ; preds = %for.cond11
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !7150
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7150
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7150
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 1, !dbg !7150
  %10 = bitcast %struct.rtx_def** %old_dead_notes to i8*, !dbg !7151
  %11 = bitcast %struct.rtx_def** %old_unused_notes to i8*, !dbg !7151
  %12 = bitcast %struct.rtx_def** %old_unused_notes to i64*, !dbg !7152
  %13 = bitcast %struct.rtx_def** %old_dead_notes to i64*, !dbg !7153
  br label %for.cond29, !dbg !7150

for.cond29:                                       ; preds = %cleanup297, %for.end28
  %insn.0.in = phi %struct.rtx_def** [ %end_, %for.end28 ], [ %rt_rtx308, %cleanup297 ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !7154
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !7051, metadata !DIExpression()), !dbg !7109
  %tobool30 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !7155
  br i1 %tobool30, label %for.end309, label %land.rhs, !dbg !7155

land.rhs:                                         ; preds = %for.cond29
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7155
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i64 0, i32 0, !dbg !7155
  %15 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7155
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7155
  %rt_rtx = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !7155
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7155
  %cmp33 = icmp eq %struct.rtx_def* %insn.0, %17, !dbg !7155
  br i1 %cmp33, label %for.end309, label %for.body34, !dbg !7150

for.body34:                                       ; preds = %land.rhs
  %arrayidx37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7156
  %rt_int = bitcast %union.rtunion_def* %arrayidx37 to i32*, !dbg !7156
  %18 = load i32, i32* %rt_int, align 8, !dbg !7156
  call void @llvm.dbg.value(metadata i32 %18, metadata !7065, metadata !DIExpression()), !dbg !7151
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8, !dbg !7157
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #8, !dbg !7158
  %19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !7159
  %bf.load38 = load i32, i32* %19, align 8, !dbg !7159
  %bf.clear = and i32 %bf.load38, 65535, !dbg !7159
  %cmp39 = icmp eq i32 %bf.clear, 8, !dbg !7159
  br i1 %cmp39, label %if.end52, label %lor.lhs.false, !dbg !7159

lor.lhs.false:                                    ; preds = %for.body34
  %cmp42 = icmp eq i32 %bf.clear, 7, !dbg !7159
  br i1 %cmp42, label %if.end52, label %lor.lhs.false43, !dbg !7159

lor.lhs.false43:                                  ; preds = %lor.lhs.false
  %cmp46 = icmp eq i32 %bf.clear, 9, !dbg !7159
  br i1 %cmp46, label %if.end52, label %lor.lhs.false47, !dbg !7159

lor.lhs.false47:                                  ; preds = %lor.lhs.false43
  %cmp50 = icmp eq i32 %bf.clear, 10, !dbg !7159
  br i1 %cmp50, label %if.end52, label %cleanup297, !dbg !7161

if.end52:                                         ; preds = %lor.lhs.false47, %lor.lhs.false43, %lor.lhs.false, %for.body34
  %cmp55 = icmp eq i32 %bf.clear, 7, !dbg !7162
  %conv = zext i1 %cmp55 to i32, !dbg !7162
  call void @llvm.dbg.value(metadata i32 %conv, metadata !7072, metadata !DIExpression()), !dbg !7151
  call void @bitmap_clear(%struct.bitmap_head_def* %do_not_gen) #6, !dbg !7163
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_dead_notes, metadata !7070, metadata !DIExpression(DW_OP_deref)), !dbg !7151
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_unused_notes, metadata !7071, metadata !DIExpression(DW_OP_deref)), !dbg !7151
  call fastcc void @df_kill_notes(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def** nonnull %old_dead_notes, %struct.rtx_def** nonnull %old_unused_notes) #7, !dbg !7164
  %bf.load56 = load i32, i32* %19, align 8, !dbg !7165
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !7165
  %cmp58 = icmp eq i32 %bf.clear57, 10, !dbg !7165
  %20 = load %struct.df*, %struct.df** @df, align 8, !dbg !7166
  %insns = getelementptr inbounds %struct.df, %struct.df* %20, i64 0, i32 10, !dbg !7166
  %21 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !7166
  %idxprom = zext i32 %18 to i64, !dbg !7166
  %arrayidx61 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %21, i64 %idxprom, !dbg !7166
  %22 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx61, align 8, !dbg !7166
  %mw_hardregs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %22, i64 0, i32 4, !dbg !7166
  %23 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs, align 8, !dbg !7166
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg** %23, metadata !7069, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg** %23, metadata !7069, metadata !DIExpression()), !dbg !7151
  br i1 %cmp58, label %while.cond.preheader, label %while.cond108.preheader, !dbg !7167

while.cond108.preheader:                          ; preds = %if.end52
  br label %while.cond108, !dbg !7168

while.cond.preheader:                             ; preds = %if.end52
  br label %while.cond, !dbg !7169

while.cond:                                       ; preds = %while.cond.preheader, %if.end71
  %mws_rec.0 = phi %struct.df_mw_hardreg** [ %incdec.ptr72, %if.end71 ], [ %23, %while.cond.preheader ], !dbg !7170
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg** %mws_rec.0, metadata !7069, metadata !DIExpression()), !dbg !7151
  %24 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws_rec.0, align 8, !dbg !7171
  %tobool62 = icmp eq %struct.df_mw_hardreg* %24, null, !dbg !7169
  br i1 %tobool62, label %while.end, label %while.body, !dbg !7169

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg* %24, metadata !7073, metadata !DIExpression()), !dbg !7172
  %type = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %24, i64 0, i32 1, !dbg !7173
  %bf.load63 = load i32, i32* %type, align 8, !dbg !7173
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !7173
  %cmp65 = icmp eq i32 %bf.clear64, 0, !dbg !7173
  br i1 %cmp65, label %land.lhs.true, label %if.end71, !dbg !7175

land.lhs.true:                                    ; preds = %while.body
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %24, i64 0, i32 2, !dbg !7176
  %25 = load i32, i32* %start_regno, align 4, !dbg !7176
  %call67 = call fastcc zeroext i8 @df_ignore_stack_reg(i32 %25) #7, !dbg !7177
  %tobool68 = icmp eq i8 %call67, 0, !dbg !7177
  br i1 %tobool68, label %if.then69, label %if.end71, !dbg !7178

if.then69:                                        ; preds = %land.lhs.true
  %26 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7179
  call void @llvm.dbg.value(metadata %struct.rtx_def* %26, metadata !7071, metadata !DIExpression()), !dbg !7151
  %call70 = call fastcc %struct.rtx_def* @df_set_unused_notes_for_mw(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %26, %struct.df_mw_hardreg* nonnull %24, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def* %artificial_uses) #7, !dbg !7180
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call70, metadata !7071, metadata !DIExpression()), !dbg !7151
  store %struct.rtx_def* %call70, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7181
  br label %if.end71, !dbg !7182

if.end71:                                         ; preds = %land.lhs.true, %if.then69, %while.body
  %incdec.ptr72 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws_rec.0, i64 1, !dbg !7183
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg** %incdec.ptr72, metadata !7069, metadata !DIExpression()), !dbg !7151
  br label %while.cond, !dbg !7169, !llvm.loop !7184

while.end:                                        ; preds = %while.cond
  %27 = load %struct.df*, %struct.df** @df, align 8, !dbg !7186
  %insns73 = getelementptr inbounds %struct.df, %struct.df* %27, i64 0, i32 10, !dbg !7186
  %28 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns73, align 8, !dbg !7186
  %arrayidx75 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %28, i64 %idxprom, !dbg !7186
  %29 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx75, align 8, !dbg !7186
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %29, i64 0, i32 1, !dbg !7186
  %30 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !7186
  call void @llvm.dbg.value(metadata %union.df_ref_d** %30, metadata !7052, metadata !DIExpression()), !dbg !7109
  br label %for.cond76, !dbg !7187

for.cond76:                                       ; preds = %for.inc101, %while.end
  %def_rec.1 = phi %union.df_ref_d** [ %30, %while.end ], [ %incdec.ptr102, %for.inc101 ], !dbg !7188
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.1, metadata !7052, metadata !DIExpression()), !dbg !7109
  %31 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.1, align 8, !dbg !7189
  %tobool77 = icmp eq %union.df_ref_d* %31, null, !dbg !7190
  br i1 %tobool77, label %if.end155.loopexit, label %for.body78, !dbg !7190

for.body78:                                       ; preds = %for.cond76
  call void @llvm.dbg.value(metadata %union.df_ref_d* %31, metadata !7077, metadata !DIExpression()), !dbg !7191
  %regno81 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %31, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !7192
  %32 = load i32, i32* %regno81, align 8, !dbg !7192
  call void @llvm.dbg.value(metadata i32 %32, metadata !7081, metadata !DIExpression()), !dbg !7191
  %33 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %31, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !7193
  %bf.load83 = load i32, i32* %33, align 8, !dbg !7193
  %and85 = and i32 %bf.load83, 12582912, !dbg !7193
  %cmp86 = icmp eq i32 %and85, 0, !dbg !7193
  br i1 %cmp86, label %if.then88, label %if.end91, !dbg !7195

if.then88:                                        ; preds = %for.body78
  %34 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7196
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !7071, metadata !DIExpression()), !dbg !7151
  %call89 = call fastcc %struct.rtx_def* @df_create_unused_note(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %34, %union.df_ref_d* nonnull %31, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses) #7, !dbg !7198
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call89, metadata !7071, metadata !DIExpression()), !dbg !7151
  store %struct.rtx_def* %call89, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7199
  %call90 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %do_not_gen, i32 %32) #6, !dbg !7200
  %bf.load93.pre = load i32, i32* %33, align 8, !dbg !7201
  br label %if.end91, !dbg !7203

if.end91:                                         ; preds = %for.body78, %if.then88
  %bf.load93 = phi i32 [ %bf.load83, %for.body78 ], [ %bf.load93.pre, %if.then88 ], !dbg !7201
  %and95 = and i32 %bf.load93, 1114112, !dbg !7201
  %cmp96 = icmp eq i32 %and95, 0, !dbg !7201
  br i1 %cmp96, label %if.then98, label %for.inc101, !dbg !7204

if.then98:                                        ; preds = %if.end91
  %call99 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live, i32 %32) #6, !dbg !7205
  br label %for.inc101, !dbg !7205

for.inc101:                                       ; preds = %if.end91, %if.then98
  %incdec.ptr102 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.1, i64 1, !dbg !7206
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr102, metadata !7052, metadata !DIExpression()), !dbg !7109
  br label %for.cond76, !dbg !7207, !llvm.loop !7208

while.cond108:                                    ; preds = %while.cond108.preheader, %if.end119
  %mws_rec.1 = phi %struct.df_mw_hardreg** [ %incdec.ptr120, %if.end119 ], [ %23, %while.cond108.preheader ], !dbg !7210
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg** %mws_rec.1, metadata !7069, metadata !DIExpression()), !dbg !7151
  %35 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws_rec.1, align 8, !dbg !7211
  %tobool109 = icmp eq %struct.df_mw_hardreg* %35, null, !dbg !7168
  br i1 %tobool109, label %while.end121, label %while.body110, !dbg !7168

while.body110:                                    ; preds = %while.cond108
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg* %35, metadata !7082, metadata !DIExpression()), !dbg !7212
  %type112 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %35, i64 0, i32 1, !dbg !7213
  %bf.load113 = load i32, i32* %type112, align 8, !dbg !7213
  %bf.clear114 = and i32 %bf.load113, 65535, !dbg !7213
  %cmp115 = icmp eq i32 %bf.clear114, 0, !dbg !7213
  br i1 %cmp115, label %if.then117, label %if.end119, !dbg !7215

if.then117:                                       ; preds = %while.body110
  %36 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7216
  call void @llvm.dbg.value(metadata %struct.rtx_def* %36, metadata !7071, metadata !DIExpression()), !dbg !7151
  %call118 = call fastcc %struct.rtx_def* @df_set_unused_notes_for_mw(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %36, %struct.df_mw_hardreg* nonnull %35, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def* %artificial_uses) #7, !dbg !7217
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call118, metadata !7071, metadata !DIExpression()), !dbg !7151
  store %struct.rtx_def* %call118, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7218
  br label %if.end119, !dbg !7219

if.end119:                                        ; preds = %if.then117, %while.body110
  %incdec.ptr120 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws_rec.1, i64 1, !dbg !7220
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg** %incdec.ptr120, metadata !7069, metadata !DIExpression()), !dbg !7151
  br label %while.cond108, !dbg !7168, !llvm.loop !7221

while.end121:                                     ; preds = %while.cond108
  %37 = load %struct.df*, %struct.df** @df, align 8, !dbg !7223
  %insns122 = getelementptr inbounds %struct.df, %struct.df* %37, i64 0, i32 10, !dbg !7223
  %38 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns122, align 8, !dbg !7223
  %arrayidx124 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %38, i64 %idxprom, !dbg !7223
  %39 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx124, align 8, !dbg !7223
  %defs125 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %39, i64 0, i32 1, !dbg !7223
  %40 = load %union.df_ref_d**, %union.df_ref_d*** %defs125, align 8, !dbg !7223
  call void @llvm.dbg.value(metadata %union.df_ref_d** %40, metadata !7052, metadata !DIExpression()), !dbg !7109
  br label %for.cond126, !dbg !7224

for.cond126:                                      ; preds = %for.inc152, %while.end121
  %def_rec.2 = phi %union.df_ref_d** [ %40, %while.end121 ], [ %incdec.ptr153, %for.inc152 ], !dbg !7225
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.2, metadata !7052, metadata !DIExpression()), !dbg !7109
  %41 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.2, align 8, !dbg !7226
  %tobool127 = icmp eq %union.df_ref_d* %41, null, !dbg !7227
  br i1 %tobool127, label %if.end155.loopexit2, label %for.body128, !dbg !7227

for.body128:                                      ; preds = %for.cond126
  call void @llvm.dbg.value(metadata %union.df_ref_d* %41, metadata !7085, metadata !DIExpression()), !dbg !7228
  %regno132 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %41, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !7229
  %42 = load i32, i32* %regno132, align 8, !dbg !7229
  call void @llvm.dbg.value(metadata i32 %42, metadata !7089, metadata !DIExpression()), !dbg !7228
  %43 = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7230
  call void @llvm.dbg.value(metadata %struct.rtx_def* %43, metadata !7071, metadata !DIExpression()), !dbg !7151
  %call133 = call fastcc %struct.rtx_def* @df_create_unused_note(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %43, %union.df_ref_d* nonnull %41, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses) #7, !dbg !7231
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call133, metadata !7071, metadata !DIExpression()), !dbg !7151
  store %struct.rtx_def* %call133, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7232
  %44 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %41, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !7233
  %bf.load135 = load i32, i32* %44, align 8, !dbg !7233
  %and137 = and i32 %bf.load135, 12582912, !dbg !7233
  %cmp138 = icmp eq i32 %and137, 0, !dbg !7233
  br i1 %cmp138, label %if.then140, label %if.end142, !dbg !7235

if.then140:                                       ; preds = %for.body128
  %call141 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %do_not_gen, i32 %42) #6, !dbg !7236
  %bf.load144.pre = load i32, i32* %44, align 8, !dbg !7237
  br label %if.end142, !dbg !7236

if.end142:                                        ; preds = %for.body128, %if.then140
  %bf.load144 = phi i32 [ %bf.load135, %for.body128 ], [ %bf.load144.pre, %if.then140 ], !dbg !7237
  %and146 = and i32 %bf.load144, 1114112, !dbg !7237
  %cmp147 = icmp eq i32 %and146, 0, !dbg !7237
  br i1 %cmp147, label %if.then149, label %for.inc152, !dbg !7239

if.then149:                                       ; preds = %if.end142
  %call150 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %live, i32 %42) #6, !dbg !7240
  br label %for.inc152, !dbg !7240

for.inc152:                                       ; preds = %if.end142, %if.then149
  %incdec.ptr153 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.2, i64 1, !dbg !7241
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr153, metadata !7052, metadata !DIExpression()), !dbg !7109
  br label %for.cond126, !dbg !7242, !llvm.loop !7243

if.end155.loopexit:                               ; preds = %for.cond76
  br label %if.end155, !dbg !7245

if.end155.loopexit2:                              ; preds = %for.cond126
  br label %if.end155, !dbg !7245

if.end155:                                        ; preds = %if.end155.loopexit2, %if.end155.loopexit
  %45 = load %struct.df*, %struct.df** @df, align 8, !dbg !7245
  %insns156 = getelementptr inbounds %struct.df, %struct.df* %45, i64 0, i32 10, !dbg !7245
  %46 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns156, align 8, !dbg !7245
  %arrayidx158 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %46, i64 %idxprom, !dbg !7245
  %47 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx158, align 8, !dbg !7245
  %mw_hardregs159 = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %47, i64 0, i32 4, !dbg !7245
  %48 = load %struct.df_mw_hardreg**, %struct.df_mw_hardreg*** %mw_hardregs159, align 8, !dbg !7245
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg** %48, metadata !7069, metadata !DIExpression()), !dbg !7151
  br label %while.cond160, !dbg !7246

while.cond160:                                    ; preds = %if.end181, %if.end155
  %mws_rec.2 = phi %struct.df_mw_hardreg** [ %48, %if.end155 ], [ %incdec.ptr182, %if.end181 ], !dbg !7151
  %debug_insn.0 = phi i32 [ %conv, %if.end155 ], [ %debug_insn.2, %if.end181 ], !dbg !7247
  call void @llvm.dbg.value(metadata i32 %debug_insn.0, metadata !7072, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg** %mws_rec.2, metadata !7069, metadata !DIExpression()), !dbg !7151
  %49 = load %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws_rec.2, align 8, !dbg !7248
  %tobool161 = icmp eq %struct.df_mw_hardreg* %49, null, !dbg !7246
  br i1 %tobool161, label %while.end183, label %while.body162, !dbg !7246

while.body162:                                    ; preds = %while.cond160
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg* %49, metadata !7090, metadata !DIExpression()), !dbg !7249
  %type164 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %49, i64 0, i32 1, !dbg !7250
  %bf.load165 = load i32, i32* %type164, align 8, !dbg !7250
  %bf.clear166 = and i32 %bf.load165, 65535, !dbg !7250
  %cmp167 = icmp eq i32 %bf.clear166, 0, !dbg !7250
  br i1 %cmp167, label %land.lhs.true169, label %if.end181, !dbg !7251

land.lhs.true169:                                 ; preds = %while.body162
  %start_regno170 = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %49, i64 0, i32 2, !dbg !7252
  %50 = load i32, i32* %start_regno170, align 4, !dbg !7252
  %call171 = call fastcc zeroext i8 @df_ignore_stack_reg(i32 %50) #7, !dbg !7253
  %tobool172 = icmp eq i8 %call171, 0, !dbg !7253
  br i1 %tobool172, label %if.then173, label %if.end181, !dbg !7254

if.then173:                                       ; preds = %land.lhs.true169
  call void @llvm.dbg.value(metadata i8* %really_add_notes, metadata !7092, metadata !DIExpression(DW_OP_deref)), !dbg !7255
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %really_add_notes) #8, !dbg !7256
  %cmp174 = icmp ne i32 %debug_insn.0, 0, !dbg !7257
  %conv176 = zext i1 %cmp174 to i8, !dbg !7258
  call void @llvm.dbg.value(metadata i8 %conv176, metadata !7092, metadata !DIExpression()), !dbg !7255
  store i8 %conv176, i8* %really_add_notes, align 1, !dbg !7259
  %51 = load %struct.rtx_def*, %struct.rtx_def** %old_dead_notes, align 8, !dbg !7260
  call void @llvm.dbg.value(metadata %struct.rtx_def* %51, metadata !7070, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata i8* %really_add_notes, metadata !7092, metadata !DIExpression(DW_OP_deref)), !dbg !7255
  %call177 = call fastcc %struct.rtx_def* @df_set_dead_notes_for_mw(%struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %51, %struct.df_mw_hardreg* nonnull %49, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def* %artificial_uses, i8* nonnull %really_add_notes) #7, !dbg !7261
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call177, metadata !7070, metadata !DIExpression()), !dbg !7151
  store %struct.rtx_def* %call177, %struct.rtx_def** %old_dead_notes, align 8, !dbg !7262
  %52 = load i8, i8* %really_add_notes, align 1, !dbg !7263
  call void @llvm.dbg.value(metadata i8 %52, metadata !7092, metadata !DIExpression()), !dbg !7255
  %tobool178 = icmp eq i8 %52, 0, !dbg !7263
  %spec.select = select i1 %tobool178, i32 %debug_insn.0, i32 -1, !dbg !7265
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !7072, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata i8* %really_add_notes, metadata !7092, metadata !DIExpression(DW_OP_deref)), !dbg !7255
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %really_add_notes) #8, !dbg !7266
  br label %if.end181, !dbg !7267

if.end181:                                        ; preds = %land.lhs.true169, %if.then173, %while.body162
  %debug_insn.2 = phi i32 [ %debug_insn.0, %land.lhs.true169 ], [ %spec.select, %if.then173 ], [ %debug_insn.0, %while.body162 ], !dbg !7151
  call void @llvm.dbg.value(metadata i32 %debug_insn.2, metadata !7072, metadata !DIExpression()), !dbg !7151
  %incdec.ptr182 = getelementptr inbounds %struct.df_mw_hardreg*, %struct.df_mw_hardreg** %mws_rec.2, i64 1, !dbg !7268
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg** %incdec.ptr182, metadata !7069, metadata !DIExpression()), !dbg !7151
  br label %while.cond160, !dbg !7246, !llvm.loop !7269

while.end183:                                     ; preds = %while.cond160
  %debug_insn.0.lcssa = phi i32 [ %debug_insn.0, %while.cond160 ], !dbg !7247
  call void @llvm.dbg.value(metadata i32 %debug_insn.0.lcssa, metadata !7072, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata i32 %debug_insn.0.lcssa, metadata !7072, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata i32 %debug_insn.0.lcssa, metadata !7072, metadata !DIExpression()), !dbg !7151
  %53 = load %struct.df*, %struct.df** @df, align 8, !dbg !7271
  %insns184 = getelementptr inbounds %struct.df, %struct.df* %53, i64 0, i32 10, !dbg !7271
  %54 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns184, align 8, !dbg !7271
  %arrayidx186 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %54, i64 %idxprom, !dbg !7271
  %55 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx186, align 8, !dbg !7271
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %55, i64 0, i32 2, !dbg !7271
  %56 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !7271
  call void @llvm.dbg.value(metadata %union.df_ref_d** %56, metadata !7053, metadata !DIExpression()), !dbg !7109
  br label %for.cond187, !dbg !7272

for.cond187:                                      ; preds = %for.inc263, %while.end183
  %use_rec.1 = phi %union.df_ref_d** [ %56, %while.end183 ], [ %incdec.ptr264, %for.inc263 ], !dbg !7273
  %debug_insn.3 = phi i32 [ %debug_insn.0.lcssa, %while.end183 ], [ %debug_insn.4, %for.inc263 ], !dbg !7247
  call void @llvm.dbg.value(metadata i32 %debug_insn.3, metadata !7072, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.1, metadata !7053, metadata !DIExpression()), !dbg !7109
  %57 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.1, align 8, !dbg !7274
  %tobool188 = icmp eq %union.df_ref_d* %57, null, !dbg !7275
  br i1 %tobool188, label %for.end265, label %for.body189, !dbg !7275

for.body189:                                      ; preds = %for.cond187
  call void @llvm.dbg.value(metadata %union.df_ref_d* %57, metadata !7095, metadata !DIExpression()), !dbg !7276
  %regno192 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %57, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !7277
  %58 = load i32, i32* %regno192, align 8, !dbg !7277
  call void @llvm.dbg.value(metadata i32 %58, metadata !7099, metadata !DIExpression()), !dbg !7276
  %call193 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %live, i32 %58) #6, !dbg !7278
  %tobool194 = icmp eq i32 %call193, 0, !dbg !7278
  br i1 %tobool194, label %if.then195, label %cleanup, !dbg !7279

if.then195:                                       ; preds = %for.body189
  %tobool196 = icmp eq i32 %debug_insn.3, 0, !dbg !7280
  br i1 %tobool196, label %if.end198, label %cleanup, !dbg !7282

if.end198:                                        ; preds = %if.then195
  %59 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %57, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !7283
  %bf.load200 = load i32, i32* %59, align 8, !dbg !7283
  %and202 = and i32 %bf.load200, 268435456, !dbg !7284
  %tobool203 = icmp eq i32 %and202, 0, !dbg !7284
  br i1 %tobool203, label %land.lhs.true204, label %if.end259, !dbg !7285

land.lhs.true204:                                 ; preds = %if.end198
  %call205 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %do_not_gen, i32 %58) #6, !dbg !7286
  %tobool206 = icmp eq i32 %call205, 0, !dbg !7286
  br i1 %tobool206, label %land.lhs.true207, label %if.end259, !dbg !7287

land.lhs.true207:                                 ; preds = %land.lhs.true204
  %call208 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %artificial_uses, i32 %58) #6, !dbg !7288
  %tobool209 = icmp eq i32 %call208, 0, !dbg !7288
  br i1 %tobool209, label %land.lhs.true210, label %if.end259, !dbg !7289

land.lhs.true210:                                 ; preds = %land.lhs.true207
  %bf.load212 = load i32, i32* %59, align 8, !dbg !7290
  %and214 = and i32 %bf.load212, 2097152, !dbg !7291
  %tobool215 = icmp eq i32 %and214, 0, !dbg !7291
  br i1 %tobool215, label %land.lhs.true216, label %if.end259, !dbg !7292

land.lhs.true216:                                 ; preds = %land.lhs.true210
  %call217 = call fastcc zeroext i8 @df_ignore_stack_reg(i32 %58) #7, !dbg !7293
  %tobool218 = icmp eq i8 %call217, 0, !dbg !7293
  br i1 %tobool218, label %if.then219, label %if.end259, !dbg !7294

if.then219:                                       ; preds = %land.lhs.true216
  %bf.load221 = load i32, i32* %59, align 8, !dbg !7295
  %bf.clear222 = and i32 %bf.load221, 255, !dbg !7295
  %cmp223 = icmp eq i32 %bf.clear222, 2, !dbg !7295
  br i1 %cmp223, label %cond.true231, label %lor.lhs.false225, !dbg !7295

lor.lhs.false225:                                 ; preds = %if.then219
  %cmp229 = icmp eq i32 %bf.clear222, 3, !dbg !7295
  br i1 %cmp229, label %cond.true231, label %cond.false253, !dbg !7296

cond.true231:                                     ; preds = %lor.lhs.false225, %if.then219
  %loc = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %57, i64 0, i32 0, i32 0, i32 1, !dbg !7295
  %60 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !7295
  %tobool232 = icmp eq %struct.rtx_def** %60, null, !dbg !7295
  br i1 %tobool232, label %cond.false253, label %cond.true234, !dbg !7295

cond.true234:                                     ; preds = %cond.true231
  %61 = bitcast %struct.rtx_def** %60 to i32**, !dbg !7295
  %62 = load i32*, i32** %61, align 8, !dbg !7297
  %bf.load237 = load i32, i32* %62, align 8, !dbg !7297
  %bf.clear238 = and i32 %bf.load237, 65535, !dbg !7297
  %cmp239 = icmp eq i32 %bf.clear238, 39, !dbg !7297
  br i1 %cmp239, label %cond.true241, label %cond.end251, !dbg !7297

cond.true241:                                     ; preds = %cond.true234
  %arrayidx246 = getelementptr inbounds i32, i32* %62, i64 2, !dbg !7297
  %rt_rtx247 = bitcast i32* %arrayidx246 to %struct.rtx_def**, !dbg !7297
  br label %cond.end251, !dbg !7297

cond.end251:                                      ; preds = %cond.true234, %cond.true241
  %cond252 = phi %struct.rtx_def** [ %rt_rtx247, %cond.true241 ], [ %60, %cond.true234 ], !dbg !7297
  br label %cond.end256, !dbg !7296

cond.false253:                                    ; preds = %cond.true231, %lor.lhs.false225
  %reg255 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %57, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !7298
  br label %cond.end256, !dbg !7296

cond.end256:                                      ; preds = %cond.false253, %cond.end251
  %cond257.in = phi %struct.rtx_def** [ %cond252, %cond.end251 ], [ %reg255, %cond.false253 ]
  %cond257 = load %struct.rtx_def*, %struct.rtx_def** %cond257.in, align 8, !dbg !7296
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond257, metadata !7100, metadata !DIExpression()), !dbg !7299
  %63 = load %struct.rtx_def*, %struct.rtx_def** %old_dead_notes, align 8, !dbg !7300
  call void @llvm.dbg.value(metadata %struct.rtx_def* %63, metadata !7070, metadata !DIExpression()), !dbg !7151
  %call258 = call fastcc %struct.rtx_def* @df_set_note(i32 1, %struct.rtx_def* nonnull %insn.0, %struct.rtx_def* %63, %struct.rtx_def* %cond257) #7, !dbg !7301
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call258, metadata !7070, metadata !DIExpression()), !dbg !7151
  store %struct.rtx_def* %call258, %struct.rtx_def** %old_dead_notes, align 8, !dbg !7302
  br label %if.end259, !dbg !7303

if.end259:                                        ; preds = %land.lhs.true216, %land.lhs.true210, %land.lhs.true207, %land.lhs.true204, %if.end198, %cond.end256
  %call260 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %live, i32 %58) #6, !dbg !7304
  br label %cleanup, !dbg !7305

cleanup:                                          ; preds = %if.then195, %for.body189, %if.end259
  %debug_insn.4 = phi i32 [ -1, %if.then195 ], [ 0, %if.end259 ], [ %debug_insn.3, %for.body189 ], !dbg !7151
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then195 ], [ true, %if.end259 ], [ true, %for.body189 ]
  call void @llvm.dbg.value(metadata i32 %debug_insn.4, metadata !7072, metadata !DIExpression()), !dbg !7151
  br i1 %cleanup.dest.slot.0, label %for.inc263, label %for.end265

for.inc263:                                       ; preds = %cleanup
  %incdec.ptr264 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.1, i64 1, !dbg !7306
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr264, metadata !7053, metadata !DIExpression()), !dbg !7109
  br label %for.cond187, !dbg !7307, !llvm.loop !7308

for.end265:                                       ; preds = %for.cond187, %cleanup
  %debug_insn.5 = phi i32 [ %debug_insn.4, %cleanup ], [ %debug_insn.3, %for.cond187 ], !dbg !7247
  call void @llvm.dbg.value(metadata i32 %debug_insn.5, metadata !7072, metadata !DIExpression()), !dbg !7151
  %.pre = load %struct.rtx_def*, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7310
  br label %while.cond266, !dbg !7311

while.cond266:                                    ; preds = %while.body268, %for.end265
  %64 = phi %struct.rtx_def* [ %69, %while.body268 ], [ %.pre, %for.end265 ]
  %65 = phi %struct.rtx_def* [ %69, %while.body268 ], [ %.pre, %for.end265 ], !dbg !7310
  call void @llvm.dbg.value(metadata %struct.rtx_def* %65, metadata !7071, metadata !DIExpression()), !dbg !7151
  %tobool267 = icmp eq %struct.rtx_def* %65, null, !dbg !7311
  br i1 %tobool267, label %while.cond274.preheader, label %while.body268, !dbg !7311

while.cond274.preheader:                          ; preds = %while.cond266
  %.pre5 = load %struct.rtx_def*, %struct.rtx_def** %old_dead_notes, align 8, !dbg !7312
  br label %while.cond274, !dbg !7313

while.body268:                                    ; preds = %while.cond266
  call void @llvm.dbg.value(metadata %struct.rtx_def* %64, metadata !7071, metadata !DIExpression()), !dbg !7151
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7314
  %67 = bitcast %union.rtunion_def* %66 to i64*, !dbg !7314
  %68 = load i64, i64* %67, align 8, !dbg !7314
  call void @llvm.dbg.value(metadata %struct.rtx_def* %64, metadata !7071, metadata !DIExpression()), !dbg !7151
  call void @free_EXPR_LIST_node(%struct.rtx_def* %64) #6, !dbg !7315
  store i64 %68, i64* %12, align 8, !dbg !7316
  %69 = inttoptr i64 %68 to %struct.rtx_def*, !dbg !7311
  br label %while.cond266, !dbg !7311, !llvm.loop !7317

while.cond274:                                    ; preds = %while.cond274.preheader, %while.body276
  %70 = phi %struct.rtx_def* [ %.pre5, %while.cond274.preheader ], [ %75, %while.body276 ]
  %71 = phi %struct.rtx_def* [ %.pre5, %while.cond274.preheader ], [ %75, %while.body276 ], !dbg !7312
  call void @llvm.dbg.value(metadata %struct.rtx_def* %71, metadata !7070, metadata !DIExpression()), !dbg !7151
  %tobool275 = icmp eq %struct.rtx_def* %71, null, !dbg !7313
  br i1 %tobool275, label %while.end282, label %while.body276, !dbg !7313

while.body276:                                    ; preds = %while.cond274
  call void @llvm.dbg.value(metadata %struct.rtx_def* %70, metadata !7070, metadata !DIExpression()), !dbg !7151
  %72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7319
  %73 = bitcast %union.rtunion_def* %72 to i64*, !dbg !7319
  %74 = load i64, i64* %73, align 8, !dbg !7319
  call void @llvm.dbg.value(metadata %struct.rtx_def* %70, metadata !7070, metadata !DIExpression()), !dbg !7151
  call void @free_EXPR_LIST_node(%struct.rtx_def* %70) #6, !dbg !7320
  store i64 %74, i64* %13, align 8, !dbg !7321
  %75 = inttoptr i64 %74 to %struct.rtx_def*, !dbg !7313
  br label %while.cond274, !dbg !7313, !llvm.loop !7322

while.end282:                                     ; preds = %while.cond274
  %cmp283 = icmp eq i32 %debug_insn.5, -1, !dbg !7324
  br i1 %cmp283, label %if.then285, label %cleanup297, !dbg !7326

if.then285:                                       ; preds = %while.end282
  %76 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7327
  %call286 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %76) #6, !dbg !7327
  %u287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !7329
  %77 = getelementptr inbounds %union.u, %union.u* %u287, i64 1, i32 0, i32 0, i64 0, !dbg !7329
  %rt_rtx290 = bitcast %union.rtunion_def* %77 to %struct.rtx_def**, !dbg !7329
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx290, align 8, !dbg !7329
  %79 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7329
  %rt_rtx294 = bitcast %union.rtunion_def* %79 to %struct.rtx_def**, !dbg !7329
  store %struct.rtx_def* %call286, %struct.rtx_def** %rt_rtx294, align 8, !dbg !7330
  %call295 = call zeroext i8 @df_insn_rescan_debug_internal(%struct.rtx_def* nonnull %insn.0) #6, !dbg !7331
  br label %cleanup297, !dbg !7332

cleanup297:                                       ; preds = %while.end282, %if.then285, %lor.lhs.false47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #8, !dbg !7333
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8, !dbg !7333
  %80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7155
  %rt_rtx308 = bitcast %union.rtunion_def* %80 to %struct.rtx_def**, !dbg !7155
  br label %for.cond29, !dbg !7155, !llvm.loop !7334

for.end309:                                       ; preds = %land.rhs, %for.cond29
  ret void, !dbg !7336
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_kill_notes(%struct.rtx_def* %insn, %struct.rtx_def** %old_dead_notes, %struct.rtx_def** %old_unused_notes) unnamed_addr #4 !dbg !7337 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7341, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_dead_notes, metadata !7342, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def** %old_unused_notes, metadata !7343, metadata !DIExpression()), !dbg !7356
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7357
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !7357
  %rt_rtx = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !7357
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx, metadata !7344, metadata !DIExpression()), !dbg !7356
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7358
  call void @llvm.dbg.value(metadata %struct.rtx_def* %1, metadata !7345, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !7346, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !7347, metadata !DIExpression()), !dbg !7356
  br label %while.cond, !dbg !7359

while.cond:                                       ; preds = %sw.epilog, %entry
  %pprev.0 = phi %struct.rtx_def** [ %rt_rtx, %entry ], [ %pprev.3, %sw.epilog ], !dbg !7356
  %link.0 = phi %struct.rtx_def* [ %1, %entry ], [ %link.3, %sw.epilog ], !dbg !7356
  %dead.0 = phi %struct.rtx_def* [ null, %entry ], [ %dead.2, %sw.epilog ], !dbg !7360
  %unused.0 = phi %struct.rtx_def* [ null, %entry ], [ %unused.2, %sw.epilog ], !dbg !7361
  call void @llvm.dbg.value(metadata %struct.rtx_def* %unused.0, metadata !7347, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dead.0, metadata !7346, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !7345, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pprev.0, metadata !7344, metadata !DIExpression()), !dbg !7356
  %tobool = icmp eq %struct.rtx_def* %link.0, null, !dbg !7359
  br i1 %tobool, label %while.end, label %while.body, !dbg !7359

while.body:                                       ; preds = %while.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 0, !dbg !7362
  %bf.load = load i32, i32* %2, align 8, !dbg !7362
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !7362
  %trunc = trunc i32 %bf.lshr to i8, !dbg !7363
  switch i8 %trunc, label %sw.default [
    i8 1, label %sw.bb
    i8 6, label %sw.bb19
  ], !dbg !7363

sw.bb:                                            ; preds = %while.body
  %arrayidx3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7364
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !7364
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !7364
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %3) #7, !dbg !7364
  %call5 = tail call fastcc zeroext i8 @df_ignore_stack_reg(i32 %call) #7, !dbg !7365
  %tobool6 = icmp eq i8 %call5, 0, !dbg !7365
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7366
  %rt_rtx10 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !7366
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx10, align 8, !dbg !7366
  br i1 %tobool6, label %if.else, label %sw.epilog, !dbg !7367

if.else:                                          ; preds = %sw.bb
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !7348, metadata !DIExpression()), !dbg !7368
  store %struct.rtx_def* %dead.0, %struct.rtx_def** %rt_rtx10, align 8, !dbg !7369
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !7346, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %5, metadata !7345, metadata !DIExpression()), !dbg !7356
  store %struct.rtx_def* %5, %struct.rtx_def** %pprev.0, align 8, !dbg !7370
  br label %sw.epilog

sw.bb19:                                          ; preds = %while.body
  %arrayidx22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7371
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !7371
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !7371
  %call24 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %6) #7, !dbg !7371
  %call25 = tail call fastcc zeroext i8 @df_ignore_stack_reg(i32 %call24) #7, !dbg !7372
  %tobool26 = icmp eq i8 %call25, 0, !dbg !7372
  %7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7373
  %rt_rtx31 = bitcast %union.rtunion_def* %7 to %struct.rtx_def**, !dbg !7373
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !7373
  br i1 %tobool26, label %if.else32, label %sw.epilog, !dbg !7374

if.else32:                                        ; preds = %sw.bb19
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !7353, metadata !DIExpression()), !dbg !7375
  store %struct.rtx_def* %unused.0, %struct.rtx_def** %rt_rtx31, align 8, !dbg !7376
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !7347, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %8, metadata !7345, metadata !DIExpression()), !dbg !7356
  store %struct.rtx_def* %8, %struct.rtx_def** %pprev.0, align 8, !dbg !7377
  br label %sw.epilog

sw.default:                                       ; preds = %while.body
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7378
  %rt_rtx46 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !7378
  call void @llvm.dbg.value(metadata %struct.rtx_def** %rt_rtx46, metadata !7344, metadata !DIExpression()), !dbg !7356
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !7379
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !7345, metadata !DIExpression()), !dbg !7356
  br label %sw.epilog, !dbg !7380

sw.epilog:                                        ; preds = %sw.bb, %sw.bb19, %if.else32, %if.else, %sw.default
  %pprev.3 = phi %struct.rtx_def** [ %rt_rtx46, %sw.default ], [ %pprev.0, %if.else ], [ %rt_rtx10, %sw.bb ], [ %pprev.0, %if.else32 ], [ %rt_rtx31, %sw.bb19 ], !dbg !7381
  %link.3 = phi %struct.rtx_def* [ %10, %sw.default ], [ %5, %if.else ], [ %5, %sw.bb ], [ %8, %if.else32 ], [ %8, %sw.bb19 ], !dbg !7381
  %dead.2 = phi %struct.rtx_def* [ %dead.0, %sw.default ], [ %link.0, %if.else ], [ %dead.0, %sw.bb ], [ %dead.0, %if.else32 ], [ %dead.0, %sw.bb19 ], !dbg !7360
  %unused.2 = phi %struct.rtx_def* [ %unused.0, %sw.default ], [ %unused.0, %if.else ], [ %unused.0, %sw.bb ], [ %link.0, %if.else32 ], [ %unused.0, %sw.bb19 ], !dbg !7361
  call void @llvm.dbg.value(metadata %struct.rtx_def* %unused.2, metadata !7347, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dead.2, metadata !7346, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.3, metadata !7345, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def** %pprev.3, metadata !7344, metadata !DIExpression()), !dbg !7356
  br label %while.cond, !dbg !7359, !llvm.loop !7382

while.end:                                        ; preds = %while.cond
  %dead.0.lcssa = phi %struct.rtx_def* [ %dead.0, %while.cond ], !dbg !7360
  %unused.0.lcssa = phi %struct.rtx_def* [ %unused.0, %while.cond ], !dbg !7361
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dead.0.lcssa, metadata !7346, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %unused.0.lcssa, metadata !7347, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dead.0.lcssa, metadata !7346, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %unused.0.lcssa, metadata !7347, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dead.0.lcssa, metadata !7346, metadata !DIExpression()), !dbg !7356
  call void @llvm.dbg.value(metadata %struct.rtx_def* %unused.0.lcssa, metadata !7347, metadata !DIExpression()), !dbg !7356
  store %struct.rtx_def* %dead.0.lcssa, %struct.rtx_def** %old_dead_notes, align 8, !dbg !7384
  store %struct.rtx_def* %unused.0.lcssa, %struct.rtx_def** %old_unused_notes, align 8, !dbg !7385
  ret void, !dbg !7386
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @df_ignore_stack_reg(i32 %regno) unnamed_addr #0 !dbg !7387 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !7389, metadata !DIExpression()), !dbg !7390
  %0 = load i32, i32* @regstack_completed, align 4, !dbg !7391
  %tobool = icmp eq i32 %0, 0, !dbg !7391
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !7392

land.rhs:                                         ; preds = %entry
  %1 = and i32 %regno, -8, !dbg !7393
  %cmp = icmp eq i32 %1, 8, !dbg !7393
  %phitmp = zext i1 %cmp to i8
  br label %land.end

land.end:                                         ; preds = %entry, %land.rhs
  %2 = phi i8 [ 0, %entry ], [ %phitmp, %land.rhs ]
  ret i8 %2, !dbg !7394
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @df_set_unused_notes_for_mw(%struct.rtx_def* %insn, %struct.rtx_def* %old, %struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def* %artificial_uses) unnamed_addr #4 !dbg !7395 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7399, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !7400, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg* %mws, metadata !7401, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !7402, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %do_not_gen, metadata !7403, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %artificial_uses, metadata !7404, metadata !DIExpression()), !dbg !7409
  %call = tail call fastcc zeroext i8 @df_whole_mw_reg_unused_p(%struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses) #7, !dbg !7410
  %tobool = icmp eq i8 %call, 0, !dbg !7410
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 2, !dbg !7411
  %0 = load i32, i32* %start_regno, align 4, !dbg !7411
  br i1 %tobool, label %for.cond.preheader, label %if.then, !dbg !7412

for.cond.preheader:                               ; preds = %entry
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 3, !dbg !7413
  br label %for.cond, !dbg !7416

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i32 %0, metadata !7406, metadata !DIExpression()), !dbg !7417
  %mw_reg = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 0, !dbg !7418
  %1 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg, align 8, !dbg !7418
  %call1 = tail call fastcc %struct.rtx_def* @df_set_note(i32 6, %struct.rtx_def* %insn, %struct.rtx_def* %old, %struct.rtx_def* %1) #7, !dbg !7419
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !7400, metadata !DIExpression()), !dbg !7409
  %call2 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %do_not_gen, i32 %0) #6, !dbg !7420
  br label %if.end11, !dbg !7421

for.cond:                                         ; preds = %for.cond.preheader, %if.end
  %old.addr.0 = phi %struct.rtx_def* [ %old.addr.1, %if.end ], [ %old, %for.cond.preheader ]
  %r.0 = phi i32 [ %inc, %if.end ], [ %0, %for.cond.preheader ], !dbg !7422
  call void @llvm.dbg.value(metadata i32 %r.0, metadata !7405, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0, metadata !7400, metadata !DIExpression()), !dbg !7409
  %2 = load i32, i32* %end_regno, align 8, !dbg !7423
  %cmp = icmp ugt i32 %r.0, %2, !dbg !7424
  br i1 %cmp, label %if.end11.loopexit, label %for.body, !dbg !7416

for.body:                                         ; preds = %for.cond
  %call4 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %live, i32 %r.0) #6, !dbg !7425
  %tobool5 = icmp eq i32 %call4, 0, !dbg !7425
  br i1 %tobool5, label %land.lhs.true, label %if.end, !dbg !7428

land.lhs.true:                                    ; preds = %for.body
  %call6 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %artificial_uses, i32 %r.0) #6, !dbg !7429
  %tobool7 = icmp eq i32 %call6, 0, !dbg !7429
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !7430

if.then8:                                         ; preds = %land.lhs.true
  %3 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7431
  %idxprom = zext i32 %r.0 to i64, !dbg !7431
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %idxprom, !dbg !7431
  %4 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !7431
  %call9 = tail call fastcc %struct.rtx_def* @df_set_note(i32 6, %struct.rtx_def* %insn, %struct.rtx_def* %old.addr.0, %struct.rtx_def* %4) #7, !dbg !7433
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call9, metadata !7400, metadata !DIExpression()), !dbg !7409
  br label %if.end, !dbg !7434

if.end:                                           ; preds = %land.lhs.true, %for.body, %if.then8
  %old.addr.1 = phi %struct.rtx_def* [ %old.addr.0, %for.body ], [ %old.addr.0, %land.lhs.true ], [ %call9, %if.then8 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.1, metadata !7400, metadata !DIExpression()), !dbg !7409
  %call10 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %do_not_gen, i32 %r.0) #6, !dbg !7435
  %inc = add i32 %r.0, 1, !dbg !7436
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7405, metadata !DIExpression()), !dbg !7409
  br label %for.cond, !dbg !7437, !llvm.loop !7438

if.end11.loopexit:                                ; preds = %for.cond
  %old.addr.0.lcssa = phi %struct.rtx_def* [ %old.addr.0, %for.cond ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0.lcssa, metadata !7400, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0.lcssa, metadata !7400, metadata !DIExpression()), !dbg !7409
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0.lcssa, metadata !7400, metadata !DIExpression()), !dbg !7409
  br label %if.end11, !dbg !7440

if.end11:                                         ; preds = %if.end11.loopexit, %if.then
  %old.addr.2 = phi %struct.rtx_def* [ %call1, %if.then ], [ %old.addr.0.lcssa, %if.end11.loopexit ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.2, metadata !7400, metadata !DIExpression()), !dbg !7409
  ret %struct.rtx_def* %old.addr.2, !dbg !7440
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @df_create_unused_note(%struct.rtx_def* %insn, %struct.rtx_def* %old, %union.df_ref_d* %def, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses) unnamed_addr #4 !dbg !7441 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7445, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !7446, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata %union.df_ref_d* %def, metadata !7447, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !7448, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %artificial_uses, metadata !7449, metadata !DIExpression()), !dbg !7454
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !7455
  %0 = load i32, i32* %regno, align 8, !dbg !7455
  call void @llvm.dbg.value(metadata i32 %0, metadata !7450, metadata !DIExpression()), !dbg !7454
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %live, i32 %0) #6, !dbg !7456
  %tobool = icmp eq i32 %call, 0, !dbg !7456
  br i1 %tobool, label %lor.lhs.false, label %if.end, !dbg !7457

lor.lhs.false:                                    ; preds = %entry
  %1 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !7458
  %bf.load = load i32, i32* %1, align 8, !dbg !7458
  %and = and i32 %bf.load, 268435456, !dbg !7459
  %tobool2 = icmp eq i32 %and, 0, !dbg !7459
  br i1 %tobool2, label %lor.lhs.false3, label %if.end, !dbg !7460

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %call4 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %artificial_uses, i32 %0) #6, !dbg !7461
  %tobool5 = icmp eq i32 %call4, 0, !dbg !7461
  br i1 %tobool5, label %lor.lhs.false6, label %if.end, !dbg !7462

lor.lhs.false6:                                   ; preds = %lor.lhs.false3
  %call7 = tail call fastcc zeroext i8 @df_ignore_stack_reg(i32 %0) #7, !dbg !7463
  %tobool8 = icmp eq i8 %call7, 0, !dbg !7463
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7464

if.then:                                          ; preds = %lor.lhs.false6
  %bf.load10 = load i32, i32* %1, align 8, !dbg !7465
  %bf.clear = and i32 %bf.load10, 255, !dbg !7465
  %cmp = icmp eq i32 %bf.clear, 2, !dbg !7465
  br i1 %cmp, label %cond.true, label %lor.lhs.false12, !dbg !7465

lor.lhs.false12:                                  ; preds = %if.then
  %cmp16 = icmp eq i32 %bf.clear, 3, !dbg !7465
  br i1 %cmp16, label %cond.true, label %cond.false32, !dbg !7466

cond.true:                                        ; preds = %lor.lhs.false12, %if.then
  %loc = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def, i64 0, i32 0, i32 0, i32 1, !dbg !7465
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !7465
  %tobool18 = icmp eq %struct.rtx_def** %2, null, !dbg !7465
  br i1 %tobool18, label %cond.false32, label %cond.true19, !dbg !7465

cond.true19:                                      ; preds = %cond.true
  %3 = bitcast %struct.rtx_def** %2 to i32**, !dbg !7465
  %4 = load i32*, i32** %3, align 8, !dbg !7467
  %bf.load22 = load i32, i32* %4, align 8, !dbg !7467
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !7467
  %cmp24 = icmp eq i32 %bf.clear23, 39, !dbg !7467
  br i1 %cmp24, label %cond.true26, label %cond.end, !dbg !7467

cond.true26:                                      ; preds = %cond.true19
  %arrayidx = getelementptr inbounds i32, i32* %4, i64 2, !dbg !7467
  %rt_rtx = bitcast i32* %arrayidx to %struct.rtx_def**, !dbg !7467
  br label %cond.end, !dbg !7467

cond.end:                                         ; preds = %cond.true19, %cond.true26
  %cond = phi %struct.rtx_def** [ %rt_rtx, %cond.true26 ], [ %2, %cond.true19 ], !dbg !7467
  br label %cond.end35, !dbg !7466

cond.false32:                                     ; preds = %cond.true, %lor.lhs.false12
  %reg34 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %def, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !7468
  br label %cond.end35, !dbg !7466

cond.end35:                                       ; preds = %cond.false32, %cond.end
  %cond36.in = phi %struct.rtx_def** [ %cond, %cond.end ], [ %reg34, %cond.false32 ]
  %cond36 = load %struct.rtx_def*, %struct.rtx_def** %cond36.in, align 8, !dbg !7466
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond36, metadata !7451, metadata !DIExpression()), !dbg !7469
  %call37 = tail call fastcc %struct.rtx_def* @df_set_note(i32 6, %struct.rtx_def* %insn, %struct.rtx_def* %old, %struct.rtx_def* %cond36) #7, !dbg !7470
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call37, metadata !7446, metadata !DIExpression()), !dbg !7454
  br label %if.end, !dbg !7471

if.end:                                           ; preds = %lor.lhs.false6, %lor.lhs.false3, %lor.lhs.false, %entry, %cond.end35
  %old.addr.0 = phi %struct.rtx_def* [ %old, %entry ], [ %old, %lor.lhs.false ], [ %old, %lor.lhs.false3 ], [ %old, %lor.lhs.false6 ], [ %call37, %cond.end35 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0, metadata !7446, metadata !DIExpression()), !dbg !7454
  ret %struct.rtx_def* %old.addr.0, !dbg !7472
}

; Function Attrs: nounwind uwtable
define internal fastcc %struct.rtx_def* @df_set_dead_notes_for_mw(%struct.rtx_def* %insn, %struct.rtx_def* %old, %struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %do_not_gen, %struct.bitmap_head_def* %artificial_uses, i8* %added_notes_p) unnamed_addr #4 !dbg !7473 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7477, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !7478, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg* %mws, metadata !7479, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !7480, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %do_not_gen, metadata !7481, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %artificial_uses, metadata !7482, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i8* %added_notes_p, metadata !7483, metadata !DIExpression()), !dbg !7486
  %0 = load i8, i8* %added_notes_p, align 1, !dbg !7487
  call void @llvm.dbg.value(metadata i8 %0, metadata !7485, metadata !DIExpression()), !dbg !7486
  store i8 0, i8* %added_notes_p, align 1, !dbg !7488
  %call = tail call fastcc zeroext i8 @df_whole_mw_reg_dead_p(%struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses, %struct.bitmap_head_def* %do_not_gen) #7, !dbg !7489
  %tobool = icmp eq i8 %call, 0, !dbg !7489
  br i1 %tobool, label %if.else, label %if.then, !dbg !7491

if.then:                                          ; preds = %entry
  %tobool1 = icmp eq i8 %0, 0, !dbg !7492
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !7495

if.then2:                                         ; preds = %if.then
  store i8 1, i8* %added_notes_p, align 1, !dbg !7496
  br label %cleanup, !dbg !7498

if.end:                                           ; preds = %if.then
  %mw_reg = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 0, !dbg !7499
  %1 = load %struct.rtx_def*, %struct.rtx_def** %mw_reg, align 8, !dbg !7499
  %call3 = tail call fastcc %struct.rtx_def* @df_set_note(i32 1, %struct.rtx_def* %insn, %struct.rtx_def* %old, %struct.rtx_def* %1) #7, !dbg !7500
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !7478, metadata !DIExpression()), !dbg !7486
  br label %cleanup, !dbg !7501

if.else:                                          ; preds = %entry
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 2, !dbg !7502
  %2 = load i32, i32* %start_regno, align 4, !dbg !7502
  call void @llvm.dbg.value(metadata i32 %2, metadata !7484, metadata !DIExpression()), !dbg !7486
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 3, !dbg !7505
  %tobool12 = icmp eq i8 %0, 0, !dbg !7507
  br i1 %tobool12, label %if.else.split.us, label %if.else.if.else.split_crit_edge, !dbg !7511

if.else.if.else.split_crit_edge:                  ; preds = %if.else
  br label %for.cond, !dbg !7511

if.else.split.us:                                 ; preds = %if.else
  br label %for.cond.us, !dbg !7511

for.cond.us:                                      ; preds = %for.inc.us, %if.else.split.us
  %r.0.us = phi i32 [ %2, %if.else.split.us ], [ %inc.us, %for.inc.us ], !dbg !7512
  %old.addr.0.us = phi %struct.rtx_def* [ %old, %if.else.split.us ], [ %old.addr.1.us, %for.inc.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0.us, metadata !7478, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 %r.0.us, metadata !7484, metadata !DIExpression()), !dbg !7486
  %3 = load i32, i32* %end_regno, align 8, !dbg !7513
  %cmp.us = icmp ugt i32 %r.0.us, %3, !dbg !7514
  br i1 %cmp.us, label %cleanup.loopexit.us-lcssa.us, label %for.body.us, !dbg !7515

for.body.us:                                      ; preds = %for.cond.us
  %call4.us = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %live, i32 %r.0.us) #6, !dbg !7516
  %tobool5.us = icmp eq i32 %call4.us, 0, !dbg !7516
  br i1 %tobool5.us, label %land.lhs.true.us, label %for.inc.us, !dbg !7517

land.lhs.true.us:                                 ; preds = %for.body.us
  %call6.us = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %artificial_uses, i32 %r.0.us) #6, !dbg !7518
  %tobool7.us = icmp eq i32 %call6.us, 0, !dbg !7518
  br i1 %tobool7.us, label %land.lhs.true8.us, label %for.inc.us, !dbg !7519

land.lhs.true8.us:                                ; preds = %land.lhs.true.us
  %call9.us = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %do_not_gen, i32 %r.0.us) #6, !dbg !7520
  %tobool10.us = icmp eq i32 %call9.us, 0, !dbg !7520
  br i1 %tobool10.us, label %if.then11.us, label %for.inc.us, !dbg !7521

if.then11.us:                                     ; preds = %land.lhs.true8.us
  %4 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !7522
  %idxprom.us = zext i32 %r.0.us to i64, !dbg !7522
  %arrayidx.us = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %4, i64 %idxprom.us, !dbg !7522
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx.us, align 8, !dbg !7522
  %call15.us = tail call fastcc %struct.rtx_def* @df_set_note(i32 1, %struct.rtx_def* %insn, %struct.rtx_def* %old.addr.0.us, %struct.rtx_def* %5) #7, !dbg !7523
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call15.us, metadata !7478, metadata !DIExpression()), !dbg !7486
  br label %for.inc.us, !dbg !7524

for.inc.us:                                       ; preds = %if.then11.us, %land.lhs.true8.us, %land.lhs.true.us, %for.body.us
  %old.addr.1.us = phi %struct.rtx_def* [ %old.addr.0.us, %for.body.us ], [ %old.addr.0.us, %land.lhs.true.us ], [ %old.addr.0.us, %land.lhs.true8.us ], [ %call15.us, %if.then11.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.1.us, metadata !7478, metadata !DIExpression()), !dbg !7486
  %inc.us = add i32 %r.0.us, 1, !dbg !7525
  call void @llvm.dbg.value(metadata i32 %inc.us, metadata !7484, metadata !DIExpression()), !dbg !7486
  br label %for.cond.us, !dbg !7526, !llvm.loop !7527

cleanup.loopexit.us-lcssa.us:                     ; preds = %for.cond.us
  %old.addr.0.us.lcssa = phi %struct.rtx_def* [ %old.addr.0.us, %for.cond.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0.us.lcssa, metadata !7478, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0.us.lcssa, metadata !7478, metadata !DIExpression()), !dbg !7486
  br label %cleanup.loopexit, !dbg !7529

for.cond:                                         ; preds = %for.inc, %if.else.if.else.split_crit_edge
  %r.0 = phi i32 [ %2, %if.else.if.else.split_crit_edge ], [ %inc, %for.inc ], !dbg !7512
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !7478, metadata !DIExpression()), !dbg !7486
  call void @llvm.dbg.value(metadata i32 %r.0, metadata !7484, metadata !DIExpression()), !dbg !7486
  %6 = load i32, i32* %end_regno, align 8, !dbg !7513
  %cmp = icmp ugt i32 %r.0, %6, !dbg !7514
  br i1 %cmp, label %cleanup.loopexit.us-lcssa, label %for.body, !dbg !7515

for.body:                                         ; preds = %for.cond
  %call4 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %live, i32 %r.0) #6, !dbg !7516
  %tobool5 = icmp eq i32 %call4, 0, !dbg !7516
  br i1 %tobool5, label %land.lhs.true, label %for.inc, !dbg !7517

land.lhs.true:                                    ; preds = %for.body
  %call6 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %artificial_uses, i32 %r.0) #6, !dbg !7518
  %tobool7 = icmp eq i32 %call6, 0, !dbg !7518
  br i1 %tobool7, label %land.lhs.true8, label %for.inc, !dbg !7519

land.lhs.true8:                                   ; preds = %land.lhs.true
  %call9 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %do_not_gen, i32 %r.0) #6, !dbg !7520
  %tobool10 = icmp eq i32 %call9, 0, !dbg !7520
  br i1 %tobool10, label %if.then11, label %for.inc, !dbg !7521

if.then11:                                        ; preds = %land.lhs.true8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !7478, metadata !DIExpression()), !dbg !7486
  store i8 1, i8* %added_notes_p, align 1, !dbg !7530
  br label %cleanup, !dbg !7532

for.inc:                                          ; preds = %land.lhs.true8, %land.lhs.true, %for.body
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !7478, metadata !DIExpression()), !dbg !7486
  %inc = add i32 %r.0, 1, !dbg !7525
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7484, metadata !DIExpression()), !dbg !7486
  br label %for.cond, !dbg !7526, !llvm.loop !7527

cleanup.loopexit.us-lcssa:                        ; preds = %for.cond
  br label %cleanup.loopexit, !dbg !7529

cleanup.loopexit:                                 ; preds = %cleanup.loopexit.us-lcssa.us, %cleanup.loopexit.us-lcssa
  %old.addr.0.lcssa = phi %struct.rtx_def* [ %old, %cleanup.loopexit.us-lcssa ], [ %old.addr.0.us.lcssa, %cleanup.loopexit.us-lcssa.us ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0.lcssa, metadata !7478, metadata !DIExpression()), !dbg !7486
  br label %cleanup, !dbg !7529

cleanup:                                          ; preds = %cleanup.loopexit, %if.end, %if.then11, %if.then2
  %retval.0 = phi %struct.rtx_def* [ %old, %if.then2 ], [ %old, %if.then11 ], [ %call3, %if.end ], [ %old.addr.0.lcssa, %cleanup.loopexit ], !dbg !7486
  ret %struct.rtx_def* %retval.0, !dbg !7529
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def* @df_set_note(i32 %note_type, %struct.rtx_def* %insn, %struct.rtx_def* %old, %struct.rtx_def* %reg) unnamed_addr #0 !dbg !7533 {
entry:
  call void @llvm.dbg.value(metadata i32 %note_type, metadata !7537, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !7538, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !7539, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !7540, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old, metadata !7541, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !7542, metadata !DIExpression()), !dbg !7543
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 0, !dbg !7544
  %bf.load = load i32, i32* %0, align 8, !dbg !7544
  %bf.clear = and i32 %bf.load, 65535, !dbg !7544
  %cmp = icmp eq i32 %bf.clear, 7, !dbg !7544
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !7544

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 3184, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7544
  br label %cond.end, !dbg !7544

cond.end:                                         ; preds = %entry, %cond.true
  br label %while.cond, !dbg !7545

while.cond:                                       ; preds = %if.else28, %cond.end
  %curr.0 = phi %struct.rtx_def* [ %old, %cond.end ], [ %10, %if.else28 ], !dbg !7543
  %prev.0 = phi %struct.rtx_def* [ null, %cond.end ], [ %curr.0, %if.else28 ], !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0, metadata !7542, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %curr.0, metadata !7541, metadata !DIExpression()), !dbg !7543
  %tobool = icmp eq %struct.rtx_def* %curr.0, null, !dbg !7545
  br i1 %tobool, label %while.end, label %while.body, !dbg !7545

while.body:                                       ; preds = %while.cond
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %curr.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7546
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7546
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7546
  %cmp1 = icmp eq %struct.rtx_def* %1, %reg, !dbg !7548
  br i1 %cmp1, label %if.then, label %if.else28, !dbg !7549

if.then:                                          ; preds = %while.body
  %curr.0.lcssa6 = phi %struct.rtx_def* [ %curr.0, %while.body ], !dbg !7543
  %prev.0.lcssa5 = phi %struct.rtx_def* [ %prev.0, %while.body ], !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %curr.0.lcssa6, metadata !7541, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa5, metadata !7542, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %curr.0.lcssa6, metadata !7541, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa5, metadata !7542, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %curr.0.lcssa6, metadata !7541, metadata !DIExpression()), !dbg !7543
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0.lcssa5, metadata !7542, metadata !DIExpression()), !dbg !7543
  %tobool2 = icmp eq %struct.rtx_def* %prev.0.lcssa5, null, !dbg !7550
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %curr.0.lcssa6, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7553
  %rt_rtx7 = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !7553
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !7553
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !7554

if.then3:                                         ; preds = %if.then
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0.lcssa5, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7555
  %rt_rtx11 = bitcast %union.rtunion_def* %4 to %struct.rtx_def**, !dbg !7555
  store %struct.rtx_def* %3, %struct.rtx_def** %rt_rtx11, align 8, !dbg !7556
  br label %if.end, !dbg !7555

if.end:                                           ; preds = %if.then, %if.then3
  %old.addr.0 = phi %struct.rtx_def* [ %old, %if.then3 ], [ %3, %if.then ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old.addr.0, metadata !7539, metadata !DIExpression()), !dbg !7543
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !7557
  %5 = getelementptr inbounds %union.u, %union.u* %u16, i64 1, i32 0, i32 0, i64 2, !dbg !7557
  %6 = bitcast %union.rtunion_def* %5 to i64*, !dbg !7557
  %7 = load i64, i64* %6, align 8, !dbg !7557
  %8 = bitcast %union.rtunion_def* %2 to i64*, !dbg !7558
  store i64 %7, i64* %8, align 8, !dbg !7558
  %rt_rtx27 = bitcast %union.rtunion_def* %5 to %struct.rtx_def**, !dbg !7559
  store %struct.rtx_def* %curr.0.lcssa6, %struct.rtx_def** %rt_rtx27, align 8, !dbg !7560
  br label %cleanup, !dbg !7561

if.else28:                                        ; preds = %while.body
  call void @llvm.dbg.value(metadata %struct.rtx_def* %curr.0, metadata !7542, metadata !DIExpression()), !dbg !7543
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %curr.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !7562
  %rt_rtx32 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !7562
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !7562
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !7541, metadata !DIExpression()), !dbg !7543
  br label %while.cond, !dbg !7545, !llvm.loop !7564

while.end:                                        ; preds = %while.cond
  tail call void @add_reg_note(%struct.rtx_def* %insn, i32 %note_type, %struct.rtx_def* %reg) #6, !dbg !7566
  br label %cleanup, !dbg !7567

cleanup:                                          ; preds = %while.end, %if.end
  %retval.0 = phi %struct.rtx_def* [ %old.addr.0, %if.end ], [ %old, %while.end ], !dbg !7543
  ret %struct.rtx_def* %retval.0, !dbg !7568
}

declare dso_local void @free_EXPR_LIST_node(%struct.rtx_def*) local_unnamed_addr #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) local_unnamed_addr #1

declare dso_local zeroext i8 @df_insn_rescan_debug_internal(%struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @df_whole_mw_reg_unused_p(%struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses) unnamed_addr #4 !dbg !7569 {
entry:
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg* %mws, metadata !7573, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !7574, metadata !DIExpression()), !dbg !7577
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %artificial_uses, metadata !7575, metadata !DIExpression()), !dbg !7577
  %flags = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 1, !dbg !7578
  %bf.load = load i32, i32* %flags, align 8, !dbg !7578
  %and = and i32 %bf.load, 1048576, !dbg !7580
  %tobool = icmp eq i32 %and, 0, !dbg !7580
  br i1 %tobool, label %if.end, label %cleanup, !dbg !7581

if.end:                                           ; preds = %entry
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 2, !dbg !7582
  %0 = load i32, i32* %start_regno, align 4, !dbg !7582
  call void @llvm.dbg.value(metadata i32 %0, metadata !7576, metadata !DIExpression()), !dbg !7577
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 3, !dbg !7584
  br label %for.cond, !dbg !7586

for.cond:                                         ; preds = %for.inc, %if.end
  %r.0 = phi i32 [ %0, %if.end ], [ %inc, %for.inc ], !dbg !7587
  call void @llvm.dbg.value(metadata i32 %r.0, metadata !7576, metadata !DIExpression()), !dbg !7577
  %1 = load i32, i32* %end_regno, align 8, !dbg !7588
  %cmp = icmp ugt i32 %r.0, %1, !dbg !7589
  br i1 %cmp, label %for.end, label %for.body, !dbg !7590

for.body:                                         ; preds = %for.cond
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %live, i32 %r.0) #6, !dbg !7591
  %tobool1 = icmp eq i32 %call, 0, !dbg !7591
  br i1 %tobool1, label %lor.lhs.false, label %cleanup.loopexit, !dbg !7593

lor.lhs.false:                                    ; preds = %for.body
  %call2 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %artificial_uses, i32 %r.0) #6, !dbg !7594
  %tobool3 = icmp eq i32 %call2, 0, !dbg !7594
  br i1 %tobool3, label %for.inc, label %cleanup.loopexit, !dbg !7595

for.inc:                                          ; preds = %lor.lhs.false
  %inc = add i32 %r.0, 1, !dbg !7596
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7576, metadata !DIExpression()), !dbg !7577
  br label %for.cond, !dbg !7597, !llvm.loop !7598

for.end:                                          ; preds = %for.cond
  %2 = bitcast %struct.df_mw_hardreg* %mws to i32**, !dbg !7600
  %3 = load i32*, i32** %2, align 8, !dbg !7600
  %bf.load6 = load i32, i32* %3, align 8, !dbg !7600
  %bf.clear = and i32 %bf.load6, 65535, !dbg !7600
  %cmp7 = icmp eq i32 %bf.clear, 37, !dbg !7600
  br i1 %cmp7, label %cleanup, label %cond.true, !dbg !7600

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 3230, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7600
  br label %cleanup, !dbg !7600

cleanup.loopexit:                                 ; preds = %for.body, %lor.lhs.false
  br label %cleanup, !dbg !7601

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %cond.true, %for.end
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %for.end ], [ 1, %cond.true ], [ 0, %cleanup.loopexit ], !dbg !7577
  ret i8 %retval.0, !dbg !7601
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @df_whole_mw_reg_dead_p(%struct.df_mw_hardreg* %mws, %struct.bitmap_head_def* %live, %struct.bitmap_head_def* %artificial_uses, %struct.bitmap_head_def* %do_not_gen) unnamed_addr #4 !dbg !7602 {
entry:
  call void @llvm.dbg.value(metadata %struct.df_mw_hardreg* %mws, metadata !7606, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %live, metadata !7607, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %artificial_uses, metadata !7608, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %do_not_gen, metadata !7609, metadata !DIExpression()), !dbg !7611
  %flags = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 1, !dbg !7612
  %bf.load = load i32, i32* %flags, align 8, !dbg !7612
  %and = and i32 %bf.load, 1048576, !dbg !7614
  %tobool = icmp eq i32 %and, 0, !dbg !7614
  br i1 %tobool, label %if.end, label %cleanup, !dbg !7615

if.end:                                           ; preds = %entry
  %start_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 2, !dbg !7616
  %0 = load i32, i32* %start_regno, align 4, !dbg !7616
  call void @llvm.dbg.value(metadata i32 %0, metadata !7610, metadata !DIExpression()), !dbg !7611
  %end_regno = getelementptr inbounds %struct.df_mw_hardreg, %struct.df_mw_hardreg* %mws, i64 0, i32 3, !dbg !7618
  br label %for.cond, !dbg !7620

for.cond:                                         ; preds = %for.inc, %if.end
  %r.0 = phi i32 [ %0, %if.end ], [ %inc, %for.inc ], !dbg !7621
  call void @llvm.dbg.value(metadata i32 %r.0, metadata !7610, metadata !DIExpression()), !dbg !7611
  %1 = load i32, i32* %end_regno, align 8, !dbg !7622
  %cmp = icmp ugt i32 %r.0, %1, !dbg !7623
  br i1 %cmp, label %for.end, label %for.body, !dbg !7624

for.body:                                         ; preds = %for.cond
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %live, i32 %r.0) #6, !dbg !7625
  %tobool1 = icmp eq i32 %call, 0, !dbg !7625
  br i1 %tobool1, label %lor.lhs.false, label %cleanup.loopexit, !dbg !7627

lor.lhs.false:                                    ; preds = %for.body
  %call2 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %artificial_uses, i32 %r.0) #6, !dbg !7628
  %tobool3 = icmp eq i32 %call2, 0, !dbg !7628
  br i1 %tobool3, label %lor.lhs.false4, label %cleanup.loopexit, !dbg !7629

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %call5 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %do_not_gen, i32 %r.0) #6, !dbg !7630
  %tobool6 = icmp eq i32 %call5, 0, !dbg !7630
  br i1 %tobool6, label %for.inc, label %cleanup.loopexit, !dbg !7631

for.inc:                                          ; preds = %lor.lhs.false4
  %inc = add i32 %r.0, 1, !dbg !7632
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7610, metadata !DIExpression()), !dbg !7611
  br label %for.cond, !dbg !7633, !llvm.loop !7634

for.end:                                          ; preds = %for.cond
  %2 = bitcast %struct.df_mw_hardreg* %mws to i32**, !dbg !7636
  %3 = load i32*, i32** %2, align 8, !dbg !7636
  %bf.load9 = load i32, i32* %3, align 8, !dbg !7636
  %bf.clear = and i32 %bf.load9, 65535, !dbg !7636
  %cmp10 = icmp eq i32 %bf.clear, 37, !dbg !7636
  br i1 %cmp10, label %cleanup, label %cond.true, !dbg !7636

cond.true:                                        ; preds = %for.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 3306, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7636
  br label %cleanup, !dbg !7636

cleanup.loopexit:                                 ; preds = %for.body, %lor.lhs.false, %lor.lhs.false4
  br label %cleanup, !dbg !7637

cleanup:                                          ; preds = %cleanup.loopexit, %entry, %cond.true, %for.end
  %retval.0 = phi i8 [ 0, %entry ], [ 1, %for.end ], [ 1, %cond.true ], [ 0, %cleanup.loopexit ], !dbg !7611
  ret i8 %retval.0, !dbg !7637
}

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bb_has_eh_pred(%struct.basic_block_def* %bb) unnamed_addr #0 !dbg !7638 {
entry:
  %e = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7642, metadata !DIExpression()), !dbg !7645
  %0 = bitcast %struct.edge_def** %e to i8*, !dbg !7646
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7646
  %1 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7647
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7647
  %2 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7648
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7648
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 0, !dbg !7648
  %call = tail call fastcc { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds) #7, !dbg !7648
  %3 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 0, !dbg !7648
  %4 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 0, !dbg !7648
  store i32 %4, i32* %3, align 8, !dbg !7648
  %5 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %tmp, i64 0, i32 1, !dbg !7648
  %6 = extractvalue { i32, %struct.VEC_edge_gc** } %call, 1, !dbg !7648
  store %struct.VEC_edge_gc** %6, %struct.VEC_edge_gc*** %5, align 8, !dbg !7648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %1, i8* nonnull align 8 %2, i64 16, i1 false), !dbg !7648
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #8, !dbg !7648
  %7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 0, !dbg !7650
  %8 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %ei, i64 0, i32 1, !dbg !7650
  br label %for.cond, !dbg !7648

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %7, align 8, !dbg !7652
  %10 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %8, align 8, !dbg !7652
  call void @llvm.dbg.value(metadata %struct.edge_def** %e, metadata !7643, metadata !DIExpression(DW_OP_deref)), !dbg !7645
  %call1 = call fastcc zeroext i8 @ei_cond(i32 %9, %struct.VEC_edge_gc** %10, %struct.edge_def** nonnull %e) #7, !dbg !7652
  %tobool = icmp eq i8 %call1, 0, !dbg !7648
  br i1 %tobool, label %cleanup, label %for.body, !dbg !7648

for.body:                                         ; preds = %for.cond
  %11 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !7653
  call void @llvm.dbg.value(metadata %struct.edge_def* %11, metadata !7643, metadata !DIExpression()), !dbg !7645
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %11, i64 0, i32 7, !dbg !7656
  %12 = load i32, i32* %flags, align 8, !dbg !7656
  %and = and i32 %12, 8, !dbg !7657
  %tobool2 = icmp eq i32 %and, 0, !dbg !7657
  br i1 %tobool2, label %for.inc, label %cleanup, !dbg !7658

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.edge_iterator* %ei, metadata !7644, metadata !DIExpression(DW_OP_deref)), !dbg !7645
  call fastcc void @ei_next(%struct.edge_iterator* nonnull %ei) #7, !dbg !7652
  br label %for.cond, !dbg !7652, !llvm.loop !7659

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !7645
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1) #8, !dbg !7661
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !7661
  ret i8 %retval.0, !dbg !7661
}

; Function Attrs: nounwind uwtable
define internal void @df_md_alloc(%struct.bitmap_head_def* %all_blocks) #4 !dbg !7662 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !7664, metadata !DIExpression()), !dbg !7671
  %0 = bitcast i32* %bb_index to i8*, !dbg !7672
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7672
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7673
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7673
  %2 = load %struct.df*, %struct.df** @df, align 8, !dbg !7674
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %2, i64 0, i32 1, i64 7, !dbg !7674
  %3 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7674
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %3, i64 0, i32 3, !dbg !7676
  %4 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !7676
  %tobool = icmp eq %struct.alloc_pool_def* %4, null, !dbg !7674
  br i1 %tobool, label %if.then, label %if.end, !dbg !7677

if.then:                                          ; preds = %entry
  %call = tail call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.48, i64 0, i64 0), i64 40, i64 50) #6, !dbg !7678
  %5 = load %struct.df*, %struct.df** @df, align 8, !dbg !7679
  %arrayidx2 = getelementptr inbounds %struct.df, %struct.df* %5, i64 0, i32 1, i64 7, !dbg !7679
  %6 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !7679
  %block_pool3 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %6, i64 0, i32 3, !dbg !7680
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** %block_pool3, align 8, !dbg !7681
  %.pre = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !7682
  br label %if.end, !dbg !7679

if.end:                                           ; preds = %entry, %if.then
  %7 = phi %struct.dataflow* [ %3, %entry ], [ %.pre, %if.then ], !dbg !7682
  tail call void @df_grow_bb_info(%struct.dataflow* %7) #7, !dbg !7683
  %call6 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7684
  store %struct.bitmap_head_def* %call6, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !7685
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7665, metadata !DIExpression(DW_OP_deref)), !dbg !7671
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7666, metadata !DIExpression(DW_OP_deref)), !dbg !7671
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !7686
  br label %for.cond, !dbg !7686

for.cond:                                         ; preds = %for.inc, %if.end
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7665, metadata !DIExpression(DW_OP_deref)), !dbg !7671
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7666, metadata !DIExpression(DW_OP_deref)), !dbg !7671
  %call7 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !7687
  %tobool8 = icmp eq i8 %call7, 0, !dbg !7686
  br i1 %tobool8, label %for.end, label %for.body, !dbg !7686

for.body:                                         ; preds = %for.cond
  %8 = load i32, i32* %bb_index, align 4, !dbg !7688
  call void @llvm.dbg.value(metadata i32 %8, metadata !7665, metadata !DIExpression()), !dbg !7671
  %call9 = call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %8) #7, !dbg !7689
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %call9, metadata !7667, metadata !DIExpression()), !dbg !7690
  %tobool10 = icmp eq %struct.df_md_bb_info* %call9, null, !dbg !7691
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !7693

if.then11:                                        ; preds = %for.body
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call9, i64 0, i32 2, !dbg !7694
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !7694
  call void @bitmap_clear(%struct.bitmap_head_def* %9) #6, !dbg !7696
  %gen = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call9, i64 0, i32 0, !dbg !7697
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !7697
  call void @bitmap_clear(%struct.bitmap_head_def* %10) #6, !dbg !7698
  %kill = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call9, i64 0, i32 1, !dbg !7699
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !7699
  call void @bitmap_clear(%struct.bitmap_head_def* %11) #6, !dbg !7700
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call9, i64 0, i32 3, !dbg !7701
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7701
  call void @bitmap_clear(%struct.bitmap_head_def* %12) #6, !dbg !7702
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call9, i64 0, i32 4, !dbg !7703
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7703
  call void @bitmap_clear(%struct.bitmap_head_def* %13) #6, !dbg !7704
  br label %for.inc, !dbg !7705

if.else:                                          ; preds = %for.body
  %14 = load %struct.df*, %struct.df** @df, align 8, !dbg !7706
  %arrayidx13 = getelementptr inbounds %struct.df, %struct.df* %14, i64 0, i32 1, i64 7, !dbg !7706
  %15 = load %struct.dataflow*, %struct.dataflow** %arrayidx13, align 8, !dbg !7706
  %block_pool14 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %15, i64 0, i32 3, !dbg !7708
  %16 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool14, align 8, !dbg !7708
  %call15 = call i8* @pool_alloc(%struct.alloc_pool_def* %16) #6, !dbg !7709
  %17 = bitcast i8* %call15 to %struct.df_md_bb_info*, !dbg !7710
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %17, metadata !7667, metadata !DIExpression()), !dbg !7690
  %18 = load i32, i32* %bb_index, align 4, !dbg !7711
  call void @llvm.dbg.value(metadata i32 %18, metadata !7665, metadata !DIExpression()), !dbg !7671
  call fastcc void @df_md_set_bb_info(i32 %18, %struct.df_md_bb_info* %17) #7, !dbg !7712
  %call16 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7713
  %init17 = getelementptr inbounds i8, i8* %call15, i64 16, !dbg !7714
  %19 = bitcast i8* %init17 to %struct.bitmap_head_def**, !dbg !7714
  store %struct.bitmap_head_def* %call16, %struct.bitmap_head_def** %19, align 8, !dbg !7715
  %call18 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7716
  %gen19 = bitcast i8* %call15 to %struct.bitmap_head_def**, !dbg !7717
  store %struct.bitmap_head_def* %call18, %struct.bitmap_head_def** %gen19, align 8, !dbg !7718
  %call20 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7719
  %kill21 = getelementptr inbounds i8, i8* %call15, i64 8, !dbg !7720
  %20 = bitcast i8* %kill21 to %struct.bitmap_head_def**, !dbg !7720
  store %struct.bitmap_head_def* %call20, %struct.bitmap_head_def** %20, align 8, !dbg !7721
  %call22 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7722
  %in23 = getelementptr inbounds i8, i8* %call15, i64 24, !dbg !7723
  %21 = bitcast i8* %in23 to %struct.bitmap_head_def**, !dbg !7723
  store %struct.bitmap_head_def* %call22, %struct.bitmap_head_def** %21, align 8, !dbg !7724
  %call24 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7725
  %out25 = getelementptr inbounds i8, i8* %call15, i64 32, !dbg !7726
  %22 = bitcast i8* %out25 to %struct.bitmap_head_def**, !dbg !7726
  store %struct.bitmap_head_def* %call24, %struct.bitmap_head_def** %22, align 8, !dbg !7727
  br label %for.inc

for.inc:                                          ; preds = %if.then11, %if.else
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7665, metadata !DIExpression(DW_OP_deref)), !dbg !7671
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7666, metadata !DIExpression(DW_OP_deref)), !dbg !7671
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !7687
  br label %for.cond, !dbg !7687, !llvm.loop !7728

for.end:                                          ; preds = %for.cond
  %23 = load %struct.df*, %struct.df** @df, align 8, !dbg !7730
  %arrayidx28 = getelementptr inbounds %struct.df, %struct.df* %23, i64 0, i32 1, i64 7, !dbg !7730
  %24 = load %struct.dataflow*, %struct.dataflow** %arrayidx28, align 8, !dbg !7730
  %optional_p = getelementptr inbounds %struct.dataflow, %struct.dataflow* %24, i64 0, i32 9, !dbg !7731
  store i8 1, i8* %optional_p, align 2, !dbg !7732
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7733
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7733
  ret void, !dbg !7733
}

; Function Attrs: nounwind uwtable
define internal void @df_md_reset(%struct.bitmap_head_def* %all_blocks) #4 !dbg !7734 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !7736, metadata !DIExpression()), !dbg !7743
  %0 = bitcast i32* %bb_index to i8*, !dbg !7744
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7744
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7745
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7745
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7737, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7738, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !7746
  br label %for.cond, !dbg !7746

for.cond:                                         ; preds = %cond.end, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7737, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7738, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !7747
  %tobool = icmp eq i8 %call, 0, !dbg !7746
  br i1 %tobool, label %for.end, label %for.body, !dbg !7746

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !7748
  call void @llvm.dbg.value(metadata i32 %2, metadata !7737, metadata !DIExpression()), !dbg !7743
  %call1 = call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %2) #7, !dbg !7749
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %call1, metadata !7739, metadata !DIExpression()), !dbg !7750
  %tobool2 = icmp eq %struct.df_md_bb_info* %call1, null, !dbg !7751
  br i1 %tobool2, label %cond.true, label %cond.end, !dbg !7751

cond.true:                                        ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 4267, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7751
  br label %cond.end, !dbg !7751

cond.end:                                         ; preds = %for.body, %cond.true
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call1, i64 0, i32 3, !dbg !7752
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7752
  call void @bitmap_clear(%struct.bitmap_head_def* %3) #6, !dbg !7753
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call1, i64 0, i32 4, !dbg !7754
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7754
  call void @bitmap_clear(%struct.bitmap_head_def* %4) #6, !dbg !7755
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7737, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7738, metadata !DIExpression(DW_OP_deref)), !dbg !7743
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !7747
  br label %for.cond, !dbg !7747, !llvm.loop !7756

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7758
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7758
  ret void, !dbg !7758
}

; Function Attrs: nounwind uwtable
define internal void @df_md_free_bb_info(%struct.basic_block_def* %bb, i8* %vbb_info) #4 !dbg !7759 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7761, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !7762, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !7763, metadata !DIExpression()), !dbg !7764
  %tobool = icmp eq i8* %vbb_info, null, !dbg !7765
  br i1 %tobool, label %if.end, label %if.then, !dbg !7767

if.then:                                          ; preds = %entry
  call void @llvm.dbg.value(metadata i8* %vbb_info, metadata !7763, metadata !DIExpression()), !dbg !7764
  %kill = getelementptr inbounds i8, i8* %vbb_info, i64 8, !dbg !7768
  %0 = bitcast i8* %kill to %struct.bitmap_head_def**, !dbg !7768
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %0, align 8, !dbg !7768
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %1) #6, !dbg !7768
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %0, align 8, !dbg !7768
  %gen = bitcast i8* %vbb_info to %struct.bitmap_head_def**, !dbg !7770
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !7770
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %2) #6, !dbg !7770
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %gen, align 8, !dbg !7770
  %init = getelementptr inbounds i8, i8* %vbb_info, i64 16, !dbg !7771
  %3 = bitcast i8* %init to %struct.bitmap_head_def**, !dbg !7771
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %3, align 8, !dbg !7771
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !7771
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %3, align 8, !dbg !7771
  %in = getelementptr inbounds i8, i8* %vbb_info, i64 24, !dbg !7772
  %5 = bitcast i8* %in to %struct.bitmap_head_def**, !dbg !7772
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %5, align 8, !dbg !7772
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !7772
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %5, align 8, !dbg !7772
  %out = getelementptr inbounds i8, i8* %vbb_info, i64 32, !dbg !7773
  %7 = bitcast i8* %out to %struct.bitmap_head_def**, !dbg !7773
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %7, align 8, !dbg !7773
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %8) #6, !dbg !7773
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %7, align 8, !dbg !7773
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !7774
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %9, i64 0, i32 1, i64 7, !dbg !7774
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7774
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i64 0, i32 3, !dbg !7775
  %11 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !7775
  tail call void @pool_free(%struct.alloc_pool_def* %11, i8* nonnull %vbb_info) #6, !dbg !7776
  br label %if.end, !dbg !7777

if.end:                                           ; preds = %entry, %if.then
  ret void, !dbg !7778
}

; Function Attrs: nounwind uwtable
define internal void @df_md_local_compute(%struct.bitmap_head_def* %all_blocks) #4 !dbg !7779 {
entry:
  %bb_index = alloca i32, align 4
  %df_bb_index = alloca i32, align 4
  %bi1 = alloca %struct.bitmap_iterator, align 8
  %bi2 = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !7781, metadata !DIExpression()), !dbg !7796
  %0 = bitcast i32* %bb_index to i8*, !dbg !7797
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7797
  %1 = bitcast i32* %df_bb_index to i8*, !dbg !7797
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !7797
  %2 = bitcast %struct.bitmap_iterator* %bi1 to i8*, !dbg !7798
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %2) #8, !dbg !7798
  %3 = bitcast %struct.bitmap_iterator* %bi2 to i8*, !dbg !7798
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %3) #8, !dbg !7798
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7799
  store %struct.bitmap_head_def* %call, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !7800
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7782, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi1, metadata !7784, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi1, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !7801
  br label %for.cond, !dbg !7801

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7782, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi1, metadata !7784, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  %call1 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi1, i32* nonnull %bb_index) #7, !dbg !7803
  %tobool = icmp eq i8 %call1, 0, !dbg !7801
  br i1 %tobool, label %for.end, label %for.body, !dbg !7801

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %bb_index, align 4, !dbg !7805
  call void @llvm.dbg.value(metadata i32 %4, metadata !7782, metadata !DIExpression()), !dbg !7796
  call fastcc void @df_md_bb_local_compute(i32 %4) #7, !dbg !7807
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7782, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi1, metadata !7784, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi1, i32* nonnull %bb_index) #7, !dbg !7803
  br label %for.cond, !dbg !7803, !llvm.loop !7808

for.end:                                          ; preds = %for.cond
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !7810
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %5) #6, !dbg !7810
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !7810
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7811
  %cfg = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, i32 1, !dbg !7811
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7811
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i64 0, i32 5, !dbg !7811
  %8 = load i32, i32* %x_last_basic_block, align 8, !dbg !7811
  %conv = sext i32 %8 to i64, !dbg !7811
  %mul = shl nsw i64 %conv, 3, !dbg !7811
  %call2 = call i8* @xmalloc(i64 %mul) #6, !dbg !7811
  %9 = bitcast i8* %call2 to %struct.bitmap_head_def**, !dbg !7811
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def** %9, metadata !7787, metadata !DIExpression()), !dbg !7796
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7812
  %cfg4 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, i32 1, !dbg !7812
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4, align 8, !dbg !7812
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 0, !dbg !7812
  br label %for.cond5, !dbg !7812

for.cond5:                                        ; preds = %for.body7, %for.end
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %for.end ], [ %next_bb, %for.body7 ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !7814
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !7786, metadata !DIExpression()), !dbg !7796
  %tobool6 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !7812
  br i1 %tobool6, label %for.end10, label %for.body7, !dbg !7812

for.body7:                                        ; preds = %for.cond5
  %call8 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !7815
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !7817
  %12 = load i32, i32* %index, align 8, !dbg !7817
  %idxprom = sext i32 %12 to i64, !dbg !7818
  %arrayidx = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %9, i64 %idxprom, !dbg !7818
  store %struct.bitmap_head_def* %call8, %struct.bitmap_head_def** %arrayidx, align 8, !dbg !7819
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !7820
  br label %for.cond5, !dbg !7820, !llvm.loop !7821

for.end10:                                        ; preds = %for.cond5
  call void @compute_dominance_frontiers(%struct.bitmap_head_def** %9) #6, !dbg !7823
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7782, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi1, metadata !7784, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi1, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !7824
  br label %for.cond11, !dbg !7824

for.cond11:                                       ; preds = %for.inc38, %for.end10
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7782, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi1, metadata !7784, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  %call12 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi1, i32* nonnull %bb_index) #7, !dbg !7825
  %tobool13 = icmp eq i8 %call12, 0, !dbg !7824
  br i1 %tobool13, label %for.end39, label %for.body14, !dbg !7824

for.body14:                                       ; preds = %for.cond11
  %13 = load i32, i32* %bb_index, align 4, !dbg !7826
  call void @llvm.dbg.value(metadata i32 %13, metadata !7782, metadata !DIExpression()), !dbg !7796
  %call15 = call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %13) #7, !dbg !7827
  %kill16 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call15, i64 0, i32 1, !dbg !7828
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill16, align 8, !dbg !7828
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %14, metadata !7788, metadata !DIExpression()), !dbg !7829
  %15 = load i32, i32* %bb_index, align 4, !dbg !7830
  call void @llvm.dbg.value(metadata i32 %15, metadata !7782, metadata !DIExpression()), !dbg !7796
  %idxprom17 = zext i32 %15 to i64, !dbg !7830
  %arrayidx18 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %9, i64 %idxprom17, !dbg !7830
  %16 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx18, align 8, !dbg !7830
  call void @llvm.dbg.value(metadata i32* %df_bb_index, metadata !7783, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi2, metadata !7785, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi2, %struct.bitmap_head_def* %16, i32 0, i32* nonnull %df_bb_index) #7, !dbg !7830
  br label %for.cond19, !dbg !7830

for.cond19:                                       ; preds = %for.inc36, %for.body14
  call void @llvm.dbg.value(metadata i32* %df_bb_index, metadata !7783, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi2, metadata !7785, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  %call20 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi2, i32* nonnull %df_bb_index) #7, !dbg !7831
  %tobool21 = icmp eq i8 %call20, 0, !dbg !7830
  br i1 %tobool21, label %for.inc38, label %for.body22, !dbg !7830

for.body22:                                       ; preds = %for.cond19
  %17 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7832
  %cfg25 = getelementptr inbounds %struct.function, %struct.function* %17, i64 0, i32 1, !dbg !7832
  %18 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25, align 8, !dbg !7832
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %18, i64 0, i32 2, !dbg !7832
  %19 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7832
  %tobool26 = icmp eq %struct.VEC_basic_block_gc* %19, null, !dbg !7832
  br i1 %tobool26, label %cond.end, label %cond.true, !dbg !7832

cond.true:                                        ; preds = %for.body22
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %19, i64 0, i32 0, !dbg !7832
  br label %cond.end, !dbg !7832

cond.end:                                         ; preds = %for.body22, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %for.body22 ], !dbg !7832
  %20 = load i32, i32* %df_bb_index, align 4, !dbg !7832
  call void @llvm.dbg.value(metadata i32 %20, metadata !7783, metadata !DIExpression()), !dbg !7796
  %call30 = call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %20) #7, !dbg !7832
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call30, metadata !7792, metadata !DIExpression()), !dbg !7833
  %21 = load i32, i32* %df_bb_index, align 4, !dbg !7834
  call void @llvm.dbg.value(metadata i32 %21, metadata !7783, metadata !DIExpression()), !dbg !7796
  %call31 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %all_blocks, i32 %21) #6, !dbg !7836
  %tobool32 = icmp eq i32 %call31, 0, !dbg !7836
  br i1 %tobool32, label %for.inc36, label %if.then, !dbg !7837

if.then:                                          ; preds = %cond.end
  %22 = load i32, i32* %df_bb_index, align 4, !dbg !7838
  call void @llvm.dbg.value(metadata i32 %22, metadata !7783, metadata !DIExpression()), !dbg !7796
  %call33 = call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %22) #7, !dbg !7839
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call33, i64 0, i32 2, !dbg !7840
  %23 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !7840
  %call34 = call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %call30) #7, !dbg !7841
  %call35 = call zeroext i8 @bitmap_ior_and_into(%struct.bitmap_head_def* %23, %struct.bitmap_head_def* %14, %struct.bitmap_head_def* %call34) #6, !dbg !7842
  br label %for.inc36, !dbg !7842

for.inc36:                                        ; preds = %cond.end, %if.then
  call void @llvm.dbg.value(metadata i32* %df_bb_index, metadata !7783, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi2, metadata !7785, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi2, i32* nonnull %df_bb_index) #7, !dbg !7831
  br label %for.cond19, !dbg !7831, !llvm.loop !7843

for.inc38:                                        ; preds = %for.cond19
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7782, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi1, metadata !7784, metadata !DIExpression(DW_OP_deref)), !dbg !7796
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi1, i32* nonnull %bb_index) #7, !dbg !7825
  br label %for.cond11, !dbg !7825, !llvm.loop !7845

for.end39:                                        ; preds = %for.cond11
  %24 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7847
  %cfg41 = getelementptr inbounds %struct.function, %struct.function* %24, i64 0, i32 1, !dbg !7847
  %25 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg41, align 8, !dbg !7847
  %x_entry_block_ptr42 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %25, i64 0, i32 0, !dbg !7847
  br label %for.cond43, !dbg !7847

for.cond43:                                       ; preds = %for.body45, %for.end39
  %bb.1.in = phi %struct.basic_block_def** [ %x_entry_block_ptr42, %for.end39 ], [ %next_bb53, %for.body45 ]
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !7849
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !7786, metadata !DIExpression()), !dbg !7796
  %tobool44 = icmp eq %struct.basic_block_def* %bb.1, null, !dbg !7847
  br i1 %tobool44, label %for.end54, label %for.body45, !dbg !7847

for.body45:                                       ; preds = %for.cond43
  %index46 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !7850
  %26 = load i32, i32* %index46, align 8, !dbg !7850
  %idxprom47 = sext i32 %26 to i64, !dbg !7850
  %arrayidx48 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %9, i64 %idxprom47, !dbg !7850
  %27 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %arrayidx48, align 8, !dbg !7850
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %27) #6, !dbg !7850
  %28 = load i32, i32* %index46, align 8, !dbg !7850
  %idxprom50 = sext i32 %28 to i64, !dbg !7850
  %arrayidx51 = getelementptr inbounds %struct.bitmap_head_def*, %struct.bitmap_head_def** %9, i64 %idxprom50, !dbg !7850
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %arrayidx51, align 8, !dbg !7850
  %next_bb53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 6, !dbg !7852
  br label %for.cond43, !dbg !7852, !llvm.loop !7853

for.end54:                                        ; preds = %for.cond43
  call void @free(i8* %call2) #6, !dbg !7855
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %3) #8, !dbg !7856
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %2) #8, !dbg !7856
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !7856
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7856
  ret void, !dbg !7856
}

; Function Attrs: nounwind uwtable
define internal void @df_md_init(%struct.bitmap_head_def* %all_blocks) #4 !dbg !7857 {
entry:
  %bb_index = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %all_blocks, metadata !7859, metadata !DIExpression()), !dbg !7866
  %0 = bitcast i32* %bb_index to i8*, !dbg !7867
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7867
  %1 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !7868
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7868
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7860, metadata !DIExpression(DW_OP_deref)), !dbg !7866
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7861, metadata !DIExpression(DW_OP_deref)), !dbg !7866
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %all_blocks, i32 0, i32* nonnull %bb_index) #7, !dbg !7869
  br label %for.cond, !dbg !7869

for.cond:                                         ; preds = %for.body, %entry
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7860, metadata !DIExpression(DW_OP_deref)), !dbg !7866
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7861, metadata !DIExpression(DW_OP_deref)), !dbg !7866
  %call = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !7870
  %tobool = icmp eq i8 %call, 0, !dbg !7869
  br i1 %tobool, label %for.end, label %for.body, !dbg !7869

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %bb_index, align 4, !dbg !7871
  call void @llvm.dbg.value(metadata i32 %2, metadata !7860, metadata !DIExpression()), !dbg !7866
  %call1 = call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %2) #7, !dbg !7872
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %call1, metadata !7862, metadata !DIExpression()), !dbg !7873
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call1, i64 0, i32 3, !dbg !7874
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7874
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call1, i64 0, i32 2, !dbg !7875
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !7875
  call void @bitmap_copy(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %4) #6, !dbg !7876
  %5 = load i32, i32* %bb_index, align 4, !dbg !7877
  call void @llvm.dbg.value(metadata i32 %5, metadata !7860, metadata !DIExpression()), !dbg !7866
  %call2 = call zeroext i8 @df_md_transfer_function(i32 %5) #7, !dbg !7878
  call void @llvm.dbg.value(metadata i32* %bb_index, metadata !7860, metadata !DIExpression(DW_OP_deref)), !dbg !7866
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !7861, metadata !DIExpression(DW_OP_deref)), !dbg !7866
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %bb_index) #7, !dbg !7870
  br label %for.cond, !dbg !7870, !llvm.loop !7879

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1) #8, !dbg !7881
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !7881
  ret void, !dbg !7881
}

; Function Attrs: nounwind uwtable
define internal void @df_md_confluence_0(%struct.basic_block_def* %bb) #4 !dbg !7882 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7884, metadata !DIExpression()), !dbg !7886
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7887
  %0 = load i32, i32* %index, align 8, !dbg !7887
  %call = tail call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %0) #7, !dbg !7888
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %call, metadata !7885, metadata !DIExpression()), !dbg !7886
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 3, !dbg !7889
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7889
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 2, !dbg !7890
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !7890
  tail call void @bitmap_copy(%struct.bitmap_head_def* %1, %struct.bitmap_head_def* %2) #6, !dbg !7891
  ret void, !dbg !7892
}

; Function Attrs: nounwind uwtable
define internal void @df_md_confluence_n(%struct.edge_def* %e) #4 !dbg !7893 {
entry:
  call void @llvm.dbg.value(metadata %struct.edge_def* %e, metadata !7895, metadata !DIExpression()), !dbg !7898
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 1, !dbg !7899
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7899
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i64 0, i32 9, !dbg !7900
  %1 = load i32, i32* %index, align 8, !dbg !7900
  %call = tail call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %1) #7, !dbg !7901
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 3, !dbg !7902
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7902
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %2, metadata !7896, metadata !DIExpression()), !dbg !7898
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 0, !dbg !7903
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7903
  %index1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i64 0, i32 9, !dbg !7904
  %4 = load i32, i32* %index1, align 8, !dbg !7904
  %call2 = tail call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %4) #7, !dbg !7905
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call2, i64 0, i32 4, !dbg !7906
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7906
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %5, metadata !7897, metadata !DIExpression()), !dbg !7898
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %e, i64 0, i32 7, !dbg !7907
  %6 = load i32, i32* %flags, align 8, !dbg !7907
  %and = and i32 %6, 16, !dbg !7909
  %tobool = icmp eq i32 %and, 0, !dbg !7909
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !7910

if.end:                                           ; preds = %entry
  %and4 = and i32 %6, 8, !dbg !7911
  %tobool5 = icmp eq i32 %and4, 0, !dbg !7911
  br i1 %tobool5, label %if.else, label %if.then6, !dbg !7913

if.then6:                                         ; preds = %if.end
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @regs_invalidated_by_call_regset, align 8, !dbg !7914
  %call7 = tail call zeroext i8 @bitmap_ior_and_compl_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %5, %struct.bitmap_head_def* %7) #6, !dbg !7915
  br label %cleanup.cont, !dbg !7915

if.else:                                          ; preds = %if.end
  %call8 = tail call zeroext i8 @bitmap_ior_into(%struct.bitmap_head_def* %2, %struct.bitmap_head_def* %5) #6, !dbg !7916
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %entry, %if.else, %if.then6
  ret void, !dbg !7917
}

; Function Attrs: nounwind uwtable
define internal zeroext i8 @df_md_transfer_function(i32 %bb_index) #4 !dbg !7918 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !7920, metadata !DIExpression()), !dbg !7927
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7928
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !7928
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7928
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !7928
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !7928
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !7928
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !7928

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !7928
  br label %cond.end, !dbg !7928

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !7928
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %bb_index) #7, !dbg !7928
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !7921, metadata !DIExpression()), !dbg !7927
  %call4 = tail call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %bb_index) #7, !dbg !7929
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %call4, metadata !7922, metadata !DIExpression()), !dbg !7927
  %in5 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call4, i64 0, i32 3, !dbg !7930
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in5, align 8, !dbg !7930
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %3, metadata !7923, metadata !DIExpression()), !dbg !7927
  %out6 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call4, i64 0, i32 4, !dbg !7931
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out6, align 8, !dbg !7931
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %4, metadata !7924, metadata !DIExpression()), !dbg !7927
  %gen7 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call4, i64 0, i32 0, !dbg !7932
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen7, align 8, !dbg !7932
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %5, metadata !7925, metadata !DIExpression()), !dbg !7927
  %kill8 = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call4, i64 0, i32 1, !dbg !7933
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill8, align 8, !dbg !7933
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !7926, metadata !DIExpression()), !dbg !7927
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !7934
  %call9 = tail call %struct.bitmap_head_def* @df_get_live_out(%struct.basic_block_def* %call) #7, !dbg !7935
  tail call void @bitmap_and(%struct.bitmap_head_def* %7, %struct.bitmap_head_def* %5, %struct.bitmap_head_def* %call9) #6, !dbg !7936
  %call10 = tail call %struct.bitmap_head_def* @df_get_live_in(%struct.basic_block_def* %call) #7, !dbg !7937
  tail call void @bitmap_and_into(%struct.bitmap_head_def* %3, %struct.bitmap_head_def* %call10) #6, !dbg !7938
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !7939
  %call11 = tail call zeroext i8 @bitmap_ior_and_compl(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %8, %struct.bitmap_head_def* %3, %struct.bitmap_head_def* %6) #6, !dbg !7940
  ret i8 %call11, !dbg !7941
}

; Function Attrs: nounwind uwtable
define internal void @df_md_free() #4 !dbg !7942 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !7944, metadata !DIExpression()), !dbg !7949
  br label %for.cond, !dbg !7950

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ], !dbg !7951
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !7944, metadata !DIExpression()), !dbg !7949
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !7952
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 7, !dbg !7952
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7952
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !7953
  %2 = load i32, i32* %block_info_size, align 8, !dbg !7953
  %cmp = icmp ult i32 %i.0, %2, !dbg !7954
  br i1 %cmp, label %for.body, label %for.end, !dbg !7955

for.body:                                         ; preds = %for.cond
  %call = tail call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %i.0) #7, !dbg !7956
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %call, metadata !7945, metadata !DIExpression()), !dbg !7957
  %tobool = icmp eq %struct.df_md_bb_info* %call, null, !dbg !7958
  br i1 %tobool, label %for.inc, label %if.then, !dbg !7960

if.then:                                          ; preds = %for.body
  %kill = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 1, !dbg !7961
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !7961
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %3) #6, !dbg !7961
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %kill, align 8, !dbg !7961
  %gen = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 0, !dbg !7963
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !7963
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %4) #6, !dbg !7963
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %gen, align 8, !dbg !7963
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 2, !dbg !7964
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !7964
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %5) #6, !dbg !7964
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %init, align 8, !dbg !7964
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 3, !dbg !7965
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7965
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %6) #6, !dbg !7965
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %in, align 8, !dbg !7965
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 4, !dbg !7966
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7966
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %7) #6, !dbg !7966
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %out, align 8, !dbg !7966
  br label %for.inc, !dbg !7967

for.inc:                                          ; preds = %for.body, %if.then
  %inc = add i32 %i.0, 1, !dbg !7968
  call void @llvm.dbg.value(metadata i32 %inc, metadata !7944, metadata !DIExpression()), !dbg !7949
  br label %for.cond, !dbg !7969, !llvm.loop !7970

for.end:                                          ; preds = %for.cond
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !7972
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %8) #6, !dbg !7972
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @df_md_scratch, align 8, !dbg !7972
  %9 = load %struct.df*, %struct.df** @df, align 8, !dbg !7973
  %arrayidx7 = getelementptr inbounds %struct.df, %struct.df* %9, i64 0, i32 1, i64 7, !dbg !7973
  %10 = load %struct.dataflow*, %struct.dataflow** %arrayidx7, align 8, !dbg !7973
  %block_pool = getelementptr inbounds %struct.dataflow, %struct.dataflow* %10, i64 0, i32 3, !dbg !7974
  %11 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** %block_pool, align 8, !dbg !7974
  tail call void @free_alloc_pool(%struct.alloc_pool_def* %11) #6, !dbg !7975
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !7976
  %arrayidx9 = getelementptr inbounds %struct.df, %struct.df* %12, i64 0, i32 1, i64 7, !dbg !7976
  %13 = load %struct.dataflow*, %struct.dataflow** %arrayidx9, align 8, !dbg !7976
  %block_info_size10 = getelementptr inbounds %struct.dataflow, %struct.dataflow* %13, i64 0, i32 2, !dbg !7977
  store i32 0, i32* %block_info_size10, align 8, !dbg !7978
  %14 = load %struct.dataflow*, %struct.dataflow** %arrayidx9, align 8, !dbg !7979
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %14, i64 0, i32 1, !dbg !7980
  %15 = bitcast i8*** %block_info to i8**, !dbg !7980
  %16 = load i8*, i8** %15, align 8, !dbg !7980
  tail call void @free(i8* %16) #6, !dbg !7981
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !7982
  %arrayidx14 = getelementptr inbounds %struct.df, %struct.df* %17, i64 0, i32 1, i64 7, !dbg !7982
  %18 = bitcast %struct.dataflow** %arrayidx14 to i8**, !dbg !7982
  %19 = load i8*, i8** %18, align 8, !dbg !7982
  tail call void @free(i8* %19) #6, !dbg !7983
  ret void, !dbg !7984
}

; Function Attrs: nounwind uwtable
define internal void @df_md_top_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !7985 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !7987, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !7988, metadata !DIExpression()), !dbg !7990
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !7991
  %0 = load i32, i32* %index, align 8, !dbg !7991
  %call = tail call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %0) #7, !dbg !7992
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %call, metadata !7989, metadata !DIExpression()), !dbg !7990
  %tobool = icmp eq %struct.df_md_bb_info* %call, null, !dbg !7993
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !7995

lor.lhs.false:                                    ; preds = %entry
  %in = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 3, !dbg !7996
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !7996
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !7997
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !7998

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0)) #6, !dbg !7999
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !8000
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2) #6, !dbg !8001
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i64 0, i64 0)) #6, !dbg !8002
  %init = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 2, !dbg !8003
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %init, align 8, !dbg !8003
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %3) #6, !dbg !8004
  %call5 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0)) #6, !dbg !8005
  %gen = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 0, !dbg !8006
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !8006
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %4) #6, !dbg !8007
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.52, i64 0, i64 0)) #6, !dbg !8008
  %kill = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 1, !dbg !8009
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !8009
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %5) #6, !dbg !8010
  br label %cleanup.cont, !dbg !8011

cleanup.cont:                                     ; preds = %lor.lhs.false, %entry, %if.end
  ret void, !dbg !8011
}

; Function Attrs: nounwind uwtable
define internal void @df_md_bottom_dump(%struct.basic_block_def* %bb, %struct._IO_FILE* %file) #4 !dbg !8012 {
entry:
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb, metadata !8014, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !8015, metadata !DIExpression()), !dbg !8017
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb, i64 0, i32 9, !dbg !8018
  %0 = load i32, i32* %index, align 8, !dbg !8018
  %call = tail call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %0) #7, !dbg !8019
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %call, metadata !8016, metadata !DIExpression()), !dbg !8017
  %tobool = icmp eq %struct.df_md_bb_info* %call, null, !dbg !8020
  br i1 %tobool, label %cleanup.cont, label %lor.lhs.false, !dbg !8022

lor.lhs.false:                                    ; preds = %entry
  %out = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %call, i64 0, i32 4, !dbg !8023
  %1 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !8023
  %tobool1 = icmp eq %struct.bitmap_head_def* %1, null, !dbg !8024
  br i1 %tobool1, label %cleanup.cont, label %if.end, !dbg !8025

if.end:                                           ; preds = %lor.lhs.false
  %call2 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.53, i64 0, i64 0)) #6, !dbg !8026
  %2 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !8027
  tail call void @df_print_regset(%struct._IO_FILE* %file, %struct.bitmap_head_def* %2) #6, !dbg !8028
  br label %cleanup.cont, !dbg !8029

cleanup.cont:                                     ; preds = %lor.lhs.false, %entry, %if.end
  ret void, !dbg !8029
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %index) unnamed_addr #0 !dbg !8030 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !8034, metadata !DIExpression()), !dbg !8035
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !8036
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 7, !dbg !8036
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !8036
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !8038
  %2 = load i32, i32* %block_info_size, align 8, !dbg !8038
  %cmp = icmp ugt i32 %2, %index, !dbg !8039
  br i1 %cmp, label %if.then, label %return, !dbg !8040

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !8041
  %3 = load i8**, i8*** %block_info, align 8, !dbg !8041
  %idxprom = zext i32 %index to i64, !dbg !8042
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !8042
  %4 = bitcast i8** %arrayidx3 to %struct.df_md_bb_info**, !dbg !8042
  %5 = load %struct.df_md_bb_info*, %struct.df_md_bb_info** %4, align 8, !dbg !8042
  br label %return, !dbg !8043

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_md_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !8044
  ret %struct.df_md_bb_info* %retval.0, !dbg !8045
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_md_set_bb_info(i32 %index, %struct.df_md_bb_info* %bb_info) unnamed_addr #4 !dbg !8046 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !8050, metadata !DIExpression()), !dbg !8052
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %bb_info, metadata !8051, metadata !DIExpression()), !dbg !8052
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !8053
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 7, !dbg !8053
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !8053
  %tobool = icmp eq %struct.dataflow* %1, null, !dbg !8053
  br i1 %tobool, label %cond.true, label %cond.end, !dbg !8053

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 4030, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8053
  %.pre = load %struct.df*, %struct.df** @df, align 8, !dbg !8054
  %arrayidx2.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre, i64 0, i32 1, i64 7, !dbg !8052
  %.pre1 = load %struct.dataflow*, %struct.dataflow** %arrayidx2.phi.trans.insert, align 8, !dbg !8054
  br label %cond.end, !dbg !8053

cond.end:                                         ; preds = %entry, %cond.true
  %2 = phi %struct.dataflow* [ %1, %entry ], [ %.pre1, %cond.true ], !dbg !8054
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i64 0, i32 2, !dbg !8054
  %3 = load i32, i32* %block_info_size, align 8, !dbg !8054
  %cmp = icmp ugt i32 %3, %index, !dbg !8054
  br i1 %cmp, label %cond.end5, label %cond.true3, !dbg !8054

cond.true3:                                       ; preds = %cond.end
  tail call void @fancy_abort(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i32 4031, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !8054
  %.pre2 = load %struct.df*, %struct.df** @df, align 8, !dbg !8055
  %arrayidx8.phi.trans.insert = getelementptr inbounds %struct.df, %struct.df* %.pre2, i64 0, i32 1, i64 7, !dbg !8052
  %.pre3 = load %struct.dataflow*, %struct.dataflow** %arrayidx8.phi.trans.insert, align 8, !dbg !8055
  br label %cond.end5, !dbg !8054

cond.end5:                                        ; preds = %cond.end, %cond.true3
  %4 = phi %struct.dataflow* [ %2, %cond.end ], [ %.pre3, %cond.true3 ], !dbg !8055
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %4, i64 0, i32 1, !dbg !8056
  %5 = load i8**, i8*** %block_info, align 8, !dbg !8056
  %idxprom = zext i32 %index to i64, !dbg !8055
  %arrayidx9 = getelementptr inbounds i8*, i8** %5, i64 %idxprom, !dbg !8055
  %6 = bitcast i8** %arrayidx9 to %struct.df_md_bb_info**, !dbg !8057
  store %struct.df_md_bb_info* %bb_info, %struct.df_md_bb_info** %6, align 8, !dbg !8057
  ret void, !dbg !8058
}

; Function Attrs: nounwind uwtable
define internal fastcc void @df_md_bb_local_compute(i32 %bb_index) unnamed_addr #4 !dbg !8059 {
entry:
  call void @llvm.dbg.value(metadata i32 %bb_index, metadata !8061, metadata !DIExpression()), !dbg !8069
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8070
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !8070
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !8070
  %x_basic_block_info = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 2, !dbg !8070
  %2 = load %struct.VEC_basic_block_gc*, %struct.VEC_basic_block_gc** %x_basic_block_info, align 8, !dbg !8070
  %tobool = icmp eq %struct.VEC_basic_block_gc* %2, null, !dbg !8070
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !8070

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_basic_block_gc, %struct.VEC_basic_block_gc* %2, i64 0, i32 0, !dbg !8070
  br label %cond.end, !dbg !8070

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_basic_block_base* [ %base, %cond.true ], [ null, %entry ], !dbg !8070
  %call = tail call fastcc %struct.basic_block_def* @VEC_basic_block_base_index(%struct.VEC_basic_block_base* %cond, i32 %bb_index) #7, !dbg !8070
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %call, metadata !8062, metadata !DIExpression()), !dbg !8069
  %call4 = tail call fastcc %struct.df_md_bb_info* @df_md_get_bb_info(i32 %bb_index) #7, !dbg !8071
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %call4, metadata !8063, metadata !DIExpression()), !dbg !8069
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !8072
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 27, !dbg !8074
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !8074
  %4 = and i8 %bf.load, 2, !dbg !8075
  %tobool5 = icmp eq i8 %4, 0, !dbg !8075
  br i1 %tobool5, label %if.then, label %if.end, !dbg !8076

if.then:                                          ; preds = %cond.end
  %call6 = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !8077
  tail call fastcc void @df_md_bb_local_compute_process_def(%struct.df_md_bb_info* %call4, %union.df_ref_d** %call6, i32 2) #7, !dbg !8078
  br label %if.end, !dbg !8078

if.end:                                           ; preds = %cond.end, %if.then
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %call, i64 0, i32 7, !dbg !8079
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !8079
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8079
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 0, !dbg !8079
  br label %for.cond, !dbg !8079

for.cond:                                         ; preds = %cleanup, %if.end
  %insn.0.in = phi %struct.rtx_def** [ %head_, %if.end ], [ %rt_rtx32, %cleanup ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !8080
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !8064, metadata !DIExpression()), !dbg !8069
  %tobool7 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !8081
  br i1 %tobool7, label %for.end, label %land.rhs, !dbg !8081

land.rhs:                                         ; preds = %for.cond
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !8081
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 1, !dbg !8081
  %7 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !8081
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8081
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !8081
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8081
  %cmp = icmp eq %struct.rtx_def* %insn.0, %9, !dbg !8081
  br i1 %cmp, label %for.end, label %for.body, !dbg !8079

for.body:                                         ; preds = %land.rhs
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !8082
  %rt_int = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !8082
  %10 = load i32, i32* %rt_int, align 8, !dbg !8082
  call void @llvm.dbg.value(metadata i32 %10, metadata !8065, metadata !DIExpression()), !dbg !8083
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !8084
  %bf.load13 = load i32, i32* %11, align 8, !dbg !8084
  %bf.clear = and i32 %bf.load13, 65535, !dbg !8084
  %cmp14 = icmp eq i32 %bf.clear, 8, !dbg !8084
  br i1 %cmp14, label %if.end27, label %lor.lhs.false, !dbg !8084

lor.lhs.false:                                    ; preds = %for.body
  %cmp17 = icmp eq i32 %bf.clear, 7, !dbg !8084
  br i1 %cmp17, label %if.end27, label %lor.lhs.false18, !dbg !8084

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %cmp21 = icmp eq i32 %bf.clear, 9, !dbg !8084
  br i1 %cmp21, label %if.end27, label %lor.lhs.false22, !dbg !8084

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %cmp25 = icmp eq i32 %bf.clear, 10, !dbg !8084
  br i1 %cmp25, label %if.end27, label %cleanup, !dbg !8086

if.end27:                                         ; preds = %lor.lhs.false22, %lor.lhs.false18, %lor.lhs.false, %for.body
  %12 = load %struct.df*, %struct.df** @df, align 8, !dbg !8087
  %insns = getelementptr inbounds %struct.df, %struct.df* %12, i64 0, i32 10, !dbg !8087
  %13 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !8087
  %idxprom = zext i32 %10 to i64, !dbg !8087
  %arrayidx28 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %13, i64 %idxprom, !dbg !8087
  %14 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx28, align 8, !dbg !8087
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %14, i64 0, i32 1, !dbg !8087
  %15 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !8087
  tail call fastcc void @df_md_bb_local_compute_process_def(%struct.df_md_bb_info* %call4, %union.df_ref_d** %15, i32 0) #7, !dbg !8088
  br label %cleanup, !dbg !8089

cleanup:                                          ; preds = %lor.lhs.false22, %if.end27
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !8081
  %rt_rtx32 = bitcast %union.rtunion_def* %16 to %struct.rtx_def**, !dbg !8081
  br label %for.cond, !dbg !8081, !llvm.loop !8090

for.end:                                          ; preds = %land.rhs, %for.cond
  %17 = load %struct.df*, %struct.df** @df, align 8, !dbg !8092
  %changeable_flags33 = getelementptr inbounds %struct.df, %struct.df* %17, i64 0, i32 27, !dbg !8094
  %bf.load34 = load i8, i8* %changeable_flags33, align 4, !dbg !8094
  %18 = and i8 %bf.load34, 2, !dbg !8095
  %tobool37 = icmp eq i8 %18, 0, !dbg !8095
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !8096

if.then38:                                        ; preds = %for.end
  %call39 = tail call fastcc %union.df_ref_d** @df_get_artificial_defs(i32 %bb_index) #7, !dbg !8097
  tail call fastcc void @df_md_bb_local_compute_process_def(%struct.df_md_bb_info* %call4, %union.df_ref_d** %call39, i32 0) #7, !dbg !8098
  br label %if.end40, !dbg !8098

if.end40:                                         ; preds = %for.end, %if.then38
  ret void, !dbg !8099
}

declare dso_local void @compute_dominance_frontiers(%struct.bitmap_head_def**) local_unnamed_addr #1

declare dso_local zeroext i8 @bitmap_ior_and_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #1

; Function Attrs: nounwind uwtable
define internal fastcc void @df_md_bb_local_compute_process_def(%struct.df_md_bb_info* %bb_info, %union.df_ref_d** %def_rec, i32 %top_flag) unnamed_addr #4 !dbg !8100 {
entry:
  call void @llvm.dbg.value(metadata %struct.df_md_bb_info* %bb_info, metadata !8104, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec, metadata !8105, metadata !DIExpression()), !dbg !8110
  call void @llvm.dbg.value(metadata i32 %top_flag, metadata !8106, metadata !DIExpression()), !dbg !8110
  %0 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !8111
  tail call void @bitmap_clear(%struct.bitmap_head_def* %0) #6, !dbg !8112
  %gen = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %bb_info, i64 0, i32 0, !dbg !8113
  %kill = getelementptr inbounds %struct.df_md_bb_info, %struct.df_md_bb_info* %bb_info, i64 0, i32 1, !dbg !8113
  br label %while.cond, !dbg !8120

while.cond:                                       ; preds = %if.end22, %entry
  %def_rec.addr.0 = phi %union.df_ref_d** [ %def_rec, %entry ], [ %incdec.ptr, %if.end22 ]
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.addr.0, metadata !8105, metadata !DIExpression()), !dbg !8110
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.addr.0, i64 1, !dbg !8121
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !8105, metadata !DIExpression()), !dbg !8110
  %1 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.addr.0, align 8, !dbg !8122
  call void @llvm.dbg.value(metadata %union.df_ref_d* %1, metadata !8107, metadata !DIExpression()), !dbg !8110
  %cmp = icmp eq %union.df_ref_d* %1, null, !dbg !8123
  br i1 %cmp, label %while.end, label %while.body, !dbg !8120

while.body:                                       ; preds = %while.cond
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !8124
  %2 = load i32, i32* %regno, align 8, !dbg !8124
  call void @llvm.dbg.value(metadata i32 %2, metadata !8108, metadata !DIExpression()), !dbg !8125
  %3 = load %struct.df*, %struct.df** @df, align 8, !dbg !8126
  %changeable_flags = getelementptr inbounds %struct.df, %struct.df* %3, i64 0, i32 27, !dbg !8127
  %bf.load = load i8, i8* %changeable_flags, align 4, !dbg !8127
  %4 = and i8 %bf.load, 2, !dbg !8128
  %tobool = icmp eq i8 %4, 0, !dbg !8128
  %cmp1 = icmp ugt i32 %2, 52, !dbg !8129
  %or.cond = or i1 %tobool, %cmp1, !dbg !8130
  br i1 %or.cond, label %land.lhs.true, label %if.end22, !dbg !8130

land.lhs.true:                                    ; preds = %while.body
  %5 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %1, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !8131
  %bf.load3 = load i32, i32* %5, align 8, !dbg !8131
  %6 = lshr i32 %bf.load3, 16, !dbg !8131
  %and4 = and i32 %6, 2, !dbg !8132
  %cmp5 = icmp eq i32 %and4, %top_flag, !dbg !8133
  br i1 %cmp5, label %if.then, label %if.end22, !dbg !8134

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !8135
  %call = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %7, i32 %2) #6, !dbg !8136
  %tobool6 = icmp eq i32 %call, 0, !dbg !8136
  br i1 %tobool6, label %if.then7, label %if.end22, !dbg !8137

if.then7:                                         ; preds = %if.then
  %bf.load9 = load i32, i32* %5, align 8, !dbg !8138
  %and11 = and i32 %bf.load9, 5308416, !dbg !8139
  %tobool12 = icmp eq i32 %and11, 0, !dbg !8139
  br i1 %tobool12, label %if.else, label %if.then13, !dbg !8140

if.then13:                                        ; preds = %if.then7
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !8141
  %call14 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %8, i32 %2) #6, !dbg !8142
  %9 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !8143
  %call15 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %9, i32 %2) #6, !dbg !8144
  br label %if.end22, !dbg !8145

if.else:                                          ; preds = %if.then7
  %10 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @seen_in_insn, align 8, !dbg !8146
  %call16 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %10, i32 %2) #6, !dbg !8148
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %kill, align 8, !dbg !8149
  %call18 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %11, i32 %2) #6, !dbg !8150
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %gen, align 8, !dbg !8151
  %call20 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %12, i32 %2) #6, !dbg !8152
  br label %if.end22

if.end22:                                         ; preds = %if.then, %if.else, %if.then13, %while.body, %land.lhs.true
  br label %while.cond, !dbg !8120, !llvm.loop !8153

while.end:                                        ; preds = %while.cond
  ret void, !dbg !8155
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #5

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readnone }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2232, !2233, !2234}
!llvm.ident = !{!2235}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "problem_RD", scope: !2, file: !3, line: 683, type: !2064, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !747, globals: !2057, nameTableKind: None)
!3 = !DIFile(filename: "df-problems.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !147, !152, !157, !176, !183, !190, !384, !390, !566, !709, !743}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !142, line: 363, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146}
!144 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !142, line: 355, baseType: !7, size: 32, elements: !148)
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !153, line: 474, baseType: !7, size: 32, elements: !154)
!153 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!154 = !{!155, !156}
!155 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !158, line: 280, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!159 = !{!160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175}
!160 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!169 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !158, line: 1817, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !158, line: 1805, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189}
!185 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !158, line: 39, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_flow_dir", file: !385, line: 60, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!386 = !{!387, !388, !389}
!387 = !DIEnumerator(name: "DF_NONE", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "DF_FORWARD", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "DF_BACKWARD", value: 2, isUnsigned: true)
!390 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !391, line: 74, baseType: !7, size: 32, elements: !392)
!391 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!392 = !{!393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565}
!393 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!397 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!398 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!399 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!400 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!401 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!402 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!403 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!404 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!405 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!406 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!407 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!408 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!409 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!410 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!411 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!412 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!413 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!414 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!415 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!416 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!417 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!418 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!419 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!420 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!421 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!422 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!423 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!424 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!425 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!426 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!427 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!428 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!429 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!430 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!431 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!432 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!433 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!434 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!435 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!436 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!437 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!565 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!566 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !567, line: 45, baseType: !7, size: 32, elements: !568)
!567 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!568 = !{!569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708}
!569 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!570 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!571 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!572 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!573 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!574 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!575 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!576 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!577 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!578 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!579 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!580 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!581 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!582 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!583 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!584 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!585 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!586 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!587 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!588 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!589 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!590 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!591 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!592 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!593 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!594 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!595 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!596 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!597 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!598 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!599 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!600 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!601 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!602 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!603 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!604 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!605 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!606 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!607 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!608 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!609 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!610 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!611 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!612 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!613 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!614 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!615 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!616 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!617 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!618 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!619 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!620 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!621 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!622 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!623 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!624 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!625 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!626 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!627 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!628 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!629 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!630 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!631 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!632 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!633 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!634 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!635 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!636 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!637 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!638 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!639 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!640 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!641 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!642 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!643 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!644 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!645 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!646 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!647 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!648 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!649 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!650 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!651 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!652 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!653 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!654 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!655 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!656 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!657 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!658 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!659 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!660 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!661 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!662 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!663 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!664 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!665 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!666 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!667 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!668 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!669 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!670 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!671 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!672 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!673 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!674 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!675 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!676 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!677 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!678 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!679 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!680 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!681 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!682 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!683 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!684 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!685 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!686 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!687 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!688 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!689 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!690 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!691 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!692 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!693 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!694 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!695 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!696 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!697 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!698 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!699 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!700 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!701 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!702 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!703 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!704 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!705 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!706 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!707 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!708 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!709 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !567, line: 836, baseType: !7, size: 32, elements: !710)
!710 = !{!711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742}
!711 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!712 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!713 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!714 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!715 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!716 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!717 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!718 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!719 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!720 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!721 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!722 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!723 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!724 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!725 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!726 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!727 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!728 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!729 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!730 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!731 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!732 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!733 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!734 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!735 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!736 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!737 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!738 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!739 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!740 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!741 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!742 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_chain_flags", file: !385, line: 456, baseType: !7, size: 32, elements: !744)
!744 = !{!745, !746}
!745 = !DIEnumerator(name: "DF_DU_CHAIN", value: 1, isUnsigned: true)
!746 = !DIEnumerator(name: "DF_UD_CHAIN", value: 2, isUnsigned: true)
!747 = !{!748, !749, !750, !751, !754, !755, !757, !758, !821, !1987, !566, !709, !5, !1997, !2004, !2011, !2017, !7, !2025, !2029, !2031, !2036, !743, !1994, !2041, !2042, !776, !2049}
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !749, size: 64)
!749 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!750 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !753)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !759, line: 47, baseType: !760)
!759 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !762, line: 75, size: 256, elements: !763)
!762 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!763 = !{!764, !779, !780, !781}
!764 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !761, file: !762, line: 76, baseType: !765, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !766, size: 64)
!766 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !762, line: 68, baseType: !767)
!767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !762, line: 63, size: 320, elements: !768)
!768 = !{!769, !771, !772, !773}
!769 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !767, file: !762, line: 64, baseType: !770, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !767, file: !762, line: 65, baseType: !770, size: 64, offset: 64)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !767, file: !762, line: 66, baseType: !7, size: 32, offset: 128)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !767, file: !762, line: 67, baseType: !774, size: 128, offset: 192)
!774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !775, size: 128, elements: !777)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !762, line: 29, baseType: !776)
!776 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!777 = !{!778}
!778 = !DISubrange(count: 2)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !761, file: !762, line: 77, baseType: !765, size: 64, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !761, file: !762, line: 78, baseType: !7, size: 32, offset: 128)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !761, file: !762, line: 79, baseType: !782, size: 64, offset: 192)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !762, line: 49, baseType: !784)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !762, line: 45, size: 832, elements: !785)
!785 = !{!786, !787, !788}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !784, file: !762, line: 46, baseType: !770, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !784, file: !762, line: 47, baseType: !760, size: 64, offset: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !784, file: !762, line: 48, baseType: !789, size: 704, offset: 128)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !790, line: 164, size: 704, elements: !791)
!790 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!791 = !{!792, !794, !804, !805, !806, !807, !808, !809, !813, !817, !818, !819, !820}
!792 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !789, file: !790, line: 166, baseType: !793, size: 64)
!793 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !789, file: !790, line: 167, baseType: !795, size: 64, offset: 64)
!795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !796, size: 64)
!796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !790, line: 157, size: 192, elements: !797)
!797 = !{!798, !799, !800}
!798 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !796, file: !790, line: 159, baseType: !752, size: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !796, file: !790, line: 160, baseType: !795, size: 64, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !796, file: !790, line: 161, baseType: !801, size: 32, offset: 128)
!801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 32, elements: !802)
!802 = !{!803}
!803 = !DISubrange(count: 4)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !789, file: !790, line: 168, baseType: !752, size: 64, offset: 128)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !789, file: !790, line: 169, baseType: !752, size: 64, offset: 192)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !789, file: !790, line: 170, baseType: !752, size: 64, offset: 256)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !789, file: !790, line: 171, baseType: !793, size: 64, offset: 320)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !789, file: !790, line: 172, baseType: !750, size: 32, offset: 384)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !789, file: !790, line: 176, baseType: !810, size: 64, offset: 448)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DISubroutineType(types: !812)
!812 = !{!795, !754, !793}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !789, file: !790, line: 177, baseType: !814, size: 64, offset: 512)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DISubroutineType(types: !816)
!816 = !{null, !754, !795}
!817 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !789, file: !790, line: 178, baseType: !754, size: 64, offset: 576)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !789, file: !790, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !789, file: !790, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !789, file: !790, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !385, line: 449, size: 128, elements: !823)
!823 = !{!824, !1986}
!824 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !822, file: !385, line: 451, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !385, line: 429, baseType: !826)
!826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !827, size: 64)
!827 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !385, line: 422, size: 704, elements: !828)
!828 = !{!829, !1968, !1974, !1979}
!829 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !827, file: !385, line: 424, baseType: !830, size: 512)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !385, line: 356, size: 512, elements: !831)
!831 = !{!832, !833, !834, !835, !1941, !1942, !1963, !1964, !1965, !1966, !1967}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !830, file: !385, line: 360, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !830, file: !385, line: 362, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !830, file: !385, line: 364, baseType: !750, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !830, file: !385, line: 365, baseType: !836, size: 64, offset: 64)
!836 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !759, line: 50, baseType: !837)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !567, line: 240, size: 384, elements: !839)
!839 = !{!840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !838, file: !567, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !838, file: !567, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !838, file: !567, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !838, file: !567, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !838, file: !567, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !838, file: !567, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !838, file: !567, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !838, file: !567, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !838, file: !567, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !838, file: !567, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !838, file: !567, line: 321, baseType: !851, size: 320, offset: 64)
!851 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !567, line: 315, size: 320, elements: !852)
!852 = !{!853, !1876, !1878, !1939, !1940}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !851, file: !567, line: 316, baseType: !854, size: 64)
!854 = !DICompositeType(tag: DW_TAG_array_type, baseType: !855, size: 64, elements: !870)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !567, line: 183, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !567, line: 166, size: 64, elements: !857)
!857 = !{!858, !859, !860, !861, !862, !872, !873, !885, !888, !889, !1854, !1855, !1866, !1873}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !856, file: !567, line: 168, baseType: !750, size: 32)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !856, file: !567, line: 169, baseType: !7, size: 32)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !856, file: !567, line: 170, baseType: !755, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !856, file: !567, line: 171, baseType: !836, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !856, file: !567, line: 172, baseType: !863, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !759, line: 53, baseType: !864)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !567, line: 359, size: 128, elements: !866)
!866 = !{!867, !868}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !865, file: !567, line: 360, baseType: !750, size: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !865, file: !567, line: 361, baseType: !869, size: 64, offset: 64)
!869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !836, size: 64, elements: !870)
!870 = !{!871}
!871 = !DISubrange(count: 1)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !856, file: !567, line: 173, baseType: !5, size: 32)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !856, file: !567, line: 174, baseType: !874, size: 32)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !567, line: 133, baseType: !875)
!875 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !567, line: 115, size: 32, elements: !876)
!876 = !{!877, !878, !879, !880, !881, !882, !883, !884}
!877 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !875, file: !567, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !875, file: !567, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !875, file: !567, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !875, file: !567, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !875, file: !567, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !875, file: !567, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !875, file: !567, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !875, file: !567, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !856, file: !567, line: 175, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!887 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !567, line: 175, flags: DIFlagFwdDecl)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !856, file: !567, line: 176, baseType: !760, size: 64)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !856, file: !567, line: 177, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !759, line: 56, baseType: !891)
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !158, line: 3371, size: 1792, elements: !893)
!893 = !{!894, !927, !933, !944, !963, !974, !979, !986, !992, !1005, !1017, !1055, !1060, !1088, !1096, !1097, !1102, !1111, !1117, !1122, !1126, !1130, !1490, !1539, !1545, !1551, !1558, !1584, !1598, !1615, !1627, !1649, !1664, !1836}
!894 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !892, file: !158, line: 3372, baseType: !895, size: 64)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !158, line: 360, size: 64, elements: !896)
!896 = !{!897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !895, file: !158, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !895, file: !158, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !895, file: !158, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !895, file: !158, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !895, file: !158, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !895, file: !158, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !895, file: !158, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !895, file: !158, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !895, file: !158, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !895, file: !158, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !895, file: !158, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !895, file: !158, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !895, file: !158, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !895, file: !158, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !895, file: !158, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !895, file: !158, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !895, file: !158, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !895, file: !158, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !895, file: !158, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !895, file: !158, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !895, file: !158, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !895, file: !158, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !895, file: !158, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !895, file: !158, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !895, file: !158, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !895, file: !158, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !895, file: !158, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !895, file: !158, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !895, file: !158, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !895, file: !158, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !892, file: !158, line: 3373, baseType: !928, size: 192)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !158, line: 402, size: 192, elements: !929)
!929 = !{!930, !931, !932}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !928, file: !158, line: 403, baseType: !895, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !928, file: !158, line: 404, baseType: !890, size: 64, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !928, file: !158, line: 405, baseType: !890, size: 64, offset: 128)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !892, file: !158, line: 3374, baseType: !934, size: 320)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !158, line: 1384, size: 320, elements: !935)
!935 = !{!936, !937}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !934, file: !158, line: 1385, baseType: !928, size: 192)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !934, file: !158, line: 1386, baseType: !938, size: 128, offset: 192)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !939, line: 58, baseType: !940)
!939 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !939, line: 54, size: 128, elements: !941)
!941 = !{!942, !943}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !940, file: !939, line: 56, baseType: !776, size: 64)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !940, file: !939, line: 57, baseType: !793, size: 64, offset: 64)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !892, file: !158, line: 3375, baseType: !945, size: 256)
!945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !158, line: 1397, size: 256, elements: !946)
!946 = !{!947, !948}
!947 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !945, file: !158, line: 1398, baseType: !928, size: 192)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !945, file: !158, line: 1399, baseType: !949, size: 64, offset: 192)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !951, line: 52, size: 256, elements: !952)
!951 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!952 = !{!953, !954, !955, !956, !957, !958, !959}
!953 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !950, file: !951, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !950, file: !951, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !950, file: !951, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !950, file: !951, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !950, file: !951, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !950, file: !951, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !950, file: !951, line: 62, baseType: !960, size: 192, offset: 64)
!960 = !DICompositeType(tag: DW_TAG_array_type, baseType: !776, size: 192, elements: !961)
!961 = !{!962}
!962 = !DISubrange(count: 3)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !892, file: !158, line: 3376, baseType: !964, size: 256)
!964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !158, line: 1408, size: 256, elements: !965)
!965 = !{!966, !967}
!966 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !964, file: !158, line: 1409, baseType: !928, size: 192)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !964, file: !158, line: 1410, baseType: !968, size: 64, offset: 192)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !969, size: 64)
!969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !970, line: 27, size: 192, elements: !971)
!970 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!971 = !{!972, !973}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !969, file: !970, line: 29, baseType: !938, size: 128)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !969, file: !970, line: 30, baseType: !5, size: 32, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !892, file: !158, line: 3377, baseType: !975, size: 256)
!975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !158, line: 1437, size: 256, elements: !976)
!976 = !{!977, !978}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !975, file: !158, line: 1438, baseType: !928, size: 192)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !975, file: !158, line: 1439, baseType: !890, size: 64, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !892, file: !158, line: 3378, baseType: !980, size: 256)
!980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !158, line: 1418, size: 256, elements: !981)
!981 = !{!982, !983, !984}
!982 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !980, file: !158, line: 1419, baseType: !928, size: 192)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !980, file: !158, line: 1420, baseType: !750, size: 32, offset: 192)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !980, file: !158, line: 1421, baseType: !985, size: 8, offset: 224)
!985 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 8, elements: !870)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !892, file: !158, line: 3379, baseType: !987, size: 320)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !158, line: 1428, size: 320, elements: !988)
!988 = !{!989, !990, !991}
!989 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !987, file: !158, line: 1429, baseType: !928, size: 192)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !987, file: !158, line: 1430, baseType: !890, size: 64, offset: 192)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !987, file: !158, line: 1431, baseType: !890, size: 64, offset: 256)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !892, file: !158, line: 3380, baseType: !993, size: 320)
!993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !158, line: 1460, size: 320, elements: !994)
!994 = !{!995, !996}
!995 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !993, file: !158, line: 1461, baseType: !928, size: 192)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !993, file: !158, line: 1462, baseType: !997, size: 128, offset: 192)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !998, line: 31, size: 128, elements: !999)
!998 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!999 = !{!1000, !1003, !1004}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !997, file: !998, line: 32, baseType: !1001, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !997, file: !998, line: 33, baseType: !7, size: 32, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !997, file: !998, line: 34, baseType: !7, size: 32, offset: 96)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !892, file: !158, line: 3381, baseType: !1006, size: 384)
!1006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !158, line: 2507, size: 384, elements: !1007)
!1007 = !{!1008, !1009, !1014, !1015, !1016}
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1006, file: !158, line: 2508, baseType: !928, size: 192)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1006, file: !158, line: 2509, baseType: !1010, size: 32, offset: 192)
!1010 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1011, line: 58, baseType: !1012)
!1011 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1013, line: 44, baseType: !7)
!1013 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1006, file: !158, line: 2510, baseType: !7, size: 32, offset: 224)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1006, file: !158, line: 2511, baseType: !890, size: 64, offset: 256)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1006, file: !158, line: 2512, baseType: !890, size: 64, offset: 320)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !892, file: !158, line: 3382, baseType: !1018, size: 896)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !158, line: 2652, size: 896, elements: !1019)
!1019 = !{!1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1018, file: !158, line: 2653, baseType: !1006, size: 384)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1018, file: !158, line: 2654, baseType: !890, size: 64, offset: 384)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1018, file: !158, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1018, file: !158, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1018, file: !158, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1018, file: !158, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1018, file: !158, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1018, file: !158, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1018, file: !158, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1018, file: !158, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1018, file: !158, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1018, file: !158, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1018, file: !158, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1018, file: !158, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1018, file: !158, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1018, file: !158, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1018, file: !158, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1018, file: !158, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1018, file: !158, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1018, file: !158, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1018, file: !158, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1018, file: !158, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1018, file: !158, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1018, file: !158, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1018, file: !158, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1018, file: !158, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1018, file: !158, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1018, file: !158, line: 2703, baseType: !7, size: 32, offset: 512)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1018, file: !158, line: 2705, baseType: !890, size: 64, offset: 576)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1018, file: !158, line: 2706, baseType: !890, size: 64, offset: 640)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1018, file: !158, line: 2707, baseType: !890, size: 64, offset: 704)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1018, file: !158, line: 2708, baseType: !890, size: 64, offset: 768)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1018, file: !158, line: 2711, baseType: !1053, size: 64, offset: 832)
!1053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1054, size: 64)
!1054 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !158, line: 2711, flags: DIFlagFwdDecl)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !892, file: !158, line: 3383, baseType: !1056, size: 960)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !158, line: 2756, size: 960, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1056, file: !158, line: 2757, baseType: !1018, size: 896)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1056, file: !158, line: 2758, baseType: !836, size: 64, offset: 896)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !892, file: !158, line: 3384, baseType: !1061, size: 1472)
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !158, line: 3114, size: 1472, elements: !1062)
!1062 = !{!1063, !1084, !1085, !1086, !1087}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1061, file: !158, line: 3115, baseType: !1064, size: 1216)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !158, line: 2984, size: 1216, elements: !1065)
!1065 = !{!1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1064, file: !158, line: 2985, baseType: !1056, size: 960)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1064, file: !158, line: 2986, baseType: !890, size: 64, offset: 960)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1064, file: !158, line: 2987, baseType: !890, size: 64, offset: 1024)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1064, file: !158, line: 2988, baseType: !890, size: 64, offset: 1088)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1064, file: !158, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1064, file: !158, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1064, file: !158, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1064, file: !158, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1064, file: !158, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1064, file: !158, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1064, file: !158, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1064, file: !158, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1064, file: !158, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1064, file: !158, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1064, file: !158, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1064, file: !158, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1064, file: !158, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1064, file: !158, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1061, file: !158, line: 3117, baseType: !890, size: 64, offset: 1216)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1061, file: !158, line: 3119, baseType: !890, size: 64, offset: 1280)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1061, file: !158, line: 3121, baseType: !890, size: 64, offset: 1344)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1061, file: !158, line: 3123, baseType: !890, size: 64, offset: 1408)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !892, file: !158, line: 3385, baseType: !1089, size: 1088)
!1089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !158, line: 2874, size: 1088, elements: !1090)
!1090 = !{!1091, !1092, !1093}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1089, file: !158, line: 2875, baseType: !1056, size: 960)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1089, file: !158, line: 2876, baseType: !836, size: 64, offset: 960)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1089, file: !158, line: 2877, baseType: !1094, size: 64, offset: 1024)
!1094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1095, size: 64)
!1095 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !158, line: 2856, flags: DIFlagFwdDecl)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !892, file: !158, line: 3386, baseType: !1064, size: 1216)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !892, file: !158, line: 3387, baseType: !1098, size: 1280)
!1098 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !158, line: 3093, size: 1280, elements: !1099)
!1099 = !{!1100, !1101}
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1098, file: !158, line: 3094, baseType: !1064, size: 1216)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1098, file: !158, line: 3095, baseType: !1094, size: 64, offset: 1216)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !892, file: !158, line: 3388, baseType: !1103, size: 1216)
!1103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !158, line: 2824, size: 1216, elements: !1104)
!1104 = !{!1105, !1106, !1107, !1108, !1109, !1110}
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1103, file: !158, line: 2825, baseType: !1018, size: 896)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1103, file: !158, line: 2827, baseType: !890, size: 64, offset: 896)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1103, file: !158, line: 2828, baseType: !890, size: 64, offset: 960)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1103, file: !158, line: 2829, baseType: !890, size: 64, offset: 1024)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1103, file: !158, line: 2830, baseType: !890, size: 64, offset: 1088)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1103, file: !158, line: 2831, baseType: !890, size: 64, offset: 1152)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !892, file: !158, line: 3389, baseType: !1112, size: 1024)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !158, line: 2850, size: 1024, elements: !1113)
!1113 = !{!1114, !1115, !1116}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1112, file: !158, line: 2851, baseType: !1056, size: 960)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1112, file: !158, line: 2852, baseType: !750, size: 32, offset: 960)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1112, file: !158, line: 2853, baseType: !750, size: 32, offset: 992)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !892, file: !158, line: 3390, baseType: !1118, size: 1024)
!1118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !158, line: 2857, size: 1024, elements: !1119)
!1119 = !{!1120, !1121}
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1118, file: !158, line: 2858, baseType: !1056, size: 960)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1118, file: !158, line: 2859, baseType: !1094, size: 64, offset: 960)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !892, file: !158, line: 3391, baseType: !1123, size: 960)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !158, line: 2862, size: 960, elements: !1124)
!1124 = !{!1125}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1123, file: !158, line: 2863, baseType: !1056, size: 960)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !892, file: !158, line: 3392, baseType: !1127, size: 1472)
!1127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !158, line: 3304, size: 1472, elements: !1128)
!1128 = !{!1129}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1127, file: !158, line: 3305, baseType: !1061, size: 1472)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !892, file: !158, line: 3393, baseType: !1131, size: 1792)
!1131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !158, line: 3248, size: 1792, elements: !1132)
!1132 = !{!1133, !1134, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1131, file: !158, line: 3249, baseType: !1061, size: 1472)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1131, file: !158, line: 3251, baseType: !1135, size: 64, offset: 1472)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1136, size: 64)
!1136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1137, line: 463, size: 1152, elements: !1138)
!1137 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1138 = !{!1139, !1302, !1406, !1407, !1410, !1413, !1414, !1415, !1416, !1417, !1418, !1442, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1136, file: !1137, line: 464, baseType: !1140, size: 64)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1142)
!1142 = !{!1143, !1192, !1205, !1219, !1270, !1283}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1141, file: !135, line: 197, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1145)
!1145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1151, !1152, !1153, !1180, !1189, !1190, !1191}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1146, file: !135, line: 119, baseType: !1145, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1146, file: !135, line: 122, baseType: !1145, size: 64, offset: 64)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1146, file: !135, line: 123, baseType: !1145, size: 64, offset: 128)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1146, file: !135, line: 126, baseType: !750, size: 32, offset: 192)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1146, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1146, file: !135, line: 165, baseType: !1154, size: 192, offset: 256)
!1154 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1155)
!1155 = !{!1156, !1169, !1175}
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1154, file: !135, line: 137, baseType: !1157, size: 128)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1158)
!1158 = !{!1159, !1168}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1157, file: !135, line: 135, baseType: !1160, size: 64)
!1160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1161, size: 64)
!1161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1162)
!1162 = !{!1163, !1164, !1165, !1166, !1167}
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1161, file: !135, line: 96, baseType: !1160, size: 64)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1161, file: !135, line: 97, baseType: !1160, size: 64, offset: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1161, file: !135, line: 101, baseType: !890, size: 64, offset: 128)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1161, file: !135, line: 106, baseType: !890, size: 64, offset: 192)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1161, file: !135, line: 111, baseType: !890, size: 64, offset: 256)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1157, file: !135, line: 136, baseType: !1160, size: 64, offset: 64)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1154, file: !135, line: 151, baseType: !1170, size: 192)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1171)
!1171 = !{!1172, !1173, !1174}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1170, file: !135, line: 141, baseType: !890, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1170, file: !135, line: 145, baseType: !890, size: 64, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1170, file: !135, line: 150, baseType: !750, size: 32, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1154, file: !135, line: 164, baseType: !1176, size: 128)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1177)
!1177 = !{!1178, !1179}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1176, file: !135, line: 161, baseType: !890, size: 64)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1176, file: !135, line: 163, baseType: !1010, size: 32, offset: 64)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1146, file: !135, line: 168, baseType: !1181, size: 64, offset: 448)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1188}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1182, file: !135, line: 70, baseType: !1181, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1182, file: !135, line: 73, baseType: !1145, size: 64, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1182, file: !135, line: 78, baseType: !890, size: 64, offset: 128)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1182, file: !135, line: 85, baseType: !836, size: 64, offset: 192)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1182, file: !135, line: 88, baseType: !750, size: 32, offset: 256)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1146, file: !135, line: 173, baseType: !836, size: 64, offset: 512)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1146, file: !135, line: 173, baseType: !836, size: 64, offset: 576)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1146, file: !135, line: 177, baseType: !749, size: 8, offset: 640)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1141, file: !135, line: 200, baseType: !1193, size: 64, offset: 64)
!1193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1194, size: 64)
!1194 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1195)
!1195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1196)
!1196 = !{!1197}
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1195, file: !135, line: 185, baseType: !1198, size: 128)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1199)
!1199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1200)
!1200 = !{!1201, !1202, !1203}
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1199, file: !135, line: 184, baseType: !7, size: 32)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1199, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1199, file: !135, line: 184, baseType: !1204, size: 64, offset: 64)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1144, size: 64, elements: !870)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1141, file: !135, line: 203, baseType: !1206, size: 64, offset: 128)
!1206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1209)
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1208, file: !135, line: 189, baseType: !1211, size: 128)
!1211 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1212)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1213)
!1213 = !{!1214, !1215, !1216}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1212, file: !135, line: 188, baseType: !7, size: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1212, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1212, file: !135, line: 188, baseType: !1217, size: 64, offset: 64)
!1217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1218, size: 64, elements: !870)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1181)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1141, file: !135, line: 207, baseType: !1220, size: 64, offset: 192)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1221, line: 144, baseType: !1222)
!1221 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1221, line: 100, size: 896, elements: !1224)
!1224 = !{!1225, !1233, !1238, !1243, !1244, !1247, !1248, !1249, !1250, !1251, !1256, !1258, !1259, !1264, !1269}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1223, file: !1221, line: 102, baseType: !1226, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1221, line: 52, baseType: !1227)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DISubroutineType(types: !1229)
!1229 = !{!1230, !1231}
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1221, line: 47, baseType: !7)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1232, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1223, file: !1221, line: 105, baseType: !1234, size: 64, offset: 64)
!1234 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1221, line: 59, baseType: !1235)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{!750, !1231, !1231}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1223, file: !1221, line: 108, baseType: !1239, size: 64, offset: 128)
!1239 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1221, line: 63, baseType: !1240)
!1240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1241, size: 64)
!1241 = !DISubroutineType(types: !1242)
!1242 = !{null, !754}
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1223, file: !1221, line: 111, baseType: !757, size: 64, offset: 192)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1223, file: !1221, line: 114, baseType: !1245, size: 64, offset: 256)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1246, line: 46, baseType: !776)
!1246 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1223, file: !1221, line: 117, baseType: !1245, size: 64, offset: 320)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1223, file: !1221, line: 120, baseType: !1245, size: 64, offset: 384)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1223, file: !1221, line: 124, baseType: !7, size: 32, offset: 448)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1223, file: !1221, line: 128, baseType: !7, size: 32, offset: 480)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1223, file: !1221, line: 131, baseType: !1252, size: 64, offset: 512)
!1252 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1221, line: 75, baseType: !1253)
!1253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1254, size: 64)
!1254 = !DISubroutineType(types: !1255)
!1255 = !{!754, !1245, !1245}
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1223, file: !1221, line: 132, baseType: !1257, size: 64, offset: 576)
!1257 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1221, line: 78, baseType: !1240)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1223, file: !1221, line: 135, baseType: !754, size: 64, offset: 640)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1223, file: !1221, line: 136, baseType: !1260, size: 64, offset: 704)
!1260 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1221, line: 82, baseType: !1261)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!754, !754, !1245, !1245}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1223, file: !1221, line: 137, baseType: !1265, size: 64, offset: 768)
!1265 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1221, line: 83, baseType: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DISubroutineType(types: !1268)
!1268 = !{null, !754, !754}
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1223, file: !1221, line: 141, baseType: !7, size: 32, offset: 832)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1141, file: !135, line: 211, baseType: !1271, size: 64, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !158, line: 183, baseType: !1273)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !158, line: 183, size: 128, elements: !1274)
!1274 = !{!1275}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1273, file: !158, line: 183, baseType: !1276, size: 128)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !158, line: 182, baseType: !1277)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !158, line: 182, size: 128, elements: !1278)
!1278 = !{!1279, !1280, !1281}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1277, file: !158, line: 182, baseType: !7, size: 32)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1277, file: !158, line: 182, baseType: !7, size: 32, offset: 32)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1277, file: !158, line: 182, baseType: !1282, size: 64, offset: 64)
!1282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 64, elements: !870)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1141, file: !135, line: 220, baseType: !1284, size: 64, offset: 320)
!1284 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1285)
!1285 = !{!1286, !1287}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1284, file: !135, line: 218, baseType: !1271, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1284, file: !135, line: 219, baseType: !1288, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1289, size: 64)
!1289 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1290, line: 29, baseType: !1291)
!1290 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1290, line: 29, size: 96, elements: !1292)
!1292 = !{!1293}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1291, file: !1290, line: 29, baseType: !1294, size: 96)
!1294 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1290, line: 27, baseType: !1295)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1290, line: 27, size: 96, elements: !1296)
!1296 = !{!1297, !1298, !1299}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1295, file: !1290, line: 27, baseType: !7, size: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1295, file: !1290, line: 27, baseType: !7, size: 32, offset: 32)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1295, file: !1290, line: 27, baseType: !1300, size: 8, offset: 64)
!1300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1301, size: 8, elements: !870)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1290, line: 26, baseType: !749)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1136, file: !1137, line: 467, baseType: !1303, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !142, line: 374, size: 640, elements: !1305)
!1305 = !{!1306, !1381, !1382, !1395, !1396, !1397, !1398, !1399, !1400, !1402, !1404, !1405}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1304, file: !142, line: 377, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !759, line: 111, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !142, line: 217, size: 832, elements: !1310)
!1310 = !{!1311, !1346, !1347, !1348, !1351, !1355, !1356, !1357, !1375, !1376, !1377, !1378, !1379, !1380}
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1309, file: !142, line: 219, baseType: !1312, size: 64)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !142, line: 151, baseType: !1314)
!1314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !142, line: 151, size: 128, elements: !1315)
!1315 = !{!1316}
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1314, file: !142, line: 151, baseType: !1317, size: 128)
!1317 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !142, line: 150, baseType: !1318)
!1318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !142, line: 150, size: 128, elements: !1319)
!1319 = !{!1320, !1321, !1322}
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1318, file: !142, line: 150, baseType: !7, size: 32)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1318, file: !142, line: 150, baseType: !7, size: 32, offset: 32)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1318, file: !142, line: 150, baseType: !1323, size: 64, offset: 64)
!1323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1324, size: 64, elements: !870)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !759, line: 108, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !142, line: 122, size: 512, elements: !1327)
!1327 = !{!1328, !1329, !1330, !1338, !1339, !1340, !1341, !1342, !1343, !1344}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1326, file: !142, line: 124, baseType: !1308, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1326, file: !142, line: 125, baseType: !1308, size: 64, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1326, file: !142, line: 131, baseType: !1331, size: 64, offset: 128)
!1331 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !142, line: 128, size: 64, elements: !1332)
!1332 = !{!1333, !1337}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1331, file: !142, line: 129, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !759, line: 66, baseType: !1335)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !759, line: 65, flags: DIFlagFwdDecl)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1331, file: !142, line: 130, baseType: !836, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1326, file: !142, line: 134, baseType: !754, size: 64, offset: 192)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1326, file: !142, line: 137, baseType: !890, size: 64, offset: 256)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1326, file: !142, line: 138, baseType: !1010, size: 32, offset: 320)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1326, file: !142, line: 142, baseType: !7, size: 32, offset: 352)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1326, file: !142, line: 144, baseType: !750, size: 32, offset: 384)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1326, file: !142, line: 145, baseType: !750, size: 32, offset: 416)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1326, file: !142, line: 146, baseType: !1345, size: 64, offset: 448)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !142, line: 119, baseType: !793)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1309, file: !142, line: 220, baseType: !1312, size: 64, offset: 64)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1309, file: !142, line: 223, baseType: !754, size: 64, offset: 128)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1309, file: !142, line: 226, baseType: !1349, size: 64, offset: 192)
!1349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1350, size: 64)
!1350 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 185, flags: DIFlagFwdDecl)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1309, file: !142, line: 229, baseType: !1352, size: 128, offset: 256)
!1352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1353, size: 128, elements: !777)
!1353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1354, size: 64)
!1354 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !142, line: 229, flags: DIFlagFwdDecl)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1309, file: !142, line: 232, baseType: !1308, size: 64, offset: 384)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1309, file: !142, line: 233, baseType: !1308, size: 64, offset: 448)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1309, file: !142, line: 238, baseType: !1358, size: 64, offset: 512)
!1358 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !142, line: 235, size: 64, elements: !1359)
!1359 = !{!1360, !1366}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1358, file: !142, line: 236, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !142, line: 273, size: 128, elements: !1363)
!1363 = !{!1364, !1365}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1362, file: !142, line: 275, baseType: !1334, size: 64)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1362, file: !142, line: 278, baseType: !1334, size: 64, offset: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1358, file: !142, line: 237, baseType: !1367, size: 64)
!1367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!1368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !142, line: 259, size: 320, elements: !1369)
!1369 = !{!1370, !1371, !1372, !1373, !1374}
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1368, file: !142, line: 261, baseType: !836, size: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1368, file: !142, line: 262, baseType: !836, size: 64, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1368, file: !142, line: 266, baseType: !836, size: 64, offset: 128)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1368, file: !142, line: 267, baseType: !836, size: 64, offset: 192)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1368, file: !142, line: 270, baseType: !750, size: 32, offset: 256)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1309, file: !142, line: 241, baseType: !1345, size: 64, offset: 576)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1309, file: !142, line: 244, baseType: !750, size: 32, offset: 640)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1309, file: !142, line: 247, baseType: !750, size: 32, offset: 672)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1309, file: !142, line: 250, baseType: !750, size: 32, offset: 704)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1309, file: !142, line: 253, baseType: !750, size: 32, offset: 736)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1309, file: !142, line: 256, baseType: !750, size: 32, offset: 768)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1304, file: !142, line: 378, baseType: !1307, size: 64, offset: 64)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1304, file: !142, line: 381, baseType: !1383, size: 64, offset: 128)
!1383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1384, size: 64)
!1384 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !142, line: 282, baseType: !1385)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !142, line: 282, size: 128, elements: !1386)
!1386 = !{!1387}
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1385, file: !142, line: 282, baseType: !1388, size: 128)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !142, line: 281, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !142, line: 281, size: 128, elements: !1390)
!1390 = !{!1391, !1392, !1393}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1389, file: !142, line: 281, baseType: !7, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1389, file: !142, line: 281, baseType: !7, size: 32, offset: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1389, file: !142, line: 281, baseType: !1394, size: 64, offset: 64)
!1394 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1307, size: 64, elements: !870)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1304, file: !142, line: 384, baseType: !750, size: 32, offset: 192)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1304, file: !142, line: 387, baseType: !750, size: 32, offset: 224)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1304, file: !142, line: 390, baseType: !750, size: 32, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1304, file: !142, line: 394, baseType: !1383, size: 64, offset: 320)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1304, file: !142, line: 396, baseType: !141, size: 32, offset: 384)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1304, file: !142, line: 399, baseType: !1401, size: 64, offset: 416)
!1401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !147, size: 64, elements: !777)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1304, file: !142, line: 402, baseType: !1403, size: 64, offset: 480)
!1403 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !777)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1304, file: !142, line: 406, baseType: !750, size: 32, offset: 544)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1304, file: !142, line: 409, baseType: !750, size: 32, offset: 576)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1136, file: !1137, line: 470, baseType: !1335, size: 64, offset: 128)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1136, file: !1137, line: 473, baseType: !1408, size: 64, offset: 192)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1137, line: 166, flags: DIFlagFwdDecl)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1136, file: !1137, line: 476, baseType: !1411, size: 64, offset: 256)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1137, line: 476, flags: DIFlagFwdDecl)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1136, file: !1137, line: 479, baseType: !1220, size: 64, offset: 320)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1136, file: !1137, line: 484, baseType: !890, size: 64, offset: 384)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1136, file: !1137, line: 488, baseType: !890, size: 64, offset: 448)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1136, file: !1137, line: 493, baseType: !890, size: 64, offset: 512)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1136, file: !1137, line: 496, baseType: !890, size: 64, offset: 576)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1136, file: !1137, line: 501, baseType: !1419, size: 64, offset: 640)
!1419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1420, size: 64)
!1420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !153, line: 2355, size: 576, elements: !1421)
!1421 = !{!1422, !1425, !1426, !1427, !1428, !1430, !1431, !1436, !1437, !1438, !1439, !1440, !1441}
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1420, file: !153, line: 2356, baseType: !1423, size: 64)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !153, line: 2356, flags: DIFlagFwdDecl)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1420, file: !153, line: 2357, baseType: !755, size: 64, offset: 64)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1420, file: !153, line: 2358, baseType: !750, size: 32, offset: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1420, file: !153, line: 2359, baseType: !750, size: 32, offset: 160)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1420, file: !153, line: 2360, baseType: !1429, size: 128, offset: 192)
!1429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !750, size: 128, elements: !802)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1420, file: !153, line: 2364, baseType: !750, size: 32, offset: 320)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1420, file: !153, line: 2367, baseType: !1432, size: 128, offset: 384)
!1432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !153, line: 2349, size: 128, elements: !1433)
!1433 = !{!1434, !1435}
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1432, file: !153, line: 2351, baseType: !836, size: 64)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1432, file: !153, line: 2352, baseType: !793, size: 64, offset: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1420, file: !153, line: 2371, baseType: !152, size: 32, offset: 512)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1420, file: !153, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1420, file: !153, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1420, file: !153, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1420, file: !153, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1420, file: !153, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1136, file: !1137, line: 504, baseType: !1443, size: 64, offset: 704)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1137, line: 504, flags: DIFlagFwdDecl)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1136, file: !1137, line: 507, baseType: !1220, size: 64, offset: 768)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1136, file: !1137, line: 510, baseType: !750, size: 32, offset: 832)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1136, file: !1137, line: 513, baseType: !750, size: 32, offset: 864)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1136, file: !1137, line: 516, baseType: !1010, size: 32, offset: 896)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1136, file: !1137, line: 519, baseType: !1010, size: 32, offset: 928)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1136, file: !1137, line: 522, baseType: !7, size: 32, offset: 960)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1136, file: !1137, line: 523, baseType: !7, size: 32, offset: 992)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1136, file: !1137, line: 528, baseType: !755, size: 64, offset: 1024)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1136, file: !1137, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1136, file: !1137, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1136, file: !1137, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1136, file: !1137, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1136, file: !1137, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1136, file: !1137, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1136, file: !1137, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1136, file: !1137, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1136, file: !1137, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1136, file: !1137, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1136, file: !1137, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1136, file: !1137, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1136, file: !1137, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1136, file: !1137, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1136, file: !1137, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1136, file: !1137, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1131, file: !158, line: 3254, baseType: !890, size: 64, offset: 1536)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1131, file: !158, line: 3257, baseType: !890, size: 64, offset: 1600)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1131, file: !158, line: 3258, baseType: !890, size: 64, offset: 1664)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1131, file: !158, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1131, file: !158, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1131, file: !158, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1131, file: !158, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1131, file: !158, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1131, file: !158, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1131, file: !158, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1131, file: !158, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1131, file: !158, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1131, file: !158, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1131, file: !158, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1131, file: !158, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1131, file: !158, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1131, file: !158, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1131, file: !158, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1131, file: !158, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1131, file: !158, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1131, file: !158, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !892, file: !158, line: 3394, baseType: !1491, size: 1344)
!1491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !158, line: 2279, size: 1344, elements: !1492)
!1492 = !{!1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513, !1514, !1515, !1518, !1519, !1520, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536}
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1491, file: !158, line: 2280, baseType: !928, size: 192)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1491, file: !158, line: 2281, baseType: !890, size: 64, offset: 192)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1491, file: !158, line: 2282, baseType: !890, size: 64, offset: 256)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1491, file: !158, line: 2283, baseType: !890, size: 64, offset: 320)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1491, file: !158, line: 2284, baseType: !890, size: 64, offset: 384)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1491, file: !158, line: 2285, baseType: !7, size: 32, offset: 448)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1491, file: !158, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1491, file: !158, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1491, file: !158, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1491, file: !158, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1491, file: !158, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1491, file: !158, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1491, file: !158, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1491, file: !158, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1491, file: !158, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1491, file: !158, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1491, file: !158, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1491, file: !158, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1491, file: !158, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1491, file: !158, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1491, file: !158, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1491, file: !158, line: 2305, baseType: !7, size: 32, offset: 512)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1491, file: !158, line: 2306, baseType: !1516, size: 32, offset: 544)
!1516 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1517, line: 31, baseType: !750)
!1517 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1491, file: !158, line: 2307, baseType: !890, size: 64, offset: 576)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1491, file: !158, line: 2308, baseType: !890, size: 64, offset: 640)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1491, file: !158, line: 2314, baseType: !1521, size: 64, offset: 704)
!1521 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !158, line: 2309, size: 64, elements: !1522)
!1522 = !{!1523, !1524, !1525}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1521, file: !158, line: 2310, baseType: !750, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1521, file: !158, line: 2311, baseType: !755, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1521, file: !158, line: 2312, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1527, size: 64)
!1527 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !158, line: 2277, flags: DIFlagFwdDecl)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1491, file: !158, line: 2315, baseType: !890, size: 64, offset: 768)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1491, file: !158, line: 2316, baseType: !890, size: 64, offset: 832)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1491, file: !158, line: 2317, baseType: !890, size: 64, offset: 896)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1491, file: !158, line: 2318, baseType: !890, size: 64, offset: 960)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1491, file: !158, line: 2319, baseType: !890, size: 64, offset: 1024)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1491, file: !158, line: 2320, baseType: !890, size: 64, offset: 1088)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1491, file: !158, line: 2321, baseType: !890, size: 64, offset: 1152)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1491, file: !158, line: 2322, baseType: !890, size: 64, offset: 1216)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1491, file: !158, line: 2324, baseType: !1537, size: 64, offset: 1280)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !158, line: 2324, flags: DIFlagFwdDecl)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !892, file: !158, line: 3395, baseType: !1540, size: 320)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !158, line: 1469, size: 320, elements: !1541)
!1541 = !{!1542, !1543, !1544}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1540, file: !158, line: 1470, baseType: !928, size: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1540, file: !158, line: 1471, baseType: !890, size: 64, offset: 192)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1540, file: !158, line: 1472, baseType: !890, size: 64, offset: 256)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !892, file: !158, line: 3396, baseType: !1546, size: 320)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !158, line: 1482, size: 320, elements: !1547)
!1547 = !{!1548, !1549, !1550}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1546, file: !158, line: 1483, baseType: !928, size: 192)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1546, file: !158, line: 1484, baseType: !750, size: 32, offset: 192)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1546, file: !158, line: 1485, baseType: !1282, size: 64, offset: 256)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !892, file: !158, line: 3397, baseType: !1552, size: 384)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !158, line: 1829, size: 384, elements: !1553)
!1553 = !{!1554, !1555, !1556, !1557}
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1552, file: !158, line: 1830, baseType: !928, size: 192)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1552, file: !158, line: 1831, baseType: !1010, size: 32, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1552, file: !158, line: 1832, baseType: !890, size: 64, offset: 256)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1552, file: !158, line: 1835, baseType: !1282, size: 64, offset: 320)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !892, file: !158, line: 3398, baseType: !1559, size: 704)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !158, line: 1898, size: 704, elements: !1560)
!1560 = !{!1561, !1562, !1563, !1567, !1568, !1571}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1559, file: !158, line: 1899, baseType: !928, size: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1559, file: !158, line: 1902, baseType: !890, size: 64, offset: 192)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1559, file: !158, line: 1905, baseType: !1564, size: 64, offset: 256)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !759, line: 58, baseType: !1565)
!1565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1566, size: 64)
!1566 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !759, line: 57, flags: DIFlagFwdDecl)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1559, file: !158, line: 1908, baseType: !7, size: 32, offset: 320)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1559, file: !158, line: 1911, baseType: !1569, size: 64, offset: 384)
!1569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1570, size: 64)
!1570 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !158, line: 1876, flags: DIFlagFwdDecl)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1559, file: !158, line: 1914, baseType: !1572, size: 256, offset: 448)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !158, line: 1883, size: 256, elements: !1573)
!1573 = !{!1574, !1576, !1577, !1582}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1572, file: !158, line: 1884, baseType: !1575, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1572, file: !158, line: 1885, baseType: !1575, size: 64, offset: 64)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1572, file: !158, line: 1891, baseType: !1578, size: 64, offset: 128)
!1578 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1572, file: !158, line: 1891, size: 64, elements: !1579)
!1579 = !{!1580, !1581}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1578, file: !158, line: 1891, baseType: !1564, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1578, file: !158, line: 1891, baseType: !890, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1572, file: !158, line: 1892, baseType: !1583, size: 64, offset: 192)
!1583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !890, size: 64)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !892, file: !158, line: 3399, baseType: !1585, size: 704)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !158, line: 2008, size: 704, elements: !1586)
!1586 = !{!1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1585, file: !158, line: 2009, baseType: !928, size: 192)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1585, file: !158, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1585, file: !158, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1585, file: !158, line: 2014, baseType: !1010, size: 32, offset: 224)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1585, file: !158, line: 2016, baseType: !890, size: 64, offset: 256)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1585, file: !158, line: 2017, baseType: !1271, size: 64, offset: 320)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1585, file: !158, line: 2019, baseType: !890, size: 64, offset: 384)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1585, file: !158, line: 2020, baseType: !890, size: 64, offset: 448)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1585, file: !158, line: 2021, baseType: !890, size: 64, offset: 512)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1585, file: !158, line: 2022, baseType: !890, size: 64, offset: 576)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1585, file: !158, line: 2023, baseType: !890, size: 64, offset: 640)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !892, file: !158, line: 3400, baseType: !1599, size: 832)
!1599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !158, line: 2430, size: 832, elements: !1600)
!1600 = !{!1601, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1599, file: !158, line: 2431, baseType: !928, size: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1599, file: !158, line: 2433, baseType: !890, size: 64, offset: 192)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1599, file: !158, line: 2434, baseType: !890, size: 64, offset: 256)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1599, file: !158, line: 2435, baseType: !890, size: 64, offset: 320)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1599, file: !158, line: 2436, baseType: !890, size: 64, offset: 384)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1599, file: !158, line: 2437, baseType: !1271, size: 64, offset: 448)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1599, file: !158, line: 2438, baseType: !890, size: 64, offset: 512)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1599, file: !158, line: 2440, baseType: !890, size: 64, offset: 576)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1599, file: !158, line: 2441, baseType: !890, size: 64, offset: 640)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1599, file: !158, line: 2443, baseType: !1611, size: 128, offset: 704)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !158, line: 182, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !158, line: 182, size: 128, elements: !1613)
!1613 = !{!1614}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1612, file: !158, line: 182, baseType: !1276, size: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !892, file: !158, line: 3401, baseType: !1616, size: 320)
!1616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !158, line: 3327, size: 320, elements: !1617)
!1617 = !{!1618, !1619, !1626}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1616, file: !158, line: 3329, baseType: !928, size: 192)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1616, file: !158, line: 3330, baseType: !1620, size: 64, offset: 192)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !158, line: 3320, size: 192, elements: !1622)
!1622 = !{!1623, !1624, !1625}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1621, file: !158, line: 3322, baseType: !1620, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1621, file: !158, line: 3323, baseType: !1620, size: 64, offset: 64)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1621, file: !158, line: 3324, baseType: !890, size: 64, offset: 128)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1616, file: !158, line: 3331, baseType: !1620, size: 64, offset: 256)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !892, file: !158, line: 3402, baseType: !1628, size: 256)
!1628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !158, line: 1540, size: 256, elements: !1629)
!1629 = !{!1630, !1631}
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1628, file: !158, line: 1541, baseType: !928, size: 192)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1628, file: !158, line: 1542, baseType: !1632, size: 64, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1633, size: 64)
!1633 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !158, line: 1538, baseType: !1634)
!1634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !158, line: 1538, size: 192, elements: !1635)
!1635 = !{!1636}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1634, file: !158, line: 1538, baseType: !1637, size: 192)
!1637 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !158, line: 1537, baseType: !1638)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !158, line: 1537, size: 192, elements: !1639)
!1639 = !{!1640, !1641, !1642}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1638, file: !158, line: 1537, baseType: !7, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1638, file: !158, line: 1537, baseType: !7, size: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1638, file: !158, line: 1537, baseType: !1643, size: 128, offset: 64)
!1643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1644, size: 128, elements: !870)
!1644 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !158, line: 1535, baseType: !1645)
!1645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !158, line: 1532, size: 128, elements: !1646)
!1646 = !{!1647, !1648}
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1645, file: !158, line: 1533, baseType: !890, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1645, file: !158, line: 1534, baseType: !890, size: 64, offset: 64)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !892, file: !158, line: 3403, baseType: !1650, size: 512)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !158, line: 1938, size: 512, elements: !1651)
!1651 = !{!1652, !1653, !1654, !1655, !1661, !1662, !1663}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1650, file: !158, line: 1939, baseType: !928, size: 192)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1650, file: !158, line: 1940, baseType: !1010, size: 32, offset: 192)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1650, file: !158, line: 1941, baseType: !157, size: 32, offset: 224)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1650, file: !158, line: 1946, baseType: !1656, size: 32, offset: 256)
!1656 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !158, line: 1942, size: 32, elements: !1657)
!1657 = !{!1658, !1659, !1660}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1656, file: !158, line: 1943, baseType: !176, size: 32)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1656, file: !158, line: 1944, baseType: !183, size: 32)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1656, file: !158, line: 1945, baseType: !190, size: 32)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1650, file: !158, line: 1950, baseType: !1334, size: 64, offset: 320)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1650, file: !158, line: 1951, baseType: !1334, size: 64, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1650, file: !158, line: 1953, baseType: !1282, size: 64, offset: 448)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !892, file: !158, line: 3404, baseType: !1665, size: 1664)
!1665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !158, line: 3337, size: 1664, elements: !1666)
!1666 = !{!1667, !1668}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1665, file: !158, line: 3338, baseType: !928, size: 192)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1665, file: !158, line: 3341, baseType: !1669, size: 1472, offset: 192)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1670, line: 410, size: 1472, elements: !1671)
!1670 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1671 = !{!1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1669, file: !1670, line: 412, baseType: !750, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1669, file: !1670, line: 413, baseType: !750, size: 32, offset: 32)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1669, file: !1670, line: 414, baseType: !750, size: 32, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1669, file: !1670, line: 415, baseType: !750, size: 32, offset: 96)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1669, file: !1670, line: 416, baseType: !750, size: 32, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1669, file: !1670, line: 417, baseType: !750, size: 32, offset: 160)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1669, file: !1670, line: 418, baseType: !749, size: 8, offset: 192)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1669, file: !1670, line: 419, baseType: !749, size: 8, offset: 200)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1669, file: !1670, line: 420, baseType: !1681, size: 8, offset: 208)
!1681 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1669, file: !1670, line: 421, baseType: !1681, size: 8, offset: 216)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1669, file: !1670, line: 422, baseType: !1681, size: 8, offset: 224)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1669, file: !1670, line: 423, baseType: !1681, size: 8, offset: 232)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1669, file: !1670, line: 424, baseType: !1681, size: 8, offset: 240)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1669, file: !1670, line: 425, baseType: !1681, size: 8, offset: 248)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1669, file: !1670, line: 426, baseType: !1681, size: 8, offset: 256)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1669, file: !1670, line: 427, baseType: !1681, size: 8, offset: 264)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1669, file: !1670, line: 428, baseType: !1681, size: 8, offset: 272)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1669, file: !1670, line: 429, baseType: !1681, size: 8, offset: 280)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1669, file: !1670, line: 430, baseType: !1681, size: 8, offset: 288)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1669, file: !1670, line: 431, baseType: !1681, size: 8, offset: 296)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1669, file: !1670, line: 432, baseType: !1681, size: 8, offset: 304)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1669, file: !1670, line: 433, baseType: !1681, size: 8, offset: 312)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1669, file: !1670, line: 434, baseType: !1681, size: 8, offset: 320)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1669, file: !1670, line: 435, baseType: !1681, size: 8, offset: 328)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1669, file: !1670, line: 436, baseType: !1681, size: 8, offset: 336)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1669, file: !1670, line: 437, baseType: !1681, size: 8, offset: 344)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1669, file: !1670, line: 438, baseType: !1681, size: 8, offset: 352)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1669, file: !1670, line: 439, baseType: !1681, size: 8, offset: 360)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1669, file: !1670, line: 440, baseType: !1681, size: 8, offset: 368)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1669, file: !1670, line: 441, baseType: !1681, size: 8, offset: 376)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1669, file: !1670, line: 442, baseType: !1681, size: 8, offset: 384)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1669, file: !1670, line: 443, baseType: !1681, size: 8, offset: 392)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1669, file: !1670, line: 444, baseType: !1681, size: 8, offset: 400)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1669, file: !1670, line: 445, baseType: !1681, size: 8, offset: 408)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1669, file: !1670, line: 446, baseType: !1681, size: 8, offset: 416)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1669, file: !1670, line: 447, baseType: !1681, size: 8, offset: 424)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1669, file: !1670, line: 448, baseType: !1681, size: 8, offset: 432)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1669, file: !1670, line: 449, baseType: !1681, size: 8, offset: 440)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1669, file: !1670, line: 450, baseType: !1681, size: 8, offset: 448)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1669, file: !1670, line: 451, baseType: !1681, size: 8, offset: 456)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1669, file: !1670, line: 452, baseType: !1681, size: 8, offset: 464)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1669, file: !1670, line: 453, baseType: !1681, size: 8, offset: 472)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1669, file: !1670, line: 454, baseType: !1681, size: 8, offset: 480)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1669, file: !1670, line: 455, baseType: !1681, size: 8, offset: 488)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1669, file: !1670, line: 456, baseType: !1681, size: 8, offset: 496)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1669, file: !1670, line: 457, baseType: !1681, size: 8, offset: 504)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1669, file: !1670, line: 458, baseType: !1681, size: 8, offset: 512)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1669, file: !1670, line: 459, baseType: !1681, size: 8, offset: 520)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1669, file: !1670, line: 460, baseType: !1681, size: 8, offset: 528)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1669, file: !1670, line: 461, baseType: !1681, size: 8, offset: 536)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1669, file: !1670, line: 462, baseType: !1681, size: 8, offset: 544)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1669, file: !1670, line: 463, baseType: !1681, size: 8, offset: 552)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1669, file: !1670, line: 464, baseType: !1681, size: 8, offset: 560)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1669, file: !1670, line: 465, baseType: !1681, size: 8, offset: 568)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1669, file: !1670, line: 466, baseType: !1681, size: 8, offset: 576)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1669, file: !1670, line: 467, baseType: !1681, size: 8, offset: 584)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1669, file: !1670, line: 468, baseType: !1681, size: 8, offset: 592)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1669, file: !1670, line: 469, baseType: !1681, size: 8, offset: 600)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1669, file: !1670, line: 470, baseType: !1681, size: 8, offset: 608)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1669, file: !1670, line: 471, baseType: !1681, size: 8, offset: 616)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1669, file: !1670, line: 472, baseType: !1681, size: 8, offset: 624)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1669, file: !1670, line: 473, baseType: !1681, size: 8, offset: 632)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1669, file: !1670, line: 474, baseType: !1681, size: 8, offset: 640)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1669, file: !1670, line: 475, baseType: !1681, size: 8, offset: 648)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1669, file: !1670, line: 476, baseType: !1681, size: 8, offset: 656)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1669, file: !1670, line: 477, baseType: !1681, size: 8, offset: 664)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1669, file: !1670, line: 478, baseType: !1681, size: 8, offset: 672)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1669, file: !1670, line: 479, baseType: !1681, size: 8, offset: 680)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1669, file: !1670, line: 480, baseType: !1681, size: 8, offset: 688)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1669, file: !1670, line: 481, baseType: !1681, size: 8, offset: 696)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1669, file: !1670, line: 482, baseType: !1681, size: 8, offset: 704)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1669, file: !1670, line: 483, baseType: !1681, size: 8, offset: 712)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1669, file: !1670, line: 484, baseType: !1681, size: 8, offset: 720)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1669, file: !1670, line: 485, baseType: !1681, size: 8, offset: 728)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1669, file: !1670, line: 486, baseType: !1681, size: 8, offset: 736)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1669, file: !1670, line: 487, baseType: !1681, size: 8, offset: 744)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1669, file: !1670, line: 488, baseType: !1681, size: 8, offset: 752)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1669, file: !1670, line: 489, baseType: !1681, size: 8, offset: 760)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1669, file: !1670, line: 490, baseType: !1681, size: 8, offset: 768)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1669, file: !1670, line: 491, baseType: !1681, size: 8, offset: 776)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1669, file: !1670, line: 492, baseType: !1681, size: 8, offset: 784)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1669, file: !1670, line: 493, baseType: !1681, size: 8, offset: 792)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1669, file: !1670, line: 494, baseType: !1681, size: 8, offset: 800)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1669, file: !1670, line: 495, baseType: !1681, size: 8, offset: 808)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1669, file: !1670, line: 496, baseType: !1681, size: 8, offset: 816)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1669, file: !1670, line: 497, baseType: !1681, size: 8, offset: 824)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1669, file: !1670, line: 498, baseType: !1681, size: 8, offset: 832)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1669, file: !1670, line: 499, baseType: !1681, size: 8, offset: 840)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1669, file: !1670, line: 500, baseType: !1681, size: 8, offset: 848)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1669, file: !1670, line: 501, baseType: !1681, size: 8, offset: 856)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1669, file: !1670, line: 502, baseType: !1681, size: 8, offset: 864)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1669, file: !1670, line: 503, baseType: !1681, size: 8, offset: 872)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1669, file: !1670, line: 504, baseType: !1681, size: 8, offset: 880)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1669, file: !1670, line: 505, baseType: !1681, size: 8, offset: 888)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1669, file: !1670, line: 506, baseType: !1681, size: 8, offset: 896)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1669, file: !1670, line: 507, baseType: !1681, size: 8, offset: 904)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1669, file: !1670, line: 508, baseType: !1681, size: 8, offset: 912)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1669, file: !1670, line: 509, baseType: !1681, size: 8, offset: 920)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1669, file: !1670, line: 510, baseType: !1681, size: 8, offset: 928)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1669, file: !1670, line: 511, baseType: !1681, size: 8, offset: 936)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1669, file: !1670, line: 512, baseType: !1681, size: 8, offset: 944)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1669, file: !1670, line: 513, baseType: !1681, size: 8, offset: 952)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1669, file: !1670, line: 514, baseType: !1681, size: 8, offset: 960)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1669, file: !1670, line: 515, baseType: !1681, size: 8, offset: 968)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1669, file: !1670, line: 516, baseType: !1681, size: 8, offset: 976)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1669, file: !1670, line: 517, baseType: !1681, size: 8, offset: 984)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1669, file: !1670, line: 518, baseType: !1681, size: 8, offset: 992)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1669, file: !1670, line: 519, baseType: !1681, size: 8, offset: 1000)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1669, file: !1670, line: 520, baseType: !1681, size: 8, offset: 1008)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1669, file: !1670, line: 521, baseType: !1681, size: 8, offset: 1016)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1669, file: !1670, line: 522, baseType: !1681, size: 8, offset: 1024)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1669, file: !1670, line: 523, baseType: !1681, size: 8, offset: 1032)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1669, file: !1670, line: 524, baseType: !1681, size: 8, offset: 1040)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1669, file: !1670, line: 525, baseType: !1681, size: 8, offset: 1048)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1669, file: !1670, line: 526, baseType: !1681, size: 8, offset: 1056)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1669, file: !1670, line: 527, baseType: !1681, size: 8, offset: 1064)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1669, file: !1670, line: 528, baseType: !1681, size: 8, offset: 1072)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1669, file: !1670, line: 529, baseType: !1681, size: 8, offset: 1080)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1669, file: !1670, line: 530, baseType: !1681, size: 8, offset: 1088)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1669, file: !1670, line: 531, baseType: !1681, size: 8, offset: 1096)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1669, file: !1670, line: 532, baseType: !1681, size: 8, offset: 1104)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1669, file: !1670, line: 533, baseType: !1681, size: 8, offset: 1112)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1669, file: !1670, line: 534, baseType: !1681, size: 8, offset: 1120)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1669, file: !1670, line: 535, baseType: !1681, size: 8, offset: 1128)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1669, file: !1670, line: 536, baseType: !1681, size: 8, offset: 1136)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1669, file: !1670, line: 537, baseType: !1681, size: 8, offset: 1144)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1669, file: !1670, line: 538, baseType: !1681, size: 8, offset: 1152)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1669, file: !1670, line: 539, baseType: !1681, size: 8, offset: 1160)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1669, file: !1670, line: 540, baseType: !1681, size: 8, offset: 1168)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1669, file: !1670, line: 541, baseType: !1681, size: 8, offset: 1176)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1669, file: !1670, line: 542, baseType: !1681, size: 8, offset: 1184)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1669, file: !1670, line: 543, baseType: !1681, size: 8, offset: 1192)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1669, file: !1670, line: 544, baseType: !1681, size: 8, offset: 1200)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1669, file: !1670, line: 545, baseType: !1681, size: 8, offset: 1208)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1669, file: !1670, line: 546, baseType: !1681, size: 8, offset: 1216)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1669, file: !1670, line: 547, baseType: !1681, size: 8, offset: 1224)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1669, file: !1670, line: 548, baseType: !1681, size: 8, offset: 1232)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1669, file: !1670, line: 549, baseType: !1681, size: 8, offset: 1240)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1669, file: !1670, line: 550, baseType: !1681, size: 8, offset: 1248)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1669, file: !1670, line: 551, baseType: !1681, size: 8, offset: 1256)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1669, file: !1670, line: 552, baseType: !1681, size: 8, offset: 1264)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1669, file: !1670, line: 553, baseType: !1681, size: 8, offset: 1272)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1669, file: !1670, line: 554, baseType: !1681, size: 8, offset: 1280)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1669, file: !1670, line: 555, baseType: !1681, size: 8, offset: 1288)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1669, file: !1670, line: 556, baseType: !1681, size: 8, offset: 1296)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1669, file: !1670, line: 557, baseType: !1681, size: 8, offset: 1304)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1669, file: !1670, line: 558, baseType: !1681, size: 8, offset: 1312)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1669, file: !1670, line: 559, baseType: !1681, size: 8, offset: 1320)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1669, file: !1670, line: 560, baseType: !1681, size: 8, offset: 1328)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1669, file: !1670, line: 561, baseType: !1681, size: 8, offset: 1336)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1669, file: !1670, line: 562, baseType: !1681, size: 8, offset: 1344)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1669, file: !1670, line: 563, baseType: !1681, size: 8, offset: 1352)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1669, file: !1670, line: 564, baseType: !1681, size: 8, offset: 1360)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1669, file: !1670, line: 565, baseType: !1681, size: 8, offset: 1368)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1669, file: !1670, line: 566, baseType: !1681, size: 8, offset: 1376)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1669, file: !1670, line: 567, baseType: !1681, size: 8, offset: 1384)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1669, file: !1670, line: 568, baseType: !1681, size: 8, offset: 1392)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1669, file: !1670, line: 569, baseType: !1681, size: 8, offset: 1400)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1669, file: !1670, line: 570, baseType: !1681, size: 8, offset: 1408)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1669, file: !1670, line: 571, baseType: !1681, size: 8, offset: 1416)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1669, file: !1670, line: 572, baseType: !1681, size: 8, offset: 1424)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1669, file: !1670, line: 573, baseType: !1681, size: 8, offset: 1432)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1669, file: !1670, line: 574, baseType: !1681, size: 8, offset: 1440)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !892, file: !158, line: 3405, baseType: !1837, size: 384)
!1837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !158, line: 3352, size: 384, elements: !1838)
!1838 = !{!1839, !1840}
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1837, file: !158, line: 3353, baseType: !928, size: 192)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1837, file: !158, line: 3356, baseType: !1841, size: 192, offset: 192)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1670, line: 578, size: 192, elements: !1842)
!1842 = !{!1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1841, file: !1670, line: 580, baseType: !750, size: 32)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1841, file: !1670, line: 581, baseType: !750, size: 32, offset: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1841, file: !1670, line: 582, baseType: !750, size: 32, offset: 64)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1841, file: !1670, line: 583, baseType: !750, size: 32, offset: 96)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1841, file: !1670, line: 584, baseType: !749, size: 8, offset: 128)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1841, file: !1670, line: 585, baseType: !749, size: 8, offset: 136)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1841, file: !1670, line: 586, baseType: !749, size: 8, offset: 144)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1841, file: !1670, line: 587, baseType: !749, size: 8, offset: 152)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1841, file: !1670, line: 588, baseType: !749, size: 8, offset: 160)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1841, file: !1670, line: 589, baseType: !749, size: 8, offset: 168)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1841, file: !1670, line: 590, baseType: !749, size: 8, offset: 176)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !856, file: !567, line: 178, baseType: !1308, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !856, file: !567, line: 179, baseType: !1856, size: 64)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !567, line: 150, baseType: !1858)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !567, line: 142, size: 320, elements: !1859)
!1859 = !{!1860, !1861, !1862, !1863, !1864, !1865}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1858, file: !567, line: 144, baseType: !890, size: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1858, file: !567, line: 145, baseType: !836, size: 64, offset: 64)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1858, file: !567, line: 146, baseType: !836, size: 64, offset: 128)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1858, file: !567, line: 147, baseType: !1516, size: 32, offset: 192)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1858, file: !567, line: 148, baseType: !7, size: 32, offset: 224)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1858, file: !567, line: 149, baseType: !749, size: 8, offset: 256)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !856, file: !567, line: 180, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !567, line: 162, baseType: !1869)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !567, line: 159, size: 128, elements: !1870)
!1870 = !{!1871, !1872}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1869, file: !567, line: 160, baseType: !890, size: 64)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1869, file: !567, line: 161, baseType: !793, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !856, file: !567, line: 181, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !567, line: 181, flags: DIFlagFwdDecl)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !851, file: !567, line: 317, baseType: !1877, size: 64)
!1877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !793, size: 64, elements: !870)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !851, file: !567, line: 318, baseType: !1879, size: 320)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !567, line: 188, size: 320, elements: !1880)
!1880 = !{!1881, !1883, !1938}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1879, file: !567, line: 190, baseType: !1882, size: 192)
!1882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !855, size: 192, elements: !961)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1879, file: !567, line: 193, baseType: !1884, size: 64, offset: 192)
!1884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1885, size: 64)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !567, line: 206, size: 320, elements: !1886)
!1886 = !{!1887, !1923, !1924, !1925, !1937}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1885, file: !567, line: 208, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !759, line: 62, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1891, line: 538, size: 256, elements: !1892)
!1891 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1892 = !{!1893, !1897, !1903, !1914}
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1890, file: !1891, line: 539, baseType: !1894, size: 32)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1891, line: 482, size: 32, elements: !1895)
!1895 = !{!1896}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1894, file: !1891, line: 484, baseType: !7, size: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1890, file: !1891, line: 540, baseType: !1898, size: 192)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1891, line: 488, size: 192, elements: !1899)
!1899 = !{!1900, !1901, !1902}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1898, file: !1891, line: 489, baseType: !1894, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1898, file: !1891, line: 492, baseType: !755, size: 64, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1898, file: !1891, line: 496, baseType: !890, size: 64, offset: 128)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1890, file: !1891, line: 541, baseType: !1904, size: 256)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1891, line: 504, size: 256, elements: !1905)
!1905 = !{!1906, !1907, !1912, !1913}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1904, file: !1891, line: 505, baseType: !1894, size: 32)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1904, file: !1891, line: 509, baseType: !1908, size: 64, offset: 64)
!1908 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1891, line: 501, baseType: !1909)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{null, !1231}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1904, file: !1891, line: 510, baseType: !1231, size: 64, offset: 128)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1904, file: !1891, line: 513, baseType: !1888, size: 64, offset: 192)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1890, file: !1891, line: 542, baseType: !1915, size: 128)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1891, line: 530, size: 128, elements: !1916)
!1916 = !{!1917, !1918}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1915, file: !1891, line: 531, baseType: !1894, size: 32)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1915, file: !1891, line: 534, baseType: !1919, size: 64, offset: 64)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1891, line: 525, baseType: !1920)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DISubroutineType(types: !1922)
!1922 = !{!749, !890, !755, !776, !776}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1885, file: !567, line: 211, baseType: !7, size: 32, offset: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1885, file: !567, line: 214, baseType: !793, size: 64, offset: 128)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1885, file: !567, line: 224, baseType: !1926, size: 64, offset: 192)
!1926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1927, size: 64)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !567, line: 202, baseType: !1928)
!1928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !567, line: 202, size: 128, elements: !1929)
!1929 = !{!1930}
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1928, file: !567, line: 202, baseType: !1931, size: 128)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !567, line: 200, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !567, line: 200, size: 128, elements: !1933)
!1933 = !{!1934, !1935, !1936}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1932, file: !567, line: 200, baseType: !7, size: 32)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1932, file: !567, line: 200, baseType: !7, size: 32, offset: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1932, file: !567, line: 200, baseType: !869, size: 64, offset: 64)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1885, file: !567, line: 234, baseType: !1926, size: 64, offset: 256)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1879, file: !567, line: 197, baseType: !793, size: 64, offset: 256)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !851, file: !567, line: 319, baseType: !950, size: 256)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !851, file: !567, line: 320, baseType: !969, size: 192)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !830, file: !385, line: 366, baseType: !821, size: 64, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !830, file: !385, line: 370, baseType: !1943, size: 64, offset: 192)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !385, line: 433, size: 384, elements: !1945)
!1945 = !{!1946, !1947, !1949, !1950, !1951, !1962}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1944, file: !385, line: 435, baseType: !836, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !1944, file: !385, line: 436, baseType: !1948, size: 64, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !1944, file: !385, line: 437, baseType: !1948, size: 64, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !1944, file: !385, line: 439, baseType: !1948, size: 64, offset: 192)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !1944, file: !385, line: 440, baseType: !1952, size: 64, offset: 256)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !385, line: 339, size: 192, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959, !1960, !1961}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !1954, file: !385, line: 341, baseType: !836, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1954, file: !385, line: 344, baseType: !7, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1954, file: !385, line: 346, baseType: !750, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !1954, file: !385, line: 347, baseType: !7, size: 32, offset: 96)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !1954, file: !385, line: 348, baseType: !7, size: 32, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !1954, file: !385, line: 349, baseType: !7, size: 32, offset: 160)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !1944, file: !385, line: 444, baseType: !750, size: 32, offset: 320)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !830, file: !385, line: 374, baseType: !826, size: 64, offset: 256)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !830, file: !385, line: 375, baseType: !826, size: 64, offset: 320)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !830, file: !385, line: 376, baseType: !7, size: 32, offset: 384)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !830, file: !385, line: 379, baseType: !750, size: 32, offset: 416)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !830, file: !385, line: 382, baseType: !7, size: 32, offset: 448)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !827, file: !385, line: 425, baseType: !1969, size: 576)
!1969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !385, line: 398, size: 576, elements: !1970)
!1970 = !{!1971, !1972}
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1969, file: !385, line: 400, baseType: !830, size: 512)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1969, file: !385, line: 405, baseType: !1973, size: 64, offset: 512)
!1973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !827, file: !385, line: 426, baseType: !1975, size: 576)
!1975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !385, line: 388, size: 576, elements: !1976)
!1976 = !{!1977, !1978}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1975, file: !385, line: 390, baseType: !830, size: 512)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1975, file: !385, line: 394, baseType: !1307, size: 64, offset: 512)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !827, file: !385, line: 427, baseType: !1980, size: 704)
!1980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !385, line: 413, size: 704, elements: !1981)
!1981 = !{!1982, !1983, !1984, !1985}
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1980, file: !385, line: 415, baseType: !1969, size: 576)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1980, file: !385, line: 416, baseType: !750, size: 32, offset: 576)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1980, file: !385, line: 417, baseType: !750, size: 32, offset: 608)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1980, file: !385, line: 418, baseType: !5, size: 32, offset: 640)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !822, file: !385, line: 452, baseType: !821, size: 64, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1988, size: 64)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_byte_lr_problem_data", file: !3, line: 2368, size: 1152, elements: !1989)
!1989 = !{!1990, !1991, !1992, !1993, !1995, !1996}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "invalidated_by_call", scope: !1988, file: !3, line: 2371, baseType: !758, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_regs_used", scope: !1988, file: !3, line: 2372, baseType: !758, size: 64, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "needs_expansion", scope: !1988, file: !3, line: 2376, baseType: !758, size: 64, offset: 128)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "regno_start", scope: !1988, file: !3, line: 2380, baseType: !1994, size: 64, offset: 192)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "regno_len", scope: !1988, file: !3, line: 2381, baseType: !1994, size: 64, offset: 256)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "byte_lr_bitmaps", scope: !1988, file: !3, line: 2383, baseType: !783, size: 832, offset: 320)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_live_bb_info", file: !385, line: 843, size: 256, elements: !1999)
!1999 = !{!2000, !2001, !2002, !2003}
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !1998, file: !385, line: 846, baseType: !758, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1998, file: !385, line: 848, baseType: !758, size: 64, offset: 64)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !1998, file: !385, line: 851, baseType: !758, size: 64, offset: 128)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !1998, file: !385, line: 852, baseType: !758, size: 64, offset: 192)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !385, line: 826, size: 256, elements: !2006)
!2006 = !{!2007, !2008, !2009, !2010}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2005, file: !385, line: 829, baseType: !758, size: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2005, file: !385, line: 831, baseType: !758, size: 64, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2005, file: !385, line: 834, baseType: !758, size: 64, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2005, file: !385, line: 835, baseType: !758, size: 64, offset: 192)
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_rd_problem_data", file: !3, line: 195, size: 960, elements: !2013)
!2013 = !{!2014, !2015, !2016}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_invalidated_by_call", scope: !2012, file: !3, line: 198, baseType: !758, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "dense_invalidated_by_call", scope: !2012, file: !3, line: 200, baseType: !758, size: 64, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "rd_bitmaps", scope: !2012, file: !3, line: 202, baseType: !783, size: 832, offset: 128)
!2017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2018, size: 64)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_rd_bb_info", file: !385, line: 794, size: 320, elements: !2019)
!2019 = !{!2020, !2021, !2022, !2023, !2024}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2018, file: !385, line: 797, baseType: !758, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "sparse_kill", scope: !2018, file: !385, line: 798, baseType: !758, size: 64, offset: 64)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2018, file: !385, line: 799, baseType: !758, size: 64, offset: 128)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2018, file: !385, line: 802, baseType: !758, size: 64, offset: 192)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2018, file: !385, line: 803, baseType: !758, size: 64, offset: 256)
!2025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_problem_data", file: !3, line: 732, size: 128, elements: !2027)
!2027 = !{!2028, !2030}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2026, file: !3, line: 734, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2026, file: !3, line: 735, baseType: !2029, size: 64, offset: 64)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_scan_bb_info", file: !385, line: 771, size: 128, elements: !2033)
!2033 = !{!2034, !2035}
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_defs", scope: !2032, file: !385, line: 782, baseType: !1948, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_uses", scope: !2032, file: !385, line: 788, baseType: !1948, size: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_live_problem_data", file: !3, line: 1356, size: 128, elements: !2038)
!2038 = !{!2039, !2040}
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2037, file: !3, line: 1358, baseType: !2029, size: 64)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2037, file: !3, line: 1359, baseType: !2029, size: 64, offset: 64)
!2041 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_byte_lr_bb_info", file: !385, line: 859, size: 256, elements: !2044)
!2044 = !{!2045, !2046, !2047, !2048}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2043, file: !385, line: 862, baseType: !758, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2043, file: !385, line: 864, baseType: !758, size: 64, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2043, file: !385, line: 867, baseType: !758, size: 64, offset: 128)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2043, file: !385, line: 868, baseType: !758, size: 64, offset: 192)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_md_bb_info", file: !385, line: 810, size: 320, elements: !2051)
!2051 = !{!2052, !2053, !2054, !2055, !2056}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2050, file: !385, line: 813, baseType: !758, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2050, file: !385, line: 814, baseType: !758, size: 64, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2050, file: !385, line: 815, baseType: !758, size: 64, offset: 128)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2050, file: !385, line: 818, baseType: !758, size: 64, offset: 192)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2050, file: !385, line: 819, baseType: !758, size: 64, offset: 256)
!2057 = !{!0, !2058, !2060, !2062, !2218, !2220, !2222, !2224, !2226, !2228, !2230}
!2058 = !DIGlobalVariableExpression(var: !2059, expr: !DIExpression())
!2059 = distinct !DIGlobalVariable(name: "seen_in_block", scope: !2, file: !3, line: 57, type: !758, isLocal: true, isDefinition: true)
!2060 = !DIGlobalVariableExpression(var: !2061, expr: !DIExpression())
!2061 = distinct !DIGlobalVariable(name: "seen_in_insn", scope: !2, file: !3, line: 58, type: !758, isLocal: true, isDefinition: true)
!2062 = !DIGlobalVariableExpression(var: !2063, expr: !DIExpression())
!2063 = distinct !DIGlobalVariable(name: "problem_LR", scope: !2, file: !3, line: 1224, type: !2064, isLocal: true, isDefinition: true)
!2064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_problem", file: !385, line: 255, size: 1280, elements: !2065)
!2065 = !{!2066, !2067, !2068, !2073, !2075, !2080, !2082, !2084, !2125, !2130, !2135, !2140, !2142, !2147, !2149, !2204, !2209, !2210, !2212, !2214, !2215, !2217}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2064, file: !385, line: 258, baseType: !7, size: 32)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2064, file: !385, line: 259, baseType: !384, size: 32, offset: 32)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fun", scope: !2064, file: !385, line: 260, baseType: !2069, size: 64, offset: 64)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_alloc_function", file: !385, line: 197, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{null, !758}
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fun", scope: !2064, file: !385, line: 261, baseType: !2074, size: 64, offset: 128)
!2074 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_reset_function", file: !385, line: 205, baseType: !2070)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "free_bb_fun", scope: !2064, file: !385, line: 262, baseType: !2076, size: 64, offset: 192)
!2076 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_free_bb_function", file: !385, line: 209, baseType: !2077)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{null, !1307, !754}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "local_compute_fun", scope: !2064, file: !385, line: 263, baseType: !2081, size: 64, offset: 256)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_local_compute_function", file: !385, line: 212, baseType: !2070)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "init_fun", scope: !2064, file: !385, line: 264, baseType: !2083, size: 64, offset: 320)
!2083 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_init_function", file: !385, line: 215, baseType: !2070)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "dataflow_fun", scope: !2064, file: !385, line: 265, baseType: !2085, size: 64, offset: 384)
!2085 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_dataflow_function", file: !385, line: 218, baseType: !2086)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{null, !2089, !758, !2124, !750}
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dataflow", file: !385, line: 289, size: 448, elements: !2091)
!2091 = !{!2092, !2094, !2095, !2096, !2118, !2119, !2120, !2121, !2122, !2123}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "problem", scope: !2090, file: !385, line: 291, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "block_info", scope: !2090, file: !385, line: 295, baseType: !757, size: 64, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "block_info_size", scope: !2090, file: !385, line: 296, baseType: !7, size: 32, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "block_pool", scope: !2090, file: !385, line: 299, baseType: !2097, size: 64, offset: 192)
!2097 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2098, line: 58, baseType: !2099)
!2098 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2098, line: 32, size: 704, elements: !2101)
!2101 = !{!2102, !2103, !2104, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2100, file: !2098, line: 34, baseType: !755, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2100, file: !2098, line: 38, baseType: !1245, size: 64, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2100, file: !2098, line: 41, baseType: !2105, size: 64, offset: 128)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2098, line: 30, baseType: !2106)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2098, line: 26, size: 64, elements: !2108)
!2108 = !{!2109}
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2107, file: !2098, line: 28, baseType: !2106, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2100, file: !2098, line: 45, baseType: !752, size: 64, offset: 192)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2100, file: !2098, line: 49, baseType: !1245, size: 64, offset: 256)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2100, file: !2098, line: 51, baseType: !1245, size: 64, offset: 320)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2100, file: !2098, line: 52, baseType: !1245, size: 64, offset: 384)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2100, file: !2098, line: 53, baseType: !1245, size: 64, offset: 448)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2100, file: !2098, line: 54, baseType: !2105, size: 64, offset: 512)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2100, file: !2098, line: 55, baseType: !1245, size: 64, offset: 576)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2100, file: !2098, line: 56, baseType: !1245, size: 64, offset: 640)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "out_of_date_transfer_functions", scope: !2090, file: !385, line: 306, baseType: !758, size: 64, offset: 256)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "problem_data", scope: !2090, file: !385, line: 312, baseType: !754, size: 64, offset: 320)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "local_flags", scope: !2090, file: !385, line: 315, baseType: !7, size: 32, offset: 384)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "computed", scope: !2090, file: !385, line: 321, baseType: !749, size: 8, offset: 416)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "solutions_dirty", scope: !2090, file: !385, line: 326, baseType: !749, size: 8, offset: 424)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "optional_p", scope: !2090, file: !385, line: 331, baseType: !749, size: 8, offset: 432)
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !750, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "con_fun_0", scope: !2064, file: !385, line: 266, baseType: !2126, size: 64, offset: 448)
!2126 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_confluence_function_0", file: !385, line: 221, baseType: !2127)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2128, size: 64)
!2128 = !DISubroutineType(types: !2129)
!2129 = !{null, !1307}
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "con_fun_n", scope: !2064, file: !385, line: 267, baseType: !2131, size: 64, offset: 512)
!2131 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_confluence_function_n", file: !385, line: 224, baseType: !2132)
!2132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2133, size: 64)
!2133 = !DISubroutineType(types: !2134)
!2134 = !{null, !1324}
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "trans_fun", scope: !2064, file: !385, line: 268, baseType: !2136, size: 64, offset: 576)
!2136 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_transfer_function", file: !385, line: 227, baseType: !2137)
!2137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2138, size: 64)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{!749, !750}
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "finalize_fun", scope: !2064, file: !385, line: 269, baseType: !2141, size: 64, offset: 640)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_finalizer_function", file: !385, line: 230, baseType: !2070)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "free_fun", scope: !2064, file: !385, line: 270, baseType: !2143, size: 64, offset: 704)
!2143 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_free_function", file: !385, line: 233, baseType: !2144)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{null}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "remove_problem_fun", scope: !2064, file: !385, line: 271, baseType: !2148, size: 64, offset: 768)
!2148 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_remove_problem_function", file: !385, line: 238, baseType: !2144)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "dump_start_fun", scope: !2064, file: !385, line: 272, baseType: !2150, size: 64, offset: 832)
!2150 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_dump_problem_function", file: !385, line: 241, baseType: !2151)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DISubroutineType(types: !2153)
!2153 = !{null, !2154}
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2156, line: 7, baseType: !2157)
!2156 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2158, line: 49, size: 1728, elements: !2159)
!2158 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2159 = !{!2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2175, !2177, !2178, !2179, !2182, !2183, !2184, !2185, !2188, !2190, !2193, !2196, !2197, !2198, !2199, !2200}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2157, file: !2158, line: 51, baseType: !750, size: 32)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2157, file: !2158, line: 54, baseType: !752, size: 64, offset: 64)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2157, file: !2158, line: 55, baseType: !752, size: 64, offset: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2157, file: !2158, line: 56, baseType: !752, size: 64, offset: 192)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2157, file: !2158, line: 57, baseType: !752, size: 64, offset: 256)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2157, file: !2158, line: 58, baseType: !752, size: 64, offset: 320)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2157, file: !2158, line: 59, baseType: !752, size: 64, offset: 384)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2157, file: !2158, line: 60, baseType: !752, size: 64, offset: 448)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2157, file: !2158, line: 61, baseType: !752, size: 64, offset: 512)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2157, file: !2158, line: 64, baseType: !752, size: 64, offset: 576)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2157, file: !2158, line: 65, baseType: !752, size: 64, offset: 640)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2157, file: !2158, line: 66, baseType: !752, size: 64, offset: 704)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2157, file: !2158, line: 68, baseType: !2173, size: 64, offset: 768)
!2173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2174, size: 64)
!2174 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2158, line: 36, flags: DIFlagFwdDecl)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2157, file: !2158, line: 70, baseType: !2176, size: 64, offset: 832)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2157, size: 64)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2157, file: !2158, line: 72, baseType: !750, size: 32, offset: 896)
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2157, file: !2158, line: 73, baseType: !750, size: 32, offset: 928)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2157, file: !2158, line: 74, baseType: !2180, size: 64, offset: 960)
!2180 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2181, line: 152, baseType: !793)
!2181 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2157, file: !2158, line: 77, baseType: !2041, size: 16, offset: 1024)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2157, file: !2158, line: 78, baseType: !1681, size: 8, offset: 1040)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2157, file: !2158, line: 79, baseType: !985, size: 8, offset: 1048)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2157, file: !2158, line: 81, baseType: !2186, size: 64, offset: 1088)
!2186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2187, size: 64)
!2187 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2158, line: 43, baseType: null)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2157, file: !2158, line: 89, baseType: !2189, size: 64, offset: 1152)
!2189 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2181, line: 153, baseType: !793)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2157, file: !2158, line: 91, baseType: !2191, size: 64, offset: 1216)
!2191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2192, size: 64)
!2192 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2158, line: 37, flags: DIFlagFwdDecl)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2157, file: !2158, line: 92, baseType: !2194, size: 64, offset: 1280)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2158, line: 38, flags: DIFlagFwdDecl)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2157, file: !2158, line: 93, baseType: !2176, size: 64, offset: 1344)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2157, file: !2158, line: 94, baseType: !754, size: 64, offset: 1408)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2157, file: !2158, line: 95, baseType: !1245, size: 64, offset: 1472)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2157, file: !2158, line: 96, baseType: !750, size: 32, offset: 1536)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2157, file: !2158, line: 98, baseType: !2201, size: 160, offset: 1568)
!2201 = !DICompositeType(tag: DW_TAG_array_type, baseType: !753, size: 160, elements: !2202)
!2202 = !{!2203}
!2203 = !DISubrange(count: 20)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "dump_top_fun", scope: !2064, file: !385, line: 273, baseType: !2205, size: 64, offset: 896)
!2205 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_dump_bb_problem_function", file: !385, line: 244, baseType: !2206)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2207, size: 64)
!2207 = !DISubroutineType(types: !2208)
!2208 = !{null, !1307, !2154}
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "dump_bottom_fun", scope: !2064, file: !385, line: 274, baseType: !2205, size: 64, offset: 960)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "verify_start_fun", scope: !2064, file: !385, line: 275, baseType: !2211, size: 64, offset: 1024)
!2211 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_verify_solution_start", file: !385, line: 247, baseType: !2144)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "verify_end_fun", scope: !2064, file: !385, line: 276, baseType: !2213, size: 64, offset: 1088)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_verify_solution_end", file: !385, line: 250, baseType: !2144)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "dependent_problem", scope: !2064, file: !385, line: 277, baseType: !2093, size: 64, offset: 1152)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2064, file: !385, line: 280, baseType: !2216, size: 32, offset: 1216)
!2216 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !391, line: 80, baseType: !390)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "free_blocks_on_set_blocks", scope: !2064, file: !385, line: 284, baseType: !749, size: 8, offset: 1248)
!2218 = !DIGlobalVariableExpression(var: !2219, expr: !DIExpression())
!2219 = distinct !DIGlobalVariable(name: "problem_LIVE", scope: !2, file: !3, line: 1770, type: !2064, isLocal: true, isDefinition: true)
!2220 = !DIGlobalVariableExpression(var: !2221, expr: !DIExpression())
!2221 = distinct !DIGlobalVariable(name: "df_live_scratch", scope: !2, file: !3, line: 1365, type: !758, isLocal: true, isDefinition: true)
!2222 = !DIGlobalVariableExpression(var: !2223, expr: !DIExpression())
!2223 = distinct !DIGlobalVariable(name: "problem_CHAIN", scope: !2, file: !3, line: 2295, type: !2064, isLocal: true, isDefinition: true)
!2224 = !DIGlobalVariableExpression(var: !2225, expr: !DIExpression())
!2225 = distinct !DIGlobalVariable(name: "problem_BYTE_LR", scope: !2, file: !3, line: 2874, type: !2064, isLocal: true, isDefinition: true)
!2226 = !DIGlobalVariableExpression(var: !2227, expr: !DIExpression())
!2227 = distinct !DIGlobalVariable(name: "problem_NOTE", scope: !2, file: !3, line: 3679, type: !2064, isLocal: true, isDefinition: true)
!2228 = !DIGlobalVariableExpression(var: !2229, expr: !DIExpression())
!2229 = distinct !DIGlobalVariable(name: "problem_MD", scope: !2, file: !3, line: 4396, type: !2064, isLocal: true, isDefinition: true)
!2230 = !DIGlobalVariableExpression(var: !2231, expr: !DIExpression())
!2231 = distinct !DIGlobalVariable(name: "df_md_scratch", scope: !2, file: !3, line: 4022, type: !758, isLocal: true, isDefinition: true)
!2232 = !{i32 2, !"Dwarf Version", i32 4}
!2233 = !{i32 2, !"Debug Info Version", i32 3}
!2234 = !{i32 1, !"wchar_size", i32 4}
!2235 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2236 = distinct !DISubprogram(name: "vprintf", scope: !2237, file: !2237, line: 39, type: !2238, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2248)
!2237 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2238 = !DISubroutineType(types: !2239)
!2239 = !{!750, !2240, !2241}
!2240 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !755)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2243)
!2243 = !{!2244, !2245, !2246, !2247}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2242, file: !3, baseType: !7, size: 32)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2242, file: !3, baseType: !7, size: 32, offset: 32)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2242, file: !3, baseType: !754, size: 64, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2242, file: !3, baseType: !754, size: 64, offset: 128)
!2248 = !{!2249, !2250}
!2249 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2236, file: !2237, line: 39, type: !2240)
!2250 = !DILocalVariable(name: "__arg", arg: 2, scope: !2236, file: !2237, line: 39, type: !2241)
!2251 = !DILocation(line: 0, scope: !2236)
!2252 = !DILocation(line: 41, column: 20, scope: !2236)
!2253 = !DILocation(line: 41, column: 10, scope: !2236)
!2254 = !DILocation(line: 41, column: 3, scope: !2236)
!2255 = distinct !DISubprogram(name: "getchar", scope: !2237, file: !2237, line: 47, type: !2256, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!2256 = !DISubroutineType(types: !2257)
!2257 = !{!750}
!2258 = !{}
!2259 = !DILocation(line: 49, column: 16, scope: !2255)
!2260 = !DILocation(line: 49, column: 10, scope: !2255)
!2261 = !DILocation(line: 49, column: 3, scope: !2255)
!2262 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2237, file: !2237, line: 56, type: !2263, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2265)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!750, !2154}
!2265 = !{!2266}
!2266 = !DILocalVariable(name: "__fp", arg: 1, scope: !2262, file: !2237, line: 56, type: !2154)
!2267 = !DILocation(line: 0, scope: !2262)
!2268 = !DILocation(line: 58, column: 10, scope: !2262)
!2269 = !DILocation(line: 58, column: 3, scope: !2262)
!2270 = distinct !DISubprogram(name: "getc_unlocked", scope: !2237, file: !2237, line: 66, type: !2263, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2271)
!2271 = !{!2272}
!2272 = !DILocalVariable(name: "__fp", arg: 1, scope: !2270, file: !2237, line: 66, type: !2154)
!2273 = !DILocation(line: 0, scope: !2270)
!2274 = !DILocation(line: 68, column: 10, scope: !2270)
!2275 = !DILocation(line: 68, column: 3, scope: !2270)
!2276 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2237, file: !2237, line: 73, type: !2256, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!2277 = !DILocation(line: 75, column: 10, scope: !2276)
!2278 = !DILocation(line: 75, column: 3, scope: !2276)
!2279 = distinct !DISubprogram(name: "putchar", scope: !2237, file: !2237, line: 82, type: !2280, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2282)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{!750, !750}
!2282 = !{!2283}
!2283 = !DILocalVariable(name: "__c", arg: 1, scope: !2279, file: !2237, line: 82, type: !750)
!2284 = !DILocation(line: 0, scope: !2279)
!2285 = !DILocation(line: 84, column: 21, scope: !2279)
!2286 = !DILocation(line: 84, column: 10, scope: !2279)
!2287 = !DILocation(line: 84, column: 3, scope: !2279)
!2288 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2237, file: !2237, line: 91, type: !2289, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2291)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!750, !750, !2154}
!2291 = !{!2292, !2293}
!2292 = !DILocalVariable(name: "__c", arg: 1, scope: !2288, file: !2237, line: 91, type: !750)
!2293 = !DILocalVariable(name: "__stream", arg: 2, scope: !2288, file: !2237, line: 91, type: !2154)
!2294 = !DILocation(line: 0, scope: !2288)
!2295 = !DILocation(line: 93, column: 10, scope: !2288)
!2296 = !DILocation(line: 93, column: 3, scope: !2288)
!2297 = distinct !DISubprogram(name: "putc_unlocked", scope: !2237, file: !2237, line: 101, type: !2289, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2298)
!2298 = !{!2299, !2300}
!2299 = !DILocalVariable(name: "__c", arg: 1, scope: !2297, file: !2237, line: 101, type: !750)
!2300 = !DILocalVariable(name: "__stream", arg: 2, scope: !2297, file: !2237, line: 101, type: !2154)
!2301 = !DILocation(line: 0, scope: !2297)
!2302 = !DILocation(line: 103, column: 10, scope: !2297)
!2303 = !DILocation(line: 103, column: 3, scope: !2297)
!2304 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2237, file: !2237, line: 108, type: !2280, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2305)
!2305 = !{!2306}
!2306 = !DILocalVariable(name: "__c", arg: 1, scope: !2304, file: !2237, line: 108, type: !750)
!2307 = !DILocation(line: 0, scope: !2304)
!2308 = !DILocation(line: 110, column: 10, scope: !2304)
!2309 = !DILocation(line: 110, column: 3, scope: !2304)
!2310 = distinct !DISubprogram(name: "getline", scope: !2237, file: !2237, line: 118, type: !2311, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2315)
!2311 = !DISubroutineType(types: !2312)
!2312 = !{!2313, !751, !2314, !2154}
!2313 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2181, line: 193, baseType: !793)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!2315 = !{!2316, !2317, !2318}
!2316 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2310, file: !2237, line: 118, type: !751)
!2317 = !DILocalVariable(name: "__n", arg: 2, scope: !2310, file: !2237, line: 118, type: !2314)
!2318 = !DILocalVariable(name: "__stream", arg: 3, scope: !2310, file: !2237, line: 118, type: !2154)
!2319 = !DILocation(line: 0, scope: !2310)
!2320 = !DILocation(line: 120, column: 10, scope: !2310)
!2321 = !DILocation(line: 120, column: 3, scope: !2310)
!2322 = distinct !DISubprogram(name: "feof_unlocked", scope: !2237, file: !2237, line: 128, type: !2263, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2323)
!2323 = !{!2324}
!2324 = !DILocalVariable(name: "__stream", arg: 1, scope: !2322, file: !2237, line: 128, type: !2154)
!2325 = !DILocation(line: 0, scope: !2322)
!2326 = !DILocation(line: 130, column: 10, scope: !2322)
!2327 = !DILocation(line: 130, column: 3, scope: !2322)
!2328 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2237, file: !2237, line: 135, type: !2263, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2329)
!2329 = !{!2330}
!2330 = !DILocalVariable(name: "__stream", arg: 1, scope: !2328, file: !2237, line: 135, type: !2154)
!2331 = !DILocation(line: 0, scope: !2328)
!2332 = !DILocation(line: 137, column: 10, scope: !2328)
!2333 = !DILocation(line: 137, column: 3, scope: !2328)
!2334 = distinct !DISubprogram(name: "tolower", scope: !2335, file: !2335, line: 207, type: !2280, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2336)
!2335 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2336 = !{!2337}
!2337 = !DILocalVariable(name: "__c", arg: 1, scope: !2334, file: !2335, line: 207, type: !750)
!2338 = !DILocation(line: 0, scope: !2334)
!2339 = !DILocation(line: 209, column: 22, scope: !2334)
!2340 = !DILocation(line: 209, column: 39, scope: !2334)
!2341 = !DILocation(line: 209, column: 38, scope: !2334)
!2342 = !DILocation(line: 209, column: 37, scope: !2334)
!2343 = !DILocation(line: 209, column: 10, scope: !2334)
!2344 = !DILocation(line: 209, column: 3, scope: !2334)
!2345 = distinct !DISubprogram(name: "toupper", scope: !2335, file: !2335, line: 213, type: !2280, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2346)
!2346 = !{!2347}
!2347 = !DILocalVariable(name: "__c", arg: 1, scope: !2345, file: !2335, line: 213, type: !750)
!2348 = !DILocation(line: 0, scope: !2345)
!2349 = !DILocation(line: 215, column: 22, scope: !2345)
!2350 = !DILocation(line: 215, column: 39, scope: !2345)
!2351 = !DILocation(line: 215, column: 38, scope: !2345)
!2352 = !DILocation(line: 215, column: 37, scope: !2345)
!2353 = !DILocation(line: 215, column: 10, scope: !2345)
!2354 = !DILocation(line: 215, column: 3, scope: !2345)
!2355 = distinct !DISubprogram(name: "atoi", scope: !2356, file: !2356, line: 361, type: !2357, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2359)
!2356 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2357 = !DISubroutineType(types: !2358)
!2358 = !{!750, !755}
!2359 = !{!2360}
!2360 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2355, file: !2356, line: 361, type: !755)
!2361 = !DILocation(line: 0, scope: !2355)
!2362 = !DILocation(line: 363, column: 16, scope: !2355)
!2363 = !DILocation(line: 363, column: 10, scope: !2355)
!2364 = !DILocation(line: 363, column: 3, scope: !2355)
!2365 = distinct !DISubprogram(name: "atol", scope: !2356, file: !2356, line: 366, type: !2366, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2368)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{!793, !755}
!2368 = !{!2369}
!2369 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2365, file: !2356, line: 366, type: !755)
!2370 = !DILocation(line: 0, scope: !2365)
!2371 = !DILocation(line: 368, column: 10, scope: !2365)
!2372 = !DILocation(line: 368, column: 3, scope: !2365)
!2373 = distinct !DISubprogram(name: "atoll", scope: !2356, file: !2356, line: 373, type: !2374, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2377)
!2374 = !DISubroutineType(types: !2375)
!2375 = !{!2376, !755}
!2376 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2377 = !{!2378}
!2378 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2373, file: !2356, line: 373, type: !755)
!2379 = !DILocation(line: 0, scope: !2373)
!2380 = !DILocation(line: 375, column: 10, scope: !2373)
!2381 = !DILocation(line: 375, column: 3, scope: !2373)
!2382 = distinct !DISubprogram(name: "bsearch", scope: !2383, file: !2383, line: 20, type: !2384, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2387)
!2383 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2384 = !DISubroutineType(types: !2385)
!2385 = !{!754, !1231, !1231, !1245, !1245, !2386}
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2356, line: 808, baseType: !1235)
!2387 = !{!2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397}
!2388 = !DILocalVariable(name: "__key", arg: 1, scope: !2382, file: !2383, line: 20, type: !1231)
!2389 = !DILocalVariable(name: "__base", arg: 2, scope: !2382, file: !2383, line: 20, type: !1231)
!2390 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2382, file: !2383, line: 20, type: !1245)
!2391 = !DILocalVariable(name: "__size", arg: 4, scope: !2382, file: !2383, line: 20, type: !1245)
!2392 = !DILocalVariable(name: "__compar", arg: 5, scope: !2382, file: !2383, line: 21, type: !2386)
!2393 = !DILocalVariable(name: "__l", scope: !2382, file: !2383, line: 23, type: !1245)
!2394 = !DILocalVariable(name: "__u", scope: !2382, file: !2383, line: 23, type: !1245)
!2395 = !DILocalVariable(name: "__idx", scope: !2382, file: !2383, line: 23, type: !1245)
!2396 = !DILocalVariable(name: "__p", scope: !2382, file: !2383, line: 24, type: !1231)
!2397 = !DILocalVariable(name: "__comparison", scope: !2382, file: !2383, line: 25, type: !750)
!2398 = !DILocation(line: 0, scope: !2382)
!2399 = !DILocation(line: 29, column: 3, scope: !2382)
!2400 = !DILocation(line: 27, column: 7, scope: !2382)
!2401 = !DILocation(line: 29, column: 14, scope: !2382)
!2402 = !DILocation(line: 31, column: 20, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2382, file: !2383, line: 30, column: 5)
!2404 = !DILocation(line: 31, column: 27, scope: !2403)
!2405 = !DILocation(line: 32, column: 56, scope: !2403)
!2406 = !DILocation(line: 32, column: 47, scope: !2403)
!2407 = !DILocation(line: 33, column: 22, scope: !2403)
!2408 = !DILocation(line: 34, column: 24, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2403, file: !2383, line: 34, column: 11)
!2410 = !DILocation(line: 34, column: 11, scope: !2403)
!2411 = !DILocation(line: 36, column: 29, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2409, file: !2383, line: 36, column: 16)
!2413 = !DILocation(line: 36, column: 16, scope: !2409)
!2414 = !DILocation(line: 37, column: 14, scope: !2412)
!2415 = distinct !{!2415, !2399, !2416}
!2416 = !DILocation(line: 40, column: 5, scope: !2382)
!2417 = !DILocation(line: 43, column: 1, scope: !2382)
!2418 = distinct !DISubprogram(name: "atof", scope: !2419, file: !2419, line: 25, type: !2420, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2423)
!2419 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2420 = !DISubroutineType(types: !2421)
!2421 = !{!2422, !755}
!2422 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2423 = !{!2424}
!2424 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2418, file: !2419, line: 25, type: !755)
!2425 = !DILocation(line: 0, scope: !2418)
!2426 = !DILocation(line: 27, column: 10, scope: !2418)
!2427 = !DILocation(line: 27, column: 3, scope: !2418)
!2428 = distinct !DISubprogram(name: "strtoimax", scope: !2429, file: !2429, line: 324, type: !2430, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2436)
!2429 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2430 = !DISubroutineType(types: !2431)
!2431 = !{!2432, !2240, !2435, !750}
!2432 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2433, line: 101, baseType: !2434)
!2433 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2434 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2181, line: 72, baseType: !793)
!2435 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !751)
!2436 = !{!2437, !2438, !2439}
!2437 = !DILocalVariable(name: "nptr", arg: 1, scope: !2428, file: !2429, line: 324, type: !2240)
!2438 = !DILocalVariable(name: "endptr", arg: 2, scope: !2428, file: !2429, line: 324, type: !2435)
!2439 = !DILocalVariable(name: "base", arg: 3, scope: !2428, file: !2429, line: 324, type: !750)
!2440 = !DILocation(line: 0, scope: !2428)
!2441 = !DILocation(line: 327, column: 10, scope: !2428)
!2442 = !DILocation(line: 327, column: 3, scope: !2428)
!2443 = distinct !DISubprogram(name: "strtoumax", scope: !2429, file: !2429, line: 336, type: !2444, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2448)
!2444 = !DISubroutineType(types: !2445)
!2445 = !{!2446, !2240, !2435, !750}
!2446 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2433, line: 102, baseType: !2447)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2181, line: 73, baseType: !776)
!2448 = !{!2449, !2450, !2451}
!2449 = !DILocalVariable(name: "nptr", arg: 1, scope: !2443, file: !2429, line: 336, type: !2240)
!2450 = !DILocalVariable(name: "endptr", arg: 2, scope: !2443, file: !2429, line: 336, type: !2435)
!2451 = !DILocalVariable(name: "base", arg: 3, scope: !2443, file: !2429, line: 336, type: !750)
!2452 = !DILocation(line: 0, scope: !2443)
!2453 = !DILocation(line: 339, column: 10, scope: !2443)
!2454 = !DILocation(line: 339, column: 3, scope: !2443)
!2455 = distinct !DISubprogram(name: "wcstoimax", scope: !2429, file: !2429, line: 348, type: !2456, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2465)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!2432, !2458, !2462, !750}
!2458 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2459)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2461)
!2461 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2429, line: 34, baseType: !750)
!2462 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2463)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2465 = !{!2466, !2467, !2468}
!2466 = !DILocalVariable(name: "nptr", arg: 1, scope: !2455, file: !2429, line: 348, type: !2458)
!2467 = !DILocalVariable(name: "endptr", arg: 2, scope: !2455, file: !2429, line: 348, type: !2462)
!2468 = !DILocalVariable(name: "base", arg: 3, scope: !2455, file: !2429, line: 348, type: !750)
!2469 = !DILocation(line: 0, scope: !2455)
!2470 = !DILocation(line: 351, column: 10, scope: !2455)
!2471 = !DILocation(line: 351, column: 3, scope: !2455)
!2472 = distinct !DISubprogram(name: "wcstoumax", scope: !2429, file: !2429, line: 362, type: !2473, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2475)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!2446, !2458, !2462, !750}
!2475 = !{!2476, !2477, !2478}
!2476 = !DILocalVariable(name: "nptr", arg: 1, scope: !2472, file: !2429, line: 362, type: !2458)
!2477 = !DILocalVariable(name: "endptr", arg: 2, scope: !2472, file: !2429, line: 362, type: !2462)
!2478 = !DILocalVariable(name: "base", arg: 3, scope: !2472, file: !2429, line: 362, type: !750)
!2479 = !DILocation(line: 0, scope: !2472)
!2480 = !DILocation(line: 365, column: 10, scope: !2472)
!2481 = !DILocation(line: 365, column: 3, scope: !2472)
!2482 = distinct !DISubprogram(name: "stat", scope: !2483, file: !2483, line: 453, type: !2484, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2521)
!2483 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2484 = !DISubroutineType(types: !2485)
!2485 = !{!750, !755, !2486}
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2488, line: 46, size: 1152, elements: !2489)
!2488 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2489 = !{!2490, !2492, !2494, !2496, !2498, !2500, !2502, !2503, !2504, !2505, !2507, !2509, !2517, !2518, !2519}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2487, file: !2488, line: 48, baseType: !2491, size: 64)
!2491 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2181, line: 145, baseType: !776)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2487, file: !2488, line: 53, baseType: !2493, size: 64, offset: 64)
!2493 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2181, line: 148, baseType: !776)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2487, file: !2488, line: 61, baseType: !2495, size: 64, offset: 128)
!2495 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2181, line: 151, baseType: !776)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2487, file: !2488, line: 62, baseType: !2497, size: 32, offset: 192)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2181, line: 150, baseType: !7)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2487, file: !2488, line: 64, baseType: !2499, size: 32, offset: 224)
!2499 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2181, line: 146, baseType: !7)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2487, file: !2488, line: 65, baseType: !2501, size: 32, offset: 256)
!2501 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2181, line: 147, baseType: !7)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2487, file: !2488, line: 67, baseType: !750, size: 32, offset: 288)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2487, file: !2488, line: 69, baseType: !2491, size: 64, offset: 320)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2487, file: !2488, line: 74, baseType: !2180, size: 64, offset: 384)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2487, file: !2488, line: 78, baseType: !2506, size: 64, offset: 448)
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2181, line: 174, baseType: !793)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2487, file: !2488, line: 80, baseType: !2508, size: 64, offset: 512)
!2508 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2181, line: 179, baseType: !793)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2487, file: !2488, line: 91, baseType: !2510, size: 128, offset: 576)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2511, line: 10, size: 128, elements: !2512)
!2511 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2512 = !{!2513, !2515}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2510, file: !2511, line: 12, baseType: !2514, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2181, line: 160, baseType: !793)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2510, file: !2511, line: 16, baseType: !2516, size: 64, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2181, line: 196, baseType: !793)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2487, file: !2488, line: 92, baseType: !2510, size: 128, offset: 704)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2487, file: !2488, line: 93, baseType: !2510, size: 128, offset: 832)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2487, file: !2488, line: 106, baseType: !2520, size: 192, offset: 960)
!2520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2516, size: 192, elements: !961)
!2521 = !{!2522, !2523}
!2522 = !DILocalVariable(name: "__path", arg: 1, scope: !2482, file: !2483, line: 453, type: !755)
!2523 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2482, file: !2483, line: 453, type: !2486)
!2524 = !DILocation(line: 0, scope: !2482)
!2525 = !DILocation(line: 455, column: 10, scope: !2482)
!2526 = !DILocation(line: 455, column: 3, scope: !2482)
!2527 = distinct !DISubprogram(name: "lstat", scope: !2483, file: !2483, line: 460, type: !2484, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2528)
!2528 = !{!2529, !2530}
!2529 = !DILocalVariable(name: "__path", arg: 1, scope: !2527, file: !2483, line: 460, type: !755)
!2530 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2527, file: !2483, line: 460, type: !2486)
!2531 = !DILocation(line: 0, scope: !2527)
!2532 = !DILocation(line: 462, column: 10, scope: !2527)
!2533 = !DILocation(line: 462, column: 3, scope: !2527)
!2534 = distinct !DISubprogram(name: "fstat", scope: !2483, file: !2483, line: 467, type: !2535, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2537)
!2535 = !DISubroutineType(types: !2536)
!2536 = !{!750, !750, !2486}
!2537 = !{!2538, !2539}
!2538 = !DILocalVariable(name: "__fd", arg: 1, scope: !2534, file: !2483, line: 467, type: !750)
!2539 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2534, file: !2483, line: 467, type: !2486)
!2540 = !DILocation(line: 0, scope: !2534)
!2541 = !DILocation(line: 469, column: 10, scope: !2534)
!2542 = !DILocation(line: 469, column: 3, scope: !2534)
!2543 = distinct !DISubprogram(name: "fstatat", scope: !2483, file: !2483, line: 474, type: !2544, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2546)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{!750, !750, !755, !2486, !750}
!2546 = !{!2547, !2548, !2549, !2550}
!2547 = !DILocalVariable(name: "__fd", arg: 1, scope: !2543, file: !2483, line: 474, type: !750)
!2548 = !DILocalVariable(name: "__filename", arg: 2, scope: !2543, file: !2483, line: 474, type: !755)
!2549 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2543, file: !2483, line: 474, type: !2486)
!2550 = !DILocalVariable(name: "__flag", arg: 4, scope: !2543, file: !2483, line: 474, type: !750)
!2551 = !DILocation(line: 0, scope: !2543)
!2552 = !DILocation(line: 477, column: 10, scope: !2543)
!2553 = !DILocation(line: 477, column: 3, scope: !2543)
!2554 = distinct !DISubprogram(name: "mknod", scope: !2483, file: !2483, line: 483, type: !2555, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2557)
!2555 = !DISubroutineType(types: !2556)
!2556 = !{!750, !755, !2497, !2491}
!2557 = !{!2558, !2559, !2560}
!2558 = !DILocalVariable(name: "__path", arg: 1, scope: !2554, file: !2483, line: 483, type: !755)
!2559 = !DILocalVariable(name: "__mode", arg: 2, scope: !2554, file: !2483, line: 483, type: !2497)
!2560 = !DILocalVariable(name: "__dev", arg: 3, scope: !2554, file: !2483, line: 483, type: !2491)
!2561 = !DILocation(line: 0, scope: !2554)
!2562 = !DILocation(line: 485, column: 10, scope: !2554)
!2563 = !DILocation(line: 485, column: 3, scope: !2554)
!2564 = distinct !DISubprogram(name: "mknodat", scope: !2483, file: !2483, line: 491, type: !2565, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2567)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{!750, !750, !755, !2497, !2491}
!2567 = !{!2568, !2569, !2570, !2571}
!2568 = !DILocalVariable(name: "__fd", arg: 1, scope: !2564, file: !2483, line: 491, type: !750)
!2569 = !DILocalVariable(name: "__path", arg: 2, scope: !2564, file: !2483, line: 491, type: !755)
!2570 = !DILocalVariable(name: "__mode", arg: 3, scope: !2564, file: !2483, line: 491, type: !2497)
!2571 = !DILocalVariable(name: "__dev", arg: 4, scope: !2564, file: !2483, line: 491, type: !2491)
!2572 = !DILocation(line: 0, scope: !2564)
!2573 = !DILocation(line: 494, column: 10, scope: !2564)
!2574 = !DILocation(line: 494, column: 3, scope: !2564)
!2575 = distinct !DISubprogram(name: "stat64", scope: !2483, file: !2483, line: 502, type: !2576, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2598)
!2576 = !DISubroutineType(types: !2577)
!2577 = !{!750, !755, !2578}
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2488, line: 119, size: 1152, elements: !2580)
!2580 = !{!2581, !2582, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2594, !2595, !2596, !2597}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2579, file: !2488, line: 121, baseType: !2491, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2579, file: !2488, line: 123, baseType: !2583, size: 64, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2181, line: 149, baseType: !776)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2579, file: !2488, line: 124, baseType: !2495, size: 64, offset: 128)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2579, file: !2488, line: 125, baseType: !2497, size: 32, offset: 192)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2579, file: !2488, line: 132, baseType: !2499, size: 32, offset: 224)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2579, file: !2488, line: 133, baseType: !2501, size: 32, offset: 256)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2579, file: !2488, line: 135, baseType: !750, size: 32, offset: 288)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2579, file: !2488, line: 136, baseType: !2491, size: 64, offset: 320)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2579, file: !2488, line: 137, baseType: !2180, size: 64, offset: 384)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2579, file: !2488, line: 143, baseType: !2506, size: 64, offset: 448)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2579, file: !2488, line: 144, baseType: !2593, size: 64, offset: 512)
!2593 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2181, line: 180, baseType: !793)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2579, file: !2488, line: 152, baseType: !2510, size: 128, offset: 576)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2579, file: !2488, line: 153, baseType: !2510, size: 128, offset: 704)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2579, file: !2488, line: 154, baseType: !2510, size: 128, offset: 832)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2579, file: !2488, line: 164, baseType: !2520, size: 192, offset: 960)
!2598 = !{!2599, !2600}
!2599 = !DILocalVariable(name: "__path", arg: 1, scope: !2575, file: !2483, line: 502, type: !755)
!2600 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2575, file: !2483, line: 502, type: !2578)
!2601 = !DILocation(line: 0, scope: !2575)
!2602 = !DILocation(line: 504, column: 10, scope: !2575)
!2603 = !DILocation(line: 504, column: 3, scope: !2575)
!2604 = distinct !DISubprogram(name: "lstat64", scope: !2483, file: !2483, line: 509, type: !2576, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2605)
!2605 = !{!2606, !2607}
!2606 = !DILocalVariable(name: "__path", arg: 1, scope: !2604, file: !2483, line: 509, type: !755)
!2607 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2604, file: !2483, line: 509, type: !2578)
!2608 = !DILocation(line: 0, scope: !2604)
!2609 = !DILocation(line: 511, column: 10, scope: !2604)
!2610 = !DILocation(line: 511, column: 3, scope: !2604)
!2611 = distinct !DISubprogram(name: "fstat64", scope: !2483, file: !2483, line: 516, type: !2612, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2614)
!2612 = !DISubroutineType(types: !2613)
!2613 = !{!750, !750, !2578}
!2614 = !{!2615, !2616}
!2615 = !DILocalVariable(name: "__fd", arg: 1, scope: !2611, file: !2483, line: 516, type: !750)
!2616 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2611, file: !2483, line: 516, type: !2578)
!2617 = !DILocation(line: 0, scope: !2611)
!2618 = !DILocation(line: 518, column: 10, scope: !2611)
!2619 = !DILocation(line: 518, column: 3, scope: !2611)
!2620 = distinct !DISubprogram(name: "fstatat64", scope: !2483, file: !2483, line: 523, type: !2621, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2623)
!2621 = !DISubroutineType(types: !2622)
!2622 = !{!750, !750, !755, !2578, !750}
!2623 = !{!2624, !2625, !2626, !2627}
!2624 = !DILocalVariable(name: "__fd", arg: 1, scope: !2620, file: !2483, line: 523, type: !750)
!2625 = !DILocalVariable(name: "__filename", arg: 2, scope: !2620, file: !2483, line: 523, type: !755)
!2626 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2620, file: !2483, line: 523, type: !2578)
!2627 = !DILocalVariable(name: "__flag", arg: 4, scope: !2620, file: !2483, line: 523, type: !750)
!2628 = !DILocation(line: 0, scope: !2620)
!2629 = !DILocation(line: 526, column: 10, scope: !2620)
!2630 = !DILocation(line: 526, column: 3, scope: !2620)
!2631 = distinct !DISubprogram(name: "df_get_live_out", scope: !3, file: !3, line: 70, type: !2632, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2634)
!2632 = !DISubroutineType(types: !2633)
!2633 = !{!758, !1307}
!2634 = !{!2635}
!2635 = !DILocalVariable(name: "bb", arg: 1, scope: !2631, file: !3, line: 70, type: !1307)
!2636 = !DILocation(line: 0, scope: !2631)
!2637 = !DILocation(line: 72, column: 3, scope: !2631)
!2638 = !DILocation(line: 74, column: 7, scope: !2639)
!2639 = distinct !DILexicalBlock(scope: !2631, file: !3, line: 74, column: 7)
!2640 = !DILocation(line: 0, scope: !2639)
!2641 = !DILocation(line: 74, column: 7, scope: !2631)
!2642 = !DILocation(line: 75, column: 12, scope: !2639)
!2643 = !DILocation(line: 75, column: 5, scope: !2639)
!2644 = !DILocation(line: 77, column: 12, scope: !2639)
!2645 = !DILocation(line: 77, column: 5, scope: !2639)
!2646 = !DILocation(line: 78, column: 1, scope: !2631)
!2647 = distinct !DISubprogram(name: "df_live_get_bb_info", scope: !385, file: !385, line: 1070, type: !2648, scopeLine: 1071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2650)
!2648 = !DISubroutineType(types: !2649)
!2649 = !{!1997, !7}
!2650 = !{!2651}
!2651 = !DILocalVariable(name: "index", arg: 1, scope: !2647, file: !385, line: 1070, type: !7)
!2652 = !DILocation(line: 0, scope: !2647)
!2653 = !DILocation(line: 1072, column: 15, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2647, file: !385, line: 1072, column: 7)
!2655 = !DILocation(line: 1072, column: 24, scope: !2654)
!2656 = !DILocation(line: 1072, column: 13, scope: !2654)
!2657 = !DILocation(line: 1072, column: 7, scope: !2647)
!2658 = !DILocation(line: 1073, column: 48, scope: !2654)
!2659 = !DILocation(line: 1073, column: 39, scope: !2654)
!2660 = !DILocation(line: 1073, column: 5, scope: !2654)
!2661 = !DILocation(line: 0, scope: !2654)
!2662 = !DILocation(line: 1076, column: 1, scope: !2647)
!2663 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !385, file: !385, line: 1052, type: !2664, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2666)
!2664 = !DISubroutineType(types: !2665)
!2665 = !{!2004, !7}
!2666 = !{!2667}
!2667 = !DILocalVariable(name: "index", arg: 1, scope: !2663, file: !385, line: 1052, type: !7)
!2668 = !DILocation(line: 0, scope: !2663)
!2669 = !DILocation(line: 1054, column: 15, scope: !2670)
!2670 = distinct !DILexicalBlock(scope: !2663, file: !385, line: 1054, column: 7)
!2671 = !DILocation(line: 1054, column: 22, scope: !2670)
!2672 = !DILocation(line: 1054, column: 13, scope: !2670)
!2673 = !DILocation(line: 1054, column: 7, scope: !2663)
!2674 = !DILocation(line: 1055, column: 44, scope: !2670)
!2675 = !DILocation(line: 1055, column: 37, scope: !2670)
!2676 = !DILocation(line: 1055, column: 5, scope: !2670)
!2677 = !DILocation(line: 0, scope: !2670)
!2678 = !DILocation(line: 1058, column: 1, scope: !2663)
!2679 = distinct !DISubprogram(name: "df_get_live_in", scope: !3, file: !3, line: 86, type: !2632, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2680)
!2680 = !{!2681}
!2681 = !DILocalVariable(name: "bb", arg: 1, scope: !2679, file: !3, line: 86, type: !1307)
!2682 = !DILocation(line: 0, scope: !2679)
!2683 = !DILocation(line: 88, column: 3, scope: !2679)
!2684 = !DILocation(line: 90, column: 7, scope: !2685)
!2685 = distinct !DILexicalBlock(scope: !2679, file: !3, line: 90, column: 7)
!2686 = !DILocation(line: 0, scope: !2685)
!2687 = !DILocation(line: 90, column: 7, scope: !2679)
!2688 = !DILocation(line: 91, column: 12, scope: !2685)
!2689 = !DILocation(line: 91, column: 5, scope: !2685)
!2690 = !DILocation(line: 93, column: 12, scope: !2685)
!2691 = !DILocation(line: 93, column: 5, scope: !2685)
!2692 = !DILocation(line: 94, column: 1, scope: !2679)
!2693 = distinct !DISubprogram(name: "df_grow_bb_info", scope: !3, file: !3, line: 106, type: !2694, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2696)
!2694 = !DISubroutineType(types: !2695)
!2695 = !{null, !2089}
!2696 = !{!2697, !2698}
!2697 = !DILocalVariable(name: "dflow", arg: 1, scope: !2693, file: !3, line: 106, type: !2089)
!2698 = !DILocalVariable(name: "new_size", scope: !2693, file: !3, line: 108, type: !7)
!2699 = !DILocation(line: 0, scope: !2693)
!2700 = !DILocation(line: 108, column: 27, scope: !2693)
!2701 = !DILocation(line: 108, column: 44, scope: !2693)
!2702 = !DILocation(line: 109, column: 14, scope: !2703)
!2703 = distinct !DILexicalBlock(scope: !2693, file: !3, line: 109, column: 7)
!2704 = !DILocation(line: 109, column: 30, scope: !2703)
!2705 = !DILocation(line: 109, column: 7, scope: !2693)
!2706 = !DILocation(line: 111, column: 28, scope: !2707)
!2707 = distinct !DILexicalBlock(scope: !2703, file: !3, line: 110, column: 5)
!2708 = !DILocation(line: 111, column: 16, scope: !2707)
!2709 = !DILocation(line: 112, column: 27, scope: !2707)
!2710 = !DILocation(line: 112, column: 25, scope: !2707)
!2711 = !DILocation(line: 113, column: 22, scope: !2707)
!2712 = !DILocation(line: 113, column: 42, scope: !2707)
!2713 = !DILocation(line: 113, column: 33, scope: !2707)
!2714 = !DILocation(line: 113, column: 15, scope: !2707)
!2715 = !DILocation(line: 114, column: 18, scope: !2707)
!2716 = !DILocation(line: 114, column: 8, scope: !2707)
!2717 = !DILocation(line: 114, column: 44, scope: !2707)
!2718 = !DILocation(line: 113, column: 7, scope: !2707)
!2719 = !DILocation(line: 115, column: 30, scope: !2707)
!2720 = !DILocation(line: 116, column: 5, scope: !2707)
!2721 = !DILocation(line: 117, column: 1, scope: !2693)
!2722 = distinct !DISubprogram(name: "df_chain_dump", scope: !3, file: !3, line: 122, type: !2723, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2725)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{null, !821, !2154}
!2725 = !{!2726, !2727}
!2726 = !DILocalVariable(name: "link", arg: 1, scope: !2722, file: !3, line: 122, type: !821)
!2727 = !DILocalVariable(name: "file", arg: 2, scope: !2722, file: !3, line: 122, type: !2154)
!2728 = !DILocation(line: 0, scope: !2722)
!2729 = !DILocation(line: 124, column: 3, scope: !2722)
!2730 = !DILocation(line: 125, column: 3, scope: !2722)
!2731 = !DILocation(line: 125, column: 3, scope: !2732)
!2732 = distinct !DILexicalBlock(scope: !2722, file: !3, line: 125, column: 3)
!2733 = !DILocation(line: 128, column: 9, scope: !2734)
!2734 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 126, column: 5)
!2735 = distinct !DILexicalBlock(scope: !2732, file: !3, line: 125, column: 3)
!2736 = !DILocation(line: 129, column: 9, scope: !2734)
!2737 = !DILocation(line: 130, column: 9, scope: !2734)
!2738 = !DILocation(line: 131, column: 9, scope: !2734)
!2739 = !DILocation(line: 131, column: 49, scope: !2734)
!2740 = !DILocation(line: 127, column: 7, scope: !2734)
!2741 = !DILocation(line: 125, column: 29, scope: !2735)
!2742 = !DILocation(line: 125, column: 3, scope: !2735)
!2743 = distinct !{!2743, !2731, !2744}
!2744 = !DILocation(line: 132, column: 5, scope: !2732)
!2745 = !DILocation(line: 133, column: 3, scope: !2722)
!2746 = !DILocation(line: 134, column: 1, scope: !2722)
!2747 = distinct !DISubprogram(name: "df_print_bb_index", scope: !3, file: !3, line: 140, type: !2207, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2748)
!2748 = !{!2749, !2750, !2751, !2752, !2759, !2763}
!2749 = !DILocalVariable(name: "bb", arg: 1, scope: !2747, file: !3, line: 140, type: !1307)
!2750 = !DILocalVariable(name: "file", arg: 2, scope: !2747, file: !3, line: 140, type: !2154)
!2751 = !DILocalVariable(name: "e", scope: !2747, file: !3, line: 142, type: !1324)
!2752 = !DILocalVariable(name: "ei", scope: !2747, file: !3, line: 143, type: !2753)
!2753 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !142, line: 682, baseType: !2754)
!2754 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !142, line: 679, size: 128, elements: !2755)
!2755 = !{!2756, !2757}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2754, file: !142, line: 680, baseType: !7, size: 32)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2754, file: !142, line: 681, baseType: !2758, size: 64, offset: 64)
!2758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!2759 = !DILocalVariable(name: "pred", scope: !2760, file: !3, line: 148, type: !1307)
!2760 = distinct !DILexicalBlock(scope: !2761, file: !3, line: 147, column: 5)
!2761 = distinct !DILexicalBlock(scope: !2762, file: !3, line: 146, column: 5)
!2762 = distinct !DILexicalBlock(scope: !2747, file: !3, line: 146, column: 5)
!2763 = !DILocalVariable(name: "succ", scope: !2764, file: !3, line: 154, type: !1307)
!2764 = distinct !DILexicalBlock(scope: !2765, file: !3, line: 153, column: 5)
!2765 = distinct !DILexicalBlock(scope: !2766, file: !3, line: 152, column: 3)
!2766 = distinct !DILexicalBlock(scope: !2747, file: !3, line: 152, column: 3)
!2767 = !DILocation(line: 0, scope: !2747)
!2768 = !DILocation(line: 142, column: 3, scope: !2747)
!2769 = !DILocation(line: 143, column: 3, scope: !2747)
!2770 = !DILocation(line: 145, column: 3, scope: !2747)
!2771 = !DILocation(line: 146, column: 5, scope: !2762)
!2772 = !DILocation(line: 0, scope: !2761)
!2773 = !DILocation(line: 146, column: 5, scope: !2761)
!2774 = !DILocation(line: 148, column: 26, scope: !2760)
!2775 = !DILocation(line: 148, column: 29, scope: !2760)
!2776 = !DILocation(line: 0, scope: !2760)
!2777 = !DILocation(line: 149, column: 37, scope: !2760)
!2778 = !DILocation(line: 149, column: 47, scope: !2760)
!2779 = !DILocation(line: 149, column: 53, scope: !2760)
!2780 = !DILocation(line: 149, column: 44, scope: !2760)
!2781 = !DILocation(line: 149, column: 7, scope: !2760)
!2782 = distinct !{!2782, !2771, !2783}
!2783 = !DILocation(line: 150, column: 5, scope: !2762)
!2784 = !DILocation(line: 151, column: 37, scope: !2747)
!2785 = !DILocation(line: 151, column: 3, scope: !2747)
!2786 = !DILocation(line: 152, column: 3, scope: !2766)
!2787 = !DILocation(line: 152, column: 3, scope: !2765)
!2788 = !DILocation(line: 154, column: 26, scope: !2764)
!2789 = !DILocation(line: 154, column: 29, scope: !2764)
!2790 = !DILocation(line: 0, scope: !2764)
!2791 = !DILocation(line: 155, column: 37, scope: !2764)
!2792 = !DILocation(line: 155, column: 47, scope: !2764)
!2793 = !DILocation(line: 155, column: 53, scope: !2764)
!2794 = !DILocation(line: 155, column: 44, scope: !2764)
!2795 = !DILocation(line: 155, column: 7, scope: !2764)
!2796 = distinct !{!2796, !2786, !2797}
!2797 = !DILocation(line: 156, column: 5, scope: !2766)
!2798 = !DILocation(line: 157, column: 3, scope: !2747)
!2799 = !DILocation(line: 158, column: 1, scope: !2747)
!2800 = distinct !DISubprogram(name: "ei_start_1", scope: !142, file: !142, line: 696, type: !2801, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2803)
!2801 = !DISubroutineType(types: !2802)
!2802 = !{!2753, !2758}
!2803 = !{!2804, !2805}
!2804 = !DILocalVariable(name: "ev", arg: 1, scope: !2800, file: !142, line: 696, type: !2758)
!2805 = !DILocalVariable(name: "i", scope: !2800, file: !142, line: 698, type: !2753)
!2806 = !DILocation(line: 0, scope: !2800)
!2807 = !DILocation(line: 700, column: 5, scope: !2800)
!2808 = !DILocation(line: 700, column: 11, scope: !2800)
!2809 = !DILocation(line: 701, column: 5, scope: !2800)
!2810 = !DILocation(line: 701, column: 15, scope: !2800)
!2811 = !DILocation(line: 703, column: 3, scope: !2800)
!2812 = distinct !DISubprogram(name: "ei_cond", scope: !142, file: !142, line: 771, type: !2813, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2816)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{!749, !2753, !2815}
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!2816 = !{!2817, !2818}
!2817 = !DILocalVariable(name: "ei", arg: 1, scope: !2812, file: !142, line: 771, type: !2753)
!2818 = !DILocalVariable(name: "p", arg: 2, scope: !2812, file: !142, line: 771, type: !2815)
!2819 = !DILocation(line: 0, scope: !2812)
!2820 = !DILocation(line: 773, column: 8, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2812, file: !142, line: 773, column: 7)
!2822 = !DILocation(line: 773, column: 7, scope: !2812)
!2823 = !DILocation(line: 775, column: 12, scope: !2824)
!2824 = distinct !DILexicalBlock(scope: !2821, file: !142, line: 774, column: 5)
!2825 = !DILocation(line: 776, column: 7, scope: !2824)
!2826 = !DILocation(line: 781, column: 7, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2821, file: !142, line: 779, column: 5)
!2828 = !DILocation(line: 0, scope: !2821)
!2829 = !DILocation(line: 783, column: 1, scope: !2812)
!2830 = distinct !DISubprogram(name: "ei_next", scope: !142, file: !142, line: 736, type: !2831, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2834)
!2831 = !DISubroutineType(types: !2832)
!2832 = !{null, !2833}
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2753, size: 64)
!2834 = !{!2835}
!2835 = !DILocalVariable(name: "i", arg: 1, scope: !2830, file: !142, line: 736, type: !2833)
!2836 = !DILocation(line: 0, scope: !2830)
!2837 = !DILocation(line: 738, column: 3, scope: !2830)
!2838 = !DILocation(line: 739, column: 11, scope: !2830)
!2839 = !DILocation(line: 740, column: 1, scope: !2830)
!2840 = distinct !DISubprogram(name: "df_rd_simulate_artificial_defs_at_top", scope: !3, file: !3, line: 302, type: !2841, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2843)
!2841 = !DISubroutineType(types: !2842)
!2842 = !{null, !1307, !758}
!2843 = !{!2844, !2845, !2846, !2847, !2848, !2852}
!2844 = !DILocalVariable(name: "bb", arg: 1, scope: !2840, file: !3, line: 302, type: !1307)
!2845 = !DILocalVariable(name: "local_rd", arg: 2, scope: !2840, file: !3, line: 302, type: !758)
!2846 = !DILocalVariable(name: "bb_index", scope: !2840, file: !3, line: 304, type: !750)
!2847 = !DILocalVariable(name: "def_rec", scope: !2840, file: !3, line: 305, type: !1948)
!2848 = !DILocalVariable(name: "def", scope: !2849, file: !3, line: 308, type: !825)
!2849 = distinct !DILexicalBlock(scope: !2850, file: !3, line: 307, column: 5)
!2850 = distinct !DILexicalBlock(scope: !2851, file: !3, line: 306, column: 3)
!2851 = distinct !DILexicalBlock(scope: !2840, file: !3, line: 306, column: 3)
!2852 = !DILocalVariable(name: "dregno", scope: !2853, file: !3, line: 311, type: !7)
!2853 = distinct !DILexicalBlock(scope: !2854, file: !3, line: 310, column: 2)
!2854 = distinct !DILexicalBlock(scope: !2849, file: !3, line: 309, column: 11)
!2855 = !DILocation(line: 0, scope: !2840)
!2856 = !DILocation(line: 304, column: 22, scope: !2840)
!2857 = !DILocation(line: 306, column: 18, scope: !2851)
!2858 = !DILocation(line: 306, column: 8, scope: !2851)
!2859 = !DILocation(line: 0, scope: !2851)
!2860 = !DILocation(line: 306, column: 53, scope: !2850)
!2861 = !DILocation(line: 306, column: 3, scope: !2851)
!2862 = !DILocation(line: 0, scope: !2849)
!2863 = !DILocation(line: 309, column: 11, scope: !2854)
!2864 = !DILocation(line: 309, column: 30, scope: !2854)
!2865 = !DILocation(line: 309, column: 11, scope: !2849)
!2866 = !DILocation(line: 0, scope: !2853)
!2867 = !DILocation(line: 312, column: 29, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2853, file: !3, line: 312, column: 8)
!2869 = !DILocation(line: 312, column: 8, scope: !2853)
!2870 = !DILocation(line: 311, column: 26, scope: !2853)
!2871 = !DILocation(line: 314, column: 5, scope: !2868)
!2872 = !DILocation(line: 315, column: 5, scope: !2868)
!2873 = !DILocation(line: 313, column: 6, scope: !2868)
!2874 = !DILocation(line: 316, column: 30, scope: !2853)
!2875 = !DILocation(line: 316, column: 4, scope: !2853)
!2876 = !DILocation(line: 317, column: 2, scope: !2853)
!2877 = !DILocation(line: 306, column: 70, scope: !2850)
!2878 = !DILocation(line: 306, column: 3, scope: !2850)
!2879 = distinct !{!2879, !2861, !2880}
!2880 = !DILocation(line: 318, column: 5, scope: !2851)
!2881 = !DILocation(line: 319, column: 1, scope: !2840)
!2882 = distinct !DISubprogram(name: "df_get_artificial_defs", scope: !385, file: !385, line: 1090, type: !2883, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2885)
!2883 = !DISubroutineType(types: !2884)
!2884 = !{!1948, !7}
!2885 = !{!2886}
!2886 = !DILocalVariable(name: "bb_index", arg: 1, scope: !2882, file: !385, line: 1090, type: !7)
!2887 = !DILocation(line: 0, scope: !2882)
!2888 = !DILocation(line: 1092, column: 10, scope: !2882)
!2889 = !DILocation(line: 1092, column: 42, scope: !2882)
!2890 = !DILocation(line: 1092, column: 3, scope: !2882)
!2891 = distinct !DISubprogram(name: "df_rd_simulate_one_insn", scope: !3, file: !3, line: 325, type: !2892, scopeLine: 327, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2894)
!2892 = !DISubroutineType(types: !2893)
!2893 = !{null, !1307, !836, !758}
!2894 = !{!2895, !2896, !2897, !2898, !2899, !2900, !2904}
!2895 = !DILocalVariable(name: "bb", arg: 1, scope: !2891, file: !3, line: 325, type: !1307)
!2896 = !DILocalVariable(name: "insn", arg: 2, scope: !2891, file: !3, line: 325, type: !836)
!2897 = !DILocalVariable(name: "local_rd", arg: 3, scope: !2891, file: !3, line: 326, type: !758)
!2898 = !DILocalVariable(name: "uid", scope: !2891, file: !3, line: 328, type: !7)
!2899 = !DILocalVariable(name: "def_rec", scope: !2891, file: !3, line: 329, type: !1948)
!2900 = !DILocalVariable(name: "def", scope: !2901, file: !3, line: 333, type: !825)
!2901 = distinct !DILexicalBlock(scope: !2902, file: !3, line: 332, column: 5)
!2902 = distinct !DILexicalBlock(scope: !2903, file: !3, line: 331, column: 3)
!2903 = distinct !DILexicalBlock(scope: !2891, file: !3, line: 331, column: 3)
!2904 = !DILocalVariable(name: "dregno", scope: !2901, file: !3, line: 334, type: !7)
!2905 = !DILocation(line: 0, scope: !2891)
!2906 = !DILocation(line: 328, column: 18, scope: !2891)
!2907 = !DILocation(line: 331, column: 18, scope: !2903)
!2908 = !DILocation(line: 331, column: 8, scope: !2903)
!2909 = !DILocation(line: 0, scope: !2903)
!2910 = !DILocation(line: 331, column: 42, scope: !2902)
!2911 = !DILocation(line: 331, column: 3, scope: !2903)
!2912 = !DILocation(line: 0, scope: !2901)
!2913 = !DILocation(line: 334, column: 29, scope: !2901)
!2914 = !DILocation(line: 335, column: 14, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2901, file: !3, line: 335, column: 11)
!2916 = !DILocation(line: 335, column: 18, scope: !2915)
!2917 = !DILocation(line: 335, column: 35, scope: !2915)
!2918 = !DILocation(line: 336, column: 22, scope: !2915)
!2919 = !DILocation(line: 336, column: 11, scope: !2915)
!2920 = !DILocation(line: 338, column: 17, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 338, column: 15)
!2922 = distinct !DILexicalBlock(scope: !2915, file: !3, line: 337, column: 9)
!2923 = !DILocation(line: 338, column: 36, scope: !2921)
!2924 = !DILocation(line: 338, column: 15, scope: !2922)
!2925 = !DILocation(line: 340, column: 5, scope: !2921)
!2926 = !DILocation(line: 341, column: 5, scope: !2921)
!2927 = !DILocation(line: 339, column: 6, scope: !2921)
!2928 = !DILocation(line: 342, column: 10, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 342, column: 8)
!2930 = !DILocation(line: 343, column: 3, scope: !2929)
!2931 = !DILocation(line: 342, column: 8, scope: !2922)
!2932 = !DILocation(line: 344, column: 32, scope: !2929)
!2933 = !DILocation(line: 344, column: 6, scope: !2929)
!2934 = !DILocation(line: 331, column: 59, scope: !2902)
!2935 = !DILocation(line: 331, column: 3, scope: !2902)
!2936 = distinct !{!2936, !2911, !2937}
!2937 = !DILocation(line: 346, column: 5, scope: !2903)
!2938 = !DILocation(line: 347, column: 1, scope: !2891)
!2939 = distinct !DISubprogram(name: "df_rd_add_problem", scope: !3, file: !3, line: 715, type: !2145, scopeLine: 716, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!2940 = !DILocation(line: 717, column: 3, scope: !2939)
!2941 = !DILocation(line: 718, column: 1, scope: !2939)
!2942 = distinct !DISubprogram(name: "df_lr_add_problem", scope: !3, file: !3, line: 1256, type: !2145, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!2943 = !DILocation(line: 1258, column: 3, scope: !2942)
!2944 = !DILocation(line: 1261, column: 43, scope: !2942)
!2945 = !DILocation(line: 1261, column: 3, scope: !2942)
!2946 = !DILocation(line: 1261, column: 10, scope: !2942)
!2947 = !DILocation(line: 1261, column: 41, scope: !2942)
!2948 = !DILocation(line: 1262, column: 1, scope: !2942)
!2949 = distinct !DISubprogram(name: "df_lr_verify_transfer_functions", scope: !3, file: !3, line: 1269, type: !2145, scopeLine: 1270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2950)
!2950 = !{!2951, !2952, !2953, !2954, !2955, !2956, !2957}
!2951 = !DILocalVariable(name: "bb", scope: !2949, file: !3, line: 1271, type: !1307)
!2952 = !DILocalVariable(name: "saved_def", scope: !2949, file: !3, line: 1272, type: !758)
!2953 = !DILocalVariable(name: "saved_use", scope: !2949, file: !3, line: 1273, type: !758)
!2954 = !DILocalVariable(name: "saved_adef", scope: !2949, file: !3, line: 1274, type: !758)
!2955 = !DILocalVariable(name: "saved_ause", scope: !2949, file: !3, line: 1275, type: !758)
!2956 = !DILocalVariable(name: "all_blocks", scope: !2949, file: !3, line: 1276, type: !758)
!2957 = !DILocalVariable(name: "bb_info", scope: !2958, file: !3, line: 1289, type: !2004)
!2958 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 1288, column: 5)
!2959 = distinct !DILexicalBlock(scope: !2960, file: !3, line: 1287, column: 3)
!2960 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 1287, column: 3)
!2961 = !DILocation(line: 1278, column: 8, scope: !2962)
!2962 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 1278, column: 7)
!2963 = !DILocation(line: 1278, column: 7, scope: !2949)
!2964 = !DILocation(line: 1281, column: 15, scope: !2949)
!2965 = !DILocation(line: 0, scope: !2949)
!2966 = !DILocation(line: 1282, column: 15, scope: !2949)
!2967 = !DILocation(line: 1283, column: 16, scope: !2949)
!2968 = !DILocation(line: 1284, column: 16, scope: !2949)
!2969 = !DILocation(line: 1285, column: 16, scope: !2949)
!2970 = !DILocation(line: 1287, column: 3, scope: !2960)
!2971 = !DILocation(line: 0, scope: !2960)
!2972 = !DILocation(line: 1289, column: 62, scope: !2958)
!2973 = !DILocation(line: 1289, column: 39, scope: !2958)
!2974 = !DILocation(line: 0, scope: !2958)
!2975 = !DILocation(line: 1290, column: 39, scope: !2958)
!2976 = !DILocation(line: 1290, column: 7, scope: !2958)
!2977 = !DILocation(line: 1292, column: 11, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2958, file: !3, line: 1292, column: 11)
!2979 = !DILocation(line: 0, scope: !2978)
!2980 = !DILocation(line: 1292, column: 11, scope: !2958)
!2981 = !DILocation(line: 1297, column: 8, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 1293, column: 2)
!2983 = !DILocation(line: 1300, column: 41, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 1299, column: 6)
!2985 = distinct !DILexicalBlock(scope: !2982, file: !3, line: 1297, column: 8)
!2986 = !DILocation(line: 1300, column: 8, scope: !2984)
!2987 = !DILocation(line: 1301, column: 41, scope: !2984)
!2988 = !DILocation(line: 1301, column: 8, scope: !2984)
!2989 = !DILocation(line: 1302, column: 31, scope: !2984)
!2990 = !DILocation(line: 1302, column: 8, scope: !2984)
!2991 = !DILocation(line: 1303, column: 31, scope: !2984)
!2992 = !DILocation(line: 1303, column: 8, scope: !2984)
!2993 = !DILocation(line: 1305, column: 36, scope: !2984)
!2994 = !DILocation(line: 1305, column: 8, scope: !2984)
!2995 = !DILocation(line: 1306, column: 8, scope: !2984)
!2996 = !DILocation(line: 1307, column: 8, scope: !2984)
!2997 = !DILocation(line: 1315, column: 4, scope: !2998)
!2998 = distinct !DILexicalBlock(scope: !2978, file: !3, line: 1311, column: 2)
!2999 = !DILocation(line: 1320, column: 7, scope: !2958)
!3000 = !DILocation(line: 1287, column: 3, scope: !2959)
!3001 = distinct !{!3001, !2970, !3002}
!3002 = !DILocation(line: 1321, column: 5, scope: !2960)
!3003 = !DILocation(line: 1324, column: 3, scope: !2949)
!3004 = !DILocation(line: 1327, column: 3, scope: !2949)
!3005 = !DILocation(line: 1328, column: 3, scope: !2949)
!3006 = !DILocation(line: 1329, column: 3, scope: !2949)
!3007 = !DILocation(line: 1330, column: 3, scope: !2949)
!3008 = !DILocation(line: 1331, column: 3, scope: !2949)
!3009 = !DILocation(line: 1332, column: 1, scope: !2949)
!3010 = distinct !DISubprogram(name: "df_lr_bb_local_compute", scope: !3, file: !3, line: 828, type: !3011, scopeLine: 829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3013)
!3011 = !DISubroutineType(types: !3012)
!3012 = !{null, !7}
!3013 = !{!3014, !3015, !3016, !3017, !3018, !3019, !3020, !3024, !3027, !3031, !3035, !3039, !3042, !3046, !3050}
!3014 = !DILocalVariable(name: "bb_index", arg: 1, scope: !3010, file: !3, line: 828, type: !7)
!3015 = !DILocalVariable(name: "bb", scope: !3010, file: !3, line: 830, type: !1307)
!3016 = !DILocalVariable(name: "bb_info", scope: !3010, file: !3, line: 831, type: !2004)
!3017 = !DILocalVariable(name: "insn", scope: !3010, file: !3, line: 832, type: !836)
!3018 = !DILocalVariable(name: "def_rec", scope: !3010, file: !3, line: 833, type: !1948)
!3019 = !DILocalVariable(name: "use_rec", scope: !3010, file: !3, line: 834, type: !1948)
!3020 = !DILocalVariable(name: "def", scope: !3021, file: !3, line: 839, type: !825)
!3021 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 838, column: 5)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 837, column: 3)
!3023 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 837, column: 3)
!3024 = !DILocalVariable(name: "dregno", scope: !3025, file: !3, line: 842, type: !7)
!3025 = distinct !DILexicalBlock(scope: !3026, file: !3, line: 841, column: 2)
!3026 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 840, column: 11)
!3027 = !DILocalVariable(name: "use", scope: !3028, file: !3, line: 851, type: !825)
!3028 = distinct !DILexicalBlock(scope: !3029, file: !3, line: 850, column: 5)
!3029 = distinct !DILexicalBlock(scope: !3030, file: !3, line: 849, column: 3)
!3030 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 849, column: 3)
!3031 = !DILocalVariable(name: "uid", scope: !3032, file: !3, line: 859, type: !7)
!3032 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 858, column: 5)
!3033 = distinct !DILexicalBlock(scope: !3034, file: !3, line: 857, column: 3)
!3034 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 857, column: 3)
!3035 = !DILocalVariable(name: "def", scope: !3036, file: !3, line: 866, type: !825)
!3036 = distinct !DILexicalBlock(scope: !3037, file: !3, line: 865, column: 2)
!3037 = distinct !DILexicalBlock(scope: !3038, file: !3, line: 864, column: 7)
!3038 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 864, column: 7)
!3039 = !DILocalVariable(name: "dregno", scope: !3040, file: !3, line: 871, type: !7)
!3040 = distinct !DILexicalBlock(scope: !3041, file: !3, line: 870, column: 6)
!3041 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 869, column: 8)
!3042 = !DILocalVariable(name: "use", scope: !3043, file: !3, line: 879, type: !825)
!3043 = distinct !DILexicalBlock(scope: !3044, file: !3, line: 878, column: 2)
!3044 = distinct !DILexicalBlock(scope: !3045, file: !3, line: 877, column: 7)
!3045 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 877, column: 7)
!3046 = !DILocalVariable(name: "def", scope: !3047, file: !3, line: 890, type: !825)
!3047 = distinct !DILexicalBlock(scope: !3048, file: !3, line: 889, column: 5)
!3048 = distinct !DILexicalBlock(scope: !3049, file: !3, line: 888, column: 3)
!3049 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 888, column: 3)
!3050 = !DILocalVariable(name: "dregno", scope: !3051, file: !3, line: 893, type: !7)
!3051 = distinct !DILexicalBlock(scope: !3052, file: !3, line: 892, column: 2)
!3052 = distinct !DILexicalBlock(scope: !3047, file: !3, line: 891, column: 11)
!3053 = !DILocation(line: 0, scope: !3010)
!3054 = !DILocation(line: 830, column: 20, scope: !3010)
!3055 = !DILocation(line: 831, column: 35, scope: !3010)
!3056 = !DILocation(line: 837, column: 18, scope: !3023)
!3057 = !DILocation(line: 0, scope: !3025)
!3058 = !DILocation(line: 837, column: 8, scope: !3023)
!3059 = !DILocation(line: 0, scope: !3023)
!3060 = !DILocation(line: 837, column: 53, scope: !3022)
!3061 = !DILocation(line: 837, column: 3, scope: !3023)
!3062 = !DILocation(line: 0, scope: !3021)
!3063 = !DILocation(line: 840, column: 12, scope: !3026)
!3064 = !DILocation(line: 840, column: 31, scope: !3026)
!3065 = !DILocation(line: 840, column: 48, scope: !3026)
!3066 = !DILocation(line: 840, column: 11, scope: !3021)
!3067 = !DILocation(line: 842, column: 26, scope: !3025)
!3068 = !DILocation(line: 843, column: 29, scope: !3025)
!3069 = !DILocation(line: 843, column: 4, scope: !3025)
!3070 = !DILocation(line: 844, column: 31, scope: !3025)
!3071 = !DILocation(line: 844, column: 4, scope: !3025)
!3072 = !DILocation(line: 845, column: 2, scope: !3025)
!3073 = !DILocation(line: 837, column: 70, scope: !3022)
!3074 = !DILocation(line: 837, column: 3, scope: !3022)
!3075 = distinct !{!3075, !3061, !3076}
!3076 = !DILocation(line: 846, column: 5, scope: !3023)
!3077 = !DILocation(line: 849, column: 18, scope: !3030)
!3078 = !DILocation(line: 849, column: 8, scope: !3030)
!3079 = !DILocation(line: 0, scope: !3030)
!3080 = !DILocation(line: 849, column: 53, scope: !3029)
!3081 = !DILocation(line: 849, column: 3, scope: !3030)
!3082 = !DILocation(line: 0, scope: !3028)
!3083 = !DILocation(line: 853, column: 12, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3028, file: !3, line: 853, column: 11)
!3085 = !DILocation(line: 853, column: 31, scope: !3084)
!3086 = !DILocation(line: 853, column: 48, scope: !3084)
!3087 = !DILocation(line: 853, column: 11, scope: !3028)
!3088 = !DILocation(line: 854, column: 27, scope: !3084)
!3089 = !DILocation(line: 854, column: 32, scope: !3084)
!3090 = !DILocation(line: 854, column: 2, scope: !3084)
!3091 = !DILocation(line: 849, column: 70, scope: !3029)
!3092 = !DILocation(line: 849, column: 3, scope: !3029)
!3093 = distinct !{!3093, !3081, !3094}
!3094 = !DILocation(line: 855, column: 5, scope: !3030)
!3095 = !DILocation(line: 857, column: 3, scope: !3034)
!3096 = !DILocation(line: 0, scope: !3034)
!3097 = !DILocation(line: 857, column: 3, scope: !3033)
!3098 = !DILocation(line: 859, column: 26, scope: !3032)
!3099 = !DILocation(line: 0, scope: !3032)
!3100 = !DILocation(line: 861, column: 12, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3032, file: !3, line: 861, column: 11)
!3102 = !DILocation(line: 861, column: 11, scope: !3032)
!3103 = !DILocation(line: 864, column: 22, scope: !3038)
!3104 = !DILocation(line: 864, column: 12, scope: !3038)
!3105 = !DILocation(line: 0, scope: !3038)
!3106 = !DILocation(line: 864, column: 46, scope: !3037)
!3107 = !DILocation(line: 864, column: 7, scope: !3038)
!3108 = !DILocation(line: 0, scope: !3036)
!3109 = !DILocation(line: 869, column: 10, scope: !3041)
!3110 = !DILocation(line: 869, column: 29, scope: !3041)
!3111 = !DILocation(line: 869, column: 8, scope: !3036)
!3112 = !DILocation(line: 871, column: 30, scope: !3040)
!3113 = !DILocation(line: 0, scope: !3040)
!3114 = !DILocation(line: 872, column: 33, scope: !3040)
!3115 = !DILocation(line: 872, column: 8, scope: !3040)
!3116 = !DILocation(line: 873, column: 35, scope: !3040)
!3117 = !DILocation(line: 873, column: 8, scope: !3040)
!3118 = !DILocation(line: 874, column: 6, scope: !3040)
!3119 = !DILocation(line: 864, column: 63, scope: !3037)
!3120 = !DILocation(line: 864, column: 7, scope: !3037)
!3121 = distinct !{!3121, !3107, !3122}
!3122 = !DILocation(line: 875, column: 2, scope: !3038)
!3123 = !DILocation(line: 877, column: 22, scope: !3045)
!3124 = !DILocation(line: 877, column: 12, scope: !3045)
!3125 = !DILocation(line: 0, scope: !3045)
!3126 = !DILocation(line: 877, column: 46, scope: !3044)
!3127 = !DILocation(line: 877, column: 7, scope: !3045)
!3128 = !DILocation(line: 881, column: 29, scope: !3043)
!3129 = !DILocation(line: 881, column: 34, scope: !3043)
!3130 = !DILocation(line: 881, column: 4, scope: !3043)
!3131 = !DILocation(line: 877, column: 63, scope: !3044)
!3132 = !DILocation(line: 877, column: 7, scope: !3044)
!3133 = distinct !{!3133, !3127, !3134}
!3134 = !DILocation(line: 882, column: 2, scope: !3045)
!3135 = distinct !{!3135, !3095, !3136}
!3136 = !DILocation(line: 883, column: 5, scope: !3034)
!3137 = !DILocation(line: 888, column: 18, scope: !3049)
!3138 = !DILocation(line: 888, column: 8, scope: !3049)
!3139 = !DILocation(line: 0, scope: !3049)
!3140 = !DILocation(line: 888, column: 53, scope: !3048)
!3141 = !DILocation(line: 888, column: 3, scope: !3049)
!3142 = !DILocation(line: 0, scope: !3047)
!3143 = !DILocation(line: 891, column: 11, scope: !3052)
!3144 = !DILocation(line: 891, column: 30, scope: !3052)
!3145 = !DILocation(line: 891, column: 11, scope: !3047)
!3146 = !DILocation(line: 893, column: 26, scope: !3051)
!3147 = !DILocation(line: 0, scope: !3051)
!3148 = !DILocation(line: 894, column: 29, scope: !3051)
!3149 = !DILocation(line: 894, column: 4, scope: !3051)
!3150 = !DILocation(line: 895, column: 31, scope: !3051)
!3151 = !DILocation(line: 895, column: 4, scope: !3051)
!3152 = !DILocation(line: 896, column: 2, scope: !3051)
!3153 = !DILocation(line: 888, column: 70, scope: !3048)
!3154 = !DILocation(line: 888, column: 3, scope: !3048)
!3155 = distinct !{!3155, !3141, !3156}
!3156 = !DILocation(line: 897, column: 5, scope: !3049)
!3157 = !DILocation(line: 914, column: 8, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 914, column: 7)
!3159 = !DILocation(line: 914, column: 7, scope: !3010)
!3160 = !DILocation(line: 915, column: 5, scope: !3158)
!3161 = !DILocation(line: 916, column: 1, scope: !3010)
!3162 = distinct !DISubprogram(name: "df_scan_get_bb_info", scope: !385, file: !385, line: 1034, type: !3163, scopeLine: 1035, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3165)
!3163 = !DISubroutineType(types: !3164)
!3164 = !{!2031, !7}
!3165 = !{!3166}
!3166 = !DILocalVariable(name: "index", arg: 1, scope: !3162, file: !385, line: 1034, type: !7)
!3167 = !DILocation(line: 0, scope: !3162)
!3168 = !DILocation(line: 1036, column: 15, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3162, file: !385, line: 1036, column: 7)
!3170 = !DILocation(line: 1036, column: 24, scope: !3169)
!3171 = !DILocation(line: 1036, column: 13, scope: !3169)
!3172 = !DILocation(line: 1036, column: 7, scope: !3162)
!3173 = !DILocation(line: 1037, column: 48, scope: !3169)
!3174 = !DILocation(line: 1037, column: 39, scope: !3169)
!3175 = !DILocation(line: 1037, column: 5, scope: !3169)
!3176 = !DILocation(line: 0, scope: !3169)
!3177 = !DILocation(line: 1040, column: 1, scope: !3162)
!3178 = distinct !DISubprogram(name: "df_live_add_problem", scope: !3, file: !3, line: 1802, type: !2145, scopeLine: 1803, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!3179 = !DILocation(line: 1804, column: 3, scope: !3178)
!3180 = !DILocation(line: 1807, column: 45, scope: !3178)
!3181 = !DILocation(line: 1807, column: 3, scope: !3178)
!3182 = !DILocation(line: 1807, column: 12, scope: !3178)
!3183 = !DILocation(line: 1807, column: 43, scope: !3178)
!3184 = !DILocation(line: 1808, column: 1, scope: !3178)
!3185 = distinct !DISubprogram(name: "df_live_set_all_dirty", scope: !3, file: !3, line: 1815, type: !2145, scopeLine: 1816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3186)
!3186 = !{!3187}
!3187 = !DILocalVariable(name: "bb", scope: !3185, file: !3, line: 1817, type: !1307)
!3188 = !DILocation(line: 1818, column: 3, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 1818, column: 3)
!3190 = !DILocation(line: 0, scope: !3189)
!3191 = !DILocation(line: 0, scope: !3185)
!3192 = !DILocation(line: 1819, column: 21, scope: !3193)
!3193 = distinct !DILexicalBlock(scope: !3189, file: !3, line: 1818, column: 3)
!3194 = !DILocation(line: 1819, column: 30, scope: !3193)
!3195 = !DILocation(line: 1820, column: 11, scope: !3193)
!3196 = !DILocation(line: 1819, column: 5, scope: !3193)
!3197 = !DILocation(line: 1818, column: 3, scope: !3193)
!3198 = distinct !{!3198, !3188, !3199}
!3199 = !DILocation(line: 1820, column: 16, scope: !3189)
!3200 = !DILocation(line: 1821, column: 1, scope: !3185)
!3201 = distinct !DISubprogram(name: "df_live_verify_transfer_functions", scope: !3, file: !3, line: 1828, type: !2145, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3202)
!3202 = !{!3203, !3204, !3205, !3206, !3207}
!3203 = !DILocalVariable(name: "bb", scope: !3201, file: !3, line: 1830, type: !1307)
!3204 = !DILocalVariable(name: "saved_gen", scope: !3201, file: !3, line: 1831, type: !758)
!3205 = !DILocalVariable(name: "saved_kill", scope: !3201, file: !3, line: 1832, type: !758)
!3206 = !DILocalVariable(name: "all_blocks", scope: !3201, file: !3, line: 1833, type: !758)
!3207 = !DILocalVariable(name: "bb_info", scope: !3208, file: !3, line: 1846, type: !1997)
!3208 = distinct !DILexicalBlock(scope: !3209, file: !3, line: 1845, column: 5)
!3209 = distinct !DILexicalBlock(scope: !3210, file: !3, line: 1844, column: 3)
!3210 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 1844, column: 3)
!3211 = !DILocation(line: 1835, column: 8, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 1835, column: 7)
!3213 = !DILocation(line: 1835, column: 7, scope: !3201)
!3214 = !DILocation(line: 1838, column: 15, scope: !3201)
!3215 = !DILocation(line: 0, scope: !3201)
!3216 = !DILocation(line: 1839, column: 16, scope: !3201)
!3217 = !DILocation(line: 1840, column: 16, scope: !3201)
!3218 = !DILocation(line: 1842, column: 3, scope: !3201)
!3219 = !DILocation(line: 1844, column: 3, scope: !3210)
!3220 = !DILocation(line: 0, scope: !3210)
!3221 = !DILocation(line: 1846, column: 66, scope: !3208)
!3222 = !DILocation(line: 1846, column: 41, scope: !3208)
!3223 = !DILocation(line: 0, scope: !3208)
!3224 = !DILocation(line: 1847, column: 39, scope: !3208)
!3225 = !DILocation(line: 1847, column: 7, scope: !3208)
!3226 = !DILocation(line: 1849, column: 11, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 1849, column: 11)
!3228 = !DILocation(line: 0, scope: !3227)
!3229 = !DILocation(line: 1849, column: 11, scope: !3208)
!3230 = !DILocation(line: 1854, column: 8, scope: !3231)
!3231 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 1850, column: 2)
!3232 = !DILocation(line: 1857, column: 41, scope: !3233)
!3233 = distinct !DILexicalBlock(scope: !3234, file: !3, line: 1856, column: 6)
!3234 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 1854, column: 8)
!3235 = !DILocation(line: 1857, column: 8, scope: !3233)
!3236 = !DILocation(line: 1858, column: 42, scope: !3233)
!3237 = !DILocation(line: 1858, column: 8, scope: !3233)
!3238 = !DILocation(line: 1859, column: 31, scope: !3233)
!3239 = !DILocation(line: 1859, column: 8, scope: !3233)
!3240 = !DILocation(line: 1860, column: 31, scope: !3233)
!3241 = !DILocation(line: 1860, column: 8, scope: !3233)
!3242 = !DILocation(line: 1862, column: 38, scope: !3233)
!3243 = !DILocation(line: 1862, column: 8, scope: !3233)
!3244 = !DILocation(line: 1863, column: 8, scope: !3233)
!3245 = !DILocation(line: 1864, column: 8, scope: !3233)
!3246 = !DILocation(line: 1872, column: 4, scope: !3247)
!3247 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 1868, column: 2)
!3248 = !DILocation(line: 1877, column: 7, scope: !3208)
!3249 = !DILocation(line: 1844, column: 3, scope: !3209)
!3250 = distinct !{!3250, !3219, !3251}
!3251 = !DILocation(line: 1878, column: 5, scope: !3210)
!3252 = !DILocation(line: 1881, column: 3, scope: !3201)
!3253 = !DILocation(line: 1883, column: 3, scope: !3201)
!3254 = !DILocation(line: 1884, column: 3, scope: !3201)
!3255 = !DILocation(line: 1885, column: 3, scope: !3201)
!3256 = !DILocation(line: 1886, column: 1, scope: !3201)
!3257 = distinct !DISubprogram(name: "df_live_bb_local_compute", scope: !3, file: !3, line: 1457, type: !3011, scopeLine: 1458, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3258)
!3258 = !{!3259, !3260, !3261, !3262, !3263, !3264, !3265, !3269, !3270, !3274, !3275}
!3259 = !DILocalVariable(name: "bb_index", arg: 1, scope: !3257, file: !3, line: 1457, type: !7)
!3260 = !DILocalVariable(name: "bb", scope: !3257, file: !3, line: 1459, type: !1307)
!3261 = !DILocalVariable(name: "bb_info", scope: !3257, file: !3, line: 1460, type: !1997)
!3262 = !DILocalVariable(name: "insn", scope: !3257, file: !3, line: 1461, type: !836)
!3263 = !DILocalVariable(name: "def_rec", scope: !3257, file: !3, line: 1462, type: !1948)
!3264 = !DILocalVariable(name: "luid", scope: !3257, file: !3, line: 1463, type: !750)
!3265 = !DILocalVariable(name: "uid", scope: !3266, file: !3, line: 1467, type: !7)
!3266 = distinct !DILexicalBlock(scope: !3267, file: !3, line: 1466, column: 5)
!3267 = distinct !DILexicalBlock(scope: !3268, file: !3, line: 1465, column: 3)
!3268 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1465, column: 3)
!3269 = !DILocalVariable(name: "insn_info", scope: !3266, file: !3, line: 1468, type: !1943)
!3270 = !DILocalVariable(name: "def", scope: !3271, file: !3, line: 1485, type: !825)
!3271 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 1484, column: 2)
!3272 = distinct !DILexicalBlock(scope: !3273, file: !3, line: 1483, column: 7)
!3273 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 1483, column: 7)
!3274 = !DILocalVariable(name: "regno", scope: !3271, file: !3, line: 1486, type: !7)
!3275 = !DILocalVariable(name: "def", scope: !3276, file: !3, line: 1504, type: !825)
!3276 = distinct !DILexicalBlock(scope: !3277, file: !3, line: 1503, column: 5)
!3277 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 1502, column: 3)
!3278 = distinct !DILexicalBlock(scope: !3257, file: !3, line: 1502, column: 3)
!3279 = !DILocation(line: 0, scope: !3257)
!3280 = !DILocation(line: 1459, column: 20, scope: !3257)
!3281 = !DILocation(line: 1460, column: 37, scope: !3257)
!3282 = !DILocation(line: 1465, column: 3, scope: !3268)
!3283 = !DILocation(line: 0, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3271, file: !3, line: 1488, column: 8)
!3285 = !DILocation(line: 0, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3284, file: !3, line: 1493, column: 13)
!3287 = !DILocation(line: 0, scope: !3268)
!3288 = !DILocation(line: 1465, column: 3, scope: !3267)
!3289 = !DILocation(line: 1467, column: 26, scope: !3266)
!3290 = !DILocation(line: 0, scope: !3266)
!3291 = !DILocation(line: 1468, column: 40, scope: !3266)
!3292 = !DILocation(line: 1472, column: 12, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 1472, column: 11)
!3294 = !DILocation(line: 1472, column: 11, scope: !3266)
!3295 = !DILocation(line: 1474, column: 4, scope: !3296)
!3296 = distinct !DILexicalBlock(scope: !3293, file: !3, line: 1473, column: 2)
!3297 = !DILocation(line: 1475, column: 16, scope: !3296)
!3298 = !DILocation(line: 1476, column: 2, scope: !3296)
!3299 = !DILocation(line: 1478, column: 7, scope: !3266)
!3300 = !DILocation(line: 1478, column: 37, scope: !3266)
!3301 = !DILocation(line: 1479, column: 12, scope: !3302)
!3302 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 1479, column: 11)
!3303 = !DILocation(line: 1479, column: 11, scope: !3266)
!3304 = !DILocation(line: 1483, column: 22, scope: !3273)
!3305 = !DILocation(line: 1483, column: 12, scope: !3273)
!3306 = !DILocation(line: 0, scope: !3273)
!3307 = !DILocation(line: 1483, column: 53, scope: !3272)
!3308 = !DILocation(line: 1483, column: 7, scope: !3273)
!3309 = !DILocation(line: 0, scope: !3271)
!3310 = !DILocation(line: 1486, column: 25, scope: !3271)
!3311 = !DILocation(line: 1488, column: 8, scope: !3284)
!3312 = !DILocation(line: 1488, column: 8, scope: !3271)
!3313 = !DILocation(line: 1492, column: 31, scope: !3284)
!3314 = !DILocation(line: 1492, column: 6, scope: !3284)
!3315 = !DILocation(line: 1493, column: 13, scope: !3286)
!3316 = !DILocation(line: 1493, column: 13, scope: !3284)
!3317 = !DILocation(line: 1496, column: 31, scope: !3286)
!3318 = !DILocation(line: 1496, column: 6, scope: !3286)
!3319 = !DILocation(line: 1497, column: 15, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 1497, column: 13)
!3321 = !DILocation(line: 1497, column: 13, scope: !3286)
!3322 = !DILocation(line: 1498, column: 31, scope: !3320)
!3323 = !DILocation(line: 1498, column: 6, scope: !3320)
!3324 = !DILocation(line: 1483, column: 70, scope: !3272)
!3325 = !DILocation(line: 1483, column: 7, scope: !3272)
!3326 = distinct !{!3326, !3308, !3327}
!3327 = !DILocation(line: 1499, column: 2, scope: !3273)
!3328 = !DILocation(line: 1482, column: 11, scope: !3266)
!3329 = distinct !{!3329, !3282, !3330}
!3330 = !DILocation(line: 1500, column: 5, scope: !3268)
!3331 = !DILocation(line: 1502, column: 18, scope: !3278)
!3332 = !DILocation(line: 1502, column: 8, scope: !3278)
!3333 = !DILocation(line: 0, scope: !3278)
!3334 = !DILocation(line: 1502, column: 53, scope: !3277)
!3335 = !DILocation(line: 1502, column: 3, scope: !3278)
!3336 = !DILocation(line: 1505, column: 32, scope: !3276)
!3337 = !DILocation(line: 1505, column: 37, scope: !3276)
!3338 = !DILocation(line: 1505, column: 7, scope: !3276)
!3339 = !DILocation(line: 1502, column: 70, scope: !3277)
!3340 = !DILocation(line: 1502, column: 3, scope: !3277)
!3341 = distinct !{!3341, !3335, !3342}
!3342 = !DILocation(line: 1506, column: 5, scope: !3278)
!3343 = !DILocation(line: 1507, column: 1, scope: !3257)
!3344 = distinct !DISubprogram(name: "df_chain_create", scope: !3, file: !3, line: 1904, type: !3345, scopeLine: 1905, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3347)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!821, !825, !825}
!3347 = !{!3348, !3349, !3350, !3351}
!3348 = !DILocalVariable(name: "src", arg: 1, scope: !3344, file: !3, line: 1904, type: !825)
!3349 = !DILocalVariable(name: "dst", arg: 2, scope: !3344, file: !3, line: 1904, type: !825)
!3350 = !DILocalVariable(name: "head", scope: !3344, file: !3, line: 1906, type: !821)
!3351 = !DILocalVariable(name: "link", scope: !3344, file: !3, line: 1907, type: !821)
!3352 = !DILocation(line: 0, scope: !3344)
!3353 = !DILocation(line: 1906, column: 26, scope: !3344)
!3354 = !DILocation(line: 1907, column: 57, scope: !3344)
!3355 = !DILocation(line: 1907, column: 67, scope: !3344)
!3356 = !DILocation(line: 1907, column: 45, scope: !3344)
!3357 = !DILocation(line: 1907, column: 26, scope: !3344)
!3358 = !DILocation(line: 1909, column: 22, scope: !3344)
!3359 = !DILocation(line: 1910, column: 9, scope: !3344)
!3360 = !DILocation(line: 1910, column: 14, scope: !3344)
!3361 = !DILocation(line: 1911, column: 9, scope: !3344)
!3362 = !DILocation(line: 1911, column: 13, scope: !3344)
!3363 = !DILocation(line: 1912, column: 3, scope: !3344)
!3364 = distinct !DISubprogram(name: "df_chain_unlink", scope: !3, file: !3, line: 1944, type: !3365, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3367)
!3365 = !DISubroutineType(types: !3366)
!3366 = !{null, !825}
!3367 = !{!3368, !3369, !3370}
!3368 = !DILocalVariable(name: "ref", arg: 1, scope: !3364, file: !3, line: 1944, type: !825)
!3369 = !DILocalVariable(name: "chain", scope: !3364, file: !3, line: 1946, type: !821)
!3370 = !DILocalVariable(name: "next", scope: !3371, file: !3, line: 1949, type: !821)
!3371 = distinct !DILexicalBlock(scope: !3364, file: !3, line: 1948, column: 5)
!3372 = !DILocation(line: 0, scope: !3364)
!3373 = !DILocation(line: 1946, column: 27, scope: !3364)
!3374 = !DILocation(line: 1947, column: 3, scope: !3364)
!3375 = !DILocation(line: 1949, column: 37, scope: !3371)
!3376 = !DILocation(line: 0, scope: !3371)
!3377 = !DILocation(line: 1951, column: 33, scope: !3371)
!3378 = !DILocation(line: 1951, column: 7, scope: !3371)
!3379 = !DILocation(line: 1952, column: 18, scope: !3371)
!3380 = !DILocation(line: 1952, column: 28, scope: !3371)
!3381 = !DILocation(line: 1952, column: 7, scope: !3371)
!3382 = distinct !{!3382, !3374, !3383}
!3383 = !DILocation(line: 1954, column: 5, scope: !3364)
!3384 = !DILocation(line: 1955, column: 22, scope: !3364)
!3385 = !DILocation(line: 1956, column: 1, scope: !3364)
!3386 = distinct !DISubprogram(name: "df_chain_unlink_1", scope: !3, file: !3, line: 1919, type: !3387, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3389)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{null, !825, !825}
!3389 = !{!3390, !3391, !3392, !3393}
!3390 = !DILocalVariable(name: "ref", arg: 1, scope: !3386, file: !3, line: 1919, type: !825)
!3391 = !DILocalVariable(name: "target", arg: 2, scope: !3386, file: !3, line: 1919, type: !825)
!3392 = !DILocalVariable(name: "chain", scope: !3386, file: !3, line: 1921, type: !821)
!3393 = !DILocalVariable(name: "prev", scope: !3386, file: !3, line: 1922, type: !821)
!3394 = !DILocation(line: 0, scope: !3386)
!3395 = !DILocation(line: 1921, column: 27, scope: !3386)
!3396 = !DILocation(line: 1924, column: 3, scope: !3386)
!3397 = !DILocation(line: 1926, column: 18, scope: !3398)
!3398 = distinct !DILexicalBlock(scope: !3399, file: !3, line: 1926, column: 11)
!3399 = distinct !DILexicalBlock(scope: !3386, file: !3, line: 1925, column: 5)
!3400 = !DILocation(line: 1926, column: 22, scope: !3398)
!3401 = !DILocation(line: 1926, column: 11, scope: !3399)
!3402 = !DILocation(line: 1928, column: 8, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3404, file: !3, line: 1928, column: 8)
!3404 = distinct !DILexicalBlock(scope: !3398, file: !3, line: 1927, column: 2)
!3405 = !DILocation(line: 0, scope: !3403)
!3406 = !DILocation(line: 1928, column: 8, scope: !3404)
!3407 = !DILocation(line: 1929, column: 12, scope: !3403)
!3408 = !DILocation(line: 1929, column: 17, scope: !3403)
!3409 = !DILocation(line: 1929, column: 6, scope: !3403)
!3410 = !DILocation(line: 1931, column: 25, scope: !3403)
!3411 = !DILocation(line: 1932, column: 15, scope: !3404)
!3412 = !DILocation(line: 1932, column: 25, scope: !3404)
!3413 = !DILocation(line: 1932, column: 37, scope: !3404)
!3414 = !DILocation(line: 1932, column: 4, scope: !3404)
!3415 = !DILocation(line: 1933, column: 4, scope: !3404)
!3416 = !DILocation(line: 1936, column: 22, scope: !3399)
!3417 = distinct !{!3417, !3396, !3418}
!3418 = !DILocation(line: 1937, column: 5, scope: !3386)
!3419 = !DILocation(line: 1938, column: 1, scope: !3386)
!3420 = distinct !DISubprogram(name: "df_chain_copy", scope: !3, file: !3, line: 1963, type: !3421, scopeLine: 1965, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3423)
!3421 = !DISubroutineType(types: !3422)
!3422 = !{null, !825, !821}
!3423 = !{!3424, !3425}
!3424 = !DILocalVariable(name: "to_ref", arg: 1, scope: !3420, file: !3, line: 1963, type: !825)
!3425 = !DILocalVariable(name: "from_ref", arg: 2, scope: !3420, file: !3, line: 1964, type: !821)
!3426 = !DILocation(line: 0, scope: !3420)
!3427 = !DILocation(line: 1966, column: 3, scope: !3420)
!3428 = !DILocation(line: 1968, column: 42, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3420, file: !3, line: 1967, column: 5)
!3430 = !DILocation(line: 1968, column: 7, scope: !3429)
!3431 = !DILocation(line: 1969, column: 28, scope: !3429)
!3432 = distinct !{!3432, !3427, !3433}
!3433 = !DILocation(line: 1970, column: 5, scope: !3420)
!3434 = !DILocation(line: 1971, column: 1, scope: !3420)
!3435 = distinct !DISubprogram(name: "df_chain_add_problem", scope: !3, file: !3, line: 2327, type: !3011, scopeLine: 2328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3436)
!3436 = !{!3437}
!3437 = !DILocalVariable(name: "chain_flags", arg: 1, scope: !3435, file: !3, line: 2327, type: !7)
!3438 = !DILocation(line: 0, scope: !3435)
!3439 = !DILocation(line: 2329, column: 3, scope: !3435)
!3440 = !DILocation(line: 2330, column: 3, scope: !3435)
!3441 = !DILocation(line: 2330, column: 13, scope: !3435)
!3442 = !DILocation(line: 2330, column: 25, scope: !3435)
!3443 = !DILocation(line: 2331, column: 46, scope: !3435)
!3444 = !DILocation(line: 2331, column: 3, scope: !3435)
!3445 = !DILocation(line: 2331, column: 13, scope: !3435)
!3446 = !DILocation(line: 2331, column: 44, scope: !3435)
!3447 = !DILocation(line: 2332, column: 1, scope: !3435)
!3448 = distinct !DISubprogram(name: "df_byte_lr_get_regno_start", scope: !3, file: !3, line: 2390, type: !3449, scopeLine: 2391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3451)
!3449 = !DISubroutineType(types: !3450)
!3450 = !{!750, !7}
!3451 = !{!3452, !3453}
!3452 = !DILocalVariable(name: "regno", arg: 1, scope: !3448, file: !3, line: 2390, type: !7)
!3453 = !DILocalVariable(name: "problem_data", scope: !3448, file: !3, line: 2392, type: !1987)
!3454 = !DILocation(line: 0, scope: !3448)
!3455 = !DILocation(line: 2393, column: 41, scope: !3448)
!3456 = !DILocation(line: 2393, column: 53, scope: !3448)
!3457 = !DILocation(line: 2394, column: 24, scope: !3448)
!3458 = !DILocation(line: 2394, column: 10, scope: !3448)
!3459 = !DILocation(line: 2394, column: 3, scope: !3448)
!3460 = distinct !DISubprogram(name: "df_byte_lr_get_regno_len", scope: !3, file: !3, line: 2401, type: !3449, scopeLine: 2402, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3461)
!3461 = !{!3462, !3463}
!3462 = !DILocalVariable(name: "regno", arg: 1, scope: !3460, file: !3, line: 2401, type: !7)
!3463 = !DILocalVariable(name: "problem_data", scope: !3460, file: !3, line: 2403, type: !1987)
!3464 = !DILocation(line: 0, scope: !3460)
!3465 = !DILocation(line: 2404, column: 41, scope: !3460)
!3466 = !DILocation(line: 2404, column: 53, scope: !3460)
!3467 = !DILocation(line: 2405, column: 24, scope: !3460)
!3468 = !DILocation(line: 2405, column: 10, scope: !3460)
!3469 = !DILocation(line: 2405, column: 3, scope: !3460)
!3470 = distinct !DISubprogram(name: "df_byte_lr_add_problem", scope: !3, file: !3, line: 2906, type: !2145, scopeLine: 2907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!3471 = !DILocation(line: 2908, column: 3, scope: !3470)
!3472 = !DILocation(line: 2911, column: 48, scope: !3470)
!3473 = !DILocation(line: 2911, column: 3, scope: !3470)
!3474 = !DILocation(line: 2911, column: 15, scope: !3470)
!3475 = !DILocation(line: 2911, column: 46, scope: !3470)
!3476 = !DILocation(line: 2912, column: 1, scope: !3470)
!3477 = distinct !DISubprogram(name: "df_byte_lr_simulate_defs", scope: !3, file: !3, line: 2918, type: !3478, scopeLine: 2919, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3480)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{null, !836, !758}
!3480 = !{!3481, !3482, !3483, !3484, !3485, !3486, !3490, !3493, !3494, !3495, !3496}
!3481 = !DILocalVariable(name: "insn", arg: 1, scope: !3477, file: !3, line: 2918, type: !836)
!3482 = !DILocalVariable(name: "live", arg: 2, scope: !3477, file: !3, line: 2918, type: !758)
!3483 = !DILocalVariable(name: "problem_data", scope: !3477, file: !3, line: 2920, type: !1987)
!3484 = !DILocalVariable(name: "def_rec", scope: !3477, file: !3, line: 2922, type: !1948)
!3485 = !DILocalVariable(name: "uid", scope: !3477, file: !3, line: 2923, type: !7)
!3486 = !DILocalVariable(name: "def", scope: !3487, file: !3, line: 2927, type: !825)
!3487 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 2926, column: 5)
!3488 = distinct !DILexicalBlock(scope: !3489, file: !3, line: 2925, column: 3)
!3489 = distinct !DILexicalBlock(scope: !3477, file: !3, line: 2925, column: 3)
!3490 = !DILocalVariable(name: "dregno", scope: !3491, file: !3, line: 2933, type: !7)
!3491 = distinct !DILexicalBlock(scope: !3492, file: !3, line: 2932, column: 2)
!3492 = distinct !DILexicalBlock(scope: !3487, file: !3, line: 2931, column: 11)
!3493 = !DILocalVariable(name: "start", scope: !3491, file: !3, line: 2934, type: !7)
!3494 = !DILocalVariable(name: "len", scope: !3491, file: !3, line: 2935, type: !7)
!3495 = !DILocalVariable(name: "sb", scope: !3491, file: !3, line: 2936, type: !7)
!3496 = !DILocalVariable(name: "lb", scope: !3491, file: !3, line: 2937, type: !7)
!3497 = !DILocation(line: 0, scope: !3477)
!3498 = !DILocation(line: 2921, column: 41, scope: !3477)
!3499 = !DILocation(line: 2921, column: 53, scope: !3477)
!3500 = !DILocation(line: 2923, column: 22, scope: !3477)
!3501 = !DILocation(line: 2925, column: 18, scope: !3489)
!3502 = !DILocation(line: 0, scope: !3491)
!3503 = !DILocation(line: 2925, column: 8, scope: !3489)
!3504 = !DILocation(line: 0, scope: !3489)
!3505 = !DILocation(line: 2925, column: 42, scope: !3488)
!3506 = !DILocation(line: 2925, column: 3, scope: !3489)
!3507 = !DILocation(line: 0, scope: !3487)
!3508 = !DILocation(line: 2931, column: 13, scope: !3492)
!3509 = !DILocation(line: 2931, column: 32, scope: !3492)
!3510 = !DILocation(line: 2931, column: 11, scope: !3487)
!3511 = !DILocation(line: 2933, column: 26, scope: !3491)
!3512 = !DILocation(line: 2934, column: 39, scope: !3491)
!3513 = !DILocation(line: 2934, column: 25, scope: !3491)
!3514 = !DILocation(line: 2935, column: 37, scope: !3491)
!3515 = !DILocation(line: 2935, column: 23, scope: !3491)
!3516 = !DILocation(line: 2936, column: 4, scope: !3491)
!3517 = !DILocation(line: 2937, column: 4, scope: !3491)
!3518 = !DILocation(line: 2938, column: 9, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 2938, column: 8)
!3520 = !DILocation(line: 2938, column: 8, scope: !3491)
!3521 = !DILocation(line: 2940, column: 17, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3519, file: !3, line: 2939, column: 6)
!3523 = !DILocation(line: 2940, column: 14, scope: !3522)
!3524 = !DILocation(line: 2941, column: 14, scope: !3522)
!3525 = !DILocation(line: 2941, column: 17, scope: !3522)
!3526 = !DILocation(line: 2942, column: 6, scope: !3522)
!3527 = !DILocation(line: 2944, column: 8, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3491, file: !3, line: 2944, column: 8)
!3529 = !DILocation(line: 2944, column: 8, scope: !3491)
!3530 = !DILocation(line: 2945, column: 6, scope: !3528)
!3531 = !DILocation(line: 2946, column: 2, scope: !3492)
!3532 = !DILocation(line: 2946, column: 2, scope: !3491)
!3533 = !DILocation(line: 2925, column: 59, scope: !3488)
!3534 = !DILocation(line: 2925, column: 3, scope: !3488)
!3535 = distinct !{!3535, !3506, !3536}
!3536 = !DILocation(line: 2947, column: 5, scope: !3489)
!3537 = !DILocation(line: 2948, column: 1, scope: !3477)
!3538 = distinct !DISubprogram(name: "df_byte_lr_simulate_uses", scope: !3, file: !3, line: 2954, type: !3478, scopeLine: 2955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3539)
!3539 = !{!3540, !3541, !3542, !3543, !3544, !3545, !3549, !3550, !3551, !3552, !3553}
!3540 = !DILocalVariable(name: "insn", arg: 1, scope: !3538, file: !3, line: 2954, type: !836)
!3541 = !DILocalVariable(name: "live", arg: 2, scope: !3538, file: !3, line: 2954, type: !758)
!3542 = !DILocalVariable(name: "problem_data", scope: !3538, file: !3, line: 2956, type: !1987)
!3543 = !DILocalVariable(name: "use_rec", scope: !3538, file: !3, line: 2958, type: !1948)
!3544 = !DILocalVariable(name: "uid", scope: !3538, file: !3, line: 2959, type: !7)
!3545 = !DILocalVariable(name: "use", scope: !3546, file: !3, line: 2963, type: !825)
!3546 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 2962, column: 5)
!3547 = distinct !DILexicalBlock(scope: !3548, file: !3, line: 2961, column: 3)
!3548 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 2961, column: 3)
!3549 = !DILocalVariable(name: "uregno", scope: !3546, file: !3, line: 2964, type: !7)
!3550 = !DILocalVariable(name: "start", scope: !3546, file: !3, line: 2965, type: !7)
!3551 = !DILocalVariable(name: "len", scope: !3546, file: !3, line: 2966, type: !7)
!3552 = !DILocalVariable(name: "sb", scope: !3546, file: !3, line: 2967, type: !7)
!3553 = !DILocalVariable(name: "lb", scope: !3546, file: !3, line: 2968, type: !7)
!3554 = !DILocation(line: 0, scope: !3538)
!3555 = !DILocation(line: 2957, column: 41, scope: !3538)
!3556 = !DILocation(line: 2957, column: 53, scope: !3538)
!3557 = !DILocation(line: 2959, column: 22, scope: !3538)
!3558 = !DILocation(line: 2961, column: 18, scope: !3548)
!3559 = !DILocation(line: 0, scope: !3546)
!3560 = !DILocation(line: 2961, column: 8, scope: !3548)
!3561 = !DILocation(line: 0, scope: !3548)
!3562 = !DILocation(line: 2961, column: 42, scope: !3547)
!3563 = !DILocation(line: 2961, column: 3, scope: !3548)
!3564 = !DILocation(line: 2964, column: 29, scope: !3546)
!3565 = !DILocation(line: 2965, column: 42, scope: !3546)
!3566 = !DILocation(line: 2965, column: 28, scope: !3546)
!3567 = !DILocation(line: 2966, column: 40, scope: !3546)
!3568 = !DILocation(line: 2966, column: 26, scope: !3546)
!3569 = !DILocation(line: 2967, column: 7, scope: !3546)
!3570 = !DILocation(line: 2968, column: 7, scope: !3546)
!3571 = !DILocation(line: 2970, column: 12, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 2970, column: 11)
!3573 = !DILocation(line: 2970, column: 11, scope: !3546)
!3574 = !DILocation(line: 2972, column: 13, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 2971, column: 2)
!3576 = !DILocation(line: 2972, column: 10, scope: !3575)
!3577 = !DILocation(line: 2973, column: 10, scope: !3575)
!3578 = !DILocation(line: 2973, column: 13, scope: !3575)
!3579 = !DILocation(line: 2974, column: 2, scope: !3575)
!3580 = !DILocation(line: 2977, column: 11, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 2977, column: 11)
!3582 = !DILocation(line: 2977, column: 11, scope: !3546)
!3583 = !DILocation(line: 2978, column: 2, scope: !3581)
!3584 = !DILocation(line: 2979, column: 5, scope: !3547)
!3585 = !DILocation(line: 2961, column: 59, scope: !3547)
!3586 = !DILocation(line: 2961, column: 3, scope: !3547)
!3587 = distinct !{!3587, !3563, !3588}
!3588 = !DILocation(line: 2979, column: 5, scope: !3548)
!3589 = !DILocation(line: 2980, column: 1, scope: !3538)
!3590 = distinct !DISubprogram(name: "df_byte_lr_simulate_artificial_refs_at_top", scope: !3, file: !3, line: 2987, type: !2841, scopeLine: 2988, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3591)
!3591 = !{!3592, !3593, !3594, !3595, !3596, !3597, !3601, !3604, !3605}
!3592 = !DILocalVariable(name: "bb", arg: 1, scope: !3590, file: !3, line: 2987, type: !1307)
!3593 = !DILocalVariable(name: "live", arg: 2, scope: !3590, file: !3, line: 2987, type: !758)
!3594 = !DILocalVariable(name: "problem_data", scope: !3590, file: !3, line: 2989, type: !1987)
!3595 = !DILocalVariable(name: "def_rec", scope: !3590, file: !3, line: 2991, type: !1948)
!3596 = !DILocalVariable(name: "bb_index", scope: !3590, file: !3, line: 2995, type: !750)
!3597 = !DILocalVariable(name: "def", scope: !3598, file: !3, line: 3013, type: !825)
!3598 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 3012, column: 5)
!3599 = distinct !DILexicalBlock(scope: !3600, file: !3, line: 3011, column: 3)
!3600 = distinct !DILexicalBlock(scope: !3590, file: !3, line: 3011, column: 3)
!3601 = !DILocalVariable(name: "dregno", scope: !3602, file: !3, line: 3016, type: !7)
!3602 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 3015, column: 2)
!3603 = distinct !DILexicalBlock(scope: !3598, file: !3, line: 3014, column: 11)
!3604 = !DILocalVariable(name: "start", scope: !3602, file: !3, line: 3017, type: !7)
!3605 = !DILocalVariable(name: "len", scope: !3602, file: !3, line: 3018, type: !7)
!3606 = !DILocation(line: 0, scope: !3590)
!3607 = !DILocation(line: 2990, column: 41, scope: !3590)
!3608 = !DILocation(line: 2990, column: 53, scope: !3590)
!3609 = !DILocation(line: 2995, column: 22, scope: !3590)
!3610 = !DILocation(line: 3011, column: 18, scope: !3600)
!3611 = !DILocation(line: 0, scope: !3602)
!3612 = !DILocation(line: 3011, column: 8, scope: !3600)
!3613 = !DILocation(line: 0, scope: !3600)
!3614 = !DILocation(line: 3011, column: 53, scope: !3599)
!3615 = !DILocation(line: 3011, column: 3, scope: !3600)
!3616 = !DILocation(line: 0, scope: !3598)
!3617 = !DILocation(line: 3014, column: 11, scope: !3603)
!3618 = !DILocation(line: 3014, column: 30, scope: !3603)
!3619 = !DILocation(line: 3014, column: 11, scope: !3598)
!3620 = !DILocation(line: 3016, column: 26, scope: !3602)
!3621 = !DILocation(line: 3017, column: 39, scope: !3602)
!3622 = !DILocation(line: 3017, column: 25, scope: !3602)
!3623 = !DILocation(line: 3018, column: 37, scope: !3602)
!3624 = !DILocation(line: 3018, column: 23, scope: !3602)
!3625 = !DILocation(line: 3019, column: 4, scope: !3602)
!3626 = !DILocation(line: 3020, column: 2, scope: !3602)
!3627 = !DILocation(line: 3011, column: 70, scope: !3599)
!3628 = !DILocation(line: 3011, column: 3, scope: !3599)
!3629 = distinct !{!3629, !3615, !3630}
!3630 = !DILocation(line: 3021, column: 5, scope: !3600)
!3631 = !DILocation(line: 3022, column: 1, scope: !3590)
!3632 = distinct !DISubprogram(name: "df_byte_lr_simulate_artificial_refs_at_end", scope: !3, file: !3, line: 3029, type: !2841, scopeLine: 3030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3633)
!3633 = !{!3634, !3635, !3636, !3637, !3638, !3639, !3640, !3644, !3647, !3648, !3649, !3653, !3656, !3657}
!3634 = !DILocalVariable(name: "bb", arg: 1, scope: !3632, file: !3, line: 3029, type: !1307)
!3635 = !DILocalVariable(name: "live", arg: 2, scope: !3632, file: !3, line: 3029, type: !758)
!3636 = !DILocalVariable(name: "problem_data", scope: !3632, file: !3, line: 3031, type: !1987)
!3637 = !DILocalVariable(name: "def_rec", scope: !3632, file: !3, line: 3033, type: !1948)
!3638 = !DILocalVariable(name: "use_rec", scope: !3632, file: !3, line: 3034, type: !1948)
!3639 = !DILocalVariable(name: "bb_index", scope: !3632, file: !3, line: 3035, type: !750)
!3640 = !DILocalVariable(name: "def", scope: !3641, file: !3, line: 3039, type: !825)
!3641 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 3038, column: 5)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 3037, column: 3)
!3643 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 3037, column: 3)
!3644 = !DILocalVariable(name: "dregno", scope: !3645, file: !3, line: 3042, type: !7)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 3041, column: 2)
!3646 = distinct !DILexicalBlock(scope: !3641, file: !3, line: 3040, column: 11)
!3647 = !DILocalVariable(name: "start", scope: !3645, file: !3, line: 3043, type: !7)
!3648 = !DILocalVariable(name: "len", scope: !3645, file: !3, line: 3044, type: !7)
!3649 = !DILocalVariable(name: "use", scope: !3650, file: !3, line: 3051, type: !825)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 3050, column: 5)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 3049, column: 3)
!3652 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 3049, column: 3)
!3653 = !DILocalVariable(name: "uregno", scope: !3654, file: !3, line: 3054, type: !7)
!3654 = distinct !DILexicalBlock(scope: !3655, file: !3, line: 3053, column: 2)
!3655 = distinct !DILexicalBlock(scope: !3650, file: !3, line: 3052, column: 11)
!3656 = !DILocalVariable(name: "start", scope: !3654, file: !3, line: 3055, type: !7)
!3657 = !DILocalVariable(name: "len", scope: !3654, file: !3, line: 3056, type: !7)
!3658 = !DILocation(line: 0, scope: !3632)
!3659 = !DILocation(line: 3032, column: 41, scope: !3632)
!3660 = !DILocation(line: 3032, column: 53, scope: !3632)
!3661 = !DILocation(line: 3035, column: 22, scope: !3632)
!3662 = !DILocation(line: 3037, column: 18, scope: !3643)
!3663 = !DILocation(line: 0, scope: !3645)
!3664 = !DILocation(line: 3037, column: 8, scope: !3643)
!3665 = !DILocation(line: 0, scope: !3643)
!3666 = !DILocation(line: 3037, column: 53, scope: !3642)
!3667 = !DILocation(line: 3037, column: 3, scope: !3643)
!3668 = !DILocation(line: 0, scope: !3641)
!3669 = !DILocation(line: 3040, column: 12, scope: !3646)
!3670 = !DILocation(line: 3040, column: 31, scope: !3646)
!3671 = !DILocation(line: 3040, column: 48, scope: !3646)
!3672 = !DILocation(line: 3040, column: 11, scope: !3641)
!3673 = !DILocation(line: 3042, column: 26, scope: !3645)
!3674 = !DILocation(line: 3043, column: 39, scope: !3645)
!3675 = !DILocation(line: 3043, column: 25, scope: !3645)
!3676 = !DILocation(line: 3044, column: 37, scope: !3645)
!3677 = !DILocation(line: 3044, column: 23, scope: !3645)
!3678 = !DILocation(line: 3045, column: 4, scope: !3645)
!3679 = !DILocation(line: 3046, column: 2, scope: !3645)
!3680 = !DILocation(line: 3037, column: 70, scope: !3642)
!3681 = !DILocation(line: 3037, column: 3, scope: !3642)
!3682 = distinct !{!3682, !3667, !3683}
!3683 = !DILocation(line: 3047, column: 5, scope: !3643)
!3684 = !DILocation(line: 3049, column: 18, scope: !3652)
!3685 = !DILocation(line: 3049, column: 8, scope: !3652)
!3686 = !DILocation(line: 0, scope: !3652)
!3687 = !DILocation(line: 3049, column: 53, scope: !3651)
!3688 = !DILocation(line: 3049, column: 3, scope: !3652)
!3689 = !DILocation(line: 0, scope: !3650)
!3690 = !DILocation(line: 3052, column: 12, scope: !3655)
!3691 = !DILocation(line: 3052, column: 31, scope: !3655)
!3692 = !DILocation(line: 3052, column: 48, scope: !3655)
!3693 = !DILocation(line: 3052, column: 11, scope: !3650)
!3694 = !DILocation(line: 3054, column: 26, scope: !3654)
!3695 = !DILocation(line: 0, scope: !3654)
!3696 = !DILocation(line: 3055, column: 39, scope: !3654)
!3697 = !DILocation(line: 3055, column: 25, scope: !3654)
!3698 = !DILocation(line: 3056, column: 37, scope: !3654)
!3699 = !DILocation(line: 3056, column: 23, scope: !3654)
!3700 = !DILocation(line: 3057, column: 4, scope: !3654)
!3701 = !DILocation(line: 3058, column: 2, scope: !3654)
!3702 = !DILocation(line: 3049, column: 70, scope: !3651)
!3703 = !DILocation(line: 3049, column: 3, scope: !3651)
!3704 = distinct !{!3704, !3688, !3705}
!3705 = !DILocation(line: 3059, column: 5, scope: !3652)
!3706 = !DILocation(line: 3060, column: 1, scope: !3632)
!3707 = distinct !DISubprogram(name: "df_get_artificial_uses", scope: !385, file: !385, line: 1099, type: !2883, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3708)
!3708 = !{!3709}
!3709 = !DILocalVariable(name: "bb_index", arg: 1, scope: !3707, file: !385, line: 1099, type: !7)
!3710 = !DILocation(line: 0, scope: !3707)
!3711 = !DILocation(line: 1101, column: 10, scope: !3707)
!3712 = !DILocation(line: 1101, column: 42, scope: !3707)
!3713 = !DILocation(line: 1101, column: 3, scope: !3707)
!3714 = distinct !DISubprogram(name: "df_note_add_problem", scope: !3, file: !3, line: 3711, type: !2145, scopeLine: 3712, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!3715 = !DILocation(line: 3713, column: 3, scope: !3714)
!3716 = !DILocation(line: 3714, column: 1, scope: !3714)
!3717 = distinct !DISubprogram(name: "df_simulate_find_defs", scope: !3, file: !3, line: 3740, type: !3478, scopeLine: 3741, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3718)
!3718 = !{!3719, !3720, !3721, !3722, !3723}
!3719 = !DILocalVariable(name: "insn", arg: 1, scope: !3717, file: !3, line: 3740, type: !836)
!3720 = !DILocalVariable(name: "defs", arg: 2, scope: !3717, file: !3, line: 3740, type: !758)
!3721 = !DILocalVariable(name: "def_rec", scope: !3717, file: !3, line: 3742, type: !1948)
!3722 = !DILocalVariable(name: "uid", scope: !3717, file: !3, line: 3743, type: !7)
!3723 = !DILocalVariable(name: "def", scope: !3724, file: !3, line: 3747, type: !825)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 3746, column: 5)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 3745, column: 3)
!3726 = distinct !DILexicalBlock(scope: !3717, file: !3, line: 3745, column: 3)
!3727 = !DILocation(line: 0, scope: !3717)
!3728 = !DILocation(line: 3743, column: 22, scope: !3717)
!3729 = !DILocation(line: 3745, column: 18, scope: !3726)
!3730 = !DILocation(line: 3745, column: 8, scope: !3726)
!3731 = !DILocation(line: 0, scope: !3726)
!3732 = !DILocation(line: 3745, column: 42, scope: !3725)
!3733 = !DILocation(line: 3745, column: 3, scope: !3726)
!3734 = !DILocation(line: 0, scope: !3724)
!3735 = !DILocation(line: 3750, column: 13, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3724, file: !3, line: 3750, column: 11)
!3737 = !DILocation(line: 3750, column: 32, scope: !3736)
!3738 = !DILocation(line: 3750, column: 11, scope: !3724)
!3739 = !DILocation(line: 3751, column: 24, scope: !3736)
!3740 = !DILocation(line: 3751, column: 2, scope: !3736)
!3741 = !DILocation(line: 3745, column: 59, scope: !3725)
!3742 = !DILocation(line: 3745, column: 3, scope: !3725)
!3743 = distinct !{!3743, !3733, !3744}
!3744 = !DILocation(line: 3752, column: 5, scope: !3726)
!3745 = !DILocation(line: 3753, column: 1, scope: !3717)
!3746 = distinct !DISubprogram(name: "df_simulate_defs", scope: !3, file: !3, line: 3759, type: !3478, scopeLine: 3760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3747)
!3747 = !{!3748, !3749, !3750, !3751, !3752, !3756}
!3748 = !DILocalVariable(name: "insn", arg: 1, scope: !3746, file: !3, line: 3759, type: !836)
!3749 = !DILocalVariable(name: "live", arg: 2, scope: !3746, file: !3, line: 3759, type: !758)
!3750 = !DILocalVariable(name: "def_rec", scope: !3746, file: !3, line: 3761, type: !1948)
!3751 = !DILocalVariable(name: "uid", scope: !3746, file: !3, line: 3762, type: !7)
!3752 = !DILocalVariable(name: "def", scope: !3753, file: !3, line: 3766, type: !825)
!3753 = distinct !DILexicalBlock(scope: !3754, file: !3, line: 3765, column: 5)
!3754 = distinct !DILexicalBlock(scope: !3755, file: !3, line: 3764, column: 3)
!3755 = distinct !DILexicalBlock(scope: !3746, file: !3, line: 3764, column: 3)
!3756 = !DILocalVariable(name: "dregno", scope: !3753, file: !3, line: 3767, type: !7)
!3757 = !DILocation(line: 0, scope: !3746)
!3758 = !DILocation(line: 3762, column: 22, scope: !3746)
!3759 = !DILocation(line: 3764, column: 18, scope: !3755)
!3760 = !DILocation(line: 3764, column: 8, scope: !3755)
!3761 = !DILocation(line: 0, scope: !3755)
!3762 = !DILocation(line: 3764, column: 42, scope: !3754)
!3763 = !DILocation(line: 3764, column: 3, scope: !3755)
!3764 = !DILocation(line: 0, scope: !3753)
!3765 = !DILocation(line: 3771, column: 13, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 3771, column: 11)
!3767 = !DILocation(line: 3771, column: 32, scope: !3766)
!3768 = !DILocation(line: 3771, column: 11, scope: !3753)
!3769 = !DILocation(line: 3767, column: 29, scope: !3753)
!3770 = !DILocation(line: 3772, column: 2, scope: !3766)
!3771 = !DILocation(line: 3764, column: 59, scope: !3754)
!3772 = !DILocation(line: 3764, column: 3, scope: !3754)
!3773 = distinct !{!3773, !3763, !3774}
!3774 = !DILocation(line: 3773, column: 5, scope: !3755)
!3775 = !DILocation(line: 3774, column: 1, scope: !3746)
!3776 = distinct !DISubprogram(name: "df_simulate_uses", scope: !3, file: !3, line: 3780, type: !3478, scopeLine: 3781, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3777)
!3777 = !{!3778, !3779, !3780, !3781, !3782}
!3778 = !DILocalVariable(name: "insn", arg: 1, scope: !3776, file: !3, line: 3780, type: !836)
!3779 = !DILocalVariable(name: "live", arg: 2, scope: !3776, file: !3, line: 3780, type: !758)
!3780 = !DILocalVariable(name: "use_rec", scope: !3776, file: !3, line: 3782, type: !1948)
!3781 = !DILocalVariable(name: "uid", scope: !3776, file: !3, line: 3783, type: !7)
!3782 = !DILocalVariable(name: "use", scope: !3783, file: !3, line: 3790, type: !825)
!3783 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 3789, column: 5)
!3784 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 3788, column: 3)
!3785 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 3788, column: 3)
!3786 = !DILocation(line: 0, scope: !3776)
!3787 = !DILocation(line: 3785, column: 7, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3776, file: !3, line: 3785, column: 7)
!3789 = !DILocation(line: 3785, column: 7, scope: !3776)
!3790 = !DILocation(line: 3783, column: 22, scope: !3776)
!3791 = !DILocation(line: 3788, column: 18, scope: !3785)
!3792 = !DILocation(line: 3788, column: 8, scope: !3785)
!3793 = !DILocation(line: 0, scope: !3785)
!3794 = !DILocation(line: 3788, column: 42, scope: !3784)
!3795 = !DILocation(line: 3788, column: 3, scope: !3785)
!3796 = !DILocation(line: 3792, column: 29, scope: !3783)
!3797 = !DILocation(line: 3792, column: 7, scope: !3783)
!3798 = !DILocation(line: 3788, column: 59, scope: !3784)
!3799 = !DILocation(line: 3788, column: 3, scope: !3784)
!3800 = distinct !{!3800, !3795, !3801}
!3801 = !DILocation(line: 3793, column: 5, scope: !3785)
!3802 = !DILocation(line: 3794, column: 1, scope: !3776)
!3803 = distinct !DISubprogram(name: "df_simulate_initialize_backwards", scope: !3, file: !3, line: 3827, type: !2841, scopeLine: 3828, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3804)
!3804 = !{!3805, !3806, !3807, !3808, !3809, !3810, !3814}
!3805 = !DILocalVariable(name: "bb", arg: 1, scope: !3803, file: !3, line: 3827, type: !1307)
!3806 = !DILocalVariable(name: "live", arg: 2, scope: !3803, file: !3, line: 3827, type: !758)
!3807 = !DILocalVariable(name: "def_rec", scope: !3803, file: !3, line: 3829, type: !1948)
!3808 = !DILocalVariable(name: "use_rec", scope: !3803, file: !3, line: 3830, type: !1948)
!3809 = !DILocalVariable(name: "bb_index", scope: !3803, file: !3, line: 3831, type: !750)
!3810 = !DILocalVariable(name: "def", scope: !3811, file: !3, line: 3835, type: !825)
!3811 = distinct !DILexicalBlock(scope: !3812, file: !3, line: 3834, column: 5)
!3812 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 3833, column: 3)
!3813 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 3833, column: 3)
!3814 = !DILocalVariable(name: "use", scope: !3815, file: !3, line: 3842, type: !825)
!3815 = distinct !DILexicalBlock(scope: !3816, file: !3, line: 3841, column: 5)
!3816 = distinct !DILexicalBlock(scope: !3817, file: !3, line: 3840, column: 3)
!3817 = distinct !DILexicalBlock(scope: !3803, file: !3, line: 3840, column: 3)
!3818 = !DILocation(line: 0, scope: !3803)
!3819 = !DILocation(line: 3831, column: 22, scope: !3803)
!3820 = !DILocation(line: 3833, column: 18, scope: !3813)
!3821 = !DILocation(line: 3833, column: 8, scope: !3813)
!3822 = !DILocation(line: 0, scope: !3813)
!3823 = !DILocation(line: 3833, column: 53, scope: !3812)
!3824 = !DILocation(line: 3833, column: 3, scope: !3813)
!3825 = !DILocation(line: 0, scope: !3811)
!3826 = !DILocation(line: 3836, column: 12, scope: !3827)
!3827 = distinct !DILexicalBlock(scope: !3811, file: !3, line: 3836, column: 11)
!3828 = !DILocation(line: 3836, column: 31, scope: !3827)
!3829 = !DILocation(line: 3836, column: 48, scope: !3827)
!3830 = !DILocation(line: 3836, column: 11, scope: !3811)
!3831 = !DILocation(line: 3837, column: 26, scope: !3827)
!3832 = !DILocation(line: 3837, column: 2, scope: !3827)
!3833 = !DILocation(line: 3833, column: 70, scope: !3812)
!3834 = !DILocation(line: 3833, column: 3, scope: !3812)
!3835 = distinct !{!3835, !3824, !3836}
!3836 = !DILocation(line: 3838, column: 5, scope: !3813)
!3837 = !DILocation(line: 3840, column: 18, scope: !3817)
!3838 = !DILocation(line: 3840, column: 8, scope: !3817)
!3839 = !DILocation(line: 0, scope: !3817)
!3840 = !DILocation(line: 3840, column: 53, scope: !3816)
!3841 = !DILocation(line: 3840, column: 3, scope: !3817)
!3842 = !DILocation(line: 0, scope: !3815)
!3843 = !DILocation(line: 3843, column: 12, scope: !3844)
!3844 = distinct !DILexicalBlock(scope: !3815, file: !3, line: 3843, column: 11)
!3845 = !DILocation(line: 3843, column: 31, scope: !3844)
!3846 = !DILocation(line: 3843, column: 48, scope: !3844)
!3847 = !DILocation(line: 3843, column: 11, scope: !3815)
!3848 = !DILocation(line: 3844, column: 24, scope: !3844)
!3849 = !DILocation(line: 3844, column: 2, scope: !3844)
!3850 = !DILocation(line: 3840, column: 70, scope: !3816)
!3851 = !DILocation(line: 3840, column: 3, scope: !3816)
!3852 = distinct !{!3852, !3841, !3853}
!3853 = !DILocation(line: 3845, column: 5, scope: !3817)
!3854 = !DILocation(line: 3846, column: 1, scope: !3803)
!3855 = distinct !DISubprogram(name: "df_simulate_one_insn_backwards", scope: !3, file: !3, line: 3852, type: !2892, scopeLine: 3853, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3856)
!3856 = !{!3857, !3858, !3859}
!3857 = !DILocalVariable(name: "bb", arg: 1, scope: !3855, file: !3, line: 3852, type: !1307)
!3858 = !DILocalVariable(name: "insn", arg: 2, scope: !3855, file: !3, line: 3852, type: !836)
!3859 = !DILocalVariable(name: "live", arg: 3, scope: !3855, file: !3, line: 3852, type: !758)
!3860 = !DILocation(line: 0, scope: !3855)
!3861 = !DILocation(line: 3854, column: 8, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 3854, column: 7)
!3863 = !DILocation(line: 3854, column: 7, scope: !3855)
!3864 = !DILocation(line: 3857, column: 3, scope: !3855)
!3865 = !DILocation(line: 3858, column: 3, scope: !3855)
!3866 = !DILocation(line: 3859, column: 3, scope: !3855)
!3867 = !DILocation(line: 3860, column: 1, scope: !3855)
!3868 = distinct !DISubprogram(name: "df_simulate_fixup_sets", scope: !3, file: !3, line: 3800, type: !2841, scopeLine: 3801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3869)
!3869 = !{!3870, !3871}
!3870 = !DILocalVariable(name: "bb", arg: 1, scope: !3868, file: !3, line: 3800, type: !1307)
!3871 = !DILocalVariable(name: "live", arg: 2, scope: !3868, file: !3, line: 3800, type: !758)
!3872 = !DILocation(line: 0, scope: !3868)
!3873 = !DILocation(line: 3804, column: 7, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 3804, column: 7)
!3875 = !DILocation(line: 0, scope: !3874)
!3876 = !DILocation(line: 3804, column: 7, scope: !3868)
!3877 = !DILocation(line: 3805, column: 32, scope: !3874)
!3878 = !DILocation(line: 3805, column: 5, scope: !3874)
!3879 = !DILocation(line: 3807, column: 32, scope: !3874)
!3880 = !DILocation(line: 3807, column: 5, scope: !3874)
!3881 = !DILocation(line: 3808, column: 1, scope: !3868)
!3882 = distinct !DISubprogram(name: "df_simulate_finalize_backwards", scope: !3, file: !3, line: 3867, type: !2841, scopeLine: 3868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3883)
!3883 = !{!3884, !3885, !3886, !3887, !3888}
!3884 = !DILocalVariable(name: "bb", arg: 1, scope: !3882, file: !3, line: 3867, type: !1307)
!3885 = !DILocalVariable(name: "live", arg: 2, scope: !3882, file: !3, line: 3867, type: !758)
!3886 = !DILocalVariable(name: "def_rec", scope: !3882, file: !3, line: 3869, type: !1948)
!3887 = !DILocalVariable(name: "bb_index", scope: !3882, file: !3, line: 3873, type: !750)
!3888 = !DILocalVariable(name: "def", scope: !3889, file: !3, line: 3877, type: !825)
!3889 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 3876, column: 5)
!3890 = distinct !DILexicalBlock(scope: !3891, file: !3, line: 3875, column: 3)
!3891 = distinct !DILexicalBlock(scope: !3882, file: !3, line: 3875, column: 3)
!3892 = !DILocation(line: 0, scope: !3882)
!3893 = !DILocation(line: 3873, column: 22, scope: !3882)
!3894 = !DILocation(line: 3875, column: 18, scope: !3891)
!3895 = !DILocation(line: 3875, column: 8, scope: !3891)
!3896 = !DILocation(line: 0, scope: !3891)
!3897 = !DILocation(line: 3875, column: 53, scope: !3890)
!3898 = !DILocation(line: 3875, column: 3, scope: !3891)
!3899 = !DILocation(line: 0, scope: !3889)
!3900 = !DILocation(line: 3878, column: 11, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3889, file: !3, line: 3878, column: 11)
!3902 = !DILocation(line: 3878, column: 30, scope: !3901)
!3903 = !DILocation(line: 3878, column: 11, scope: !3889)
!3904 = !DILocation(line: 3879, column: 26, scope: !3901)
!3905 = !DILocation(line: 3879, column: 2, scope: !3901)
!3906 = !DILocation(line: 3875, column: 70, scope: !3890)
!3907 = !DILocation(line: 3875, column: 3, scope: !3890)
!3908 = distinct !{!3908, !3898, !3909}
!3909 = !DILocation(line: 3880, column: 5, scope: !3891)
!3910 = !DILocation(line: 3890, column: 1, scope: !3882)
!3911 = distinct !DISubprogram(name: "df_simulate_initialize_forwards", scope: !3, file: !3, line: 3912, type: !2841, scopeLine: 3913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3912)
!3912 = !{!3913, !3914, !3915, !3916, !3917}
!3913 = !DILocalVariable(name: "bb", arg: 1, scope: !3911, file: !3, line: 3912, type: !1307)
!3914 = !DILocalVariable(name: "live", arg: 2, scope: !3911, file: !3, line: 3912, type: !758)
!3915 = !DILocalVariable(name: "def_rec", scope: !3911, file: !3, line: 3914, type: !1948)
!3916 = !DILocalVariable(name: "bb_index", scope: !3911, file: !3, line: 3915, type: !750)
!3917 = !DILocalVariable(name: "def", scope: !3918, file: !3, line: 3919, type: !825)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !3, line: 3918, column: 5)
!3919 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 3917, column: 3)
!3920 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 3917, column: 3)
!3921 = !DILocation(line: 0, scope: !3911)
!3922 = !DILocation(line: 3915, column: 22, scope: !3911)
!3923 = !DILocation(line: 3917, column: 18, scope: !3920)
!3924 = !DILocation(line: 3917, column: 8, scope: !3920)
!3925 = !DILocation(line: 0, scope: !3920)
!3926 = !DILocation(line: 3917, column: 53, scope: !3919)
!3927 = !DILocation(line: 3917, column: 3, scope: !3920)
!3928 = !DILocation(line: 0, scope: !3918)
!3929 = !DILocation(line: 3920, column: 11, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3918, file: !3, line: 3920, column: 11)
!3931 = !DILocation(line: 3920, column: 30, scope: !3930)
!3932 = !DILocation(line: 3920, column: 11, scope: !3918)
!3933 = !DILocation(line: 3921, column: 26, scope: !3930)
!3934 = !DILocation(line: 3921, column: 2, scope: !3930)
!3935 = !DILocation(line: 3917, column: 70, scope: !3919)
!3936 = !DILocation(line: 3917, column: 3, scope: !3919)
!3937 = distinct !{!3937, !3927, !3938}
!3938 = !DILocation(line: 3922, column: 5, scope: !3920)
!3939 = !DILocation(line: 3923, column: 1, scope: !3911)
!3940 = distinct !DISubprogram(name: "df_simulate_one_insn_forwards", scope: !3, file: !3, line: 3928, type: !2892, scopeLine: 3929, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3941)
!3941 = !{!3942, !3943, !3944, !3945, !3946, !3952, !3953}
!3942 = !DILocalVariable(name: "bb", arg: 1, scope: !3940, file: !3, line: 3928, type: !1307)
!3943 = !DILocalVariable(name: "insn", arg: 2, scope: !3940, file: !3, line: 3928, type: !836)
!3944 = !DILocalVariable(name: "live", arg: 3, scope: !3940, file: !3, line: 3928, type: !758)
!3945 = !DILocalVariable(name: "link", scope: !3940, file: !3, line: 3930, type: !836)
!3946 = !DILocalVariable(name: "reg", scope: !3947, file: !3, line: 3952, type: !836)
!3947 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 3951, column: 4)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !3, line: 3948, column: 2)
!3949 = distinct !DILexicalBlock(scope: !3950, file: !3, line: 3946, column: 5)
!3950 = distinct !DILexicalBlock(scope: !3951, file: !3, line: 3945, column: 3)
!3951 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 3945, column: 3)
!3952 = !DILocalVariable(name: "regno", scope: !3947, file: !3, line: 3953, type: !750)
!3953 = !DILocalVariable(name: "n", scope: !3954, file: !3, line: 3956, type: !750)
!3954 = distinct !DILexicalBlock(scope: !3955, file: !3, line: 3955, column: 8)
!3955 = distinct !DILexicalBlock(scope: !3947, file: !3, line: 3954, column: 10)
!3956 = !DILocation(line: 0, scope: !3940)
!3957 = !DILocation(line: 3931, column: 9, scope: !3958)
!3958 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 3931, column: 7)
!3959 = !DILocation(line: 3931, column: 7, scope: !3940)
!3960 = !DILocation(line: 3935, column: 3, scope: !3940)
!3961 = !DILocation(line: 3942, column: 3, scope: !3940)
!3962 = !DILocation(line: 3945, column: 15, scope: !3951)
!3963 = !DILocation(line: 3945, column: 8, scope: !3951)
!3964 = !DILocation(line: 0, scope: !3951)
!3965 = !DILocation(line: 3945, column: 3, scope: !3951)
!3966 = !DILocation(line: 3947, column: 15, scope: !3949)
!3967 = !DILocation(line: 3947, column: 7, scope: !3949)
!3968 = !DILocation(line: 3952, column: 16, scope: !3947)
!3969 = !DILocation(line: 0, scope: !3947)
!3970 = !DILocation(line: 3953, column: 18, scope: !3947)
!3971 = !DILocation(line: 3954, column: 16, scope: !3955)
!3972 = !DILocation(line: 3954, column: 10, scope: !3947)
!3973 = !DILocation(line: 3956, column: 11, scope: !3954)
!3974 = !DILocation(line: 3956, column: 35, scope: !3954)
!3975 = !DILocation(line: 0, scope: !3954)
!3976 = !DILocation(line: 3957, column: 3, scope: !3954)
!3977 = !DILocation(line: 3957, column: 10, scope: !3954)
!3978 = !DILocation(line: 3957, column: 14, scope: !3954)
!3979 = !DILocation(line: 3958, column: 35, scope: !3954)
!3980 = !DILocation(line: 3958, column: 5, scope: !3954)
!3981 = distinct !{!3981, !3976, !3982}
!3982 = !DILocation(line: 3958, column: 38, scope: !3954)
!3983 = !DILocation(line: 3961, column: 8, scope: !3955)
!3984 = !DILocation(line: 3945, column: 46, scope: !3950)
!3985 = !DILocation(line: 3945, column: 3, scope: !3950)
!3986 = distinct !{!3986, !3965, !3987}
!3987 = !DILocation(line: 3967, column: 5, scope: !3951)
!3988 = !DILocation(line: 3968, column: 3, scope: !3940)
!3989 = !DILocation(line: 3969, column: 1, scope: !3940)
!3990 = distinct !DISubprogram(name: "rhs_regno", scope: !567, file: !567, line: 1051, type: !3991, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3996)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!7, !3993}
!3993 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !759, line: 51, baseType: !3994)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !838)
!3996 = !{!3997}
!3997 = !DILocalVariable(name: "x", arg: 1, scope: !3990, file: !567, line: 1051, type: !3993)
!3998 = !DILocation(line: 0, scope: !3990)
!3999 = !DILocation(line: 1053, column: 10, scope: !3990)
!4000 = !DILocation(line: 1053, column: 3, scope: !3990)
!4001 = distinct !DISubprogram(name: "df_md_simulate_artificial_defs_at_top", scope: !3, file: !3, line: 4099, type: !2841, scopeLine: 4100, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4002)
!4002 = !{!4003, !4004, !4005, !4006, !4007, !4011}
!4003 = !DILocalVariable(name: "bb", arg: 1, scope: !4001, file: !3, line: 4099, type: !1307)
!4004 = !DILocalVariable(name: "local_md", arg: 2, scope: !4001, file: !3, line: 4099, type: !758)
!4005 = !DILocalVariable(name: "bb_index", scope: !4001, file: !3, line: 4101, type: !750)
!4006 = !DILocalVariable(name: "def_rec", scope: !4001, file: !3, line: 4102, type: !1948)
!4007 = !DILocalVariable(name: "def", scope: !4008, file: !3, line: 4105, type: !825)
!4008 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 4104, column: 5)
!4009 = distinct !DILexicalBlock(scope: !4010, file: !3, line: 4103, column: 3)
!4010 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 4103, column: 3)
!4011 = !DILocalVariable(name: "dregno", scope: !4012, file: !3, line: 4108, type: !7)
!4012 = distinct !DILexicalBlock(scope: !4013, file: !3, line: 4107, column: 2)
!4013 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 4106, column: 11)
!4014 = !DILocation(line: 0, scope: !4001)
!4015 = !DILocation(line: 4101, column: 22, scope: !4001)
!4016 = !DILocation(line: 4103, column: 18, scope: !4010)
!4017 = !DILocation(line: 4103, column: 8, scope: !4010)
!4018 = !DILocation(line: 0, scope: !4010)
!4019 = !DILocation(line: 4103, column: 53, scope: !4009)
!4020 = !DILocation(line: 4103, column: 3, scope: !4010)
!4021 = !DILocation(line: 0, scope: !4008)
!4022 = !DILocation(line: 4106, column: 11, scope: !4013)
!4023 = !DILocation(line: 4106, column: 30, scope: !4013)
!4024 = !DILocation(line: 4106, column: 11, scope: !4008)
!4025 = !DILocation(line: 4108, column: 26, scope: !4012)
!4026 = !DILocation(line: 0, scope: !4012)
!4027 = !DILocation(line: 4110, column: 8, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4012, file: !3, line: 4109, column: 8)
!4029 = !DILocation(line: 4109, column: 8, scope: !4012)
!4030 = !DILocation(line: 4111, column: 6, scope: !4028)
!4031 = !DILocation(line: 4113, column: 6, scope: !4028)
!4032 = !DILocation(line: 4103, column: 70, scope: !4009)
!4033 = !DILocation(line: 4103, column: 3, scope: !4009)
!4034 = distinct !{!4034, !4020, !4035}
!4035 = !DILocation(line: 4115, column: 5, scope: !4010)
!4036 = !DILocation(line: 4116, column: 1, scope: !4001)
!4037 = distinct !DISubprogram(name: "df_md_simulate_one_insn", scope: !3, file: !3, line: 4123, type: !2892, scopeLine: 4125, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4038)
!4038 = !{!4039, !4040, !4041, !4042, !4043, !4044, !4048}
!4039 = !DILocalVariable(name: "bb", arg: 1, scope: !4037, file: !3, line: 4123, type: !1307)
!4040 = !DILocalVariable(name: "insn", arg: 2, scope: !4037, file: !3, line: 4123, type: !836)
!4041 = !DILocalVariable(name: "local_md", arg: 3, scope: !4037, file: !3, line: 4124, type: !758)
!4042 = !DILocalVariable(name: "uid", scope: !4037, file: !3, line: 4126, type: !7)
!4043 = !DILocalVariable(name: "def_rec", scope: !4037, file: !3, line: 4127, type: !1948)
!4044 = !DILocalVariable(name: "def", scope: !4045, file: !3, line: 4131, type: !825)
!4045 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 4130, column: 5)
!4046 = distinct !DILexicalBlock(scope: !4047, file: !3, line: 4129, column: 3)
!4047 = distinct !DILexicalBlock(scope: !4037, file: !3, line: 4129, column: 3)
!4048 = !DILocalVariable(name: "dregno", scope: !4045, file: !3, line: 4132, type: !7)
!4049 = !DILocation(line: 0, scope: !4037)
!4050 = !DILocation(line: 4126, column: 18, scope: !4037)
!4051 = !DILocation(line: 4129, column: 18, scope: !4047)
!4052 = !DILocation(line: 4129, column: 8, scope: !4047)
!4053 = !DILocation(line: 0, scope: !4047)
!4054 = !DILocation(line: 4129, column: 42, scope: !4046)
!4055 = !DILocation(line: 4129, column: 3, scope: !4047)
!4056 = !DILocation(line: 0, scope: !4045)
!4057 = !DILocation(line: 4132, column: 29, scope: !4045)
!4058 = !DILocation(line: 4133, column: 14, scope: !4059)
!4059 = distinct !DILexicalBlock(scope: !4045, file: !3, line: 4133, column: 11)
!4060 = !DILocation(line: 4133, column: 18, scope: !4059)
!4061 = !DILocation(line: 4133, column: 35, scope: !4059)
!4062 = !DILocation(line: 4134, column: 22, scope: !4059)
!4063 = !DILocation(line: 4134, column: 11, scope: !4059)
!4064 = !DILocation(line: 4136, column: 15, scope: !4065)
!4065 = distinct !DILexicalBlock(scope: !4066, file: !3, line: 4136, column: 15)
!4066 = distinct !DILexicalBlock(scope: !4059, file: !3, line: 4135, column: 9)
!4067 = !DILocation(line: 4137, column: 8, scope: !4065)
!4068 = !DILocation(line: 0, scope: !4065)
!4069 = !DILocation(line: 4136, column: 15, scope: !4066)
!4070 = !DILocation(line: 4138, column: 12, scope: !4065)
!4071 = !DILocation(line: 4140, column: 12, scope: !4065)
!4072 = !DILocation(line: 4129, column: 59, scope: !4046)
!4073 = !DILocation(line: 4129, column: 3, scope: !4046)
!4074 = distinct !{!4074, !4055, !4075}
!4075 = !DILocation(line: 4142, column: 5, scope: !4047)
!4076 = !DILocation(line: 4143, column: 1, scope: !4037)
!4077 = distinct !DISubprogram(name: "df_md_add_problem", scope: !3, file: !3, line: 4426, type: !2145, scopeLine: 4427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!4078 = !DILocation(line: 4428, column: 3, scope: !4077)
!4079 = !DILocation(line: 4429, column: 1, scope: !4077)
!4080 = distinct !DISubprogram(name: "ei_end_p", scope: !142, file: !142, line: 721, type: !4081, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4083)
!4081 = !DISubroutineType(types: !4082)
!4082 = !{!749, !2753}
!4083 = !{!4084}
!4084 = !DILocalVariable(name: "i", arg: 1, scope: !4080, file: !142, line: 721, type: !2753)
!4085 = !DILocation(line: 723, column: 22, scope: !4080)
!4086 = !DILocation(line: 723, column: 19, scope: !4080)
!4087 = !DILocation(line: 723, column: 10, scope: !4080)
!4088 = !DILocation(line: 723, column: 3, scope: !4080)
!4089 = distinct !DISubprogram(name: "ei_edge", scope: !142, file: !142, line: 752, type: !4090, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4092)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!1324, !2753}
!4092 = !{!4093}
!4093 = !DILocalVariable(name: "i", arg: 1, scope: !4089, file: !142, line: 752, type: !2753)
!4094 = !DILocation(line: 754, column: 10, scope: !4089)
!4095 = !DILocation(line: 754, column: 3, scope: !4089)
!4096 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !142, file: !142, line: 150, type: !4097, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4101)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!7, !4099}
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1317)
!4101 = !{!4102}
!4102 = !DILocalVariable(name: "vec_", arg: 1, scope: !4096, file: !142, line: 150, type: !4099)
!4103 = !DILocation(line: 0, scope: !4096)
!4104 = !DILocation(line: 150, column: 1, scope: !4096)
!4105 = distinct !DISubprogram(name: "ei_container", scope: !142, file: !142, line: 685, type: !4106, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4108)
!4106 = !DISubroutineType(types: !4107)
!4107 = !{!1312, !2753}
!4108 = !{!4109}
!4109 = !DILocalVariable(name: "i", arg: 1, scope: !4105, file: !142, line: 685, type: !2753)
!4110 = !DILocation(line: 687, column: 3, scope: !4105)
!4111 = !DILocation(line: 688, column: 10, scope: !4105)
!4112 = !DILocation(line: 688, column: 3, scope: !4105)
!4113 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !142, file: !142, line: 150, type: !4114, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4116)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!1324, !4099, !7}
!4116 = !{!4117, !4118}
!4117 = !DILocalVariable(name: "vec_", arg: 1, scope: !4113, file: !142, line: 150, type: !4099)
!4118 = !DILocalVariable(name: "ix_", arg: 2, scope: !4113, file: !142, line: 150, type: !7)
!4119 = !DILocation(line: 0, scope: !4113)
!4120 = !DILocation(line: 150, column: 1, scope: !4113)
!4121 = distinct !DISubprogram(name: "df_rd_alloc", scope: !3, file: !3, line: 240, type: !2071, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4122)
!4122 = !{!4123, !4124, !4125, !4133, !4134}
!4123 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4121, file: !3, line: 240, type: !758)
!4124 = !DILocalVariable(name: "bb_index", scope: !4121, file: !3, line: 242, type: !7)
!4125 = !DILocalVariable(name: "bi", scope: !4121, file: !3, line: 243, type: !4126)
!4126 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !762, line: 218, baseType: !4127)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !762, line: 203, size: 256, elements: !4128)
!4128 = !{!4129, !4130, !4131, !4132}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !4127, file: !762, line: 206, baseType: !765, size: 64)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !4127, file: !762, line: 209, baseType: !765, size: 64, offset: 64)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !4127, file: !762, line: 212, baseType: !7, size: 32, offset: 128)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4127, file: !762, line: 217, baseType: !775, size: 64, offset: 192)
!4133 = !DILocalVariable(name: "problem_data", scope: !4121, file: !3, line: 244, type: !2011)
!4134 = !DILocalVariable(name: "bb_info", scope: !4135, file: !3, line: 276, type: !2017)
!4135 = distinct !DILexicalBlock(scope: !4136, file: !3, line: 275, column: 5)
!4136 = distinct !DILexicalBlock(scope: !4137, file: !3, line: 274, column: 3)
!4137 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 274, column: 3)
!4138 = !DILocation(line: 0, scope: !4121)
!4139 = !DILocation(line: 242, column: 3, scope: !4121)
!4140 = !DILocation(line: 243, column: 3, scope: !4121)
!4141 = !DILocation(line: 246, column: 8, scope: !4142)
!4142 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 246, column: 7)
!4143 = !DILocation(line: 246, column: 15, scope: !4142)
!4144 = !DILocation(line: 246, column: 7, scope: !4121)
!4145 = !DILocation(line: 247, column: 25, scope: !4142)
!4146 = !DILocation(line: 247, column: 5, scope: !4142)
!4147 = !DILocation(line: 247, column: 12, scope: !4142)
!4148 = !DILocation(line: 247, column: 23, scope: !4142)
!4149 = !DILocation(line: 250, column: 7, scope: !4150)
!4150 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 250, column: 7)
!4151 = !DILocation(line: 250, column: 14, scope: !4150)
!4152 = !DILocation(line: 250, column: 7, scope: !4121)
!4153 = !DILocation(line: 253, column: 35, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 251, column: 5)
!4155 = !DILocation(line: 253, column: 7, scope: !4154)
!4156 = !DILocation(line: 254, column: 35, scope: !4154)
!4157 = !DILocation(line: 254, column: 7, scope: !4154)
!4158 = !DILocation(line: 255, column: 5, scope: !4154)
!4159 = !DILocation(line: 258, column: 22, scope: !4160)
!4160 = distinct !DILexicalBlock(scope: !4150, file: !3, line: 257, column: 5)
!4161 = !DILocation(line: 259, column: 7, scope: !4160)
!4162 = !DILocation(line: 259, column: 14, scope: !4160)
!4163 = !DILocation(line: 259, column: 27, scope: !4160)
!4164 = !DILocation(line: 261, column: 49, scope: !4160)
!4165 = !DILocation(line: 261, column: 7, scope: !4160)
!4166 = !DILocation(line: 263, column: 4, scope: !4160)
!4167 = !DILocation(line: 262, column: 21, scope: !4160)
!4168 = !DILocation(line: 263, column: 2, scope: !4160)
!4169 = !DILocation(line: 265, column: 4, scope: !4160)
!4170 = !DILocation(line: 264, column: 21, scope: !4160)
!4171 = !DILocation(line: 265, column: 2, scope: !4160)
!4172 = !DILocation(line: 268, column: 20, scope: !4121)
!4173 = !DILocation(line: 268, column: 3, scope: !4121)
!4174 = !DILocation(line: 274, column: 3, scope: !4137)
!4175 = !DILocation(line: 0, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 284, column: 2)
!4177 = distinct !DILexicalBlock(scope: !4135, file: !3, line: 277, column: 11)
!4178 = !DILocation(line: 274, column: 3, scope: !4136)
!4179 = !DILocation(line: 276, column: 58, scope: !4135)
!4180 = !DILocation(line: 276, column: 39, scope: !4135)
!4181 = !DILocation(line: 0, scope: !4135)
!4182 = !DILocation(line: 277, column: 11, scope: !4177)
!4183 = !DILocation(line: 277, column: 11, scope: !4135)
!4184 = !DILocation(line: 279, column: 27, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4177, file: !3, line: 278, column: 2)
!4186 = !DILocation(line: 279, column: 4, scope: !4185)
!4187 = !DILocation(line: 280, column: 27, scope: !4185)
!4188 = !DILocation(line: 280, column: 4, scope: !4185)
!4189 = !DILocation(line: 281, column: 27, scope: !4185)
!4190 = !DILocation(line: 281, column: 4, scope: !4185)
!4191 = !DILocation(line: 282, column: 2, scope: !4185)
!4192 = !DILocation(line: 285, column: 51, scope: !4176)
!4193 = !DILocation(line: 285, column: 58, scope: !4176)
!4194 = !DILocation(line: 285, column: 39, scope: !4176)
!4195 = !DILocation(line: 285, column: 14, scope: !4176)
!4196 = !DILocation(line: 286, column: 23, scope: !4176)
!4197 = !DILocation(line: 286, column: 4, scope: !4176)
!4198 = !DILocation(line: 287, column: 20, scope: !4176)
!4199 = !DILocation(line: 287, column: 13, scope: !4176)
!4200 = !DILocation(line: 287, column: 18, scope: !4176)
!4201 = !DILocation(line: 288, column: 27, scope: !4176)
!4202 = !DILocation(line: 288, column: 13, scope: !4176)
!4203 = !DILocation(line: 288, column: 25, scope: !4176)
!4204 = !DILocation(line: 289, column: 19, scope: !4176)
!4205 = !DILocation(line: 289, column: 13, scope: !4176)
!4206 = !DILocation(line: 289, column: 17, scope: !4176)
!4207 = !DILocation(line: 290, column: 18, scope: !4176)
!4208 = !DILocation(line: 290, column: 13, scope: !4176)
!4209 = !DILocation(line: 290, column: 16, scope: !4176)
!4210 = !DILocation(line: 291, column: 19, scope: !4176)
!4211 = !DILocation(line: 291, column: 13, scope: !4176)
!4212 = !DILocation(line: 291, column: 17, scope: !4176)
!4213 = distinct !{!4213, !4174, !4214}
!4214 = !DILocation(line: 293, column: 5, scope: !4137)
!4215 = !DILocation(line: 294, column: 3, scope: !4121)
!4216 = !DILocation(line: 294, column: 10, scope: !4121)
!4217 = !DILocation(line: 294, column: 21, scope: !4121)
!4218 = !DILocation(line: 295, column: 1, scope: !4121)
!4219 = distinct !DISubprogram(name: "df_rd_free_bb_info", scope: !3, file: !3, line: 220, type: !2078, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4220)
!4220 = !{!4221, !4222, !4223}
!4221 = !DILocalVariable(name: "bb", arg: 1, scope: !4219, file: !3, line: 220, type: !1307)
!4222 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !4219, file: !3, line: 221, type: !754)
!4223 = !DILocalVariable(name: "bb_info", scope: !4219, file: !3, line: 223, type: !2017)
!4224 = !DILocation(line: 0, scope: !4219)
!4225 = !DILocation(line: 224, column: 7, scope: !4226)
!4226 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 224, column: 7)
!4227 = !DILocation(line: 224, column: 7, scope: !4219)
!4228 = !DILocation(line: 226, column: 7, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4226, file: !3, line: 225, column: 5)
!4230 = !DILocation(line: 227, column: 7, scope: !4229)
!4231 = !DILocation(line: 228, column: 7, scope: !4229)
!4232 = !DILocation(line: 229, column: 7, scope: !4229)
!4233 = !DILocation(line: 230, column: 7, scope: !4229)
!4234 = !DILocation(line: 231, column: 18, scope: !4229)
!4235 = !DILocation(line: 231, column: 25, scope: !4229)
!4236 = !DILocation(line: 231, column: 7, scope: !4229)
!4237 = !DILocation(line: 232, column: 5, scope: !4229)
!4238 = !DILocation(line: 233, column: 1, scope: !4219)
!4239 = distinct !DISubprogram(name: "df_rd_local_compute", scope: !3, file: !3, line: 459, type: !2071, scopeLine: 460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4240)
!4240 = !{!4241, !4242, !4243, !4244, !4245, !4246, !4247}
!4241 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4239, file: !3, line: 459, type: !758)
!4242 = !DILocalVariable(name: "bb_index", scope: !4239, file: !3, line: 461, type: !7)
!4243 = !DILocalVariable(name: "bi", scope: !4239, file: !3, line: 462, type: !4126)
!4244 = !DILocalVariable(name: "regno", scope: !4239, file: !3, line: 463, type: !7)
!4245 = !DILocalVariable(name: "problem_data", scope: !4239, file: !3, line: 464, type: !2011)
!4246 = !DILocalVariable(name: "sparse_invalidated", scope: !4239, file: !3, line: 466, type: !758)
!4247 = !DILocalVariable(name: "dense_invalidated", scope: !4239, file: !3, line: 467, type: !758)
!4248 = !DILocation(line: 0, scope: !4239)
!4249 = !DILocation(line: 461, column: 3, scope: !4239)
!4250 = !DILocation(line: 462, column: 3, scope: !4239)
!4251 = !DILocation(line: 463, column: 3, scope: !4239)
!4252 = !DILocation(line: 465, column: 37, scope: !4239)
!4253 = !DILocation(line: 465, column: 44, scope: !4239)
!4254 = !DILocation(line: 466, column: 45, scope: !4239)
!4255 = !DILocation(line: 467, column: 44, scope: !4239)
!4256 = !DILocation(line: 469, column: 19, scope: !4239)
!4257 = !DILocation(line: 469, column: 17, scope: !4239)
!4258 = !DILocation(line: 470, column: 18, scope: !4239)
!4259 = !DILocation(line: 470, column: 16, scope: !4239)
!4260 = !DILocation(line: 472, column: 3, scope: !4239)
!4261 = !DILocation(line: 474, column: 3, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 474, column: 3)
!4263 = !DILocation(line: 474, column: 3, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 474, column: 3)
!4265 = !DILocation(line: 476, column: 31, scope: !4266)
!4266 = distinct !DILexicalBlock(scope: !4264, file: !3, line: 475, column: 5)
!4267 = !DILocation(line: 476, column: 7, scope: !4266)
!4268 = distinct !{!4268, !4261, !4269}
!4269 = !DILocation(line: 477, column: 5, scope: !4262)
!4270 = !DILocation(line: 480, column: 3, scope: !4271)
!4271 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 480, column: 3)
!4272 = !DILocation(line: 480, column: 3, scope: !4273)
!4273 = distinct !DILexicalBlock(scope: !4271, file: !3, line: 480, column: 3)
!4274 = !DILocation(line: 482, column: 11, scope: !4275)
!4275 = distinct !DILexicalBlock(scope: !4276, file: !3, line: 482, column: 11)
!4276 = distinct !DILexicalBlock(scope: !4273, file: !3, line: 481, column: 5)
!4277 = !DILocation(line: 482, column: 33, scope: !4275)
!4278 = !DILocation(line: 482, column: 11, scope: !4276)
!4279 = !DILocation(line: 483, column: 2, scope: !4275)
!4280 = !DILocation(line: 486, column: 6, scope: !4275)
!4281 = !DILocation(line: 485, column: 2, scope: !4275)
!4282 = distinct !{!4282, !4270, !4283}
!4283 = !DILocation(line: 488, column: 5, scope: !4271)
!4284 = !DILocation(line: 490, column: 3, scope: !4239)
!4285 = !DILocation(line: 491, column: 3, scope: !4239)
!4286 = !DILocation(line: 492, column: 1, scope: !4239)
!4287 = distinct !DISubprogram(name: "df_rd_init_solution", scope: !3, file: !3, line: 498, type: !2071, scopeLine: 499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4288)
!4288 = !{!4289, !4290, !4291, !4292}
!4289 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4287, file: !3, line: 498, type: !758)
!4290 = !DILocalVariable(name: "bb_index", scope: !4287, file: !3, line: 500, type: !7)
!4291 = !DILocalVariable(name: "bi", scope: !4287, file: !3, line: 501, type: !4126)
!4292 = !DILocalVariable(name: "bb_info", scope: !4293, file: !3, line: 505, type: !2017)
!4293 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 504, column: 5)
!4294 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 503, column: 3)
!4295 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 503, column: 3)
!4296 = !DILocation(line: 0, scope: !4287)
!4297 = !DILocation(line: 500, column: 3, scope: !4287)
!4298 = !DILocation(line: 501, column: 3, scope: !4287)
!4299 = !DILocation(line: 503, column: 3, scope: !4295)
!4300 = !DILocation(line: 503, column: 3, scope: !4294)
!4301 = !DILocation(line: 505, column: 58, scope: !4293)
!4302 = !DILocation(line: 505, column: 39, scope: !4293)
!4303 = !DILocation(line: 0, scope: !4293)
!4304 = !DILocation(line: 507, column: 29, scope: !4293)
!4305 = !DILocation(line: 507, column: 43, scope: !4293)
!4306 = !DILocation(line: 507, column: 7, scope: !4293)
!4307 = !DILocation(line: 508, column: 30, scope: !4293)
!4308 = !DILocation(line: 508, column: 7, scope: !4293)
!4309 = distinct !{!4309, !4299, !4310}
!4310 = !DILocation(line: 509, column: 5, scope: !4295)
!4311 = !DILocation(line: 510, column: 1, scope: !4287)
!4312 = distinct !DISubprogram(name: "df_rd_confluence_n", scope: !3, file: !3, line: 515, type: !2133, scopeLine: 516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4313)
!4313 = !{!4314, !4315, !4316, !4317, !4320, !4321, !4322, !4323, !4324}
!4314 = !DILocalVariable(name: "e", arg: 1, scope: !4312, file: !3, line: 515, type: !1324)
!4315 = !DILocalVariable(name: "op1", scope: !4312, file: !3, line: 517, type: !758)
!4316 = !DILocalVariable(name: "op2", scope: !4312, file: !3, line: 518, type: !758)
!4317 = !DILocalVariable(name: "problem_data", scope: !4318, file: !3, line: 525, type: !2011)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 524, column: 5)
!4319 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 523, column: 7)
!4320 = !DILocalVariable(name: "sparse_invalidated", scope: !4318, file: !3, line: 527, type: !758)
!4321 = !DILocalVariable(name: "dense_invalidated", scope: !4318, file: !3, line: 528, type: !758)
!4322 = !DILocalVariable(name: "bi", scope: !4318, file: !3, line: 529, type: !4126)
!4323 = !DILocalVariable(name: "regno", scope: !4318, file: !3, line: 530, type: !7)
!4324 = !DILocalVariable(name: "tmp", scope: !4318, file: !3, line: 531, type: !758)
!4325 = !DILocation(line: 0, scope: !4312)
!4326 = !DILocation(line: 517, column: 38, scope: !4312)
!4327 = !DILocation(line: 517, column: 44, scope: !4312)
!4328 = !DILocation(line: 517, column: 16, scope: !4312)
!4329 = !DILocation(line: 517, column: 52, scope: !4312)
!4330 = !DILocation(line: 518, column: 38, scope: !4312)
!4331 = !DILocation(line: 518, column: 43, scope: !4312)
!4332 = !DILocation(line: 518, column: 16, scope: !4312)
!4333 = !DILocation(line: 518, column: 51, scope: !4312)
!4334 = !DILocation(line: 520, column: 10, scope: !4335)
!4335 = distinct !DILexicalBlock(scope: !4312, file: !3, line: 520, column: 7)
!4336 = !DILocation(line: 520, column: 16, scope: !4335)
!4337 = !DILocation(line: 520, column: 7, scope: !4312)
!4338 = !DILocation(line: 523, column: 16, scope: !4319)
!4339 = !DILocation(line: 523, column: 7, scope: !4312)
!4340 = !DILocation(line: 526, column: 34, scope: !4318)
!4341 = !DILocation(line: 526, column: 41, scope: !4318)
!4342 = !DILocation(line: 0, scope: !4318)
!4343 = !DILocation(line: 527, column: 49, scope: !4318)
!4344 = !DILocation(line: 528, column: 48, scope: !4318)
!4345 = !DILocation(line: 529, column: 7, scope: !4318)
!4346 = !DILocation(line: 530, column: 7, scope: !4318)
!4347 = !DILocation(line: 531, column: 20, scope: !4318)
!4348 = !DILocation(line: 533, column: 7, scope: !4318)
!4349 = !DILocation(line: 534, column: 7, scope: !4318)
!4350 = !DILocation(line: 536, column: 7, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 536, column: 7)
!4352 = !DILocation(line: 536, column: 7, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4351, file: !3, line: 536, column: 7)
!4354 = !DILocation(line: 539, column: 11, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4353, file: !3, line: 537, column: 3)
!4356 = !DILocation(line: 540, column: 11, scope: !4355)
!4357 = !DILocation(line: 538, column: 5, scope: !4355)
!4358 = distinct !{!4358, !4350, !4359}
!4359 = !DILocation(line: 541, column: 2, scope: !4351)
!4360 = !DILocation(line: 542, column: 7, scope: !4318)
!4361 = !DILocation(line: 543, column: 7, scope: !4318)
!4362 = !DILocation(line: 544, column: 5, scope: !4319)
!4363 = !DILocation(line: 544, column: 5, scope: !4318)
!4364 = !DILocation(line: 546, column: 5, scope: !4319)
!4365 = !DILocation(line: 547, column: 1, scope: !4312)
!4366 = distinct !DISubprogram(name: "df_rd_transfer_function", scope: !3, file: !3, line: 553, type: !2138, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4367)
!4367 = !{!4368, !4369, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4380, !4381}
!4368 = !DILocalVariable(name: "bb_index", arg: 1, scope: !4366, file: !3, line: 553, type: !750)
!4369 = !DILocalVariable(name: "bb_info", scope: !4366, file: !3, line: 555, type: !2017)
!4370 = !DILocalVariable(name: "regno", scope: !4366, file: !3, line: 556, type: !7)
!4371 = !DILocalVariable(name: "bi", scope: !4366, file: !3, line: 557, type: !4126)
!4372 = !DILocalVariable(name: "in", scope: !4366, file: !3, line: 558, type: !758)
!4373 = !DILocalVariable(name: "out", scope: !4366, file: !3, line: 559, type: !758)
!4374 = !DILocalVariable(name: "gen", scope: !4366, file: !3, line: 560, type: !758)
!4375 = !DILocalVariable(name: "kill", scope: !4366, file: !3, line: 561, type: !758)
!4376 = !DILocalVariable(name: "sparse_kill", scope: !4366, file: !3, line: 562, type: !758)
!4377 = !DILocalVariable(name: "problem_data", scope: !4378, file: !3, line: 568, type: !2011)
!4378 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 567, column: 5)
!4379 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 564, column: 7)
!4380 = !DILocalVariable(name: "changed", scope: !4378, file: !3, line: 569, type: !749)
!4381 = !DILocalVariable(name: "tmp", scope: !4378, file: !3, line: 570, type: !758)
!4382 = !DILocation(line: 0, scope: !4366)
!4383 = !DILocation(line: 555, column: 35, scope: !4366)
!4384 = !DILocation(line: 556, column: 3, scope: !4366)
!4385 = !DILocation(line: 557, column: 3, scope: !4366)
!4386 = !DILocation(line: 558, column: 24, scope: !4366)
!4387 = !DILocation(line: 559, column: 25, scope: !4366)
!4388 = !DILocation(line: 560, column: 25, scope: !4366)
!4389 = !DILocation(line: 561, column: 26, scope: !4366)
!4390 = !DILocation(line: 562, column: 33, scope: !4366)
!4391 = !DILocation(line: 564, column: 7, scope: !4379)
!4392 = !DILocation(line: 564, column: 7, scope: !4366)
!4393 = !DILocation(line: 565, column: 13, scope: !4379)
!4394 = !DILocation(line: 565, column: 5, scope: !4379)
!4395 = !DILocation(line: 0, scope: !4378)
!4396 = !DILocation(line: 574, column: 52, scope: !4378)
!4397 = !DILocation(line: 574, column: 59, scope: !4378)
!4398 = !DILocation(line: 575, column: 13, scope: !4378)
!4399 = !DILocation(line: 577, column: 7, scope: !4378)
!4400 = !DILocation(line: 578, column: 7, scope: !4401)
!4401 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 578, column: 7)
!4402 = !DILocation(line: 578, column: 7, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 578, column: 7)
!4404 = !DILocation(line: 581, column: 10, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 579, column: 2)
!4406 = !DILocation(line: 582, column: 10, scope: !4405)
!4407 = !DILocation(line: 580, column: 4, scope: !4405)
!4408 = distinct !{!4408, !4400, !4409}
!4409 = !DILocation(line: 583, column: 2, scope: !4401)
!4410 = !DILocation(line: 584, column: 7, scope: !4378)
!4411 = !DILocation(line: 585, column: 7, scope: !4378)
!4412 = !DILocation(line: 586, column: 18, scope: !4378)
!4413 = !DILocation(line: 586, column: 17, scope: !4378)
!4414 = !DILocation(line: 587, column: 11, scope: !4378)
!4415 = !DILocation(line: 589, column: 4, scope: !4416)
!4416 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 588, column: 2)
!4417 = distinct !DILexicalBlock(scope: !4378, file: !3, line: 587, column: 11)
!4418 = !DILocation(line: 590, column: 17, scope: !4416)
!4419 = !DILocation(line: 591, column: 2, scope: !4416)
!4420 = !DILocation(line: 593, column: 4, scope: !4417)
!4421 = !DILocation(line: 0, scope: !4379)
!4422 = !DILocation(line: 596, column: 1, scope: !4366)
!4423 = distinct !DISubprogram(name: "df_rd_free", scope: !3, file: !3, line: 602, type: !2145, scopeLine: 603, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4424)
!4424 = !{!4425}
!4425 = !DILocalVariable(name: "problem_data", scope: !4423, file: !3, line: 604, type: !2011)
!4426 = !DILocation(line: 605, column: 37, scope: !4423)
!4427 = !DILocation(line: 605, column: 44, scope: !4423)
!4428 = !DILocation(line: 0, scope: !4423)
!4429 = !DILocation(line: 607, column: 7, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 607, column: 7)
!4431 = !DILocation(line: 607, column: 7, scope: !4423)
!4432 = !DILocation(line: 609, column: 31, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4430, file: !3, line: 608, column: 5)
!4434 = !DILocation(line: 609, column: 7, scope: !4433)
!4435 = !DILocation(line: 610, column: 46, scope: !4433)
!4436 = !DILocation(line: 610, column: 7, scope: !4433)
!4437 = !DILocation(line: 612, column: 7, scope: !4433)
!4438 = !DILocation(line: 612, column: 14, scope: !4433)
!4439 = !DILocation(line: 612, column: 30, scope: !4433)
!4440 = !DILocation(line: 613, column: 13, scope: !4433)
!4441 = !DILocation(line: 613, column: 20, scope: !4433)
!4442 = !DILocation(line: 613, column: 7, scope: !4433)
!4443 = !DILocation(line: 614, column: 13, scope: !4433)
!4444 = !DILocation(line: 614, column: 20, scope: !4433)
!4445 = !DILocation(line: 614, column: 7, scope: !4433)
!4446 = !DILocation(line: 616, column: 9, scope: !4423)
!4447 = !DILocation(line: 615, column: 5, scope: !4433)
!4448 = !DILocation(line: 616, column: 3, scope: !4423)
!4449 = !DILocation(line: 617, column: 1, scope: !4423)
!4450 = distinct !DISubprogram(name: "df_rd_start_dump", scope: !3, file: !3, line: 623, type: !2152, scopeLine: 624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4451)
!4451 = !{!4452, !4453, !4454, !4455}
!4452 = !DILocalVariable(name: "file", arg: 1, scope: !4450, file: !3, line: 623, type: !2154)
!4453 = !DILocalVariable(name: "problem_data", scope: !4450, file: !3, line: 625, type: !2011)
!4454 = !DILocalVariable(name: "m", scope: !4450, file: !3, line: 627, type: !7)
!4455 = !DILocalVariable(name: "regno", scope: !4450, file: !3, line: 628, type: !7)
!4456 = !DILocation(line: 0, scope: !4450)
!4457 = !DILocation(line: 626, column: 37, scope: !4450)
!4458 = !DILocation(line: 626, column: 44, scope: !4450)
!4459 = !DILocation(line: 630, column: 15, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 630, column: 7)
!4461 = !DILocation(line: 630, column: 8, scope: !4460)
!4462 = !DILocation(line: 630, column: 7, scope: !4450)
!4463 = !DILocation(line: 627, column: 20, scope: !4450)
!4464 = !DILocation(line: 633, column: 3, scope: !4450)
!4465 = !DILocation(line: 635, column: 3, scope: !4450)
!4466 = !DILocation(line: 636, column: 3, scope: !4450)
!4467 = !DILocation(line: 637, column: 3, scope: !4450)
!4468 = !DILocation(line: 638, column: 3, scope: !4450)
!4469 = !DILocation(line: 640, column: 25, scope: !4470)
!4470 = distinct !DILexicalBlock(scope: !4471, file: !3, line: 640, column: 3)
!4471 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 640, column: 3)
!4472 = !DILocation(line: 640, column: 8, scope: !4471)
!4473 = !DILocation(line: 0, scope: !4471)
!4474 = !DILocation(line: 640, column: 3, scope: !4471)
!4475 = !DILocation(line: 641, column: 9, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !4470, file: !3, line: 641, column: 9)
!4477 = !DILocation(line: 641, column: 9, scope: !4470)
!4478 = !DILocation(line: 643, column: 9, scope: !4476)
!4479 = !DILocation(line: 642, column: 7, scope: !4476)
!4480 = !DILocation(line: 640, column: 35, scope: !4470)
!4481 = !DILocation(line: 640, column: 3, scope: !4470)
!4482 = distinct !{!4482, !4474, !4483}
!4483 = !DILocation(line: 644, column: 30, scope: !4471)
!4484 = !DILocation(line: 645, column: 3, scope: !4450)
!4485 = !DILocation(line: 647, column: 1, scope: !4450)
!4486 = distinct !DISubprogram(name: "df_rd_top_dump", scope: !3, file: !3, line: 653, type: !2207, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4487)
!4487 = !{!4488, !4489, !4490}
!4488 = !DILocalVariable(name: "bb", arg: 1, scope: !4486, file: !3, line: 653, type: !1307)
!4489 = !DILocalVariable(name: "file", arg: 2, scope: !4486, file: !3, line: 653, type: !2154)
!4490 = !DILocalVariable(name: "bb_info", scope: !4486, file: !3, line: 655, type: !2017)
!4491 = !DILocation(line: 0, scope: !4486)
!4492 = !DILocation(line: 655, column: 58, scope: !4486)
!4493 = !DILocation(line: 655, column: 35, scope: !4486)
!4494 = !DILocation(line: 656, column: 8, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4486, file: !3, line: 656, column: 7)
!4496 = !DILocation(line: 656, column: 16, scope: !4495)
!4497 = !DILocation(line: 656, column: 29, scope: !4495)
!4498 = !DILocation(line: 656, column: 20, scope: !4495)
!4499 = !DILocation(line: 656, column: 7, scope: !4486)
!4500 = !DILocation(line: 659, column: 47, scope: !4486)
!4501 = !DILocation(line: 659, column: 41, scope: !4486)
!4502 = !DILocation(line: 659, column: 3, scope: !4486)
!4503 = !DILocation(line: 660, column: 3, scope: !4486)
!4504 = !DILocation(line: 661, column: 75, scope: !4486)
!4505 = !DILocation(line: 661, column: 47, scope: !4486)
!4506 = !DILocation(line: 661, column: 41, scope: !4486)
!4507 = !DILocation(line: 661, column: 3, scope: !4486)
!4508 = !DILocation(line: 662, column: 3, scope: !4486)
!4509 = !DILocation(line: 663, column: 75, scope: !4486)
!4510 = !DILocation(line: 663, column: 47, scope: !4486)
!4511 = !DILocation(line: 663, column: 41, scope: !4486)
!4512 = !DILocation(line: 663, column: 3, scope: !4486)
!4513 = !DILocation(line: 664, column: 3, scope: !4486)
!4514 = !DILocation(line: 665, column: 1, scope: !4486)
!4515 = distinct !DISubprogram(name: "df_rd_bottom_dump", scope: !3, file: !3, line: 671, type: !2207, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4516)
!4516 = !{!4517, !4518, !4519}
!4517 = !DILocalVariable(name: "bb", arg: 1, scope: !4515, file: !3, line: 671, type: !1307)
!4518 = !DILocalVariable(name: "file", arg: 2, scope: !4515, file: !3, line: 671, type: !2154)
!4519 = !DILocalVariable(name: "bb_info", scope: !4515, file: !3, line: 673, type: !2017)
!4520 = !DILocation(line: 0, scope: !4515)
!4521 = !DILocation(line: 673, column: 58, scope: !4515)
!4522 = !DILocation(line: 673, column: 35, scope: !4515)
!4523 = !DILocation(line: 674, column: 8, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 674, column: 7)
!4525 = !DILocation(line: 674, column: 16, scope: !4524)
!4526 = !DILocation(line: 674, column: 29, scope: !4524)
!4527 = !DILocation(line: 674, column: 20, scope: !4524)
!4528 = !DILocation(line: 674, column: 7, scope: !4515)
!4529 = !DILocation(line: 677, column: 47, scope: !4515)
!4530 = !DILocation(line: 677, column: 41, scope: !4515)
!4531 = !DILocation(line: 677, column: 3, scope: !4515)
!4532 = !DILocation(line: 678, column: 3, scope: !4515)
!4533 = !DILocation(line: 679, column: 1, scope: !4515)
!4534 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !762, file: !762, line: 224, type: !4535, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4541)
!4535 = !DISubroutineType(types: !4536)
!4536 = !{null, !4537, !4538, !7, !1994}
!4537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4126, size: 64)
!4538 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !759, line: 48, baseType: !4539)
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4540, size: 64)
!4540 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !761)
!4541 = !{!4542, !4543, !4544, !4545}
!4542 = !DILocalVariable(name: "bi", arg: 1, scope: !4534, file: !762, line: 224, type: !4537)
!4543 = !DILocalVariable(name: "map", arg: 2, scope: !4534, file: !762, line: 224, type: !4538)
!4544 = !DILocalVariable(name: "start_bit", arg: 3, scope: !4534, file: !762, line: 225, type: !7)
!4545 = !DILocalVariable(name: "bit_no", arg: 4, scope: !4534, file: !762, line: 225, type: !1994)
!4546 = !DILocation(line: 0, scope: !4534)
!4547 = !DILocation(line: 227, column: 19, scope: !4534)
!4548 = !DILocation(line: 227, column: 12, scope: !4534)
!4549 = !DILocation(line: 228, column: 7, scope: !4534)
!4550 = !DILocation(line: 228, column: 12, scope: !4534)
!4551 = !DILocation(line: 0, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4553, file: !762, line: 233, column: 11)
!4553 = distinct !DILexicalBlock(scope: !4534, file: !762, line: 232, column: 5)
!4554 = !DILocation(line: 0, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4553, file: !762, line: 239, column: 11)
!4556 = !DILocation(line: 231, column: 3, scope: !4534)
!4557 = !DILocation(line: 233, column: 16, scope: !4552)
!4558 = !DILocation(line: 233, column: 12, scope: !4552)
!4559 = !DILocation(line: 233, column: 11, scope: !4553)
!4560 = !DILocation(line: 235, column: 13, scope: !4561)
!4561 = distinct !DILexicalBlock(scope: !4552, file: !762, line: 234, column: 2)
!4562 = !DILocation(line: 236, column: 4, scope: !4561)
!4563 = !DILocation(line: 239, column: 21, scope: !4555)
!4564 = !DILocation(line: 239, column: 26, scope: !4555)
!4565 = !DILocation(line: 239, column: 11, scope: !4553)
!4566 = !DILocation(line: 241, column: 28, scope: !4553)
!4567 = !DILocation(line: 241, column: 16, scope: !4553)
!4568 = distinct !{!4568, !4556, !4569}
!4569 = !DILocation(line: 242, column: 5, scope: !4534)
!4570 = !DILocation(line: 245, column: 11, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4534, file: !762, line: 245, column: 7)
!4572 = !DILocation(line: 245, column: 17, scope: !4571)
!4573 = !DILocation(line: 245, column: 22, scope: !4571)
!4574 = !DILocation(line: 245, column: 7, scope: !4534)
!4575 = !DILocation(line: 246, column: 27, scope: !4571)
!4576 = !DILocation(line: 246, column: 32, scope: !4571)
!4577 = !DILocation(line: 246, column: 5, scope: !4571)
!4578 = !DILocation(line: 249, column: 27, scope: !4534)
!4579 = !DILocation(line: 249, column: 46, scope: !4534)
!4580 = !DILocation(line: 249, column: 7, scope: !4534)
!4581 = !DILocation(line: 249, column: 15, scope: !4534)
!4582 = !DILocation(line: 250, column: 14, scope: !4534)
!4583 = !DILocation(line: 251, column: 26, scope: !4534)
!4584 = !DILocation(line: 251, column: 7, scope: !4534)
!4585 = !DILocation(line: 251, column: 12, scope: !4534)
!4586 = !DILocation(line: 257, column: 16, scope: !4534)
!4587 = !DILocation(line: 257, column: 13, scope: !4534)
!4588 = !DILocation(line: 259, column: 11, scope: !4534)
!4589 = !DILocation(line: 260, column: 1, scope: !4534)
!4590 = distinct !DISubprogram(name: "bmp_iter_set", scope: !762, file: !762, line: 393, type: !4591, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4593)
!4591 = !DISubroutineType(types: !4592)
!4592 = !{!749, !4537, !1994}
!4593 = !{!4594, !4595, !4596}
!4594 = !DILocalVariable(name: "bi", arg: 1, scope: !4590, file: !762, line: 393, type: !4537)
!4595 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4590, file: !762, line: 393, type: !1994)
!4596 = !DILabel(scope: !4597, name: "next_bit", file: !762, line: 398)
!4597 = distinct !DILexicalBlock(scope: !4598, file: !762, line: 397, column: 5)
!4598 = distinct !DILexicalBlock(scope: !4590, file: !762, line: 396, column: 7)
!4599 = !DILocation(line: 0, scope: !4590)
!4600 = !DILocation(line: 396, column: 11, scope: !4598)
!4601 = !DILocation(line: 396, column: 7, scope: !4598)
!4602 = !DILocation(line: 396, column: 7, scope: !4590)
!4603 = !DILocation(line: 419, column: 15, scope: !4604)
!4604 = distinct !DILexicalBlock(scope: !4605, file: !762, line: 418, column: 2)
!4605 = distinct !DILexicalBlock(scope: !4590, file: !762, line: 415, column: 5)
!4606 = !DILocation(line: 399, column: 7, scope: !4597)
!4607 = !DILocation(line: 398, column: 5, scope: !4597)
!4608 = !DILocation(line: 399, column: 20, scope: !4597)
!4609 = !DILocation(line: 399, column: 25, scope: !4597)
!4610 = !DILocation(line: 399, column: 14, scope: !4597)
!4611 = !DILocation(line: 401, column: 13, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4597, file: !762, line: 400, column: 2)
!4613 = !DILocation(line: 402, column: 12, scope: !4612)
!4614 = distinct !{!4614, !4606, !4615}
!4615 = !DILocation(line: 403, column: 2, scope: !4597)
!4616 = !DILocation(line: 410, column: 15, scope: !4590)
!4617 = !DILocation(line: 410, column: 42, scope: !4590)
!4618 = !DILocation(line: 411, column: 26, scope: !4590)
!4619 = !DILocation(line: 410, column: 11, scope: !4590)
!4620 = !DILocation(line: 412, column: 7, scope: !4590)
!4621 = !DILocation(line: 412, column: 14, scope: !4590)
!4622 = !DILocation(line: 0, scope: !4605)
!4623 = !DILocation(line: 414, column: 3, scope: !4590)
!4624 = !DILocation(line: 417, column: 7, scope: !4605)
!4625 = !DILocation(line: 417, column: 18, scope: !4605)
!4626 = !DILocation(line: 417, column: 26, scope: !4605)
!4627 = !DILocation(line: 419, column: 13, scope: !4604)
!4628 = !DILocation(line: 420, column: 8, scope: !4629)
!4629 = distinct !DILexicalBlock(scope: !4604, file: !762, line: 420, column: 8)
!4630 = !DILocation(line: 420, column: 8, scope: !4604)
!4631 = !DILocation(line: 422, column: 12, scope: !4604)
!4632 = !DILocation(line: 423, column: 15, scope: !4604)
!4633 = distinct !{!4633, !4624, !4634}
!4634 = !DILocation(line: 424, column: 2, scope: !4605)
!4635 = !DILocation(line: 427, column: 28, scope: !4605)
!4636 = !DILocation(line: 427, column: 16, scope: !4605)
!4637 = !DILocation(line: 428, column: 12, scope: !4638)
!4638 = distinct !DILexicalBlock(scope: !4605, file: !762, line: 428, column: 11)
!4639 = !DILocation(line: 428, column: 11, scope: !4605)
!4640 = !DILocation(line: 430, column: 27, scope: !4605)
!4641 = !DILocation(line: 430, column: 32, scope: !4605)
!4642 = !DILocation(line: 430, column: 15, scope: !4605)
!4643 = !DILocation(line: 431, column: 19, scope: !4605)
!4644 = distinct !{!4644, !4623, !4645}
!4645 = !DILocation(line: 432, column: 5, scope: !4590)
!4646 = !DILocation(line: 433, column: 1, scope: !4590)
!4647 = distinct !DISubprogram(name: "df_rd_get_bb_info", scope: !385, file: !385, line: 1043, type: !4648, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4650)
!4648 = !DISubroutineType(types: !4649)
!4649 = !{!2017, !7}
!4650 = !{!4651}
!4651 = !DILocalVariable(name: "index", arg: 1, scope: !4647, file: !385, line: 1043, type: !7)
!4652 = !DILocation(line: 0, scope: !4647)
!4653 = !DILocation(line: 1045, column: 15, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4647, file: !385, line: 1045, column: 7)
!4655 = !DILocation(line: 1045, column: 22, scope: !4654)
!4656 = !DILocation(line: 1045, column: 13, scope: !4654)
!4657 = !DILocation(line: 1045, column: 7, scope: !4647)
!4658 = !DILocation(line: 1046, column: 44, scope: !4654)
!4659 = !DILocation(line: 1046, column: 37, scope: !4654)
!4660 = !DILocation(line: 1046, column: 5, scope: !4654)
!4661 = !DILocation(line: 0, scope: !4654)
!4662 = !DILocation(line: 1049, column: 1, scope: !4647)
!4663 = distinct !DISubprogram(name: "df_rd_set_bb_info", scope: !3, file: !3, line: 208, type: !4664, scopeLine: 210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4666)
!4664 = !DISubroutineType(types: !4665)
!4665 = !{null, !7, !2017}
!4666 = !{!4667, !4668}
!4667 = !DILocalVariable(name: "index", arg: 1, scope: !4663, file: !3, line: 208, type: !7)
!4668 = !DILocalVariable(name: "bb_info", arg: 2, scope: !4663, file: !3, line: 209, type: !2017)
!4669 = !DILocation(line: 0, scope: !4663)
!4670 = !DILocation(line: 211, column: 3, scope: !4663)
!4671 = !DILocation(line: 212, column: 3, scope: !4663)
!4672 = !DILocation(line: 213, column: 3, scope: !4663)
!4673 = !DILocation(line: 213, column: 10, scope: !4663)
!4674 = !DILocation(line: 213, column: 28, scope: !4663)
!4675 = !DILocation(line: 214, column: 1, scope: !4663)
!4676 = distinct !DISubprogram(name: "bmp_iter_next", scope: !762, file: !762, line: 382, type: !4677, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4679)
!4677 = !DISubroutineType(types: !4678)
!4678 = !{null, !4537, !1994}
!4679 = !{!4680, !4681}
!4680 = !DILocalVariable(name: "bi", arg: 1, scope: !4676, file: !762, line: 382, type: !4537)
!4681 = !DILocalVariable(name: "bit_no", arg: 2, scope: !4676, file: !762, line: 382, type: !1994)
!4682 = !DILocation(line: 0, scope: !4676)
!4683 = !DILocation(line: 384, column: 7, scope: !4676)
!4684 = !DILocation(line: 384, column: 12, scope: !4676)
!4685 = !DILocation(line: 385, column: 11, scope: !4676)
!4686 = !DILocation(line: 386, column: 1, scope: !4676)
!4687 = distinct !DISubprogram(name: "df_rd_bb_local_compute", scope: !3, file: !3, line: 411, type: !3011, scopeLine: 412, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4688)
!4688 = !{!4689, !4690, !4691, !4692, !4693}
!4689 = !DILocalVariable(name: "bb_index", arg: 1, scope: !4687, file: !3, line: 411, type: !7)
!4690 = !DILocalVariable(name: "bb", scope: !4687, file: !3, line: 413, type: !1307)
!4691 = !DILocalVariable(name: "bb_info", scope: !4687, file: !3, line: 414, type: !2017)
!4692 = !DILocalVariable(name: "insn", scope: !4687, file: !3, line: 415, type: !836)
!4693 = !DILocalVariable(name: "uid", scope: !4694, file: !3, line: 428, type: !7)
!4694 = distinct !DILexicalBlock(scope: !4695, file: !3, line: 427, column: 5)
!4695 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 426, column: 3)
!4696 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 426, column: 3)
!4697 = !DILocation(line: 0, scope: !4687)
!4698 = !DILocation(line: 413, column: 20, scope: !4687)
!4699 = !DILocation(line: 414, column: 35, scope: !4687)
!4700 = !DILocation(line: 417, column: 17, scope: !4687)
!4701 = !DILocation(line: 417, column: 3, scope: !4687)
!4702 = !DILocation(line: 418, column: 17, scope: !4687)
!4703 = !DILocation(line: 418, column: 3, scope: !4687)
!4704 = !DILocation(line: 421, column: 9, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 421, column: 7)
!4706 = !DILocation(line: 421, column: 13, scope: !4705)
!4707 = !DILocation(line: 421, column: 30, scope: !4705)
!4708 = !DILocation(line: 421, column: 7, scope: !4687)
!4709 = !DILocation(line: 423, column: 6, scope: !4705)
!4710 = !DILocation(line: 422, column: 5, scope: !4705)
!4711 = !DILocation(line: 426, column: 3, scope: !4696)
!4712 = !DILocation(line: 0, scope: !4696)
!4713 = !DILocation(line: 426, column: 3, scope: !4695)
!4714 = !DILocation(line: 428, column: 26, scope: !4694)
!4715 = !DILocation(line: 0, scope: !4694)
!4716 = !DILocation(line: 430, column: 12, scope: !4717)
!4717 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 430, column: 11)
!4718 = !DILocation(line: 430, column: 11, scope: !4694)
!4719 = !DILocation(line: 434, column: 8, scope: !4694)
!4720 = !DILocation(line: 433, column: 7, scope: !4694)
!4721 = !DILocation(line: 442, column: 24, scope: !4694)
!4722 = !DILocation(line: 442, column: 39, scope: !4694)
!4723 = !DILocation(line: 442, column: 7, scope: !4694)
!4724 = !DILocation(line: 443, column: 21, scope: !4694)
!4725 = !DILocation(line: 443, column: 7, scope: !4694)
!4726 = !DILocation(line: 444, column: 5, scope: !4695)
!4727 = distinct !{!4727, !4711, !4728}
!4728 = !DILocation(line: 444, column: 5, scope: !4696)
!4729 = !DILocation(line: 449, column: 9, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4687, file: !3, line: 449, column: 7)
!4731 = !DILocation(line: 449, column: 13, scope: !4730)
!4732 = !DILocation(line: 449, column: 30, scope: !4730)
!4733 = !DILocation(line: 449, column: 7, scope: !4687)
!4734 = !DILocation(line: 451, column: 6, scope: !4730)
!4735 = !DILocation(line: 450, column: 5, scope: !4730)
!4736 = !DILocation(line: 453, column: 1, scope: !4687)
!4737 = distinct !DISubprogram(name: "VEC_basic_block_base_index", scope: !142, file: !142, line: 281, type: !4738, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4742)
!4738 = !DISubroutineType(types: !4739)
!4739 = !{!1307, !4740, !7}
!4740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4741, size: 64)
!4741 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1388)
!4742 = !{!4743, !4744}
!4743 = !DILocalVariable(name: "vec_", arg: 1, scope: !4737, file: !142, line: 281, type: !4740)
!4744 = !DILocalVariable(name: "ix_", arg: 2, scope: !4737, file: !142, line: 281, type: !7)
!4745 = !DILocation(line: 0, scope: !4737)
!4746 = !DILocation(line: 281, column: 1, scope: !4737)
!4747 = distinct !DISubprogram(name: "df_rd_bb_local_compute_process_def", scope: !3, file: !3, line: 355, type: !4748, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4750)
!4748 = !DISubroutineType(types: !4749)
!4749 = !{null, !2017, !1948, !750}
!4750 = !{!4751, !4752, !4753, !4754, !4756, !4759, !4760}
!4751 = !DILocalVariable(name: "bb_info", arg: 1, scope: !4747, file: !3, line: 355, type: !2017)
!4752 = !DILocalVariable(name: "def_rec", arg: 2, scope: !4747, file: !3, line: 356, type: !1948)
!4753 = !DILocalVariable(name: "top_flag", arg: 3, scope: !4747, file: !3, line: 357, type: !750)
!4754 = !DILocalVariable(name: "def", scope: !4755, file: !3, line: 361, type: !825)
!4755 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 360, column: 5)
!4756 = !DILocalVariable(name: "regno", scope: !4757, file: !3, line: 364, type: !7)
!4757 = distinct !DILexicalBlock(scope: !4758, file: !3, line: 363, column: 2)
!4758 = distinct !DILexicalBlock(scope: !4755, file: !3, line: 362, column: 11)
!4759 = !DILocalVariable(name: "begin", scope: !4757, file: !3, line: 365, type: !7)
!4760 = !DILocalVariable(name: "n_defs", scope: !4757, file: !3, line: 366, type: !7)
!4761 = !DILocation(line: 0, scope: !4747)
!4762 = !DILocation(line: 0, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 389, column: 4)
!4764 = distinct !DILexicalBlock(scope: !4765, file: !3, line: 383, column: 13)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 382, column: 7)
!4766 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 377, column: 9)
!4767 = distinct !DILexicalBlock(scope: !4768, file: !3, line: 374, column: 3)
!4768 = distinct !DILexicalBlock(scope: !4769, file: !3, line: 373, column: 12)
!4769 = distinct !DILexicalBlock(scope: !4770, file: !3, line: 370, column: 6)
!4770 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 368, column: 8)
!4771 = !DILocation(line: 0, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4764, file: !3, line: 384, column: 4)
!4773 = !DILocation(line: 359, column: 3, scope: !4747)
!4774 = !DILocation(line: 359, column: 10, scope: !4747)
!4775 = !DILocation(line: 0, scope: !4755)
!4776 = !DILocation(line: 362, column: 24, scope: !4758)
!4777 = !DILocation(line: 362, column: 43, scope: !4758)
!4778 = !DILocation(line: 362, column: 20, scope: !4758)
!4779 = !DILocation(line: 362, column: 11, scope: !4755)
!4780 = !DILocation(line: 364, column: 25, scope: !4757)
!4781 = !DILocation(line: 0, scope: !4757)
!4782 = !DILocation(line: 365, column: 25, scope: !4757)
!4783 = !DILocation(line: 366, column: 26, scope: !4757)
!4784 = !DILocation(line: 368, column: 15, scope: !4770)
!4785 = !DILocation(line: 368, column: 32, scope: !4770)
!4786 = !DILocation(line: 369, column: 18, scope: !4770)
!4787 = !DILocation(line: 369, column: 8, scope: !4770)
!4788 = !DILocation(line: 373, column: 27, scope: !4768)
!4789 = !DILocation(line: 373, column: 13, scope: !4768)
!4790 = !DILocation(line: 373, column: 12, scope: !4769)
!4791 = !DILocation(line: 377, column: 25, scope: !4766)
!4792 = !DILocation(line: 377, column: 11, scope: !4766)
!4793 = !DILocation(line: 380, column: 9, scope: !4766)
!4794 = !DILocation(line: 380, column: 15, scope: !4766)
!4795 = !DILocation(line: 380, column: 34, scope: !4766)
!4796 = !DILocation(line: 377, column: 9, scope: !4767)
!4797 = !DILocation(line: 383, column: 20, scope: !4764)
!4798 = !DILocation(line: 383, column: 13, scope: !4765)
!4799 = !DILocation(line: 385, column: 31, scope: !4772)
!4800 = !DILocation(line: 385, column: 6, scope: !4772)
!4801 = !DILocation(line: 386, column: 34, scope: !4772)
!4802 = !DILocation(line: 386, column: 6, scope: !4772)
!4803 = !DILocation(line: 387, column: 4, scope: !4772)
!4804 = !DILocation(line: 390, column: 33, scope: !4763)
!4805 = !DILocation(line: 390, column: 6, scope: !4763)
!4806 = !DILocation(line: 391, column: 35, scope: !4763)
!4807 = !DILocation(line: 391, column: 6, scope: !4763)
!4808 = !DILocation(line: 395, column: 21, scope: !4767)
!4809 = !DILocation(line: 395, column: 5, scope: !4767)
!4810 = !DILocation(line: 398, column: 11, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4767, file: !3, line: 398, column: 9)
!4812 = !DILocation(line: 399, column: 4, scope: !4811)
!4813 = !DILocation(line: 398, column: 9, scope: !4767)
!4814 = !DILocation(line: 400, column: 32, scope: !4811)
!4815 = !DILocation(line: 400, column: 37, scope: !4811)
!4816 = !DILocation(line: 400, column: 7, scope: !4811)
!4817 = !DILocation(line: 404, column: 14, scope: !4755)
!4818 = distinct !{!4818, !4773, !4819}
!4819 = !DILocation(line: 405, column: 5, scope: !4747)
!4820 = !DILocation(line: 406, column: 1, scope: !4747)
!4821 = distinct !DISubprogram(name: "df_lr_alloc", scope: !3, file: !3, line: 773, type: !2071, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4822)
!4822 = !{!4823, !4824, !4825, !4826}
!4823 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4821, file: !3, line: 773, type: !758)
!4824 = !DILocalVariable(name: "bb_index", scope: !4821, file: !3, line: 775, type: !7)
!4825 = !DILocalVariable(name: "bi", scope: !4821, file: !3, line: 776, type: !4126)
!4826 = !DILocalVariable(name: "bb_info", scope: !4827, file: !3, line: 786, type: !2004)
!4827 = distinct !DILexicalBlock(scope: !4828, file: !3, line: 785, column: 5)
!4828 = distinct !DILexicalBlock(scope: !4829, file: !3, line: 784, column: 3)
!4829 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 784, column: 3)
!4830 = !DILocation(line: 0, scope: !4821)
!4831 = !DILocation(line: 775, column: 3, scope: !4821)
!4832 = !DILocation(line: 776, column: 3, scope: !4821)
!4833 = !DILocation(line: 778, column: 8, scope: !4834)
!4834 = distinct !DILexicalBlock(scope: !4821, file: !3, line: 778, column: 7)
!4835 = !DILocation(line: 778, column: 15, scope: !4834)
!4836 = !DILocation(line: 778, column: 7, scope: !4821)
!4837 = !DILocation(line: 779, column: 25, scope: !4834)
!4838 = !DILocation(line: 779, column: 5, scope: !4834)
!4839 = !DILocation(line: 779, column: 12, scope: !4834)
!4840 = !DILocation(line: 779, column: 23, scope: !4834)
!4841 = !DILocation(line: 782, column: 20, scope: !4821)
!4842 = !DILocation(line: 782, column: 3, scope: !4821)
!4843 = !DILocation(line: 784, column: 3, scope: !4829)
!4844 = !DILocation(line: 784, column: 3, scope: !4828)
!4845 = !DILocation(line: 786, column: 58, scope: !4827)
!4846 = !DILocation(line: 786, column: 39, scope: !4827)
!4847 = !DILocation(line: 0, scope: !4827)
!4848 = !DILocation(line: 787, column: 11, scope: !4849)
!4849 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 787, column: 11)
!4850 = !DILocation(line: 787, column: 11, scope: !4827)
!4851 = !DILocation(line: 789, column: 27, scope: !4852)
!4852 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 788, column: 2)
!4853 = !DILocation(line: 789, column: 4, scope: !4852)
!4854 = !DILocation(line: 790, column: 27, scope: !4852)
!4855 = !DILocation(line: 790, column: 4, scope: !4852)
!4856 = !DILocation(line: 791, column: 2, scope: !4852)
!4857 = !DILocation(line: 794, column: 51, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4849, file: !3, line: 793, column: 2)
!4859 = !DILocation(line: 794, column: 58, scope: !4858)
!4860 = !DILocation(line: 794, column: 39, scope: !4858)
!4861 = !DILocation(line: 794, column: 14, scope: !4858)
!4862 = !DILocation(line: 795, column: 23, scope: !4858)
!4863 = !DILocation(line: 795, column: 4, scope: !4858)
!4864 = !DILocation(line: 796, column: 19, scope: !4858)
!4865 = !DILocation(line: 796, column: 13, scope: !4858)
!4866 = !DILocation(line: 796, column: 17, scope: !4858)
!4867 = !DILocation(line: 797, column: 19, scope: !4858)
!4868 = !DILocation(line: 797, column: 13, scope: !4858)
!4869 = !DILocation(line: 797, column: 17, scope: !4858)
!4870 = !DILocation(line: 798, column: 18, scope: !4858)
!4871 = !DILocation(line: 798, column: 13, scope: !4858)
!4872 = !DILocation(line: 798, column: 16, scope: !4858)
!4873 = !DILocation(line: 799, column: 19, scope: !4858)
!4874 = !DILocation(line: 799, column: 13, scope: !4858)
!4875 = !DILocation(line: 799, column: 17, scope: !4858)
!4876 = distinct !{!4876, !4843, !4877}
!4877 = !DILocation(line: 801, column: 5, scope: !4829)
!4878 = !DILocation(line: 803, column: 3, scope: !4821)
!4879 = !DILocation(line: 803, column: 10, scope: !4821)
!4880 = !DILocation(line: 803, column: 21, scope: !4821)
!4881 = !DILocation(line: 804, column: 1, scope: !4821)
!4882 = distinct !DISubprogram(name: "df_lr_reset", scope: !3, file: !3, line: 810, type: !2071, scopeLine: 811, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4883)
!4883 = !{!4884, !4885, !4886, !4887}
!4884 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4882, file: !3, line: 810, type: !758)
!4885 = !DILocalVariable(name: "bb_index", scope: !4882, file: !3, line: 812, type: !7)
!4886 = !DILocalVariable(name: "bi", scope: !4882, file: !3, line: 813, type: !4126)
!4887 = !DILocalVariable(name: "bb_info", scope: !4888, file: !3, line: 817, type: !2004)
!4888 = distinct !DILexicalBlock(scope: !4889, file: !3, line: 816, column: 5)
!4889 = distinct !DILexicalBlock(scope: !4890, file: !3, line: 815, column: 3)
!4890 = distinct !DILexicalBlock(scope: !4882, file: !3, line: 815, column: 3)
!4891 = !DILocation(line: 0, scope: !4882)
!4892 = !DILocation(line: 812, column: 3, scope: !4882)
!4893 = !DILocation(line: 813, column: 3, scope: !4882)
!4894 = !DILocation(line: 815, column: 3, scope: !4890)
!4895 = !DILocation(line: 815, column: 3, scope: !4889)
!4896 = !DILocation(line: 817, column: 58, scope: !4888)
!4897 = !DILocation(line: 817, column: 39, scope: !4888)
!4898 = !DILocation(line: 0, scope: !4888)
!4899 = !DILocation(line: 818, column: 7, scope: !4888)
!4900 = !DILocation(line: 819, column: 30, scope: !4888)
!4901 = !DILocation(line: 819, column: 7, scope: !4888)
!4902 = !DILocation(line: 820, column: 30, scope: !4888)
!4903 = !DILocation(line: 820, column: 7, scope: !4888)
!4904 = distinct !{!4904, !4894, !4905}
!4905 = !DILocation(line: 821, column: 5, scope: !4890)
!4906 = !DILocation(line: 822, column: 1, scope: !4882)
!4907 = distinct !DISubprogram(name: "df_lr_free_bb_info", scope: !3, file: !3, line: 754, type: !2078, scopeLine: 756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4908)
!4908 = !{!4909, !4910, !4911}
!4909 = !DILocalVariable(name: "bb", arg: 1, scope: !4907, file: !3, line: 754, type: !1307)
!4910 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !4907, file: !3, line: 755, type: !754)
!4911 = !DILocalVariable(name: "bb_info", scope: !4907, file: !3, line: 757, type: !2004)
!4912 = !DILocation(line: 0, scope: !4907)
!4913 = !DILocation(line: 758, column: 7, scope: !4914)
!4914 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 758, column: 7)
!4915 = !DILocation(line: 758, column: 7, scope: !4907)
!4916 = !DILocation(line: 760, column: 7, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 759, column: 5)
!4918 = !DILocation(line: 761, column: 7, scope: !4917)
!4919 = !DILocation(line: 762, column: 7, scope: !4917)
!4920 = !DILocation(line: 763, column: 7, scope: !4917)
!4921 = !DILocation(line: 764, column: 18, scope: !4917)
!4922 = !DILocation(line: 764, column: 25, scope: !4917)
!4923 = !DILocation(line: 764, column: 7, scope: !4917)
!4924 = !DILocation(line: 765, column: 5, scope: !4917)
!4925 = !DILocation(line: 766, column: 1, scope: !4907)
!4926 = distinct !DISubprogram(name: "df_lr_local_compute", scope: !3, file: !3, line: 922, type: !2071, scopeLine: 923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4927)
!4927 = !{!4928, !4929, !4930, !4931}
!4928 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4926, file: !3, line: 922, type: !758)
!4929 = !DILocalVariable(name: "bb_index", scope: !4926, file: !3, line: 924, type: !7)
!4930 = !DILocalVariable(name: "bi", scope: !4926, file: !3, line: 925, type: !4126)
!4931 = !DILocalVariable(name: "bb_info", scope: !4932, file: !3, line: 961, type: !2004)
!4932 = distinct !DILexicalBlock(scope: !4933, file: !3, line: 958, column: 2)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 957, column: 11)
!4934 = distinct !DILexicalBlock(scope: !4935, file: !3, line: 956, column: 5)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 955, column: 3)
!4936 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 955, column: 3)
!4937 = !DILocation(line: 0, scope: !4926)
!4938 = !DILocation(line: 924, column: 3, scope: !4926)
!4939 = !DILocation(line: 925, column: 3, scope: !4926)
!4940 = !DILocation(line: 927, column: 17, scope: !4926)
!4941 = !DILocation(line: 927, column: 21, scope: !4926)
!4942 = !DILocation(line: 927, column: 3, scope: !4926)
!4943 = !DILocation(line: 930, column: 19, scope: !4926)
!4944 = !DILocation(line: 930, column: 23, scope: !4926)
!4945 = !DILocation(line: 930, column: 3, scope: !4926)
!4946 = !DILocation(line: 935, column: 8, scope: !4947)
!4947 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 935, column: 7)
!4948 = !DILocation(line: 935, column: 7, scope: !4926)
!4949 = !DILocation(line: 939, column: 23, scope: !4950)
!4950 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 936, column: 5)
!4951 = !DILocation(line: 939, column: 27, scope: !4950)
!4952 = !DILocation(line: 939, column: 7, scope: !4950)
!4953 = !DILocation(line: 944, column: 11, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 944, column: 11)
!4955 = !DILocation(line: 944, column: 11, scope: !4950)
!4956 = !DILocation(line: 945, column: 18, scope: !4954)
!4957 = !DILocation(line: 945, column: 22, scope: !4954)
!4958 = !DILocation(line: 945, column: 2, scope: !4954)
!4959 = !DILocation(line: 950, column: 22, scope: !4960)
!4960 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 950, column: 11)
!4961 = !DILocation(line: 951, column: 4, scope: !4960)
!4962 = !DILocation(line: 951, column: 18, scope: !4960)
!4963 = !DILocation(line: 951, column: 7, scope: !4960)
!4964 = !DILocation(line: 950, column: 11, scope: !4950)
!4965 = !DILocation(line: 952, column: 18, scope: !4960)
!4966 = !DILocation(line: 952, column: 22, scope: !4960)
!4967 = !DILocation(line: 952, column: 42, scope: !4960)
!4968 = !DILocation(line: 952, column: 2, scope: !4960)
!4969 = !DILocation(line: 955, column: 3, scope: !4936)
!4970 = !DILocation(line: 955, column: 3, scope: !4935)
!4971 = !DILocation(line: 957, column: 11, scope: !4933)
!4972 = !DILocation(line: 957, column: 20, scope: !4933)
!4973 = !DILocation(line: 957, column: 11, scope: !4934)
!4974 = !DILocation(line: 961, column: 36, scope: !4932)
!4975 = !DILocation(line: 0, scope: !4932)
!4976 = !DILocation(line: 962, column: 26, scope: !4932)
!4977 = !DILocation(line: 962, column: 31, scope: !4932)
!4978 = !DILocation(line: 962, column: 35, scope: !4932)
!4979 = !DILocation(line: 962, column: 4, scope: !4932)
!4980 = !DILocation(line: 963, column: 2, scope: !4932)
!4981 = !DILocation(line: 965, column: 2, scope: !4933)
!4982 = distinct !{!4982, !4969, !4983}
!4983 = !DILocation(line: 966, column: 5, scope: !4936)
!4984 = !DILocation(line: 968, column: 17, scope: !4926)
!4985 = !DILocation(line: 968, column: 24, scope: !4926)
!4986 = !DILocation(line: 968, column: 3, scope: !4926)
!4987 = !DILocation(line: 969, column: 1, scope: !4926)
!4988 = distinct !DISubprogram(name: "df_lr_init", scope: !3, file: !3, line: 975, type: !2071, scopeLine: 976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4989)
!4989 = !{!4990, !4991, !4992, !4993}
!4990 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !4988, file: !3, line: 975, type: !758)
!4991 = !DILocalVariable(name: "bb_index", scope: !4988, file: !3, line: 977, type: !7)
!4992 = !DILocalVariable(name: "bi", scope: !4988, file: !3, line: 978, type: !4126)
!4993 = !DILocalVariable(name: "bb_info", scope: !4994, file: !3, line: 982, type: !2004)
!4994 = distinct !DILexicalBlock(scope: !4995, file: !3, line: 981, column: 5)
!4995 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 980, column: 3)
!4996 = distinct !DILexicalBlock(scope: !4988, file: !3, line: 980, column: 3)
!4997 = !DILocation(line: 0, scope: !4988)
!4998 = !DILocation(line: 977, column: 3, scope: !4988)
!4999 = !DILocation(line: 978, column: 3, scope: !4988)
!5000 = !DILocation(line: 980, column: 3, scope: !4996)
!5001 = !DILocation(line: 980, column: 3, scope: !4995)
!5002 = !DILocation(line: 982, column: 58, scope: !4994)
!5003 = !DILocation(line: 982, column: 39, scope: !4994)
!5004 = !DILocation(line: 0, scope: !4994)
!5005 = !DILocation(line: 983, column: 29, scope: !4994)
!5006 = !DILocation(line: 983, column: 42, scope: !4994)
!5007 = !DILocation(line: 983, column: 7, scope: !4994)
!5008 = !DILocation(line: 984, column: 30, scope: !4994)
!5009 = !DILocation(line: 984, column: 7, scope: !4994)
!5010 = distinct !{!5010, !5000, !5011}
!5011 = !DILocation(line: 985, column: 5, scope: !4996)
!5012 = !DILocation(line: 986, column: 1, scope: !4988)
!5013 = distinct !DISubprogram(name: "df_lr_confluence_0", scope: !3, file: !3, line: 993, type: !2128, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5014)
!5014 = !{!5015, !5016}
!5015 = !DILocalVariable(name: "bb", arg: 1, scope: !5013, file: !3, line: 993, type: !1307)
!5016 = !DILocalVariable(name: "op1", scope: !5013, file: !3, line: 995, type: !758)
!5017 = !DILocation(line: 0, scope: !5013)
!5018 = !DILocation(line: 995, column: 39, scope: !5013)
!5019 = !DILocation(line: 995, column: 16, scope: !5013)
!5020 = !DILocation(line: 996, column: 13, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5013, file: !3, line: 996, column: 7)
!5022 = !DILocation(line: 996, column: 10, scope: !5021)
!5023 = !DILocation(line: 996, column: 7, scope: !5013)
!5024 = !DILocation(line: 995, column: 47, scope: !5013)
!5025 = !DILocation(line: 997, column: 23, scope: !5021)
!5026 = !DILocation(line: 997, column: 27, scope: !5021)
!5027 = !DILocation(line: 997, column: 5, scope: !5021)
!5028 = !DILocation(line: 998, column: 1, scope: !5013)
!5029 = distinct !DISubprogram(name: "df_lr_confluence_n", scope: !3, file: !3, line: 1004, type: !2133, scopeLine: 1005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5030)
!5030 = !{!5031, !5032, !5033}
!5031 = !DILocalVariable(name: "e", arg: 1, scope: !5029, file: !3, line: 1004, type: !1324)
!5032 = !DILocalVariable(name: "op1", scope: !5029, file: !3, line: 1006, type: !758)
!5033 = !DILocalVariable(name: "op2", scope: !5029, file: !3, line: 1007, type: !758)
!5034 = !DILocation(line: 0, scope: !5029)
!5035 = !DILocation(line: 1006, column: 38, scope: !5029)
!5036 = !DILocation(line: 1006, column: 43, scope: !5029)
!5037 = !DILocation(line: 1006, column: 16, scope: !5029)
!5038 = !DILocation(line: 1006, column: 51, scope: !5029)
!5039 = !DILocation(line: 1007, column: 38, scope: !5029)
!5040 = !DILocation(line: 1007, column: 44, scope: !5029)
!5041 = !DILocation(line: 1007, column: 16, scope: !5029)
!5042 = !DILocation(line: 1007, column: 52, scope: !5029)
!5043 = !DILocation(line: 1012, column: 10, scope: !5044)
!5044 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 1012, column: 7)
!5045 = !DILocation(line: 1012, column: 16, scope: !5044)
!5046 = !DILocation(line: 1012, column: 7, scope: !5029)
!5047 = !DILocation(line: 1013, column: 42, scope: !5044)
!5048 = !DILocation(line: 1013, column: 5, scope: !5044)
!5049 = !DILocation(line: 1015, column: 5, scope: !5044)
!5050 = !DILocation(line: 1017, column: 25, scope: !5029)
!5051 = !DILocation(line: 1017, column: 29, scope: !5029)
!5052 = !DILocation(line: 1017, column: 3, scope: !5029)
!5053 = !DILocation(line: 1018, column: 1, scope: !5029)
!5054 = distinct !DISubprogram(name: "df_lr_transfer_function", scope: !3, file: !3, line: 1024, type: !2138, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5055)
!5055 = !{!5056, !5057, !5058, !5059, !5060, !5061}
!5056 = !DILocalVariable(name: "bb_index", arg: 1, scope: !5054, file: !3, line: 1024, type: !750)
!5057 = !DILocalVariable(name: "bb_info", scope: !5054, file: !3, line: 1026, type: !2004)
!5058 = !DILocalVariable(name: "in", scope: !5054, file: !3, line: 1027, type: !758)
!5059 = !DILocalVariable(name: "out", scope: !5054, file: !3, line: 1028, type: !758)
!5060 = !DILocalVariable(name: "use", scope: !5054, file: !3, line: 1029, type: !758)
!5061 = !DILocalVariable(name: "def", scope: !5054, file: !3, line: 1030, type: !758)
!5062 = !DILocation(line: 0, scope: !5054)
!5063 = !DILocation(line: 1026, column: 35, scope: !5054)
!5064 = !DILocation(line: 1027, column: 24, scope: !5054)
!5065 = !DILocation(line: 1028, column: 25, scope: !5054)
!5066 = !DILocation(line: 1029, column: 25, scope: !5054)
!5067 = !DILocation(line: 1030, column: 25, scope: !5054)
!5068 = !DILocation(line: 1032, column: 10, scope: !5054)
!5069 = !DILocation(line: 1032, column: 3, scope: !5054)
!5070 = distinct !DISubprogram(name: "df_lr_finalize", scope: !3, file: !3, line: 1039, type: !2071, scopeLine: 1040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5071)
!5071 = !{!5072}
!5072 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5070, file: !3, line: 1039, type: !758)
!5073 = !DILocation(line: 0, scope: !5070)
!5074 = !DILocation(line: 1041, column: 3, scope: !5070)
!5075 = !DILocation(line: 1041, column: 10, scope: !5070)
!5076 = !DILocation(line: 1041, column: 26, scope: !5070)
!5077 = !DILocation(line: 1042, column: 11, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5070, file: !3, line: 1042, column: 7)
!5079 = !DILocation(line: 1042, column: 28, scope: !5078)
!5080 = !DILocation(line: 1042, column: 7, scope: !5070)
!5081 = !DILocation(line: 1044, column: 7, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 1043, column: 5)
!5083 = !DILocation(line: 1057, column: 11, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5082, file: !3, line: 1057, column: 11)
!5085 = !DILocation(line: 1057, column: 18, scope: !5084)
!5086 = !DILocation(line: 1057, column: 11, scope: !5082)
!5087 = !DILocation(line: 1059, column: 4, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 1058, column: 2)
!5089 = !DILocation(line: 1060, column: 4, scope: !5088)
!5090 = !DILocation(line: 1061, column: 4, scope: !5088)
!5091 = !DILocation(line: 1062, column: 26, scope: !5088)
!5092 = !DILocation(line: 1062, column: 49, scope: !5088)
!5093 = !DILocation(line: 1062, column: 64, scope: !5088)
!5094 = !DILocation(line: 1062, column: 4, scope: !5088)
!5095 = !DILocation(line: 1063, column: 4, scope: !5088)
!5096 = !DILocation(line: 1064, column: 4, scope: !5088)
!5097 = !DILocation(line: 1067, column: 1, scope: !5070)
!5098 = distinct !DISubprogram(name: "df_lr_free", scope: !3, file: !3, line: 1073, type: !2145, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5099)
!5099 = !{!5100, !5103}
!5100 = !DILocalVariable(name: "i", scope: !5101, file: !3, line: 1077, type: !7)
!5101 = distinct !DILexicalBlock(scope: !5102, file: !3, line: 1076, column: 5)
!5102 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 1075, column: 7)
!5103 = !DILocalVariable(name: "bb_info", scope: !5104, file: !3, line: 1080, type: !2004)
!5104 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 1079, column: 2)
!5105 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 1078, column: 7)
!5106 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 1078, column: 7)
!5107 = !DILocation(line: 1075, column: 7, scope: !5102)
!5108 = !DILocation(line: 1075, column: 14, scope: !5102)
!5109 = !DILocation(line: 1075, column: 7, scope: !5098)
!5110 = !DILocation(line: 1078, column: 7, scope: !5106)
!5111 = !DILocation(line: 1078, column: 23, scope: !5105)
!5112 = !DILocation(line: 0, scope: !5106)
!5113 = !DILocation(line: 0, scope: !5101)
!5114 = !DILocation(line: 1078, column: 30, scope: !5105)
!5115 = !DILocation(line: 1078, column: 21, scope: !5105)
!5116 = !DILocation(line: 1080, column: 36, scope: !5104)
!5117 = !DILocation(line: 0, scope: !5104)
!5118 = !DILocation(line: 1081, column: 8, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5104, file: !3, line: 1081, column: 8)
!5120 = !DILocation(line: 1081, column: 8, scope: !5104)
!5121 = !DILocation(line: 1083, column: 8, scope: !5122)
!5122 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 1082, column: 6)
!5123 = !DILocation(line: 1084, column: 8, scope: !5122)
!5124 = !DILocation(line: 1085, column: 8, scope: !5122)
!5125 = !DILocation(line: 1086, column: 8, scope: !5122)
!5126 = !DILocation(line: 1087, column: 6, scope: !5122)
!5127 = !DILocation(line: 1078, column: 48, scope: !5105)
!5128 = !DILocation(line: 0, scope: !5105)
!5129 = !DILocation(line: 1078, column: 7, scope: !5105)
!5130 = distinct !{!5130, !5110, !5131}
!5131 = !DILocation(line: 1088, column: 2, scope: !5106)
!5132 = !DILocation(line: 1089, column: 31, scope: !5101)
!5133 = !DILocation(line: 1089, column: 7, scope: !5101)
!5134 = !DILocation(line: 1091, column: 7, scope: !5101)
!5135 = !DILocation(line: 1091, column: 14, scope: !5101)
!5136 = !DILocation(line: 1091, column: 30, scope: !5101)
!5137 = !DILocation(line: 1092, column: 13, scope: !5101)
!5138 = !DILocation(line: 1092, column: 20, scope: !5101)
!5139 = !DILocation(line: 1092, column: 7, scope: !5101)
!5140 = !DILocation(line: 1095, column: 3, scope: !5098)
!5141 = !DILocation(line: 0, scope: !5098)
!5142 = !DILocation(line: 1093, column: 5, scope: !5101)
!5143 = !DILocation(line: 1096, column: 9, scope: !5098)
!5144 = !DILocation(line: 1096, column: 3, scope: !5098)
!5145 = !DILocation(line: 1097, column: 1, scope: !5098)
!5146 = distinct !DISubprogram(name: "df_lr_top_dump", scope: !3, file: !3, line: 1103, type: !2207, scopeLine: 1104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5147)
!5147 = !{!5148, !5149, !5150, !5151}
!5148 = !DILocalVariable(name: "bb", arg: 1, scope: !5146, file: !3, line: 1103, type: !1307)
!5149 = !DILocalVariable(name: "file", arg: 2, scope: !5146, file: !3, line: 1103, type: !2154)
!5150 = !DILocalVariable(name: "bb_info", scope: !5146, file: !3, line: 1105, type: !2004)
!5151 = !DILocalVariable(name: "problem_data", scope: !5146, file: !3, line: 1106, type: !2025)
!5152 = !DILocation(line: 0, scope: !5146)
!5153 = !DILocation(line: 1105, column: 58, scope: !5146)
!5154 = !DILocation(line: 1105, column: 35, scope: !5146)
!5155 = !DILocation(line: 1107, column: 8, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 1107, column: 7)
!5157 = !DILocation(line: 1107, column: 16, scope: !5156)
!5158 = !DILocation(line: 1107, column: 29, scope: !5156)
!5159 = !DILocation(line: 1107, column: 20, scope: !5156)
!5160 = !DILocation(line: 1107, column: 7, scope: !5146)
!5161 = !DILocation(line: 1110, column: 3, scope: !5146)
!5162 = !DILocation(line: 1111, column: 35, scope: !5146)
!5163 = !DILocation(line: 1111, column: 3, scope: !5146)
!5164 = !DILocation(line: 1112, column: 7, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5146, file: !3, line: 1112, column: 7)
!5166 = !DILocation(line: 1112, column: 14, scope: !5165)
!5167 = !DILocation(line: 1112, column: 7, scope: !5146)
!5168 = !DILocation(line: 1115, column: 7, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 1113, column: 5)
!5170 = !DILocation(line: 1116, column: 44, scope: !5169)
!5171 = !DILocation(line: 1116, column: 51, scope: !5169)
!5172 = !DILocation(line: 1116, column: 30, scope: !5169)
!5173 = !DILocation(line: 1116, column: 7, scope: !5169)
!5174 = !DILocation(line: 1117, column: 5, scope: !5169)
!5175 = !DILocation(line: 1118, column: 3, scope: !5146)
!5176 = !DILocation(line: 1119, column: 35, scope: !5146)
!5177 = !DILocation(line: 1119, column: 3, scope: !5146)
!5178 = !DILocation(line: 1120, column: 3, scope: !5146)
!5179 = !DILocation(line: 1121, column: 35, scope: !5146)
!5180 = !DILocation(line: 1121, column: 3, scope: !5146)
!5181 = !DILocation(line: 1122, column: 1, scope: !5146)
!5182 = distinct !DISubprogram(name: "df_lr_bottom_dump", scope: !3, file: !3, line: 1128, type: !2207, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5183)
!5183 = !{!5184, !5185, !5186, !5187}
!5184 = !DILocalVariable(name: "bb", arg: 1, scope: !5182, file: !3, line: 1128, type: !1307)
!5185 = !DILocalVariable(name: "file", arg: 2, scope: !5182, file: !3, line: 1128, type: !2154)
!5186 = !DILocalVariable(name: "bb_info", scope: !5182, file: !3, line: 1130, type: !2004)
!5187 = !DILocalVariable(name: "problem_data", scope: !5182, file: !3, line: 1131, type: !2025)
!5188 = !DILocation(line: 0, scope: !5182)
!5189 = !DILocation(line: 1130, column: 58, scope: !5182)
!5190 = !DILocation(line: 1130, column: 35, scope: !5182)
!5191 = !DILocation(line: 1132, column: 8, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1132, column: 7)
!5193 = !DILocation(line: 1132, column: 16, scope: !5192)
!5194 = !DILocation(line: 1132, column: 29, scope: !5192)
!5195 = !DILocation(line: 1132, column: 20, scope: !5192)
!5196 = !DILocation(line: 1132, column: 7, scope: !5182)
!5197 = !DILocation(line: 1135, column: 3, scope: !5182)
!5198 = !DILocation(line: 1136, column: 35, scope: !5182)
!5199 = !DILocation(line: 1136, column: 3, scope: !5182)
!5200 = !DILocation(line: 1137, column: 7, scope: !5201)
!5201 = distinct !DILexicalBlock(scope: !5182, file: !3, line: 1137, column: 7)
!5202 = !DILocation(line: 1137, column: 14, scope: !5201)
!5203 = !DILocation(line: 1137, column: 7, scope: !5182)
!5204 = !DILocation(line: 1140, column: 7, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5201, file: !3, line: 1138, column: 5)
!5206 = !DILocation(line: 1141, column: 44, scope: !5205)
!5207 = !DILocation(line: 1141, column: 52, scope: !5205)
!5208 = !DILocation(line: 1141, column: 30, scope: !5205)
!5209 = !DILocation(line: 1141, column: 7, scope: !5205)
!5210 = !DILocation(line: 1142, column: 5, scope: !5205)
!5211 = !DILocation(line: 1143, column: 1, scope: !5182)
!5212 = distinct !DISubprogram(name: "df_lr_verify_solution_start", scope: !3, file: !3, line: 1150, type: !2145, scopeLine: 1151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5213)
!5213 = !{!5214, !5215}
!5214 = !DILocalVariable(name: "bb", scope: !5212, file: !3, line: 1152, type: !1307)
!5215 = !DILocalVariable(name: "problem_data", scope: !5212, file: !3, line: 1153, type: !2025)
!5216 = !DILocation(line: 1154, column: 7, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 1154, column: 7)
!5218 = !DILocation(line: 1154, column: 14, scope: !5217)
!5219 = !DILocation(line: 1154, column: 7, scope: !5212)
!5220 = !DILocation(line: 1156, column: 14, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5217, file: !3, line: 1155, column: 5)
!5222 = !DILocation(line: 1156, column: 27, scope: !5221)
!5223 = !DILocation(line: 1157, column: 7, scope: !5221)
!5224 = !DILocation(line: 1161, column: 26, scope: !5212)
!5225 = !DILocation(line: 1163, column: 18, scope: !5212)
!5226 = !DILocation(line: 0, scope: !5212)
!5227 = !DILocation(line: 1164, column: 3, scope: !5212)
!5228 = !DILocation(line: 1164, column: 10, scope: !5212)
!5229 = !DILocation(line: 1164, column: 23, scope: !5212)
!5230 = !DILocation(line: 1165, column: 22, scope: !5212)
!5231 = !DILocation(line: 1165, column: 20, scope: !5212)
!5232 = !DILocation(line: 1166, column: 23, scope: !5212)
!5233 = !DILocation(line: 1166, column: 17, scope: !5212)
!5234 = !DILocation(line: 1166, column: 21, scope: !5212)
!5235 = !DILocation(line: 1168, column: 3, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 1168, column: 3)
!5237 = !DILocation(line: 0, scope: !5238)
!5238 = distinct !DILexicalBlock(scope: !5239, file: !3, line: 1169, column: 5)
!5239 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 1168, column: 3)
!5240 = !DILocation(line: 0, scope: !5236)
!5241 = !DILocation(line: 1170, column: 37, scope: !5238)
!5242 = !DILocation(line: 1170, column: 21, scope: !5238)
!5243 = !DILocation(line: 1170, column: 28, scope: !5238)
!5244 = !DILocation(line: 1170, column: 7, scope: !5238)
!5245 = !DILocation(line: 1170, column: 35, scope: !5238)
!5246 = !DILocation(line: 1171, column: 38, scope: !5238)
!5247 = !DILocation(line: 1171, column: 21, scope: !5238)
!5248 = !DILocation(line: 1171, column: 29, scope: !5238)
!5249 = !DILocation(line: 1171, column: 7, scope: !5238)
!5250 = !DILocation(line: 1171, column: 36, scope: !5238)
!5251 = !DILocation(line: 1172, column: 34, scope: !5238)
!5252 = !DILocation(line: 1172, column: 41, scope: !5238)
!5253 = !DILocation(line: 1172, column: 20, scope: !5238)
!5254 = !DILocation(line: 1172, column: 49, scope: !5238)
!5255 = !DILocation(line: 1172, column: 7, scope: !5238)
!5256 = !DILocation(line: 1173, column: 34, scope: !5238)
!5257 = !DILocation(line: 1173, column: 42, scope: !5238)
!5258 = !DILocation(line: 1173, column: 20, scope: !5238)
!5259 = !DILocation(line: 1173, column: 50, scope: !5238)
!5260 = !DILocation(line: 1173, column: 7, scope: !5238)
!5261 = !DILocation(line: 1168, column: 3, scope: !5239)
!5262 = distinct !{!5262, !5235, !5263}
!5263 = !DILocation(line: 1174, column: 5, scope: !5236)
!5264 = !DILocation(line: 1175, column: 1, scope: !5212)
!5265 = distinct !DISubprogram(name: "df_lr_verify_solution_end", scope: !3, file: !3, line: 1182, type: !2145, scopeLine: 1183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5266)
!5266 = !{!5267, !5268}
!5267 = !DILocalVariable(name: "problem_data", scope: !5265, file: !3, line: 1184, type: !2025)
!5268 = !DILocalVariable(name: "bb", scope: !5265, file: !3, line: 1185, type: !1307)
!5269 = !DILocation(line: 1187, column: 7, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 1187, column: 7)
!5271 = !DILocation(line: 1187, column: 14, scope: !5270)
!5272 = !DILocation(line: 1187, column: 27, scope: !5270)
!5273 = !DILocation(line: 1187, column: 7, scope: !5265)
!5274 = !DILocation(line: 0, scope: !5265)
!5275 = !DILocation(line: 1192, column: 14, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 1192, column: 7)
!5277 = !DILocation(line: 1192, column: 7, scope: !5276)
!5278 = !DILocation(line: 1192, column: 7, scope: !5265)
!5279 = !DILocation(line: 1195, column: 28, scope: !5276)
!5280 = !DILocation(line: 1195, column: 5, scope: !5276)
!5281 = !DILocation(line: 1197, column: 5, scope: !5282)
!5282 = distinct !DILexicalBlock(scope: !5276, file: !3, line: 1197, column: 5)
!5283 = !DILocation(line: 0, scope: !5284)
!5284 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 1199, column: 6)
!5285 = distinct !DILexicalBlock(scope: !5286, file: !3, line: 1198, column: 7)
!5286 = distinct !DILexicalBlock(scope: !5282, file: !3, line: 1197, column: 5)
!5287 = !DILocation(line: 0, scope: !5282)
!5288 = !DILocation(line: 1199, column: 38, scope: !5284)
!5289 = !DILocation(line: 1199, column: 45, scope: !5284)
!5290 = !DILocation(line: 1199, column: 24, scope: !5284)
!5291 = !DILocation(line: 1199, column: 53, scope: !5284)
!5292 = !DILocation(line: 1199, column: 8, scope: !5284)
!5293 = !DILocation(line: 1200, column: 6, scope: !5284)
!5294 = !DILocation(line: 1200, column: 41, scope: !5284)
!5295 = !DILocation(line: 1200, column: 49, scope: !5284)
!5296 = !DILocation(line: 1200, column: 27, scope: !5284)
!5297 = !DILocation(line: 1200, column: 57, scope: !5284)
!5298 = !DILocation(line: 1200, column: 11, scope: !5284)
!5299 = !DILocation(line: 1199, column: 6, scope: !5285)
!5300 = !DILocation(line: 1203, column: 6, scope: !5301)
!5301 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 1201, column: 4)
!5302 = !DILocation(line: 1204, column: 4, scope: !5301)
!5303 = !DILocation(line: 1197, column: 5, scope: !5286)
!5304 = distinct !{!5304, !5281, !5305}
!5305 = !DILocation(line: 1205, column: 7, scope: !5282)
!5306 = !DILocation(line: 1209, column: 3, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5265, file: !3, line: 1209, column: 3)
!5308 = !DILocation(line: 0, scope: !5309)
!5309 = distinct !DILexicalBlock(scope: !5310, file: !3, line: 1210, column: 5)
!5310 = distinct !DILexicalBlock(scope: !5307, file: !3, line: 1209, column: 3)
!5311 = !DILocation(line: 0, scope: !5307)
!5312 = !DILocation(line: 1211, column: 7, scope: !5309)
!5313 = !DILocation(line: 1212, column: 7, scope: !5309)
!5314 = !DILocation(line: 1209, column: 3, scope: !5310)
!5315 = distinct !{!5315, !5306, !5316}
!5316 = !DILocation(line: 1213, column: 5, scope: !5307)
!5317 = !DILocation(line: 1215, column: 9, scope: !5265)
!5318 = !DILocation(line: 1215, column: 3, scope: !5265)
!5319 = !DILocation(line: 1216, column: 23, scope: !5265)
!5320 = !DILocation(line: 1216, column: 3, scope: !5265)
!5321 = !DILocation(line: 1217, column: 3, scope: !5265)
!5322 = !DILocation(line: 1218, column: 3, scope: !5265)
!5323 = !DILocation(line: 1218, column: 10, scope: !5265)
!5324 = !DILocation(line: 1218, column: 23, scope: !5265)
!5325 = !DILocation(line: 1219, column: 1, scope: !5265)
!5326 = distinct !DISubprogram(name: "df_lr_set_bb_info", scope: !3, file: !3, line: 742, type: !5327, scopeLine: 744, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5329)
!5327 = !DISubroutineType(types: !5328)
!5328 = !{null, !7, !2004}
!5329 = !{!5330, !5331}
!5330 = !DILocalVariable(name: "index", arg: 1, scope: !5326, file: !3, line: 742, type: !7)
!5331 = !DILocalVariable(name: "bb_info", arg: 2, scope: !5326, file: !3, line: 743, type: !2004)
!5332 = !DILocation(line: 0, scope: !5326)
!5333 = !DILocation(line: 745, column: 3, scope: !5326)
!5334 = !DILocation(line: 746, column: 3, scope: !5326)
!5335 = !DILocation(line: 747, column: 3, scope: !5326)
!5336 = !DILocation(line: 747, column: 10, scope: !5326)
!5337 = !DILocation(line: 747, column: 28, scope: !5326)
!5338 = !DILocation(line: 748, column: 1, scope: !5326)
!5339 = distinct !DISubprogram(name: "df_live_alloc", scope: !3, file: !3, line: 1401, type: !2071, scopeLine: 1402, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5340)
!5340 = !{!5341, !5342, !5343, !5344}
!5341 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5339, file: !3, line: 1401, type: !758)
!5342 = !DILocalVariable(name: "bb_index", scope: !5339, file: !3, line: 1403, type: !7)
!5343 = !DILocalVariable(name: "bi", scope: !5339, file: !3, line: 1404, type: !4126)
!5344 = !DILocalVariable(name: "bb_info", scope: !5345, file: !3, line: 1416, type: !1997)
!5345 = distinct !DILexicalBlock(scope: !5346, file: !3, line: 1415, column: 5)
!5346 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 1414, column: 3)
!5347 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 1414, column: 3)
!5348 = !DILocation(line: 0, scope: !5339)
!5349 = !DILocation(line: 1403, column: 3, scope: !5339)
!5350 = !DILocation(line: 1404, column: 3, scope: !5339)
!5351 = !DILocation(line: 1406, column: 8, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 1406, column: 7)
!5353 = !DILocation(line: 1406, column: 17, scope: !5352)
!5354 = !DILocation(line: 1406, column: 7, scope: !5339)
!5355 = !DILocation(line: 1407, column: 27, scope: !5352)
!5356 = !DILocation(line: 1407, column: 5, scope: !5352)
!5357 = !DILocation(line: 1407, column: 14, scope: !5352)
!5358 = !DILocation(line: 1407, column: 25, scope: !5352)
!5359 = !DILocation(line: 1409, column: 8, scope: !5360)
!5360 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 1409, column: 7)
!5361 = !DILocation(line: 1409, column: 7, scope: !5339)
!5362 = !DILocation(line: 1410, column: 23, scope: !5360)
!5363 = !DILocation(line: 1410, column: 21, scope: !5360)
!5364 = !DILocation(line: 1412, column: 20, scope: !5339)
!5365 = !DILocation(line: 1410, column: 5, scope: !5360)
!5366 = !DILocation(line: 1412, column: 3, scope: !5339)
!5367 = !DILocation(line: 1414, column: 3, scope: !5347)
!5368 = !DILocation(line: 1414, column: 3, scope: !5346)
!5369 = !DILocation(line: 1416, column: 62, scope: !5345)
!5370 = !DILocation(line: 1416, column: 41, scope: !5345)
!5371 = !DILocation(line: 0, scope: !5345)
!5372 = !DILocation(line: 1417, column: 11, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5345, file: !3, line: 1417, column: 11)
!5374 = !DILocation(line: 1417, column: 11, scope: !5345)
!5375 = !DILocation(line: 1419, column: 27, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 1418, column: 2)
!5377 = !DILocation(line: 1419, column: 4, scope: !5376)
!5378 = !DILocation(line: 1420, column: 27, scope: !5376)
!5379 = !DILocation(line: 1420, column: 4, scope: !5376)
!5380 = !DILocation(line: 1421, column: 2, scope: !5376)
!5381 = !DILocation(line: 1424, column: 53, scope: !5382)
!5382 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 1423, column: 2)
!5383 = !DILocation(line: 1424, column: 62, scope: !5382)
!5384 = !DILocation(line: 1424, column: 41, scope: !5382)
!5385 = !DILocation(line: 1424, column: 14, scope: !5382)
!5386 = !DILocation(line: 1425, column: 25, scope: !5382)
!5387 = !DILocation(line: 1425, column: 4, scope: !5382)
!5388 = !DILocation(line: 1426, column: 20, scope: !5382)
!5389 = !DILocation(line: 1426, column: 13, scope: !5382)
!5390 = !DILocation(line: 1426, column: 18, scope: !5382)
!5391 = !DILocation(line: 1427, column: 19, scope: !5382)
!5392 = !DILocation(line: 1427, column: 13, scope: !5382)
!5393 = !DILocation(line: 1427, column: 17, scope: !5382)
!5394 = !DILocation(line: 1428, column: 18, scope: !5382)
!5395 = !DILocation(line: 1428, column: 13, scope: !5382)
!5396 = !DILocation(line: 1428, column: 16, scope: !5382)
!5397 = !DILocation(line: 1429, column: 19, scope: !5382)
!5398 = !DILocation(line: 1429, column: 13, scope: !5382)
!5399 = !DILocation(line: 1429, column: 17, scope: !5382)
!5400 = distinct !{!5400, !5367, !5401}
!5401 = !DILocation(line: 1431, column: 5, scope: !5347)
!5402 = !DILocation(line: 1432, column: 26, scope: !5339)
!5403 = !DILocation(line: 1432, column: 35, scope: !5339)
!5404 = !DILocation(line: 1432, column: 25, scope: !5339)
!5405 = !DILocation(line: 1432, column: 3, scope: !5339)
!5406 = !DILocation(line: 1432, column: 12, scope: !5339)
!5407 = !DILocation(line: 1432, column: 23, scope: !5339)
!5408 = !DILocation(line: 1433, column: 1, scope: !5339)
!5409 = distinct !DISubprogram(name: "df_live_reset", scope: !3, file: !3, line: 1439, type: !2071, scopeLine: 1440, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5410)
!5410 = !{!5411, !5412, !5413, !5414}
!5411 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5409, file: !3, line: 1439, type: !758)
!5412 = !DILocalVariable(name: "bb_index", scope: !5409, file: !3, line: 1441, type: !7)
!5413 = !DILocalVariable(name: "bi", scope: !5409, file: !3, line: 1442, type: !4126)
!5414 = !DILocalVariable(name: "bb_info", scope: !5415, file: !3, line: 1446, type: !1997)
!5415 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 1445, column: 5)
!5416 = distinct !DILexicalBlock(scope: !5417, file: !3, line: 1444, column: 3)
!5417 = distinct !DILexicalBlock(scope: !5409, file: !3, line: 1444, column: 3)
!5418 = !DILocation(line: 0, scope: !5409)
!5419 = !DILocation(line: 1441, column: 3, scope: !5409)
!5420 = !DILocation(line: 1442, column: 3, scope: !5409)
!5421 = !DILocation(line: 1444, column: 3, scope: !5417)
!5422 = !DILocation(line: 1444, column: 3, scope: !5416)
!5423 = !DILocation(line: 1446, column: 62, scope: !5415)
!5424 = !DILocation(line: 1446, column: 41, scope: !5415)
!5425 = !DILocation(line: 0, scope: !5415)
!5426 = !DILocation(line: 1447, column: 7, scope: !5415)
!5427 = !DILocation(line: 1448, column: 30, scope: !5415)
!5428 = !DILocation(line: 1448, column: 7, scope: !5415)
!5429 = !DILocation(line: 1449, column: 30, scope: !5415)
!5430 = !DILocation(line: 1449, column: 7, scope: !5415)
!5431 = distinct !{!5431, !5421, !5432}
!5432 = !DILocation(line: 1450, column: 5, scope: !5417)
!5433 = !DILocation(line: 1451, column: 1, scope: !5409)
!5434 = distinct !DISubprogram(name: "df_live_free_bb_info", scope: !3, file: !3, line: 1382, type: !2078, scopeLine: 1384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5435)
!5435 = !{!5436, !5437, !5438}
!5436 = !DILocalVariable(name: "bb", arg: 1, scope: !5434, file: !3, line: 1382, type: !1307)
!5437 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !5434, file: !3, line: 1383, type: !754)
!5438 = !DILocalVariable(name: "bb_info", scope: !5434, file: !3, line: 1385, type: !1997)
!5439 = !DILocation(line: 0, scope: !5434)
!5440 = !DILocation(line: 1386, column: 7, scope: !5441)
!5441 = distinct !DILexicalBlock(scope: !5434, file: !3, line: 1386, column: 7)
!5442 = !DILocation(line: 1386, column: 7, scope: !5434)
!5443 = !DILocation(line: 1388, column: 7, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 1387, column: 5)
!5445 = !DILocation(line: 1389, column: 7, scope: !5444)
!5446 = !DILocation(line: 1390, column: 7, scope: !5444)
!5447 = !DILocation(line: 1391, column: 7, scope: !5444)
!5448 = !DILocation(line: 1392, column: 18, scope: !5444)
!5449 = !DILocation(line: 1392, column: 27, scope: !5444)
!5450 = !DILocation(line: 1392, column: 7, scope: !5444)
!5451 = !DILocation(line: 1393, column: 5, scope: !5444)
!5452 = !DILocation(line: 1394, column: 1, scope: !5434)
!5453 = distinct !DISubprogram(name: "df_live_local_compute", scope: !3, file: !3, line: 1513, type: !2071, scopeLine: 1514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5454)
!5454 = !{!5455, !5456, !5457}
!5455 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5453, file: !3, line: 1513, type: !758)
!5456 = !DILocalVariable(name: "bb_index", scope: !5453, file: !3, line: 1515, type: !7)
!5457 = !DILocalVariable(name: "bi", scope: !5453, file: !3, line: 1516, type: !4126)
!5458 = !DILocation(line: 0, scope: !5453)
!5459 = !DILocation(line: 1515, column: 3, scope: !5453)
!5460 = !DILocation(line: 1516, column: 3, scope: !5453)
!5461 = !DILocation(line: 1518, column: 3, scope: !5453)
!5462 = !DILocation(line: 1520, column: 3, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 1520, column: 3)
!5464 = !DILocation(line: 1520, column: 3, scope: !5465)
!5465 = distinct !DILexicalBlock(scope: !5463, file: !3, line: 1520, column: 3)
!5466 = !DILocation(line: 1523, column: 33, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5465, file: !3, line: 1522, column: 5)
!5468 = !DILocation(line: 1523, column: 7, scope: !5467)
!5469 = distinct !{!5469, !5462, !5470}
!5470 = !DILocation(line: 1524, column: 5, scope: !5463)
!5471 = !DILocation(line: 1526, column: 17, scope: !5453)
!5472 = !DILocation(line: 1526, column: 26, scope: !5453)
!5473 = !DILocation(line: 1526, column: 3, scope: !5453)
!5474 = !DILocation(line: 1527, column: 1, scope: !5453)
!5475 = distinct !DISubprogram(name: "df_live_init", scope: !3, file: !3, line: 1533, type: !2071, scopeLine: 1534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5476)
!5476 = !{!5477, !5478, !5479, !5480, !5484}
!5477 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5475, file: !3, line: 1533, type: !758)
!5478 = !DILocalVariable(name: "bb_index", scope: !5475, file: !3, line: 1535, type: !7)
!5479 = !DILocalVariable(name: "bi", scope: !5475, file: !3, line: 1536, type: !4126)
!5480 = !DILocalVariable(name: "bb_info", scope: !5481, file: !3, line: 1540, type: !1997)
!5481 = distinct !DILexicalBlock(scope: !5482, file: !3, line: 1539, column: 5)
!5482 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 1538, column: 3)
!5483 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 1538, column: 3)
!5484 = !DILocalVariable(name: "bb_lr_info", scope: !5481, file: !3, line: 1541, type: !2004)
!5485 = !DILocation(line: 0, scope: !5475)
!5486 = !DILocation(line: 1535, column: 3, scope: !5475)
!5487 = !DILocation(line: 1536, column: 3, scope: !5475)
!5488 = !DILocation(line: 1538, column: 3, scope: !5483)
!5489 = !DILocation(line: 1538, column: 3, scope: !5482)
!5490 = !DILocation(line: 1540, column: 62, scope: !5481)
!5491 = !DILocation(line: 1540, column: 41, scope: !5481)
!5492 = !DILocation(line: 0, scope: !5481)
!5493 = !DILocation(line: 1541, column: 61, scope: !5481)
!5494 = !DILocation(line: 1541, column: 42, scope: !5481)
!5495 = !DILocation(line: 1545, column: 28, scope: !5481)
!5496 = !DILocation(line: 1545, column: 42, scope: !5481)
!5497 = !DILocation(line: 1545, column: 59, scope: !5481)
!5498 = !DILocation(line: 1545, column: 7, scope: !5481)
!5499 = !DILocation(line: 1546, column: 30, scope: !5481)
!5500 = !DILocation(line: 1546, column: 7, scope: !5481)
!5501 = distinct !{!5501, !5488, !5502}
!5502 = !DILocation(line: 1547, column: 5, scope: !5483)
!5503 = !DILocation(line: 1548, column: 1, scope: !5475)
!5504 = distinct !DISubprogram(name: "df_live_confluence_n", scope: !3, file: !3, line: 1553, type: !2133, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5505)
!5505 = !{!5506, !5507, !5508}
!5506 = !DILocalVariable(name: "e", arg: 1, scope: !5504, file: !3, line: 1553, type: !1324)
!5507 = !DILocalVariable(name: "op1", scope: !5504, file: !3, line: 1555, type: !758)
!5508 = !DILocalVariable(name: "op2", scope: !5504, file: !3, line: 1556, type: !758)
!5509 = !DILocation(line: 0, scope: !5504)
!5510 = !DILocation(line: 1555, column: 40, scope: !5504)
!5511 = !DILocation(line: 1555, column: 46, scope: !5504)
!5512 = !DILocation(line: 1555, column: 16, scope: !5504)
!5513 = !DILocation(line: 1555, column: 54, scope: !5504)
!5514 = !DILocation(line: 1556, column: 40, scope: !5504)
!5515 = !DILocation(line: 1556, column: 45, scope: !5504)
!5516 = !DILocation(line: 1556, column: 16, scope: !5504)
!5517 = !DILocation(line: 1558, column: 10, scope: !5518)
!5518 = distinct !DILexicalBlock(scope: !5504, file: !3, line: 1558, column: 7)
!5519 = !DILocation(line: 1558, column: 16, scope: !5518)
!5520 = !DILocation(line: 1558, column: 7, scope: !5504)
!5521 = !DILocation(line: 1556, column: 53, scope: !5504)
!5522 = !DILocation(line: 1561, column: 3, scope: !5504)
!5523 = !DILocation(line: 1562, column: 1, scope: !5504)
!5524 = distinct !DISubprogram(name: "df_live_transfer_function", scope: !3, file: !3, line: 1568, type: !2138, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5525)
!5525 = !{!5526, !5527, !5528, !5529, !5530, !5531, !5532}
!5526 = !DILocalVariable(name: "bb_index", arg: 1, scope: !5524, file: !3, line: 1568, type: !750)
!5527 = !DILocalVariable(name: "bb_info", scope: !5524, file: !3, line: 1570, type: !1997)
!5528 = !DILocalVariable(name: "bb_lr_info", scope: !5524, file: !3, line: 1571, type: !2004)
!5529 = !DILocalVariable(name: "in", scope: !5524, file: !3, line: 1572, type: !758)
!5530 = !DILocalVariable(name: "out", scope: !5524, file: !3, line: 1573, type: !758)
!5531 = !DILocalVariable(name: "gen", scope: !5524, file: !3, line: 1574, type: !758)
!5532 = !DILocalVariable(name: "kill", scope: !5524, file: !3, line: 1575, type: !758)
!5533 = !DILocation(line: 0, scope: !5524)
!5534 = !DILocation(line: 1570, column: 37, scope: !5524)
!5535 = !DILocation(line: 1571, column: 38, scope: !5524)
!5536 = !DILocation(line: 1572, column: 24, scope: !5524)
!5537 = !DILocation(line: 1573, column: 25, scope: !5524)
!5538 = !DILocation(line: 1574, column: 25, scope: !5524)
!5539 = !DILocation(line: 1575, column: 26, scope: !5524)
!5540 = !DILocation(line: 1580, column: 15, scope: !5524)
!5541 = !DILocation(line: 1580, column: 49, scope: !5524)
!5542 = !DILocation(line: 1580, column: 3, scope: !5524)
!5543 = !DILocation(line: 1583, column: 36, scope: !5524)
!5544 = !DILocation(line: 1583, column: 3, scope: !5524)
!5545 = !DILocation(line: 1585, column: 37, scope: !5524)
!5546 = !DILocation(line: 1585, column: 10, scope: !5524)
!5547 = !DILocation(line: 1585, column: 3, scope: !5524)
!5548 = distinct !DISubprogram(name: "df_live_finalize", scope: !3, file: !3, line: 1592, type: !2071, scopeLine: 1593, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5549)
!5549 = !{!5550, !5551, !5554, !5555, !5559}
!5550 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5548, file: !3, line: 1592, type: !758)
!5551 = !DILocalVariable(name: "bi", scope: !5552, file: !3, line: 1597, type: !4126)
!5552 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 1596, column: 5)
!5553 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 1595, column: 7)
!5554 = !DILocalVariable(name: "bb_index", scope: !5552, file: !3, line: 1598, type: !7)
!5555 = !DILocalVariable(name: "bb_lr_info", scope: !5556, file: !3, line: 1602, type: !2004)
!5556 = distinct !DILexicalBlock(scope: !5557, file: !3, line: 1601, column: 2)
!5557 = distinct !DILexicalBlock(scope: !5558, file: !3, line: 1600, column: 7)
!5558 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 1600, column: 7)
!5559 = !DILocalVariable(name: "bb_live_info", scope: !5556, file: !3, line: 1603, type: !1997)
!5560 = !DILocation(line: 0, scope: !5548)
!5561 = !DILocation(line: 1595, column: 7, scope: !5553)
!5562 = !DILocation(line: 1595, column: 16, scope: !5553)
!5563 = !DILocation(line: 1595, column: 7, scope: !5548)
!5564 = !DILocation(line: 1597, column: 7, scope: !5552)
!5565 = !DILocation(line: 1598, column: 7, scope: !5552)
!5566 = !DILocation(line: 0, scope: !5552)
!5567 = !DILocation(line: 1600, column: 7, scope: !5558)
!5568 = !DILocation(line: 1600, column: 7, scope: !5557)
!5569 = !DILocation(line: 1602, column: 58, scope: !5556)
!5570 = !DILocation(line: 1602, column: 39, scope: !5556)
!5571 = !DILocation(line: 0, scope: !5556)
!5572 = !DILocation(line: 1603, column: 64, scope: !5556)
!5573 = !DILocation(line: 1603, column: 43, scope: !5556)
!5574 = !DILocation(line: 1607, column: 35, scope: !5556)
!5575 = !DILocation(line: 1607, column: 51, scope: !5556)
!5576 = !DILocation(line: 1607, column: 4, scope: !5556)
!5577 = !DILocation(line: 1608, column: 35, scope: !5556)
!5578 = !DILocation(line: 1608, column: 52, scope: !5556)
!5579 = !DILocation(line: 1608, column: 4, scope: !5556)
!5580 = distinct !{!5580, !5567, !5581}
!5581 = !DILocation(line: 1609, column: 2, scope: !5558)
!5582 = !DILocation(line: 1611, column: 7, scope: !5552)
!5583 = !DILocation(line: 1611, column: 16, scope: !5552)
!5584 = !DILocation(line: 1611, column: 32, scope: !5552)
!5585 = !DILocation(line: 1612, column: 5, scope: !5553)
!5586 = !DILocation(line: 1612, column: 5, scope: !5552)
!5587 = !DILocation(line: 1613, column: 1, scope: !5548)
!5588 = distinct !DISubprogram(name: "df_live_free", scope: !3, file: !3, line: 1619, type: !2145, scopeLine: 1620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5589)
!5589 = !{!5590, !5593}
!5590 = !DILocalVariable(name: "i", scope: !5591, file: !3, line: 1623, type: !7)
!5591 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 1622, column: 5)
!5592 = distinct !DILexicalBlock(scope: !5588, file: !3, line: 1621, column: 7)
!5593 = !DILocalVariable(name: "bb_info", scope: !5594, file: !3, line: 1627, type: !1997)
!5594 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 1626, column: 2)
!5595 = distinct !DILexicalBlock(scope: !5596, file: !3, line: 1625, column: 7)
!5596 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 1625, column: 7)
!5597 = !DILocation(line: 1621, column: 7, scope: !5592)
!5598 = !DILocation(line: 1621, column: 16, scope: !5592)
!5599 = !DILocation(line: 1621, column: 7, scope: !5588)
!5600 = !DILocation(line: 1625, column: 7, scope: !5596)
!5601 = !DILocation(line: 1625, column: 23, scope: !5595)
!5602 = !DILocation(line: 0, scope: !5596)
!5603 = !DILocation(line: 0, scope: !5591)
!5604 = !DILocation(line: 1625, column: 32, scope: !5595)
!5605 = !DILocation(line: 1625, column: 21, scope: !5595)
!5606 = !DILocation(line: 1627, column: 38, scope: !5594)
!5607 = !DILocation(line: 0, scope: !5594)
!5608 = !DILocation(line: 1628, column: 8, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5594, file: !3, line: 1628, column: 8)
!5610 = !DILocation(line: 1628, column: 8, scope: !5594)
!5611 = !DILocation(line: 1630, column: 8, scope: !5612)
!5612 = distinct !DILexicalBlock(scope: !5609, file: !3, line: 1629, column: 6)
!5613 = !DILocation(line: 1631, column: 8, scope: !5612)
!5614 = !DILocation(line: 1632, column: 8, scope: !5612)
!5615 = !DILocation(line: 1633, column: 8, scope: !5612)
!5616 = !DILocation(line: 1634, column: 6, scope: !5612)
!5617 = !DILocation(line: 1625, column: 50, scope: !5595)
!5618 = !DILocation(line: 0, scope: !5595)
!5619 = !DILocation(line: 1625, column: 7, scope: !5595)
!5620 = distinct !{!5620, !5600, !5621}
!5621 = !DILocation(line: 1635, column: 2, scope: !5596)
!5622 = !DILocation(line: 1637, column: 33, scope: !5591)
!5623 = !DILocation(line: 1637, column: 7, scope: !5591)
!5624 = !DILocation(line: 1638, column: 7, scope: !5591)
!5625 = !DILocation(line: 1638, column: 16, scope: !5591)
!5626 = !DILocation(line: 1638, column: 32, scope: !5591)
!5627 = !DILocation(line: 1639, column: 13, scope: !5591)
!5628 = !DILocation(line: 1639, column: 22, scope: !5591)
!5629 = !DILocation(line: 1639, column: 7, scope: !5591)
!5630 = !DILocation(line: 1641, column: 11, scope: !5631)
!5631 = distinct !DILexicalBlock(scope: !5591, file: !3, line: 1641, column: 11)
!5632 = !DILocation(line: 1641, column: 11, scope: !5591)
!5633 = !DILocation(line: 1642, column: 2, scope: !5631)
!5634 = !DILocation(line: 1644, column: 3, scope: !5588)
!5635 = !DILocation(line: 1645, column: 9, scope: !5588)
!5636 = !DILocation(line: 1645, column: 3, scope: !5588)
!5637 = !DILocation(line: 1646, column: 1, scope: !5588)
!5638 = distinct !DISubprogram(name: "df_live_top_dump", scope: !3, file: !3, line: 1652, type: !2207, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5639)
!5639 = !{!5640, !5641, !5642, !5643}
!5640 = !DILocalVariable(name: "bb", arg: 1, scope: !5638, file: !3, line: 1652, type: !1307)
!5641 = !DILocalVariable(name: "file", arg: 2, scope: !5638, file: !3, line: 1652, type: !2154)
!5642 = !DILocalVariable(name: "bb_info", scope: !5638, file: !3, line: 1654, type: !1997)
!5643 = !DILocalVariable(name: "problem_data", scope: !5638, file: !3, line: 1655, type: !2036)
!5644 = !DILocation(line: 0, scope: !5638)
!5645 = !DILocation(line: 1654, column: 62, scope: !5638)
!5646 = !DILocation(line: 1654, column: 37, scope: !5638)
!5647 = !DILocation(line: 1657, column: 8, scope: !5648)
!5648 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 1657, column: 7)
!5649 = !DILocation(line: 1657, column: 16, scope: !5648)
!5650 = !DILocation(line: 1657, column: 29, scope: !5648)
!5651 = !DILocation(line: 1657, column: 20, scope: !5648)
!5652 = !DILocation(line: 1657, column: 7, scope: !5638)
!5653 = !DILocation(line: 1660, column: 3, scope: !5638)
!5654 = !DILocation(line: 1661, column: 35, scope: !5638)
!5655 = !DILocation(line: 1661, column: 3, scope: !5638)
!5656 = !DILocation(line: 1662, column: 7, scope: !5657)
!5657 = distinct !DILexicalBlock(scope: !5638, file: !3, line: 1662, column: 7)
!5658 = !DILocation(line: 1662, column: 16, scope: !5657)
!5659 = !DILocation(line: 1662, column: 7, scope: !5638)
!5660 = !DILocation(line: 1665, column: 7, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5657, file: !3, line: 1663, column: 5)
!5662 = !DILocation(line: 1666, column: 44, scope: !5661)
!5663 = !DILocation(line: 1666, column: 51, scope: !5661)
!5664 = !DILocation(line: 1666, column: 30, scope: !5661)
!5665 = !DILocation(line: 1666, column: 7, scope: !5661)
!5666 = !DILocation(line: 1667, column: 5, scope: !5661)
!5667 = !DILocation(line: 1668, column: 3, scope: !5638)
!5668 = !DILocation(line: 1669, column: 35, scope: !5638)
!5669 = !DILocation(line: 1669, column: 3, scope: !5638)
!5670 = !DILocation(line: 1670, column: 3, scope: !5638)
!5671 = !DILocation(line: 1671, column: 35, scope: !5638)
!5672 = !DILocation(line: 1671, column: 3, scope: !5638)
!5673 = !DILocation(line: 1672, column: 1, scope: !5638)
!5674 = distinct !DISubprogram(name: "df_live_bottom_dump", scope: !3, file: !3, line: 1678, type: !2207, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5675)
!5675 = !{!5676, !5677, !5678, !5679}
!5676 = !DILocalVariable(name: "bb", arg: 1, scope: !5674, file: !3, line: 1678, type: !1307)
!5677 = !DILocalVariable(name: "file", arg: 2, scope: !5674, file: !3, line: 1678, type: !2154)
!5678 = !DILocalVariable(name: "bb_info", scope: !5674, file: !3, line: 1680, type: !1997)
!5679 = !DILocalVariable(name: "problem_data", scope: !5674, file: !3, line: 1681, type: !2036)
!5680 = !DILocation(line: 0, scope: !5674)
!5681 = !DILocation(line: 1680, column: 62, scope: !5674)
!5682 = !DILocation(line: 1680, column: 37, scope: !5674)
!5683 = !DILocation(line: 1683, column: 8, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1683, column: 7)
!5685 = !DILocation(line: 1683, column: 16, scope: !5684)
!5686 = !DILocation(line: 1683, column: 29, scope: !5684)
!5687 = !DILocation(line: 1683, column: 20, scope: !5684)
!5688 = !DILocation(line: 1683, column: 7, scope: !5674)
!5689 = !DILocation(line: 1686, column: 3, scope: !5674)
!5690 = !DILocation(line: 1687, column: 35, scope: !5674)
!5691 = !DILocation(line: 1687, column: 3, scope: !5674)
!5692 = !DILocation(line: 1688, column: 7, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1688, column: 7)
!5694 = !DILocation(line: 1688, column: 16, scope: !5693)
!5695 = !DILocation(line: 1688, column: 7, scope: !5674)
!5696 = !DILocation(line: 1691, column: 7, scope: !5697)
!5697 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 1689, column: 5)
!5698 = !DILocation(line: 1692, column: 44, scope: !5697)
!5699 = !DILocation(line: 1692, column: 52, scope: !5697)
!5700 = !DILocation(line: 1692, column: 30, scope: !5697)
!5701 = !DILocation(line: 1692, column: 7, scope: !5697)
!5702 = !DILocation(line: 1693, column: 5, scope: !5697)
!5703 = !DILocation(line: 1694, column: 1, scope: !5674)
!5704 = distinct !DISubprogram(name: "df_live_verify_solution_start", scope: !3, file: !3, line: 1701, type: !2145, scopeLine: 1702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5705)
!5705 = !{!5706, !5707}
!5706 = !DILocalVariable(name: "bb", scope: !5704, file: !3, line: 1703, type: !1307)
!5707 = !DILocalVariable(name: "problem_data", scope: !5704, file: !3, line: 1704, type: !2036)
!5708 = !DILocation(line: 1705, column: 7, scope: !5709)
!5709 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1705, column: 7)
!5710 = !DILocation(line: 1705, column: 16, scope: !5709)
!5711 = !DILocation(line: 1705, column: 7, scope: !5704)
!5712 = !DILocation(line: 1707, column: 16, scope: !5713)
!5713 = distinct !DILexicalBlock(scope: !5709, file: !3, line: 1706, column: 5)
!5714 = !DILocation(line: 1707, column: 29, scope: !5713)
!5715 = !DILocation(line: 1708, column: 7, scope: !5713)
!5716 = !DILocation(line: 1712, column: 28, scope: !5704)
!5717 = !DILocation(line: 1714, column: 18, scope: !5704)
!5718 = !DILocation(line: 0, scope: !5704)
!5719 = !DILocation(line: 1715, column: 3, scope: !5704)
!5720 = !DILocation(line: 1715, column: 12, scope: !5704)
!5721 = !DILocation(line: 1715, column: 25, scope: !5704)
!5722 = !DILocation(line: 1716, column: 22, scope: !5704)
!5723 = !DILocation(line: 1716, column: 20, scope: !5704)
!5724 = !DILocation(line: 1717, column: 23, scope: !5704)
!5725 = !DILocation(line: 1717, column: 17, scope: !5704)
!5726 = !DILocation(line: 1717, column: 21, scope: !5704)
!5727 = !DILocation(line: 1719, column: 3, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5704, file: !3, line: 1719, column: 3)
!5729 = !DILocation(line: 0, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5731, file: !3, line: 1720, column: 5)
!5731 = distinct !DILexicalBlock(scope: !5728, file: !3, line: 1719, column: 3)
!5732 = !DILocation(line: 0, scope: !5728)
!5733 = !DILocation(line: 1721, column: 37, scope: !5730)
!5734 = !DILocation(line: 1721, column: 21, scope: !5730)
!5735 = !DILocation(line: 1721, column: 28, scope: !5730)
!5736 = !DILocation(line: 1721, column: 7, scope: !5730)
!5737 = !DILocation(line: 1721, column: 35, scope: !5730)
!5738 = !DILocation(line: 1722, column: 38, scope: !5730)
!5739 = !DILocation(line: 1722, column: 21, scope: !5730)
!5740 = !DILocation(line: 1722, column: 29, scope: !5730)
!5741 = !DILocation(line: 1722, column: 7, scope: !5730)
!5742 = !DILocation(line: 1722, column: 36, scope: !5730)
!5743 = !DILocation(line: 1723, column: 34, scope: !5730)
!5744 = !DILocation(line: 1723, column: 41, scope: !5730)
!5745 = !DILocation(line: 1723, column: 20, scope: !5730)
!5746 = !DILocation(line: 1723, column: 49, scope: !5730)
!5747 = !DILocation(line: 1723, column: 7, scope: !5730)
!5748 = !DILocation(line: 1724, column: 34, scope: !5730)
!5749 = !DILocation(line: 1724, column: 42, scope: !5730)
!5750 = !DILocation(line: 1724, column: 20, scope: !5730)
!5751 = !DILocation(line: 1724, column: 50, scope: !5730)
!5752 = !DILocation(line: 1724, column: 7, scope: !5730)
!5753 = !DILocation(line: 1719, column: 3, scope: !5731)
!5754 = distinct !{!5754, !5727, !5755}
!5755 = !DILocation(line: 1725, column: 5, scope: !5728)
!5756 = !DILocation(line: 1726, column: 1, scope: !5704)
!5757 = distinct !DISubprogram(name: "df_live_verify_solution_end", scope: !3, file: !3, line: 1733, type: !2145, scopeLine: 1734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5758)
!5758 = !{!5759, !5760}
!5759 = !DILocalVariable(name: "problem_data", scope: !5757, file: !3, line: 1735, type: !2036)
!5760 = !DILocalVariable(name: "bb", scope: !5757, file: !3, line: 1736, type: !1307)
!5761 = !DILocation(line: 1738, column: 7, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1738, column: 7)
!5763 = !DILocation(line: 1738, column: 16, scope: !5762)
!5764 = !DILocation(line: 1738, column: 29, scope: !5762)
!5765 = !DILocation(line: 1738, column: 7, scope: !5757)
!5766 = !DILocation(line: 0, scope: !5757)
!5767 = !DILocation(line: 1743, column: 3, scope: !5768)
!5768 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1743, column: 3)
!5769 = !DILocation(line: 0, scope: !5770)
!5770 = distinct !DILexicalBlock(scope: !5771, file: !3, line: 1745, column: 11)
!5771 = distinct !DILexicalBlock(scope: !5772, file: !3, line: 1744, column: 5)
!5772 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 1743, column: 3)
!5773 = !DILocation(line: 0, scope: !5768)
!5774 = !DILocation(line: 1745, column: 43, scope: !5770)
!5775 = !DILocation(line: 1745, column: 50, scope: !5770)
!5776 = !DILocation(line: 1745, column: 29, scope: !5770)
!5777 = !DILocation(line: 1745, column: 58, scope: !5770)
!5778 = !DILocation(line: 1745, column: 13, scope: !5770)
!5779 = !DILocation(line: 1746, column: 4, scope: !5770)
!5780 = !DILocation(line: 1746, column: 39, scope: !5770)
!5781 = !DILocation(line: 1746, column: 47, scope: !5770)
!5782 = !DILocation(line: 1746, column: 25, scope: !5770)
!5783 = !DILocation(line: 1746, column: 55, scope: !5770)
!5784 = !DILocation(line: 1746, column: 9, scope: !5770)
!5785 = !DILocation(line: 1745, column: 11, scope: !5771)
!5786 = !DILocation(line: 1749, column: 4, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5770, file: !3, line: 1747, column: 2)
!5788 = !DILocation(line: 1750, column: 2, scope: !5787)
!5789 = !DILocation(line: 1743, column: 3, scope: !5772)
!5790 = distinct !{!5790, !5767, !5791}
!5791 = !DILocation(line: 1751, column: 5, scope: !5768)
!5792 = !DILocation(line: 1755, column: 3, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 1755, column: 3)
!5794 = !DILocation(line: 0, scope: !5793)
!5795 = !DILocation(line: 1757, column: 7, scope: !5796)
!5796 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 1756, column: 5)
!5797 = distinct !DILexicalBlock(scope: !5793, file: !3, line: 1755, column: 3)
!5798 = !DILocation(line: 1758, column: 7, scope: !5796)
!5799 = !DILocation(line: 1755, column: 3, scope: !5797)
!5800 = distinct !{!5800, !5792, !5801}
!5801 = !DILocation(line: 1759, column: 5, scope: !5793)
!5802 = !DILocation(line: 1761, column: 9, scope: !5757)
!5803 = !DILocation(line: 1761, column: 3, scope: !5757)
!5804 = !DILocation(line: 1762, column: 23, scope: !5757)
!5805 = !DILocation(line: 1762, column: 3, scope: !5757)
!5806 = !DILocation(line: 1763, column: 3, scope: !5757)
!5807 = !DILocation(line: 1764, column: 3, scope: !5757)
!5808 = !DILocation(line: 1764, column: 12, scope: !5757)
!5809 = !DILocation(line: 1764, column: 25, scope: !5757)
!5810 = !DILocation(line: 1765, column: 1, scope: !5757)
!5811 = distinct !DISubprogram(name: "df_live_set_bb_info", scope: !3, file: !3, line: 1370, type: !5812, scopeLine: 1372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5814)
!5812 = !DISubroutineType(types: !5813)
!5813 = !{null, !7, !1997}
!5814 = !{!5815, !5816}
!5815 = !DILocalVariable(name: "index", arg: 1, scope: !5811, file: !3, line: 1370, type: !7)
!5816 = !DILocalVariable(name: "bb_info", arg: 2, scope: !5811, file: !3, line: 1371, type: !1997)
!5817 = !DILocation(line: 0, scope: !5811)
!5818 = !DILocation(line: 1373, column: 3, scope: !5811)
!5819 = !DILocation(line: 1374, column: 3, scope: !5811)
!5820 = !DILocation(line: 1375, column: 3, scope: !5811)
!5821 = !DILocation(line: 1375, column: 12, scope: !5811)
!5822 = !DILocation(line: 1375, column: 30, scope: !5811)
!5823 = !DILocation(line: 1376, column: 1, scope: !5811)
!5824 = distinct !DISubprogram(name: "df_chain_alloc", scope: !3, file: !3, line: 2039, type: !2071, scopeLine: 2040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5825)
!5825 = !{!5826}
!5826 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5824, file: !3, line: 2039, type: !758)
!5827 = !DILocation(line: 0, scope: !5824)
!5828 = !DILocation(line: 2041, column: 3, scope: !5824)
!5829 = !DILocation(line: 2042, column: 26, scope: !5824)
!5830 = !DILocation(line: 2042, column: 3, scope: !5824)
!5831 = !DILocation(line: 2042, column: 13, scope: !5824)
!5832 = !DILocation(line: 2042, column: 24, scope: !5824)
!5833 = !DILocation(line: 2044, column: 3, scope: !5824)
!5834 = !DILocation(line: 2044, column: 13, scope: !5824)
!5835 = !DILocation(line: 2044, column: 24, scope: !5824)
!5836 = !DILocation(line: 2045, column: 1, scope: !5824)
!5837 = distinct !DISubprogram(name: "df_chain_reset", scope: !3, file: !3, line: 2051, type: !2071, scopeLine: 2052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5838)
!5838 = !{!5839}
!5839 = !DILocalVariable(name: "blocks_to_clear", arg: 1, scope: !5837, file: !3, line: 2051, type: !758)
!5840 = !DILocation(line: 0, scope: !5837)
!5841 = !DILocation(line: 2053, column: 3, scope: !5837)
!5842 = !DILocation(line: 2054, column: 1, scope: !5837)
!5843 = distinct !DISubprogram(name: "df_chain_finalize", scope: !3, file: !3, line: 2163, type: !2071, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5844)
!5844 = !{!5845, !5846, !5847}
!5845 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !5843, file: !3, line: 2163, type: !758)
!5846 = !DILocalVariable(name: "bb_index", scope: !5843, file: !3, line: 2165, type: !7)
!5847 = !DILocalVariable(name: "bi", scope: !5843, file: !3, line: 2166, type: !4126)
!5848 = !DILocation(line: 0, scope: !5843)
!5849 = !DILocation(line: 2165, column: 3, scope: !5843)
!5850 = !DILocation(line: 2166, column: 3, scope: !5843)
!5851 = !DILocation(line: 2168, column: 3, scope: !5852)
!5852 = distinct !DILexicalBlock(scope: !5843, file: !3, line: 2168, column: 3)
!5853 = !DILocation(line: 2168, column: 3, scope: !5854)
!5854 = distinct !DILexicalBlock(scope: !5852, file: !3, line: 2168, column: 3)
!5855 = !DILocation(line: 2170, column: 27, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5854, file: !3, line: 2169, column: 5)
!5857 = !DILocation(line: 2170, column: 7, scope: !5856)
!5858 = distinct !{!5858, !5851, !5859}
!5859 = !DILocation(line: 2171, column: 5, scope: !5852)
!5860 = !DILocation(line: 2172, column: 1, scope: !5843)
!5861 = distinct !DISubprogram(name: "df_chain_free", scope: !3, file: !3, line: 2178, type: !2145, scopeLine: 2179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!5862 = !DILocation(line: 2180, column: 20, scope: !5861)
!5863 = !DILocation(line: 2180, column: 30, scope: !5861)
!5864 = !DILocation(line: 2180, column: 3, scope: !5861)
!5865 = !DILocation(line: 2181, column: 3, scope: !5861)
!5866 = !DILocation(line: 2182, column: 9, scope: !5861)
!5867 = !DILocation(line: 2182, column: 3, scope: !5861)
!5868 = !DILocation(line: 2183, column: 1, scope: !5861)
!5869 = distinct !DISubprogram(name: "df_chain_fully_remove_problem", scope: !3, file: !3, line: 2028, type: !2145, scopeLine: 2029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!5870 = !DILocation(line: 2030, column: 3, scope: !5869)
!5871 = !DILocation(line: 2031, column: 3, scope: !5869)
!5872 = !DILocation(line: 2032, column: 9, scope: !5869)
!5873 = !DILocation(line: 2032, column: 3, scope: !5869)
!5874 = !DILocation(line: 2033, column: 1, scope: !5869)
!5875 = distinct !DISubprogram(name: "df_chain_top_dump", scope: !3, file: !3, line: 2189, type: !2207, scopeLine: 2190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5876)
!5876 = !{!5877, !5878, !5879, !5882, !5883, !5887, !5893}
!5877 = !DILocalVariable(name: "bb", arg: 1, scope: !5875, file: !3, line: 2189, type: !1307)
!5878 = !DILocalVariable(name: "file", arg: 2, scope: !5875, file: !3, line: 2189, type: !2154)
!5879 = !DILocalVariable(name: "insn", scope: !5880, file: !3, line: 2193, type: !836)
!5880 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 2192, column: 5)
!5881 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 2191, column: 7)
!5882 = !DILocalVariable(name: "def_rec", scope: !5880, file: !3, line: 2194, type: !1948)
!5883 = !DILocalVariable(name: "def", scope: !5884, file: !3, line: 2201, type: !825)
!5884 = distinct !DILexicalBlock(scope: !5885, file: !3, line: 2200, column: 6)
!5885 = distinct !DILexicalBlock(scope: !5886, file: !3, line: 2196, column: 2)
!5886 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 2195, column: 11)
!5887 = !DILocalVariable(name: "insn_info", scope: !5888, file: !3, line: 2213, type: !1943)
!5888 = distinct !DILexicalBlock(scope: !5889, file: !3, line: 2212, column: 6)
!5889 = distinct !DILexicalBlock(scope: !5890, file: !3, line: 2211, column: 8)
!5890 = distinct !DILexicalBlock(scope: !5891, file: !3, line: 2210, column: 2)
!5891 = distinct !DILexicalBlock(scope: !5892, file: !3, line: 2209, column: 7)
!5892 = distinct !DILexicalBlock(scope: !5880, file: !3, line: 2209, column: 7)
!5893 = !DILocalVariable(name: "def", scope: !5894, file: !3, line: 2222, type: !825)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 2221, column: 7)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 2216, column: 3)
!5896 = distinct !DILexicalBlock(scope: !5888, file: !3, line: 2215, column: 12)
!5897 = !DILocation(line: 0, scope: !5875)
!5898 = !DILocation(line: 2191, column: 7, scope: !5881)
!5899 = !DILocation(line: 2191, column: 7, scope: !5875)
!5900 = !DILocation(line: 2194, column: 53, scope: !5880)
!5901 = !DILocation(line: 2194, column: 25, scope: !5880)
!5902 = !DILocation(line: 0, scope: !5880)
!5903 = !DILocation(line: 2195, column: 11, scope: !5886)
!5904 = !DILocation(line: 2195, column: 11, scope: !5880)
!5905 = !DILocation(line: 2198, column: 4, scope: !5885)
!5906 = !DILocation(line: 2199, column: 4, scope: !5885)
!5907 = !DILocation(line: 2199, column: 11, scope: !5885)
!5908 = !DILocation(line: 0, scope: !5884)
!5909 = !DILocation(line: 2202, column: 39, scope: !5884)
!5910 = !DILocation(line: 2202, column: 8, scope: !5884)
!5911 = !DILocation(line: 2203, column: 23, scope: !5884)
!5912 = !DILocation(line: 2203, column: 8, scope: !5884)
!5913 = !DILocation(line: 2204, column: 8, scope: !5884)
!5914 = !DILocation(line: 2205, column: 15, scope: !5884)
!5915 = distinct !{!5915, !5906, !5916}
!5916 = !DILocation(line: 2206, column: 6, scope: !5885)
!5917 = !DILocation(line: 2209, column: 7, scope: !5892)
!5918 = !DILocation(line: 0, scope: !5892)
!5919 = !DILocation(line: 2209, column: 7, scope: !5891)
!5920 = !DILocation(line: 2211, column: 8, scope: !5889)
!5921 = !DILocation(line: 2211, column: 8, scope: !5890)
!5922 = !DILocation(line: 2213, column: 41, scope: !5888)
!5923 = !DILocation(line: 0, scope: !5888)
!5924 = !DILocation(line: 2214, column: 18, scope: !5888)
!5925 = !DILocation(line: 2215, column: 12, scope: !5896)
!5926 = !DILocation(line: 2215, column: 12, scope: !5888)
!5927 = !DILocation(line: 2218, column: 7, scope: !5895)
!5928 = !DILocation(line: 2217, column: 5, scope: !5895)
!5929 = !DILocation(line: 2220, column: 5, scope: !5895)
!5930 = !DILocation(line: 2220, column: 12, scope: !5895)
!5931 = !DILocation(line: 0, scope: !5894)
!5932 = !DILocation(line: 2223, column: 43, scope: !5894)
!5933 = !DILocation(line: 2223, column: 9, scope: !5894)
!5934 = !DILocation(line: 2224, column: 13, scope: !5935)
!5935 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 2224, column: 13)
!5936 = !DILocation(line: 2224, column: 32, scope: !5935)
!5937 = !DILocation(line: 2224, column: 13, scope: !5894)
!5938 = !DILocation(line: 2225, column: 4, scope: !5935)
!5939 = !DILocation(line: 2226, column: 24, scope: !5894)
!5940 = !DILocation(line: 2226, column: 9, scope: !5894)
!5941 = !DILocation(line: 2227, column: 9, scope: !5894)
!5942 = !DILocation(line: 2228, column: 16, scope: !5894)
!5943 = distinct !{!5943, !5929, !5944}
!5944 = !DILocation(line: 2229, column: 7, scope: !5895)
!5945 = distinct !{!5945, !5917, !5946}
!5946 = !DILocation(line: 2232, column: 2, scope: !5892)
!5947 = !DILocation(line: 2234, column: 1, scope: !5875)
!5948 = distinct !DISubprogram(name: "df_chain_bottom_dump", scope: !3, file: !3, line: 2238, type: !2207, scopeLine: 2239, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5949)
!5949 = !{!5950, !5951, !5952, !5955, !5956, !5960, !5966, !5967, !5971}
!5950 = !DILocalVariable(name: "bb", arg: 1, scope: !5948, file: !3, line: 2238, type: !1307)
!5951 = !DILocalVariable(name: "file", arg: 2, scope: !5948, file: !3, line: 2238, type: !2154)
!5952 = !DILocalVariable(name: "insn", scope: !5953, file: !3, line: 2242, type: !836)
!5953 = distinct !DILexicalBlock(scope: !5954, file: !3, line: 2241, column: 5)
!5954 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 2240, column: 7)
!5955 = !DILocalVariable(name: "use_rec", scope: !5953, file: !3, line: 2243, type: !1948)
!5956 = !DILocalVariable(name: "use", scope: !5957, file: !3, line: 2250, type: !825)
!5957 = distinct !DILexicalBlock(scope: !5958, file: !3, line: 2249, column: 6)
!5958 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 2246, column: 2)
!5959 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 2245, column: 11)
!5960 = !DILocalVariable(name: "insn_info", scope: !5961, file: !3, line: 2262, type: !1943)
!5961 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 2261, column: 6)
!5962 = distinct !DILexicalBlock(scope: !5963, file: !3, line: 2260, column: 8)
!5963 = distinct !DILexicalBlock(scope: !5964, file: !3, line: 2259, column: 2)
!5964 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 2258, column: 7)
!5965 = distinct !DILexicalBlock(scope: !5953, file: !3, line: 2258, column: 7)
!5966 = !DILocalVariable(name: "eq_use_rec", scope: !5961, file: !3, line: 2263, type: !1948)
!5967 = !DILocalVariable(name: "use", scope: !5968, file: !3, line: 2272, type: !825)
!5968 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 2271, column: 7)
!5969 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 2266, column: 3)
!5970 = distinct !DILexicalBlock(scope: !5961, file: !3, line: 2265, column: 12)
!5971 = !DILocalVariable(name: "use", scope: !5972, file: !3, line: 2282, type: !825)
!5972 = distinct !DILexicalBlock(scope: !5969, file: !3, line: 2281, column: 7)
!5973 = !DILocation(line: 0, scope: !5948)
!5974 = !DILocation(line: 2240, column: 7, scope: !5954)
!5975 = !DILocation(line: 2240, column: 7, scope: !5948)
!5976 = !DILocation(line: 2243, column: 53, scope: !5953)
!5977 = !DILocation(line: 2243, column: 25, scope: !5953)
!5978 = !DILocation(line: 0, scope: !5953)
!5979 = !DILocation(line: 2245, column: 11, scope: !5959)
!5980 = !DILocation(line: 2245, column: 11, scope: !5953)
!5981 = !DILocation(line: 2247, column: 4, scope: !5958)
!5982 = !DILocation(line: 2248, column: 4, scope: !5958)
!5983 = !DILocation(line: 2248, column: 11, scope: !5958)
!5984 = !DILocation(line: 0, scope: !5957)
!5985 = !DILocation(line: 2251, column: 39, scope: !5957)
!5986 = !DILocation(line: 2251, column: 8, scope: !5957)
!5987 = !DILocation(line: 2252, column: 23, scope: !5957)
!5988 = !DILocation(line: 2252, column: 8, scope: !5957)
!5989 = !DILocation(line: 2253, column: 8, scope: !5957)
!5990 = !DILocation(line: 2254, column: 15, scope: !5957)
!5991 = distinct !{!5991, !5982, !5992}
!5992 = !DILocation(line: 2255, column: 6, scope: !5958)
!5993 = !DILocation(line: 2258, column: 7, scope: !5965)
!5994 = !DILocation(line: 0, scope: !5965)
!5995 = !DILocation(line: 2258, column: 7, scope: !5964)
!5996 = !DILocation(line: 2260, column: 8, scope: !5962)
!5997 = !DILocation(line: 2260, column: 8, scope: !5963)
!5998 = !DILocation(line: 2262, column: 41, scope: !5961)
!5999 = !DILocation(line: 0, scope: !5961)
!6000 = !DILocation(line: 2263, column: 29, scope: !5961)
!6001 = !DILocation(line: 2264, column: 18, scope: !5961)
!6002 = !DILocation(line: 2265, column: 12, scope: !5970)
!6003 = !DILocation(line: 2265, column: 21, scope: !5970)
!6004 = !DILocation(line: 2265, column: 24, scope: !5970)
!6005 = !DILocation(line: 2265, column: 12, scope: !5961)
!6006 = !DILocation(line: 2268, column: 7, scope: !5969)
!6007 = !DILocation(line: 2267, column: 5, scope: !5969)
!6008 = !DILocation(line: 2270, column: 5, scope: !5969)
!6009 = !DILocation(line: 2270, column: 12, scope: !5969)
!6010 = !DILocation(line: 2280, column: 5, scope: !5969)
!6011 = !DILocation(line: 0, scope: !5968)
!6012 = !DILocation(line: 2273, column: 43, scope: !5968)
!6013 = !DILocation(line: 2273, column: 9, scope: !5968)
!6014 = !DILocation(line: 2274, column: 13, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !5968, file: !3, line: 2274, column: 13)
!6016 = !DILocation(line: 2274, column: 32, scope: !6015)
!6017 = !DILocation(line: 2274, column: 13, scope: !5968)
!6018 = !DILocation(line: 2275, column: 4, scope: !6015)
!6019 = !DILocation(line: 2276, column: 24, scope: !5968)
!6020 = !DILocation(line: 2276, column: 9, scope: !5968)
!6021 = !DILocation(line: 2277, column: 9, scope: !5968)
!6022 = !DILocation(line: 2278, column: 16, scope: !5968)
!6023 = distinct !{!6023, !6008, !6024}
!6024 = !DILocation(line: 2279, column: 7, scope: !5969)
!6025 = !DILocation(line: 2280, column: 12, scope: !5969)
!6026 = !DILocation(line: 0, scope: !5972)
!6027 = !DILocation(line: 2283, column: 48, scope: !5972)
!6028 = !DILocation(line: 2283, column: 9, scope: !5972)
!6029 = !DILocation(line: 2284, column: 24, scope: !5972)
!6030 = !DILocation(line: 2284, column: 9, scope: !5972)
!6031 = !DILocation(line: 2285, column: 9, scope: !5972)
!6032 = !DILocation(line: 2286, column: 19, scope: !5972)
!6033 = distinct !{!6033, !6010, !6034}
!6034 = !DILocation(line: 2287, column: 7, scope: !5969)
!6035 = distinct !{!6035, !5993, !6036}
!6036 = !DILocation(line: 2290, column: 2, scope: !5965)
!6037 = !DILocation(line: 2292, column: 1, scope: !5948)
!6038 = distinct !DISubprogram(name: "df_chain_remove_problem", scope: !3, file: !3, line: 1977, type: !2145, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6039)
!6039 = !{!6040, !6041, !6042, !6046, !6047, !6048, !6049}
!6040 = !DILocalVariable(name: "bi", scope: !6038, file: !3, line: 1979, type: !4126)
!6041 = !DILocalVariable(name: "bb_index", scope: !6038, file: !3, line: 1980, type: !7)
!6042 = !DILocalVariable(name: "insn", scope: !6043, file: !3, line: 1988, type: !836)
!6043 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 1987, column: 5)
!6044 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 1986, column: 3)
!6045 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1986, column: 3)
!6046 = !DILocalVariable(name: "def_rec", scope: !6043, file: !3, line: 1989, type: !1948)
!6047 = !DILocalVariable(name: "use_rec", scope: !6043, file: !3, line: 1990, type: !1948)
!6048 = !DILocalVariable(name: "bb", scope: !6043, file: !3, line: 1991, type: !1307)
!6049 = !DILocalVariable(name: "uid", scope: !6050, file: !3, line: 2002, type: !7)
!6050 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 2001, column: 2)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 2000, column: 7)
!6052 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 2000, column: 7)
!6053 = !DILocation(line: 1979, column: 3, scope: !6038)
!6054 = !DILocation(line: 1980, column: 3, scope: !6038)
!6055 = !DILocation(line: 1983, column: 7, scope: !6056)
!6056 = distinct !DILexicalBlock(scope: !6038, file: !3, line: 1983, column: 7)
!6057 = !DILocation(line: 1983, column: 17, scope: !6056)
!6058 = !DILocation(line: 1983, column: 7, scope: !6038)
!6059 = !DILocation(line: 1984, column: 5, scope: !6056)
!6060 = !DILocation(line: 1986, column: 3, scope: !6045)
!6061 = !DILocation(line: 0, scope: !6045)
!6062 = !DILocation(line: 0, scope: !6038)
!6063 = !DILocation(line: 1986, column: 3, scope: !6044)
!6064 = !DILocation(line: 1991, column: 24, scope: !6043)
!6065 = !DILocation(line: 0, scope: !6043)
!6066 = !DILocation(line: 1993, column: 11, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 1993, column: 11)
!6068 = !DILocation(line: 1993, column: 11, scope: !6043)
!6069 = !DILocation(line: 1994, column: 45, scope: !6070)
!6070 = distinct !DILexicalBlock(scope: !6067, file: !3, line: 1994, column: 2)
!6071 = !DILocation(line: 1994, column: 17, scope: !6070)
!6072 = !DILocation(line: 1994, column: 7, scope: !6070)
!6073 = !DILocation(line: 0, scope: !6070)
!6074 = !DILocation(line: 1994, column: 53, scope: !6075)
!6075 = distinct !DILexicalBlock(scope: !6070, file: !3, line: 1994, column: 2)
!6076 = !DILocation(line: 1994, column: 2, scope: !6070)
!6077 = !DILocation(line: 1995, column: 4, scope: !6075)
!6078 = !DILocation(line: 1995, column: 28, scope: !6075)
!6079 = !DILocation(line: 1994, column: 70, scope: !6075)
!6080 = !DILocation(line: 1994, column: 2, scope: !6075)
!6081 = distinct !{!6081, !6076, !6082}
!6082 = !DILocation(line: 1995, column: 30, scope: !6070)
!6083 = !DILocation(line: 1996, column: 11, scope: !6084)
!6084 = distinct !DILexicalBlock(scope: !6043, file: !3, line: 1996, column: 11)
!6085 = !DILocation(line: 0, scope: !6084)
!6086 = !DILocation(line: 1996, column: 11, scope: !6043)
!6087 = !DILocation(line: 1997, column: 45, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6084, file: !3, line: 1997, column: 2)
!6089 = !DILocation(line: 1997, column: 17, scope: !6088)
!6090 = !DILocation(line: 1997, column: 7, scope: !6088)
!6091 = !DILocation(line: 0, scope: !6088)
!6092 = !DILocation(line: 1997, column: 53, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6088, file: !3, line: 1997, column: 2)
!6094 = !DILocation(line: 1997, column: 2, scope: !6088)
!6095 = !DILocation(line: 1998, column: 4, scope: !6093)
!6096 = !DILocation(line: 1998, column: 28, scope: !6093)
!6097 = !DILocation(line: 1997, column: 70, scope: !6093)
!6098 = !DILocation(line: 1997, column: 2, scope: !6093)
!6099 = distinct !{!6099, !6094, !6100}
!6100 = !DILocation(line: 1998, column: 30, scope: !6088)
!6101 = !DILocation(line: 2000, column: 7, scope: !6052)
!6102 = !DILocation(line: 0, scope: !6052)
!6103 = !DILocation(line: 2000, column: 7, scope: !6051)
!6104 = !DILocation(line: 2002, column: 23, scope: !6050)
!6105 = !DILocation(line: 0, scope: !6050)
!6106 = !DILocation(line: 2004, column: 8, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6050, file: !3, line: 2004, column: 8)
!6108 = !DILocation(line: 2004, column: 8, scope: !6050)
!6109 = !DILocation(line: 2006, column: 12, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 2006, column: 12)
!6111 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 2005, column: 6)
!6112 = !DILocation(line: 2006, column: 12, scope: !6111)
!6113 = !DILocation(line: 2007, column: 18, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 2007, column: 3)
!6115 = !DILocation(line: 2007, column: 8, scope: !6114)
!6116 = !DILocation(line: 0, scope: !6114)
!6117 = !DILocation(line: 2007, column: 42, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6114, file: !3, line: 2007, column: 3)
!6119 = !DILocation(line: 2007, column: 3, scope: !6114)
!6120 = !DILocation(line: 2008, column: 5, scope: !6118)
!6121 = !DILocation(line: 2008, column: 29, scope: !6118)
!6122 = !DILocation(line: 2007, column: 59, scope: !6118)
!6123 = !DILocation(line: 2007, column: 3, scope: !6118)
!6124 = distinct !{!6124, !6119, !6125}
!6125 = !DILocation(line: 2008, column: 31, scope: !6114)
!6126 = !DILocation(line: 2009, column: 12, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6111, file: !3, line: 2009, column: 12)
!6128 = !DILocation(line: 0, scope: !6127)
!6129 = !DILocation(line: 2009, column: 12, scope: !6111)
!6130 = !DILocation(line: 2011, column: 20, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 2011, column: 5)
!6132 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 2010, column: 3)
!6133 = !DILocation(line: 2011, column: 10, scope: !6131)
!6134 = !DILocation(line: 0, scope: !6131)
!6135 = !DILocation(line: 2011, column: 44, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 2011, column: 5)
!6137 = !DILocation(line: 2011, column: 5, scope: !6131)
!6138 = !DILocation(line: 2012, column: 7, scope: !6136)
!6139 = !DILocation(line: 2012, column: 31, scope: !6136)
!6140 = !DILocation(line: 2011, column: 61, scope: !6136)
!6141 = !DILocation(line: 2011, column: 5, scope: !6136)
!6142 = distinct !{!6142, !6137, !6143}
!6143 = !DILocation(line: 2012, column: 33, scope: !6131)
!6144 = !DILocation(line: 2013, column: 20, scope: !6145)
!6145 = distinct !DILexicalBlock(scope: !6132, file: !3, line: 2013, column: 5)
!6146 = !DILocation(line: 2013, column: 10, scope: !6145)
!6147 = !DILocation(line: 0, scope: !6145)
!6148 = !DILocation(line: 2013, column: 47, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6145, file: !3, line: 2013, column: 5)
!6150 = !DILocation(line: 2013, column: 5, scope: !6145)
!6151 = !DILocation(line: 2014, column: 7, scope: !6149)
!6152 = !DILocation(line: 2014, column: 31, scope: !6149)
!6153 = !DILocation(line: 2013, column: 64, scope: !6149)
!6154 = !DILocation(line: 2013, column: 5, scope: !6149)
!6155 = distinct !{!6155, !6150, !6156}
!6156 = !DILocation(line: 2014, column: 33, scope: !6145)
!6157 = distinct !{!6157, !6101, !6158}
!6158 = !DILocation(line: 2017, column: 2, scope: !6052)
!6159 = distinct !{!6159, !6060, !6160}
!6160 = !DILocation(line: 2018, column: 5, scope: !6045)
!6161 = !DILocation(line: 2020, column: 17, scope: !6038)
!6162 = !DILocation(line: 2020, column: 27, scope: !6038)
!6163 = !DILocation(line: 2020, column: 3, scope: !6038)
!6164 = !DILocation(line: 2021, column: 3, scope: !6038)
!6165 = !DILocation(line: 2021, column: 13, scope: !6038)
!6166 = !DILocation(line: 2021, column: 24, scope: !6038)
!6167 = !DILocation(line: 2022, column: 1, scope: !6038)
!6168 = distinct !DISubprogram(name: "df_chain_create_bb", scope: !3, file: !3, line: 2107, type: !3011, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6169)
!6169 = !{!6170, !6171, !6172, !6173, !6174, !6175}
!6170 = !DILocalVariable(name: "bb_index", arg: 1, scope: !6168, file: !3, line: 2107, type: !7)
!6171 = !DILocalVariable(name: "bb", scope: !6168, file: !3, line: 2109, type: !1307)
!6172 = !DILocalVariable(name: "bb_info", scope: !6168, file: !3, line: 2110, type: !2017)
!6173 = !DILocalVariable(name: "insn", scope: !6168, file: !3, line: 2111, type: !836)
!6174 = !DILocalVariable(name: "cpy", scope: !6168, file: !3, line: 2112, type: !758)
!6175 = !DILocalVariable(name: "uid", scope: !6176, file: !3, line: 2137, type: !7)
!6176 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 2136, column: 7)
!6177 = distinct !DILexicalBlock(scope: !6178, file: !3, line: 2135, column: 9)
!6178 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 2134, column: 3)
!6179 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 2134, column: 3)
!6180 = !DILocation(line: 0, scope: !6168)
!6181 = !DILocation(line: 2109, column: 20, scope: !6168)
!6182 = !DILocation(line: 2110, column: 35, scope: !6168)
!6183 = !DILocation(line: 2112, column: 16, scope: !6168)
!6184 = !DILocation(line: 2114, column: 30, scope: !6168)
!6185 = !DILocation(line: 2114, column: 3, scope: !6168)
!6186 = !DILocation(line: 2115, column: 19, scope: !6168)
!6187 = !DILocation(line: 2115, column: 29, scope: !6168)
!6188 = !DILocation(line: 2115, column: 3, scope: !6168)
!6189 = !DILocation(line: 2131, column: 3, scope: !6168)
!6190 = !DILocation(line: 2134, column: 3, scope: !6179)
!6191 = !DILocation(line: 0, scope: !6179)
!6192 = !DILocation(line: 2134, column: 3, scope: !6178)
!6193 = !DILocation(line: 2135, column: 9, scope: !6177)
!6194 = !DILocation(line: 2135, column: 9, scope: !6178)
!6195 = !DILocation(line: 2137, column: 28, scope: !6176)
!6196 = !DILocation(line: 0, scope: !6176)
!6197 = !DILocation(line: 2141, column: 46, scope: !6176)
!6198 = !DILocation(line: 2141, column: 9, scope: !6176)
!6199 = !DILocation(line: 2142, column: 13, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6176, file: !3, line: 2142, column: 13)
!6201 = !DILocation(line: 2142, column: 17, scope: !6200)
!6202 = !DILocation(line: 2142, column: 34, scope: !6200)
!6203 = !DILocation(line: 2142, column: 13, scope: !6176)
!6204 = !DILocation(line: 2143, column: 41, scope: !6200)
!6205 = !DILocation(line: 2143, column: 4, scope: !6200)
!6206 = !DILocation(line: 2146, column: 9, scope: !6176)
!6207 = !DILocation(line: 2147, column: 7, scope: !6176)
!6208 = distinct !{!6208, !6190, !6209}
!6209 = !DILocation(line: 2147, column: 7, scope: !6179)
!6210 = !DILocation(line: 2151, column: 9, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6168, file: !3, line: 2151, column: 7)
!6212 = !DILocation(line: 2151, column: 13, scope: !6211)
!6213 = !DILocation(line: 2151, column: 30, scope: !6211)
!6214 = !DILocation(line: 2151, column: 7, scope: !6168)
!6215 = !DILocation(line: 2153, column: 37, scope: !6211)
!6216 = !DILocation(line: 2153, column: 9, scope: !6211)
!6217 = !DILocation(line: 2152, column: 5, scope: !6211)
!6218 = !DILocation(line: 2156, column: 3, scope: !6168)
!6219 = !DILocation(line: 2157, column: 1, scope: !6168)
!6220 = distinct !DISubprogram(name: "df_chain_create_bb_process_use", scope: !3, file: !3, line: 2060, type: !6221, scopeLine: 2063, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6223)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{null, !758, !1948, !750}
!6223 = !{!6224, !6225, !6226, !6227, !6228, !6229, !6231, !6232, !6235, !6240, !6241}
!6224 = !DILocalVariable(name: "local_rd", arg: 1, scope: !6220, file: !3, line: 2060, type: !758)
!6225 = !DILocalVariable(name: "use_rec", arg: 2, scope: !6220, file: !3, line: 2061, type: !1948)
!6226 = !DILocalVariable(name: "top_flag", arg: 3, scope: !6220, file: !3, line: 2062, type: !750)
!6227 = !DILocalVariable(name: "bi", scope: !6220, file: !3, line: 2064, type: !4126)
!6228 = !DILocalVariable(name: "def_index", scope: !6220, file: !3, line: 2065, type: !7)
!6229 = !DILocalVariable(name: "use", scope: !6230, file: !3, line: 2069, type: !825)
!6230 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 2068, column: 5)
!6231 = !DILocalVariable(name: "uregno", scope: !6230, file: !3, line: 2070, type: !7)
!6232 = !DILocalVariable(name: "count", scope: !6233, file: !3, line: 2075, type: !750)
!6233 = distinct !DILexicalBlock(scope: !6234, file: !3, line: 2073, column: 2)
!6234 = distinct !DILexicalBlock(scope: !6230, file: !3, line: 2071, column: 11)
!6235 = !DILocalVariable(name: "first_index", scope: !6236, file: !3, line: 2080, type: !7)
!6236 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 2079, column: 3)
!6237 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 2078, column: 12)
!6238 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 2077, column: 6)
!6239 = distinct !DILexicalBlock(scope: !6233, file: !3, line: 2076, column: 8)
!6240 = !DILocalVariable(name: "last_index", scope: !6236, file: !3, line: 2081, type: !7)
!6241 = !DILocalVariable(name: "def", scope: !6242, file: !3, line: 2085, type: !825)
!6242 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 2084, column: 7)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !3, line: 2083, column: 5)
!6244 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 2083, column: 5)
!6245 = !DILocation(line: 0, scope: !6220)
!6246 = !DILocation(line: 2064, column: 3, scope: !6220)
!6247 = !DILocation(line: 2065, column: 3, scope: !6220)
!6248 = !DILocation(line: 2067, column: 3, scope: !6220)
!6249 = !DILocation(line: 2067, column: 10, scope: !6220)
!6250 = !DILocation(line: 0, scope: !6230)
!6251 = !DILocation(line: 2070, column: 29, scope: !6230)
!6252 = !DILocation(line: 2071, column: 14, scope: !6234)
!6253 = !DILocation(line: 2071, column: 18, scope: !6234)
!6254 = !DILocation(line: 2071, column: 35, scope: !6234)
!6255 = !DILocation(line: 2072, column: 15, scope: !6234)
!6256 = !DILocation(line: 2072, column: 4, scope: !6234)
!6257 = !DILocation(line: 2075, column: 16, scope: !6233)
!6258 = !DILocation(line: 0, scope: !6233)
!6259 = !DILocation(line: 2076, column: 8, scope: !6239)
!6260 = !DILocation(line: 2076, column: 8, scope: !6233)
!6261 = !DILocation(line: 2078, column: 25, scope: !6237)
!6262 = !DILocation(line: 2078, column: 44, scope: !6237)
!6263 = !DILocation(line: 2078, column: 21, scope: !6237)
!6264 = !DILocation(line: 2078, column: 12, scope: !6238)
!6265 = !DILocation(line: 2080, column: 32, scope: !6236)
!6266 = !DILocation(line: 0, scope: !6236)
!6267 = !DILocation(line: 2081, column: 43, scope: !6236)
!6268 = !DILocation(line: 2081, column: 51, scope: !6236)
!6269 = !DILocation(line: 2083, column: 5, scope: !6244)
!6270 = !DILocation(line: 2083, column: 5, scope: !6243)
!6271 = !DILocation(line: 2086, column: 13, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 2086, column: 13)
!6273 = !DILocation(line: 2086, column: 23, scope: !6272)
!6274 = !DILocation(line: 2086, column: 13, scope: !6242)
!6275 = !DILocation(line: 2089, column: 15, scope: !6242)
!6276 = !DILocation(line: 0, scope: !6242)
!6277 = !DILocation(line: 2090, column: 13, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 2090, column: 13)
!6279 = !DILocation(line: 2090, column: 13, scope: !6242)
!6280 = !DILocation(line: 2091, column: 4, scope: !6278)
!6281 = !DILocation(line: 2092, column: 13, scope: !6282)
!6282 = distinct !DILexicalBlock(scope: !6242, file: !3, line: 2092, column: 13)
!6283 = !DILocation(line: 0, scope: !6282)
!6284 = !DILocation(line: 2092, column: 13, scope: !6242)
!6285 = !DILocation(line: 2093, column: 4, scope: !6282)
!6286 = distinct !{!6286, !6269, !6287}
!6287 = !DILocation(line: 2094, column: 7, scope: !6244)
!6288 = !DILocation(line: 2099, column: 14, scope: !6230)
!6289 = distinct !{!6289, !6248, !6290}
!6290 = !DILocation(line: 2100, column: 5, scope: !6220)
!6291 = !DILocation(line: 2101, column: 1, scope: !6220)
!6292 = distinct !DISubprogram(name: "df_byte_lr_alloc", scope: !3, file: !3, line: 2484, type: !2071, scopeLine: 2485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6293)
!6293 = !{!6294, !6295, !6296, !6297, !6298, !6299, !6300, !6301, !6302, !6306, !6312, !6316}
!6294 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !6292, file: !3, line: 2484, type: !758)
!6295 = !DILocalVariable(name: "bb_index", scope: !6292, file: !3, line: 2486, type: !7)
!6296 = !DILocalVariable(name: "bi", scope: !6292, file: !3, line: 2487, type: !4126)
!6297 = !DILocalVariable(name: "bb", scope: !6292, file: !3, line: 2488, type: !1307)
!6298 = !DILocalVariable(name: "regno", scope: !6292, file: !3, line: 2489, type: !7)
!6299 = !DILocalVariable(name: "index", scope: !6292, file: !3, line: 2490, type: !7)
!6300 = !DILocalVariable(name: "max_reg", scope: !6292, file: !3, line: 2491, type: !7)
!6301 = !DILocalVariable(name: "problem_data", scope: !6292, file: !3, line: 2492, type: !1987)
!6302 = !DILocalVariable(name: "insn", scope: !6303, file: !3, line: 2520, type: !836)
!6303 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 2519, column: 5)
!6304 = distinct !DILexicalBlock(scope: !6305, file: !3, line: 2518, column: 3)
!6305 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 2518, column: 3)
!6306 = !DILocalVariable(name: "insn_info", scope: !6307, file: !3, line: 2525, type: !1943)
!6307 = distinct !DILexicalBlock(scope: !6308, file: !3, line: 2524, column: 6)
!6308 = distinct !DILexicalBlock(scope: !6309, file: !3, line: 2523, column: 8)
!6309 = distinct !DILexicalBlock(scope: !6310, file: !3, line: 2522, column: 2)
!6310 = distinct !DILexicalBlock(scope: !6311, file: !3, line: 2521, column: 7)
!6311 = distinct !DILexicalBlock(scope: !6303, file: !3, line: 2521, column: 7)
!6312 = !DILocalVariable(name: "len", scope: !6313, file: !3, line: 2539, type: !750)
!6313 = distinct !DILexicalBlock(scope: !6314, file: !3, line: 2538, column: 5)
!6314 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 2537, column: 3)
!6315 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 2537, column: 3)
!6316 = !DILocalVariable(name: "bb_info", scope: !6317, file: !3, line: 2557, type: !2042)
!6317 = distinct !DILexicalBlock(scope: !6318, file: !3, line: 2556, column: 5)
!6318 = distinct !DILexicalBlock(scope: !6319, file: !3, line: 2555, column: 3)
!6319 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 2555, column: 3)
!6320 = !DILocation(line: 0, scope: !6292)
!6321 = !DILocation(line: 2486, column: 3, scope: !6292)
!6322 = !DILocation(line: 2487, column: 3, scope: !6292)
!6323 = !DILocation(line: 2491, column: 26, scope: !6292)
!6324 = !DILocation(line: 2493, column: 7, scope: !6292)
!6325 = !DILocation(line: 2495, column: 3, scope: !6292)
!6326 = !DILocation(line: 2495, column: 15, scope: !6292)
!6327 = !DILocation(line: 2495, column: 28, scope: !6292)
!6328 = !DILocation(line: 2497, column: 8, scope: !6329)
!6329 = distinct !DILexicalBlock(scope: !6292, file: !3, line: 2497, column: 7)
!6330 = !DILocation(line: 2497, column: 20, scope: !6329)
!6331 = !DILocation(line: 2497, column: 7, scope: !6292)
!6332 = !DILocation(line: 2498, column: 30, scope: !6329)
!6333 = !DILocation(line: 2498, column: 5, scope: !6329)
!6334 = !DILocation(line: 2498, column: 17, scope: !6329)
!6335 = !DILocation(line: 2498, column: 28, scope: !6329)
!6336 = !DILocation(line: 2501, column: 20, scope: !6292)
!6337 = !DILocation(line: 2501, column: 3, scope: !6292)
!6338 = !DILocation(line: 2509, column: 45, scope: !6292)
!6339 = !DILocation(line: 2509, column: 3, scope: !6292)
!6340 = !DILocation(line: 2510, column: 31, scope: !6292)
!6341 = !DILocation(line: 2510, column: 17, scope: !6292)
!6342 = !DILocation(line: 2510, column: 29, scope: !6292)
!6343 = !DILocation(line: 2511, column: 29, scope: !6292)
!6344 = !DILocation(line: 2511, column: 17, scope: !6292)
!6345 = !DILocation(line: 2511, column: 27, scope: !6292)
!6346 = !DILocation(line: 2512, column: 38, scope: !6292)
!6347 = !DILocation(line: 2512, column: 17, scope: !6292)
!6348 = !DILocation(line: 2512, column: 36, scope: !6292)
!6349 = !DILocation(line: 2513, column: 39, scope: !6292)
!6350 = !DILocation(line: 2513, column: 17, scope: !6292)
!6351 = !DILocation(line: 2513, column: 37, scope: !6292)
!6352 = !DILocation(line: 2514, column: 35, scope: !6292)
!6353 = !DILocation(line: 2514, column: 17, scope: !6292)
!6354 = !DILocation(line: 2514, column: 33, scope: !6292)
!6355 = !DILocation(line: 2518, column: 3, scope: !6305)
!6356 = !DILocation(line: 2518, column: 3, scope: !6304)
!6357 = !DILocation(line: 0, scope: !6305)
!6358 = !DILocation(line: 2521, column: 7, scope: !6311)
!6359 = !DILocation(line: 0, scope: !6311)
!6360 = !DILocation(line: 0, scope: !6303)
!6361 = !DILocation(line: 2521, column: 7, scope: !6310)
!6362 = !DILocation(line: 2523, column: 8, scope: !6308)
!6363 = !DILocation(line: 2523, column: 8, scope: !6309)
!6364 = !DILocation(line: 2525, column: 41, scope: !6307)
!6365 = !DILocation(line: 0, scope: !6307)
!6366 = !DILocation(line: 2526, column: 31, scope: !6307)
!6367 = !DILocation(line: 2526, column: 8, scope: !6307)
!6368 = !DILocation(line: 2527, column: 31, scope: !6307)
!6369 = !DILocation(line: 2527, column: 8, scope: !6307)
!6370 = !DILocation(line: 2528, column: 6, scope: !6307)
!6371 = distinct !{!6371, !6358, !6372}
!6372 = !DILocation(line: 2529, column: 2, scope: !6311)
!6373 = !DILocation(line: 2530, column: 23, scope: !6303)
!6374 = !DILocation(line: 2530, column: 35, scope: !6303)
!6375 = !DILocation(line: 2530, column: 71, scope: !6303)
!6376 = !DILocation(line: 2530, column: 7, scope: !6303)
!6377 = !DILocation(line: 0, scope: !6304)
!6378 = distinct !{!6378, !6355, !6379}
!6379 = !DILocation(line: 2531, column: 5, scope: !6305)
!6380 = !DILocation(line: 2533, column: 19, scope: !6292)
!6381 = !DILocation(line: 2533, column: 31, scope: !6292)
!6382 = !DILocation(line: 2533, column: 3, scope: !6292)
!6383 = !DILocation(line: 2534, column: 19, scope: !6292)
!6384 = !DILocation(line: 2534, column: 31, scope: !6292)
!6385 = !DILocation(line: 2534, column: 3, scope: !6292)
!6386 = !DILocation(line: 0, scope: !6313)
!6387 = !DILocation(line: 2537, column: 25, scope: !6314)
!6388 = !DILocation(line: 2537, column: 8, scope: !6315)
!6389 = !DILocation(line: 2537, column: 3, scope: !6315)
!6390 = !DILocation(line: 2540, column: 21, scope: !6313)
!6391 = !DILocation(line: 2540, column: 7, scope: !6313)
!6392 = !DILocation(line: 2540, column: 40, scope: !6313)
!6393 = !DILocation(line: 2541, column: 39, scope: !6394)
!6394 = distinct !DILexicalBlock(scope: !6313, file: !3, line: 2541, column: 11)
!6395 = !DILocation(line: 2541, column: 11, scope: !6394)
!6396 = !DILocation(line: 2541, column: 11, scope: !6313)
!6397 = !DILocation(line: 2542, column: 8, scope: !6394)
!6398 = !DILocation(line: 2542, column: 2, scope: !6394)
!6399 = !DILocation(line: 0, scope: !6394)
!6400 = !DILocation(line: 2546, column: 21, scope: !6313)
!6401 = !DILocation(line: 2546, column: 7, scope: !6313)
!6402 = !DILocation(line: 2546, column: 38, scope: !6313)
!6403 = !DILocation(line: 2547, column: 13, scope: !6313)
!6404 = !DILocation(line: 2537, column: 41, scope: !6314)
!6405 = !DILocation(line: 2537, column: 3, scope: !6314)
!6406 = distinct !{!6406, !6389, !6407}
!6407 = !DILocation(line: 2548, column: 5, scope: !6315)
!6408 = !DILocation(line: 2550, column: 43, scope: !6292)
!6409 = !DILocation(line: 2551, column: 8, scope: !6292)
!6410 = !DILocation(line: 2551, column: 12, scope: !6292)
!6411 = !DILocation(line: 2550, column: 3, scope: !6292)
!6412 = !DILocation(line: 2552, column: 43, scope: !6292)
!6413 = !DILocation(line: 2553, column: 8, scope: !6292)
!6414 = !DILocation(line: 2552, column: 3, scope: !6292)
!6415 = !DILocation(line: 2555, column: 3, scope: !6319)
!6416 = !DILocation(line: 2555, column: 3, scope: !6318)
!6417 = !DILocation(line: 2557, column: 68, scope: !6317)
!6418 = !DILocation(line: 2557, column: 44, scope: !6317)
!6419 = !DILocation(line: 0, scope: !6317)
!6420 = !DILocation(line: 2558, column: 11, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6317, file: !3, line: 2558, column: 11)
!6422 = !DILocation(line: 2558, column: 11, scope: !6317)
!6423 = !DILocation(line: 2560, column: 27, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 2559, column: 2)
!6425 = !DILocation(line: 2560, column: 4, scope: !6424)
!6426 = !DILocation(line: 2561, column: 27, scope: !6424)
!6427 = !DILocation(line: 2561, column: 4, scope: !6424)
!6428 = !DILocation(line: 2562, column: 2, scope: !6424)
!6429 = !DILocation(line: 2565, column: 56, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 2564, column: 2)
!6431 = !DILocation(line: 2565, column: 68, scope: !6430)
!6432 = !DILocation(line: 2565, column: 44, scope: !6430)
!6433 = !DILocation(line: 2565, column: 14, scope: !6430)
!6434 = !DILocation(line: 2566, column: 28, scope: !6430)
!6435 = !DILocation(line: 2566, column: 4, scope: !6430)
!6436 = !DILocation(line: 2567, column: 19, scope: !6430)
!6437 = !DILocation(line: 2567, column: 13, scope: !6430)
!6438 = !DILocation(line: 2567, column: 17, scope: !6430)
!6439 = !DILocation(line: 2568, column: 19, scope: !6430)
!6440 = !DILocation(line: 2568, column: 13, scope: !6430)
!6441 = !DILocation(line: 2568, column: 17, scope: !6430)
!6442 = !DILocation(line: 2569, column: 18, scope: !6430)
!6443 = !DILocation(line: 2569, column: 13, scope: !6430)
!6444 = !DILocation(line: 2569, column: 16, scope: !6430)
!6445 = !DILocation(line: 2570, column: 19, scope: !6430)
!6446 = !DILocation(line: 2570, column: 13, scope: !6430)
!6447 = !DILocation(line: 2570, column: 17, scope: !6430)
!6448 = distinct !{!6448, !6415, !6449}
!6449 = !DILocation(line: 2572, column: 5, scope: !6319)
!6450 = !DILocation(line: 2574, column: 3, scope: !6292)
!6451 = !DILocation(line: 2574, column: 15, scope: !6292)
!6452 = !DILocation(line: 2574, column: 26, scope: !6292)
!6453 = !DILocation(line: 2575, column: 1, scope: !6292)
!6454 = distinct !DISubprogram(name: "df_byte_lr_reset", scope: !3, file: !3, line: 2581, type: !2071, scopeLine: 2582, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6455)
!6455 = !{!6456, !6457, !6458, !6459}
!6456 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !6454, file: !3, line: 2581, type: !758)
!6457 = !DILocalVariable(name: "bb_index", scope: !6454, file: !3, line: 2583, type: !7)
!6458 = !DILocalVariable(name: "bi", scope: !6454, file: !3, line: 2584, type: !4126)
!6459 = !DILocalVariable(name: "bb_info", scope: !6460, file: !3, line: 2588, type: !2042)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !3, line: 2587, column: 5)
!6461 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 2586, column: 3)
!6462 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 2586, column: 3)
!6463 = !DILocation(line: 0, scope: !6454)
!6464 = !DILocation(line: 2583, column: 3, scope: !6454)
!6465 = !DILocation(line: 2584, column: 3, scope: !6454)
!6466 = !DILocation(line: 2586, column: 3, scope: !6462)
!6467 = !DILocation(line: 2586, column: 3, scope: !6461)
!6468 = !DILocation(line: 2588, column: 68, scope: !6460)
!6469 = !DILocation(line: 2588, column: 44, scope: !6460)
!6470 = !DILocation(line: 0, scope: !6460)
!6471 = !DILocation(line: 2589, column: 7, scope: !6460)
!6472 = !DILocation(line: 2590, column: 30, scope: !6460)
!6473 = !DILocation(line: 2590, column: 7, scope: !6460)
!6474 = !DILocation(line: 2591, column: 30, scope: !6460)
!6475 = !DILocation(line: 2591, column: 7, scope: !6460)
!6476 = distinct !{!6476, !6466, !6477}
!6477 = !DILocation(line: 2592, column: 5, scope: !6462)
!6478 = !DILocation(line: 2593, column: 1, scope: !6454)
!6479 = distinct !DISubprogram(name: "df_byte_lr_free_bb_info", scope: !3, file: !3, line: 2424, type: !2078, scopeLine: 2426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6480)
!6480 = !{!6481, !6482, !6483}
!6481 = !DILocalVariable(name: "bb", arg: 1, scope: !6479, file: !3, line: 2424, type: !1307)
!6482 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !6479, file: !3, line: 2425, type: !754)
!6483 = !DILocalVariable(name: "bb_info", scope: !6479, file: !3, line: 2427, type: !2042)
!6484 = !DILocation(line: 0, scope: !6479)
!6485 = !DILocation(line: 2428, column: 7, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6479, file: !3, line: 2428, column: 7)
!6487 = !DILocation(line: 2428, column: 7, scope: !6479)
!6488 = !DILocation(line: 2430, column: 7, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !6486, file: !3, line: 2429, column: 5)
!6490 = !DILocation(line: 2431, column: 7, scope: !6489)
!6491 = !DILocation(line: 2432, column: 7, scope: !6489)
!6492 = !DILocation(line: 2433, column: 7, scope: !6489)
!6493 = !DILocation(line: 2434, column: 18, scope: !6489)
!6494 = !DILocation(line: 2434, column: 30, scope: !6489)
!6495 = !DILocation(line: 2434, column: 7, scope: !6489)
!6496 = !DILocation(line: 2435, column: 5, scope: !6489)
!6497 = !DILocation(line: 2436, column: 1, scope: !6479)
!6498 = distinct !DISubprogram(name: "df_byte_lr_local_compute", scope: !3, file: !3, line: 2725, type: !2071, scopeLine: 2726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6499)
!6499 = !{!6500, !6501, !6502, !6503}
!6500 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !6498, file: !3, line: 2725, type: !758)
!6501 = !DILocalVariable(name: "bb_index", scope: !6498, file: !3, line: 2727, type: !7)
!6502 = !DILocalVariable(name: "bi", scope: !6498, file: !3, line: 2728, type: !4126)
!6503 = !DILocalVariable(name: "bb_info", scope: !6504, file: !3, line: 2736, type: !2042)
!6504 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 2733, column: 2)
!6505 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 2732, column: 11)
!6506 = distinct !DILexicalBlock(scope: !6507, file: !3, line: 2731, column: 5)
!6507 = distinct !DILexicalBlock(scope: !6508, file: !3, line: 2730, column: 3)
!6508 = distinct !DILexicalBlock(scope: !6498, file: !3, line: 2730, column: 3)
!6509 = !DILocation(line: 0, scope: !6498)
!6510 = !DILocation(line: 2727, column: 3, scope: !6498)
!6511 = !DILocation(line: 2728, column: 3, scope: !6498)
!6512 = !DILocation(line: 2730, column: 3, scope: !6508)
!6513 = !DILocation(line: 2730, column: 3, scope: !6507)
!6514 = !DILocation(line: 2732, column: 11, scope: !6505)
!6515 = !DILocation(line: 2732, column: 20, scope: !6505)
!6516 = !DILocation(line: 2732, column: 11, scope: !6506)
!6517 = !DILocation(line: 2736, column: 41, scope: !6504)
!6518 = !DILocation(line: 0, scope: !6504)
!6519 = !DILocation(line: 2737, column: 39, scope: !6504)
!6520 = !DILocation(line: 2737, column: 44, scope: !6504)
!6521 = !DILocation(line: 2737, column: 48, scope: !6504)
!6522 = !DILocation(line: 2737, column: 4, scope: !6504)
!6523 = !DILocation(line: 2738, column: 2, scope: !6504)
!6524 = !DILocation(line: 2740, column: 2, scope: !6505)
!6525 = distinct !{!6525, !6512, !6526}
!6526 = !DILocation(line: 2741, column: 5, scope: !6508)
!6527 = !DILocation(line: 2743, column: 17, scope: !6498)
!6528 = !DILocation(line: 2743, column: 29, scope: !6498)
!6529 = !DILocation(line: 2743, column: 3, scope: !6498)
!6530 = !DILocation(line: 2744, column: 1, scope: !6498)
!6531 = distinct !DISubprogram(name: "df_byte_lr_init", scope: !3, file: !3, line: 2750, type: !2071, scopeLine: 2751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6532)
!6532 = !{!6533, !6534, !6535, !6536}
!6533 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !6531, file: !3, line: 2750, type: !758)
!6534 = !DILocalVariable(name: "bb_index", scope: !6531, file: !3, line: 2752, type: !7)
!6535 = !DILocalVariable(name: "bi", scope: !6531, file: !3, line: 2753, type: !4126)
!6536 = !DILocalVariable(name: "bb_info", scope: !6537, file: !3, line: 2757, type: !2042)
!6537 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 2756, column: 5)
!6538 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 2755, column: 3)
!6539 = distinct !DILexicalBlock(scope: !6531, file: !3, line: 2755, column: 3)
!6540 = !DILocation(line: 0, scope: !6531)
!6541 = !DILocation(line: 2752, column: 3, scope: !6531)
!6542 = !DILocation(line: 2753, column: 3, scope: !6531)
!6543 = !DILocation(line: 2755, column: 3, scope: !6539)
!6544 = !DILocation(line: 2755, column: 3, scope: !6538)
!6545 = !DILocation(line: 2757, column: 68, scope: !6537)
!6546 = !DILocation(line: 2757, column: 44, scope: !6537)
!6547 = !DILocation(line: 0, scope: !6537)
!6548 = !DILocation(line: 2758, column: 29, scope: !6537)
!6549 = !DILocation(line: 2758, column: 42, scope: !6537)
!6550 = !DILocation(line: 2758, column: 7, scope: !6537)
!6551 = !DILocation(line: 2759, column: 30, scope: !6537)
!6552 = !DILocation(line: 2759, column: 7, scope: !6537)
!6553 = distinct !{!6553, !6543, !6554}
!6554 = !DILocation(line: 2760, column: 5, scope: !6539)
!6555 = !DILocation(line: 2761, column: 1, scope: !6531)
!6556 = distinct !DISubprogram(name: "df_byte_lr_confluence_0", scope: !3, file: !3, line: 2768, type: !2128, scopeLine: 2769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6557)
!6557 = !{!6558, !6559, !6560}
!6558 = !DILocalVariable(name: "bb", arg: 1, scope: !6556, file: !3, line: 2768, type: !1307)
!6559 = !DILocalVariable(name: "problem_data", scope: !6556, file: !3, line: 2770, type: !1987)
!6560 = !DILocalVariable(name: "op1", scope: !6556, file: !3, line: 2772, type: !758)
!6561 = !DILocation(line: 0, scope: !6556)
!6562 = !DILocation(line: 2771, column: 41, scope: !6556)
!6563 = !DILocation(line: 2771, column: 53, scope: !6556)
!6564 = !DILocation(line: 2772, column: 44, scope: !6556)
!6565 = !DILocation(line: 2772, column: 16, scope: !6556)
!6566 = !DILocation(line: 2773, column: 13, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !6556, file: !3, line: 2773, column: 7)
!6568 = !DILocation(line: 2773, column: 10, scope: !6567)
!6569 = !DILocation(line: 2773, column: 7, scope: !6556)
!6570 = !DILocation(line: 2772, column: 52, scope: !6556)
!6571 = !DILocation(line: 2774, column: 37, scope: !6567)
!6572 = !DILocation(line: 2774, column: 5, scope: !6567)
!6573 = !DILocation(line: 2775, column: 1, scope: !6556)
!6574 = distinct !DISubprogram(name: "df_byte_lr_confluence_n", scope: !3, file: !3, line: 2781, type: !2133, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6575)
!6575 = !{!6576, !6577, !6578, !6579}
!6576 = !DILocalVariable(name: "e", arg: 1, scope: !6574, file: !3, line: 2781, type: !1324)
!6577 = !DILocalVariable(name: "problem_data", scope: !6574, file: !3, line: 2783, type: !1987)
!6578 = !DILocalVariable(name: "op1", scope: !6574, file: !3, line: 2785, type: !758)
!6579 = !DILocalVariable(name: "op2", scope: !6574, file: !3, line: 2786, type: !758)
!6580 = !DILocation(line: 0, scope: !6574)
!6581 = !DILocation(line: 2784, column: 41, scope: !6574)
!6582 = !DILocation(line: 2784, column: 53, scope: !6574)
!6583 = !DILocation(line: 2785, column: 43, scope: !6574)
!6584 = !DILocation(line: 2785, column: 48, scope: !6574)
!6585 = !DILocation(line: 2785, column: 16, scope: !6574)
!6586 = !DILocation(line: 2785, column: 56, scope: !6574)
!6587 = !DILocation(line: 2786, column: 43, scope: !6574)
!6588 = !DILocation(line: 2786, column: 49, scope: !6574)
!6589 = !DILocation(line: 2786, column: 16, scope: !6574)
!6590 = !DILocation(line: 2786, column: 57, scope: !6574)
!6591 = !DILocation(line: 2791, column: 10, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6574, file: !3, line: 2791, column: 7)
!6593 = !DILocation(line: 2791, column: 16, scope: !6592)
!6594 = !DILocation(line: 2791, column: 7, scope: !6574)
!6595 = !DILocation(line: 2792, column: 56, scope: !6592)
!6596 = !DILocation(line: 2792, column: 5, scope: !6592)
!6597 = !DILocation(line: 2794, column: 5, scope: !6592)
!6598 = !DILocation(line: 2796, column: 39, scope: !6574)
!6599 = !DILocation(line: 2796, column: 3, scope: !6574)
!6600 = !DILocation(line: 2797, column: 1, scope: !6574)
!6601 = distinct !DISubprogram(name: "df_byte_lr_transfer_function", scope: !3, file: !3, line: 2803, type: !2138, scopeLine: 2804, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6602)
!6602 = !{!6603, !6604, !6605, !6606, !6607, !6608}
!6603 = !DILocalVariable(name: "bb_index", arg: 1, scope: !6601, file: !3, line: 2803, type: !750)
!6604 = !DILocalVariable(name: "bb_info", scope: !6601, file: !3, line: 2805, type: !2042)
!6605 = !DILocalVariable(name: "in", scope: !6601, file: !3, line: 2806, type: !758)
!6606 = !DILocalVariable(name: "out", scope: !6601, file: !3, line: 2807, type: !758)
!6607 = !DILocalVariable(name: "use", scope: !6601, file: !3, line: 2808, type: !758)
!6608 = !DILocalVariable(name: "def", scope: !6601, file: !3, line: 2809, type: !758)
!6609 = !DILocation(line: 0, scope: !6601)
!6610 = !DILocation(line: 2805, column: 40, scope: !6601)
!6611 = !DILocation(line: 2806, column: 24, scope: !6601)
!6612 = !DILocation(line: 2807, column: 25, scope: !6601)
!6613 = !DILocation(line: 2808, column: 25, scope: !6601)
!6614 = !DILocation(line: 2809, column: 25, scope: !6601)
!6615 = !DILocation(line: 2811, column: 10, scope: !6601)
!6616 = !DILocation(line: 2811, column: 3, scope: !6601)
!6617 = distinct !DISubprogram(name: "df_byte_lr_free", scope: !3, file: !3, line: 2818, type: !2145, scopeLine: 2819, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6618)
!6618 = !{!6619}
!6619 = !DILocalVariable(name: "problem_data", scope: !6617, file: !3, line: 2820, type: !1987)
!6620 = !DILocation(line: 2821, column: 41, scope: !6617)
!6621 = !DILocation(line: 2821, column: 53, scope: !6617)
!6622 = !DILocation(line: 0, scope: !6617)
!6623 = !DILocation(line: 2824, column: 19, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 2824, column: 7)
!6625 = !DILocation(line: 2824, column: 7, scope: !6624)
!6626 = !DILocation(line: 2824, column: 7, scope: !6617)
!6627 = !DILocation(line: 2826, column: 36, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 2825, column: 5)
!6629 = !DILocation(line: 2826, column: 7, scope: !6628)
!6630 = !DILocation(line: 2827, column: 7, scope: !6628)
!6631 = !DILocation(line: 2827, column: 19, scope: !6628)
!6632 = !DILocation(line: 2827, column: 35, scope: !6628)
!6633 = !DILocation(line: 2828, column: 13, scope: !6628)
!6634 = !DILocation(line: 2828, column: 25, scope: !6628)
!6635 = !DILocation(line: 2828, column: 7, scope: !6628)
!6636 = !DILocation(line: 2831, column: 3, scope: !6617)
!6637 = !DILocation(line: 2829, column: 5, scope: !6628)
!6638 = !DILocation(line: 2832, column: 42, scope: !6617)
!6639 = !DILocation(line: 2832, column: 3, scope: !6617)
!6640 = !DILocation(line: 2833, column: 23, scope: !6617)
!6641 = !DILocation(line: 2833, column: 3, scope: !6617)
!6642 = !DILocation(line: 2834, column: 23, scope: !6617)
!6643 = !DILocation(line: 2834, column: 3, scope: !6617)
!6644 = !DILocation(line: 2835, column: 9, scope: !6617)
!6645 = !DILocation(line: 2835, column: 3, scope: !6617)
!6646 = !DILocation(line: 2836, column: 9, scope: !6617)
!6647 = !DILocation(line: 2836, column: 3, scope: !6617)
!6648 = !DILocation(line: 2837, column: 1, scope: !6617)
!6649 = distinct !DISubprogram(name: "df_byte_lr_top_dump", scope: !3, file: !3, line: 2843, type: !2207, scopeLine: 2844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6650)
!6650 = !{!6651, !6652, !6653}
!6651 = !DILocalVariable(name: "bb", arg: 1, scope: !6649, file: !3, line: 2843, type: !1307)
!6652 = !DILocalVariable(name: "file", arg: 2, scope: !6649, file: !3, line: 2843, type: !2154)
!6653 = !DILocalVariable(name: "bb_info", scope: !6649, file: !3, line: 2845, type: !2042)
!6654 = !DILocation(line: 0, scope: !6649)
!6655 = !DILocation(line: 2845, column: 68, scope: !6649)
!6656 = !DILocation(line: 2845, column: 40, scope: !6649)
!6657 = !DILocation(line: 2846, column: 8, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6649, file: !3, line: 2846, column: 7)
!6659 = !DILocation(line: 2846, column: 16, scope: !6658)
!6660 = !DILocation(line: 2846, column: 29, scope: !6658)
!6661 = !DILocation(line: 2846, column: 20, scope: !6658)
!6662 = !DILocation(line: 2846, column: 7, scope: !6649)
!6663 = !DILocation(line: 2849, column: 3, scope: !6649)
!6664 = !DILocation(line: 2850, column: 40, scope: !6649)
!6665 = !DILocation(line: 2850, column: 3, scope: !6649)
!6666 = !DILocation(line: 2851, column: 3, scope: !6649)
!6667 = !DILocation(line: 2852, column: 40, scope: !6649)
!6668 = !DILocation(line: 2852, column: 3, scope: !6649)
!6669 = !DILocation(line: 2853, column: 3, scope: !6649)
!6670 = !DILocation(line: 2854, column: 40, scope: !6649)
!6671 = !DILocation(line: 2854, column: 3, scope: !6649)
!6672 = !DILocation(line: 2855, column: 1, scope: !6649)
!6673 = distinct !DISubprogram(name: "df_byte_lr_bottom_dump", scope: !3, file: !3, line: 2861, type: !2207, scopeLine: 2862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6674)
!6674 = !{!6675, !6676, !6677}
!6675 = !DILocalVariable(name: "bb", arg: 1, scope: !6673, file: !3, line: 2861, type: !1307)
!6676 = !DILocalVariable(name: "file", arg: 2, scope: !6673, file: !3, line: 2861, type: !2154)
!6677 = !DILocalVariable(name: "bb_info", scope: !6673, file: !3, line: 2863, type: !2042)
!6678 = !DILocation(line: 0, scope: !6673)
!6679 = !DILocation(line: 2863, column: 68, scope: !6673)
!6680 = !DILocation(line: 2863, column: 40, scope: !6673)
!6681 = !DILocation(line: 2864, column: 8, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6673, file: !3, line: 2864, column: 7)
!6683 = !DILocation(line: 2864, column: 16, scope: !6682)
!6684 = !DILocation(line: 2864, column: 29, scope: !6682)
!6685 = !DILocation(line: 2864, column: 20, scope: !6682)
!6686 = !DILocation(line: 2864, column: 7, scope: !6673)
!6687 = !DILocation(line: 2867, column: 3, scope: !6673)
!6688 = !DILocation(line: 2868, column: 40, scope: !6673)
!6689 = !DILocation(line: 2868, column: 3, scope: !6673)
!6690 = !DILocation(line: 2869, column: 1, scope: !6673)
!6691 = distinct !DISubprogram(name: "df_byte_lr_check_regs", scope: !3, file: !3, line: 2443, type: !6692, scopeLine: 2444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6694)
!6692 = !DISubroutineType(types: !6693)
!6693 = !{null, !1948}
!6694 = !{!6695, !6696, !6697}
!6695 = !DILocalVariable(name: "ref_rec", arg: 1, scope: !6691, file: !3, line: 2443, type: !1948)
!6696 = !DILocalVariable(name: "problem_data", scope: !6691, file: !3, line: 2445, type: !1987)
!6697 = !DILocalVariable(name: "ref", scope: !6698, file: !3, line: 2450, type: !825)
!6698 = distinct !DILexicalBlock(scope: !6699, file: !3, line: 2449, column: 5)
!6699 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 2448, column: 3)
!6700 = distinct !DILexicalBlock(scope: !6691, file: !3, line: 2448, column: 3)
!6701 = !DILocation(line: 0, scope: !6691)
!6702 = !DILocation(line: 2446, column: 41, scope: !6691)
!6703 = !DILocation(line: 2446, column: 53, scope: !6691)
!6704 = !DILocation(line: 0, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 2451, column: 11)
!6706 = !DILocation(line: 2448, column: 3, scope: !6691)
!6707 = !DILocation(line: 2448, column: 10, scope: !6699)
!6708 = !DILocation(line: 2448, column: 3, scope: !6700)
!6709 = !DILocation(line: 0, scope: !6698)
!6710 = !DILocation(line: 2451, column: 11, scope: !6705)
!6711 = !DILocation(line: 2454, column: 4, scope: !6705)
!6712 = !DILocation(line: 2454, column: 7, scope: !6705)
!6713 = !DILocation(line: 2454, column: 35, scope: !6705)
!6714 = !DILocation(line: 2451, column: 11, scope: !6698)
!6715 = !DILocation(line: 2455, column: 32, scope: !6705)
!6716 = !DILocation(line: 2455, column: 49, scope: !6705)
!6717 = !DILocation(line: 2455, column: 2, scope: !6705)
!6718 = !DILocation(line: 2448, column: 27, scope: !6699)
!6719 = !DILocation(line: 2448, column: 3, scope: !6699)
!6720 = distinct !{!6720, !6708, !6721}
!6721 = !DILocation(line: 2456, column: 5, scope: !6700)
!6722 = !DILocation(line: 2457, column: 1, scope: !6691)
!6723 = distinct !DISubprogram(name: "df_byte_lr_expand_bitmap", scope: !3, file: !3, line: 2464, type: !6724, scopeLine: 2465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6726)
!6724 = !DISubroutineType(types: !6725)
!6725 = !{null, !758, !758}
!6726 = !{!6727, !6728, !6729, !6730, !6731}
!6727 = !DILocalVariable(name: "dest", arg: 1, scope: !6723, file: !3, line: 2464, type: !758)
!6728 = !DILocalVariable(name: "src", arg: 2, scope: !6723, file: !3, line: 2464, type: !758)
!6729 = !DILocalVariable(name: "problem_data", scope: !6723, file: !3, line: 2466, type: !1987)
!6730 = !DILocalVariable(name: "bi", scope: !6723, file: !3, line: 2468, type: !4126)
!6731 = !DILocalVariable(name: "i", scope: !6723, file: !3, line: 2469, type: !7)
!6732 = !DILocation(line: 0, scope: !6723)
!6733 = !DILocation(line: 2467, column: 41, scope: !6723)
!6734 = !DILocation(line: 2467, column: 53, scope: !6723)
!6735 = !DILocation(line: 2468, column: 3, scope: !6723)
!6736 = !DILocation(line: 2469, column: 3, scope: !6723)
!6737 = !DILocation(line: 2471, column: 3, scope: !6723)
!6738 = !DILocation(line: 2472, column: 3, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6723, file: !3, line: 2472, column: 3)
!6740 = !DILocation(line: 0, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6742, file: !3, line: 2473, column: 5)
!6742 = distinct !DILexicalBlock(scope: !6739, file: !3, line: 2472, column: 3)
!6743 = !DILocation(line: 2472, column: 3, scope: !6742)
!6744 = !DILocation(line: 2474, column: 45, scope: !6741)
!6745 = !DILocation(line: 2474, column: 57, scope: !6741)
!6746 = !DILocation(line: 2474, column: 31, scope: !6741)
!6747 = !DILocation(line: 2475, column: 18, scope: !6741)
!6748 = !DILocation(line: 2475, column: 4, scope: !6741)
!6749 = !DILocation(line: 2474, column: 7, scope: !6741)
!6750 = distinct !{!6750, !6738, !6751}
!6751 = !DILocation(line: 2476, column: 5, scope: !6739)
!6752 = !DILocation(line: 2477, column: 1, scope: !6723)
!6753 = distinct !DISubprogram(name: "df_byte_lr_get_bb_info", scope: !385, file: !385, line: 1079, type: !6754, scopeLine: 1080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6756)
!6754 = !DISubroutineType(types: !6755)
!6755 = !{!2042, !7}
!6756 = !{!6757}
!6757 = !DILocalVariable(name: "index", arg: 1, scope: !6753, file: !385, line: 1079, type: !7)
!6758 = !DILocation(line: 0, scope: !6753)
!6759 = !DILocation(line: 1081, column: 15, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6753, file: !385, line: 1081, column: 7)
!6761 = !DILocation(line: 1081, column: 27, scope: !6760)
!6762 = !DILocation(line: 1081, column: 13, scope: !6760)
!6763 = !DILocation(line: 1081, column: 7, scope: !6753)
!6764 = !DILocation(line: 1082, column: 54, scope: !6760)
!6765 = !DILocation(line: 1082, column: 42, scope: !6760)
!6766 = !DILocation(line: 1082, column: 5, scope: !6760)
!6767 = !DILocation(line: 0, scope: !6760)
!6768 = !DILocation(line: 1085, column: 1, scope: !6753)
!6769 = distinct !DISubprogram(name: "df_byte_lr_set_bb_info", scope: !3, file: !3, line: 2412, type: !6770, scopeLine: 2414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6772)
!6770 = !DISubroutineType(types: !6771)
!6771 = !{null, !7, !2042}
!6772 = !{!6773, !6774}
!6773 = !DILocalVariable(name: "index", arg: 1, scope: !6769, file: !3, line: 2412, type: !7)
!6774 = !DILocalVariable(name: "bb_info", arg: 2, scope: !6769, file: !3, line: 2413, type: !2042)
!6775 = !DILocation(line: 0, scope: !6769)
!6776 = !DILocation(line: 2415, column: 3, scope: !6769)
!6777 = !DILocation(line: 2416, column: 3, scope: !6769)
!6778 = !DILocation(line: 2417, column: 3, scope: !6769)
!6779 = !DILocation(line: 2417, column: 15, scope: !6769)
!6780 = !DILocation(line: 2417, column: 33, scope: !6769)
!6781 = !DILocation(line: 2418, column: 1, scope: !6769)
!6782 = distinct !DISubprogram(name: "df_byte_lr_bb_local_compute", scope: !3, file: !3, line: 2599, type: !3011, scopeLine: 2600, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6783)
!6783 = !{!6784, !6785, !6786, !6787, !6788, !6789, !6790, !6791, !6795, !6798, !6799, !6800, !6804, !6807, !6808, !6809, !6813, !6817, !6820, !6821, !6822, !6823, !6824, !6828, !6829, !6830, !6831, !6832, !6833, !6837, !6840, !6841}
!6784 = !DILocalVariable(name: "bb_index", arg: 1, scope: !6782, file: !3, line: 2599, type: !7)
!6785 = !DILocalVariable(name: "problem_data", scope: !6782, file: !3, line: 2601, type: !1987)
!6786 = !DILocalVariable(name: "bb", scope: !6782, file: !3, line: 2603, type: !1307)
!6787 = !DILocalVariable(name: "bb_info", scope: !6782, file: !3, line: 2604, type: !2042)
!6788 = !DILocalVariable(name: "insn", scope: !6782, file: !3, line: 2605, type: !836)
!6789 = !DILocalVariable(name: "def_rec", scope: !6782, file: !3, line: 2606, type: !1948)
!6790 = !DILocalVariable(name: "use_rec", scope: !6782, file: !3, line: 2607, type: !1948)
!6791 = !DILocalVariable(name: "def", scope: !6792, file: !3, line: 2612, type: !825)
!6792 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 2611, column: 5)
!6793 = distinct !DILexicalBlock(scope: !6794, file: !3, line: 2610, column: 3)
!6794 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 2610, column: 3)
!6795 = !DILocalVariable(name: "dregno", scope: !6796, file: !3, line: 2615, type: !7)
!6796 = distinct !DILexicalBlock(scope: !6797, file: !3, line: 2614, column: 2)
!6797 = distinct !DILexicalBlock(scope: !6792, file: !3, line: 2613, column: 11)
!6798 = !DILocalVariable(name: "start", scope: !6796, file: !3, line: 2616, type: !7)
!6799 = !DILocalVariable(name: "len", scope: !6796, file: !3, line: 2617, type: !7)
!6800 = !DILocalVariable(name: "use", scope: !6801, file: !3, line: 2626, type: !825)
!6801 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 2625, column: 5)
!6802 = distinct !DILexicalBlock(scope: !6803, file: !3, line: 2624, column: 3)
!6803 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 2624, column: 3)
!6804 = !DILocalVariable(name: "uregno", scope: !6805, file: !3, line: 2630, type: !7)
!6805 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 2629, column: 2)
!6806 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 2628, column: 11)
!6807 = !DILocalVariable(name: "start", scope: !6805, file: !3, line: 2631, type: !7)
!6808 = !DILocalVariable(name: "len", scope: !6805, file: !3, line: 2632, type: !7)
!6809 = !DILocalVariable(name: "uid", scope: !6810, file: !3, line: 2639, type: !7)
!6810 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 2638, column: 5)
!6811 = distinct !DILexicalBlock(scope: !6812, file: !3, line: 2637, column: 3)
!6812 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 2637, column: 3)
!6813 = !DILocalVariable(name: "def", scope: !6814, file: !3, line: 2646, type: !825)
!6814 = distinct !DILexicalBlock(scope: !6815, file: !3, line: 2645, column: 2)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 2644, column: 7)
!6816 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 2644, column: 7)
!6817 = !DILocalVariable(name: "dregno", scope: !6818, file: !3, line: 2651, type: !7)
!6818 = distinct !DILexicalBlock(scope: !6819, file: !3, line: 2650, column: 6)
!6819 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 2649, column: 8)
!6820 = !DILocalVariable(name: "start", scope: !6818, file: !3, line: 2652, type: !7)
!6821 = !DILocalVariable(name: "len", scope: !6818, file: !3, line: 2653, type: !7)
!6822 = !DILocalVariable(name: "sb", scope: !6818, file: !3, line: 2654, type: !7)
!6823 = !DILocalVariable(name: "lb", scope: !6818, file: !3, line: 2655, type: !7)
!6824 = !DILocalVariable(name: "use", scope: !6825, file: !3, line: 2671, type: !825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 2670, column: 2)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 2669, column: 7)
!6827 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 2669, column: 7)
!6828 = !DILocalVariable(name: "uregno", scope: !6825, file: !3, line: 2672, type: !7)
!6829 = !DILocalVariable(name: "start", scope: !6825, file: !3, line: 2673, type: !7)
!6830 = !DILocalVariable(name: "len", scope: !6825, file: !3, line: 2674, type: !7)
!6831 = !DILocalVariable(name: "sb", scope: !6825, file: !3, line: 2675, type: !7)
!6832 = !DILocalVariable(name: "lb", scope: !6825, file: !3, line: 2676, type: !7)
!6833 = !DILocalVariable(name: "def", scope: !6834, file: !3, line: 2693, type: !825)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 2692, column: 5)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 2691, column: 3)
!6836 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 2691, column: 3)
!6837 = !DILocalVariable(name: "dregno", scope: !6838, file: !3, line: 2696, type: !7)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 2695, column: 2)
!6839 = distinct !DILexicalBlock(scope: !6834, file: !3, line: 2694, column: 11)
!6840 = !DILocalVariable(name: "start", scope: !6838, file: !3, line: 2697, type: !7)
!6841 = !DILocalVariable(name: "len", scope: !6838, file: !3, line: 2698, type: !7)
!6842 = !DILocation(line: 0, scope: !6782)
!6843 = !DILocation(line: 2602, column: 41, scope: !6782)
!6844 = !DILocation(line: 2602, column: 53, scope: !6782)
!6845 = !DILocation(line: 2603, column: 20, scope: !6782)
!6846 = !DILocation(line: 2604, column: 40, scope: !6782)
!6847 = !DILocation(line: 2610, column: 18, scope: !6794)
!6848 = !DILocation(line: 0, scope: !6796)
!6849 = !DILocation(line: 2610, column: 8, scope: !6794)
!6850 = !DILocation(line: 0, scope: !6794)
!6851 = !DILocation(line: 2610, column: 53, scope: !6793)
!6852 = !DILocation(line: 2610, column: 3, scope: !6794)
!6853 = !DILocation(line: 0, scope: !6792)
!6854 = !DILocation(line: 2613, column: 12, scope: !6797)
!6855 = !DILocation(line: 2613, column: 31, scope: !6797)
!6856 = !DILocation(line: 2613, column: 48, scope: !6797)
!6857 = !DILocation(line: 2613, column: 11, scope: !6792)
!6858 = !DILocation(line: 2615, column: 26, scope: !6796)
!6859 = !DILocation(line: 2616, column: 39, scope: !6796)
!6860 = !DILocation(line: 2616, column: 25, scope: !6796)
!6861 = !DILocation(line: 2617, column: 37, scope: !6796)
!6862 = !DILocation(line: 2617, column: 23, scope: !6796)
!6863 = !DILocation(line: 2618, column: 31, scope: !6796)
!6864 = !DILocation(line: 2618, column: 4, scope: !6796)
!6865 = !DILocation(line: 2619, column: 33, scope: !6796)
!6866 = !DILocation(line: 2619, column: 4, scope: !6796)
!6867 = !DILocation(line: 2620, column: 2, scope: !6796)
!6868 = !DILocation(line: 2610, column: 70, scope: !6793)
!6869 = !DILocation(line: 2610, column: 3, scope: !6793)
!6870 = distinct !{!6870, !6852, !6871}
!6871 = !DILocation(line: 2621, column: 5, scope: !6794)
!6872 = !DILocation(line: 2624, column: 18, scope: !6803)
!6873 = !DILocation(line: 2624, column: 8, scope: !6803)
!6874 = !DILocation(line: 0, scope: !6803)
!6875 = !DILocation(line: 2624, column: 53, scope: !6802)
!6876 = !DILocation(line: 2624, column: 3, scope: !6803)
!6877 = !DILocation(line: 0, scope: !6801)
!6878 = !DILocation(line: 2628, column: 12, scope: !6806)
!6879 = !DILocation(line: 2628, column: 31, scope: !6806)
!6880 = !DILocation(line: 2628, column: 48, scope: !6806)
!6881 = !DILocation(line: 2628, column: 11, scope: !6801)
!6882 = !DILocation(line: 2630, column: 26, scope: !6805)
!6883 = !DILocation(line: 0, scope: !6805)
!6884 = !DILocation(line: 2631, column: 39, scope: !6805)
!6885 = !DILocation(line: 2631, column: 25, scope: !6805)
!6886 = !DILocation(line: 2632, column: 37, scope: !6805)
!6887 = !DILocation(line: 2632, column: 23, scope: !6805)
!6888 = !DILocation(line: 2633, column: 31, scope: !6805)
!6889 = !DILocation(line: 2633, column: 4, scope: !6805)
!6890 = !DILocation(line: 2634, column: 2, scope: !6805)
!6891 = !DILocation(line: 2624, column: 70, scope: !6802)
!6892 = !DILocation(line: 2624, column: 3, scope: !6802)
!6893 = distinct !{!6893, !6876, !6894}
!6894 = !DILocation(line: 2635, column: 5, scope: !6803)
!6895 = !DILocation(line: 2637, column: 3, scope: !6812)
!6896 = !DILocation(line: 0, scope: !6818)
!6897 = !DILocation(line: 0, scope: !6825)
!6898 = !DILocation(line: 0, scope: !6812)
!6899 = !DILocation(line: 2637, column: 3, scope: !6811)
!6900 = !DILocation(line: 2639, column: 26, scope: !6810)
!6901 = !DILocation(line: 0, scope: !6810)
!6902 = !DILocation(line: 2641, column: 12, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 2641, column: 11)
!6904 = !DILocation(line: 2641, column: 11, scope: !6810)
!6905 = !DILocation(line: 2644, column: 22, scope: !6816)
!6906 = !DILocation(line: 2644, column: 12, scope: !6816)
!6907 = !DILocation(line: 0, scope: !6816)
!6908 = !DILocation(line: 2644, column: 46, scope: !6815)
!6909 = !DILocation(line: 2644, column: 7, scope: !6816)
!6910 = !DILocation(line: 0, scope: !6814)
!6911 = !DILocation(line: 2649, column: 10, scope: !6819)
!6912 = !DILocation(line: 2649, column: 29, scope: !6819)
!6913 = !DILocation(line: 2649, column: 8, scope: !6814)
!6914 = !DILocation(line: 2651, column: 30, scope: !6818)
!6915 = !DILocation(line: 2652, column: 43, scope: !6818)
!6916 = !DILocation(line: 2652, column: 29, scope: !6818)
!6917 = !DILocation(line: 2653, column: 41, scope: !6818)
!6918 = !DILocation(line: 2653, column: 27, scope: !6818)
!6919 = !DILocation(line: 2654, column: 8, scope: !6818)
!6920 = !DILocation(line: 2655, column: 8, scope: !6818)
!6921 = !DILocation(line: 2656, column: 13, scope: !6922)
!6922 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 2656, column: 12)
!6923 = !DILocation(line: 2656, column: 12, scope: !6818)
!6924 = !DILocation(line: 2658, column: 14, scope: !6925)
!6925 = distinct !DILexicalBlock(scope: !6922, file: !3, line: 2657, column: 3)
!6926 = !DILocation(line: 2658, column: 11, scope: !6925)
!6927 = !DILocation(line: 2659, column: 11, scope: !6925)
!6928 = !DILocation(line: 2659, column: 14, scope: !6925)
!6929 = !DILocation(line: 2660, column: 3, scope: !6925)
!6930 = !DILocation(line: 2661, column: 12, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 2661, column: 12)
!6932 = !DILocation(line: 2661, column: 12, scope: !6818)
!6933 = !DILocation(line: 2663, column: 32, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6931, file: !3, line: 2662, column: 3)
!6935 = !DILocation(line: 2663, column: 5, scope: !6934)
!6936 = !DILocation(line: 2664, column: 34, scope: !6934)
!6937 = !DILocation(line: 2664, column: 5, scope: !6934)
!6938 = !DILocation(line: 2665, column: 3, scope: !6934)
!6939 = !DILocation(line: 2666, column: 6, scope: !6819)
!6940 = !DILocation(line: 2666, column: 6, scope: !6818)
!6941 = !DILocation(line: 2644, column: 63, scope: !6815)
!6942 = !DILocation(line: 2644, column: 7, scope: !6815)
!6943 = distinct !{!6943, !6909, !6944}
!6944 = !DILocation(line: 2667, column: 2, scope: !6816)
!6945 = !DILocation(line: 2669, column: 22, scope: !6827)
!6946 = !DILocation(line: 2669, column: 12, scope: !6827)
!6947 = !DILocation(line: 0, scope: !6827)
!6948 = !DILocation(line: 2669, column: 46, scope: !6826)
!6949 = !DILocation(line: 2669, column: 7, scope: !6827)
!6950 = !DILocation(line: 2672, column: 26, scope: !6825)
!6951 = !DILocation(line: 2673, column: 39, scope: !6825)
!6952 = !DILocation(line: 2673, column: 25, scope: !6825)
!6953 = !DILocation(line: 2674, column: 37, scope: !6825)
!6954 = !DILocation(line: 2674, column: 23, scope: !6825)
!6955 = !DILocation(line: 2675, column: 4, scope: !6825)
!6956 = !DILocation(line: 2676, column: 4, scope: !6825)
!6957 = !DILocation(line: 2677, column: 9, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 2677, column: 8)
!6959 = !DILocation(line: 2677, column: 8, scope: !6825)
!6960 = !DILocation(line: 2679, column: 17, scope: !6961)
!6961 = distinct !DILexicalBlock(scope: !6958, file: !3, line: 2678, column: 6)
!6962 = !DILocation(line: 2679, column: 14, scope: !6961)
!6963 = !DILocation(line: 2680, column: 14, scope: !6961)
!6964 = !DILocation(line: 2680, column: 17, scope: !6961)
!6965 = !DILocation(line: 2681, column: 6, scope: !6961)
!6966 = !DILocation(line: 2683, column: 8, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 2683, column: 8)
!6968 = !DILocation(line: 2683, column: 8, scope: !6825)
!6969 = !DILocation(line: 2684, column: 33, scope: !6967)
!6970 = !DILocation(line: 2684, column: 6, scope: !6967)
!6971 = !DILocation(line: 2685, column: 2, scope: !6826)
!6972 = !DILocation(line: 2669, column: 63, scope: !6826)
!6973 = !DILocation(line: 2669, column: 7, scope: !6826)
!6974 = distinct !{!6974, !6949, !6975}
!6975 = !DILocation(line: 2685, column: 2, scope: !6827)
!6976 = distinct !{!6976, !6895, !6977}
!6977 = !DILocation(line: 2686, column: 5, scope: !6812)
!6978 = !DILocation(line: 2691, column: 18, scope: !6836)
!6979 = !DILocation(line: 2691, column: 8, scope: !6836)
!6980 = !DILocation(line: 0, scope: !6836)
!6981 = !DILocation(line: 2691, column: 53, scope: !6835)
!6982 = !DILocation(line: 2691, column: 3, scope: !6836)
!6983 = !DILocation(line: 0, scope: !6834)
!6984 = !DILocation(line: 2694, column: 11, scope: !6839)
!6985 = !DILocation(line: 2694, column: 30, scope: !6839)
!6986 = !DILocation(line: 2694, column: 11, scope: !6834)
!6987 = !DILocation(line: 2696, column: 26, scope: !6838)
!6988 = !DILocation(line: 0, scope: !6838)
!6989 = !DILocation(line: 2697, column: 39, scope: !6838)
!6990 = !DILocation(line: 2697, column: 25, scope: !6838)
!6991 = !DILocation(line: 2698, column: 37, scope: !6838)
!6992 = !DILocation(line: 2698, column: 23, scope: !6838)
!6993 = !DILocation(line: 2699, column: 31, scope: !6838)
!6994 = !DILocation(line: 2699, column: 4, scope: !6838)
!6995 = !DILocation(line: 2700, column: 33, scope: !6838)
!6996 = !DILocation(line: 2700, column: 4, scope: !6838)
!6997 = !DILocation(line: 2701, column: 2, scope: !6838)
!6998 = !DILocation(line: 2691, column: 70, scope: !6835)
!6999 = !DILocation(line: 2691, column: 3, scope: !6835)
!7000 = distinct !{!7000, !6982, !7001}
!7001 = !DILocation(line: 2702, column: 5, scope: !6836)
!7002 = !DILocation(line: 2719, column: 1, scope: !6782)
!7003 = distinct !DISubprogram(name: "df_note_alloc", scope: !3, file: !3, line: 3069, type: !2071, scopeLine: 3070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7004)
!7004 = !{!7005}
!7005 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7003, file: !3, line: 3069, type: !758)
!7006 = !DILocation(line: 0, scope: !7003)
!7007 = !DILocation(line: 3071, column: 3, scope: !7003)
!7008 = !DILocation(line: 3071, column: 12, scope: !7003)
!7009 = !DILocation(line: 3071, column: 23, scope: !7003)
!7010 = !DILocation(line: 3072, column: 1, scope: !7003)
!7011 = distinct !DISubprogram(name: "df_note_compute", scope: !3, file: !3, line: 3644, type: !2071, scopeLine: 3645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7012)
!7012 = !{!7013, !7014, !7015, !7016, !7017, !7018}
!7013 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7011, file: !3, line: 3644, type: !758)
!7014 = !DILocalVariable(name: "bb_index", scope: !7011, file: !3, line: 3646, type: !7)
!7015 = !DILocalVariable(name: "bi", scope: !7011, file: !3, line: 3647, type: !4126)
!7016 = !DILocalVariable(name: "live", scope: !7011, file: !3, line: 3648, type: !758)
!7017 = !DILocalVariable(name: "do_not_gen", scope: !7011, file: !3, line: 3649, type: !758)
!7018 = !DILocalVariable(name: "artificial_uses", scope: !7011, file: !3, line: 3650, type: !758)
!7019 = !DILocation(line: 0, scope: !7011)
!7020 = !DILocation(line: 3646, column: 3, scope: !7011)
!7021 = !DILocation(line: 3647, column: 3, scope: !7011)
!7022 = !DILocation(line: 3648, column: 17, scope: !7011)
!7023 = !DILocation(line: 3649, column: 23, scope: !7011)
!7024 = !DILocation(line: 3650, column: 28, scope: !7011)
!7025 = !DILocation(line: 3657, column: 3, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !7011, file: !3, line: 3657, column: 3)
!7027 = !DILocation(line: 3657, column: 3, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 3657, column: 3)
!7029 = !DILocation(line: 3659, column: 25, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 3658, column: 3)
!7031 = !DILocation(line: 3659, column: 5, scope: !7030)
!7032 = distinct !{!7032, !7025, !7033}
!7033 = !DILocation(line: 3660, column: 3, scope: !7026)
!7034 = !DILocation(line: 3662, column: 3, scope: !7011)
!7035 = !DILocation(line: 3663, column: 3, scope: !7011)
!7036 = !DILocation(line: 3664, column: 3, scope: !7011)
!7037 = !DILocation(line: 3665, column: 1, scope: !7011)
!7038 = distinct !DISubprogram(name: "df_note_free", scope: !3, file: !3, line: 3671, type: !2145, scopeLine: 3672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2258)
!7039 = !DILocation(line: 3673, column: 9, scope: !7038)
!7040 = !DILocation(line: 3673, column: 3, scope: !7038)
!7041 = !DILocation(line: 3674, column: 1, scope: !7038)
!7042 = distinct !DISubprogram(name: "df_note_bb_compute", scope: !3, file: !3, line: 3412, type: !7043, scopeLine: 3414, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7045)
!7043 = !DISubroutineType(types: !7044)
!7044 = !{null, !7, !758, !758, !758}
!7045 = !{!7046, !7047, !7048, !7049, !7050, !7051, !7052, !7053, !7054, !7058, !7062, !7065, !7069, !7070, !7071, !7072, !7073, !7077, !7081, !7082, !7085, !7089, !7090, !7092, !7095, !7099, !7100, !7105, !7107}
!7046 = !DILocalVariable(name: "bb_index", arg: 1, scope: !7042, file: !3, line: 3412, type: !7)
!7047 = !DILocalVariable(name: "live", arg: 2, scope: !7042, file: !3, line: 3413, type: !758)
!7048 = !DILocalVariable(name: "do_not_gen", arg: 3, scope: !7042, file: !3, line: 3413, type: !758)
!7049 = !DILocalVariable(name: "artificial_uses", arg: 4, scope: !7042, file: !3, line: 3413, type: !758)
!7050 = !DILocalVariable(name: "bb", scope: !7042, file: !3, line: 3415, type: !1307)
!7051 = !DILocalVariable(name: "insn", scope: !7042, file: !3, line: 3416, type: !836)
!7052 = !DILocalVariable(name: "def_rec", scope: !7042, file: !3, line: 3417, type: !1948)
!7053 = !DILocalVariable(name: "use_rec", scope: !7042, file: !3, line: 3418, type: !1948)
!7054 = !DILocalVariable(name: "def", scope: !7055, file: !3, line: 3435, type: !825)
!7055 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 3434, column: 5)
!7056 = distinct !DILexicalBlock(scope: !7057, file: !3, line: 3433, column: 3)
!7057 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 3433, column: 3)
!7058 = !DILocalVariable(name: "use", scope: !7059, file: !3, line: 3447, type: !825)
!7059 = distinct !DILexicalBlock(scope: !7060, file: !3, line: 3446, column: 5)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 3445, column: 3)
!7061 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 3445, column: 3)
!7062 = !DILocalVariable(name: "regno", scope: !7063, file: !3, line: 3450, type: !7)
!7063 = distinct !DILexicalBlock(scope: !7064, file: !3, line: 3449, column: 2)
!7064 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 3448, column: 11)
!7065 = !DILocalVariable(name: "uid", scope: !7066, file: !3, line: 3469, type: !7)
!7066 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 3468, column: 5)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 3467, column: 3)
!7068 = distinct !DILexicalBlock(scope: !7042, file: !3, line: 3467, column: 3)
!7069 = !DILocalVariable(name: "mws_rec", scope: !7066, file: !3, line: 3470, type: !1952)
!7070 = !DILocalVariable(name: "old_dead_notes", scope: !7066, file: !3, line: 3471, type: !836)
!7071 = !DILocalVariable(name: "old_unused_notes", scope: !7066, file: !3, line: 3472, type: !836)
!7072 = !DILocalVariable(name: "debug_insn", scope: !7066, file: !3, line: 3473, type: !750)
!7073 = !DILocalVariable(name: "mws", scope: !7074, file: !3, line: 3498, type: !1953)
!7074 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 3497, column: 6)
!7075 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 3485, column: 2)
!7076 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 3484, column: 11)
!7077 = !DILocalVariable(name: "def", scope: !7078, file: !3, line: 3512, type: !825)
!7078 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 3511, column: 6)
!7079 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 3510, column: 4)
!7080 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 3510, column: 4)
!7081 = !DILocalVariable(name: "dregno", scope: !7078, file: !3, line: 3513, type: !7)
!7082 = !DILocalVariable(name: "mws", scope: !7083, file: !3, line: 3532, type: !1953)
!7083 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 3531, column: 6)
!7084 = distinct !DILexicalBlock(scope: !7076, file: !3, line: 3527, column: 2)
!7085 = !DILocalVariable(name: "def", scope: !7086, file: !3, line: 3543, type: !825)
!7086 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 3542, column: 6)
!7087 = distinct !DILexicalBlock(scope: !7088, file: !3, line: 3541, column: 4)
!7088 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 3541, column: 4)
!7089 = !DILocalVariable(name: "dregno", scope: !7086, file: !3, line: 3544, type: !7)
!7090 = !DILocalVariable(name: "mws", scope: !7091, file: !3, line: 3561, type: !1953)
!7091 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 3560, column: 2)
!7092 = !DILocalVariable(name: "really_add_notes", scope: !7093, file: !3, line: 3565, type: !749)
!7093 = distinct !DILexicalBlock(scope: !7094, file: !3, line: 3564, column: 6)
!7094 = distinct !DILexicalBlock(scope: !7091, file: !3, line: 3562, column: 8)
!7095 = !DILocalVariable(name: "use", scope: !7096, file: !3, line: 3581, type: !825)
!7096 = distinct !DILexicalBlock(scope: !7097, file: !3, line: 3580, column: 2)
!7097 = distinct !DILexicalBlock(scope: !7098, file: !3, line: 3579, column: 7)
!7098 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 3579, column: 7)
!7099 = !DILocalVariable(name: "uregno", scope: !7096, file: !3, line: 3582, type: !7)
!7100 = !DILocalVariable(name: "reg", scope: !7101, file: !3, line: 3605, type: !836)
!7101 = distinct !DILexicalBlock(scope: !7102, file: !3, line: 3604, column: 3)
!7102 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 3599, column: 13)
!7103 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 3592, column: 6)
!7104 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 3591, column: 8)
!7105 = !DILocalVariable(name: "next", scope: !7106, file: !3, line: 3620, type: !836)
!7106 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 3619, column: 2)
!7107 = !DILocalVariable(name: "next", scope: !7108, file: !3, line: 3626, type: !836)
!7108 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 3625, column: 2)
!7109 = !DILocation(line: 0, scope: !7042)
!7110 = !DILocation(line: 3415, column: 20, scope: !7042)
!7111 = !DILocation(line: 3420, column: 22, scope: !7042)
!7112 = !DILocation(line: 3420, column: 3, scope: !7042)
!7113 = !DILocation(line: 3421, column: 3, scope: !7042)
!7114 = !DILocation(line: 3433, column: 18, scope: !7057)
!7115 = !DILocation(line: 3433, column: 8, scope: !7057)
!7116 = !DILocation(line: 0, scope: !7057)
!7117 = !DILocation(line: 3433, column: 53, scope: !7056)
!7118 = !DILocation(line: 3433, column: 3, scope: !7057)
!7119 = !DILocation(line: 0, scope: !7055)
!7120 = !DILocation(line: 3441, column: 12, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 3441, column: 11)
!7122 = !DILocation(line: 3441, column: 31, scope: !7121)
!7123 = !DILocation(line: 3441, column: 48, scope: !7121)
!7124 = !DILocation(line: 3441, column: 11, scope: !7055)
!7125 = !DILocation(line: 3442, column: 26, scope: !7121)
!7126 = !DILocation(line: 3442, column: 2, scope: !7121)
!7127 = !DILocation(line: 3433, column: 70, scope: !7056)
!7128 = !DILocation(line: 3433, column: 3, scope: !7056)
!7129 = distinct !{!7129, !7118, !7130}
!7130 = !DILocation(line: 3443, column: 5, scope: !7057)
!7131 = !DILocation(line: 3445, column: 18, scope: !7061)
!7132 = !DILocation(line: 3445, column: 8, scope: !7061)
!7133 = !DILocation(line: 0, scope: !7061)
!7134 = !DILocation(line: 3445, column: 53, scope: !7060)
!7135 = !DILocation(line: 3445, column: 3, scope: !7061)
!7136 = !DILocation(line: 0, scope: !7059)
!7137 = !DILocation(line: 3448, column: 12, scope: !7064)
!7138 = !DILocation(line: 3448, column: 31, scope: !7064)
!7139 = !DILocation(line: 3448, column: 48, scope: !7064)
!7140 = !DILocation(line: 3448, column: 11, scope: !7059)
!7141 = !DILocation(line: 3450, column: 25, scope: !7063)
!7142 = !DILocation(line: 0, scope: !7063)
!7143 = !DILocation(line: 3451, column: 4, scope: !7063)
!7144 = !DILocation(line: 3455, column: 4, scope: !7063)
!7145 = !DILocation(line: 3456, column: 2, scope: !7063)
!7146 = !DILocation(line: 3445, column: 70, scope: !7060)
!7147 = !DILocation(line: 3445, column: 3, scope: !7060)
!7148 = distinct !{!7148, !7135, !7149}
!7149 = !DILocation(line: 3457, column: 5, scope: !7061)
!7150 = !DILocation(line: 3467, column: 3, scope: !7068)
!7151 = !DILocation(line: 0, scope: !7066)
!7152 = !DILocation(line: 0, scope: !7106)
!7153 = !DILocation(line: 0, scope: !7108)
!7154 = !DILocation(line: 0, scope: !7068)
!7155 = !DILocation(line: 3467, column: 3, scope: !7067)
!7156 = !DILocation(line: 3469, column: 26, scope: !7066)
!7157 = !DILocation(line: 3471, column: 7, scope: !7066)
!7158 = !DILocation(line: 3472, column: 7, scope: !7066)
!7159 = !DILocation(line: 3475, column: 12, scope: !7160)
!7160 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 3475, column: 11)
!7161 = !DILocation(line: 3475, column: 11, scope: !7066)
!7162 = !DILocation(line: 3478, column: 20, scope: !7066)
!7163 = !DILocation(line: 3480, column: 7, scope: !7066)
!7164 = !DILocation(line: 3481, column: 7, scope: !7066)
!7165 = !DILocation(line: 3484, column: 11, scope: !7076)
!7166 = !DILocation(line: 0, scope: !7076)
!7167 = !DILocation(line: 3484, column: 11, scope: !7066)
!7168 = !DILocation(line: 3530, column: 4, scope: !7084)
!7169 = !DILocation(line: 3496, column: 4, scope: !7075)
!7170 = !DILocation(line: 0, scope: !7075)
!7171 = !DILocation(line: 3496, column: 11, scope: !7075)
!7172 = !DILocation(line: 0, scope: !7074)
!7173 = !DILocation(line: 3499, column: 13, scope: !7174)
!7174 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 3499, column: 12)
!7175 = !DILocation(line: 3500, column: 5, scope: !7174)
!7176 = !DILocation(line: 3500, column: 35, scope: !7174)
!7177 = !DILocation(line: 3500, column: 9, scope: !7174)
!7178 = !DILocation(line: 3499, column: 12, scope: !7074)
!7179 = !DILocation(line: 3502, column: 41, scope: !7174)
!7180 = !DILocation(line: 3502, column: 7, scope: !7174)
!7181 = !DILocation(line: 3502, column: 5, scope: !7174)
!7182 = !DILocation(line: 3501, column: 3, scope: !7174)
!7183 = !DILocation(line: 3505, column: 15, scope: !7074)
!7184 = distinct !{!7184, !7169, !7185}
!7185 = !DILocation(line: 3506, column: 6, scope: !7075)
!7186 = !DILocation(line: 3510, column: 19, scope: !7080)
!7187 = !DILocation(line: 3510, column: 9, scope: !7080)
!7188 = !DILocation(line: 0, scope: !7080)
!7189 = !DILocation(line: 3510, column: 43, scope: !7079)
!7190 = !DILocation(line: 3510, column: 4, scope: !7080)
!7191 = !DILocation(line: 0, scope: !7078)
!7192 = !DILocation(line: 3513, column: 30, scope: !7078)
!7193 = !DILocation(line: 3514, column: 13, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 3514, column: 12)
!7195 = !DILocation(line: 3514, column: 12, scope: !7078)
!7196 = !DILocation(line: 3517, column: 38, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7194, file: !3, line: 3515, column: 3)
!7198 = !DILocation(line: 3517, column: 9, scope: !7197)
!7199 = !DILocation(line: 3517, column: 7, scope: !7197)
!7200 = !DILocation(line: 3519, column: 5, scope: !7197)
!7201 = !DILocation(line: 3522, column: 13, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 3522, column: 12)
!7203 = !DILocation(line: 3520, column: 3, scope: !7197)
!7204 = !DILocation(line: 3522, column: 12, scope: !7078)
!7205 = !DILocation(line: 3523, column: 3, scope: !7202)
!7206 = !DILocation(line: 3510, column: 60, scope: !7079)
!7207 = !DILocation(line: 3510, column: 4, scope: !7079)
!7208 = distinct !{!7208, !7190, !7209}
!7209 = !DILocation(line: 3524, column: 6, scope: !7080)
!7210 = !DILocation(line: 0, scope: !7084)
!7211 = !DILocation(line: 3530, column: 11, scope: !7084)
!7212 = !DILocation(line: 0, scope: !7083)
!7213 = !DILocation(line: 3533, column: 12, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 3533, column: 12)
!7215 = !DILocation(line: 3533, column: 12, scope: !7083)
!7216 = !DILocation(line: 3535, column: 41, scope: !7214)
!7217 = !DILocation(line: 3535, column: 7, scope: !7214)
!7218 = !DILocation(line: 3535, column: 5, scope: !7214)
!7219 = !DILocation(line: 3534, column: 3, scope: !7214)
!7220 = !DILocation(line: 3538, column: 15, scope: !7083)
!7221 = distinct !{!7221, !7168, !7222}
!7222 = !DILocation(line: 3539, column: 6, scope: !7084)
!7223 = !DILocation(line: 3541, column: 19, scope: !7088)
!7224 = !DILocation(line: 3541, column: 9, scope: !7088)
!7225 = !DILocation(line: 0, scope: !7088)
!7226 = !DILocation(line: 3541, column: 43, scope: !7087)
!7227 = !DILocation(line: 3541, column: 4, scope: !7088)
!7228 = !DILocation(line: 0, scope: !7086)
!7229 = !DILocation(line: 3544, column: 30, scope: !7086)
!7230 = !DILocation(line: 3546, column: 34, scope: !7086)
!7231 = !DILocation(line: 3546, column: 5, scope: !7086)
!7232 = !DILocation(line: 3546, column: 3, scope: !7086)
!7233 = !DILocation(line: 3549, column: 13, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 3549, column: 12)
!7235 = !DILocation(line: 3549, column: 12, scope: !7086)
!7236 = !DILocation(line: 3550, column: 3, scope: !7234)
!7237 = !DILocation(line: 3552, column: 13, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 3552, column: 12)
!7239 = !DILocation(line: 3552, column: 12, scope: !7086)
!7240 = !DILocation(line: 3553, column: 3, scope: !7238)
!7241 = !DILocation(line: 3541, column: 60, scope: !7087)
!7242 = !DILocation(line: 3541, column: 4, scope: !7087)
!7243 = distinct !{!7243, !7227, !7244}
!7244 = !DILocation(line: 3554, column: 6, scope: !7088)
!7245 = !DILocation(line: 3558, column: 17, scope: !7066)
!7246 = !DILocation(line: 3559, column: 7, scope: !7066)
!7247 = !DILocation(line: 3478, column: 18, scope: !7066)
!7248 = !DILocation(line: 3559, column: 14, scope: !7066)
!7249 = !DILocation(line: 0, scope: !7091)
!7250 = !DILocation(line: 3562, column: 9, scope: !7094)
!7251 = !DILocation(line: 3563, column: 8, scope: !7094)
!7252 = !DILocation(line: 3563, column: 38, scope: !7094)
!7253 = !DILocation(line: 3563, column: 12, scope: !7094)
!7254 = !DILocation(line: 3562, column: 8, scope: !7091)
!7255 = !DILocation(line: 0, scope: !7093)
!7256 = !DILocation(line: 3565, column: 8, scope: !7093)
!7257 = !DILocation(line: 3565, column: 43, scope: !7093)
!7258 = !DILocation(line: 3565, column: 32, scope: !7093)
!7259 = !DILocation(line: 3565, column: 13, scope: !7093)
!7260 = !DILocation(line: 3568, column: 37, scope: !7093)
!7261 = !DILocation(line: 3568, column: 5, scope: !7093)
!7262 = !DILocation(line: 3568, column: 3, scope: !7093)
!7263 = !DILocation(line: 3573, column: 12, scope: !7264)
!7264 = distinct !DILexicalBlock(scope: !7093, file: !3, line: 3573, column: 12)
!7265 = !DILocation(line: 3573, column: 12, scope: !7093)
!7266 = !DILocation(line: 3575, column: 6, scope: !7094)
!7267 = !DILocation(line: 3575, column: 6, scope: !7093)
!7268 = !DILocation(line: 3576, column: 11, scope: !7091)
!7269 = distinct !{!7269, !7246, !7270}
!7270 = !DILocation(line: 3577, column: 2, scope: !7066)
!7271 = !DILocation(line: 3579, column: 22, scope: !7098)
!7272 = !DILocation(line: 3579, column: 12, scope: !7098)
!7273 = !DILocation(line: 0, scope: !7098)
!7274 = !DILocation(line: 3579, column: 46, scope: !7097)
!7275 = !DILocation(line: 3579, column: 7, scope: !7098)
!7276 = !DILocation(line: 0, scope: !7096)
!7277 = !DILocation(line: 3582, column: 26, scope: !7096)
!7278 = !DILocation(line: 3591, column: 9, scope: !7104)
!7279 = !DILocation(line: 3591, column: 8, scope: !7096)
!7280 = !DILocation(line: 3593, column: 12, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7103, file: !3, line: 3593, column: 12)
!7282 = !DILocation(line: 3593, column: 12, scope: !7103)
!7283 = !DILocation(line: 3599, column: 16, scope: !7102)
!7284 = !DILocation(line: 3599, column: 35, scope: !7102)
!7285 = !DILocation(line: 3600, column: 6, scope: !7102)
!7286 = !DILocation(line: 3600, column: 11, scope: !7102)
!7287 = !DILocation(line: 3601, column: 6, scope: !7102)
!7288 = !DILocation(line: 3601, column: 11, scope: !7102)
!7289 = !DILocation(line: 3602, column: 6, scope: !7102)
!7290 = !DILocation(line: 3602, column: 12, scope: !7102)
!7291 = !DILocation(line: 3602, column: 31, scope: !7102)
!7292 = !DILocation(line: 3603, column: 6, scope: !7102)
!7293 = !DILocation(line: 3603, column: 11, scope: !7102)
!7294 = !DILocation(line: 3599, column: 13, scope: !7103)
!7295 = !DILocation(line: 3605, column: 16, scope: !7101)
!7296 = !DILocation(line: 3605, column: 15, scope: !7101)
!7297 = !DILocation(line: 3606, column: 32, scope: !7101)
!7298 = !DILocation(line: 3606, column: 56, scope: !7101)
!7299 = !DILocation(line: 0, scope: !7101)
!7300 = !DILocation(line: 3607, column: 51, scope: !7101)
!7301 = !DILocation(line: 3607, column: 22, scope: !7101)
!7302 = !DILocation(line: 3607, column: 20, scope: !7101)
!7303 = !DILocation(line: 3612, column: 3, scope: !7101)
!7304 = !DILocation(line: 3614, column: 8, scope: !7103)
!7305 = !DILocation(line: 3615, column: 6, scope: !7103)
!7306 = !DILocation(line: 3579, column: 63, scope: !7097)
!7307 = !DILocation(line: 3579, column: 7, scope: !7097)
!7308 = distinct !{!7308, !7275, !7309}
!7309 = !DILocation(line: 3616, column: 2, scope: !7098)
!7310 = !DILocation(line: 3618, column: 14, scope: !7066)
!7311 = !DILocation(line: 3618, column: 7, scope: !7066)
!7312 = !DILocation(line: 3624, column: 14, scope: !7066)
!7313 = !DILocation(line: 3624, column: 7, scope: !7066)
!7314 = !DILocation(line: 3620, column: 15, scope: !7106)
!7315 = !DILocation(line: 3621, column: 4, scope: !7106)
!7316 = !DILocation(line: 3622, column: 21, scope: !7106)
!7317 = distinct !{!7317, !7311, !7318}
!7318 = !DILocation(line: 3623, column: 2, scope: !7066)
!7319 = !DILocation(line: 3626, column: 15, scope: !7108)
!7320 = !DILocation(line: 3627, column: 4, scope: !7108)
!7321 = !DILocation(line: 3628, column: 19, scope: !7108)
!7322 = distinct !{!7322, !7313, !7323}
!7323 = !DILocation(line: 3629, column: 2, scope: !7066)
!7324 = !DILocation(line: 3631, column: 22, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7066, file: !3, line: 3631, column: 11)
!7326 = !DILocation(line: 3631, column: 11, scope: !7066)
!7327 = !DILocation(line: 3635, column: 35, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 3632, column: 2)
!7329 = !DILocation(line: 3635, column: 4, scope: !7328)
!7330 = !DILocation(line: 3635, column: 33, scope: !7328)
!7331 = !DILocation(line: 3636, column: 4, scope: !7328)
!7332 = !DILocation(line: 3637, column: 2, scope: !7328)
!7333 = !DILocation(line: 3638, column: 5, scope: !7067)
!7334 = distinct !{!7334, !7150, !7335}
!7335 = !DILocation(line: 3638, column: 5, scope: !7068)
!7336 = !DILocation(line: 3639, column: 1, scope: !7042)
!7337 = distinct !DISubprogram(name: "df_kill_notes", scope: !3, file: !3, line: 3112, type: !7338, scopeLine: 3113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7340)
!7338 = !DISubroutineType(types: !7339)
!7339 = !{null, !836, !1973, !1973}
!7340 = !{!7341, !7342, !7343, !7344, !7345, !7346, !7347, !7348, !7353}
!7341 = !DILocalVariable(name: "insn", arg: 1, scope: !7337, file: !3, line: 3112, type: !836)
!7342 = !DILocalVariable(name: "old_dead_notes", arg: 2, scope: !7337, file: !3, line: 3112, type: !1973)
!7343 = !DILocalVariable(name: "old_unused_notes", arg: 3, scope: !7337, file: !3, line: 3112, type: !1973)
!7344 = !DILocalVariable(name: "pprev", scope: !7337, file: !3, line: 3114, type: !1973)
!7345 = !DILocalVariable(name: "link", scope: !7337, file: !3, line: 3115, type: !836)
!7346 = !DILocalVariable(name: "dead", scope: !7337, file: !3, line: 3116, type: !836)
!7347 = !DILocalVariable(name: "unused", scope: !7337, file: !3, line: 3117, type: !836)
!7348 = !DILocalVariable(name: "next", scope: !7349, file: !3, line: 3133, type: !836)
!7349 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 3132, column: 6)
!7350 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 3126, column: 8)
!7351 = distinct !DILexicalBlock(scope: !7352, file: !3, line: 3122, column: 2)
!7352 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 3120, column: 5)
!7353 = !DILocalVariable(name: "next", scope: !7354, file: !3, line: 3153, type: !836)
!7354 = distinct !DILexicalBlock(scope: !7355, file: !3, line: 3152, column: 6)
!7355 = distinct !DILexicalBlock(scope: !7351, file: !3, line: 3146, column: 8)
!7356 = !DILocation(line: 0, scope: !7337)
!7357 = !DILocation(line: 3114, column: 17, scope: !7337)
!7358 = !DILocation(line: 3115, column: 14, scope: !7337)
!7359 = !DILocation(line: 3119, column: 3, scope: !7337)
!7360 = !DILocation(line: 3116, column: 7, scope: !7337)
!7361 = !DILocation(line: 3117, column: 7, scope: !7337)
!7362 = !DILocation(line: 3121, column: 15, scope: !7352)
!7363 = !DILocation(line: 3121, column: 7, scope: !7352)
!7364 = !DILocation(line: 3126, column: 29, scope: !7350)
!7365 = !DILocation(line: 3126, column: 8, scope: !7350)
!7366 = !DILocation(line: 0, scope: !7350)
!7367 = !DILocation(line: 3126, column: 8, scope: !7351)
!7368 = !DILocation(line: 0, scope: !7349)
!7369 = !DILocation(line: 3137, column: 23, scope: !7349)
!7370 = !DILocation(line: 3139, column: 15, scope: !7349)
!7371 = !DILocation(line: 3146, column: 29, scope: !7355)
!7372 = !DILocation(line: 3146, column: 8, scope: !7355)
!7373 = !DILocation(line: 0, scope: !7355)
!7374 = !DILocation(line: 3146, column: 8, scope: !7351)
!7375 = !DILocation(line: 0, scope: !7354)
!7376 = !DILocation(line: 3157, column: 23, scope: !7354)
!7377 = !DILocation(line: 3159, column: 15, scope: !7354)
!7378 = !DILocation(line: 3164, column: 13, scope: !7351)
!7379 = !DILocation(line: 3165, column: 11, scope: !7351)
!7380 = !DILocation(line: 3166, column: 4, scope: !7351)
!7381 = !DILocation(line: 0, scope: !7351)
!7382 = distinct !{!7382, !7359, !7383}
!7383 = !DILocation(line: 3168, column: 5, scope: !7337)
!7384 = !DILocation(line: 3170, column: 19, scope: !7337)
!7385 = !DILocation(line: 3171, column: 21, scope: !7337)
!7386 = !DILocation(line: 3172, column: 1, scope: !7337)
!7387 = distinct !DISubprogram(name: "df_ignore_stack_reg", scope: !3, file: !3, line: 3094, type: !2138, scopeLine: 3095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7388)
!7388 = !{!7389}
!7389 = !DILocalVariable(name: "regno", arg: 1, scope: !7387, file: !3, line: 3094, type: !750)
!7390 = !DILocation(line: 0, scope: !7387)
!7391 = !DILocation(line: 3096, column: 10, scope: !7387)
!7392 = !DILocation(line: 3097, column: 5, scope: !7387)
!7393 = !DILocation(line: 3097, column: 8, scope: !7387)
!7394 = !DILocation(line: 3096, column: 3, scope: !7387)
!7395 = distinct !DISubprogram(name: "df_set_unused_notes_for_mw", scope: !3, file: !3, line: 3242, type: !7396, scopeLine: 3245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7398)
!7396 = !DISubroutineType(types: !7397)
!7397 = !{!836, !836, !836, !1953, !758, !758, !758}
!7398 = !{!7399, !7400, !7401, !7402, !7403, !7404, !7405, !7406}
!7399 = !DILocalVariable(name: "insn", arg: 1, scope: !7395, file: !3, line: 3242, type: !836)
!7400 = !DILocalVariable(name: "old", arg: 2, scope: !7395, file: !3, line: 3242, type: !836)
!7401 = !DILocalVariable(name: "mws", arg: 3, scope: !7395, file: !3, line: 3242, type: !1953)
!7402 = !DILocalVariable(name: "live", arg: 4, scope: !7395, file: !3, line: 3243, type: !758)
!7403 = !DILocalVariable(name: "do_not_gen", arg: 5, scope: !7395, file: !3, line: 3243, type: !758)
!7404 = !DILocalVariable(name: "artificial_uses", arg: 6, scope: !7395, file: !3, line: 3244, type: !758)
!7405 = !DILocalVariable(name: "r", scope: !7395, file: !3, line: 3246, type: !7)
!7406 = !DILocalVariable(name: "regno", scope: !7407, file: !3, line: 3256, type: !7)
!7407 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 3255, column: 5)
!7408 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 3254, column: 7)
!7409 = !DILocation(line: 0, scope: !7395)
!7410 = !DILocation(line: 3254, column: 7, scope: !7408)
!7411 = !DILocation(line: 0, scope: !7408)
!7412 = !DILocation(line: 3254, column: 7, scope: !7395)
!7413 = !DILocation(line: 0, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 3266, column: 5)
!7415 = distinct !DILexicalBlock(scope: !7408, file: !3, line: 3266, column: 5)
!7416 = !DILocation(line: 3266, column: 5, scope: !7415)
!7417 = !DILocation(line: 0, scope: !7407)
!7418 = !DILocation(line: 3257, column: 54, scope: !7407)
!7419 = !DILocation(line: 3257, column: 13, scope: !7407)
!7420 = !DILocation(line: 3262, column: 7, scope: !7407)
!7421 = !DILocation(line: 3264, column: 5, scope: !7407)
!7422 = !DILocation(line: 0, scope: !7415)
!7423 = !DILocation(line: 3266, column: 42, scope: !7414)
!7424 = !DILocation(line: 3266, column: 34, scope: !7414)
!7425 = !DILocation(line: 3268, column: 7, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 3268, column: 6)
!7427 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 3267, column: 7)
!7428 = !DILocation(line: 3269, column: 6, scope: !7426)
!7429 = !DILocation(line: 3269, column: 10, scope: !7426)
!7430 = !DILocation(line: 3268, column: 6, scope: !7427)
!7431 = !DILocation(line: 3271, column: 48, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 3270, column: 4)
!7433 = !DILocation(line: 3271, column: 12, scope: !7432)
!7434 = !DILocation(line: 3275, column: 4, scope: !7432)
!7435 = !DILocation(line: 3276, column: 2, scope: !7427)
!7436 = !DILocation(line: 3266, column: 54, scope: !7414)
!7437 = !DILocation(line: 3266, column: 5, scope: !7414)
!7438 = distinct !{!7438, !7416, !7439}
!7439 = !DILocation(line: 3277, column: 7, scope: !7415)
!7440 = !DILocation(line: 3278, column: 3, scope: !7395)
!7441 = distinct !DISubprogram(name: "df_create_unused_note", scope: !3, file: !3, line: 3377, type: !7442, scopeLine: 3379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7444)
!7442 = !DISubroutineType(types: !7443)
!7443 = !{!836, !836, !836, !825, !758, !758}
!7444 = !{!7445, !7446, !7447, !7448, !7449, !7450, !7451}
!7445 = !DILocalVariable(name: "insn", arg: 1, scope: !7441, file: !3, line: 3377, type: !836)
!7446 = !DILocalVariable(name: "old", arg: 2, scope: !7441, file: !3, line: 3377, type: !836)
!7447 = !DILocalVariable(name: "def", arg: 3, scope: !7441, file: !3, line: 3377, type: !825)
!7448 = !DILocalVariable(name: "live", arg: 4, scope: !7441, file: !3, line: 3378, type: !758)
!7449 = !DILocalVariable(name: "artificial_uses", arg: 5, scope: !7441, file: !3, line: 3378, type: !758)
!7450 = !DILocalVariable(name: "dregno", scope: !7441, file: !3, line: 3380, type: !7)
!7451 = !DILocalVariable(name: "reg", scope: !7452, file: !3, line: 3395, type: !836)
!7452 = distinct !DILexicalBlock(scope: !7453, file: !3, line: 3394, column: 5)
!7453 = distinct !DILexicalBlock(scope: !7441, file: !3, line: 3390, column: 7)
!7454 = !DILocation(line: 0, scope: !7441)
!7455 = !DILocation(line: 3380, column: 25, scope: !7441)
!7456 = !DILocation(line: 3390, column: 9, scope: !7453)
!7457 = !DILocation(line: 3391, column: 2, scope: !7453)
!7458 = !DILocation(line: 3391, column: 6, scope: !7453)
!7459 = !DILocation(line: 3391, column: 25, scope: !7453)
!7460 = !DILocation(line: 3392, column: 2, scope: !7453)
!7461 = !DILocation(line: 3392, column: 5, scope: !7453)
!7462 = !DILocation(line: 3393, column: 2, scope: !7453)
!7463 = !DILocation(line: 3393, column: 5, scope: !7453)
!7464 = !DILocation(line: 3390, column: 7, scope: !7441)
!7465 = !DILocation(line: 3395, column: 18, scope: !7452)
!7466 = !DILocation(line: 3395, column: 17, scope: !7452)
!7467 = !DILocation(line: 3396, column: 20, scope: !7452)
!7468 = !DILocation(line: 3396, column: 43, scope: !7452)
!7469 = !DILocation(line: 0, scope: !7452)
!7470 = !DILocation(line: 3397, column: 13, scope: !7452)
!7471 = !DILocation(line: 3401, column: 5, scope: !7452)
!7472 = !DILocation(line: 3403, column: 3, scope: !7441)
!7473 = distinct !DISubprogram(name: "df_set_dead_notes_for_mw", scope: !3, file: !3, line: 3316, type: !7474, scopeLine: 3319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7476)
!7474 = !DISubroutineType(types: !7475)
!7475 = !{!836, !836, !836, !1953, !758, !758, !758, !748}
!7476 = !{!7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485}
!7477 = !DILocalVariable(name: "insn", arg: 1, scope: !7473, file: !3, line: 3316, type: !836)
!7478 = !DILocalVariable(name: "old", arg: 2, scope: !7473, file: !3, line: 3316, type: !836)
!7479 = !DILocalVariable(name: "mws", arg: 3, scope: !7473, file: !3, line: 3316, type: !1953)
!7480 = !DILocalVariable(name: "live", arg: 4, scope: !7473, file: !3, line: 3317, type: !758)
!7481 = !DILocalVariable(name: "do_not_gen", arg: 5, scope: !7473, file: !3, line: 3317, type: !758)
!7482 = !DILocalVariable(name: "artificial_uses", arg: 6, scope: !7473, file: !3, line: 3318, type: !758)
!7483 = !DILocalVariable(name: "added_notes_p", arg: 7, scope: !7473, file: !3, line: 3318, type: !748)
!7484 = !DILocalVariable(name: "r", scope: !7473, file: !3, line: 3320, type: !7)
!7485 = !DILocalVariable(name: "is_debug", scope: !7473, file: !3, line: 3321, type: !749)
!7486 = !DILocation(line: 0, scope: !7473)
!7487 = !DILocation(line: 3321, column: 19, scope: !7473)
!7488 = !DILocation(line: 3323, column: 18, scope: !7473)
!7489 = !DILocation(line: 3338, column: 7, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7473, file: !3, line: 3338, column: 7)
!7491 = !DILocation(line: 3338, column: 7, scope: !7473)
!7492 = !DILocation(line: 3341, column: 11, scope: !7493)
!7493 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 3341, column: 11)
!7494 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 3339, column: 5)
!7495 = !DILocation(line: 3341, column: 11, scope: !7494)
!7496 = !DILocation(line: 3343, column: 19, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7493, file: !3, line: 3342, column: 2)
!7498 = !DILocation(line: 3344, column: 4, scope: !7497)
!7499 = !DILocation(line: 3346, column: 52, scope: !7494)
!7500 = !DILocation(line: 3346, column: 13, scope: !7494)
!7501 = !DILocation(line: 3350, column: 5, scope: !7494)
!7502 = !DILocation(line: 3353, column: 21, scope: !7503)
!7503 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 3353, column: 7)
!7504 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 3352, column: 5)
!7505 = !DILocation(line: 0, scope: !7506)
!7506 = distinct !DILexicalBlock(scope: !7503, file: !3, line: 3353, column: 7)
!7507 = !DILocation(line: 0, scope: !7508)
!7508 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 3358, column: 10)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 3357, column: 4)
!7510 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 3354, column: 6)
!7511 = !DILocation(line: 3353, column: 12, scope: !7503)
!7512 = !DILocation(line: 0, scope: !7503)
!7513 = !DILocation(line: 3353, column: 44, scope: !7506)
!7514 = !DILocation(line: 3353, column: 36, scope: !7506)
!7515 = !DILocation(line: 3353, column: 7, scope: !7503)
!7516 = !DILocation(line: 3354, column: 7, scope: !7510)
!7517 = !DILocation(line: 3355, column: 6, scope: !7510)
!7518 = !DILocation(line: 3355, column: 10, scope: !7510)
!7519 = !DILocation(line: 3356, column: 6, scope: !7510)
!7520 = !DILocation(line: 3356, column: 10, scope: !7510)
!7521 = !DILocation(line: 3354, column: 6, scope: !7506)
!7522 = !DILocation(line: 3363, column: 46, scope: !7509)
!7523 = !DILocation(line: 3363, column: 12, scope: !7509)
!7524 = !DILocation(line: 3367, column: 4, scope: !7509)
!7525 = !DILocation(line: 3353, column: 56, scope: !7506)
!7526 = !DILocation(line: 3353, column: 7, scope: !7506)
!7527 = distinct !{!7527, !7515, !7528}
!7528 = !DILocation(line: 3367, column: 4, scope: !7503)
!7529 = !DILocation(line: 3370, column: 1, scope: !7473)
!7530 = !DILocation(line: 3360, column: 18, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7508, file: !3, line: 3359, column: 8)
!7532 = !DILocation(line: 3361, column: 3, scope: !7531)
!7533 = distinct !DISubprogram(name: "df_set_note", scope: !3, file: !3, line: 3179, type: !7534, scopeLine: 3180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7536)
!7534 = !DISubroutineType(types: !7535)
!7535 = !{!836, !709, !836, !836, !836}
!7536 = !{!7537, !7538, !7539, !7540, !7541, !7542}
!7537 = !DILocalVariable(name: "note_type", arg: 1, scope: !7533, file: !3, line: 3179, type: !709)
!7538 = !DILocalVariable(name: "insn", arg: 2, scope: !7533, file: !3, line: 3179, type: !836)
!7539 = !DILocalVariable(name: "old", arg: 3, scope: !7533, file: !3, line: 3179, type: !836)
!7540 = !DILocalVariable(name: "reg", arg: 4, scope: !7533, file: !3, line: 3179, type: !836)
!7541 = !DILocalVariable(name: "curr", scope: !7533, file: !3, line: 3181, type: !836)
!7542 = !DILocalVariable(name: "prev", scope: !7533, file: !3, line: 3182, type: !836)
!7543 = !DILocation(line: 0, scope: !7533)
!7544 = !DILocation(line: 3184, column: 3, scope: !7533)
!7545 = !DILocation(line: 3186, column: 3, scope: !7533)
!7546 = !DILocation(line: 3187, column: 9, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 3187, column: 9)
!7548 = !DILocation(line: 3187, column: 24, scope: !7547)
!7549 = !DILocation(line: 3187, column: 9, scope: !7533)
!7550 = !DILocation(line: 3189, column: 6, scope: !7551)
!7551 = distinct !DILexicalBlock(scope: !7552, file: !3, line: 3189, column: 6)
!7552 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 3188, column: 7)
!7553 = !DILocation(line: 0, scope: !7551)
!7554 = !DILocation(line: 3189, column: 6, scope: !7552)
!7555 = !DILocation(line: 3190, column: 4, scope: !7551)
!7556 = !DILocation(line: 3190, column: 19, scope: !7551)
!7557 = !DILocation(line: 3193, column: 19, scope: !7552)
!7558 = !DILocation(line: 3193, column: 17, scope: !7552)
!7559 = !DILocation(line: 3194, column: 2, scope: !7552)
!7560 = !DILocation(line: 3194, column: 19, scope: !7552)
!7561 = !DILocation(line: 3195, column: 2, scope: !7552)
!7562 = !DILocation(line: 3200, column: 9, scope: !7563)
!7563 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 3198, column: 7)
!7564 = distinct !{!7564, !7545, !7565}
!7565 = !DILocation(line: 3201, column: 7, scope: !7533)
!7566 = !DILocation(line: 3204, column: 3, scope: !7533)
!7567 = !DILocation(line: 3205, column: 3, scope: !7533)
!7568 = !DILocation(line: 3206, column: 1, scope: !7533)
!7569 = distinct !DISubprogram(name: "df_whole_mw_reg_unused_p", scope: !3, file: !3, line: 3214, type: !7570, scopeLine: 3216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7572)
!7570 = !DISubroutineType(types: !7571)
!7571 = !{!749, !1953, !758, !758}
!7572 = !{!7573, !7574, !7575, !7576}
!7573 = !DILocalVariable(name: "mws", arg: 1, scope: !7569, file: !3, line: 3214, type: !1953)
!7574 = !DILocalVariable(name: "live", arg: 2, scope: !7569, file: !3, line: 3215, type: !758)
!7575 = !DILocalVariable(name: "artificial_uses", arg: 3, scope: !7569, file: !3, line: 3215, type: !758)
!7576 = !DILocalVariable(name: "r", scope: !7569, file: !3, line: 3217, type: !7)
!7577 = !DILocation(line: 0, scope: !7569)
!7578 = !DILocation(line: 3221, column: 12, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 3221, column: 7)
!7580 = !DILocation(line: 3221, column: 18, scope: !7579)
!7581 = !DILocation(line: 3221, column: 7, scope: !7569)
!7582 = !DILocation(line: 3225, column: 17, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 3225, column: 3)
!7584 = !DILocation(line: 0, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7583, file: !3, line: 3225, column: 3)
!7586 = !DILocation(line: 3225, column: 8, scope: !7583)
!7587 = !DILocation(line: 0, scope: !7583)
!7588 = !DILocation(line: 3225, column: 40, scope: !7585)
!7589 = !DILocation(line: 3225, column: 32, scope: !7585)
!7590 = !DILocation(line: 3225, column: 3, scope: !7583)
!7591 = !DILocation(line: 3226, column: 9, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7585, file: !3, line: 3226, column: 9)
!7593 = !DILocation(line: 3227, column: 2, scope: !7592)
!7594 = !DILocation(line: 3227, column: 5, scope: !7592)
!7595 = !DILocation(line: 3226, column: 9, scope: !7585)
!7596 = !DILocation(line: 3225, column: 52, scope: !7585)
!7597 = !DILocation(line: 3225, column: 3, scope: !7585)
!7598 = distinct !{!7598, !7590, !7599}
!7599 = !DILocation(line: 3228, column: 14, scope: !7583)
!7600 = !DILocation(line: 3230, column: 3, scope: !7569)
!7601 = !DILocation(line: 3232, column: 1, scope: !7569)
!7602 = distinct !DISubprogram(name: "df_whole_mw_reg_dead_p", scope: !3, file: !3, line: 3288, type: !7603, scopeLine: 3291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7605)
!7603 = !DISubroutineType(types: !7604)
!7604 = !{!749, !1953, !758, !758, !758}
!7605 = !{!7606, !7607, !7608, !7609, !7610}
!7606 = !DILocalVariable(name: "mws", arg: 1, scope: !7602, file: !3, line: 3288, type: !1953)
!7607 = !DILocalVariable(name: "live", arg: 2, scope: !7602, file: !3, line: 3289, type: !758)
!7608 = !DILocalVariable(name: "artificial_uses", arg: 3, scope: !7602, file: !3, line: 3289, type: !758)
!7609 = !DILocalVariable(name: "do_not_gen", arg: 4, scope: !7602, file: !3, line: 3290, type: !758)
!7610 = !DILocalVariable(name: "r", scope: !7602, file: !3, line: 3292, type: !7)
!7611 = !DILocation(line: 0, scope: !7602)
!7612 = !DILocation(line: 3296, column: 12, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 3296, column: 7)
!7614 = !DILocation(line: 3296, column: 18, scope: !7613)
!7615 = !DILocation(line: 3296, column: 7, scope: !7602)
!7616 = !DILocation(line: 3300, column: 17, scope: !7617)
!7617 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 3300, column: 3)
!7618 = !DILocation(line: 0, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7617, file: !3, line: 3300, column: 3)
!7620 = !DILocation(line: 3300, column: 8, scope: !7617)
!7621 = !DILocation(line: 0, scope: !7617)
!7622 = !DILocation(line: 3300, column: 40, scope: !7619)
!7623 = !DILocation(line: 3300, column: 32, scope: !7619)
!7624 = !DILocation(line: 3300, column: 3, scope: !7617)
!7625 = !DILocation(line: 3301, column: 9, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 3301, column: 9)
!7627 = !DILocation(line: 3302, column: 2, scope: !7626)
!7628 = !DILocation(line: 3302, column: 5, scope: !7626)
!7629 = !DILocation(line: 3303, column: 2, scope: !7626)
!7630 = !DILocation(line: 3303, column: 5, scope: !7626)
!7631 = !DILocation(line: 3301, column: 9, scope: !7619)
!7632 = !DILocation(line: 3300, column: 52, scope: !7619)
!7633 = !DILocation(line: 3300, column: 3, scope: !7619)
!7634 = distinct !{!7634, !7624, !7635}
!7635 = !DILocation(line: 3304, column: 14, scope: !7617)
!7636 = !DILocation(line: 3306, column: 3, scope: !7602)
!7637 = !DILocation(line: 3308, column: 1, scope: !7602)
!7638 = distinct !DISubprogram(name: "bb_has_eh_pred", scope: !142, file: !142, line: 973, type: !7639, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7641)
!7639 = !DISubroutineType(types: !7640)
!7640 = !{!749, !1307}
!7641 = !{!7642, !7643, !7644}
!7642 = !DILocalVariable(name: "bb", arg: 1, scope: !7638, file: !142, line: 973, type: !1307)
!7643 = !DILocalVariable(name: "e", scope: !7638, file: !142, line: 975, type: !1324)
!7644 = !DILocalVariable(name: "ei", scope: !7638, file: !142, line: 976, type: !2753)
!7645 = !DILocation(line: 0, scope: !7638)
!7646 = !DILocation(line: 975, column: 3, scope: !7638)
!7647 = !DILocation(line: 976, column: 3, scope: !7638)
!7648 = !DILocation(line: 978, column: 3, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7638, file: !142, line: 978, column: 3)
!7650 = !DILocation(line: 0, scope: !7651)
!7651 = distinct !DILexicalBlock(scope: !7649, file: !142, line: 978, column: 3)
!7652 = !DILocation(line: 978, column: 3, scope: !7651)
!7653 = !DILocation(line: 980, column: 11, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7655, file: !142, line: 980, column: 11)
!7655 = distinct !DILexicalBlock(scope: !7651, file: !142, line: 979, column: 5)
!7656 = !DILocation(line: 980, column: 14, scope: !7654)
!7657 = !DILocation(line: 980, column: 20, scope: !7654)
!7658 = !DILocation(line: 980, column: 11, scope: !7655)
!7659 = distinct !{!7659, !7648, !7660}
!7660 = !DILocation(line: 982, column: 5, scope: !7649)
!7661 = !DILocation(line: 984, column: 1, scope: !7638)
!7662 = distinct !DISubprogram(name: "df_md_alloc", scope: !3, file: !3, line: 4057, type: !2071, scopeLine: 4058, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7663)
!7663 = !{!7664, !7665, !7666, !7667}
!7664 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7662, file: !3, line: 4057, type: !758)
!7665 = !DILocalVariable(name: "bb_index", scope: !7662, file: !3, line: 4059, type: !7)
!7666 = !DILocalVariable(name: "bi", scope: !7662, file: !3, line: 4060, type: !4126)
!7667 = !DILocalVariable(name: "bb_info", scope: !7668, file: !3, line: 4071, type: !2049)
!7668 = distinct !DILexicalBlock(scope: !7669, file: !3, line: 4070, column: 5)
!7669 = distinct !DILexicalBlock(scope: !7670, file: !3, line: 4069, column: 3)
!7670 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 4069, column: 3)
!7671 = !DILocation(line: 0, scope: !7662)
!7672 = !DILocation(line: 4059, column: 3, scope: !7662)
!7673 = !DILocation(line: 4060, column: 3, scope: !7662)
!7674 = !DILocation(line: 4062, column: 8, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 4062, column: 7)
!7676 = !DILocation(line: 4062, column: 15, scope: !7675)
!7677 = !DILocation(line: 4062, column: 7, scope: !7662)
!7678 = !DILocation(line: 4063, column: 25, scope: !7675)
!7679 = !DILocation(line: 4063, column: 5, scope: !7675)
!7680 = !DILocation(line: 4063, column: 12, scope: !7675)
!7681 = !DILocation(line: 4063, column: 23, scope: !7675)
!7682 = !DILocation(line: 4066, column: 20, scope: !7662)
!7683 = !DILocation(line: 4066, column: 3, scope: !7662)
!7684 = !DILocation(line: 4067, column: 19, scope: !7662)
!7685 = !DILocation(line: 4067, column: 17, scope: !7662)
!7686 = !DILocation(line: 4069, column: 3, scope: !7670)
!7687 = !DILocation(line: 4069, column: 3, scope: !7669)
!7688 = !DILocation(line: 4071, column: 58, scope: !7668)
!7689 = !DILocation(line: 4071, column: 39, scope: !7668)
!7690 = !DILocation(line: 0, scope: !7668)
!7691 = !DILocation(line: 4072, column: 11, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 4072, column: 11)
!7693 = !DILocation(line: 4072, column: 11, scope: !7668)
!7694 = !DILocation(line: 4074, column: 34, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 4073, column: 9)
!7696 = !DILocation(line: 4074, column: 11, scope: !7695)
!7697 = !DILocation(line: 4075, column: 34, scope: !7695)
!7698 = !DILocation(line: 4075, column: 11, scope: !7695)
!7699 = !DILocation(line: 4076, column: 34, scope: !7695)
!7700 = !DILocation(line: 4076, column: 11, scope: !7695)
!7701 = !DILocation(line: 4077, column: 34, scope: !7695)
!7702 = !DILocation(line: 4077, column: 11, scope: !7695)
!7703 = !DILocation(line: 4078, column: 34, scope: !7695)
!7704 = !DILocation(line: 4078, column: 11, scope: !7695)
!7705 = !DILocation(line: 4079, column: 9, scope: !7695)
!7706 = !DILocation(line: 4082, column: 58, scope: !7707)
!7707 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 4081, column: 9)
!7708 = !DILocation(line: 4082, column: 65, scope: !7707)
!7709 = !DILocation(line: 4082, column: 46, scope: !7707)
!7710 = !DILocation(line: 4082, column: 21, scope: !7707)
!7711 = !DILocation(line: 4083, column: 30, scope: !7707)
!7712 = !DILocation(line: 4083, column: 11, scope: !7707)
!7713 = !DILocation(line: 4084, column: 27, scope: !7707)
!7714 = !DILocation(line: 4084, column: 20, scope: !7707)
!7715 = !DILocation(line: 4084, column: 25, scope: !7707)
!7716 = !DILocation(line: 4085, column: 26, scope: !7707)
!7717 = !DILocation(line: 4085, column: 20, scope: !7707)
!7718 = !DILocation(line: 4085, column: 24, scope: !7707)
!7719 = !DILocation(line: 4086, column: 27, scope: !7707)
!7720 = !DILocation(line: 4086, column: 20, scope: !7707)
!7721 = !DILocation(line: 4086, column: 25, scope: !7707)
!7722 = !DILocation(line: 4087, column: 25, scope: !7707)
!7723 = !DILocation(line: 4087, column: 20, scope: !7707)
!7724 = !DILocation(line: 4087, column: 23, scope: !7707)
!7725 = !DILocation(line: 4088, column: 26, scope: !7707)
!7726 = !DILocation(line: 4088, column: 20, scope: !7707)
!7727 = !DILocation(line: 4088, column: 24, scope: !7707)
!7728 = distinct !{!7728, !7686, !7729}
!7729 = !DILocation(line: 4090, column: 5, scope: !7670)
!7730 = !DILocation(line: 4092, column: 3, scope: !7662)
!7731 = !DILocation(line: 4092, column: 10, scope: !7662)
!7732 = !DILocation(line: 4092, column: 21, scope: !7662)
!7733 = !DILocation(line: 4093, column: 1, scope: !7662)
!7734 = distinct !DISubprogram(name: "df_md_reset", scope: !3, file: !3, line: 4259, type: !2071, scopeLine: 4260, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7735)
!7735 = !{!7736, !7737, !7738, !7739}
!7736 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7734, file: !3, line: 4259, type: !758)
!7737 = !DILocalVariable(name: "bb_index", scope: !7734, file: !3, line: 4261, type: !7)
!7738 = !DILocalVariable(name: "bi", scope: !7734, file: !3, line: 4262, type: !4126)
!7739 = !DILocalVariable(name: "bb_info", scope: !7740, file: !3, line: 4266, type: !2049)
!7740 = distinct !DILexicalBlock(scope: !7741, file: !3, line: 4265, column: 5)
!7741 = distinct !DILexicalBlock(scope: !7742, file: !3, line: 4264, column: 3)
!7742 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 4264, column: 3)
!7743 = !DILocation(line: 0, scope: !7734)
!7744 = !DILocation(line: 4261, column: 3, scope: !7734)
!7745 = !DILocation(line: 4262, column: 3, scope: !7734)
!7746 = !DILocation(line: 4264, column: 3, scope: !7742)
!7747 = !DILocation(line: 4264, column: 3, scope: !7741)
!7748 = !DILocation(line: 4266, column: 58, scope: !7740)
!7749 = !DILocation(line: 4266, column: 39, scope: !7740)
!7750 = !DILocation(line: 0, scope: !7740)
!7751 = !DILocation(line: 4267, column: 7, scope: !7740)
!7752 = !DILocation(line: 4268, column: 30, scope: !7740)
!7753 = !DILocation(line: 4268, column: 7, scope: !7740)
!7754 = !DILocation(line: 4269, column: 30, scope: !7740)
!7755 = !DILocation(line: 4269, column: 7, scope: !7740)
!7756 = distinct !{!7756, !7746, !7757}
!7757 = !DILocation(line: 4270, column: 5, scope: !7742)
!7758 = !DILocation(line: 4271, column: 1, scope: !7734)
!7759 = distinct !DISubprogram(name: "df_md_free_bb_info", scope: !3, file: !3, line: 4037, type: !2078, scopeLine: 4039, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7760)
!7760 = !{!7761, !7762, !7763}
!7761 = !DILocalVariable(name: "bb", arg: 1, scope: !7759, file: !3, line: 4037, type: !1307)
!7762 = !DILocalVariable(name: "vbb_info", arg: 2, scope: !7759, file: !3, line: 4038, type: !754)
!7763 = !DILocalVariable(name: "bb_info", scope: !7759, file: !3, line: 4040, type: !2049)
!7764 = !DILocation(line: 0, scope: !7759)
!7765 = !DILocation(line: 4041, column: 7, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 4041, column: 7)
!7767 = !DILocation(line: 4041, column: 7, scope: !7759)
!7768 = !DILocation(line: 4043, column: 7, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 4042, column: 5)
!7770 = !DILocation(line: 4044, column: 7, scope: !7769)
!7771 = !DILocation(line: 4045, column: 7, scope: !7769)
!7772 = !DILocation(line: 4046, column: 7, scope: !7769)
!7773 = !DILocation(line: 4047, column: 7, scope: !7769)
!7774 = !DILocation(line: 4048, column: 18, scope: !7769)
!7775 = !DILocation(line: 4048, column: 25, scope: !7769)
!7776 = !DILocation(line: 4048, column: 7, scope: !7769)
!7777 = !DILocation(line: 4049, column: 5, scope: !7769)
!7778 = !DILocation(line: 4050, column: 1, scope: !7759)
!7779 = distinct !DISubprogram(name: "df_md_local_compute", scope: !3, file: !3, line: 4215, type: !2071, scopeLine: 4216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7780)
!7780 = !{!7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788, !7792}
!7781 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7779, file: !3, line: 4215, type: !758)
!7782 = !DILocalVariable(name: "bb_index", scope: !7779, file: !3, line: 4217, type: !7)
!7783 = !DILocalVariable(name: "df_bb_index", scope: !7779, file: !3, line: 4217, type: !7)
!7784 = !DILocalVariable(name: "bi1", scope: !7779, file: !3, line: 4218, type: !4126)
!7785 = !DILocalVariable(name: "bi2", scope: !7779, file: !3, line: 4218, type: !4126)
!7786 = !DILocalVariable(name: "bb", scope: !7779, file: !3, line: 4219, type: !1307)
!7787 = !DILocalVariable(name: "frontiers", scope: !7779, file: !3, line: 4220, type: !2029)
!7788 = !DILocalVariable(name: "kill", scope: !7789, file: !3, line: 4240, type: !758)
!7789 = distinct !DILexicalBlock(scope: !7790, file: !3, line: 4239, column: 5)
!7790 = distinct !DILexicalBlock(scope: !7791, file: !3, line: 4238, column: 3)
!7791 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 4238, column: 3)
!7792 = !DILocalVariable(name: "bb", scope: !7793, file: !3, line: 4243, type: !1307)
!7793 = distinct !DILexicalBlock(scope: !7794, file: !3, line: 4242, column: 2)
!7794 = distinct !DILexicalBlock(scope: !7795, file: !3, line: 4241, column: 7)
!7795 = distinct !DILexicalBlock(scope: !7789, file: !3, line: 4241, column: 7)
!7796 = !DILocation(line: 0, scope: !7779)
!7797 = !DILocation(line: 4217, column: 3, scope: !7779)
!7798 = !DILocation(line: 4218, column: 3, scope: !7779)
!7799 = !DILocation(line: 4222, column: 18, scope: !7779)
!7800 = !DILocation(line: 4222, column: 16, scope: !7779)
!7801 = !DILocation(line: 4224, column: 3, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 4224, column: 3)
!7803 = !DILocation(line: 4224, column: 3, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 4224, column: 3)
!7805 = !DILocation(line: 4226, column: 31, scope: !7806)
!7806 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 4225, column: 5)
!7807 = !DILocation(line: 4226, column: 7, scope: !7806)
!7808 = distinct !{!7808, !7801, !7809}
!7809 = !DILocation(line: 4227, column: 5, scope: !7802)
!7810 = !DILocation(line: 4229, column: 3, scope: !7779)
!7811 = !DILocation(line: 4231, column: 15, scope: !7779)
!7812 = !DILocation(line: 4232, column: 3, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 4232, column: 3)
!7814 = !DILocation(line: 0, scope: !7813)
!7815 = !DILocation(line: 4233, column: 28, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 4232, column: 3)
!7817 = !DILocation(line: 4233, column: 19, scope: !7816)
!7818 = !DILocation(line: 4233, column: 5, scope: !7816)
!7819 = !DILocation(line: 4233, column: 26, scope: !7816)
!7820 = !DILocation(line: 4232, column: 3, scope: !7816)
!7821 = distinct !{!7821, !7812, !7822}
!7822 = !DILocation(line: 4233, column: 28, scope: !7813)
!7823 = !DILocation(line: 4235, column: 3, scope: !7779)
!7824 = !DILocation(line: 4238, column: 3, scope: !7791)
!7825 = !DILocation(line: 4238, column: 3, scope: !7790)
!7826 = !DILocation(line: 4240, column: 40, scope: !7789)
!7827 = !DILocation(line: 4240, column: 21, scope: !7789)
!7828 = !DILocation(line: 4240, column: 51, scope: !7789)
!7829 = !DILocation(line: 0, scope: !7789)
!7830 = !DILocation(line: 4241, column: 7, scope: !7795)
!7831 = !DILocation(line: 4241, column: 7, scope: !7794)
!7832 = !DILocation(line: 4243, column: 21, scope: !7793)
!7833 = !DILocation(line: 0, scope: !7793)
!7834 = !DILocation(line: 4244, column: 34, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7793, file: !3, line: 4244, column: 8)
!7836 = !DILocation(line: 4244, column: 8, scope: !7835)
!7837 = !DILocation(line: 4244, column: 8, scope: !7793)
!7838 = !DILocation(line: 4245, column: 46, scope: !7835)
!7839 = !DILocation(line: 4245, column: 27, scope: !7835)
!7840 = !DILocation(line: 4245, column: 60, scope: !7835)
!7841 = !DILocation(line: 4246, column: 6, scope: !7835)
!7842 = !DILocation(line: 4245, column: 6, scope: !7835)
!7843 = distinct !{!7843, !7830, !7844}
!7844 = !DILocation(line: 4247, column: 2, scope: !7795)
!7845 = distinct !{!7845, !7824, !7846}
!7846 = !DILocation(line: 4248, column: 5, scope: !7791)
!7847 = !DILocation(line: 4250, column: 3, scope: !7848)
!7848 = distinct !DILexicalBlock(scope: !7779, file: !3, line: 4250, column: 3)
!7849 = !DILocation(line: 0, scope: !7848)
!7850 = !DILocation(line: 4251, column: 5, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 4250, column: 3)
!7852 = !DILocation(line: 4250, column: 3, scope: !7851)
!7853 = distinct !{!7853, !7847, !7854}
!7854 = !DILocation(line: 4251, column: 5, scope: !7848)
!7855 = !DILocation(line: 4252, column: 3, scope: !7779)
!7856 = !DILocation(line: 4253, column: 1, scope: !7779)
!7857 = distinct !DISubprogram(name: "df_md_init", scope: !3, file: !3, line: 4298, type: !2071, scopeLine: 4299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7858)
!7858 = !{!7859, !7860, !7861, !7862}
!7859 = !DILocalVariable(name: "all_blocks", arg: 1, scope: !7857, file: !3, line: 4298, type: !758)
!7860 = !DILocalVariable(name: "bb_index", scope: !7857, file: !3, line: 4300, type: !7)
!7861 = !DILocalVariable(name: "bi", scope: !7857, file: !3, line: 4301, type: !4126)
!7862 = !DILocalVariable(name: "bb_info", scope: !7863, file: !3, line: 4305, type: !2049)
!7863 = distinct !DILexicalBlock(scope: !7864, file: !3, line: 4304, column: 5)
!7864 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 4303, column: 3)
!7865 = distinct !DILexicalBlock(scope: !7857, file: !3, line: 4303, column: 3)
!7866 = !DILocation(line: 0, scope: !7857)
!7867 = !DILocation(line: 4300, column: 3, scope: !7857)
!7868 = !DILocation(line: 4301, column: 3, scope: !7857)
!7869 = !DILocation(line: 4303, column: 3, scope: !7865)
!7870 = !DILocation(line: 4303, column: 3, scope: !7864)
!7871 = !DILocation(line: 4305, column: 58, scope: !7863)
!7872 = !DILocation(line: 4305, column: 39, scope: !7863)
!7873 = !DILocation(line: 0, scope: !7863)
!7874 = !DILocation(line: 4307, column: 29, scope: !7863)
!7875 = !DILocation(line: 4307, column: 42, scope: !7863)
!7876 = !DILocation(line: 4307, column: 7, scope: !7863)
!7877 = !DILocation(line: 4308, column: 32, scope: !7863)
!7878 = !DILocation(line: 4308, column: 7, scope: !7863)
!7879 = distinct !{!7879, !7869, !7880}
!7880 = !DILocation(line: 4309, column: 5, scope: !7865)
!7881 = !DILocation(line: 4310, column: 1, scope: !7857)
!7882 = distinct !DISubprogram(name: "df_md_confluence_0", scope: !3, file: !3, line: 4313, type: !2128, scopeLine: 4314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7883)
!7883 = !{!7884, !7885}
!7884 = !DILocalVariable(name: "bb", arg: 1, scope: !7882, file: !3, line: 4313, type: !1307)
!7885 = !DILocalVariable(name: "bb_info", scope: !7882, file: !3, line: 4315, type: !2049)
!7886 = !DILocation(line: 0, scope: !7882)
!7887 = !DILocation(line: 4315, column: 58, scope: !7882)
!7888 = !DILocation(line: 4315, column: 35, scope: !7882)
!7889 = !DILocation(line: 4316, column: 25, scope: !7882)
!7890 = !DILocation(line: 4316, column: 38, scope: !7882)
!7891 = !DILocation(line: 4316, column: 3, scope: !7882)
!7892 = !DILocation(line: 4317, column: 1, scope: !7882)
!7893 = distinct !DISubprogram(name: "df_md_confluence_n", scope: !3, file: !3, line: 4322, type: !2133, scopeLine: 4323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7894)
!7894 = !{!7895, !7896, !7897}
!7895 = !DILocalVariable(name: "e", arg: 1, scope: !7893, file: !3, line: 4322, type: !1324)
!7896 = !DILocalVariable(name: "op1", scope: !7893, file: !3, line: 4324, type: !758)
!7897 = !DILocalVariable(name: "op2", scope: !7893, file: !3, line: 4325, type: !758)
!7898 = !DILocation(line: 0, scope: !7893)
!7899 = !DILocation(line: 4324, column: 38, scope: !7893)
!7900 = !DILocation(line: 4324, column: 44, scope: !7893)
!7901 = !DILocation(line: 4324, column: 16, scope: !7893)
!7902 = !DILocation(line: 4324, column: 52, scope: !7893)
!7903 = !DILocation(line: 4325, column: 38, scope: !7893)
!7904 = !DILocation(line: 4325, column: 43, scope: !7893)
!7905 = !DILocation(line: 4325, column: 16, scope: !7893)
!7906 = !DILocation(line: 4325, column: 51, scope: !7893)
!7907 = !DILocation(line: 4327, column: 10, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 4327, column: 7)
!7909 = !DILocation(line: 4327, column: 16, scope: !7908)
!7910 = !DILocation(line: 4327, column: 7, scope: !7893)
!7911 = !DILocation(line: 4330, column: 16, scope: !7912)
!7912 = distinct !DILexicalBlock(scope: !7893, file: !3, line: 4330, column: 7)
!7913 = !DILocation(line: 4330, column: 7, scope: !7893)
!7914 = !DILocation(line: 4331, column: 42, scope: !7912)
!7915 = !DILocation(line: 4331, column: 5, scope: !7912)
!7916 = !DILocation(line: 4333, column: 5, scope: !7912)
!7917 = !DILocation(line: 4334, column: 1, scope: !7893)
!7918 = distinct !DISubprogram(name: "df_md_transfer_function", scope: !3, file: !3, line: 4274, type: !2138, scopeLine: 4275, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7919)
!7919 = !{!7920, !7921, !7922, !7923, !7924, !7925, !7926}
!7920 = !DILocalVariable(name: "bb_index", arg: 1, scope: !7918, file: !3, line: 4274, type: !750)
!7921 = !DILocalVariable(name: "bb", scope: !7918, file: !3, line: 4276, type: !1307)
!7922 = !DILocalVariable(name: "bb_info", scope: !7918, file: !3, line: 4277, type: !2049)
!7923 = !DILocalVariable(name: "in", scope: !7918, file: !3, line: 4278, type: !758)
!7924 = !DILocalVariable(name: "out", scope: !7918, file: !3, line: 4279, type: !758)
!7925 = !DILocalVariable(name: "gen", scope: !7918, file: !3, line: 4280, type: !758)
!7926 = !DILocalVariable(name: "kill", scope: !7918, file: !3, line: 4281, type: !758)
!7927 = !DILocation(line: 0, scope: !7918)
!7928 = !DILocation(line: 4276, column: 20, scope: !7918)
!7929 = !DILocation(line: 4277, column: 35, scope: !7918)
!7930 = !DILocation(line: 4278, column: 24, scope: !7918)
!7931 = !DILocation(line: 4279, column: 25, scope: !7918)
!7932 = !DILocation(line: 4280, column: 25, scope: !7918)
!7933 = !DILocation(line: 4281, column: 26, scope: !7918)
!7934 = !DILocation(line: 4286, column: 15, scope: !7918)
!7935 = !DILocation(line: 4286, column: 35, scope: !7918)
!7936 = !DILocation(line: 4286, column: 3, scope: !7918)
!7937 = !DILocation(line: 4290, column: 24, scope: !7918)
!7938 = !DILocation(line: 4290, column: 3, scope: !7918)
!7939 = !DILocation(line: 4292, column: 37, scope: !7918)
!7940 = !DILocation(line: 4292, column: 10, scope: !7918)
!7941 = !DILocation(line: 4292, column: 3, scope: !7918)
!7942 = distinct !DISubprogram(name: "df_md_free", scope: !3, file: !3, line: 4339, type: !2145, scopeLine: 4340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7943)
!7943 = !{!7944, !7945}
!7944 = !DILocalVariable(name: "i", scope: !7942, file: !3, line: 4341, type: !7)
!7945 = !DILocalVariable(name: "bb_info", scope: !7946, file: !3, line: 4344, type: !2049)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 4343, column: 5)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 4342, column: 3)
!7948 = distinct !DILexicalBlock(scope: !7942, file: !3, line: 4342, column: 3)
!7949 = !DILocation(line: 0, scope: !7942)
!7950 = !DILocation(line: 4342, column: 8, scope: !7948)
!7951 = !DILocation(line: 0, scope: !7948)
!7952 = !DILocation(line: 4342, column: 19, scope: !7947)
!7953 = !DILocation(line: 4342, column: 26, scope: !7947)
!7954 = !DILocation(line: 4342, column: 17, scope: !7947)
!7955 = !DILocation(line: 4342, column: 3, scope: !7948)
!7956 = !DILocation(line: 4344, column: 39, scope: !7946)
!7957 = !DILocation(line: 0, scope: !7946)
!7958 = !DILocation(line: 4345, column: 11, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 4345, column: 11)
!7960 = !DILocation(line: 4345, column: 11, scope: !7946)
!7961 = !DILocation(line: 4347, column: 4, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 4346, column: 2)
!7963 = !DILocation(line: 4348, column: 4, scope: !7962)
!7964 = !DILocation(line: 4349, column: 4, scope: !7962)
!7965 = !DILocation(line: 4350, column: 4, scope: !7962)
!7966 = !DILocation(line: 4351, column: 4, scope: !7962)
!7967 = !DILocation(line: 4352, column: 2, scope: !7962)
!7968 = !DILocation(line: 4342, column: 44, scope: !7947)
!7969 = !DILocation(line: 4342, column: 3, scope: !7947)
!7970 = distinct !{!7970, !7955, !7971}
!7971 = !DILocation(line: 4353, column: 5, scope: !7948)
!7972 = !DILocation(line: 4355, column: 3, scope: !7942)
!7973 = !DILocation(line: 4356, column: 20, scope: !7942)
!7974 = !DILocation(line: 4356, column: 27, scope: !7942)
!7975 = !DILocation(line: 4356, column: 3, scope: !7942)
!7976 = !DILocation(line: 4358, column: 3, scope: !7942)
!7977 = !DILocation(line: 4358, column: 10, scope: !7942)
!7978 = !DILocation(line: 4358, column: 26, scope: !7942)
!7979 = !DILocation(line: 4359, column: 9, scope: !7942)
!7980 = !DILocation(line: 4359, column: 16, scope: !7942)
!7981 = !DILocation(line: 4359, column: 3, scope: !7942)
!7982 = !DILocation(line: 4360, column: 9, scope: !7942)
!7983 = !DILocation(line: 4360, column: 3, scope: !7942)
!7984 = !DILocation(line: 4361, column: 1, scope: !7942)
!7985 = distinct !DISubprogram(name: "df_md_top_dump", scope: !3, file: !3, line: 4367, type: !2207, scopeLine: 4368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7986)
!7986 = !{!7987, !7988, !7989}
!7987 = !DILocalVariable(name: "bb", arg: 1, scope: !7985, file: !3, line: 4367, type: !1307)
!7988 = !DILocalVariable(name: "file", arg: 2, scope: !7985, file: !3, line: 4367, type: !2154)
!7989 = !DILocalVariable(name: "bb_info", scope: !7985, file: !3, line: 4369, type: !2049)
!7990 = !DILocation(line: 0, scope: !7985)
!7991 = !DILocation(line: 4369, column: 58, scope: !7985)
!7992 = !DILocation(line: 4369, column: 35, scope: !7985)
!7993 = !DILocation(line: 4370, column: 8, scope: !7994)
!7994 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 4370, column: 7)
!7995 = !DILocation(line: 4370, column: 16, scope: !7994)
!7996 = !DILocation(line: 4370, column: 29, scope: !7994)
!7997 = !DILocation(line: 4370, column: 20, scope: !7994)
!7998 = !DILocation(line: 4370, column: 7, scope: !7985)
!7999 = !DILocation(line: 4373, column: 3, scope: !7985)
!8000 = !DILocation(line: 4374, column: 35, scope: !7985)
!8001 = !DILocation(line: 4374, column: 3, scope: !7985)
!8002 = !DILocation(line: 4375, column: 3, scope: !7985)
!8003 = !DILocation(line: 4376, column: 35, scope: !7985)
!8004 = !DILocation(line: 4376, column: 3, scope: !7985)
!8005 = !DILocation(line: 4377, column: 3, scope: !7985)
!8006 = !DILocation(line: 4378, column: 35, scope: !7985)
!8007 = !DILocation(line: 4378, column: 3, scope: !7985)
!8008 = !DILocation(line: 4379, column: 3, scope: !7985)
!8009 = !DILocation(line: 4380, column: 35, scope: !7985)
!8010 = !DILocation(line: 4380, column: 3, scope: !7985)
!8011 = !DILocation(line: 4381, column: 1, scope: !7985)
!8012 = distinct !DISubprogram(name: "df_md_bottom_dump", scope: !3, file: !3, line: 4386, type: !2207, scopeLine: 4387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8013)
!8013 = !{!8014, !8015, !8016}
!8014 = !DILocalVariable(name: "bb", arg: 1, scope: !8012, file: !3, line: 4386, type: !1307)
!8015 = !DILocalVariable(name: "file", arg: 2, scope: !8012, file: !3, line: 4386, type: !2154)
!8016 = !DILocalVariable(name: "bb_info", scope: !8012, file: !3, line: 4388, type: !2049)
!8017 = !DILocation(line: 0, scope: !8012)
!8018 = !DILocation(line: 4388, column: 58, scope: !8012)
!8019 = !DILocation(line: 4388, column: 35, scope: !8012)
!8020 = !DILocation(line: 4389, column: 8, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 4389, column: 7)
!8022 = !DILocation(line: 4389, column: 16, scope: !8021)
!8023 = !DILocation(line: 4389, column: 29, scope: !8021)
!8024 = !DILocation(line: 4389, column: 20, scope: !8021)
!8025 = !DILocation(line: 4389, column: 7, scope: !8012)
!8026 = !DILocation(line: 4392, column: 3, scope: !8012)
!8027 = !DILocation(line: 4393, column: 35, scope: !8012)
!8028 = !DILocation(line: 4393, column: 3, scope: !8012)
!8029 = !DILocation(line: 4394, column: 1, scope: !8012)
!8030 = distinct !DISubprogram(name: "df_md_get_bb_info", scope: !385, file: !385, line: 1061, type: !8031, scopeLine: 1062, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8033)
!8031 = !DISubroutineType(types: !8032)
!8032 = !{!2049, !7}
!8033 = !{!8034}
!8034 = !DILocalVariable(name: "index", arg: 1, scope: !8030, file: !385, line: 1061, type: !7)
!8035 = !DILocation(line: 0, scope: !8030)
!8036 = !DILocation(line: 1063, column: 15, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8030, file: !385, line: 1063, column: 7)
!8038 = !DILocation(line: 1063, column: 22, scope: !8037)
!8039 = !DILocation(line: 1063, column: 13, scope: !8037)
!8040 = !DILocation(line: 1063, column: 7, scope: !8030)
!8041 = !DILocation(line: 1064, column: 44, scope: !8037)
!8042 = !DILocation(line: 1064, column: 37, scope: !8037)
!8043 = !DILocation(line: 1064, column: 5, scope: !8037)
!8044 = !DILocation(line: 0, scope: !8037)
!8045 = !DILocation(line: 1067, column: 1, scope: !8030)
!8046 = distinct !DISubprogram(name: "df_md_set_bb_info", scope: !3, file: !3, line: 4027, type: !8047, scopeLine: 4029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8049)
!8047 = !DISubroutineType(types: !8048)
!8048 = !{null, !7, !2049}
!8049 = !{!8050, !8051}
!8050 = !DILocalVariable(name: "index", arg: 1, scope: !8046, file: !3, line: 4027, type: !7)
!8051 = !DILocalVariable(name: "bb_info", arg: 2, scope: !8046, file: !3, line: 4028, type: !2049)
!8052 = !DILocation(line: 0, scope: !8046)
!8053 = !DILocation(line: 4030, column: 3, scope: !8046)
!8054 = !DILocation(line: 4031, column: 3, scope: !8046)
!8055 = !DILocation(line: 4032, column: 3, scope: !8046)
!8056 = !DILocation(line: 4032, column: 10, scope: !8046)
!8057 = !DILocation(line: 4032, column: 28, scope: !8046)
!8058 = !DILocation(line: 4033, column: 1, scope: !8046)
!8059 = distinct !DISubprogram(name: "df_md_bb_local_compute", scope: !3, file: !3, line: 4185, type: !3011, scopeLine: 4186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8060)
!8060 = !{!8061, !8062, !8063, !8064, !8065}
!8061 = !DILocalVariable(name: "bb_index", arg: 1, scope: !8059, file: !3, line: 4185, type: !7)
!8062 = !DILocalVariable(name: "bb", scope: !8059, file: !3, line: 4187, type: !1307)
!8063 = !DILocalVariable(name: "bb_info", scope: !8059, file: !3, line: 4188, type: !2049)
!8064 = !DILocalVariable(name: "insn", scope: !8059, file: !3, line: 4189, type: !836)
!8065 = !DILocalVariable(name: "uid", scope: !8066, file: !3, line: 4199, type: !7)
!8066 = distinct !DILexicalBlock(scope: !8067, file: !3, line: 4198, column: 5)
!8067 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 4197, column: 3)
!8068 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 4197, column: 3)
!8069 = !DILocation(line: 0, scope: !8059)
!8070 = !DILocation(line: 4187, column: 20, scope: !8059)
!8071 = !DILocation(line: 4188, column: 35, scope: !8059)
!8072 = !DILocation(line: 4192, column: 9, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 4192, column: 7)
!8074 = !DILocation(line: 4192, column: 13, scope: !8073)
!8075 = !DILocation(line: 4192, column: 30, scope: !8073)
!8076 = !DILocation(line: 4192, column: 7, scope: !8059)
!8077 = !DILocation(line: 4194, column: 41, scope: !8073)
!8078 = !DILocation(line: 4193, column: 5, scope: !8073)
!8079 = !DILocation(line: 4197, column: 3, scope: !8068)
!8080 = !DILocation(line: 0, scope: !8068)
!8081 = !DILocation(line: 4197, column: 3, scope: !8067)
!8082 = !DILocation(line: 4199, column: 26, scope: !8066)
!8083 = !DILocation(line: 0, scope: !8066)
!8084 = !DILocation(line: 4200, column: 12, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 4200, column: 11)
!8086 = !DILocation(line: 4200, column: 11, scope: !8066)
!8087 = !DILocation(line: 4203, column: 52, scope: !8066)
!8088 = !DILocation(line: 4203, column: 7, scope: !8066)
!8089 = !DILocation(line: 4204, column: 5, scope: !8067)
!8090 = distinct !{!8090, !8079, !8091}
!8091 = !DILocation(line: 4204, column: 5, scope: !8068)
!8092 = !DILocation(line: 4206, column: 9, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 4206, column: 7)
!8094 = !DILocation(line: 4206, column: 13, scope: !8093)
!8095 = !DILocation(line: 4206, column: 30, scope: !8093)
!8096 = !DILocation(line: 4206, column: 7, scope: !8059)
!8097 = !DILocation(line: 4208, column: 41, scope: !8093)
!8098 = !DILocation(line: 4207, column: 5, scope: !8093)
!8099 = !DILocation(line: 4210, column: 1, scope: !8059)
!8100 = distinct !DISubprogram(name: "df_md_bb_local_compute_process_def", scope: !3, file: !3, line: 4146, type: !8101, scopeLine: 4149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !8103)
!8101 = !DISubroutineType(types: !8102)
!8102 = !{null, !2049, !1948, !750}
!8103 = !{!8104, !8105, !8106, !8107, !8108}
!8104 = !DILocalVariable(name: "bb_info", arg: 1, scope: !8100, file: !3, line: 4146, type: !2049)
!8105 = !DILocalVariable(name: "def_rec", arg: 2, scope: !8100, file: !3, line: 4147, type: !1948)
!8106 = !DILocalVariable(name: "top_flag", arg: 3, scope: !8100, file: !3, line: 4148, type: !750)
!8107 = !DILocalVariable(name: "def", scope: !8100, file: !3, line: 4150, type: !825)
!8108 = !DILocalVariable(name: "dregno", scope: !8109, file: !3, line: 4155, type: !7)
!8109 = distinct !DILexicalBlock(scope: !8100, file: !3, line: 4154, column: 5)
!8110 = !DILocation(line: 0, scope: !8100)
!8111 = !DILocation(line: 4151, column: 17, scope: !8100)
!8112 = !DILocation(line: 4151, column: 3, scope: !8100)
!8113 = !DILocation(line: 0, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 4164, column: 10)
!8115 = distinct !DILexicalBlock(scope: !8116, file: !3, line: 4162, column: 12)
!8116 = distinct !DILexicalBlock(scope: !8117, file: !3, line: 4161, column: 6)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 4160, column: 15)
!8118 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 4159, column: 2)
!8119 = distinct !DILexicalBlock(scope: !8109, file: !3, line: 4156, column: 11)
!8120 = !DILocation(line: 4153, column: 3, scope: !8100)
!8121 = !DILocation(line: 4153, column: 25, scope: !8100)
!8122 = !DILocation(line: 4153, column: 17, scope: !8100)
!8123 = !DILocation(line: 4153, column: 29, scope: !8100)
!8124 = !DILocation(line: 4155, column: 29, scope: !8109)
!8125 = !DILocation(line: 0, scope: !8109)
!8126 = !DILocation(line: 4156, column: 15, scope: !8119)
!8127 = !DILocation(line: 4156, column: 19, scope: !8119)
!8128 = !DILocation(line: 4156, column: 36, scope: !8119)
!8129 = !DILocation(line: 4157, column: 17, scope: !8119)
!8130 = !DILocation(line: 4157, column: 6, scope: !8119)
!8131 = !DILocation(line: 4158, column: 20, scope: !8119)
!8132 = !DILocation(line: 4158, column: 39, scope: !8119)
!8133 = !DILocation(line: 4158, column: 16, scope: !8119)
!8134 = !DILocation(line: 4156, column: 11, scope: !8109)
!8135 = !DILocation(line: 4160, column: 30, scope: !8117)
!8136 = !DILocation(line: 4160, column: 16, scope: !8117)
!8137 = !DILocation(line: 4160, column: 15, scope: !8118)
!8138 = !DILocation(line: 4162, column: 12, scope: !8115)
!8139 = !DILocation(line: 4163, column: 12, scope: !8115)
!8140 = !DILocation(line: 4162, column: 12, scope: !8116)
!8141 = !DILocation(line: 4165, column: 37, scope: !8114)
!8142 = !DILocation(line: 4165, column: 12, scope: !8114)
!8143 = !DILocation(line: 4166, column: 39, scope: !8114)
!8144 = !DILocation(line: 4166, column: 12, scope: !8114)
!8145 = !DILocation(line: 4167, column: 10, scope: !8114)
!8146 = !DILocation(line: 4172, column: 28, scope: !8147)
!8147 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 4169, column: 10)
!8148 = !DILocation(line: 4172, column: 12, scope: !8147)
!8149 = !DILocation(line: 4173, column: 37, scope: !8147)
!8150 = !DILocation(line: 4173, column: 12, scope: !8147)
!8151 = !DILocation(line: 4174, column: 39, scope: !8147)
!8152 = !DILocation(line: 4174, column: 12, scope: !8147)
!8153 = distinct !{!8153, !8120, !8154}
!8154 = !DILocation(line: 4178, column: 5, scope: !8100)
!8155 = !DILocation(line: 4179, column: 1, scope: !8100)
