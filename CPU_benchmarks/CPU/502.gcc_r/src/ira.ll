; ModuleID = 'ira.bc'
source_filename = "ira.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ira_allocno = type { i32, i32, i32, i32, %struct.rtx_def*, %struct.ira_allocno*, %struct.ira_loop_tree_node*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ira_allocno_copy*, %struct.ira_allocno*, %struct.ira_allocno*, %struct.ira_allocno*, %struct.ira_allocno*, %struct.ira_allocno_live_range*, i32, i32, i8*, i32, i32, i64, i64, i32, i32, i32, i16, %struct.ira_allocno*, i32*, i32*, i32*, i32*, i32, i32, %struct.ira_allocno*, %struct.ira_allocno*, i32 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.ira_loop_tree_node = type { %struct.basic_block_def*, %struct.loop*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node*, i32, i8, %struct.ira_allocno**, i8, [27 x i32], %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.gimple_seq_d = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type { %struct.eh_region_d*, %struct.VEC_eh_region_gc*, %struct.VEC_eh_landing_pad_gc*, %struct.htab*, %struct.VEC_tree_gc*, %union.eh_status_u }
%struct.eh_region_d = type { %struct.eh_region_d*, %struct.eh_region_d*, %struct.eh_region_d*, i32, i32, %union.eh_region_u, %struct.eh_landing_pad_d*, %struct.rtx_def*, %struct.rtx_def*, i8 }
%union.eh_region_u = type { %struct.eh_region_u_allowed }
%struct.eh_region_u_allowed = type { %union.tree_node*, %union.tree_node*, i32 }
%struct.eh_landing_pad_d = type { %struct.eh_landing_pad_d*, %struct.eh_region_d*, %union.tree_node*, %struct.rtx_def*, i32 }
%struct.VEC_eh_region_gc = type { %struct.VEC_eh_region_base }
%struct.VEC_eh_region_base = type { i32, i32, [1 x %struct.eh_region_d*] }
%struct.VEC_eh_landing_pad_gc = type { %struct.VEC_eh_landing_pad_base }
%struct.VEC_eh_landing_pad_base = type { i32, i32, [1 x %struct.eh_landing_pad_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%union.eh_status_u = type { %struct.VEC_tree_gc* }
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_df = type opaque
%struct.loops = type { i32, %struct.VEC_loop_p_gc*, %struct.htab*, %struct.loop* }
%struct.VEC_loop_p_gc = type { %struct.VEC_loop_p_base }
%struct.VEC_loop_p_base = type { i32, i32, [1 x %struct.loop*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.loop = type { i32, i32, %struct.basic_block_def*, %struct.basic_block_def*, %struct.lpt_decision, i32, i32, %struct.VEC_loop_p_gc*, %struct.loop*, %struct.loop*, i8*, %union.tree_node*, %struct.double_int, %struct.double_int, i8, i8, i32, %struct.nb_iter_bound*, %struct.loop_exit*, i8, %union.tree_node* }
%struct.lpt_decision = type { i32, i32 }
%struct.double_int = type { i64, i64 }
%struct.nb_iter_bound = type { %union.gimple_statement_d*, %struct.double_int, i8, %struct.nb_iter_bound* }
%union.gimple_statement_d = type opaque
%struct.loop_exit = type { %struct.edge_def*, %struct.loop_exit*, %struct.loop_exit*, %struct.loop_exit* }
%struct.ira_allocno_copy = type { i32, %struct.ira_allocno*, %struct.ira_allocno*, i32, i8, %struct.rtx_def*, %struct.ira_allocno_copy*, %struct.ira_allocno_copy*, %struct.ira_allocno_copy*, %struct.ira_allocno_copy*, %struct.ira_loop_tree_node* }
%struct.ira_allocno_live_range = type { %struct.ira_allocno*, i32, i32, %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range*, %struct.ira_allocno_live_range* }
%struct.anon = type { i32, i32 }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.ira_spilled_reg_stack_slot = type { %struct.bitmap_head_def, %struct.rtx_def*, i32 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.equivalence = type { %struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i32, i32, i8 }
%struct.reg_info_t = type { i32, i32, i32, i32, i32, i32, i32 }
%struct.regstat_n_sets_and_refs_t = type { i32, i32 }
%struct.insn_chain = type { %struct.insn_chain*, %struct.insn_chain*, %struct.insn_chain*, %struct.rtx_def*, i32, i8, %struct.bitmap_head_def, %struct.bitmap_head_def, %struct.reload*, i32, i64 }
%struct.reload = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.timespec = type { i64, i64 }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.df_live_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }
%struct.ira_allocno_iterator = type { i32 }
%struct.bitmap_iterator = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, i64 }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }

@stdout = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@stdin = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@ira_bitmap_obstack = internal global %struct.bitmap_obstack zeroinitializer, align 8, !dbg !0
@.str = private unnamed_addr constant [13 x i8] c"Disposition:\00", align 1
@ira_regno_allocno_map = external dso_local local_unnamed_addr global %struct.ira_allocno**, align 8
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.2 = private unnamed_addr constant [11 x i8] c" %4d:r%-4d\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"b%-3d\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"l%-3d\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c" %3d\00", align 1
@.str.6 = private unnamed_addr constant [5 x i8] c" mem\00", align 1
@stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@move_cost = external dso_local local_unnamed_addr global [87 x [27 x i16]*], align 16
@ira_register_move_cost = common dso_local local_unnamed_addr global [87 x [27 x i16]*] zeroinitializer, align 16, !dbg !2303
@ira_may_move_in_cost = common dso_local local_unnamed_addr global [87 x [27 x i16]*] zeroinitializer, align 16, !dbg !2307
@may_move_in_cost = external dso_local local_unnamed_addr global [87 x [27 x i16]*], align 16
@ira_may_move_out_cost = common dso_local local_unnamed_addr global [87 x [27 x i16]*] zeroinitializer, align 16, !dbg !2309
@may_move_out_cost = external dso_local local_unnamed_addr global [87 x [27 x i16]*], align 16
@ira_class_subset_p = common dso_local local_unnamed_addr global [27 x [27 x i32]] zeroinitializer, align 16, !dbg !2311
@flag_omit_frame_pointer = external dso_local local_unnamed_addr global i32, align 4
@ira_setup_eliminable_regset.eliminables = internal unnamed_addr constant [4 x %struct.anon] [%struct.anon { i32 16, i32 7 }, %struct.anon { i32 16, i32 6 }, %struct.anon { i32 20, i32 7 }, %struct.anon { i32 20, i32 6 }], align 16, !dbg !2141
@cfun = external dso_local local_unnamed_addr global %struct.function*, align 8
@flag_stack_check = external dso_local local_unnamed_addr global i32, align 4
@x_rtl = external dso_local local_unnamed_addr global %struct.rtl_data, align 8
@targetm = external dso_local local_unnamed_addr global %struct.gcc_target, align 8
@no_unit_alloc_regs = internal unnamed_addr global i64 0, align 8, !dbg !2315
@ira_no_alloc_regs = common dso_local local_unnamed_addr global i64 0, align 8, !dbg !2367
@eliminable_regset = common dso_local local_unnamed_addr global i64 0, align 8, !dbg !2290
@.str.7 = private unnamed_addr constant [30 x i8] c"%s cannot be used in asm here\00", align 1
@reg_names = external dso_local local_unnamed_addr global [53 x i8*], align 16
@.str.8 = private unnamed_addr constant [4 x i8] c"ira\00", align 1
@pass_ira = dso_local local_unnamed_addr global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.8, i32 0, i32 0), i8 ()* @gate_ira, i32 ()* @rest_of_handle_ira, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3 } }, align 8, !dbg !2161
@internal_flag_ira_verbose = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2189
@ira_dump_file = common dso_local local_unnamed_addr global %struct._IO_FILE* null, align 8, !dbg !2191
@allocno_pool = common dso_local local_unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2243
@copy_pool = common dso_local local_unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2266
@allocno_live_range_pool = common dso_local local_unnamed_addr global %struct.alloc_pool_def* null, align 8, !dbg !2268
@ira_spilled_reg_stack_slots_num = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2270
@ira_spilled_reg_stack_slots = common dso_local local_unnamed_addr global %struct.ira_spilled_reg_stack_slot* null, align 8, !dbg !2272
@ira_overall_cost = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2274
@ira_reg_cost = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2276
@ira_mem_cost = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2278
@ira_load_cost = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2280
@ira_store_cost = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2282
@ira_shuffle_cost = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2284
@ira_move_loops_num = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2286
@ira_additional_jumps_num = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2288
@ira_reg_mode_hard_regset = common dso_local local_unnamed_addr global [53 x [87 x i64]] zeroinitializer, align 16, !dbg !2292
@ira_memory_move_cost = common dso_local local_unnamed_addr global [87 x [27 x [2 x i16]]] zeroinitializer, align 16, !dbg !2298
@ira_class_hard_regs = common dso_local local_unnamed_addr global [27 x [53 x i16]] zeroinitializer, align 16, !dbg !2317
@ira_class_hard_regs_num = common dso_local local_unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !2321
@ira_class_hard_reg_index = common dso_local local_unnamed_addr global [27 x [53 x i16]] zeroinitializer, align 16, !dbg !2324
@ira_available_class_regs = common dso_local global [27 x i32] zeroinitializer, align 16, !dbg !2326
@ira_reg_class_cover_size = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2328
@ira_reg_class_cover = common dso_local local_unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !2330
@ira_important_classes_num = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2333
@ira_important_classes = common dso_local global [27 x i32] zeroinitializer, align 16, !dbg !2335
@ira_important_class_nums = common dso_local local_unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !2337
@ira_class_translate = common dso_local local_unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !2339
@ira_reg_class_intersect = common dso_local local_unnamed_addr global [27 x [27 x i32]] zeroinitializer, align 16, !dbg !2341
@ira_reg_classes_intersect_p = common dso_local local_unnamed_addr global [27 x [27 x i8]] zeroinitializer, align 16, !dbg !2344
@ira_reg_class_super_classes = common dso_local local_unnamed_addr global [27 x [27 x i32]] zeroinitializer, align 16, !dbg !2347
@ira_reg_class_union = common dso_local local_unnamed_addr global [27 x [27 x i32]] zeroinitializer, align 16, !dbg !2349
@ira_hard_regno_cover_class = common dso_local local_unnamed_addr global [53 x i32] zeroinitializer, align 16, !dbg !2351
@ira_reg_class_nregs = common dso_local local_unnamed_addr global [27 x [87 x i32]] zeroinitializer, align 16, !dbg !2355
@ira_max_nregs = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2359
@prohibited_class_mode_regs = common dso_local local_unnamed_addr global [27 x [87 x i64]] zeroinitializer, align 16, !dbg !2361
@ira_prohibited_mode_move_regs = common dso_local local_unnamed_addr global [87 x i64] zeroinitializer, align 16, !dbg !2364
@ira_reg_equiv_len = common dso_local local_unnamed_addr global i32 0, align 4, !dbg !2369
@ira_reg_equiv_invariant_p = common dso_local local_unnamed_addr global i8* null, align 8, !dbg !2371
@ira_reg_equiv_const = common dso_local local_unnamed_addr global %struct.rtx_def** null, align 8, !dbg !2373
@reg_renumber = common dso_local local_unnamed_addr global i16* null, align 8, !dbg !2375
@ira_loops = common dso_local global %struct.loops zeroinitializer, align 8, !dbg !2378
@ira_conflicts_p = common dso_local local_unnamed_addr global i8 0, align 1, !dbg !2380
@print_class_cover.reg_class_names = internal unnamed_addr constant [27 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0)], align 16, !dbg !2382
@.str.9 = private unnamed_addr constant [8 x i8] c"NO_REGS\00", align 1
@.str.10 = private unnamed_addr constant [5 x i8] c"AREG\00", align 1
@.str.11 = private unnamed_addr constant [5 x i8] c"DREG\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"CREG\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"BREG\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"SIREG\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"DIREG\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"AD_REGS\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"CLOBBERED_REGS\00", align 1
@.str.18 = private unnamed_addr constant [7 x i8] c"Q_REGS\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"NON_Q_REGS\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"INDEX_REGS\00", align 1
@.str.21 = private unnamed_addr constant [12 x i8] c"LEGACY_REGS\00", align 1
@.str.22 = private unnamed_addr constant [13 x i8] c"GENERAL_REGS\00", align 1
@.str.23 = private unnamed_addr constant [11 x i8] c"FP_TOP_REG\00", align 1
@.str.24 = private unnamed_addr constant [14 x i8] c"FP_SECOND_REG\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"FLOAT_REGS\00", align 1
@.str.26 = private unnamed_addr constant [14 x i8] c"SSE_FIRST_REG\00", align 1
@.str.27 = private unnamed_addr constant [9 x i8] c"SSE_REGS\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"MMX_REGS\00", align 1
@.str.29 = private unnamed_addr constant [16 x i8] c"FP_TOP_SSE_REGS\00", align 1
@.str.30 = private unnamed_addr constant [19 x i8] c"FP_SECOND_SSE_REGS\00", align 1
@.str.31 = private unnamed_addr constant [15 x i8] c"FLOAT_SSE_REGS\00", align 1
@.str.32 = private unnamed_addr constant [15 x i8] c"FLOAT_INT_REGS\00", align 1
@.str.33 = private unnamed_addr constant [13 x i8] c"INT_SSE_REGS\00", align 1
@.str.34 = private unnamed_addr constant [19 x i8] c"FLOAT_INT_SSE_REGS\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"ALL_REGS\00", align 1
@.str.36 = private unnamed_addr constant [14 x i8] c"Class cover:\0A\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c" %s\00", align 1
@.str.38 = private unnamed_addr constant [21 x i8] c"\0AClass translation:\0A\00", align 1
@.str.39 = private unnamed_addr constant [11 x i8] c" %s -> %s\0A\00", align 1
@hard_regno_nregs = external dso_local local_unnamed_addr global [53 x [87 x i8]], align 16
@fixed_reg_set = external dso_local local_unnamed_addr global i64, align 8
@reg_class_contents = external dso_local local_unnamed_addr global [27 x i64], align 16
@temp_hard_regset = internal unnamed_addr global i64 0, align 8, !dbg !2392
@reg_alloc_order = external dso_local local_unnamed_addr global [53 x i32], align 16
@alloc_reg_class_subclasses = internal unnamed_addr global [27 x [27 x i32]] zeroinitializer, align 16, !dbg !2394
@setup_cover_and_important_classes.classes = internal unnamed_addr global [28 x i32] zeroinitializer, align 16, !dbg !2396
@flag_ira_algorithm = external dso_local local_unnamed_addr global i32, align 4
@.str.40 = private unnamed_addr constant [6 x i8] c"ira.c\00", align 1
@.str.41 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@cover_class_order = internal unnamed_addr global [27 x i32] zeroinitializer, align 16, !dbg !2410
@reg_class_subclasses = external dso_local local_unnamed_addr global [27 x [27 x i32]], align 16
@reg_class_subunion = external dso_local local_unnamed_addr global [27 x [27 x i32]], align 16
@mode_class = external dso_local local_unnamed_addr constant [87 x i8], align 16
@mode_size = external dso_local local_unnamed_addr global [87 x i8], align 16
@df = external dso_local local_unnamed_addr global %struct.df*, align 8
@dump_file = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
@timevar_enable = external dso_local local_unnamed_addr global i8, align 1
@flag_caller_saves = external dso_local local_unnamed_addr global i32, align 4
@flag_ira_verbose = external dso_local local_unnamed_addr global i32, align 4
@optimize = external dso_local local_unnamed_addr global i32, align 4
@warn_clobbered = external dso_local local_unnamed_addr global i32, align 4
@current_function_is_leaf = external dso_local local_unnamed_addr global i32, align 4
@flag_ira_loop_pressure = external dso_local local_unnamed_addr global i32, align 4
@max_regno = external dso_local local_unnamed_addr global i32, align 4
@.str.42 = private unnamed_addr constant [17 x i8] c"Building IRA IR\0A\00", align 1
@flag_ira_region = external dso_local local_unnamed_addr global i32, align 4
@flag_ira_share_spill_slots = external dso_local local_unnamed_addr global i32, align 4
@ira_max_point = external dso_local local_unnamed_addr global i32, align 4
@.str.43 = private unnamed_addr constant [15 x i8] c"Flattening IR\0A\00", align 1
@reg_equiv_memory_loc_vec = external dso_local global %struct.VEC_rtx_gc*, align 8
@reg_equiv_memory_loc = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@reload_completed = external dso_local local_unnamed_addr global i32, align 4
@.str.44 = private unnamed_addr constant [28 x i8] c"+++Overall after reload %d\0A\00", align 1
@ira_prohibited_mode_move_regs_initialized_p = internal unnamed_addr global i1 false, align 1, !dbg !2422
@recorded_label_ref = internal unnamed_addr global i1 false, align 4, !dbg !2423
@reg_equiv = internal unnamed_addr global %struct.equivalence* null, align 8, !dbg !2416
@reg_equiv_init = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@reg_equiv_init_size = external dso_local local_unnamed_addr global i32, align 4
@const_int_rtx = external dso_local local_unnamed_addr global [129 x %struct.rtx_def*], align 16
@reg_info_p = external dso_local local_unnamed_addr global %struct.reg_info_t*, align 8
@regno_reg_rtx = external dso_local local_unnamed_addr global %struct.rtx_def**, align 8
@regstat_n_sets_and_refs = external dso_local local_unnamed_addr global %struct.regstat_n_sets_and_refs_t*, align 8
@flag_var_tracking_assignments = external dso_local local_unnamed_addr global i32, align 4
@equiv_mem = internal unnamed_addr global %struct.rtx_def* null, align 8, !dbg !2418
@equiv_mem_modified = internal unnamed_addr global i1 false, align 4, !dbg !2424
@rtx_format = external dso_local local_unnamed_addr constant [139 x i8*], align 16
@rtx_length = external dso_local local_unnamed_addr constant [139 x i8], align 16
@flag_pic = external dso_local local_unnamed_addr global i32, align 4
@rtx_class = external dso_local local_unnamed_addr constant [139 x i32], align 16
@global_rtl = external dso_local local_unnamed_addr global [11 x %struct.rtx_def*], align 16
@ira_loop_tree_root = external dso_local local_unnamed_addr global %struct.ira_loop_tree_node*, align 8
@.str.45 = private unnamed_addr constant [51 x i8] c"    New r%d: setting preferred %s, alternative %s\0A\00", align 1
@reg_class_names = external dso_local local_unnamed_addr global [0 x i8*], align 8
@ira_allocnos_num = external dso_local local_unnamed_addr global i32, align 4
@ira_allocnos = external dso_local local_unnamed_addr global %struct.ira_allocno**, align 8
@caller_save_needed = external dso_local local_unnamed_addr global i32, align 4
@call_used_reg_set = external dso_local local_unnamed_addr global i64, align 8
@.str.46 = private unnamed_addr constant [61 x i8] c"+++Costs: overall %d, reg %d, mem %d, ld %d, st %d, move %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [39 x i8] c"+++       move loops %d, new jumps %d\0A\00", align 1
@reload_insn_chain = external dso_local local_unnamed_addr global %struct.insn_chain*, align 8
@fixed_regs = external dso_local local_unnamed_addr global [53 x i8], align 16
@bitmap_zero_bits = external dso_local global %struct.bitmap_element_def, align 8
@.str.48 = private unnamed_addr constant [10 x i8] c"insn=%d, \00", align 1
@.str.49 = private unnamed_addr constant [18 x i8] c"live_throughout: \00", align 1
@.str.50 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.51 = private unnamed_addr constant [14 x i8] c"dead_or_set: \00", align 1

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @vprintf(i8* noalias %__fmt, %struct.__va_list_tag* %__arg) local_unnamed_addr #0 !dbg !2429 {
entry:
  call void @llvm.dbg.value(metadata i8* %__fmt, metadata !2442, metadata !DIExpression()), !dbg !2444
  call void @llvm.dbg.value(metadata %struct.__va_list_tag* %__arg, metadata !2443, metadata !DIExpression()), !dbg !2444
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2445
  %call = tail call i32 @vfprintf(%struct._IO_FILE* %0, i8* %__fmt, %struct.__va_list_tag* %__arg) #6, !dbg !2446
  ret i32 %call, !dbg !2447
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @vfprintf(%struct._IO_FILE*, i8*, %struct.__va_list_tag*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar() local_unnamed_addr #0 !dbg !2448 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2452
  %call = tail call i32 @getc(%struct._IO_FILE* %0) #6, !dbg !2453
  ret i32 %call, !dbg !2454
}

declare dso_local i32 @getc(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fgetc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2455 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2459, metadata !DIExpression()), !dbg !2460
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2461
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2461
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2461
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2461
  %cmp = icmp uge i8* %0, %1, !dbg !2461
  %conv1 = zext i1 %cmp to i64, !dbg !2461
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2461
  %tobool = icmp eq i64 %expval, 0, !dbg !2461
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2461

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2461
  br label %cond.end, !dbg !2461

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2461
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2461
  %2 = load i8, i8* %0, align 1, !dbg !2461
  %conv3 = zext i8 %2 to i32, !dbg !2461
  br label %cond.end, !dbg !2461

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2461
  ret i32 %cond, !dbg !2462
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #3

declare dso_local i32 @__uflow(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getc_unlocked(%struct._IO_FILE* %__fp) local_unnamed_addr #0 !dbg !2463 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__fp, metadata !2465, metadata !DIExpression()), !dbg !2466
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 1, !dbg !2467
  %0 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2467
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__fp, i64 0, i32 2, !dbg !2467
  %1 = load i8*, i8** %_IO_read_end, align 8, !dbg !2467
  %cmp = icmp uge i8* %0, %1, !dbg !2467
  %conv1 = zext i1 %cmp to i64, !dbg !2467
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2467
  %tobool = icmp eq i64 %expval, 0, !dbg !2467
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2467

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %__fp) #6, !dbg !2467
  br label %cond.end, !dbg !2467

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2467
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2467
  %2 = load i8, i8* %0, align 1, !dbg !2467
  %conv3 = zext i8 %2 to i32, !dbg !2467
  br label %cond.end, !dbg !2467

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2467
  ret i32 %cond, !dbg !2468
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @getchar_unlocked() local_unnamed_addr #0 !dbg !2469 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdin, align 8, !dbg !2470
  %_IO_read_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 1, !dbg !2470
  %1 = load i8*, i8** %_IO_read_ptr, align 8, !dbg !2470
  %_IO_read_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 2, !dbg !2470
  %2 = load i8*, i8** %_IO_read_end, align 8, !dbg !2470
  %cmp = icmp uge i8* %1, %2, !dbg !2470
  %conv1 = zext i1 %cmp to i64, !dbg !2470
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2470
  %tobool = icmp eq i64 %expval, 0, !dbg !2470
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2470

cond.true:                                        ; preds = %entry
  %call = tail call i32 @__uflow(%struct._IO_FILE* %0) #6, !dbg !2470
  br label %cond.end, !dbg !2470

cond.false:                                       ; preds = %entry
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2470
  store i8* %incdec.ptr, i8** %_IO_read_ptr, align 8, !dbg !2470
  %3 = load i8, i8* %1, align 1, !dbg !2470
  %conv3 = zext i8 %3 to i32, !dbg !2470
  br label %cond.end, !dbg !2470

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv3, %cond.false ], !dbg !2470
  ret i32 %cond, !dbg !2471
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar(i32 %__c) local_unnamed_addr #0 !dbg !2472 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2476, metadata !DIExpression()), !dbg !2477
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2478
  %call = tail call i32 @putc(i32 %__c, %struct._IO_FILE* %0) #6, !dbg !2479
  ret i32 %call, !dbg !2480
}

declare dso_local i32 @putc(i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fputc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2481 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2485, metadata !DIExpression()), !dbg !2487
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2486, metadata !DIExpression()), !dbg !2487
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2488
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2488
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2488
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2488
  %cmp = icmp uge i8* %0, %1, !dbg !2488
  %conv1 = zext i1 %cmp to i64, !dbg !2488
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2488
  %tobool = icmp eq i64 %expval, 0, !dbg !2488
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2488

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2488
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2488
  br label %cond.end, !dbg !2488

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2488
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2488
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2488
  store i8 %conv2, i8* %0, align 1, !dbg !2488
  %conv6 = and i32 %__c, 255, !dbg !2488
  br label %cond.end, !dbg !2488

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2488
  ret i32 %cond, !dbg !2489
}

declare dso_local i32 @__overflow(%struct._IO_FILE*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putc_unlocked(i32 %__c, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2490 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2492, metadata !DIExpression()), !dbg !2494
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2493, metadata !DIExpression()), !dbg !2494
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 5, !dbg !2495
  %0 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2495
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 6, !dbg !2495
  %1 = load i8*, i8** %_IO_write_end, align 8, !dbg !2495
  %cmp = icmp uge i8* %0, %1, !dbg !2495
  %conv1 = zext i1 %cmp to i64, !dbg !2495
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2495
  %tobool = icmp eq i64 %expval, 0, !dbg !2495
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2495

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2495
  %call = tail call i32 @__overflow(%struct._IO_FILE* %__stream, i32 %conv3) #6, !dbg !2495
  br label %cond.end, !dbg !2495

cond.false:                                       ; preds = %entry
  %conv2 = trunc i32 %__c to i8, !dbg !2495
  %incdec.ptr = getelementptr inbounds i8, i8* %0, i64 1, !dbg !2495
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2495
  store i8 %conv2, i8* %0, align 1, !dbg !2495
  %conv6 = and i32 %__c, 255, !dbg !2495
  br label %cond.end, !dbg !2495

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2495
  ret i32 %cond, !dbg !2496
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @putchar_unlocked(i32 %__c) local_unnamed_addr #0 !dbg !2497 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2499, metadata !DIExpression()), !dbg !2500
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !2501
  %_IO_write_ptr = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 5, !dbg !2501
  %1 = load i8*, i8** %_IO_write_ptr, align 8, !dbg !2501
  %_IO_write_end = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %0, i64 0, i32 6, !dbg !2501
  %2 = load i8*, i8** %_IO_write_end, align 8, !dbg !2501
  %cmp = icmp uge i8* %1, %2, !dbg !2501
  %conv1 = zext i1 %cmp to i64, !dbg !2501
  %expval = tail call i64 @llvm.expect.i64(i64 %conv1, i64 0), !dbg !2501
  %tobool = icmp eq i64 %expval, 0, !dbg !2501
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !2501

cond.true:                                        ; preds = %entry
  %conv3 = and i32 %__c, 255, !dbg !2501
  %call = tail call i32 @__overflow(%struct._IO_FILE* %0, i32 %conv3) #6, !dbg !2501
  br label %cond.end, !dbg !2501

cond.false:                                       ; preds = %entry
  %conv4 = trunc i32 %__c to i8, !dbg !2501
  %incdec.ptr = getelementptr inbounds i8, i8* %1, i64 1, !dbg !2501
  store i8* %incdec.ptr, i8** %_IO_write_ptr, align 8, !dbg !2501
  store i8 %conv4, i8* %1, align 1, !dbg !2501
  %conv6 = and i32 %__c, 255, !dbg !2501
  br label %cond.end, !dbg !2501

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %call, %cond.true ], [ %conv6, %cond.false ], !dbg !2501
  ret i32 %cond, !dbg !2502
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @getline(i8** %__lineptr, i64* %__n, %struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2503 {
entry:
  call void @llvm.dbg.value(metadata i8** %__lineptr, metadata !2509, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.value(metadata i64* %__n, metadata !2510, metadata !DIExpression()), !dbg !2512
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2511, metadata !DIExpression()), !dbg !2512
  %call = tail call i64 @__getdelim(i8** %__lineptr, i64* %__n, i32 10, %struct._IO_FILE* %__stream) #6, !dbg !2513
  ret i64 %call, !dbg !2514
}

declare dso_local i64 @__getdelim(i8**, i64*, i32, %struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @feof_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2515 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2517, metadata !DIExpression()), !dbg !2518
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2519
  %0 = load i32, i32* %_flags, align 8, !dbg !2519
  %and = lshr i32 %0, 4, !dbg !2519
  %and.lobit = and i32 %and, 1, !dbg !2519
  ret i32 %and.lobit, !dbg !2520
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @ferror_unlocked(%struct._IO_FILE* %__stream) local_unnamed_addr #0 !dbg !2521 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %__stream, metadata !2523, metadata !DIExpression()), !dbg !2524
  %_flags = getelementptr inbounds %struct._IO_FILE, %struct._IO_FILE* %__stream, i64 0, i32 0, !dbg !2525
  %0 = load i32, i32* %_flags, align 8, !dbg !2525
  %and = lshr i32 %0, 5, !dbg !2525
  %and.lobit = and i32 %and, 1, !dbg !2525
  ret i32 %and.lobit, !dbg !2526
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @tolower(i32 %__c) local_unnamed_addr #0 !dbg !2527 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2530, metadata !DIExpression()), !dbg !2531
  %__c.off = add i32 %__c, 128, !dbg !2532
  %0 = icmp ult i32 %__c.off, 384, !dbg !2532
  br i1 %0, label %cond.true, label %cond.end, !dbg !2532

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_tolower_loc() #6, !dbg !2533
  %1 = load i32*, i32** %call, align 8, !dbg !2534
  %idxprom = sext i32 %__c to i64, !dbg !2535
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2535
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2535
  br label %cond.end, !dbg !2536

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2536
  ret i32 %cond, !dbg !2537
}

declare dso_local i32** @__ctype_tolower_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @toupper(i32 %__c) local_unnamed_addr #0 !dbg !2538 {
entry:
  call void @llvm.dbg.value(metadata i32 %__c, metadata !2540, metadata !DIExpression()), !dbg !2541
  %__c.off = add i32 %__c, 128, !dbg !2542
  %0 = icmp ult i32 %__c.off, 384, !dbg !2542
  br i1 %0, label %cond.true, label %cond.end, !dbg !2542

cond.true:                                        ; preds = %entry
  %call = tail call i32** @__ctype_toupper_loc() #6, !dbg !2543
  %1 = load i32*, i32** %call, align 8, !dbg !2544
  %idxprom = sext i32 %__c to i64, !dbg !2545
  %arrayidx = getelementptr inbounds i32, i32* %1, i64 %idxprom, !dbg !2545
  %2 = load i32, i32* %arrayidx, align 4, !dbg !2545
  br label %cond.end, !dbg !2546

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %__c, %entry ], !dbg !2546
  ret i32 %cond, !dbg !2547
}

declare dso_local i32** @__ctype_toupper_loc() local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @atoi(i8* %__nptr) local_unnamed_addr #0 !dbg !2548 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2553, metadata !DIExpression()), !dbg !2554
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2555
  %conv = trunc i64 %call to i32, !dbg !2556
  ret i32 %conv, !dbg !2557
}

declare dso_local i64 @strtol(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atol(i8* %__nptr) local_unnamed_addr #0 !dbg !2558 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2562, metadata !DIExpression()), !dbg !2563
  %call = tail call i64 @strtol(i8* %__nptr, i8** null, i32 10) #6, !dbg !2564
  ret i64 %call, !dbg !2565
}

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @atoll(i8* %__nptr) local_unnamed_addr #0 !dbg !2566 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2571, metadata !DIExpression()), !dbg !2572
  %call = tail call i64 @strtoll(i8* %__nptr, i8** null, i32 10) #6, !dbg !2573
  ret i64 %call, !dbg !2574
}

declare dso_local i64 @strtoll(i8*, i8**, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i8* @bsearch(i8* %__key, i8* %__base, i64 %__nmemb, i64 %__size, i32 (i8*, i8*)* %__compar) local_unnamed_addr #0 !dbg !2575 {
entry:
  call void @llvm.dbg.value(metadata i8* %__key, metadata !2581, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata i8* %__base, metadata !2582, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2583, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata i64 %__size, metadata !2584, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata i32 (i8*, i8*)* %__compar, metadata !2585, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata i64 0, metadata !2586, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata i64 %__nmemb, metadata !2587, metadata !DIExpression()), !dbg !2591
  br label %while.cond, !dbg !2592

while.cond:                                       ; preds = %if.end6, %entry
  %__l.0 = phi i64 [ 0, %entry ], [ %__l.1, %if.end6 ], !dbg !2593
  %__u.0 = phi i64 [ %__nmemb, %entry ], [ %__u.1, %if.end6 ], !dbg !2591
  call void @llvm.dbg.value(metadata i64 %__u.0, metadata !2587, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata i64 %__l.0, metadata !2586, metadata !DIExpression()), !dbg !2591
  %cmp = icmp ult i64 %__l.0, %__u.0, !dbg !2594
  br i1 %cmp, label %while.body, label %cleanup, !dbg !2592

while.body:                                       ; preds = %while.cond
  %add = add i64 %__l.0, %__u.0, !dbg !2595
  %div = lshr i64 %add, 1, !dbg !2597
  call void @llvm.dbg.value(metadata i64 %div, metadata !2588, metadata !DIExpression()), !dbg !2591
  %mul = mul i64 %div, %__size, !dbg !2598
  %add.ptr = getelementptr inbounds i8, i8* %__base, i64 %mul, !dbg !2599
  call void @llvm.dbg.value(metadata i8* %add.ptr, metadata !2589, metadata !DIExpression()), !dbg !2591
  %call = tail call i32 %__compar(i8* %__key, i8* %add.ptr) #6, !dbg !2600
  call void @llvm.dbg.value(metadata i32 %call, metadata !2590, metadata !DIExpression()), !dbg !2591
  %cmp1 = icmp slt i32 %call, 0, !dbg !2601
  br i1 %cmp1, label %if.end6, label %if.else, !dbg !2603

if.else:                                          ; preds = %while.body
  %cmp2 = icmp eq i32 %call, 0, !dbg !2604
  br i1 %cmp2, label %cleanup, label %if.then3, !dbg !2606

if.then3:                                         ; preds = %if.else
  %add4 = add nuw i64 %div, 1, !dbg !2607
  call void @llvm.dbg.value(metadata i64 %add4, metadata !2586, metadata !DIExpression()), !dbg !2591
  br label %if.end6

if.end6:                                          ; preds = %while.body, %if.then3
  %__l.1 = phi i64 [ %add4, %if.then3 ], [ %__l.0, %while.body ], !dbg !2591
  %__u.1 = phi i64 [ %__u.0, %if.then3 ], [ %div, %while.body ], !dbg !2591
  call void @llvm.dbg.value(metadata i64 %__u.1, metadata !2587, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.value(metadata i64 %__l.1, metadata !2586, metadata !DIExpression()), !dbg !2591
  br label %while.cond, !dbg !2592, !llvm.loop !2608

cleanup:                                          ; preds = %if.else, %while.cond
  %retval.0 = phi i8* [ %add.ptr, %if.else ], [ null, %while.cond ], !dbg !2591
  ret i8* %retval.0, !dbg !2610
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define dso_local double @atof(i8* %__nptr) local_unnamed_addr #0 !dbg !2611 {
entry:
  call void @llvm.dbg.value(metadata i8* %__nptr, metadata !2617, metadata !DIExpression()), !dbg !2618
  %call = tail call double @strtod(i8* %__nptr, i8** null) #6, !dbg !2619
  ret double %call, !dbg !2620
}

declare dso_local double @strtod(i8*, i8**) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoimax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2621 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2630, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2631, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.value(metadata i32 %base, metadata !2632, metadata !DIExpression()), !dbg !2633
  %call = tail call i64 @__strtol_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2634
  ret i64 %call, !dbg !2635
}

declare dso_local i64 @__strtol_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @strtoumax(i8* noalias %nptr, i8** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2636 {
entry:
  call void @llvm.dbg.value(metadata i8* %nptr, metadata !2642, metadata !DIExpression()), !dbg !2645
  call void @llvm.dbg.value(metadata i8** %endptr, metadata !2643, metadata !DIExpression()), !dbg !2645
  call void @llvm.dbg.value(metadata i32 %base, metadata !2644, metadata !DIExpression()), !dbg !2645
  %call = tail call i64 @__strtoul_internal(i8* %nptr, i8** %endptr, i32 %base, i32 0) #6, !dbg !2646
  ret i64 %call, !dbg !2647
}

declare dso_local i64 @__strtoul_internal(i8*, i8**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoimax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2648 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2659, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2660, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.value(metadata i32 %base, metadata !2661, metadata !DIExpression()), !dbg !2662
  %call = tail call i64 @__wcstol_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2663
  ret i64 %call, !dbg !2664
}

declare dso_local i64 @__wcstol_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i64 @wcstoumax(i32* noalias %nptr, i32** noalias %endptr, i32 %base) local_unnamed_addr #0 !dbg !2665 {
entry:
  call void @llvm.dbg.value(metadata i32* %nptr, metadata !2669, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i32** %endptr, metadata !2670, metadata !DIExpression()), !dbg !2672
  call void @llvm.dbg.value(metadata i32 %base, metadata !2671, metadata !DIExpression()), !dbg !2672
  %call = tail call i64 @__wcstoul_internal(i32* %nptr, i32** %endptr, i32 %base, i32 0) #6, !dbg !2673
  ret i64 %call, !dbg !2674
}

declare dso_local i64 @__wcstoul_internal(i32*, i32**, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2675 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2715, metadata !DIExpression()), !dbg !2717
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2716, metadata !DIExpression()), !dbg !2717
  %call = tail call i32 @__xstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2718
  ret i32 %call, !dbg !2719
}

declare dso_local i32 @__xstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat(i8* %__path, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2720 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2722, metadata !DIExpression()), !dbg !2724
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2723, metadata !DIExpression()), !dbg !2724
  %call = tail call i32 @__lxstat(i32 1, i8* %__path, %struct.stat* %__statbuf) #6, !dbg !2725
  ret i32 %call, !dbg !2726
}

declare dso_local i32 @__lxstat(i32, i8*, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat(i32 %__fd, %struct.stat* %__statbuf) local_unnamed_addr #0 !dbg !2727 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2731, metadata !DIExpression()), !dbg !2733
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2732, metadata !DIExpression()), !dbg !2733
  %call = tail call i32 @__fxstat(i32 1, i32 %__fd, %struct.stat* %__statbuf) #6, !dbg !2734
  ret i32 %call, !dbg !2735
}

declare dso_local i32 @__fxstat(i32, i32, %struct.stat*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat(i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2736 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2740, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2741, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata %struct.stat* %__statbuf, metadata !2742, metadata !DIExpression()), !dbg !2744
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2743, metadata !DIExpression()), !dbg !2744
  %call = tail call i32 @__fxstatat(i32 1, i32 %__fd, i8* %__filename, %struct.stat* %__statbuf, i32 %__flag) #6, !dbg !2745
  ret i32 %call, !dbg !2746
}

declare dso_local i32 @__fxstatat(i32, i32, i8*, %struct.stat*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknod(i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2747 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2751, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2752, metadata !DIExpression()), !dbg !2754
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2753, metadata !DIExpression()), !dbg !2754
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2753, metadata !DIExpression(DW_OP_deref)), !dbg !2754
  %call = call i32 @__xmknod(i32 0, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2755
  ret i32 %call, !dbg !2756
}

declare dso_local i32 @__xmknod(i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @mknodat(i32 %__fd, i8* %__path, i32 %__mode, i64 %__dev) local_unnamed_addr #0 !dbg !2757 {
entry:
  %__dev.addr = alloca i64, align 8
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2761, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2762, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.value(metadata i32 %__mode, metadata !2763, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.value(metadata i64 %__dev, metadata !2764, metadata !DIExpression()), !dbg !2765
  store i64 %__dev, i64* %__dev.addr, align 8
  call void @llvm.dbg.value(metadata i64* %__dev.addr, metadata !2764, metadata !DIExpression(DW_OP_deref)), !dbg !2765
  %call = call i32 @__xmknodat(i32 0, i32 %__fd, i8* %__path, i32 %__mode, i64* nonnull %__dev.addr) #6, !dbg !2766
  ret i32 %call, !dbg !2767
}

declare dso_local i32 @__xmknodat(i32, i32, i8*, i32, i64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @stat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2768 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2792, metadata !DIExpression()), !dbg !2794
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2793, metadata !DIExpression()), !dbg !2794
  %call = tail call i32 @__xstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2795
  ret i32 %call, !dbg !2796
}

declare dso_local i32 @__xstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @lstat64(i8* %__path, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2797 {
entry:
  call void @llvm.dbg.value(metadata i8* %__path, metadata !2799, metadata !DIExpression()), !dbg !2801
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2800, metadata !DIExpression()), !dbg !2801
  %call = tail call i32 @__lxstat64(i32 1, i8* %__path, %struct.stat64* %__statbuf) #6, !dbg !2802
  ret i32 %call, !dbg !2803
}

declare dso_local i32 @__lxstat64(i32, i8*, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstat64(i32 %__fd, %struct.stat64* %__statbuf) local_unnamed_addr #0 !dbg !2804 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2808, metadata !DIExpression()), !dbg !2810
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2809, metadata !DIExpression()), !dbg !2810
  %call = tail call i32 @__fxstat64(i32 1, i32 %__fd, %struct.stat64* %__statbuf) #6, !dbg !2811
  ret i32 %call, !dbg !2812
}

declare dso_local i32 @__fxstat64(i32, i32, %struct.stat64*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define dso_local i32 @fstatat64(i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) local_unnamed_addr #0 !dbg !2813 {
entry:
  call void @llvm.dbg.value(metadata i32 %__fd, metadata !2817, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.value(metadata i8* %__filename, metadata !2818, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.value(metadata %struct.stat64* %__statbuf, metadata !2819, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.value(metadata i32 %__flag, metadata !2820, metadata !DIExpression()), !dbg !2821
  %call = tail call i32 @__fxstatat64(i32 1, i32 %__fd, i8* %__filename, %struct.stat64* %__statbuf, i32 %__flag) #6, !dbg !2822
  ret i32 %call, !dbg !2823
}

declare dso_local i32 @__fxstatat64(i32, i32, i8*, %struct.stat64*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8* @ira_allocate(i64 %len) local_unnamed_addr #5 !dbg !2824 {
entry:
  call void @llvm.dbg.value(metadata i64 %len, metadata !2828, metadata !DIExpression()), !dbg !2830
  %call = tail call i8* @xmalloc(i64 %len) #6, !dbg !2831
  call void @llvm.dbg.value(metadata i8* %call, metadata !2829, metadata !DIExpression()), !dbg !2830
  ret i8* %call, !dbg !2832
}

declare dso_local i8* @xmalloc(i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local i8* @ira_reallocate(i8* %ptr, i64 %len) local_unnamed_addr #5 !dbg !2833 {
entry:
  call void @llvm.dbg.value(metadata i8* %ptr, metadata !2837, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.value(metadata i64 %len, metadata !2838, metadata !DIExpression()), !dbg !2840
  %call = tail call i8* @xrealloc(i8* %ptr, i64 %len) #6, !dbg !2841
  call void @llvm.dbg.value(metadata i8* %call, metadata !2839, metadata !DIExpression()), !dbg !2840
  ret i8* %call, !dbg !2842
}

declare dso_local i8* @xrealloc(i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_free(i8* %addr) local_unnamed_addr #5 !dbg !2843 {
entry:
  call void @llvm.dbg.value(metadata i8* %addr, metadata !2845, metadata !DIExpression()), !dbg !2846
  tail call void @free(i8* %addr) #6, !dbg !2847
  ret void, !dbg !2848
}

declare dso_local void @free(i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local %struct.bitmap_head_def* @ira_allocate_bitmap() local_unnamed_addr #5 !dbg !2849 {
entry:
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* nonnull @ira_bitmap_obstack) #6, !dbg !2852
  ret %struct.bitmap_head_def* %call, !dbg !2853
}

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_free_bitmap(%struct.bitmap_head_def* %b) local_unnamed_addr #5 !dbg !2854 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %b, metadata !2858, metadata !DIExpression()), !dbg !2859
  ret void, !dbg !2860
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_print_disposition(%struct._IO_FILE* %f) local_unnamed_addr #5 !dbg !2861 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !2863, metadata !DIExpression()), !dbg !2972
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0)) #6, !dbg !2973
  %call1 = tail call i32 @max_reg_num() #6, !dbg !2974
  call void @llvm.dbg.value(metadata i32 %call1, metadata !2866, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata i32 0, metadata !2865, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata i32 53, metadata !2864, metadata !DIExpression()), !dbg !2972
  %0 = sext i32 %call1 to i64, !dbg !2975
  br label %for.cond, !dbg !2975

for.cond:                                         ; preds = %for.inc23, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc23 ], [ 53, %entry ], !dbg !2977
  %n.0 = phi i32 [ %n.1.lcssa, %for.inc23 ], [ 0, %entry ], !dbg !2977
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2864, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !2865, metadata !DIExpression()), !dbg !2972
  %cmp = icmp slt i64 %indvars.iv, %0, !dbg !2978
  br i1 %cmp, label %for.body, label %for.end25, !dbg !2980

for.body:                                         ; preds = %for.cond
  %1 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_regno_allocno_map, align 8, !dbg !2981
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %1, i64 %indvars.iv, !dbg !2981
  br label %for.cond2, !dbg !2983

for.cond2:                                        ; preds = %for.inc, %for.body
  %n.1 = phi i32 [ %n.0, %for.body ], [ %inc, %for.inc ], !dbg !2984
  %a.0.in = phi %struct.ira_allocno** [ %arrayidx, %for.body ], [ %next_regno_allocno, %for.inc ]
  %a.0 = load %struct.ira_allocno*, %struct.ira_allocno** %a.0.in, align 8, !dbg !2985
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %a.0, metadata !2867, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata i32 %n.1, metadata !2865, metadata !DIExpression()), !dbg !2972
  %cmp3 = icmp eq %struct.ira_allocno* %a.0, null, !dbg !2986
  br i1 %cmp3, label %for.inc23, label %for.body4, !dbg !2988

for.body4:                                        ; preds = %for.cond2
  %rem1 = and i32 %n.1, 3, !dbg !2989
  %cmp5 = icmp eq i32 %rem1, 0, !dbg !2989
  br i1 %cmp5, label %if.then, label %if.end, !dbg !2992

if.then:                                          ; preds = %for.body4
  %call6 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !2993
  br label %if.end, !dbg !2993

if.end:                                           ; preds = %if.then, %for.body4
  %inc = add nsw i32 %n.1, 1, !dbg !2994
  call void @llvm.dbg.value(metadata i32 %inc, metadata !2865, metadata !DIExpression()), !dbg !2972
  %num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 0, !dbg !2995
  %2 = load i32, i32* %num, align 8, !dbg !2995
  %regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 1, !dbg !2996
  %3 = load i32, i32* %regno, align 4, !dbg !2996
  %call7 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), i32 %2, i32 %3) #6, !dbg !2997
  %loop_tree_node = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 6, !dbg !2998
  %4 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** %loop_tree_node, align 8, !dbg !2998
  %bb8 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %4, i64 0, i32 0, !dbg !3000
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb8, align 8, !dbg !3000
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %5, metadata !2971, metadata !DIExpression()), !dbg !2972
  %cmp9 = icmp eq %struct.basic_block_def* %5, null, !dbg !3001
  br i1 %cmp9, label %if.else, label %if.then10, !dbg !3002

if.then10:                                        ; preds = %if.end
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i64 0, i32 9, !dbg !3003
  %6 = load i32, i32* %index, align 8, !dbg !3003
  %call11 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 %6) #6, !dbg !3004
  br label %if.end15, !dbg !3004

if.else:                                          ; preds = %if.end
  %loop = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %4, i64 0, i32 1, !dbg !3005
  %7 = load %struct.loop*, %struct.loop** %loop, align 8, !dbg !3005
  %num13 = getelementptr inbounds %struct.loop, %struct.loop* %7, i64 0, i32 0, !dbg !3006
  %8 = load i32, i32* %num13, align 8, !dbg !3006
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i32 %8) #6, !dbg !3007
  br label %if.end15

if.end15:                                         ; preds = %if.else, %if.then10
  %hard_regno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 3, !dbg !3008
  %9 = load i32, i32* %hard_regno, align 4, !dbg !3008
  %cmp16 = icmp sgt i32 %9, -1, !dbg !3010
  br i1 %cmp16, label %if.then17, label %if.else20, !dbg !3011

if.then17:                                        ; preds = %if.end15
  %call19 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i32 %9) #6, !dbg !3012
  br label %for.inc, !dbg !3012

if.else20:                                        ; preds = %if.end15
  %call21 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6, i64 0, i64 0)) #6, !dbg !3013
  br label %for.inc

for.inc:                                          ; preds = %if.then17, %if.else20
  %next_regno_allocno = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %a.0, i64 0, i32 5, !dbg !3014
  br label %for.cond2, !dbg !3015, !llvm.loop !3016

for.inc23:                                        ; preds = %for.cond2
  %n.1.lcssa = phi i32 [ %n.1, %for.cond2 ], !dbg !2984
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !2865, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !2865, metadata !DIExpression()), !dbg !2972
  call void @llvm.dbg.value(metadata i32 %n.1.lcssa, metadata !2865, metadata !DIExpression()), !dbg !2972
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3018
  call void @llvm.dbg.value(metadata i32 undef, metadata !2864, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !2972
  br label %for.cond, !dbg !3019, !llvm.loop !3020

for.end25:                                        ; preds = %for.cond
  %call26 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !3022
  ret void, !dbg !3023
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) local_unnamed_addr #2

declare dso_local i32 @max_reg_num() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_debug_disposition() local_unnamed_addr #5 !dbg !3024 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3025
  tail call void @ira_print_disposition(%struct._IO_FILE* %0) #7, !dbg !3026
  ret void, !dbg !3027
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_debug_class_cover() local_unnamed_addr #5 !dbg !3028 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3029
  tail call fastcc void @print_class_cover(%struct._IO_FILE* %0) #7, !dbg !3030
  ret void, !dbg !3031
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_class_cover(%struct._IO_FILE* %f) unnamed_addr #5 !dbg !2384 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !2388, metadata !DIExpression()), !dbg !3032
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.36, i64 0, i64 0)) #6, !dbg !3033
  call void @llvm.dbg.value(metadata i32 0, metadata !2389, metadata !DIExpression()), !dbg !3032
  br label %for.cond, !dbg !3034

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body ], [ 0, %entry ], !dbg !3036
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !2389, metadata !DIExpression()), !dbg !3032
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3037
  %1 = sext i32 %0 to i64, !dbg !3039
  %cmp = icmp slt i64 %indvars.iv1, %1, !dbg !3039
  br i1 %cmp, label %for.body, label %for.end, !dbg !3040

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv1, !dbg !3041
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3041
  %idxprom1 = zext i32 %2 to i64, !dbg !3042
  %arrayidx2 = getelementptr inbounds [27 x i8*], [27 x i8*]* @print_class_cover.reg_class_names, i64 0, i64 %idxprom1, !dbg !3042
  %3 = load i8*, i8** %arrayidx2, align 8, !dbg !3042
  %call3 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0), i8* %3) #6, !dbg !3043
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3044
  call void @llvm.dbg.value(metadata i32 undef, metadata !2389, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3032
  br label %for.cond, !dbg !3045, !llvm.loop !3046

for.end:                                          ; preds = %for.cond
  %call4 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.38, i64 0, i64 0)) #6, !dbg !3048
  call void @llvm.dbg.value(metadata i32 0, metadata !2389, metadata !DIExpression()), !dbg !3032
  br label %for.cond5, !dbg !3049

for.cond5:                                        ; preds = %for.body7, %for.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body7 ], [ 0, %for.end ], !dbg !3051
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2389, metadata !DIExpression()), !dbg !3032
  %exitcond = icmp eq i64 %indvars.iv, 27, !dbg !3052
  br i1 %exitcond, label %for.end17, label %for.body7, !dbg !3054

for.body7:                                        ; preds = %for.cond5
  %arrayidx9 = getelementptr inbounds [27 x i8*], [27 x i8*]* @print_class_cover.reg_class_names, i64 0, i64 %indvars.iv, !dbg !3055
  %4 = load i8*, i8** %arrayidx9, align 8, !dbg !3055
  %arrayidx11 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %indvars.iv, !dbg !3056
  %5 = load i32, i32* %arrayidx11, align 4, !dbg !3056
  %idxprom12 = zext i32 %5 to i64, !dbg !3057
  %arrayidx13 = getelementptr inbounds [27 x i8*], [27 x i8*]* @print_class_cover.reg_class_names, i64 0, i64 %idxprom12, !dbg !3057
  %6 = load i8*, i8** %arrayidx13, align 8, !dbg !3057
  %call14 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %f, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.39, i64 0, i64 0), i8* %4, i8* %6) #6, !dbg !3058
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3059
  call void @llvm.dbg.value(metadata i32 undef, metadata !2389, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3032
  br label %for.cond5, !dbg !3060, !llvm.loop !3061

for.end17:                                        ; preds = %for.cond5
  ret void, !dbg !3063
}

; Function Attrs: nounwind uwtable
define dso_local void @ira_init_register_move_cost(i32 %mode) local_unnamed_addr #5 !dbg !3064 {
entry:
  call void @llvm.dbg.value(metadata i32 %mode, metadata !3068, metadata !DIExpression()), !dbg !3071
  %idxprom = zext i32 %mode to i64, !dbg !3072
  %arrayidx = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @move_cost, i64 0, i64 %idxprom, !dbg !3072
  %0 = load [27 x i16]*, [27 x i16]** %arrayidx, align 8, !dbg !3072
  %cmp = icmp eq [27 x i16]* %0, null, !dbg !3074
  br i1 %cmp, label %if.then, label %entry.if.end_crit_edge, !dbg !3075

entry.if.end_crit_edge:                           ; preds = %entry
  %1 = ptrtoint [27 x i16]* %0 to i64, !dbg !3075
  br label %if.end, !dbg !3075

if.then:                                          ; preds = %entry
  tail call void @init_move_cost(i32 %mode) #6, !dbg !3076
  %.phi.trans.insert = bitcast [27 x i16]** %arrayidx to i64*, !dbg !3071
  %.pre = load i64, i64* %.phi.trans.insert, align 8, !dbg !3077
  br label %if.end, !dbg !3076

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %2 = phi i64 [ %.pre, %if.then ], [ %1, %entry.if.end_crit_edge ], !dbg !3077
  %arrayidx4 = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_register_move_cost, i64 0, i64 %idxprom, !dbg !3078
  %3 = bitcast [27 x i16]** %arrayidx4 to i64*, !dbg !3079
  store i64 %2, i64* %3, align 8, !dbg !3079
  %call = tail call i8* @xmalloc(i64 1458) #6, !dbg !3080
  %arrayidx6 = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_may_move_in_cost, i64 0, i64 %idxprom, !dbg !3081
  %4 = bitcast [27 x i16]** %arrayidx6 to i8**, !dbg !3082
  store i8* %call, i8** %4, align 8, !dbg !3082
  %arrayidx10 = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @may_move_in_cost, i64 0, i64 %idxprom, !dbg !3083
  %5 = bitcast [27 x i16]** %arrayidx10 to i8**, !dbg !3083
  %6 = load i8*, i8** %5, align 8, !dbg !3083
  %call11 = tail call i8* @memcpy(i8* %call, i8* %6, i64 1458) #6, !dbg !3084
  %call12 = tail call i8* @xmalloc(i64 1458) #6, !dbg !3085
  %arrayidx14 = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_may_move_out_cost, i64 0, i64 %idxprom, !dbg !3086
  %7 = bitcast [27 x i16]** %arrayidx14 to i8**, !dbg !3087
  store i8* %call12, i8** %7, align 8, !dbg !3087
  %arrayidx18 = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @may_move_out_cost, i64 0, i64 %idxprom, !dbg !3088
  %8 = bitcast [27 x i16]** %arrayidx18 to i8**, !dbg !3088
  %9 = load i8*, i8** %8, align 8, !dbg !3088
  %call19 = tail call i8* @memcpy(i8* %call12, i8* %9, i64 1458) #6, !dbg !3089
  call void @llvm.dbg.value(metadata i32 0, metadata !3069, metadata !DIExpression()), !dbg !3071
  br label %for.cond, !dbg !3090

for.cond:                                         ; preds = %for.inc49, %if.end
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc49 ], [ 0, %if.end ], !dbg !3092
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3069, metadata !DIExpression()), !dbg !3071
  %exitcond4 = icmp eq i64 %indvars.iv2, 27, !dbg !3093
  br i1 %exitcond4, label %for.end51, label %for.cond21.preheader, !dbg !3095

for.cond21.preheader:                             ; preds = %for.cond
  br label %for.cond21, !dbg !3096

for.cond21:                                       ; preds = %for.cond21.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond21.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3099
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3070, metadata !DIExpression()), !dbg !3071
  %exitcond = icmp eq i64 %indvars.iv, 27, !dbg !3100
  br i1 %exitcond, label %for.inc49, label %for.body23, !dbg !3096

for.body23:                                       ; preds = %for.cond21
  %arrayidx27 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @ira_class_subset_p, i64 0, i64 %indvars.iv2, i64 %indvars.iv, !dbg !3102
  %10 = load i32, i32* %arrayidx27, align 4, !dbg !3102
  %tobool = icmp eq i32 %10, 0, !dbg !3102
  br i1 %tobool, label %if.end35, label %if.then28, !dbg !3105

if.then28:                                        ; preds = %for.body23
  %11 = load [27 x i16]*, [27 x i16]** %arrayidx6, align 8, !dbg !3106
  %arrayidx34 = getelementptr inbounds [27 x i16], [27 x i16]* %11, i64 %indvars.iv2, i64 %indvars.iv, !dbg !3106
  store i16 0, i16* %arrayidx34, align 2, !dbg !3107
  br label %if.end35, !dbg !3106

if.end35:                                         ; preds = %for.body23, %if.then28
  %arrayidx39 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @ira_class_subset_p, i64 0, i64 %indvars.iv, i64 %indvars.iv2, !dbg !3108
  %12 = load i32, i32* %arrayidx39, align 4, !dbg !3108
  %tobool40 = icmp eq i32 %12, 0, !dbg !3108
  br i1 %tobool40, label %for.inc, label %if.then41, !dbg !3110

if.then41:                                        ; preds = %if.end35
  %13 = load [27 x i16]*, [27 x i16]** %arrayidx14, align 8, !dbg !3111
  %arrayidx47 = getelementptr inbounds [27 x i16], [27 x i16]* %13, i64 %indvars.iv2, i64 %indvars.iv, !dbg !3111
  store i16 0, i16* %arrayidx47, align 2, !dbg !3112
  br label %for.inc, !dbg !3111

for.inc:                                          ; preds = %if.end35, %if.then41
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3113
  call void @llvm.dbg.value(metadata i32 undef, metadata !3070, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3071
  br label %for.cond21, !dbg !3114, !llvm.loop !3115

for.inc49:                                        ; preds = %for.cond21
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !3117
  call void @llvm.dbg.value(metadata i32 undef, metadata !3069, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3071
  br label %for.cond, !dbg !3118, !llvm.loop !3119

for.end51:                                        ; preds = %for.cond
  ret void, !dbg !3121
}

declare dso_local void @init_move_cost(i32) local_unnamed_addr #2

declare dso_local i8* @memcpy(i8*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_init_once() local_unnamed_addr #5 !dbg !3122 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3124, metadata !DIExpression()), !dbg !3125
  br label %for.cond, !dbg !3126

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ], !dbg !3128
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3124, metadata !DIExpression()), !dbg !3125
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !3129
  br i1 %exitcond, label %for.end, label %for.body, !dbg !3131

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_register_move_cost, i64 0, i64 %indvars.iv, !dbg !3132
  store [27 x i16]* null, [27 x i16]** %arrayidx, align 8, !dbg !3134
  %arrayidx2 = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_may_move_in_cost, i64 0, i64 %indvars.iv, !dbg !3135
  store [27 x i16]* null, [27 x i16]** %arrayidx2, align 8, !dbg !3136
  %arrayidx4 = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_may_move_out_cost, i64 0, i64 %indvars.iv, !dbg !3137
  store [27 x i16]* null, [27 x i16]** %arrayidx4, align 8, !dbg !3138
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3139
  call void @llvm.dbg.value(metadata i32 undef, metadata !3124, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3125
  br label %for.cond, !dbg !3140, !llvm.loop !3141

for.end:                                          ; preds = %for.cond
  tail call void @ira_init_costs_once() #6, !dbg !3143
  ret void, !dbg !3144
}

declare dso_local void @ira_init_costs_once() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_init() local_unnamed_addr #5 !dbg !3145 {
entry:
  tail call fastcc void @free_register_move_costs() #7, !dbg !3146
  tail call fastcc void @setup_reg_mode_hard_regset() #7, !dbg !3147
  %0 = load i32, i32* @flag_omit_frame_pointer, align 4, !dbg !3148
  %cmp = icmp ne i32 %0, 0, !dbg !3149
  %conv1 = zext i1 %cmp to i8, !dbg !3148
  tail call fastcc void @setup_alloc_regs(i8 zeroext %conv1) #7, !dbg !3150
  tail call fastcc void @setup_class_subset_and_memory_move_costs() #7, !dbg !3151
  tail call fastcc void @find_reg_class_closure() #7, !dbg !3152
  tail call fastcc void @setup_hard_regno_cover_class() #7, !dbg !3153
  tail call fastcc void @setup_reg_class_nregs() #7, !dbg !3154
  tail call fastcc void @setup_prohibited_class_mode_regs() #7, !dbg !3155
  tail call void @ira_init_costs() #6, !dbg !3156
  ret void, !dbg !3157
}

; Function Attrs: nounwind uwtable
define internal fastcc void @free_register_move_costs() unnamed_addr #5 !dbg !3158 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3160, metadata !DIExpression()), !dbg !3161
  br label %for.cond, !dbg !3162

for.cond:                                         ; preds = %if.end10, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end10 ], [ 0, %entry ], !dbg !3164
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3160, metadata !DIExpression()), !dbg !3161
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !3165
  br i1 %exitcond, label %for.end, label %for.body, !dbg !3167

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_may_move_in_cost, i64 0, i64 %indvars.iv, !dbg !3168
  %0 = load [27 x i16]*, [27 x i16]** %arrayidx, align 8, !dbg !3168
  %cmp1 = icmp eq [27 x i16]* %0, null, !dbg !3171
  br i1 %cmp1, label %if.end, label %if.then, !dbg !3172

if.then:                                          ; preds = %for.body
  %1 = bitcast [27 x i16]* %0 to i8*, !dbg !3172
  tail call void @free(i8* nonnull %1) #6, !dbg !3173
  br label %if.end, !dbg !3173

if.end:                                           ; preds = %for.body, %if.then
  %arrayidx5 = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_may_move_out_cost, i64 0, i64 %indvars.iv, !dbg !3174
  %2 = load [27 x i16]*, [27 x i16]** %arrayidx5, align 8, !dbg !3174
  %cmp6 = icmp eq [27 x i16]* %2, null, !dbg !3176
  br i1 %cmp6, label %if.end10, label %if.then7, !dbg !3177

if.then7:                                         ; preds = %if.end
  %3 = bitcast [27 x i16]* %2 to i8*, !dbg !3177
  tail call void @free(i8* nonnull %3) #6, !dbg !3178
  br label %if.end10, !dbg !3178

if.end10:                                         ; preds = %if.end, %if.then7
  %arrayidx12 = getelementptr inbounds [87 x [27 x i16]*], [87 x [27 x i16]*]* @ira_register_move_cost, i64 0, i64 %indvars.iv, !dbg !3179
  store [27 x i16]* null, [27 x i16]** %arrayidx12, align 8, !dbg !3180
  store [27 x i16]* null, [27 x i16]** %arrayidx, align 8, !dbg !3181
  store [27 x i16]* null, [27 x i16]** %arrayidx5, align 8, !dbg !3182
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3183
  call void @llvm.dbg.value(metadata i32 undef, metadata !3160, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3161
  br label %for.cond, !dbg !3184, !llvm.loop !3185

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3187
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_reg_mode_hard_regset() unnamed_addr #5 !dbg !3188 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3191, metadata !DIExpression()), !dbg !3193
  br label %for.cond, !dbg !3194

for.cond:                                         ; preds = %for.inc23, %entry
  %indvars.iv4 = phi i64 [ %indvars.iv.next5, %for.inc23 ], [ 0, %entry ], !dbg !3196
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !3191, metadata !DIExpression()), !dbg !3193
  %exitcond6 = icmp eq i64 %indvars.iv4, 87, !dbg !3197
  br i1 %exitcond6, label %for.end25, label %for.cond1.preheader, !dbg !3199

for.cond1.preheader:                              ; preds = %for.cond
  br label %for.cond1, !dbg !3200

for.cond1:                                        ; preds = %for.cond1.preheader, %for.inc21
  %indvars.iv2 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next3, %for.inc21 ], !dbg !3202
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3192, metadata !DIExpression()), !dbg !3193
  %exitcond = icmp eq i64 %indvars.iv2, 53, !dbg !3203
  br i1 %exitcond, label %for.inc23, label %for.body3, !dbg !3200

for.body3:                                        ; preds = %for.cond1
  %arrayidx5 = getelementptr inbounds [53 x [87 x i64]], [53 x [87 x i64]]* @ira_reg_mode_hard_regset, i64 0, i64 %indvars.iv2, i64 %indvars.iv4, !dbg !3205
  store i64 0, i64* %arrayidx5, align 8, !dbg !3205
  %arrayidx9 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %indvars.iv2, i64 %indvars.iv4, !dbg !3207
  %0 = load i8, i8* %arrayidx9, align 1, !dbg !3207
  call void @llvm.dbg.value(metadata i8 %0, metadata !3190, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3193
  %1 = zext i8 %0 to i64, !dbg !3209
  br label %for.cond10, !dbg !3209

for.cond10:                                       ; preds = %for.inc, %for.body3
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %1, %for.body3 ]
  %2 = phi i64 [ %4, %for.inc ], [ 0, %for.body3 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3210
  call void @llvm.dbg.value(metadata i32 undef, metadata !3190, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3193
  %cmp11 = icmp sgt i64 %indvars.iv, 0, !dbg !3211
  br i1 %cmp11, label %for.body13, label %for.inc21, !dbg !3213

for.body13:                                       ; preds = %for.cond10
  %3 = add nsw i64 %indvars.iv2, %indvars.iv.next, !dbg !3214
  %cmp14 = icmp slt i64 %3, 53, !dbg !3216
  br i1 %cmp14, label %if.then, label %for.inc, !dbg !3217

if.then:                                          ; preds = %for.body13
  %sh_prom = and i64 %3, 4294967295, !dbg !3218
  %shl = shl i64 1, %sh_prom, !dbg !3218
  %or = or i64 %2, %shl, !dbg !3218
  store i64 %or, i64* %arrayidx5, align 8, !dbg !3218
  br label %for.inc, !dbg !3218

for.inc:                                          ; preds = %for.body13, %if.then
  %4 = phi i64 [ %2, %for.body13 ], [ %or, %if.then ]
  call void @llvm.dbg.value(metadata i32 undef, metadata !3190, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3193
  br label %for.cond10, !dbg !3219, !llvm.loop !3220

for.inc21:                                        ; preds = %for.cond10
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !3222
  call void @llvm.dbg.value(metadata i32 undef, metadata !3192, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3193
  br label %for.cond1, !dbg !3223, !llvm.loop !3224

for.inc23:                                        ; preds = %for.cond1
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !3226
  call void @llvm.dbg.value(metadata i32 undef, metadata !3191, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3193
  br label %for.cond, !dbg !3227, !llvm.loop !3228

for.end25:                                        ; preds = %for.cond
  ret void, !dbg !3230
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_alloc_regs(i8 zeroext %use_hard_frame_p) unnamed_addr #5 !dbg !3231 {
entry:
  call void @llvm.dbg.value(metadata i8 %use_hard_frame_p, metadata !3235, metadata !DIExpression()), !dbg !3236
  %0 = load i64, i64* @fixed_reg_set, align 8, !dbg !3237
  %tobool = icmp eq i8 %use_hard_frame_p, 0, !dbg !3238
  br i1 %tobool, label %if.then, label %if.end, !dbg !3240

if.then:                                          ; preds = %entry
  %or = or i64 %0, 64, !dbg !3241
  br label %if.end, !dbg !3241

if.end:                                           ; preds = %entry, %if.then
  %storemerge = phi i64 [ %or, %if.then ], [ %0, %entry ], !dbg !3236
  store i64 %storemerge, i64* @no_unit_alloc_regs, align 8, !dbg !3236
  tail call fastcc void @setup_class_hard_regs() #7, !dbg !3242
  tail call fastcc void @setup_available_class_regs() #7, !dbg !3243
  ret void, !dbg !3244
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_class_subset_and_memory_move_costs() unnamed_addr #5 !dbg !3245 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3249, metadata !DIExpression()), !dbg !3251
  br label %for.cond, !dbg !3252

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv5 = phi i64 [ %indvars.iv.next6, %for.body ], [ 0, %entry ], !dbg !3254
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !3249, metadata !DIExpression()), !dbg !3251
  %exitcond7 = icmp eq i64 %indvars.iv5, 87, !dbg !3255
  br i1 %exitcond7, label %for.cond7.preheader, label %for.body, !dbg !3257

for.cond7.preheader:                              ; preds = %for.cond
  br label %for.cond7, !dbg !3258

for.body:                                         ; preds = %for.cond
  %arrayidx2 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %indvars.iv5, i64 0, i64 1, !dbg !3260
  store i16 32767, i16* %arrayidx2, align 2, !dbg !3261
  %arrayidx6 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %indvars.iv5, i64 0, i64 0, !dbg !3262
  store i16 32767, i16* %arrayidx6, align 4, !dbg !3263
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !3264
  call void @llvm.dbg.value(metadata i32 undef, metadata !3249, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3251
  br label %for.cond, !dbg !3265, !llvm.loop !3266

for.cond7:                                        ; preds = %for.cond7.preheader, %for.inc95
  %indvars.iv3 = phi i64 [ 26, %for.cond7.preheader ], [ %indvars.iv.next4, %for.inc95 ], !dbg !3268
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !3247, metadata !DIExpression()), !dbg !3251
  %cmp8 = icmp sgt i64 %indvars.iv3, -1, !dbg !3269
  br i1 %cmp8, label %for.body9, label %for.end97, !dbg !3258

for.body9:                                        ; preds = %for.cond7
  %0 = icmp eq i64 %indvars.iv3, 0
  br i1 %0, label %for.body9.if.end76_crit_edge, label %for.cond11.preheader, !dbg !3271

for.body9.if.end76_crit_edge:                     ; preds = %for.body9
  br label %if.end76, !dbg !3271

for.cond11.preheader:                             ; preds = %for.body9
  br label %for.cond11, !dbg !3273

for.cond11:                                       ; preds = %for.cond11.preheader, %for.inc73
  %indvars.iv = phi i64 [ 0, %for.cond11.preheader ], [ %indvars.iv.next, %for.inc73 ], !dbg !3276
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3249, metadata !DIExpression()), !dbg !3251
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !3277
  br i1 %exitcond, label %if.end76.loopexit, label %for.body13, !dbg !3273

for.body13:                                       ; preds = %for.cond11
  %1 = trunc i64 %indvars.iv to i32, !dbg !3279
  %2 = trunc i64 %indvars.iv3 to i32, !dbg !3279
  %call = tail call i32 @ix86_memory_move_cost(i32 %1, i32 %2, i32 0) #6, !dbg !3279
  %conv = trunc i32 %call to i16, !dbg !3279
  %arrayidx18 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %indvars.iv, i64 %indvars.iv3, i64 0, !dbg !3281
  store i16 %conv, i16* %arrayidx18, align 4, !dbg !3282
  %3 = trunc i64 %indvars.iv to i32, !dbg !3283
  %4 = trunc i64 %indvars.iv3 to i32, !dbg !3283
  %call19 = tail call i32 @ix86_memory_move_cost(i32 %3, i32 %4, i32 1) #6, !dbg !3283
  %conv20 = trunc i32 %call19 to i16, !dbg !3283
  %arrayidx25 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %indvars.iv, i64 %indvars.iv3, i64 1, !dbg !3284
  store i16 %conv20, i16* %arrayidx25, align 2, !dbg !3285
  %arrayidx29 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %indvars.iv, i64 0, i64 0, !dbg !3286
  %5 = load i16, i16* %arrayidx29, align 4, !dbg !3286
  %6 = load i16, i16* %arrayidx18, align 4, !dbg !3288
  %cmp37 = icmp sgt i16 %5, %6, !dbg !3289
  br i1 %cmp37, label %if.then39, label %if.end, !dbg !3290

if.then39:                                        ; preds = %for.body13
  store i16 %6, i16* %arrayidx29, align 4, !dbg !3291
  br label %if.end, !dbg !3292

if.end:                                           ; preds = %if.then39, %for.body13
  %arrayidx52 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %indvars.iv, i64 0, i64 1, !dbg !3293
  %7 = load i16, i16* %arrayidx52, align 2, !dbg !3293
  %cmp60 = icmp sgt i16 %7, %conv20, !dbg !3295
  br i1 %cmp60, label %if.then62, label %for.inc73, !dbg !3296

if.then62:                                        ; preds = %if.end
  store i16 %conv20, i16* %arrayidx52, align 2, !dbg !3297
  br label %for.inc73, !dbg !3298

for.inc73:                                        ; preds = %if.end, %if.then62
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3299
  call void @llvm.dbg.value(metadata i32 undef, metadata !3249, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3251
  br label %for.cond11, !dbg !3300, !llvm.loop !3301

if.end76.loopexit:                                ; preds = %for.cond11
  br label %if.end76, !dbg !3303

if.end76:                                         ; preds = %for.body9.if.end76_crit_edge, %if.end76.loopexit
  call void @llvm.dbg.value(metadata i32 26, metadata !3248, metadata !DIExpression()), !dbg !3251
  %arrayidx82 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv3, !dbg !3305
  br label %for.cond77, !dbg !3303

for.cond77:                                       ; preds = %for.body80, %if.end76
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.body80 ], [ 26, %if.end76 ], !dbg !3308
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3248, metadata !DIExpression()), !dbg !3251
  %cmp78 = icmp sgt i64 %indvars.iv1, -1, !dbg !3309
  br i1 %cmp78, label %for.body80, label %for.inc95, !dbg !3310

for.body80:                                       ; preds = %for.cond77
  %8 = load i64, i64* %arrayidx82, align 8, !dbg !3311
  %9 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !3312
  %neg = xor i64 %9, -1, !dbg !3312
  %and = and i64 %8, %neg, !dbg !3312
  store i64 %and, i64* @temp_hard_regset, align 8, !dbg !3312
  %arrayidx84 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1, !dbg !3313
  %10 = load i64, i64* %arrayidx84, align 8, !dbg !3313
  call void @llvm.dbg.value(metadata i64 %10, metadata !3250, metadata !DIExpression()), !dbg !3251
  %and86 = and i64 %10, %neg, !dbg !3314
  call void @llvm.dbg.value(metadata i64 %and86, metadata !3250, metadata !DIExpression()), !dbg !3251
  %call87 = tail call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %and, i64 %and86) #7, !dbg !3315
  %conv88 = zext i8 %call87 to i32, !dbg !3315
  %arrayidx92 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @ira_class_subset_p, i64 0, i64 %indvars.iv3, i64 %indvars.iv1, !dbg !3316
  store i32 %conv88, i32* %arrayidx92, align 4, !dbg !3317
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !3318
  call void @llvm.dbg.value(metadata i32 undef, metadata !3248, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3251
  br label %for.cond77, !dbg !3319, !llvm.loop !3320

for.inc95:                                        ; preds = %for.cond77
  %indvars.iv.next4 = add nsw i64 %indvars.iv3, -1, !dbg !3322
  call void @llvm.dbg.value(metadata i32 undef, metadata !3247, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3251
  br label %for.cond7, !dbg !3323, !llvm.loop !3324

for.end97:                                        ; preds = %for.cond7
  ret void, !dbg !3326
}

; Function Attrs: nounwind uwtable
define internal fastcc void @find_reg_class_closure() unnamed_addr #5 !dbg !3327 {
entry:
  tail call fastcc void @setup_reg_subclasses() #7, !dbg !3328
  tail call fastcc void @setup_cover_and_important_classes() #7, !dbg !3329
  tail call fastcc void @setup_class_translate() #7, !dbg !3330
  tail call fastcc void @reorder_important_classes() #7, !dbg !3331
  tail call fastcc void @setup_reg_class_relations() #7, !dbg !3332
  ret void, !dbg !3333
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_hard_regno_cover_class() unnamed_addr #5 !dbg !3334 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3336, metadata !DIExpression()), !dbg !3339
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3340
  %1 = sext i32 %0 to i64, !dbg !3346
  br label %for.cond, !dbg !3346

for.cond:                                         ; preds = %for.inc14, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc14 ], [ 0, %entry ], !dbg !3347
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3336, metadata !DIExpression()), !dbg !3339
  %exitcond = icmp eq i64 %indvars.iv1, 53, !dbg !3348
  br i1 %exitcond, label %for.end16, label %for.body, !dbg !3349

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [53 x i32], [53 x i32]* @ira_hard_regno_cover_class, i64 0, i64 %indvars.iv1, !dbg !3350
  store i32 0, i32* %arrayidx, align 4, !dbg !3351
  call void @llvm.dbg.value(metadata i32 0, metadata !3337, metadata !DIExpression()), !dbg !3339
  br label %for.cond1, !dbg !3352

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !3353
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3337, metadata !DIExpression()), !dbg !3339
  %cmp2 = icmp slt i64 %indvars.iv, %1, !dbg !3354
  br i1 %cmp2, label %for.body3, label %for.inc14.loopexit, !dbg !3355

for.body3:                                        ; preds = %for.cond1
  %arrayidx5 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !3356
  %2 = load i32, i32* %arrayidx5, align 4, !dbg !3356
  call void @llvm.dbg.value(metadata i32 %2, metadata !3338, metadata !DIExpression()), !dbg !3339
  %idxprom6 = zext i32 %2 to i64, !dbg !3358
  %arrayidx9 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom6, i64 %indvars.iv1, !dbg !3358
  %3 = load i16, i16* %arrayidx9, align 2, !dbg !3358
  %cmp10 = icmp sgt i16 %3, -1, !dbg !3360
  br i1 %cmp10, label %if.then, label %for.inc, !dbg !3361

if.then:                                          ; preds = %for.body3
  %.lcssa = phi i32 [ %2, %for.body3 ], !dbg !3356
  store i32 %.lcssa, i32* %arrayidx, align 4, !dbg !3362
  br label %for.inc14, !dbg !3364

for.inc:                                          ; preds = %for.body3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3365
  call void @llvm.dbg.value(metadata i32 undef, metadata !3337, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3339
  br label %for.cond1, !dbg !3366, !llvm.loop !3367

for.inc14.loopexit:                               ; preds = %for.cond1
  br label %for.inc14, !dbg !3369

for.inc14:                                        ; preds = %for.inc14.loopexit, %if.then
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3369
  call void @llvm.dbg.value(metadata i32 undef, metadata !3336, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3339
  br label %for.cond, !dbg !3370, !llvm.loop !3371

for.end16:                                        ; preds = %for.cond
  ret void, !dbg !3373
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_reg_class_nregs() unnamed_addr #5 !dbg !3374 {
entry:
  store i32 -1, i32* @ira_max_nregs, align 4, !dbg !3378
  call void @llvm.dbg.value(metadata i32 0, metadata !3376, metadata !DIExpression()), !dbg !3379
  br label %for.cond, !dbg !3380

for.cond:                                         ; preds = %for.inc36, %entry
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc36 ], [ 0, %entry ], !dbg !3382
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !3376, metadata !DIExpression()), !dbg !3379
  %exitcond4 = icmp eq i64 %indvars.iv2, 27, !dbg !3383
  br i1 %exitcond4, label %for.end38, label %for.cond1.preheader, !dbg !3385

for.cond1.preheader:                              ; preds = %for.cond
  br label %for.cond1, !dbg !3386

for.cond1:                                        ; preds = %for.cond1.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !3388
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3377, metadata !DIExpression()), !dbg !3379
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !3389
  br i1 %exitcond, label %for.inc36, label %for.body3, !dbg !3386

for.body3:                                        ; preds = %for.cond1
  %0 = trunc i64 %indvars.iv2 to i32, !dbg !3391
  %call = tail call i32 @reg_classes_intersect_p(i32 %0, i32 13) #6, !dbg !3391
  %tobool = icmp eq i32 %call, 0, !dbg !3391
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3391

cond.true:                                        ; preds = %for.body3
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %indvars.iv, !dbg !3391
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3391
  %cmp4 = icmp eq i8 %1, 10, !dbg !3391
  br i1 %cmp4, label %lor.end, label %lor.rhs, !dbg !3391

lor.rhs:                                          ; preds = %cond.true
  %cmp9 = icmp eq i8 %1, 11, !dbg !3391
  br label %lor.end, !dbg !3391

lor.end:                                          ; preds = %lor.rhs, %cond.true
  %2 = phi i1 [ true, %cond.true ], [ %cmp9, %lor.rhs ]
  %cond = select i1 %2, i32 2, i32 1, !dbg !3391
  br label %cond.end20, !dbg !3391

cond.false:                                       ; preds = %for.body3
  %cmp11 = icmp eq i64 %indvars.iv, 40, !dbg !3391
  br i1 %cmp11, label %cond.false.cond.end_crit_edge, label %cond.false14, !dbg !3391

cond.false.cond.end_crit_edge:                    ; preds = %cond.false
  br label %cond.end, !dbg !3391

cond.false14:                                     ; preds = %cond.false
  %arrayidx16 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %indvars.iv, !dbg !3391
  %3 = load i8, i8* %arrayidx16, align 1, !dbg !3391
  %conv18 = zext i8 %3 to i32, !dbg !3391
  br label %cond.end, !dbg !3391

cond.end:                                         ; preds = %cond.false.cond.end_crit_edge, %cond.false14
  %cond19 = phi i32 [ %conv18, %cond.false14 ], [ 12, %cond.false.cond.end_crit_edge ], !dbg !3391
  %sub = add nuw nsw i32 %cond19, 3, !dbg !3391
  %div = lshr i32 %sub, 2, !dbg !3391
  br label %cond.end20, !dbg !3391

cond.end20:                                       ; preds = %cond.end, %lor.end
  %4 = phi i32 [ %cond, %lor.end ], [ %div, %cond.end ], !dbg !3391
  %arrayidx25 = getelementptr inbounds [27 x [87 x i32]], [27 x [87 x i32]]* @ira_reg_class_nregs, i64 0, i64 %indvars.iv2, i64 %indvars.iv, !dbg !3393
  store i32 %4, i32* %arrayidx25, align 4, !dbg !3394
  %5 = load i32, i32* @ira_max_nregs, align 4, !dbg !3395
  %cmp30 = icmp slt i32 %5, %4, !dbg !3397
  br i1 %cmp30, label %if.then, label %for.inc, !dbg !3398

if.then:                                          ; preds = %cond.end20
  store i32 %4, i32* @ira_max_nregs, align 4, !dbg !3399
  br label %for.inc, !dbg !3400

for.inc:                                          ; preds = %cond.end20, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3401
  call void @llvm.dbg.value(metadata i32 undef, metadata !3377, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3379
  br label %for.cond1, !dbg !3402, !llvm.loop !3403

for.inc36:                                        ; preds = %for.cond1
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !3405
  call void @llvm.dbg.value(metadata i32 undef, metadata !3376, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3379
  br label %for.cond, !dbg !3406, !llvm.loop !3407

for.end38:                                        ; preds = %for.cond
  ret void, !dbg !3409
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_prohibited_class_mode_regs() unnamed_addr #5 !dbg !3410 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3412, metadata !DIExpression()), !dbg !3417
  br label %for.cond, !dbg !3418

for.cond:                                         ; preds = %for.inc23, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc23 ], [ 0, %entry ], !dbg !3420
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !3412, metadata !DIExpression()), !dbg !3417
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !3421
  %1 = sext i32 %0 to i64, !dbg !3423
  %cmp = icmp slt i64 %indvars.iv3, %1, !dbg !3423
  br i1 %cmp, label %for.body, label %for.end25, !dbg !3424

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv3, !dbg !3425
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3425
  call void @llvm.dbg.value(metadata i32 %2, metadata !3416, metadata !DIExpression()), !dbg !3417
  call void @llvm.dbg.value(metadata i32 0, metadata !3413, metadata !DIExpression()), !dbg !3417
  %idxprom4 = zext i32 %2 to i64, !dbg !3427
  %arrayidx9 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %idxprom4, !dbg !3431
  br label %for.cond1, !dbg !3433

for.cond1:                                        ; preds = %for.inc21, %for.body
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc21 ], [ 0, %for.body ], !dbg !3434
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3413, metadata !DIExpression()), !dbg !3417
  %exitcond = icmp eq i64 %indvars.iv1, 87, !dbg !3435
  br i1 %exitcond, label %for.inc23, label %for.body3, !dbg !3436

for.body3:                                        ; preds = %for.cond1
  %arrayidx7 = getelementptr inbounds [27 x [87 x i64]], [27 x [87 x i64]]* @prohibited_class_mode_regs, i64 0, i64 %idxprom4, i64 %indvars.iv1, !dbg !3437
  store i64 0, i64* %arrayidx7, align 8, !dbg !3437
  %3 = load i32, i32* %arrayidx9, align 4, !dbg !3438
  call void @llvm.dbg.value(metadata i32 %3, metadata !3414, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3417
  %4 = sext i32 %3 to i64, !dbg !3439
  br label %for.cond10, !dbg !3439

for.cond10:                                       ; preds = %for.inc, %for.body3
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %4, %for.body3 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !3431
  call void @llvm.dbg.value(metadata i32 undef, metadata !3414, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3417
  %cmp11 = icmp sgt i64 %indvars.iv, 0, !dbg !3440
  br i1 %cmp11, label %for.body12, label %for.inc21, !dbg !3442

for.body12:                                       ; preds = %for.cond10
  %arrayidx16 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %idxprom4, i64 %indvars.iv.next, !dbg !3443
  %5 = load i16, i16* %arrayidx16, align 2, !dbg !3443
  %conv = sext i16 %5 to i32, !dbg !3443
  call void @llvm.dbg.value(metadata i32 %conv, metadata !3415, metadata !DIExpression()), !dbg !3417
  %6 = trunc i64 %indvars.iv1 to i32, !dbg !3445
  %call = tail call zeroext i8 @ix86_hard_regno_mode_ok(i32 %conv, i32 %6) #6, !dbg !3445
  %tobool = icmp eq i8 %call, 0, !dbg !3445
  br i1 %tobool, label %if.then, label %for.inc, !dbg !3447

if.then:                                          ; preds = %for.body12
  %sh_prom = zext i32 %conv to i64, !dbg !3448
  %shl = shl i64 1, %sh_prom, !dbg !3448
  %7 = load i64, i64* %arrayidx7, align 8, !dbg !3448
  %or = or i64 %7, %shl, !dbg !3448
  store i64 %or, i64* %arrayidx7, align 8, !dbg !3448
  br label %for.inc, !dbg !3448

for.inc:                                          ; preds = %for.body12, %if.then
  call void @llvm.dbg.value(metadata i32 undef, metadata !3414, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3417
  br label %for.cond10, !dbg !3449, !llvm.loop !3450

for.inc21:                                        ; preds = %for.cond10
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3452
  call void @llvm.dbg.value(metadata i32 undef, metadata !3413, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3417
  br label %for.cond1, !dbg !3453, !llvm.loop !3454

for.inc23:                                        ; preds = %for.cond1
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !3456
  call void @llvm.dbg.value(metadata i32 undef, metadata !3412, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3417
  br label %for.cond, !dbg !3457, !llvm.loop !3458

for.end25:                                        ; preds = %for.cond
  ret void, !dbg !3460
}

declare dso_local void @ira_init_costs() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_finish_once() local_unnamed_addr #5 !dbg !3461 {
entry:
  tail call void @ira_finish_costs_once() #6, !dbg !3462
  tail call fastcc void @free_register_move_costs() #7, !dbg !3463
  ret void, !dbg !3464
}

declare dso_local void @ira_finish_costs_once() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @ira_setup_eliminable_regset() local_unnamed_addr #5 !dbg !2143 {
entry:
  %0 = alloca [53 x i8], align 16, !dbg !3465
  call void @llvm.dbg.value(metadata i8* %.sub, metadata !2147, metadata !DIExpression()), !dbg !3466
  %.sub = getelementptr inbounds [53 x i8], [53 x i8]* %0, i64 0, i64 0
  %1 = load i32, i32* @flag_omit_frame_pointer, align 4, !dbg !3467
  %tobool = icmp eq i32 %1, 0, !dbg !3467
  br i1 %tobool, label %lor.end, label %lor.lhs.false, !dbg !3468

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3469
  %calls_alloca = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, i32 20, !dbg !3470
  %bf.load = load i32, i32* %calls_alloca, align 8, !dbg !3470
  %bf.clear = and i32 %bf.load, 524288, !dbg !3470
  %3 = load i32, i32* @flag_stack_check, align 4, !dbg !3471
  %4 = or i32 %bf.clear, %3, !dbg !3472
  %5 = icmp eq i32 %4, 0, !dbg !3472
  br i1 %5, label %lor.lhs.false4, label %lor.end, !dbg !3472

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %6 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 28), align 8, !dbg !3473
  %tobool5 = icmp eq i8 %6, 0, !dbg !3474
  br i1 %tobool5, label %lor.lhs.false6, label %lor.end, !dbg !3475

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %7 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 43), align 1, !dbg !3476
  %tobool8 = icmp eq i8 %7, 0, !dbg !3477
  br i1 %tobool8, label %lor.rhs, label %lor.end, !dbg !3478

lor.rhs:                                          ; preds = %lor.lhs.false6
  %8 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 102), align 8, !dbg !3479
  %call = tail call zeroext i8 %8() #6, !dbg !3480
  %tobool10 = icmp ne i8 %call, 0, !dbg !3478
  %phitmp = zext i1 %tobool10 to i32, !dbg !3478
  br label %lor.end, !dbg !3478

lor.end:                                          ; preds = %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false, %entry, %lor.rhs
  %9 = phi i32 [ 1, %lor.lhs.false6 ], [ 1, %lor.lhs.false4 ], [ 1, %lor.lhs.false ], [ 1, %entry ], [ %phitmp, %lor.rhs ]
  call void @llvm.dbg.value(metadata i32 %9, metadata !2149, metadata !DIExpression()), !dbg !3466
  %conv11 = trunc i32 %9 to i8, !dbg !3481
  store i8 %conv11, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i64 0, i32 41), align 1, !dbg !3482
  %10 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !3483
  store i64 %10, i64* @ira_no_alloc_regs, align 8, !dbg !3483
  store i64 0, i64* @eliminable_regset, align 8, !dbg !3484
  call fastcc void @compute_regs_asm_clobbered(i8* nonnull %.sub) #7, !dbg !3485
  call void @llvm.dbg.value(metadata i32 0, metadata !2148, metadata !DIExpression()), !dbg !3466
  %tobool23 = icmp ne i32 %9, 0, !dbg !3486
  br label %for.cond, !dbg !3487

for.cond:                                         ; preds = %for.inc, %lor.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %lor.end ], !dbg !3488
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2148, metadata !DIExpression()), !dbg !3466
  %exitcond = icmp eq i64 %indvars.iv, 4, !dbg !3489
  br i1 %exitcond, label %for.end, label %for.body, !dbg !3490

for.body:                                         ; preds = %for.cond
  %11 = load i8 (i32, i32)*, i8 (i32, i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 103), align 8, !dbg !3491
  %from = getelementptr inbounds [4 x %struct.anon], [4 x %struct.anon]* @ira_setup_eliminable_regset.eliminables, i64 0, i64 %indvars.iv, i32 0, !dbg !3492
  %12 = load i32, i32* %from, align 8, !dbg !3492
  %to = getelementptr inbounds [4 x %struct.anon], [4 x %struct.anon]* @ira_setup_eliminable_regset.eliminables, i64 0, i64 %indvars.iv, i32 1, !dbg !3493
  %13 = load i32, i32* %to, align 4, !dbg !3493
  %call15 = call zeroext i8 %11(i32 %12, i32 %13) #6, !dbg !3494
  %tobool16 = icmp eq i8 %call15, 0, !dbg !3494
  br i1 %tobool16, label %lor.end24, label %lor.rhs17, !dbg !3495

lor.rhs17:                                        ; preds = %for.body
  %14 = and i64 %indvars.iv, 2147483645, !dbg !3496
  %15 = icmp eq i64 %14, 0, !dbg !3496
  %spec.select = and i1 %15, %tobool23, !dbg !3497
  br label %lor.end24, !dbg !3495

lor.end24:                                        ; preds = %for.body, %lor.rhs17
  %16 = phi i1 [ true, %for.body ], [ %spec.select, %lor.rhs17 ]
  call void @llvm.dbg.value(metadata i1 %16, metadata !2150, metadata !DIExpression()), !dbg !3486
  %idxprom30 = sext i32 %12 to i64, !dbg !3498
  %arrayidx31 = getelementptr inbounds [53 x i8], [53 x i8]* %0, i64 0, i64 %idxprom30, !dbg !3498
  %17 = load i8, i8* %arrayidx31, align 1, !dbg !3498
  %tobool32 = icmp eq i8 %17, 0, !dbg !3498
  br i1 %tobool32, label %if.then, label %if.else, !dbg !3500

if.then:                                          ; preds = %lor.end24
  %sh_prom = zext i32 %12 to i64, !dbg !3501
  %shl = shl i64 1, %sh_prom, !dbg !3501
  %18 = load i64, i64* @eliminable_regset, align 8, !dbg !3501
  %or = or i64 %18, %shl, !dbg !3501
  store i64 %or, i64* @eliminable_regset, align 8, !dbg !3501
  br i1 %16, label %if.then37, label %for.inc, !dbg !3503

if.then37:                                        ; preds = %if.then
  %19 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !3504
  %or43 = or i64 %19, %shl, !dbg !3504
  store i64 %or43, i64* @ira_no_alloc_regs, align 8, !dbg !3504
  br label %for.inc, !dbg !3504

if.else:                                          ; preds = %lor.end24
  call void @llvm.dbg.value(metadata i1 %16, metadata !2150, metadata !DIExpression()), !dbg !3486
  br i1 %16, label %if.then45, label %if.else51, !dbg !3506

if.then45:                                        ; preds = %if.else
  %arrayidx50 = getelementptr inbounds [53 x i8*], [53 x i8*]* @reg_names, i64 0, i64 %idxprom30, !dbg !3507
  %20 = load i8*, i8** %arrayidx50, align 8, !dbg !3507
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8* %20) #6, !dbg !3509
  br label %for.inc, !dbg !3509

if.else51:                                        ; preds = %if.else
  call void @df_set_regs_ever_live(i32 %12, i8 zeroext 1) #6, !dbg !3510
  br label %for.inc

for.inc:                                          ; preds = %if.then37, %if.then, %if.else51, %if.then45
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3511
  call void @llvm.dbg.value(metadata i32 undef, metadata !2148, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3466
  br label %for.cond, !dbg !3512, !llvm.loop !3513

for.end:                                          ; preds = %for.cond
  %arrayidx57 = getelementptr inbounds [53 x i8], [53 x i8]* %0, i64 0, i64 6, !dbg !3515
  %21 = load i8, i8* %arrayidx57, align 2, !dbg !3515
  %tobool58 = icmp eq i8 %21, 0, !dbg !3515
  br i1 %tobool58, label %if.then59, label %if.else65, !dbg !3517

if.then59:                                        ; preds = %for.end
  %22 = load i64, i64* @eliminable_regset, align 8, !dbg !3518
  %or60 = or i64 %22, 64, !dbg !3518
  store i64 %or60, i64* @eliminable_regset, align 8, !dbg !3518
  %tobool61 = icmp eq i32 %9, 0, !dbg !3520
  br i1 %tobool61, label %if.end70, label %if.then62, !dbg !3522

if.then62:                                        ; preds = %if.then59
  %23 = load i64, i64* @ira_no_alloc_regs, align 8, !dbg !3523
  %or63 = or i64 %23, 64, !dbg !3523
  store i64 %or63, i64* @ira_no_alloc_regs, align 8, !dbg !3523
  br label %if.end70, !dbg !3523

if.else65:                                        ; preds = %for.end
  %tobool66 = icmp eq i32 %9, 0, !dbg !3524
  br i1 %tobool66, label %if.else68, label %if.then67, !dbg !3526

if.then67:                                        ; preds = %if.else65
  %24 = load i8*, i8** getelementptr inbounds ([53 x i8*], [53 x i8*]* @reg_names, i64 0, i64 6), align 16, !dbg !3527
  call void (i8*, ...) @error(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.7, i64 0, i64 0), i8* %24) #6, !dbg !3528
  br label %if.end70, !dbg !3528

if.else68:                                        ; preds = %if.else65
  call void @df_set_regs_ever_live(i32 6, i8 zeroext 1) #6, !dbg !3529
  br label %if.end70

if.end70:                                         ; preds = %if.then59, %if.then67, %if.else68, %if.then62
  ret void, !dbg !3530
}

; Function Attrs: nounwind uwtable
define internal fastcc void @compute_regs_asm_clobbered(i8* %regs_asm_clobbered) unnamed_addr #5 !dbg !3531 {
entry:
  call void @llvm.dbg.value(metadata i8* %regs_asm_clobbered, metadata !3535, metadata !DIExpression()), !dbg !3616
  %call = tail call i8* @memset(i8* %regs_asm_clobbered, i32 0, i64 53) #6, !dbg !3617
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3618
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3618
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3618
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3618
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3618
  br label %for.cond, !dbg !3618

for.cond:                                         ; preds = %for.inc50, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.inc50 ], !dbg !3619
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc50 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3620
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3620
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3536, metadata !DIExpression()), !dbg !3616
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3619
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3619
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3619
  br i1 %cmp, label %for.end52, label %for.body, !dbg !3618

for.body:                                         ; preds = %for.cond
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !3621
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3621
  %5 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3621
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %5, i64 0, i32 1, !dbg !3621
  br label %for.cond3, !dbg !3621

for.cond3:                                        ; preds = %for.inc44, %for.body
  %insn.0.in = phi %struct.rtx_def** [ %end_, %for.body ], [ %rt_rtx48, %for.inc44 ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !3622
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !3537, metadata !DIExpression()), !dbg !3623
  %tobool = icmp eq %struct.rtx_def* %insn.0, null, !dbg !3624
  br i1 %tobool, label %for.inc50, label %land.rhs, !dbg !3624

land.rhs:                                         ; preds = %for.cond3
  %6 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3624
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %6, i64 0, i32 0, !dbg !3624
  %7 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3624
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3624
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !3624
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3624
  %cmp6 = icmp eq %struct.rtx_def* %insn.0, %9, !dbg !3624
  br i1 %cmp6, label %for.inc50, label %for.body7, !dbg !3621

for.body7:                                        ; preds = %land.rhs
  %call8 = tail call fastcc zeroext i8 @insn_contains_asm(%struct.rtx_def* nonnull %insn.0) #7, !dbg !3625
  %tobool9 = icmp eq i8 %call8, 0, !dbg !3625
  br i1 %tobool9, label %for.inc44, label %if.then, !dbg !3626

if.then:                                          ; preds = %for.body7
  %10 = load %struct.df*, %struct.df** @df, align 8, !dbg !3627
  %insns = getelementptr inbounds %struct.df, %struct.df* %10, i64 0, i32 10, !dbg !3627
  %11 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !3627
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !3627
  %rt_int = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !3627
  %12 = load i32, i32* %rt_int, align 8, !dbg !3627
  %idxprom = sext i32 %12 to i64, !dbg !3627
  %arrayidx13 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %11, i64 %idxprom, !dbg !3627
  %13 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx13, align 8, !dbg !3627
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %13, i64 0, i32 1, !dbg !3627
  %14 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !3627
  call void @llvm.dbg.value(metadata %union.df_ref_d** %14, metadata !3541, metadata !DIExpression()), !dbg !3628
  br label %for.cond14, !dbg !3629

for.cond14:                                       ; preds = %for.inc41, %if.then
  %def_rec.0 = phi %union.df_ref_d** [ %14, %if.then ], [ %incdec.ptr, %for.inc41 ], !dbg !3630
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !3541, metadata !DIExpression()), !dbg !3628
  %15 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !3631
  %tobool15 = icmp eq %union.df_ref_d* %15, null, !dbg !3632
  br i1 %tobool15, label %for.inc44.loopexit, label %for.body16, !dbg !3632

for.body16:                                       ; preds = %for.cond14
  call void @llvm.dbg.value(metadata %union.df_ref_d* %15, metadata !3605, metadata !DIExpression()), !dbg !3633
  %regno = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %15, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !3634
  %16 = load i32, i32* %regno, align 8, !dbg !3634
  call void @llvm.dbg.value(metadata i32 %16, metadata !3610, metadata !DIExpression()), !dbg !3633
  %cmp17 = icmp ult i32 %16, 53, !dbg !3635
  br i1 %cmp17, label %if.then18, label %for.inc41, !dbg !3636

if.then18:                                        ; preds = %for.body16
  %reg = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %15, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !3637
  %17 = bitcast %struct.rtx_def** %reg to i32**, !dbg !3637
  %18 = load i32*, i32** %17, align 8, !dbg !3637
  %bf.load = load i32, i32* %18, align 8, !dbg !3637
  %bf.clear = and i32 %bf.load, 65535, !dbg !3637
  %cmp20 = icmp eq i32 %bf.clear, 39, !dbg !3637
  %.cast = bitcast i32* %18 to %struct.rtx_def*, !dbg !3637
  br i1 %cmp20, label %cond.true, label %cond.end, !dbg !3637

cond.true:                                        ; preds = %if.then18
  %u23 = getelementptr inbounds i32, i32* %18, i64 2, !dbg !3637
  %rt_rtx26 = bitcast i32* %u23 to %struct.rtx_def**, !dbg !3637
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !3637
  br label %cond.end, !dbg !3637

cond.end:                                         ; preds = %if.then18, %cond.true
  %cond = phi %struct.rtx_def* [ %19, %cond.true ], [ %.cast, %if.then18 ], !dbg !3637
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond, i64 0, i32 0, !dbg !3637
  %bf.load29 = load i32, i32* %20, align 8, !dbg !3637
  %bf.lshr = lshr i32 %bf.load29, 16, !dbg !3637
  %bf.clear30 = and i32 %bf.lshr, 255, !dbg !3637
  call void @llvm.dbg.value(metadata i32 %bf.clear30, metadata !3614, metadata !DIExpression()), !dbg !3638
  %idxprom31 = zext i32 %16 to i64, !dbg !3639
  %idxprom33 = zext i32 %bf.clear30 to i64, !dbg !3639
  %arrayidx34 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom31, i64 %idxprom33, !dbg !3639
  %21 = load i8, i8* %arrayidx34, align 1, !dbg !3639
  %conv = zext i8 %21 to i32, !dbg !3639
  %add = add i32 %16, %conv, !dbg !3640
  %sub = add i32 %add, -1, !dbg !3641
  call void @llvm.dbg.value(metadata i32 %sub, metadata !3615, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.value(metadata i32 %16, metadata !3611, metadata !DIExpression()), !dbg !3638
  br label %for.cond35, !dbg !3642

for.cond35:                                       ; preds = %for.body38, %cond.end
  %i.0 = phi i32 [ %16, %cond.end ], [ %inc, %for.body38 ], !dbg !3644
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !3611, metadata !DIExpression()), !dbg !3638
  %cmp36 = icmp ugt i32 %i.0, %sub, !dbg !3645
  br i1 %cmp36, label %for.inc41.loopexit, label %for.body38, !dbg !3647

for.body38:                                       ; preds = %for.cond35
  %idxprom39 = zext i32 %i.0 to i64, !dbg !3648
  %arrayidx40 = getelementptr inbounds i8, i8* %regs_asm_clobbered, i64 %idxprom39, !dbg !3648
  store i8 1, i8* %arrayidx40, align 1, !dbg !3649
  %inc = add i32 %i.0, 1, !dbg !3650
  call void @llvm.dbg.value(metadata i32 %inc, metadata !3611, metadata !DIExpression()), !dbg !3638
  br label %for.cond35, !dbg !3651, !llvm.loop !3652

for.inc41.loopexit:                               ; preds = %for.cond35
  br label %for.inc41, !dbg !3654

for.inc41:                                        ; preds = %for.inc41.loopexit, %for.body16
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !3654
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !3541, metadata !DIExpression()), !dbg !3628
  br label %for.cond14, !dbg !3655, !llvm.loop !3656

for.inc44.loopexit:                               ; preds = %for.cond14
  br label %for.inc44, !dbg !3624

for.inc44:                                        ; preds = %for.inc44.loopexit, %for.body7
  %22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !3624
  %rt_rtx48 = bitcast %union.rtunion_def* %22 to %struct.rtx_def**, !dbg !3624
  br label %for.cond3, !dbg !3624, !llvm.loop !3658

for.inc50:                                        ; preds = %land.rhs, %for.cond3
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3619
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3660
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3619
  br label %for.cond, !dbg !3619, !llvm.loop !3661

for.end52:                                        ; preds = %for.cond
  ret void, !dbg !3663
}

declare dso_local void @error(i8*, ...) local_unnamed_addr #2

declare dso_local void @df_set_regs_ever_live(i32, i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define dso_local void @mark_elimination(i32 %from, i32 %to) local_unnamed_addr #5 !dbg !3664 {
entry:
  call void @llvm.dbg.value(metadata i32 %from, metadata !3668, metadata !DIExpression()), !dbg !3676
  call void @llvm.dbg.value(metadata i32 %to, metadata !3669, metadata !DIExpression()), !dbg !3676
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3677
  %cfg = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, i32 1, !dbg !3677
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3677
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i64 0, i32 0, !dbg !3677
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3677
  br label %for.cond, !dbg !3677

for.cond:                                         ; preds = %for.inc, %entry
  %3 = phi %struct.control_flow_graph* [ %1, %entry ], [ %.pre1, %for.inc ], !dbg !3678
  %.pn = phi %struct.basic_block_def* [ %2, %entry ], [ %bb.0, %for.inc ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !3679
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !3679
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !3670, metadata !DIExpression()), !dbg !3676
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i64 0, i32 1, !dbg !3678
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3678
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %4, !dbg !3678
  br i1 %cmp, label %for.end, label %for.body, !dbg !3677

for.body:                                         ; preds = %for.cond
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !3680
  %5 = load i32, i32* %index, align 8, !dbg !3680
  %call = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %5) #7, !dbg !3680
  %in = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call, i64 0, i32 2, !dbg !3680
  %6 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !3680
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %6, metadata !3671, metadata !DIExpression()), !dbg !3681
  %call3 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %6, i32 %from) #6, !dbg !3682
  %tobool = icmp eq i32 %call3, 0, !dbg !3682
  br i1 %tobool, label %for.inc, label %if.then, !dbg !3684

if.then:                                          ; preds = %for.body
  %call4 = tail call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %6, i32 %from) #6, !dbg !3685
  %call5 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %6, i32 %to) #6, !dbg !3687
  br label %for.inc, !dbg !3688

for.inc:                                          ; preds = %for.body, %if.then
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3678
  %cfg2.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !3689
  %.pre1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2.phi.trans.insert, align 8, !dbg !3678
  br label %for.cond, !dbg !3678, !llvm.loop !3690

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3692
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) unnamed_addr #0 !dbg !3693 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !3697, metadata !DIExpression()), !dbg !3698
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !3699
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 1, !dbg !3699
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !3699
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !3701
  %2 = load i32, i32* %block_info_size, align 8, !dbg !3701
  %cmp = icmp ugt i32 %2, %index, !dbg !3702
  br i1 %cmp, label %if.then, label %return, !dbg !3703

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !3704
  %3 = load i8**, i8*** %block_info, align 8, !dbg !3704
  %idxprom = zext i32 %index to i64, !dbg !3705
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !3705
  %4 = bitcast i8** %arrayidx3 to %struct.df_lr_bb_info**, !dbg !3705
  %5 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %4, align 8, !dbg !3705
  br label %return, !dbg !3706

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_lr_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !3707
  ret %struct.df_lr_bb_info* %retval.0, !dbg !3708
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal zeroext i8 @gate_ira() #5 !dbg !3709 {
entry:
  ret i8 1, !dbg !3710
}

; Function Attrs: nounwind uwtable
define internal i32 @rest_of_handle_ira() #5 !dbg !3711 {
entry:
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3712
  tail call fastcc void @ira(%struct._IO_FILE* %0) #7, !dbg !3713
  ret i32 0, !dbg !3714
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_class_hard_regs() unnamed_addr #5 !dbg !3715 {
entry:
  call void @llvm.dbg.value(metadata i32 26, metadata !3717, metadata !DIExpression()), !dbg !3722
  %0 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !3723
  %neg = xor i64 %0, -1, !dbg !3723
  %temp_hard_regset.promoted = load i64, i64* @temp_hard_regset, align 8, !dbg !3727
  br label %for.cond, !dbg !3732

for.cond:                                         ; preds = %for.end37, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.end37 ], [ 26, %entry ]
  %1 = phi i64 [ %and, %for.end37 ], [ %temp_hard_regset.promoted, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3717, metadata !DIExpression()), !dbg !3722
  %cmp = icmp sgt i64 %indvars.iv1, -1, !dbg !3733
  br i1 %cmp, label %for.body, label %for.end41, !dbg !3734

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1, !dbg !3735
  %2 = load i64, i64* %arrayidx, align 8, !dbg !3735
  call void @llvm.dbg.value(metadata i64 0, metadata !3721, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 0, metadata !3718, metadata !DIExpression()), !dbg !3722
  %arrayidx6 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %indvars.iv1, i64 0, !dbg !3736
  store i16 -1, i16* %arrayidx6, align 2, !dbg !3736
  br label %for.cond7.preheader, !dbg !3739

for.cond7.preheader:                              ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !3718, metadata !DIExpression()), !dbg !3722
  %and = and i64 %2, %neg, !dbg !3740
  br label %for.cond7, !dbg !3741

for.cond7:                                        ; preds = %for.cond7.preheader, %for.inc35
  %indvars.iv = phi i64 [ 0, %for.cond7.preheader ], [ %indvars.iv.next, %for.inc35 ], !dbg !3742
  %n.0 = phi i32 [ 0, %for.cond7.preheader ], [ %n.2, %for.inc35 ], !dbg !3742
  %processed_hard_reg_set.0 = phi i64 [ 0, %for.cond7.preheader ], [ %processed_hard_reg_set.1, %for.inc35 ], !dbg !3743
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3718, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i64 %processed_hard_reg_set.0, metadata !3721, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !3720, metadata !DIExpression()), !dbg !3722
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !3744
  br i1 %exitcond, label %for.end37, label %for.body9, !dbg !3741

for.body9:                                        ; preds = %for.cond7
  %arrayidx11 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_alloc_order, i64 0, i64 %indvars.iv, !dbg !3745
  %3 = load i32, i32* %arrayidx11, align 4, !dbg !3745
  call void @llvm.dbg.value(metadata i32 %3, metadata !3719, metadata !DIExpression()), !dbg !3722
  %sh_prom = zext i32 %3 to i64, !dbg !3746
  %shl = shl i64 1, %sh_prom, !dbg !3746
  %and12 = and i64 %processed_hard_reg_set.0, %shl, !dbg !3746
  %tobool = icmp eq i64 %and12, 0, !dbg !3746
  br i1 %tobool, label %if.end, label %for.inc35, !dbg !3748

if.end:                                           ; preds = %for.body9
  %or = or i64 %processed_hard_reg_set.0, %shl, !dbg !3749
  call void @llvm.dbg.value(metadata i64 %or, metadata !3721, metadata !DIExpression()), !dbg !3722
  %and17 = and i64 %and, %shl, !dbg !3750
  %tobool18 = icmp eq i64 %and17, 0, !dbg !3750
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !3751

if.then19:                                        ; preds = %if.end
  %idxprom22 = sext i32 %3 to i64, !dbg !3752
  %arrayidx23 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %indvars.iv1, i64 %idxprom22, !dbg !3752
  store i16 -1, i16* %arrayidx23, align 2, !dbg !3753
  br label %for.inc35, !dbg !3752

if.else:                                          ; preds = %if.end
  %conv = trunc i32 %n.0 to i16, !dbg !3754
  %idxprom26 = sext i32 %3 to i64, !dbg !3756
  %arrayidx27 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %indvars.iv1, i64 %idxprom26, !dbg !3756
  store i16 %conv, i16* %arrayidx27, align 2, !dbg !3757
  %conv28 = trunc i32 %3 to i16, !dbg !3758
  %inc31 = add nsw i32 %n.0, 1, !dbg !3759
  call void @llvm.dbg.value(metadata i32 %inc31, metadata !3720, metadata !DIExpression()), !dbg !3722
  %idxprom32 = sext i32 %n.0 to i64, !dbg !3760
  %arrayidx33 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_regs, i64 0, i64 %indvars.iv1, i64 %idxprom32, !dbg !3760
  store i16 %conv28, i16* %arrayidx33, align 2, !dbg !3761
  br label %for.inc35

for.inc35:                                        ; preds = %for.body9, %if.then19, %if.else
  %n.2 = phi i32 [ %n.0, %for.body9 ], [ %inc31, %if.else ], [ %n.0, %if.then19 ], !dbg !3762
  %processed_hard_reg_set.1 = phi i64 [ %processed_hard_reg_set.0, %for.body9 ], [ %or, %if.else ], [ %or, %if.then19 ], !dbg !3723
  call void @llvm.dbg.value(metadata i64 %processed_hard_reg_set.1, metadata !3721, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 %n.2, metadata !3720, metadata !DIExpression()), !dbg !3722
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3763
  call void @llvm.dbg.value(metadata i32 undef, metadata !3718, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3722
  br label %for.cond7, !dbg !3764, !llvm.loop !3765

for.end37:                                        ; preds = %for.cond7
  %n.0.lcssa = phi i32 [ %n.0, %for.cond7 ], !dbg !3742
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !3720, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !3720, metadata !DIExpression()), !dbg !3722
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !3720, metadata !DIExpression()), !dbg !3722
  %arrayidx39 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_hard_regs_num, i64 0, i64 %indvars.iv1, !dbg !3767
  store i32 %n.0.lcssa, i32* %arrayidx39, align 4, !dbg !3768
  %indvars.iv.next2 = add nsw i64 %indvars.iv1, -1, !dbg !3769
  call void @llvm.dbg.value(metadata i32 undef, metadata !3717, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !3722
  br label %for.cond, !dbg !3770, !llvm.loop !3771

for.end41:                                        ; preds = %for.cond
  %.lcssa = phi i64 [ %1, %for.cond ]
  store i64 %.lcssa, i64* @temp_hard_regset, align 8, !dbg !3727
  ret void, !dbg !3773
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_available_class_regs() unnamed_addr #5 !dbg !3774 {
entry:
  %call = tail call i8* @memset(i8* bitcast ([27 x i32]* @ira_available_class_regs to i8*), i32 0, i64 108) #6, !dbg !3778
  call void @llvm.dbg.value(metadata i32 0, metadata !3776, metadata !DIExpression()), !dbg !3779
  %0 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !3780
  %neg = xor i64 %0, -1, !dbg !3780
  %temp_hard_regset.promoted = load i64, i64* @temp_hard_regset, align 8, !dbg !3784
  br label %for.cond, !dbg !3788

for.cond:                                         ; preds = %for.inc8, %entry
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc8 ], [ 0, %entry ]
  %1 = phi i64 [ %and, %for.inc8 ], [ %temp_hard_regset.promoted, %entry ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3776, metadata !DIExpression()), !dbg !3779
  %exitcond3 = icmp eq i64 %indvars.iv1, 27, !dbg !3789
  br i1 %exitcond3, label %for.end10, label %for.body, !dbg !3790

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1, !dbg !3791
  %2 = load i64, i64* %arrayidx, align 8, !dbg !3791
  %and = and i64 %2, %neg, !dbg !3792
  call void @llvm.dbg.value(metadata i32 0, metadata !3777, metadata !DIExpression()), !dbg !3779
  %arrayidx6 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_available_class_regs, i64 0, i64 %indvars.iv1, !dbg !3784
  br label %for.cond1, !dbg !3793

for.cond1:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !3794
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3777, metadata !DIExpression()), !dbg !3779
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !3795
  br i1 %exitcond, label %for.inc8, label %for.body3, !dbg !3796

for.body3:                                        ; preds = %for.cond1
  %shl = shl i64 1, %indvars.iv, !dbg !3797
  %and4 = and i64 %and, %shl, !dbg !3797
  %tobool = icmp eq i64 %and4, 0, !dbg !3797
  br i1 %tobool, label %for.inc, label %if.then, !dbg !3798

if.then:                                          ; preds = %for.body3
  %3 = load i32, i32* %arrayidx6, align 4, !dbg !3799
  %inc = add nsw i32 %3, 1, !dbg !3799
  store i32 %inc, i32* %arrayidx6, align 4, !dbg !3799
  br label %for.inc, !dbg !3800

for.inc:                                          ; preds = %for.body3, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3801
  call void @llvm.dbg.value(metadata i32 undef, metadata !3777, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3779
  br label %for.cond1, !dbg !3802, !llvm.loop !3803

for.inc8:                                         ; preds = %for.cond1
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3805
  call void @llvm.dbg.value(metadata i32 undef, metadata !3776, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3779
  br label %for.cond, !dbg !3806, !llvm.loop !3807

for.end10:                                        ; preds = %for.cond
  %.lcssa = phi i64 [ %1, %for.cond ]
  store i64 %.lcssa, i64* @temp_hard_regset, align 8, !dbg !3784
  ret void, !dbg !3809
}

declare dso_local i8* @memset(i8*, i32, i64) local_unnamed_addr #2

declare dso_local i32 @ix86_memory_move_cost(i32, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @hard_reg_set_subset_p(i64 %x, i64 %y) unnamed_addr #0 !dbg !3810 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !3815, metadata !DIExpression()), !dbg !3817
  call void @llvm.dbg.value(metadata i64 %y, metadata !3816, metadata !DIExpression()), !dbg !3817
  %neg = xor i64 %y, -1, !dbg !3818
  %and = and i64 %neg, %x, !dbg !3819
  %cmp = icmp eq i64 %and, 0, !dbg !3820
  %conv1 = zext i1 %cmp to i8, !dbg !3821
  ret i8 %conv1, !dbg !3822
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_reg_subclasses() unnamed_addr #5 !dbg !3823 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !3825, metadata !DIExpression()), !dbg !3837
  br label %for.cond, !dbg !3838

for.cond:                                         ; preds = %for.inc6, %entry
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.inc6 ], [ 0, %entry ], !dbg !3840
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !3825, metadata !DIExpression()), !dbg !3837
  %exitcond9 = icmp eq i64 %indvars.iv7, 27, !dbg !3841
  br i1 %exitcond9, label %for.cond9.preheader, label %for.cond1.preheader, !dbg !3843

for.cond1.preheader:                              ; preds = %for.cond
  br label %for.cond1, !dbg !3844

for.cond9.preheader:                              ; preds = %for.cond
  br label %for.cond9, !dbg !3846

for.cond1:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv4 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next5, %for.body3 ], !dbg !3847
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !3826, metadata !DIExpression()), !dbg !3837
  %exitcond6 = icmp eq i64 %indvars.iv4, 27, !dbg !3848
  br i1 %exitcond6, label %for.inc6, label %for.body3, !dbg !3844

for.body3:                                        ; preds = %for.cond1
  %arrayidx5 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @alloc_reg_class_subclasses, i64 0, i64 %indvars.iv7, i64 %indvars.iv4, !dbg !3850
  store i32 27, i32* %arrayidx5, align 4, !dbg !3851
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !3852
  call void @llvm.dbg.value(metadata i32 undef, metadata !3826, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3837
  br label %for.cond1, !dbg !3853, !llvm.loop !3854

for.inc6:                                         ; preds = %for.cond1
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !3856
  call void @llvm.dbg.value(metadata i32 undef, metadata !3825, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3837
  br label %for.cond, !dbg !3857, !llvm.loop !3858

for.cond9:                                        ; preds = %for.cond9.preheader, %for.inc38
  %indvars.iv1 = phi i64 [ 0, %for.cond9.preheader ], [ %indvars.iv.next2, %for.inc38 ], !dbg !3860
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !3825, metadata !DIExpression()), !dbg !3837
  %exitcond3 = icmp eq i64 %indvars.iv1, 27, !dbg !3861
  br i1 %exitcond3, label %for.end40, label %for.body11, !dbg !3846

for.body11:                                       ; preds = %for.cond9
  %cmp12 = icmp eq i64 %indvars.iv1, 0, !dbg !3862
  br i1 %cmp12, label %for.inc38, label %if.end, !dbg !3864

if.end:                                           ; preds = %for.body11
  %arrayidx14 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv1, !dbg !3865
  %0 = load i64, i64* %arrayidx14, align 8, !dbg !3865
  %1 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !3866
  %neg = xor i64 %1, -1, !dbg !3866
  %and = and i64 %0, %neg, !dbg !3866
  store i64 %and, i64* @temp_hard_regset, align 8, !dbg !3866
  %call = tail call fastcc zeroext i8 @hard_reg_set_empty_p(i64 %and) #7, !dbg !3867
  %tobool = icmp eq i8 %call, 0, !dbg !3867
  br i1 %tobool, label %for.cond17.preheader, label %for.inc38, !dbg !3869

for.cond17.preheader:                             ; preds = %if.end
  br label %for.cond17, !dbg !3870

for.cond17:                                       ; preds = %for.cond17.preheader, %for.inc35
  %indvars.iv = phi i64 [ 0, %for.cond17.preheader ], [ %indvars.iv.next, %for.inc35 ], !dbg !3871
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !3826, metadata !DIExpression()), !dbg !3837
  %exitcond = icmp eq i64 %indvars.iv, 27, !dbg !3872
  br i1 %exitcond, label %for.inc38.loopexit, label %for.body19, !dbg !3870

for.body19:                                       ; preds = %for.cond17
  %cmp20 = icmp eq i64 %indvars.iv1, %indvars.iv, !dbg !3873
  br i1 %cmp20, label %for.inc35, label %if.then21, !dbg !3874

if.then21:                                        ; preds = %for.body19
  %arrayidx23 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv, !dbg !3875
  %2 = load i64, i64* %arrayidx23, align 8, !dbg !3875
  call void @llvm.dbg.value(metadata i64 %2, metadata !3827, metadata !DIExpression()), !dbg !3837
  %3 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !3876
  %neg24 = xor i64 %3, -1, !dbg !3876
  %and25 = and i64 %2, %neg24, !dbg !3876
  call void @llvm.dbg.value(metadata i64 %and25, metadata !3827, metadata !DIExpression()), !dbg !3837
  %4 = load i64, i64* @temp_hard_regset, align 8, !dbg !3877
  %call26 = tail call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %4, i64 %and25) #7, !dbg !3879
  %tobool27 = icmp eq i8 %call26, 0, !dbg !3879
  br i1 %tobool27, label %for.inc35, label %if.end29, !dbg !3880

if.end29:                                         ; preds = %if.then21
  %arrayidx32 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @alloc_reg_class_subclasses, i64 0, i64 %indvars.iv, i64 0, !dbg !3881
  call void @llvm.dbg.value(metadata i32* %arrayidx32, metadata !3828, metadata !DIExpression()), !dbg !3882
  br label %while.cond, !dbg !3883

while.cond:                                       ; preds = %while.body, %if.end29
  %p.0 = phi i32* [ %arrayidx32, %if.end29 ], [ %incdec.ptr, %while.body ], !dbg !3882
  call void @llvm.dbg.value(metadata i32* %p.0, metadata !3828, metadata !DIExpression()), !dbg !3882
  %5 = load i32, i32* %p.0, align 4, !dbg !3884
  %cmp33 = icmp eq i32 %5, 27, !dbg !3885
  br i1 %cmp33, label %while.end, label %while.body, !dbg !3883

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i32, i32* %p.0, i64 1, !dbg !3886
  call void @llvm.dbg.value(metadata i32* %incdec.ptr, metadata !3828, metadata !DIExpression()), !dbg !3882
  br label %while.cond, !dbg !3883, !llvm.loop !3887

while.end:                                        ; preds = %while.cond
  %p.0.lcssa = phi i32* [ %p.0, %while.cond ], !dbg !3882
  call void @llvm.dbg.value(metadata i32* %p.0.lcssa, metadata !3828, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.value(metadata i32* %p.0.lcssa, metadata !3828, metadata !DIExpression()), !dbg !3882
  call void @llvm.dbg.value(metadata i32* %p.0.lcssa, metadata !3828, metadata !DIExpression()), !dbg !3882
  %6 = trunc i64 %indvars.iv1 to i32, !dbg !3888
  store i32 %6, i32* %p.0.lcssa, align 4, !dbg !3888
  br label %for.inc35, !dbg !3889

for.inc35:                                        ; preds = %if.then21, %for.body19, %while.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !3890
  call void @llvm.dbg.value(metadata i32 undef, metadata !3826, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3837
  br label %for.cond17, !dbg !3891, !llvm.loop !3892

for.inc38.loopexit:                               ; preds = %for.cond17
  br label %for.inc38, !dbg !3894

for.inc38:                                        ; preds = %for.inc38.loopexit, %if.end, %for.body11
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !3894
  call void @llvm.dbg.value(metadata i32 undef, metadata !3825, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3837
  br label %for.cond9, !dbg !3895, !llvm.loop !3896

for.end40:                                        ; preds = %for.cond9
  ret void, !dbg !3898
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_cover_and_important_classes() unnamed_addr #5 !dbg !2398 {
entry:
  %0 = load i32* ()*, i32* ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i64 0, i32 96), align 8, !dbg !3899
  %cmp = icmp eq i32* ()* %0, null, !dbg !3901
  br i1 %cmp, label %if.end, label %if.else, !dbg !3902

if.else:                                          ; preds = %entry
  %call = tail call i32* %0() #6, !dbg !3903
  call void @llvm.dbg.value(metadata i32* %call, metadata !2405, metadata !DIExpression()), !dbg !3904
  br label %if.end

if.end:                                           ; preds = %entry, %if.else
  %cover_classes.0 = phi i32* [ %call, %if.else ], [ null, %entry ], !dbg !3905
  call void @llvm.dbg.value(metadata i32* %cover_classes.0, metadata !2405, metadata !DIExpression()), !dbg !3904
  %cmp1 = icmp eq i32* %cover_classes.0, null, !dbg !3906
  br i1 %cmp1, label %if.end9, label %for.cond.preheader, !dbg !3908

for.cond.preheader:                               ; preds = %if.end
  br label %for.cond, !dbg !3909

for.cond:                                         ; preds = %for.cond.preheader, %for.body
  %indvars.iv23 = phi i64 [ 0, %for.cond.preheader ], [ %indvars.iv.next24, %for.body ], !dbg !3912
  call void @llvm.dbg.value(metadata i64 %indvars.iv23, metadata !2400, metadata !DIExpression()), !dbg !3904
  %arrayidx = getelementptr inbounds i32, i32* %cover_classes.0, i64 %indvars.iv23, !dbg !3913
  %1 = load i32, i32* %arrayidx, align 4, !dbg !3913
  call void @llvm.dbg.value(metadata i32 %1, metadata !2403, metadata !DIExpression()), !dbg !3904
  %cmp4 = icmp eq i32 %1, 27, !dbg !3915
  %arrayidx6 = getelementptr inbounds [28 x i32], [28 x i32]* @setup_cover_and_important_classes.classes, i64 0, i64 %indvars.iv23, !dbg !3916
  br i1 %cmp4, label %for.end, label %for.body, !dbg !3909

for.body:                                         ; preds = %for.cond
  store i32 %1, i32* %arrayidx6, align 4, !dbg !3917
  %indvars.iv.next24 = add nuw i64 %indvars.iv23, 1, !dbg !3918
  call void @llvm.dbg.value(metadata i32 undef, metadata !2400, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3904
  br label %for.cond, !dbg !3919, !llvm.loop !3920

for.end:                                          ; preds = %for.cond
  %arrayidx6.lcssa = phi i32* [ %arrayidx6, %for.cond ], !dbg !3916
  store i32 27, i32* %arrayidx6.lcssa, align 4, !dbg !3922
  br label %if.end9

if.end9:                                          ; preds = %if.end, %for.end
  %2 = load i32, i32* @flag_ira_algorithm, align 4, !dbg !3923
  %cmp10 = icmp eq i32 %2, 1, !dbg !3925
  br i1 %cmp10, label %for.cond12.preheader, label %if.end63, !dbg !3926

for.cond12.preheader:                             ; preds = %if.end9
  br label %for.cond12, !dbg !3927

for.cond12:                                       ; preds = %for.cond12.preheader, %for.inc58
  %indvars.iv20 = phi i64 [ 0, %for.cond12.preheader ], [ %indvars.iv.next21, %for.inc58 ], !dbg !3930
  %n.0 = phi i32 [ 0, %for.cond12.preheader ], [ %n.2, %for.inc58 ], !dbg !3930
  call void @llvm.dbg.value(metadata i64 %indvars.iv20, metadata !2400, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 %n.0, metadata !2402, metadata !DIExpression()), !dbg !3904
  %exitcond22 = icmp eq i64 %indvars.iv20, 28, !dbg !3931
  br i1 %exitcond22, label %for.end60, label %for.body14, !dbg !3927

for.body14:                                       ; preds = %for.cond12
  %cmp15 = icmp eq i64 %indvars.iv20, 0, !dbg !3933
  br i1 %cmp15, label %for.inc58, label %for.cond18.preheader, !dbg !3936

for.cond18.preheader:                             ; preds = %for.body14
  br label %for.cond18, !dbg !3937

for.cond18:                                       ; preds = %for.cond18.preheader, %for.inc25
  %j.0 = phi i32 [ %inc26, %for.inc25 ], [ 0, %for.cond18.preheader ], !dbg !3939
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !2401, metadata !DIExpression()), !dbg !3904
  %cmp19 = icmp ult i32 %j.0, 33, !dbg !3940
  %exitcond16 = icmp eq i32 %j.0, 33, !dbg !3940
  br i1 %exitcond16, label %for.end27, label %for.body20, !dbg !3937

for.body20:                                       ; preds = %for.cond18
  %call21 = tail call i32 @regclass_for_constraint(i32 %j.0) #6, !dbg !3942
  %3 = zext i32 %call21 to i64, !dbg !3944
  %cmp22 = icmp eq i64 %indvars.iv20, %3, !dbg !3944
  br i1 %cmp22, label %for.end27, label %for.inc25, !dbg !3945

for.inc25:                                        ; preds = %for.body20
  %inc26 = add nuw nsw i32 %j.0, 1, !dbg !3946
  call void @llvm.dbg.value(metadata i32 %inc26, metadata !2401, metadata !DIExpression()), !dbg !3904
  br label %for.cond18, !dbg !3947, !llvm.loop !3948

for.end27:                                        ; preds = %for.cond18, %for.body20
  %cmp19.lcssa = phi i1 [ %cmp19, %for.cond18 ], [ %cmp19, %for.body20 ], !dbg !3940
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !2401, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 %j.0, metadata !2401, metadata !DIExpression()), !dbg !3904
  br i1 %cmp19.lcssa, label %if.then29, label %if.end33, !dbg !3950

if.then29:                                        ; preds = %for.end27
  %inc30 = add nsw i32 %n.0, 1, !dbg !3951
  call void @llvm.dbg.value(metadata i32 %inc30, metadata !2402, metadata !DIExpression()), !dbg !3904
  %idxprom31 = sext i32 %n.0 to i64, !dbg !3954
  %arrayidx32 = getelementptr inbounds [28 x i32], [28 x i32]* @setup_cover_and_important_classes.classes, i64 0, i64 %idxprom31, !dbg !3954
  %4 = trunc i64 %indvars.iv20 to i32, !dbg !3955
  store i32 %4, i32* %arrayidx32, align 4, !dbg !3955
  br label %for.inc58, !dbg !3956

if.end33:                                         ; preds = %for.end27
  %arrayidx35 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv20, !dbg !3957
  %5 = load i64, i64* %arrayidx35, align 8, !dbg !3957
  %6 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !3958
  %neg = xor i64 %6, -1, !dbg !3958
  %and = and i64 %5, %neg, !dbg !3958
  store i64 %and, i64* @temp_hard_regset, align 8, !dbg !3958
  call void @llvm.dbg.value(metadata i32 0, metadata !2401, metadata !DIExpression()), !dbg !3904
  br label %for.cond36, !dbg !3959

for.cond36:                                       ; preds = %for.inc49, %if.end33
  %indvars.iv17 = phi i64 [ %indvars.iv.next18, %for.inc49 ], [ 0, %if.end33 ], !dbg !3961
  call void @llvm.dbg.value(metadata i64 %indvars.iv17, metadata !2401, metadata !DIExpression()), !dbg !3904
  %exitcond19 = icmp eq i64 %indvars.iv17, 27, !dbg !3962
  br i1 %exitcond19, label %for.end51, label %for.body38, !dbg !3964

for.body38:                                       ; preds = %for.cond36
  %cmp39 = icmp eq i64 %indvars.iv20, %indvars.iv17, !dbg !3965
  br i1 %cmp39, label %for.inc49, label %if.end41, !dbg !3968

if.end41:                                         ; preds = %for.body38
  %arrayidx43 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv17, !dbg !3969
  %7 = load i64, i64* %arrayidx43, align 8, !dbg !3969
  call void @llvm.dbg.value(metadata i64 %7, metadata !2406, metadata !DIExpression()), !dbg !3904
  %8 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !3970
  %neg44 = xor i64 %8, -1, !dbg !3970
  %and45 = and i64 %7, %neg44, !dbg !3970
  call void @llvm.dbg.value(metadata i64 %and45, metadata !2406, metadata !DIExpression()), !dbg !3904
  %9 = load i64, i64* @temp_hard_regset, align 8, !dbg !3971
  %call46 = tail call fastcc zeroext i8 @hard_reg_set_equal_p(i64 %9, i64 %and45) #7, !dbg !3973
  %tobool = icmp eq i8 %call46, 0, !dbg !3973
  br i1 %tobool, label %for.inc49, label %for.end51, !dbg !3974

for.inc49:                                        ; preds = %if.end41, %for.body38
  %indvars.iv.next18 = add nuw nsw i64 %indvars.iv17, 1, !dbg !3975
  call void @llvm.dbg.value(metadata i32 undef, metadata !2401, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3904
  br label %for.cond36, !dbg !3976, !llvm.loop !3977

for.end51:                                        ; preds = %for.cond36, %if.end41
  %indvars.iv17.lcssa = phi i64 [ %indvars.iv17, %for.cond36 ], [ %indvars.iv17, %if.end41 ], !dbg !3961
  call void @llvm.dbg.value(metadata i64 %indvars.iv17.lcssa, metadata !2401, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i64 %indvars.iv17.lcssa, metadata !2401, metadata !DIExpression()), !dbg !3904
  %10 = and i64 %indvars.iv17.lcssa, 4294967295, !dbg !3979
  %cmp52 = icmp ult i64 %10, %indvars.iv20, !dbg !3979
  br i1 %cmp52, label %for.inc58, label %if.then53, !dbg !3981

if.then53:                                        ; preds = %for.end51
  %inc54 = add nsw i32 %n.0, 1, !dbg !3982
  call void @llvm.dbg.value(metadata i32 %inc54, metadata !2402, metadata !DIExpression()), !dbg !3904
  %idxprom55 = sext i32 %n.0 to i64, !dbg !3983
  %arrayidx56 = getelementptr inbounds [28 x i32], [28 x i32]* @setup_cover_and_important_classes.classes, i64 0, i64 %idxprom55, !dbg !3983
  %11 = trunc i64 %indvars.iv20 to i32, !dbg !3984
  store i32 %11, i32* %arrayidx56, align 4, !dbg !3984
  br label %for.inc58, !dbg !3983

for.inc58:                                        ; preds = %for.end51, %if.then53, %for.body14, %if.then29
  %n.2 = phi i32 [ %inc30, %if.then29 ], [ %n.0, %for.body14 ], [ %inc54, %if.then53 ], [ %n.0, %for.end51 ], !dbg !3985
  call void @llvm.dbg.value(metadata i32 %n.2, metadata !2402, metadata !DIExpression()), !dbg !3904
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1, !dbg !3986
  call void @llvm.dbg.value(metadata i32 undef, metadata !2400, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3904
  br label %for.cond12, !dbg !3987, !llvm.loop !3988

for.end60:                                        ; preds = %for.cond12
  %n.0.lcssa = phi i32 [ %n.0, %for.cond12 ], !dbg !3930
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !2402, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !2402, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 %n.0.lcssa, metadata !2402, metadata !DIExpression()), !dbg !3904
  %idxprom61 = sext i32 %n.0.lcssa to i64, !dbg !3990
  %arrayidx62 = getelementptr inbounds [28 x i32], [28 x i32]* @setup_cover_and_important_classes.classes, i64 0, i64 %idxprom61, !dbg !3990
  store i32 27, i32* %arrayidx62, align 4, !dbg !3991
  br label %if.end63, !dbg !3992

if.end63:                                         ; preds = %for.end60, %if.end9
  store i32 0, i32* @ira_reg_class_cover_size, align 4, !dbg !3993
  call void @llvm.dbg.value(metadata i32 0, metadata !2400, metadata !DIExpression()), !dbg !3904
  br label %for.cond64, !dbg !3994

for.cond64:                                       ; preds = %for.inc93, %if.end63
  %indvars.iv14 = phi i64 [ %indvars.iv.next15, %for.inc93 ], [ 0, %if.end63 ], !dbg !3996
  call void @llvm.dbg.value(metadata i64 %indvars.iv14, metadata !2400, metadata !DIExpression()), !dbg !3904
  %arrayidx66 = getelementptr inbounds [28 x i32], [28 x i32]* @setup_cover_and_important_classes.classes, i64 0, i64 %indvars.iv14, !dbg !3997
  %12 = load i32, i32* %arrayidx66, align 4, !dbg !3997
  call void @llvm.dbg.value(metadata i32 %12, metadata !2403, metadata !DIExpression()), !dbg !3904
  %cmp67 = icmp eq i32 %12, 27, !dbg !3999
  br i1 %cmp67, label %for.end95, label %for.cond69.preheader, !dbg !4000

for.cond69.preheader:                             ; preds = %for.cond64
  br label %for.cond69, !dbg !4001

for.cond69:                                       ; preds = %for.cond69.preheader, %for.inc79
  %indvars.iv11 = phi i64 [ 0, %for.cond69.preheader ], [ %indvars.iv.next12, %for.inc79 ], !dbg !4004
  call void @llvm.dbg.value(metadata i64 %indvars.iv11, metadata !2401, metadata !DIExpression()), !dbg !3904
  %exitcond13 = icmp eq i64 %indvars.iv11, %indvars.iv14, !dbg !4005
  br i1 %exitcond13, label %for.end81, label %for.body71, !dbg !4001

for.body71:                                       ; preds = %for.cond69
  %13 = load i32, i32* @flag_ira_algorithm, align 4, !dbg !4007
  %cmp72 = icmp eq i32 %13, 1, !dbg !4009
  br i1 %cmp72, label %for.inc79, label %land.lhs.true, !dbg !4010

land.lhs.true:                                    ; preds = %for.body71
  %arrayidx74 = getelementptr inbounds [28 x i32], [28 x i32]* @setup_cover_and_important_classes.classes, i64 0, i64 %indvars.iv11, !dbg !4011
  %14 = load i32, i32* %arrayidx74, align 4, !dbg !4011
  %call75 = tail call i32 @reg_classes_intersect_p(i32 %12, i32 %14) #6, !dbg !4012
  %tobool76 = icmp eq i32 %call75, 0, !dbg !4012
  br i1 %tobool76, label %for.inc79, label %if.then77, !dbg !4013

if.then77:                                        ; preds = %land.lhs.true
  tail call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i32 792, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !4014
  br label %for.inc79, !dbg !4014

for.inc79:                                        ; preds = %land.lhs.true, %for.body71, %if.then77
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1, !dbg !4015
  call void @llvm.dbg.value(metadata i32 undef, metadata !2401, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3904
  br label %for.cond69, !dbg !4016, !llvm.loop !4017

for.end81:                                        ; preds = %for.cond69
  %idxprom82 = sext i32 %12 to i64, !dbg !4019
  %arrayidx83 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom82, !dbg !4019
  %15 = load i64, i64* %arrayidx83, align 8, !dbg !4019
  %16 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4020
  %neg84 = xor i64 %16, -1, !dbg !4020
  %and85 = and i64 %15, %neg84, !dbg !4020
  store i64 %and85, i64* @temp_hard_regset, align 8, !dbg !4020
  %call86 = tail call fastcc zeroext i8 @hard_reg_set_empty_p(i64 %and85) #7, !dbg !4021
  %tobool87 = icmp eq i8 %call86, 0, !dbg !4021
  br i1 %tobool87, label %if.then88, label %for.inc93, !dbg !4023

if.then88:                                        ; preds = %for.end81
  %17 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4024
  %inc89 = add nsw i32 %17, 1, !dbg !4024
  store i32 %inc89, i32* @ira_reg_class_cover_size, align 4, !dbg !4024
  %idxprom90 = sext i32 %17 to i64, !dbg !4025
  %arrayidx91 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %idxprom90, !dbg !4025
  store i32 %12, i32* %arrayidx91, align 4, !dbg !4026
  br label %for.inc93, !dbg !4025

for.inc93:                                        ; preds = %for.end81, %if.then88
  %indvars.iv.next15 = add nuw i64 %indvars.iv14, 1, !dbg !4027
  call void @llvm.dbg.value(metadata i32 undef, metadata !2400, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3904
  br label %for.cond64, !dbg !4028, !llvm.loop !4029

for.end95:                                        ; preds = %for.cond64
  store i32 0, i32* @ira_important_classes_num, align 4, !dbg !4031
  call void @llvm.dbg.value(metadata i32 0, metadata !2403, metadata !DIExpression()), !dbg !3904
  br label %for.cond96, !dbg !4032

for.cond96:                                       ; preds = %for.inc145, %for.end95
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %for.inc145 ], [ 0, %for.end95 ], !dbg !4034
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !2403, metadata !DIExpression()), !dbg !3904
  %exitcond = icmp eq i64 %indvars.iv9, 27, !dbg !4035
  br i1 %exitcond, label %for.cond148.preheader, label %for.body98, !dbg !4037

for.cond148.preheader:                            ; preds = %for.cond96
  %18 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4038
  %19 = sext i32 %18 to i64, !dbg !4041
  br label %for.cond148, !dbg !4041

for.body98:                                       ; preds = %for.cond96
  %arrayidx100 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv9, !dbg !4042
  %20 = load i64, i64* %arrayidx100, align 8, !dbg !4042
  %21 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4044
  %neg101 = xor i64 %21, -1, !dbg !4044
  %and102 = and i64 %20, %neg101, !dbg !4044
  store i64 %and102, i64* @temp_hard_regset, align 8, !dbg !4044
  %call103 = tail call fastcc zeroext i8 @hard_reg_set_empty_p(i64 %and102) #7, !dbg !4045
  %tobool104 = icmp eq i8 %call103, 0, !dbg !4045
  br i1 %tobool104, label %for.cond106.preheader, label %for.inc145, !dbg !4047

for.cond106.preheader:                            ; preds = %for.body98
  br label %for.cond106, !dbg !4048

for.cond106:                                      ; preds = %for.cond106.preheader, %if.else125
  %indvars.iv7 = phi i64 [ 0, %for.cond106.preheader ], [ %indvars.iv.next8, %if.else125 ], !dbg !4051
  %set_p.0 = phi i8 [ 0, %for.cond106.preheader ], [ %spec.select, %if.else125 ], !dbg !4051
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !2401, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.0, metadata !2404, metadata !DIExpression()), !dbg !3904
  %22 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4052
  %23 = sext i32 %22 to i64, !dbg !4054
  %cmp107 = icmp slt i64 %indvars.iv7, %23, !dbg !4054
  br i1 %cmp107, label %for.body108, label %for.end133.loopexit, !dbg !4048

for.body108:                                      ; preds = %for.cond106
  %24 = load i64, i64* %arrayidx100, align 8, !dbg !4055
  %25 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4057
  %neg111 = xor i64 %25, -1, !dbg !4057
  %and112 = and i64 %24, %neg111, !dbg !4057
  store i64 %and112, i64* @temp_hard_regset, align 8, !dbg !4057
  %arrayidx114 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv7, !dbg !4058
  %26 = load i32, i32* %arrayidx114, align 4, !dbg !4058
  %idxprom115 = zext i32 %26 to i64, !dbg !4058
  %arrayidx116 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom115, !dbg !4058
  %27 = load i64, i64* %arrayidx116, align 8, !dbg !4058
  call void @llvm.dbg.value(metadata i64 %27, metadata !2406, metadata !DIExpression()), !dbg !3904
  %and118 = and i64 %27, %neg111, !dbg !4059
  call void @llvm.dbg.value(metadata i64 %and118, metadata !2406, metadata !DIExpression()), !dbg !3904
  %28 = zext i32 %26 to i64, !dbg !4060
  %cmp121 = icmp eq i64 %indvars.iv9, %28, !dbg !4060
  br i1 %cmp121, label %for.end133.loopexit, label %lor.lhs.false, !dbg !4062

lor.lhs.false:                                    ; preds = %for.body108
  %call122 = tail call fastcc zeroext i8 @hard_reg_set_equal_p(i64 %and112, i64 %and118) #7, !dbg !4063
  %tobool123 = icmp eq i8 %call122, 0, !dbg !4063
  br i1 %tobool123, label %if.else125, label %lor.lhs.false.for.end133_crit_edge, !dbg !4064

lor.lhs.false.for.end133_crit_edge:               ; preds = %lor.lhs.false
  %indvars.iv7.lcssa28 = phi i64 [ %indvars.iv7, %lor.lhs.false ], !dbg !4051
  %set_p.0.lcssa26 = phi i8 [ %set_p.0, %lor.lhs.false ], !dbg !4051
  call void @llvm.dbg.value(metadata i64 %indvars.iv7.lcssa28, metadata !2401, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.0.lcssa26, metadata !2404, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.0.lcssa26, metadata !2404, metadata !DIExpression()), !dbg !3904
  %.pre = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4065
  br label %for.end133, !dbg !4064

if.else125:                                       ; preds = %lor.lhs.false
  %29 = load i64, i64* @temp_hard_regset, align 8, !dbg !4067
  %call126 = tail call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %29, i64 %and118) #7, !dbg !4069
  %tobool127 = icmp eq i8 %call126, 0, !dbg !4069
  %spec.select = select i1 %tobool127, i8 %set_p.0, i8 1, !dbg !4070
  call void @llvm.dbg.value(metadata i8 %spec.select, metadata !2404, metadata !DIExpression()), !dbg !3904
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !4071
  call void @llvm.dbg.value(metadata i32 undef, metadata !2401, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3904
  br label %for.cond106, !dbg !4072, !llvm.loop !4073

for.end133.loopexit:                              ; preds = %for.cond106, %for.body108
  %indvars.iv7.lcssa = phi i64 [ %indvars.iv7, %for.cond106 ], [ %indvars.iv7, %for.body108 ], !dbg !4051
  %set_p.0.lcssa = phi i8 [ %set_p.0, %for.cond106 ], [ %set_p.0, %for.body108 ], !dbg !4051
  %.lcssa = phi i32 [ %22, %for.cond106 ], [ %22, %for.body108 ], !dbg !4052
  call void @llvm.dbg.value(metadata i64 %indvars.iv7.lcssa, metadata !2401, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i64 %indvars.iv7.lcssa, metadata !2401, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.0.lcssa, metadata !2404, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.0.lcssa, metadata !2404, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.0.lcssa, metadata !2404, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.0.lcssa, metadata !2404, metadata !DIExpression()), !dbg !3904
  br label %for.end133, !dbg !4075

for.end133:                                       ; preds = %for.end133.loopexit, %lor.lhs.false.for.end133_crit_edge
  %indvars.iv729 = phi i64 [ %indvars.iv7.lcssa28, %lor.lhs.false.for.end133_crit_edge ], [ %indvars.iv7.lcssa, %for.end133.loopexit ]
  %set_p.027 = phi i8 [ %set_p.0.lcssa26, %lor.lhs.false.for.end133_crit_edge ], [ %set_p.0.lcssa, %for.end133.loopexit ]
  %30 = phi i32 [ %.pre, %lor.lhs.false.for.end133_crit_edge ], [ %.lcssa, %for.end133.loopexit ], !dbg !4065
  %j.34 = trunc i64 %indvars.iv729 to i32, !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.027, metadata !2404, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.027, metadata !2404, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i8 %set_p.027, metadata !2404, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 %j.34, metadata !2401, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 %j.34, metadata !2401, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.value(metadata i32 %j.34, metadata !2401, metadata !DIExpression()), !dbg !3904
  %tobool135 = icmp ne i8 %set_p.027, 0, !dbg !4075
  %cmp137 = icmp sle i32 %30, %j.34, !dbg !4076
  %or.cond = and i1 %tobool135, %cmp137, !dbg !4077
  br i1 %or.cond, label %if.then139, label %for.inc145, !dbg !4077

if.then139:                                       ; preds = %for.end133
  %31 = load i32, i32* @ira_important_classes_num, align 4, !dbg !4078
  %inc140 = add nsw i32 %31, 1, !dbg !4078
  store i32 %inc140, i32* @ira_important_classes_num, align 4, !dbg !4078
  %idxprom141 = sext i32 %31 to i64, !dbg !4079
  %arrayidx142 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_important_classes, i64 0, i64 %idxprom141, !dbg !4079
  %32 = trunc i64 %indvars.iv9 to i32, !dbg !4080
  store i32 %32, i32* %arrayidx142, align 4, !dbg !4080
  br label %for.inc145, !dbg !4079

for.inc145:                                       ; preds = %for.body98, %if.then139, %for.end133
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !4081
  call void @llvm.dbg.value(metadata i32 undef, metadata !2403, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3904
  br label %for.cond96, !dbg !4082, !llvm.loop !4083

for.cond148:                                      ; preds = %for.cond148.preheader, %for.body151
  %indvars.iv = phi i64 [ 0, %for.cond148.preheader ], [ %indvars.iv.next, %for.body151 ], !dbg !4085
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !2401, metadata !DIExpression()), !dbg !3904
  %cmp149 = icmp slt i64 %indvars.iv, %19, !dbg !4086
  br i1 %cmp149, label %for.body151, label %for.end159, !dbg !4041

for.body151:                                      ; preds = %for.cond148
  %arrayidx153 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !4087
  %33 = load i32, i32* %arrayidx153, align 4, !dbg !4087
  %34 = load i32, i32* @ira_important_classes_num, align 4, !dbg !4088
  %inc154 = add nsw i32 %34, 1, !dbg !4088
  store i32 %inc154, i32* @ira_important_classes_num, align 4, !dbg !4088
  %idxprom155 = sext i32 %34 to i64, !dbg !4089
  %arrayidx156 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_important_classes, i64 0, i64 %idxprom155, !dbg !4089
  store i32 %33, i32* %arrayidx156, align 4, !dbg !4090
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4091
  call void @llvm.dbg.value(metadata i32 undef, metadata !2401, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !3904
  br label %for.cond148, !dbg !4092, !llvm.loop !4093

for.end159:                                       ; preds = %for.cond148
  ret void, !dbg !4095
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_class_translate() unnamed_addr #5 !dbg !4096 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !4098, metadata !DIExpression()), !dbg !4115
  br label %for.cond, !dbg !4116

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv16 = phi i64 [ %indvars.iv.next17, %for.body ], [ 0, %entry ], !dbg !4118
  call void @llvm.dbg.value(metadata i64 %indvars.iv16, metadata !4098, metadata !DIExpression()), !dbg !4115
  %exitcond18 = icmp eq i64 %indvars.iv16, 27, !dbg !4119
  br i1 %exitcond18, label %for.end, label %for.body, !dbg !4121

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %indvars.iv16, !dbg !4122
  store i32 0, i32* %arrayidx, align 4, !dbg !4123
  %indvars.iv.next17 = add nuw nsw i64 %indvars.iv16, 1, !dbg !4124
  call void @llvm.dbg.value(metadata i32 undef, metadata !4098, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4115
  br label %for.cond, !dbg !4125, !llvm.loop !4126

for.end:                                          ; preds = %for.cond
  %0 = load i32, i32* @flag_ira_algorithm, align 4, !dbg !4128
  %cmp1 = icmp eq i32 %0, 1, !dbg !4129
  br i1 %cmp1, label %for.cond2.preheader, label %if.end25, !dbg !4130

for.cond2.preheader:                              ; preds = %for.end
  br label %for.cond2, !dbg !4131

for.cond2:                                        ; preds = %for.cond2.preheader, %for.inc22
  %indvars.iv13 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next14, %for.inc22 ], !dbg !4132
  call void @llvm.dbg.value(metadata i64 %indvars.iv13, metadata !4098, metadata !DIExpression()), !dbg !4115
  %exitcond15 = icmp eq i64 %indvars.iv13, 27, !dbg !4133
  br i1 %exitcond15, label %if.end25.loopexit, label %for.body4, !dbg !4131

for.body4:                                        ; preds = %for.cond2
  %arrayidx6 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv13, !dbg !4134
  %1 = load i64, i64* %arrayidx6, align 8, !dbg !4134
  %2 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4135
  %neg = xor i64 %2, -1, !dbg !4135
  %and = and i64 %1, %neg, !dbg !4135
  store i64 %and, i64* @temp_hard_regset, align 8, !dbg !4135
  call void @llvm.dbg.value(metadata i32 0, metadata !4103, metadata !DIExpression()), !dbg !4115
  %arrayidx18 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %indvars.iv13, !dbg !4136
  br label %for.cond7, !dbg !4138

for.cond7:                                        ; preds = %for.inc19, %for.body4
  %indvars.iv11 = phi i64 [ %indvars.iv.next12, %for.inc19 ], [ 0, %for.body4 ], !dbg !4139
  call void @llvm.dbg.value(metadata i64 %indvars.iv11, metadata !4103, metadata !DIExpression()), !dbg !4115
  %3 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4140
  %4 = sext i32 %3 to i64, !dbg !4141
  %cmp8 = icmp slt i64 %indvars.iv11, %4, !dbg !4141
  br i1 %cmp8, label %for.body9, label %for.inc22, !dbg !4142

for.body9:                                        ; preds = %for.cond7
  %arrayidx11 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv11, !dbg !4143
  %5 = load i32, i32* %arrayidx11, align 4, !dbg !4143
  call void @llvm.dbg.value(metadata i32 %5, metadata !4100, metadata !DIExpression()), !dbg !4115
  %idxprom12 = zext i32 %5 to i64, !dbg !4144
  %arrayidx13 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom12, !dbg !4144
  %6 = load i64, i64* %arrayidx13, align 8, !dbg !4144
  call void @llvm.dbg.value(metadata i64 %6, metadata !4107, metadata !DIExpression()), !dbg !4145
  %7 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4146
  %neg14 = xor i64 %7, -1, !dbg !4146
  %and15 = and i64 %6, %neg14, !dbg !4146
  call void @llvm.dbg.value(metadata i64 %and15, metadata !4107, metadata !DIExpression()), !dbg !4145
  %8 = load i64, i64* @temp_hard_regset, align 8, !dbg !4147
  %call = tail call fastcc zeroext i8 @hard_reg_set_equal_p(i64 %8, i64 %and15) #7, !dbg !4148
  %tobool = icmp eq i8 %call, 0, !dbg !4148
  br i1 %tobool, label %for.inc19, label %if.then16, !dbg !4149

if.then16:                                        ; preds = %for.body9
  store i32 %5, i32* %arrayidx18, align 4, !dbg !4150
  br label %for.inc19, !dbg !4151

for.inc19:                                        ; preds = %for.body9, %if.then16
  %indvars.iv.next12 = add nuw nsw i64 %indvars.iv11, 1, !dbg !4152
  call void @llvm.dbg.value(metadata i32 undef, metadata !4103, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4115
  br label %for.cond7, !dbg !4153, !llvm.loop !4154

for.inc22:                                        ; preds = %for.cond7
  %indvars.iv.next14 = add nuw nsw i64 %indvars.iv13, 1, !dbg !4156
  call void @llvm.dbg.value(metadata i32 undef, metadata !4098, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4115
  br label %for.cond2, !dbg !4157, !llvm.loop !4158

if.end25.loopexit:                                ; preds = %for.cond2
  %.pre = load i32, i32* @flag_ira_algorithm, align 4, !dbg !4160
  br label %if.end25, !dbg !4165

if.end25:                                         ; preds = %if.end25.loopexit, %for.end
  %9 = phi i32 [ %.pre, %if.end25.loopexit ], [ %0, %for.end ], !dbg !4160
  call void @llvm.dbg.value(metadata i32 0, metadata !4103, metadata !DIExpression()), !dbg !4115
  %10 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4166
  %cmp31 = icmp eq i32 %9, 1, !dbg !4160
  br i1 %cmp31, label %if.end25.split.us, label %if.end25.if.end25.split_crit_edge, !dbg !4165

if.end25.if.end25.split_crit_edge:                ; preds = %if.end25
  %11 = sext i32 %10 to i64, !dbg !4165
  br label %for.cond26, !dbg !4165

if.end25.split.us:                                ; preds = %if.end25
  %12 = sext i32 %10 to i64, !dbg !4165
  br label %for.cond26.us, !dbg !4165

for.cond26.us:                                    ; preds = %for.body28.us, %if.end25.split.us
  %indvars.iv7 = phi i64 [ %indvars.iv.next8, %for.body28.us ], [ 0, %if.end25.split.us ], !dbg !4167
  call void @llvm.dbg.value(metadata i64 %indvars.iv7, metadata !4103, metadata !DIExpression()), !dbg !4115
  %cmp27.us = icmp slt i64 %indvars.iv7, %12, !dbg !4168
  br i1 %cmp27.us, label %for.body28.us, label %for.cond54.preheader.us-lcssa.us, !dbg !4169

for.body28.us:                                    ; preds = %for.cond26.us
  %arrayidx30.us = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv7, !dbg !4170
  %13 = load i32, i32* %arrayidx30.us, align 4, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %13, metadata !4100, metadata !DIExpression()), !dbg !4115
  %idxprom49.us = zext i32 %13 to i64, !dbg !4171
  %arrayidx50.us = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %idxprom49.us, !dbg !4171
  store i32 %13, i32* %arrayidx50.us, align 4, !dbg !4172
  %indvars.iv.next8 = add nuw nsw i64 %indvars.iv7, 1, !dbg !4173
  call void @llvm.dbg.value(metadata i32 undef, metadata !4103, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4115
  br label %for.cond26.us, !dbg !4174, !llvm.loop !4175

for.cond54.preheader.us-lcssa.us:                 ; preds = %for.cond26.us
  br label %for.cond54.preheader, !dbg !4177

for.cond26:                                       ; preds = %if.end48.loopexit, %if.end25.if.end25.split_crit_edge
  %indvars.iv9 = phi i64 [ %indvars.iv.next10, %if.end48.loopexit ], [ 0, %if.end25.if.end25.split_crit_edge ], !dbg !4167
  call void @llvm.dbg.value(metadata i64 %indvars.iv9, metadata !4103, metadata !DIExpression()), !dbg !4115
  %cmp27 = icmp slt i64 %indvars.iv9, %11, !dbg !4168
  br i1 %cmp27, label %for.body28, label %for.cond54.preheader.us-lcssa, !dbg !4169

for.cond54.preheader.us-lcssa:                    ; preds = %for.cond26
  br label %for.cond54.preheader, !dbg !4177

for.cond54.preheader:                             ; preds = %for.cond54.preheader.us-lcssa.us, %for.cond54.preheader.us-lcssa
  br label %for.cond54, !dbg !4177

for.body28:                                       ; preds = %for.cond26
  %arrayidx30 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv9, !dbg !4170
  %14 = load i32, i32* %arrayidx30, align 4, !dbg !4170
  call void @llvm.dbg.value(metadata i32 %14, metadata !4100, metadata !DIExpression()), !dbg !4115
  %idxprom33 = zext i32 %14 to i64, !dbg !4179
  %arrayidx35 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @alloc_reg_class_subclasses, i64 0, i64 %idxprom33, i64 0, !dbg !4179
  call void @llvm.dbg.value(metadata i32* %arrayidx35, metadata !4102, metadata !DIExpression()), !dbg !4115
  br label %for.cond36, !dbg !4181

for.cond36:                                       ; preds = %for.inc46, %for.body28
  %cl_ptr.0 = phi i32* [ %arrayidx35, %for.body28 ], [ %incdec.ptr, %for.inc46 ], !dbg !4182
  call void @llvm.dbg.value(metadata i32* %cl_ptr.0, metadata !4102, metadata !DIExpression()), !dbg !4115
  %15 = load i32, i32* %cl_ptr.0, align 4, !dbg !4183
  call void @llvm.dbg.value(metadata i32 %15, metadata !4098, metadata !DIExpression()), !dbg !4115
  %cmp37 = icmp eq i32 %15, 27, !dbg !4185
  br i1 %cmp37, label %if.end48.loopexit, label %for.body38, !dbg !4186

for.body38:                                       ; preds = %for.cond36
  %idxprom39 = sext i32 %15 to i64, !dbg !4187
  %arrayidx40 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %idxprom39, !dbg !4187
  %16 = load i32, i32* %arrayidx40, align 4, !dbg !4187
  %cmp41 = icmp eq i32 %16, 0, !dbg !4190
  br i1 %cmp41, label %if.then42, label %for.inc46, !dbg !4191

if.then42:                                        ; preds = %for.body38
  store i32 %14, i32* %arrayidx40, align 4, !dbg !4192
  br label %for.inc46, !dbg !4193

for.inc46:                                        ; preds = %for.body38, %if.then42
  %incdec.ptr = getelementptr inbounds i32, i32* %cl_ptr.0, i64 1, !dbg !4194
  call void @llvm.dbg.value(metadata i32* %incdec.ptr, metadata !4102, metadata !DIExpression()), !dbg !4115
  br label %for.cond36, !dbg !4195, !llvm.loop !4196

if.end48.loopexit:                                ; preds = %for.cond36
  %arrayidx50 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %idxprom33, !dbg !4171
  store i32 %14, i32* %arrayidx50, align 4, !dbg !4172
  %indvars.iv.next10 = add nuw nsw i64 %indvars.iv9, 1, !dbg !4173
  call void @llvm.dbg.value(metadata i32 undef, metadata !4103, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4115
  br label %for.cond26, !dbg !4174, !llvm.loop !4175

for.cond54:                                       ; preds = %for.cond54.preheader, %for.inc112
  %indvars.iv4 = phi i64 [ 0, %for.cond54.preheader ], [ %indvars.iv.next5, %for.inc112 ]
  %17 = phi i32 [ %10, %for.cond54.preheader ], [ %27, %for.inc112 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv4, metadata !4098, metadata !DIExpression()), !dbg !4115
  %exitcond6 = icmp eq i64 %indvars.iv4, 27, !dbg !4198
  br i1 %exitcond6, label %for.end114, label %for.body56, !dbg !4177

for.body56:                                       ; preds = %for.cond54
  %cmp57 = icmp eq i64 %indvars.iv4, 0, !dbg !4200
  br i1 %cmp57, label %for.inc112, label %lor.lhs.false, !dbg !4203

lor.lhs.false:                                    ; preds = %for.body56
  %arrayidx59 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %indvars.iv4, !dbg !4204
  %18 = load i32, i32* %arrayidx59, align 4, !dbg !4204
  %cmp60 = icmp eq i32 %18, 0, !dbg !4205
  br i1 %cmp60, label %for.cond63.preheader, label %for.inc112, !dbg !4206

for.cond63.preheader:                             ; preds = %lor.lhs.false
  %arrayidx71 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv4, !dbg !4207
  br label %for.cond63, !dbg !4211

for.cond63:                                       ; preds = %for.cond63.preheader, %for.inc107
  %indvars.iv2 = phi i64 [ 0, %for.cond63.preheader ], [ %indvars.iv.next3, %for.inc107 ], !dbg !4212
  %19 = phi i32 [ %17, %for.cond63.preheader ], [ %.pre1, %for.inc107 ], !dbg !4212
  %best_cost.0 = phi i32 [ 2147483647, %for.cond63.preheader ], [ %best_cost.2, %for.inc107 ], !dbg !4213
  %best_class.0 = phi i32 [ 0, %for.cond63.preheader ], [ %best_class.2, %for.inc107 ], !dbg !4214
  call void @llvm.dbg.value(metadata i32 %best_class.0, metadata !4101, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i64 %indvars.iv2, metadata !4103, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i32 %best_cost.0, metadata !4106, metadata !DIExpression()), !dbg !4115
  %20 = sext i32 %19 to i64, !dbg !4215
  %cmp64 = icmp slt i64 %indvars.iv2, %20, !dbg !4215
  br i1 %cmp64, label %for.body65, label %for.end109, !dbg !4211

for.body65:                                       ; preds = %for.cond63
  %arrayidx67 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv2, !dbg !4216
  %21 = load i32, i32* %arrayidx67, align 4, !dbg !4216
  call void @llvm.dbg.value(metadata i32 %21, metadata !4100, metadata !DIExpression()), !dbg !4115
  %idxprom68 = zext i32 %21 to i64, !dbg !4217
  %arrayidx69 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom68, !dbg !4217
  %22 = load i64, i64* %arrayidx69, align 8, !dbg !4217
  %23 = load i64, i64* %arrayidx71, align 8, !dbg !4218
  %and72 = and i64 %22, %23, !dbg !4218
  %24 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4219
  %neg73 = xor i64 %24, -1, !dbg !4219
  %and74 = and i64 %and72, %neg73, !dbg !4219
  store i64 %and74, i64* @temp_hard_regset, align 8, !dbg !4219
  %call75 = tail call fastcc zeroext i8 @hard_reg_set_empty_p(i64 %and74) #7, !dbg !4220
  %tobool76 = icmp eq i8 %call75, 0, !dbg !4220
  br i1 %tobool76, label %for.cond78.preheader, label %for.inc107, !dbg !4222

for.cond78.preheader:                             ; preds = %for.body65
  br label %for.cond78, !dbg !4223

for.cond78:                                       ; preds = %for.cond78.preheader, %for.body80
  %indvars.iv = phi i64 [ 0, %for.cond78.preheader ], [ %indvars.iv.next, %for.body80 ], !dbg !4226
  %min_cost.0 = phi i32 [ 2147483647, %for.cond78.preheader ], [ %spec.select, %for.body80 ], !dbg !4226
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4099, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i32 %min_cost.0, metadata !4105, metadata !DIExpression()), !dbg !4115
  %exitcond = icmp eq i64 %indvars.iv, 87, !dbg !4227
  br i1 %exitcond, label %for.end98, label %for.body80, !dbg !4223

for.body80:                                       ; preds = %for.cond78
  %arrayidx85 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %indvars.iv, i64 %indvars.iv4, i64 0, !dbg !4229
  %25 = load i16, i16* %arrayidx85, align 4, !dbg !4229
  %conv = sext i16 %25 to i32, !dbg !4229
  %arrayidx90 = getelementptr inbounds [87 x [27 x [2 x i16]]], [87 x [27 x [2 x i16]]]* @ira_memory_move_cost, i64 0, i64 %indvars.iv, i64 %indvars.iv4, i64 1, !dbg !4231
  %26 = load i16, i16* %arrayidx90, align 2, !dbg !4231
  %conv91 = sext i16 %26 to i32, !dbg !4231
  %add = add nsw i32 %conv, %conv91, !dbg !4232
  call void @llvm.dbg.value(metadata i32 %add, metadata !4104, metadata !DIExpression()), !dbg !4115
  %cmp92 = icmp sgt i32 %min_cost.0, %add, !dbg !4233
  %spec.select = select i1 %cmp92, i32 %add, i32 %min_cost.0, !dbg !4235
  call void @llvm.dbg.value(metadata i32 %spec.select, metadata !4105, metadata !DIExpression()), !dbg !4115
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4236
  call void @llvm.dbg.value(metadata i32 undef, metadata !4099, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4115
  br label %for.cond78, !dbg !4237, !llvm.loop !4238

for.end98:                                        ; preds = %for.cond78
  %min_cost.0.lcssa = phi i32 [ %min_cost.0, %for.cond78 ], !dbg !4226
  call void @llvm.dbg.value(metadata i32 %min_cost.0.lcssa, metadata !4105, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i32 %min_cost.0.lcssa, metadata !4105, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i32 %min_cost.0.lcssa, metadata !4105, metadata !DIExpression()), !dbg !4115
  %cmp99 = icmp eq i32 %best_class.0, 0, !dbg !4240
  %cmp102 = icmp sgt i32 %best_cost.0, %min_cost.0.lcssa, !dbg !4242
  %or.cond = or i1 %cmp99, %cmp102, !dbg !4243
  %best_cost.1 = select i1 %or.cond, i32 %min_cost.0.lcssa, i32 %best_cost.0, !dbg !4243
  %best_class.1 = select i1 %or.cond, i32 %21, i32 %best_class.0, !dbg !4243
  br label %for.inc107, !dbg !4243

for.inc107:                                       ; preds = %for.body65, %for.end98
  %best_cost.2 = phi i32 [ %best_cost.0, %for.body65 ], [ %best_cost.1, %for.end98 ], !dbg !4244
  %best_class.2 = phi i32 [ %best_class.0, %for.body65 ], [ %best_class.1, %for.end98 ], !dbg !4244
  call void @llvm.dbg.value(metadata i32 %best_class.2, metadata !4101, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i32 %best_cost.2, metadata !4106, metadata !DIExpression()), !dbg !4115
  %indvars.iv.next3 = add nuw nsw i64 %indvars.iv2, 1, !dbg !4245
  call void @llvm.dbg.value(metadata i32 undef, metadata !4103, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4115
  %.pre1 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4212
  br label %for.cond63, !dbg !4246, !llvm.loop !4247

for.end109:                                       ; preds = %for.cond63
  %.lcssa = phi i32 [ %19, %for.cond63 ], !dbg !4212
  %best_class.0.lcssa = phi i32 [ %best_class.0, %for.cond63 ], !dbg !4214
  call void @llvm.dbg.value(metadata i32 %best_class.0.lcssa, metadata !4101, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i32 %best_class.0.lcssa, metadata !4101, metadata !DIExpression()), !dbg !4115
  call void @llvm.dbg.value(metadata i32 %best_class.0.lcssa, metadata !4101, metadata !DIExpression()), !dbg !4115
  store i32 %best_class.0.lcssa, i32* %arrayidx59, align 4, !dbg !4249
  br label %for.inc112, !dbg !4250

for.inc112:                                       ; preds = %lor.lhs.false, %for.body56, %for.end109
  %27 = phi i32 [ %17, %lor.lhs.false ], [ %17, %for.body56 ], [ %.lcssa, %for.end109 ]
  %indvars.iv.next5 = add nuw nsw i64 %indvars.iv4, 1, !dbg !4251
  call void @llvm.dbg.value(metadata i32 undef, metadata !4098, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4115
  br label %for.cond54, !dbg !4252, !llvm.loop !4253

for.end114:                                       ; preds = %for.cond54
  ret void, !dbg !4255
}

; Function Attrs: nounwind uwtable
define internal fastcc void @reorder_important_classes() unnamed_addr #5 !dbg !4256 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !4258, metadata !DIExpression()), !dbg !4259
  br label %for.cond, !dbg !4260

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.body ], [ 0, %entry ], !dbg !4262
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !4258, metadata !DIExpression()), !dbg !4259
  %exitcond = icmp eq i64 %indvars.iv3, 27, !dbg !4263
  br i1 %exitcond, label %for.cond1.preheader, label %for.body, !dbg !4265

for.cond1.preheader:                              ; preds = %for.cond
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !4266
  %1 = sext i32 %0 to i64, !dbg !4269
  br label %for.cond1, !dbg !4269

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @cover_class_order, i64 0, i64 %indvars.iv3, !dbg !4270
  store i32 -1, i32* %arrayidx, align 4, !dbg !4271
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !4272
  call void @llvm.dbg.value(metadata i32 undef, metadata !4258, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4259
  br label %for.cond, !dbg !4273, !llvm.loop !4274

for.cond1:                                        ; preds = %for.cond1.preheader, %for.body3
  %indvars.iv1 = phi i64 [ 0, %for.cond1.preheader ], [ %indvars.iv.next2, %for.body3 ], !dbg !4276
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !4258, metadata !DIExpression()), !dbg !4259
  %cmp2 = icmp slt i64 %indvars.iv1, %1, !dbg !4277
  br i1 %cmp2, label %for.body3, label %for.end10, !dbg !4269

for.body3:                                        ; preds = %for.cond1
  %arrayidx5 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv1, !dbg !4278
  %2 = load i32, i32* %arrayidx5, align 4, !dbg !4278
  %idxprom6 = zext i32 %2 to i64, !dbg !4279
  %arrayidx7 = getelementptr inbounds [27 x i32], [27 x i32]* @cover_class_order, i64 0, i64 %idxprom6, !dbg !4279
  %3 = trunc i64 %indvars.iv1 to i32, !dbg !4280
  store i32 %3, i32* %arrayidx7, align 4, !dbg !4280
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !4281
  call void @llvm.dbg.value(metadata i32 undef, metadata !4258, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4259
  br label %for.cond1, !dbg !4282, !llvm.loop !4283

for.end10:                                        ; preds = %for.cond1
  %4 = load i32, i32* @ira_important_classes_num, align 4, !dbg !4285
  %conv = sext i32 %4 to i64, !dbg !4285
  tail call void @spec_qsort(i8* bitcast ([27 x i32]* @ira_important_classes to i8*), i64 %conv, i64 4, i32 (i8*, i8*)* nonnull @comp_reg_classes_func) #6, !dbg !4286
  call void @llvm.dbg.value(metadata i32 0, metadata !4258, metadata !DIExpression()), !dbg !4259
  %5 = load i32, i32* @ira_important_classes_num, align 4, !dbg !4287
  %6 = sext i32 %5 to i64, !dbg !4290
  br label %for.cond11, !dbg !4290

for.cond11:                                       ; preds = %for.body14, %for.end10
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body14 ], [ 0, %for.end10 ], !dbg !4291
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4258, metadata !DIExpression()), !dbg !4259
  %cmp12 = icmp slt i64 %indvars.iv, %6, !dbg !4292
  br i1 %cmp12, label %for.body14, label %for.end21, !dbg !4293

for.body14:                                       ; preds = %for.cond11
  %arrayidx16 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_important_classes, i64 0, i64 %indvars.iv, !dbg !4294
  %7 = load i32, i32* %arrayidx16, align 4, !dbg !4294
  %idxprom17 = zext i32 %7 to i64, !dbg !4295
  %arrayidx18 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_important_class_nums, i64 0, i64 %idxprom17, !dbg !4295
  %8 = trunc i64 %indvars.iv to i32, !dbg !4296
  store i32 %8, i32* %arrayidx18, align 4, !dbg !4296
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4297
  call void @llvm.dbg.value(metadata i32 undef, metadata !4258, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4259
  br label %for.cond11, !dbg !4298, !llvm.loop !4299

for.end21:                                        ; preds = %for.cond11
  ret void, !dbg !4301
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_reg_class_relations() unnamed_addr #5 !dbg !4302 {
entry:
  %important_class_p = alloca [27 x i8], align 16
  %0 = getelementptr inbounds [27 x i8], [27 x i8]* %important_class_p, i64 0, i64 0, !dbg !4322
  call void @llvm.lifetime.start.p0i8(i64 27, i8* nonnull %0) #8, !dbg !4322
  call void @llvm.dbg.declare(metadata [27 x i8]* %important_class_p, metadata !4311, metadata !DIExpression()), !dbg !4323
  %call = call i8* @memset(i8* nonnull %0, i32 0, i64 27) #6, !dbg !4324
  call void @llvm.dbg.value(metadata i32 0, metadata !4304, metadata !DIExpression()), !dbg !4325
  %1 = load i32, i32* @ira_important_classes_num, align 4, !dbg !4326
  %2 = sext i32 %1 to i64, !dbg !4329
  br label %for.cond, !dbg !4329

for.cond:                                         ; preds = %for.body, %entry
  %indvars.iv8 = phi i64 [ %indvars.iv.next9, %for.body ], [ 0, %entry ], !dbg !4330
  call void @llvm.dbg.value(metadata i64 %indvars.iv8, metadata !4304, metadata !DIExpression()), !dbg !4325
  %cmp = icmp slt i64 %indvars.iv8, %2, !dbg !4331
  br i1 %cmp, label %for.body, label %for.cond3.preheader, !dbg !4332

for.cond3.preheader:                              ; preds = %for.cond
  br label %for.cond3, !dbg !4333

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_important_classes, i64 0, i64 %indvars.iv8, !dbg !4334
  %3 = load i32, i32* %arrayidx, align 4, !dbg !4334
  %idxprom1 = zext i32 %3 to i64, !dbg !4335
  %arrayidx2 = getelementptr inbounds [27 x i8], [27 x i8]* %important_class_p, i64 0, i64 %idxprom1, !dbg !4335
  store i8 1, i8* %arrayidx2, align 1, !dbg !4336
  %indvars.iv.next9 = add nuw nsw i64 %indvars.iv8, 1, !dbg !4337
  call void @llvm.dbg.value(metadata i32 undef, metadata !4304, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4325
  br label %for.cond, !dbg !4338, !llvm.loop !4339

for.cond3:                                        ; preds = %for.cond3.preheader, %for.inc199
  %indvars.iv5 = phi i64 [ 0, %for.cond3.preheader ], [ %indvars.iv.next6, %for.inc199 ], !dbg !4341
  call void @llvm.dbg.value(metadata i64 %indvars.iv5, metadata !4305, metadata !DIExpression()), !dbg !4325
  %exitcond7 = icmp eq i64 %indvars.iv5, 27, !dbg !4342
  br i1 %exitcond7, label %for.end201, label %for.body5, !dbg !4333

for.body5:                                        ; preds = %for.cond3
  %arrayidx8 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @ira_reg_class_super_classes, i64 0, i64 %indvars.iv5, i64 0, !dbg !4343
  store i32 27, i32* %arrayidx8, align 4, !dbg !4344
  call void @llvm.dbg.value(metadata i32 0, metadata !4306, metadata !DIExpression()), !dbg !4325
  %arrayidx21 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv5, !dbg !4345
  %arrayidx68 = getelementptr inbounds [27 x i8], [27 x i8]* %important_class_p, i64 0, i64 %indvars.iv5, !dbg !4346
  br label %for.cond9, !dbg !4347

for.cond9:                                        ; preds = %for.inc196, %for.body5
  %indvars.iv3 = phi i64 [ %indvars.iv.next4, %for.inc196 ], [ 0, %for.body5 ], !dbg !4348
  call void @llvm.dbg.value(metadata i64 %indvars.iv3, metadata !4306, metadata !DIExpression()), !dbg !4325
  %exitcond = icmp eq i64 %indvars.iv3, 27, !dbg !4349
  br i1 %exitcond, label %for.inc199, label %for.body11, !dbg !4350

for.body11:                                       ; preds = %for.cond9
  %arrayidx15 = getelementptr inbounds [27 x [27 x i8]], [27 x [27 x i8]]* @ira_reg_classes_intersect_p, i64 0, i64 %indvars.iv5, i64 %indvars.iv3, !dbg !4351
  store i8 0, i8* %arrayidx15, align 1, !dbg !4352
  %arrayidx19 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @ira_reg_class_intersect, i64 0, i64 %indvars.iv5, i64 %indvars.iv3, !dbg !4353
  store i32 0, i32* %arrayidx19, align 4, !dbg !4354
  %4 = load i64, i64* %arrayidx21, align 8, !dbg !4355
  %5 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4356
  %neg = xor i64 %5, -1, !dbg !4356
  %and = and i64 %4, %neg, !dbg !4356
  store i64 %and, i64* @temp_hard_regset, align 8, !dbg !4356
  %arrayidx23 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %indvars.iv3, !dbg !4357
  %6 = load i64, i64* %arrayidx23, align 8, !dbg !4357
  call void @llvm.dbg.value(metadata i64 %6, metadata !4310, metadata !DIExpression()), !dbg !4325
  %and25 = and i64 %6, %neg, !dbg !4358
  call void @llvm.dbg.value(metadata i64 %and25, metadata !4310, metadata !DIExpression()), !dbg !4325
  %call26 = call fastcc zeroext i8 @hard_reg_set_empty_p(i64 %and) #7, !dbg !4359
  %tobool = icmp eq i8 %call26, 0, !dbg !4359
  br i1 %tobool, label %if.end61, label %land.lhs.true, !dbg !4361

land.lhs.true:                                    ; preds = %for.body11
  %call27 = call fastcc zeroext i8 @hard_reg_set_empty_p(i64 %and25) #7, !dbg !4362
  %tobool29 = icmp eq i8 %call27, 0, !dbg !4362
  br i1 %tobool29, label %if.end61, label %for.cond30.preheader, !dbg !4363

for.cond30.preheader:                             ; preds = %land.lhs.true
  br label %for.cond30, !dbg !4364

for.cond30:                                       ; preds = %for.cond30.preheader, %for.inc50
  %indvars.iv = phi i64 [ 0, %for.cond30.preheader ], [ %indvars.iv.next, %for.inc50 ], !dbg !4367
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4304, metadata !DIExpression()), !dbg !4325
  %arrayidx34 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subclasses, i64 0, i64 %indvars.iv5, i64 %indvars.iv, !dbg !4368
  %7 = load i32, i32* %arrayidx34, align 4, !dbg !4368
  call void @llvm.dbg.value(metadata i32 %7, metadata !4307, metadata !DIExpression()), !dbg !4325
  %cmp35 = icmp eq i32 %7, 27, !dbg !4371
  br i1 %cmp35, label %for.end52, label %if.end, !dbg !4373

if.end:                                           ; preds = %for.cond30
  %8 = load i32, i32* %arrayidx19, align 4, !dbg !4374
  %call42 = call i32 @reg_class_subset_p(i32 %8, i32 %7) #6, !dbg !4376
  %tobool43 = icmp eq i32 %call42, 0, !dbg !4376
  br i1 %tobool43, label %for.inc50, label %if.then44, !dbg !4377

if.then44:                                        ; preds = %if.end
  store i32 %7, i32* %arrayidx19, align 4, !dbg !4378
  br label %for.inc50, !dbg !4379

for.inc50:                                        ; preds = %if.end, %if.then44
  %indvars.iv.next = add nuw i64 %indvars.iv, 1, !dbg !4380
  call void @llvm.dbg.value(metadata i32 undef, metadata !4304, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4325
  br label %for.cond30, !dbg !4381, !llvm.loop !4382

for.end52:                                        ; preds = %for.cond30
  %arrayidx56 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %indvars.iv5, i64 %indvars.iv3, !dbg !4384
  %9 = load i32, i32* %arrayidx56, align 4, !dbg !4384
  %arrayidx60 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @ira_reg_class_union, i64 0, i64 %indvars.iv5, i64 %indvars.iv3, !dbg !4385
  store i32 %9, i32* %arrayidx60, align 4, !dbg !4386
  br label %for.inc196, !dbg !4387

if.end61:                                         ; preds = %land.lhs.true, %for.body11
  %10 = load i64, i64* @temp_hard_regset, align 8, !dbg !4388
  %call62 = call fastcc zeroext i8 @hard_reg_set_intersect_p(i64 %10, i64 %and25) #7, !dbg !4389
  store i8 %call62, i8* %arrayidx15, align 1, !dbg !4390
  %11 = load i8, i8* %arrayidx68, align 1, !dbg !4391
  %tobool70 = icmp eq i8 %11, 0, !dbg !4391
  br i1 %tobool70, label %if.end87, label %land.lhs.true71, !dbg !4392

land.lhs.true71:                                  ; preds = %if.end61
  %arrayidx73 = getelementptr inbounds [27 x i8], [27 x i8]* %important_class_p, i64 0, i64 %indvars.iv3, !dbg !4393
  %12 = load i8, i8* %arrayidx73, align 1, !dbg !4393
  %tobool75 = icmp eq i8 %12, 0, !dbg !4393
  br i1 %tobool75, label %if.end87, label %land.lhs.true76, !dbg !4394

land.lhs.true76:                                  ; preds = %land.lhs.true71
  %13 = load i64, i64* @temp_hard_regset, align 8, !dbg !4395
  %call77 = call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %13, i64 %and25) #7, !dbg !4396
  %tobool79 = icmp eq i8 %call77, 0, !dbg !4396
  br i1 %tobool79, label %if.end87, label %if.then80, !dbg !4397

if.then80:                                        ; preds = %land.lhs.true76
  call void @llvm.dbg.value(metadata i32* %arrayidx8, metadata !4313, metadata !DIExpression()), !dbg !4398
  br label %while.cond, !dbg !4399

while.cond:                                       ; preds = %while.cond, %if.then80
  %p.0 = phi i32* [ %arrayidx8, %if.then80 ], [ %incdec.ptr, %while.cond ], !dbg !4398
  call void @llvm.dbg.value(metadata i32* %p.0, metadata !4313, metadata !DIExpression()), !dbg !4398
  %14 = load i32, i32* %p.0, align 4, !dbg !4400
  %cmp84 = icmp eq i32 %14, 27, !dbg !4401
  %incdec.ptr = getelementptr inbounds i32, i32* %p.0, i64 1, !dbg !4398
  call void @llvm.dbg.value(metadata i32* %incdec.ptr, metadata !4313, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i32* %incdec.ptr, metadata !4313, metadata !DIExpression()), !dbg !4398
  br i1 %cmp84, label %while.end, label %while.cond, !dbg !4399, !llvm.loop !4402

while.end:                                        ; preds = %while.cond
  %p.0.lcssa = phi i32* [ %p.0, %while.cond ], !dbg !4398
  %incdec.ptr.lcssa = phi i32* [ %incdec.ptr, %while.cond ], !dbg !4398
  call void @llvm.dbg.value(metadata i32* %p.0.lcssa, metadata !4313, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i32* %p.0.lcssa, metadata !4313, metadata !DIExpression()), !dbg !4398
  call void @llvm.dbg.value(metadata i32* %p.0.lcssa, metadata !4313, metadata !DIExpression()), !dbg !4398
  %15 = trunc i64 %indvars.iv3 to i32, !dbg !4404
  store i32 %15, i32* %p.0.lcssa, align 4, !dbg !4404
  store i32 27, i32* %incdec.ptr.lcssa, align 4, !dbg !4405
  br label %if.end87, !dbg !4406

if.end87:                                         ; preds = %land.lhs.true76, %land.lhs.true71, %if.end61, %while.end
  %arrayidx91 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @ira_reg_class_union, i64 0, i64 %indvars.iv5, i64 %indvars.iv3, !dbg !4407
  store i32 0, i32* %arrayidx91, align 4, !dbg !4408
  %16 = load i64, i64* %arrayidx21, align 8, !dbg !4409
  call void @llvm.dbg.value(metadata i64 %16, metadata !4308, metadata !DIExpression()), !dbg !4325
  %17 = load i64, i64* %arrayidx23, align 8, !dbg !4410
  %and96 = and i64 %16, %17, !dbg !4410
  call void @llvm.dbg.value(metadata i64 %and96, metadata !4308, metadata !DIExpression()), !dbg !4325
  %18 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4411
  %neg97 = xor i64 %18, -1, !dbg !4411
  %and98 = and i64 %and96, %neg97, !dbg !4411
  call void @llvm.dbg.value(metadata i64 %and98, metadata !4308, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.value(metadata i64 %16, metadata !4309, metadata !DIExpression()), !dbg !4325
  %or = or i64 %16, %17, !dbg !4412
  call void @llvm.dbg.value(metadata i64 %or, metadata !4309, metadata !DIExpression()), !dbg !4325
  %and104 = and i64 %or, %neg97, !dbg !4413
  call void @llvm.dbg.value(metadata i64 %and104, metadata !4309, metadata !DIExpression()), !dbg !4325
  call void @llvm.dbg.value(metadata i32 0, metadata !4304, metadata !DIExpression()), !dbg !4325
  br label %for.cond105, !dbg !4414

for.cond105:                                      ; preds = %for.inc193, %if.end87
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc193 ], [ 0, %if.end87 ], !dbg !4416
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !4304, metadata !DIExpression()), !dbg !4325
  %19 = load i32, i32* @ira_important_classes_num, align 4, !dbg !4417
  %20 = sext i32 %19 to i64, !dbg !4419
  %cmp106 = icmp slt i64 %indvars.iv1, %20, !dbg !4419
  br i1 %cmp106, label %for.body108, label %for.inc196.loopexit, !dbg !4420

for.body108:                                      ; preds = %for.cond105
  %arrayidx110 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_important_classes, i64 0, i64 %indvars.iv1, !dbg !4421
  %21 = load i32, i32* %arrayidx110, align 4, !dbg !4421
  call void @llvm.dbg.value(metadata i32 %21, metadata !4307, metadata !DIExpression()), !dbg !4325
  %idxprom111 = sext i32 %21 to i64, !dbg !4423
  %arrayidx112 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom111, !dbg !4423
  %22 = load i64, i64* %arrayidx112, align 8, !dbg !4423
  %23 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4424
  %neg113 = xor i64 %23, -1, !dbg !4424
  %and114 = and i64 %22, %neg113, !dbg !4424
  store i64 %and114, i64* @temp_hard_regset, align 8, !dbg !4424
  %call115 = call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %and114, i64 %and98) #7, !dbg !4425
  %tobool116 = icmp eq i8 %call115, 0, !dbg !4425
  br i1 %tobool116, label %if.end149, label %if.then117, !dbg !4427

if.then117:                                       ; preds = %for.body108
  %24 = load i32, i32* %arrayidx19, align 4, !dbg !4428
  %idxprom122 = sext i32 %24 to i64, !dbg !4428
  %arrayidx123 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom122, !dbg !4428
  %25 = load i64, i64* %arrayidx123, align 8, !dbg !4428
  call void @llvm.dbg.value(metadata i64 %25, metadata !4310, metadata !DIExpression()), !dbg !4325
  %26 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4430
  %neg124 = xor i64 %26, -1, !dbg !4430
  %and125 = and i64 %25, %neg124, !dbg !4430
  call void @llvm.dbg.value(metadata i64 %and125, metadata !4310, metadata !DIExpression()), !dbg !4325
  %27 = load i64, i64* @temp_hard_regset, align 8, !dbg !4431
  %call126 = call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %27, i64 %and125) #7, !dbg !4433
  %tobool127 = icmp eq i8 %call126, 0, !dbg !4433
  br i1 %tobool127, label %if.then143, label %lor.lhs.false, !dbg !4434

lor.lhs.false:                                    ; preds = %if.then117
  %28 = load i64, i64* @temp_hard_regset, align 8, !dbg !4435
  %call128 = call fastcc zeroext i8 @hard_reg_set_equal_p(i64 %28, i64 %and125) #7, !dbg !4436
  %tobool130 = icmp eq i8 %call128, 0, !dbg !4436
  br i1 %tobool130, label %if.end149, label %land.lhs.true131, !dbg !4437

land.lhs.true131:                                 ; preds = %lor.lhs.false
  %29 = load i64, i64* %arrayidx112, align 8, !dbg !4438
  %30 = load i32, i32* %arrayidx19, align 4, !dbg !4439
  %idxprom138 = sext i32 %30 to i64, !dbg !4440
  %arrayidx139 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom138, !dbg !4440
  %31 = load i64, i64* %arrayidx139, align 8, !dbg !4440
  %call140 = call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %29, i64 %31) #7, !dbg !4441
  %tobool142 = icmp eq i8 %call140, 0, !dbg !4441
  br i1 %tobool142, label %if.end149, label %if.then143, !dbg !4442

if.then143:                                       ; preds = %land.lhs.true131, %if.then117
  store i32 %21, i32* %arrayidx19, align 4, !dbg !4443
  br label %if.end149, !dbg !4444

if.end149:                                        ; preds = %land.lhs.true131, %lor.lhs.false, %for.body108, %if.then143
  %32 = load i64, i64* @temp_hard_regset, align 8, !dbg !4445
  %call150 = call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %32, i64 %and104) #7, !dbg !4447
  %tobool151 = icmp eq i8 %call150, 0, !dbg !4447
  br i1 %tobool151, label %for.inc193, label %if.then152, !dbg !4448

if.then152:                                       ; preds = %if.end149
  %33 = load i32, i32* %arrayidx91, align 4, !dbg !4449
  %idxprom157 = sext i32 %33 to i64, !dbg !4449
  %arrayidx158 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom157, !dbg !4449
  %34 = load i64, i64* %arrayidx158, align 8, !dbg !4449
  call void @llvm.dbg.value(metadata i64 %34, metadata !4310, metadata !DIExpression()), !dbg !4325
  %35 = load i64, i64* @no_unit_alloc_regs, align 8, !dbg !4451
  %neg159 = xor i64 %35, -1, !dbg !4451
  %and160 = and i64 %34, %neg159, !dbg !4451
  call void @llvm.dbg.value(metadata i64 %and160, metadata !4310, metadata !DIExpression()), !dbg !4325
  %cmp165 = icmp eq i32 %33, 0, !dbg !4452
  br i1 %cmp165, label %if.then186, label %lor.lhs.false167, !dbg !4454

lor.lhs.false167:                                 ; preds = %if.then152
  %36 = load i64, i64* @temp_hard_regset, align 8, !dbg !4455
  %call168 = call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %and160, i64 %36) #7, !dbg !4456
  %tobool170 = icmp eq i8 %call168, 0, !dbg !4456
  br i1 %tobool170, label %for.inc193, label %land.lhs.true171, !dbg !4457

land.lhs.true171:                                 ; preds = %lor.lhs.false167
  %37 = load i64, i64* @temp_hard_regset, align 8, !dbg !4458
  %call172 = call fastcc zeroext i8 @hard_reg_set_equal_p(i64 %and160, i64 %37) #7, !dbg !4459
  %tobool173 = icmp eq i8 %call172, 0, !dbg !4459
  br i1 %tobool173, label %if.then186, label %lor.lhs.false174, !dbg !4460

lor.lhs.false174:                                 ; preds = %land.lhs.true171
  %38 = load i64, i64* %arrayidx112, align 8, !dbg !4461
  %39 = load i32, i32* %arrayidx91, align 4, !dbg !4462
  %idxprom181 = sext i32 %39 to i64, !dbg !4463
  %arrayidx182 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom181, !dbg !4463
  %40 = load i64, i64* %arrayidx182, align 8, !dbg !4463
  %call183 = call fastcc zeroext i8 @hard_reg_set_subset_p(i64 %38, i64 %40) #7, !dbg !4464
  %tobool185 = icmp eq i8 %call183, 0, !dbg !4464
  br i1 %tobool185, label %for.inc193, label %if.then186, !dbg !4465

if.then186:                                       ; preds = %lor.lhs.false174, %land.lhs.true171, %if.then152
  store i32 %21, i32* %arrayidx91, align 4, !dbg !4466
  br label %for.inc193, !dbg !4467

for.inc193:                                       ; preds = %lor.lhs.false174, %lor.lhs.false167, %if.end149, %if.then186
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !4468
  call void @llvm.dbg.value(metadata i32 undef, metadata !4304, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4325
  br label %for.cond105, !dbg !4469, !llvm.loop !4470

for.inc196.loopexit:                              ; preds = %for.cond105
  br label %for.inc196, !dbg !4472

for.inc196:                                       ; preds = %for.inc196.loopexit, %for.end52
  %indvars.iv.next4 = add nuw nsw i64 %indvars.iv3, 1, !dbg !4472
  call void @llvm.dbg.value(metadata i32 undef, metadata !4306, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4325
  br label %for.cond9, !dbg !4473, !llvm.loop !4474

for.inc199:                                       ; preds = %for.cond9
  %indvars.iv.next6 = add nuw nsw i64 %indvars.iv5, 1, !dbg !4476
  call void @llvm.dbg.value(metadata i32 undef, metadata !4305, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4325
  br label %for.cond3, !dbg !4477, !llvm.loop !4478

for.end201:                                       ; preds = %for.cond3
  call void @llvm.lifetime.end.p0i8(i64 27, i8* nonnull %0) #8, !dbg !4480
  ret void, !dbg !4480
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @hard_reg_set_empty_p(i64 %x) unnamed_addr #0 !dbg !4481 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !4485, metadata !DIExpression()), !dbg !4486
  %cmp = icmp eq i64 %x, 0, !dbg !4487
  %conv1 = zext i1 %cmp to i8, !dbg !4488
  ret i8 %conv1, !dbg !4489
}

declare dso_local i32 @regclass_for_constraint(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @hard_reg_set_equal_p(i64 %x, i64 %y) unnamed_addr #0 !dbg !4490 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !4492, metadata !DIExpression()), !dbg !4494
  call void @llvm.dbg.value(metadata i64 %y, metadata !4493, metadata !DIExpression()), !dbg !4494
  %cmp = icmp eq i64 %x, %y, !dbg !4495
  %conv1 = zext i1 %cmp to i8, !dbg !4496
  ret i8 %conv1, !dbg !4497
}

declare dso_local i32 @reg_classes_intersect_p(i32, i32) local_unnamed_addr #2

declare dso_local void @fancy_abort(i8*, i32, i8*) local_unnamed_addr #2

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @comp_reg_classes_func(i8* %v1p, i8* %v2p) #5 !dbg !4498 {
entry:
  call void @llvm.dbg.value(metadata i8* %v1p, metadata !4500, metadata !DIExpression()), !dbg !4505
  call void @llvm.dbg.value(metadata i8* %v2p, metadata !4501, metadata !DIExpression()), !dbg !4505
  %0 = bitcast i8* %v1p to i32*, !dbg !4506
  %1 = load i32, i32* %0, align 4, !dbg !4507
  call void @llvm.dbg.value(metadata i32 %1, metadata !4502, metadata !DIExpression()), !dbg !4505
  %2 = bitcast i8* %v2p to i32*, !dbg !4508
  %3 = load i32, i32* %2, align 4, !dbg !4509
  call void @llvm.dbg.value(metadata i32 %3, metadata !4503, metadata !DIExpression()), !dbg !4505
  %idxprom = zext i32 %1 to i64, !dbg !4510
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %idxprom, !dbg !4510
  %4 = load i32, i32* %arrayidx, align 4, !dbg !4510
  call void @llvm.dbg.value(metadata i32 %4, metadata !4502, metadata !DIExpression()), !dbg !4505
  %idxprom1 = zext i32 %3 to i64, !dbg !4511
  %arrayidx2 = getelementptr inbounds [27 x i32], [27 x i32]* @ira_class_translate, i64 0, i64 %idxprom1, !dbg !4511
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !4511
  call void @llvm.dbg.value(metadata i32 %5, metadata !4503, metadata !DIExpression()), !dbg !4505
  %cmp = icmp ne i32 %4, 0, !dbg !4512
  %cmp3 = icmp ne i32 %5, 0, !dbg !4514
  %or.cond = and i1 %cmp, %cmp3, !dbg !4515
  br i1 %or.cond, label %land.lhs.true4, label %if.end, !dbg !4515

land.lhs.true4:                                   ; preds = %entry
  %idxprom5 = zext i32 %4 to i64, !dbg !4516
  %arrayidx6 = getelementptr inbounds [27 x i32], [27 x i32]* @cover_class_order, i64 0, i64 %idxprom5, !dbg !4516
  %6 = load i32, i32* %arrayidx6, align 4, !dbg !4516
  %idxprom7 = zext i32 %5 to i64, !dbg !4517
  %arrayidx8 = getelementptr inbounds [27 x i32], [27 x i32]* @cover_class_order, i64 0, i64 %idxprom7, !dbg !4517
  %7 = load i32, i32* %arrayidx8, align 4, !dbg !4517
  %sub = sub nsw i32 %6, %7, !dbg !4518
  call void @llvm.dbg.value(metadata i32 %sub, metadata !4504, metadata !DIExpression()), !dbg !4505
  %cmp9 = icmp eq i32 %sub, 0, !dbg !4519
  br i1 %cmp9, label %if.end, label %cleanup, !dbg !4520

if.end:                                           ; preds = %land.lhs.true4, %entry
  %sub10 = sub nsw i32 %4, %5, !dbg !4521
  br label %cleanup, !dbg !4522

cleanup:                                          ; preds = %land.lhs.true4, %if.end
  %retval.0 = phi i32 [ %sub10, %if.end ], [ %sub, %land.lhs.true4 ], !dbg !4505
  ret i32 %retval.0, !dbg !4523
}

declare dso_local i32 @reg_class_subset_p(i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @hard_reg_set_intersect_p(i64 %x, i64 %y) unnamed_addr #0 !dbg !4524 {
entry:
  call void @llvm.dbg.value(metadata i64 %x, metadata !4526, metadata !DIExpression()), !dbg !4528
  call void @llvm.dbg.value(metadata i64 %y, metadata !4527, metadata !DIExpression()), !dbg !4528
  %and = and i64 %x, %y, !dbg !4529
  %cmp = icmp ne i64 %and, 0, !dbg !4530
  %conv1 = zext i1 %cmp to i8, !dbg !4531
  ret i8 %conv1, !dbg !4532
}

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @insn_contains_asm(%struct.rtx_def* %insn) unnamed_addr #5 !dbg !4533 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !4537, metadata !DIExpression()), !dbg !4538
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.value(metadata %struct.rtx_def** %insn.addr, metadata !4537, metadata !DIExpression(DW_OP_deref)), !dbg !4538
  %call = call i32 @for_each_rtx(%struct.rtx_def** nonnull %insn.addr, i32 (%struct.rtx_def**, i8*)* nonnull @insn_contains_asm_1, i8* null) #6, !dbg !4539
  %conv = trunc i32 %call to i8, !dbg !4539
  ret i8 %conv, !dbg !4540
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal i32 @insn_contains_asm_1(%struct.rtx_def** %loc, i8* %data) #5 !dbg !4541 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def** %loc, metadata !4545, metadata !DIExpression()), !dbg !4547
  call void @llvm.dbg.value(metadata i8* %data, metadata !4546, metadata !DIExpression()), !dbg !4547
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !4548
  %tobool = icmp eq %struct.rtx_def* %0, null, !dbg !4548
  br i1 %tobool, label %return, label %if.end, !dbg !4550

if.end:                                           ; preds = %entry
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 0, !dbg !4550
  %bf.load = load i32, i32* %1, align 8, !dbg !4551
  %bf.clear = and i32 %bf.load, 65535, !dbg !4551
  %cmp = icmp eq i32 %bf.clear, 17, !dbg !4553
  %. = zext i1 %cmp to i32, !dbg !4547
  br label %return, !dbg !4547

return:                                           ; preds = %entry, %if.end
  %retval.0 = phi i32 [ 0, %entry ], [ %., %if.end ], !dbg !4547
  ret i32 %retval.0, !dbg !4554
}

; Function Attrs: nounwind uwtable
define internal fastcc void @ira(%struct._IO_FILE* %f) unnamed_addr #5 !dbg !4555 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %f, metadata !4557, metadata !DIExpression()), !dbg !4566
  %0 = load i8, i8* @timevar_enable, align 1, !dbg !4567
  %tobool = icmp eq i8 %0, 0, !dbg !4567
  br i1 %tobool, label %do.end, label %if.then, !dbg !4570

if.then:                                          ; preds = %entry
  tail call void @timevar_push_1(i32 148) #6, !dbg !4567
  br label %do.end, !dbg !4567

do.end:                                           ; preds = %entry, %if.then
  %1 = load i32, i32* @flag_caller_saves, align 4, !dbg !4571
  %tobool1 = icmp eq i32 %1, 0, !dbg !4571
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !4573

if.then2:                                         ; preds = %do.end
  tail call void @init_caller_save() #6, !dbg !4574
  br label %if.end3, !dbg !4574

if.end3:                                          ; preds = %do.end, %if.then2
  %2 = load i32, i32* @flag_ira_verbose, align 4, !dbg !4575
  %cmp = icmp ult i32 %2, 10, !dbg !4577
  br i1 %cmp, label %if.then4, label %if.else, !dbg !4578

if.then4:                                         ; preds = %if.end3
  store i32 %2, i32* @internal_flag_ira_verbose, align 4, !dbg !4579
  store %struct._IO_FILE* %f, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4581
  br label %if.end5, !dbg !4582

if.else:                                          ; preds = %if.end3
  %sub = add i32 %2, -10, !dbg !4583
  store i32 %sub, i32* @internal_flag_ira_verbose, align 4, !dbg !4585
  %3 = load i64, i64* bitcast (%struct._IO_FILE** @stderr to i64*), align 8, !dbg !4586
  store i64 %3, i64* bitcast (%struct._IO_FILE** @ira_dump_file to i64*), align 8, !dbg !4587
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %4 = load i32, i32* @optimize, align 4, !dbg !4588
  %cmp6 = icmp sgt i32 %4, 0, !dbg !4589
  %conv7 = zext i1 %cmp6 to i8, !dbg !4588
  store i8 %conv7, i8* @ira_conflicts_p, align 1, !dbg !4590
  tail call fastcc void @setup_prohibited_mode_move_regs() #7, !dbg !4591
  tail call void @df_note_add_problem() #6, !dbg !4592
  %5 = load i32, i32* @optimize, align 4, !dbg !4593
  %cmp8 = icmp eq i32 %5, 1, !dbg !4595
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !4596

if.then10:                                        ; preds = %if.end5
  tail call void @df_live_add_problem() #6, !dbg !4597
  tail call void @df_live_set_all_dirty() #6, !dbg !4599
  br label %if.end11, !dbg !4600

if.end11:                                         ; preds = %if.then10, %if.end5
  tail call void @df_analyze() #6, !dbg !4601
  %call = tail call i32 @df_clear_flags(i32 16) #6, !dbg !4602
  tail call void @regstat_init_n_sets_and_refs() #6, !dbg !4603
  tail call void @regstat_compute_ri() #6, !dbg !4604
  %6 = load i32, i32* @warn_clobbered, align 4, !dbg !4605
  %tobool12 = icmp eq i32 %6, 0, !dbg !4605
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !4607

if.then13:                                        ; preds = %if.end11
  tail call void @generate_setjmp_warnings() #6, !dbg !4608
  br label %if.end14, !dbg !4608

if.end14:                                         ; preds = %if.end11, %if.then13
  %call15 = tail call i32 @leaf_function_p() #6, !dbg !4609
  store i32 %call15, i32* @current_function_is_leaf, align 4, !dbg !4610
  %call16 = tail call zeroext i8 @resize_reg_info() #6, !dbg !4611
  %tobool18 = icmp ne i8 %call16, 0, !dbg !4611
  %7 = load i32, i32* @flag_ira_loop_pressure, align 4, !dbg !4613
  %tobool19 = icmp ne i32 %7, 0, !dbg !4613
  %or.cond = and i1 %tobool18, %tobool19, !dbg !4614
  br i1 %or.cond, label %if.then20, label %if.end21, !dbg !4614

if.then20:                                        ; preds = %if.end14
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4615
  tail call void @ira_set_pseudo_classes(%struct._IO_FILE* %8) #6, !dbg !4616
  br label %if.end21, !dbg !4616

if.end21:                                         ; preds = %if.then20, %if.end14
  %call22 = tail call fastcc i32 @update_equiv_regs() #7, !dbg !4617
  call void @llvm.dbg.value(metadata i32 %call22, metadata !4563, metadata !DIExpression()), !dbg !4566
  tail call void @bitmap_obstack_initialize(%struct.bitmap_obstack* nonnull @ira_bitmap_obstack) #6, !dbg !4618
  %9 = load i32, i32* @optimize, align 4, !dbg !4619
  %tobool23 = icmp eq i32 %9, 0, !dbg !4619
  br i1 %tobool23, label %if.end54, label %if.then24, !dbg !4621

if.then24:                                        ; preds = %if.end21
  %call25 = tail call i32 @max_reg_num() #6, !dbg !4622
  store i32 %call25, i32* @max_regno, align 4, !dbg !4624
  store i32 %call25, i32* @ira_reg_equiv_len, align 4, !dbg !4625
  %conv26 = sext i32 %call25 to i64, !dbg !4626
  %call27 = tail call i8* @ira_allocate(i64 %conv26) #7, !dbg !4627
  store i8* %call27, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !4628
  %10 = load i32, i32* @max_regno, align 4, !dbg !4629
  %conv28 = sext i32 %10 to i64, !dbg !4629
  %call30 = tail call i8* @memset(i8* %call27, i32 0, i64 %conv28) #6, !dbg !4630
  %11 = load i32, i32* @max_regno, align 4, !dbg !4631
  %conv31 = sext i32 %11 to i64, !dbg !4631
  %mul32 = shl nsw i64 %conv31, 3, !dbg !4632
  %call33 = tail call i8* @ira_allocate(i64 %mul32) #7, !dbg !4633
  store i8* %call33, i8** bitcast (%struct.rtx_def*** @ira_reg_equiv_const to i8**), align 8, !dbg !4634
  %12 = load i32, i32* @max_regno, align 4, !dbg !4635
  %conv34 = sext i32 %12 to i64, !dbg !4635
  %mul35 = shl nsw i64 %conv34, 3, !dbg !4636
  %call36 = tail call i8* @memset(i8* %call33, i32 0, i64 %mul35) #6, !dbg !4637
  tail call fastcc void @find_reg_equiv_invariant_const() #7, !dbg !4638
  %tobool37 = icmp eq i32 %call22, 0, !dbg !4639
  br i1 %tobool37, label %if.end54, label %do.body39, !dbg !4641

do.body39:                                        ; preds = %if.then24
  %13 = load i8, i8* @timevar_enable, align 1, !dbg !4642
  %tobool40 = icmp eq i8 %13, 0, !dbg !4642
  br i1 %tobool40, label %do.end44, label %if.then41, !dbg !4646

if.then41:                                        ; preds = %do.body39
  tail call void @timevar_push_1(i32 119) #6, !dbg !4642
  br label %do.end44, !dbg !4642

do.end44:                                         ; preds = %do.body39, %if.then41
  %call45 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4647
  tail call void @rebuild_jump_labels(%struct.rtx_def* %call45) #6, !dbg !4648
  %call46 = tail call zeroext i8 @purge_all_dead_edges() #6, !dbg !4649
  %14 = load i8, i8* @timevar_enable, align 1, !dbg !4650
  %tobool48 = icmp eq i8 %14, 0, !dbg !4650
  br i1 %tobool48, label %if.end54, label %if.then49, !dbg !4653

if.then49:                                        ; preds = %do.end44
  tail call void @timevar_pop_1(i32 119) #6, !dbg !4650
  br label %if.end54, !dbg !4650

if.end54:                                         ; preds = %do.end44, %if.then24, %if.end21, %if.then49
  %call55 = tail call i32 @max_reg_num() #6, !dbg !4654
  call void @llvm.dbg.value(metadata i32 %call55, metadata !4559, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.value(metadata i32 %call55, metadata !4561, metadata !DIExpression()), !dbg !4566
  tail call void @ira_setup_eliminable_regset() #7, !dbg !4655
  store i32 0, i32* @ira_mem_cost, align 4, !dbg !4656
  store i32 0, i32* @ira_reg_cost, align 4, !dbg !4657
  store i32 0, i32* @ira_overall_cost, align 4, !dbg !4658
  store i32 0, i32* @ira_shuffle_cost, align 4, !dbg !4659
  store i32 0, i32* @ira_store_cost, align 4, !dbg !4660
  store i32 0, i32* @ira_load_cost, align 4, !dbg !4661
  store i32 0, i32* @ira_additional_jumps_num, align 4, !dbg !4662
  store i32 0, i32* @ira_move_loops_num, align 4, !dbg !4663
  %call56 = tail call i32 @flow_loops_find(%struct.loops* nonnull @ira_loops) #6, !dbg !4664
  tail call void @record_loop_exits() #6, !dbg !4665
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4666
  %x_current_loops = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, i32 4, !dbg !4666
  store %struct.loops* @ira_loops, %struct.loops** %x_current_loops, align 8, !dbg !4667
  %16 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4668
  %cmp57 = icmp sgt i32 %16, 0, !dbg !4670
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4671
  %cmp60 = icmp ne %struct._IO_FILE* %17, null, !dbg !4672
  %or.cond1 = and i1 %cmp57, %cmp60, !dbg !4673
  br i1 %or.cond1, label %if.then62, label %if.end64, !dbg !4673

if.then62:                                        ; preds = %if.end54
  %call63 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %17, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.42, i64 0, i64 0)) #6, !dbg !4674
  br label %if.end64, !dbg !4674

if.end64:                                         ; preds = %if.then62, %if.end54
  %18 = load i32, i32* @optimize, align 4, !dbg !4675
  %tobool65 = icmp eq i32 %18, 0, !dbg !4675
  br i1 %tobool65, label %land.end, label %land.rhs, !dbg !4676

land.rhs:                                         ; preds = %if.end64
  %19 = load i32, i32* @flag_ira_region, align 4, !dbg !4677
  %20 = add i32 %19, -1, !dbg !4678
  %21 = icmp ult i32 %20, 2, !dbg !4678
  br label %land.end, !dbg !4678

land.end:                                         ; preds = %if.end64, %land.rhs
  %22 = phi i1 [ false, %if.end64 ], [ %21, %land.rhs ], !dbg !4566
  %conv70 = zext i1 %22 to i8, !dbg !4675
  %call71 = tail call zeroext i8 @ira_build(i8 zeroext %conv70) #6, !dbg !4679
  call void @llvm.dbg.value(metadata i8 %call71, metadata !4560, metadata !DIExpression()), !dbg !4566
  %23 = load i32, i32* @flag_ira_share_spill_slots, align 4, !dbg !4680
  call void @llvm.dbg.value(metadata i32 %23, metadata !4564, metadata !DIExpression()), !dbg !4566
  %call72 = tail call fastcc zeroext i8 @too_high_register_pressure_p() #7, !dbg !4681
  %tobool73 = icmp eq i8 %call72, 0, !dbg !4681
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !4683

if.then74:                                        ; preds = %land.end
  store i32 0, i32* @flag_ira_share_spill_slots, align 4, !dbg !4684
  br label %if.end75, !dbg !4685

if.end75:                                         ; preds = %land.end, %if.then74
  tail call void @ira_color() #6, !dbg !4686
  %24 = load i32, i32* @ira_max_point, align 4, !dbg !4687
  call void @llvm.dbg.value(metadata i32 %24, metadata !4562, metadata !DIExpression()), !dbg !4566
  tail call void @ira_emit(i8 zeroext %call71) #6, !dbg !4688
  %25 = load i8, i8* @ira_conflicts_p, align 1, !dbg !4689
  %tobool76 = icmp eq i8 %25, 0, !dbg !4689
  br i1 %tobool76, label %if.end94, label %if.then77, !dbg !4691

if.then77:                                        ; preds = %if.end75
  %call78 = tail call i32 @max_reg_num() #6, !dbg !4692
  store i32 %call78, i32* @max_regno, align 4, !dbg !4694
  %tobool79 = icmp eq i8 %call71, 0, !dbg !4695
  br i1 %tobool79, label %if.then80, label %if.else81, !dbg !4697

if.then80:                                        ; preds = %if.then77
  tail call void @ira_initiate_assign() #6, !dbg !4698
  br label %if.end94, !dbg !4698

if.else81:                                        ; preds = %if.then77
  tail call fastcc void @expand_reg_info(i32 %call55) #7, !dbg !4699
  tail call fastcc void @setup_preferred_alternate_classes_for_new_pseudos(i32 %call55) #7, !dbg !4701
  call void @llvm.dbg.value(metadata i32 undef, metadata !4559, metadata !DIExpression()), !dbg !4566
  %26 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4702
  %cmp82 = icmp sgt i32 %26, 0, !dbg !4704
  %27 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4705
  %cmp85 = icmp ne %struct._IO_FILE* %27, null, !dbg !4706
  %or.cond2 = and i1 %cmp82, %cmp85, !dbg !4707
  br i1 %or.cond2, label %if.then87, label %if.end89, !dbg !4707

if.then87:                                        ; preds = %if.else81
  %call88 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %27, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i64 0, i64 0)) #6, !dbg !4708
  br label %if.end89, !dbg !4708

if.end89:                                         ; preds = %if.then87, %if.else81
  tail call void @ira_flattening(i32 %call55, i32 %24) #6, !dbg !4709
  tail call void @df_analyze() #6, !dbg !4710
  %call90 = tail call i32 @flow_loops_find(%struct.loops* nonnull @ira_loops) #6, !dbg !4711
  tail call void @record_loop_exits() #6, !dbg !4712
  %28 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4713
  %x_current_loops92 = getelementptr inbounds %struct.function, %struct.function* %28, i64 0, i32 4, !dbg !4713
  store %struct.loops* @ira_loops, %struct.loops** %x_current_loops92, align 8, !dbg !4714
  tail call fastcc void @setup_allocno_assignment_flags() #7, !dbg !4715
  tail call void @ira_initiate_assign() #6, !dbg !4716
  %29 = load i32, i32* @max_regno, align 4, !dbg !4717
  tail call void @ira_reassign_conflict_allocnos(i32 %29) #6, !dbg !4718
  br label %if.end94

if.end94:                                         ; preds = %if.end75, %if.then80, %if.end89
  tail call fastcc void @setup_reg_renumber() #7, !dbg !4719
  tail call fastcc void @calculate_allocation_cost() #7, !dbg !4720
  %call95 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4721
  %call96 = tail call i32 @max_reg_num() #6, !dbg !4722
  %call97 = tail call i32 @delete_trivially_dead_insns(%struct.rtx_def* %call95, i32 %call96) #6, !dbg !4723
  %call98 = tail call i32 @max_reg_num() #6, !dbg !4724
  store i32 %call98, i32* @max_regno, align 4, !dbg !4725
  tail call fastcc void @VEC_rtx_gc_safe_grow(%struct.VEC_rtx_gc** nonnull @reg_equiv_memory_loc_vec, i32 %call98) #7, !dbg !4726
  %30 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec, align 8, !dbg !4727
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %30, i64 0, i32 0, !dbg !4727
  %call100 = tail call fastcc %struct.rtx_def** @VEC_rtx_base_address(%struct.VEC_rtx_base* %base) #7, !dbg !4727
  %31 = bitcast %struct.rtx_def** %call100 to i8*, !dbg !4727
  %32 = load i32, i32* @max_regno, align 4, !dbg !4728
  %conv101 = sext i32 %32 to i64, !dbg !4728
  %mul102 = shl nsw i64 %conv101, 3, !dbg !4729
  %call103 = tail call i8* @memset(i8* %31, i32 0, i64 %mul102) #6, !dbg !4730
  %33 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec, align 8, !dbg !4731
  %base106 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %33, i64 0, i32 0, !dbg !4731
  %call110 = tail call fastcc %struct.rtx_def** @VEC_rtx_base_address(%struct.VEC_rtx_base* %base106) #7, !dbg !4731
  store %struct.rtx_def** %call110, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !4732
  %34 = load i32, i32* @max_regno, align 4, !dbg !4733
  %cmp111 = icmp eq i32 %34, %call55, !dbg !4735
  br i1 %cmp111, label %if.end114, label %if.then113, !dbg !4736

if.then113:                                       ; preds = %if.end94
  tail call void @regstat_free_n_sets_and_refs() #6, !dbg !4737
  tail call void @regstat_free_ri() #6, !dbg !4739
  tail call void @regstat_init_n_sets_and_refs() #6, !dbg !4740
  tail call void @regstat_compute_ri() #6, !dbg !4741
  %.pre = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_memory_loc, align 8, !dbg !4742
  br label %if.end114, !dbg !4743

if.end114:                                        ; preds = %if.end94, %if.then113
  %35 = phi %struct.rtx_def** [ %call110, %if.end94 ], [ %.pre, %if.then113 ], !dbg !4742
  tail call void @allocate_initial_values(%struct.rtx_def** %35) #6, !dbg !4744
  %36 = load i32, i32* @ira_overall_cost, align 4, !dbg !4745
  call void @llvm.dbg.value(metadata i32 %36, metadata !4558, metadata !DIExpression()), !dbg !4566
  %37 = load i8, i8* @ira_conflicts_p, align 1, !dbg !4746
  %tobool115 = icmp eq i8 %37, 0, !dbg !4746
  br i1 %tobool115, label %do.body124, label %if.then116, !dbg !4748

if.then116:                                       ; preds = %if.end114
  tail call fastcc void @fix_reg_equiv_init() #7, !dbg !4749
  store i32 0, i32* @ira_spilled_reg_stack_slots_num, align 4, !dbg !4751
  %38 = load i32, i32* @max_regno, align 4, !dbg !4752
  %conv117 = sext i32 %38 to i64, !dbg !4752
  %mul118 = mul nsw i64 %conv117, 48, !dbg !4753
  %call119 = tail call i8* @ira_allocate(i64 %mul118) #7, !dbg !4754
  store i8* %call119, i8** bitcast (%struct.ira_spilled_reg_stack_slot** @ira_spilled_reg_stack_slots to i8**), align 8, !dbg !4755
  %39 = load i32, i32* @max_regno, align 4, !dbg !4756
  %conv120 = sext i32 %39 to i64, !dbg !4756
  %mul121 = mul nsw i64 %conv120, 48, !dbg !4757
  %call122 = tail call i8* @memset(i8* %call119, i32 0, i64 %mul121) #6, !dbg !4758
  br label %do.body124, !dbg !4759

do.body124:                                       ; preds = %if.end114, %if.then116
  %40 = load i8, i8* @timevar_enable, align 1, !dbg !4760
  %tobool125 = icmp eq i8 %40, 0, !dbg !4760
  br i1 %tobool125, label %do.body130, label %if.then126, !dbg !4763

if.then126:                                       ; preds = %do.body124
  tail call void @timevar_pop_1(i32 148) #6, !dbg !4760
  %.pre5 = load i8, i8* @timevar_enable, align 1, !dbg !4764
  %phitmp = icmp eq i8 %.pre5, 0, !dbg !4760
  br label %do.body130, !dbg !4760

do.body130:                                       ; preds = %do.body124, %if.then126
  %41 = phi i1 [ true, %do.body124 ], [ %phitmp, %if.then126 ]
  br i1 %41, label %do.end135, label %if.then132, !dbg !4767

if.then132:                                       ; preds = %do.body130
  tail call void @timevar_push_1(i32 149) #6, !dbg !4764
  br label %do.end135, !dbg !4764

do.end135:                                        ; preds = %do.body130, %if.then132
  %call136 = tail call i32 @df_set_flags(i32 16) #6, !dbg !4768
  tail call fastcc void @build_insn_chain() #7, !dbg !4769
  %call137 = tail call %struct.rtx_def* @get_insns() #6, !dbg !4770
  %42 = load i8, i8* @ira_conflicts_p, align 1, !dbg !4771
  %conv138 = zext i8 %42 to i32, !dbg !4771
  %call139 = tail call i32 @reload(%struct.rtx_def* %call137, i32 %conv138) #6, !dbg !4772
  %tobool140 = icmp eq i32 %call139, 0, !dbg !4773
  %lnot.ext = zext i1 %tobool140 to i32, !dbg !4773
  store i32 %lnot.ext, i32* @reload_completed, align 4, !dbg !4774
  tail call void @finish_subregs_of_mode() #6, !dbg !4775
  %43 = load i8, i8* @timevar_enable, align 1, !dbg !4776
  %tobool142 = icmp eq i8 %43, 0, !dbg !4776
  br i1 %tobool142, label %do.body147, label %if.then143, !dbg !4779

if.then143:                                       ; preds = %do.end135
  tail call void @timevar_pop_1(i32 149) #6, !dbg !4776
  %.pre6 = load i8, i8* @timevar_enable, align 1, !dbg !4780
  %phitmp7 = icmp eq i8 %.pre6, 0, !dbg !4776
  br label %do.body147, !dbg !4776

do.body147:                                       ; preds = %do.end135, %if.then143
  %44 = phi i1 [ true, %do.end135 ], [ %phitmp7, %if.then143 ]
  br i1 %44, label %do.end152, label %if.then149, !dbg !4783

if.then149:                                       ; preds = %do.body147
  tail call void @timevar_push_1(i32 148) #6, !dbg !4780
  br label %do.end152, !dbg !4780

do.end152:                                        ; preds = %do.body147, %if.then149
  %45 = load i8, i8* @ira_conflicts_p, align 1, !dbg !4784
  %tobool153 = icmp eq i8 %45, 0, !dbg !4784
  br i1 %tobool153, label %if.end155, label %if.then154, !dbg !4786

if.then154:                                       ; preds = %do.end152
  %46 = load i8*, i8** bitcast (%struct.ira_spilled_reg_stack_slot** @ira_spilled_reg_stack_slots to i8**), align 8, !dbg !4787
  tail call void @ira_free(i8* %46) #7, !dbg !4789
  tail call void @ira_finish_assign() #6, !dbg !4790
  br label %if.end155, !dbg !4791

if.end155:                                        ; preds = %do.end152, %if.then154
  %47 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !4792
  %cmp156 = icmp sgt i32 %47, 0, !dbg !4794
  %48 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !4795
  %cmp159 = icmp ne %struct._IO_FILE* %48, null, !dbg !4796
  %or.cond3 = and i1 %cmp156, %cmp159, !dbg !4797
  %49 = load i32, i32* @ira_overall_cost, align 4, !dbg !4798
  %cmp162 = icmp ne i32 %36, %49, !dbg !4799
  %or.cond4 = and i1 %or.cond3, %cmp162, !dbg !4797
  br i1 %or.cond4, label %if.then164, label %if.end166, !dbg !4797

if.then164:                                       ; preds = %if.end155
  %call165 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %48, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.44, i64 0, i64 0), i32 %49) #6, !dbg !4800
  br label %if.end166, !dbg !4800

if.end166:                                        ; preds = %if.then164, %if.end155
  tail call void @ira_destroy() #6, !dbg !4801
  store i32 %23, i32* @flag_ira_share_spill_slots, align 4, !dbg !4802
  tail call void @flow_loops_free(%struct.loops* nonnull @ira_loops) #6, !dbg !4803
  tail call void @free_dominance_info(i32 1) #6, !dbg !4804
  %50 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4805
  %cfg = getelementptr inbounds %struct.function, %struct.function* %50, i64 0, i32 1, !dbg !4805
  %51 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4805
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %51, i64 0, i32 0, !dbg !4805
  br label %for.cond, !dbg !4805

for.cond:                                         ; preds = %for.body, %if.end166
  %bb.0.in = phi %struct.basic_block_def** [ %x_entry_block_ptr, %if.end166 ], [ %next_bb, %for.body ]
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4807
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4565, metadata !DIExpression()), !dbg !4566
  %tobool168 = icmp eq %struct.basic_block_def* %bb.0, null, !dbg !4805
  br i1 %tobool168, label %for.end, label %for.body, !dbg !4805

for.body:                                         ; preds = %for.cond
  %loop_father = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 3, !dbg !4808
  store %struct.loop* null, %struct.loop** %loop_father, align 8, !dbg !4810
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 6, !dbg !4811
  br label %for.cond, !dbg !4811, !llvm.loop !4812

for.end:                                          ; preds = %for.cond
  %x_current_loops170 = getelementptr inbounds %struct.function, %struct.function* %50, i64 0, i32 4, !dbg !4814
  store %struct.loops* null, %struct.loops** %x_current_loops170, align 8, !dbg !4815
  tail call void @regstat_free_ri() #6, !dbg !4816
  tail call void @regstat_free_n_sets_and_refs() #6, !dbg !4817
  %52 = load i32, i32* @optimize, align 4, !dbg !4818
  %tobool171 = icmp eq i32 %52, 0, !dbg !4818
  br i1 %tobool171, label %if.end174, label %if.then172, !dbg !4820

if.then172:                                       ; preds = %for.end
  %call173 = tail call zeroext i8 @cleanup_cfg(i32 1) #6, !dbg !4821
  %53 = load i8*, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !4823
  tail call void @ira_free(i8* %53) #7, !dbg !4824
  %54 = load i8*, i8** bitcast (%struct.rtx_def*** @ira_reg_equiv_const to i8**), align 8, !dbg !4825
  tail call void @ira_free(i8* %54) #7, !dbg !4826
  br label %if.end174, !dbg !4827

if.end174:                                        ; preds = %for.end, %if.then172
  tail call void @bitmap_obstack_release(%struct.bitmap_obstack* nonnull @ira_bitmap_obstack) #6, !dbg !4828
  tail call void @df_finish_pass(i8 zeroext 1) #6, !dbg !4829
  %55 = load i32, i32* @optimize, align 4, !dbg !4830
  %cmp175 = icmp sgt i32 %55, 1, !dbg !4832
  br i1 %cmp175, label %if.then177, label %if.end178, !dbg !4833

if.then177:                                       ; preds = %if.end174
  tail call void @df_live_add_problem() #6, !dbg !4834
  br label %if.end178, !dbg !4834

if.end178:                                        ; preds = %if.then177, %if.end174
  tail call void @df_scan_alloc(%struct.bitmap_head_def* null) #6, !dbg !4835
  tail call void @df_scan_blocks() #6, !dbg !4836
  %56 = load i32, i32* @optimize, align 4, !dbg !4837
  %tobool179 = icmp eq i32 %56, 0, !dbg !4837
  br i1 %tobool179, label %do.body182, label %if.then180, !dbg !4839

if.then180:                                       ; preds = %if.end178
  tail call void @df_analyze() #6, !dbg !4840
  br label %do.body182, !dbg !4840

do.body182:                                       ; preds = %if.end178, %if.then180
  %57 = load i8, i8* @timevar_enable, align 1, !dbg !4841
  %tobool183 = icmp eq i8 %57, 0, !dbg !4841
  br i1 %tobool183, label %do.end187, label %if.then184, !dbg !4844

if.then184:                                       ; preds = %do.body182
  tail call void @timevar_pop_1(i32 148) #6, !dbg !4841
  br label %do.end187, !dbg !4841

do.end187:                                        ; preds = %do.body182, %if.then184
  ret void, !dbg !4845
}

declare dso_local void @timevar_push_1(i32) local_unnamed_addr #2

declare dso_local void @init_caller_save() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_prohibited_mode_move_regs() unnamed_addr #5 !dbg !4846 {
entry:
  %.b = load i1, i1* @ira_prohibited_mode_move_regs_initialized_p, align 1, !dbg !4854
  br i1 %.b, label %cleanup.cont, label %if.end, !dbg !4856

if.end:                                           ; preds = %entry
  store i1 true, i1* @ira_prohibited_mode_move_regs_initialized_p, align 1, !dbg !4857
  %call = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 0) #6, !dbg !4858
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !4850, metadata !DIExpression()), !dbg !4859
  %call1 = tail call %struct.rtx_def* @gen_rtx_REG(i32 0, i32 0) #6, !dbg !4860
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call1, metadata !4851, metadata !DIExpression()), !dbg !4859
  %call2 = tail call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %call, %struct.rtx_def* %call1) #6, !dbg !4861
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call2, metadata !4852, metadata !DIExpression()), !dbg !4859
  %call3 = tail call %struct.rtx_def* @gen_rtx_fmt_iuuBieie_stat(i32 8, i32 0, i32 0, %struct.rtx_def* null, %struct.rtx_def* null, %struct.basic_block_def* null, i32 0, %struct.rtx_def* %call2, i32 -1, %struct.rtx_def* null) #6, !dbg !4862
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call3, metadata !4853, metadata !DIExpression()), !dbg !4859
  call void @llvm.dbg.value(metadata i32 0, metadata !4848, metadata !DIExpression()), !dbg !4859
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4863
  %rt_uint = bitcast %union.rtunion_def* %arrayidx12 to i32*, !dbg !4863
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 0, !dbg !4863
  %arrayidx16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !4863
  %rt_uint17 = bitcast %union.rtunion_def* %arrayidx16 to i32*, !dbg !4863
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i64 0, i32 0, !dbg !4863
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call3, i64 0, i32 1, !dbg !4863
  %2 = getelementptr inbounds %union.u, %union.u* %u23, i64 1, i32 0, i32 0, i64 1, !dbg !4863
  %rt_int = bitcast %union.rtunion_def* %2 to i32*, !dbg !4863
  br label %for.cond, !dbg !4870

for.cond:                                         ; preds = %for.inc40, %if.end
  %indvars.iv1 = phi i64 [ %indvars.iv.next2, %for.inc40 ], [ 0, %if.end ], !dbg !4871
  call void @llvm.dbg.value(metadata i64 %indvars.iv1, metadata !4848, metadata !DIExpression()), !dbg !4859
  %exitcond5 = icmp eq i64 %indvars.iv1, 87, !dbg !4872
  br i1 %exitcond5, label %cleanup.cont.loopexit, label %for.body, !dbg !4873

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [87 x i64], [87 x i64]* @ira_prohibited_mode_move_regs, i64 0, i64 %indvars.iv1, !dbg !4874
  store i64 -1, i64* %arrayidx, align 8, !dbg !4874
  call void @llvm.dbg.value(metadata i32 0, metadata !4849, metadata !DIExpression()), !dbg !4859
  %3 = shl i64 %indvars.iv1, 16, !dbg !4863
  br label %for.cond4, !dbg !4875

for.cond4:                                        ; preds = %for.inc, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %for.body ], !dbg !4876
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !4849, metadata !DIExpression()), !dbg !4859
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !4877
  br i1 %exitcond, label %for.inc40, label %for.body6, !dbg !4878

for.body6:                                        ; preds = %for.cond4
  %4 = trunc i64 %indvars.iv to i32, !dbg !4879
  %5 = trunc i64 %indvars.iv1 to i32, !dbg !4879
  %call7 = tail call zeroext i8 @ix86_hard_regno_mode_ok(i32 %4, i32 %5) #6, !dbg !4879
  %tobool8 = icmp eq i8 %call7, 0, !dbg !4879
  br i1 %tobool8, label %for.inc, label %if.end10, !dbg !4881

if.end10:                                         ; preds = %for.body6
  %call11 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %call) #7, !dbg !4882
  %6 = trunc i64 %indvars.iv to i32, !dbg !4882
  tail call void @df_ref_change_reg_with_loc(i32 %call11, i32 %6, %struct.rtx_def* %call) #6, !dbg !4882
  %7 = trunc i64 %indvars.iv to i32, !dbg !4882
  store i32 %7, i32* %rt_uint, align 8, !dbg !4882
  %bf.load = load i32, i32* %0, align 8, !dbg !4883
  %bf.clear = and i32 %bf.load, -16711681, !dbg !4883
  %8 = trunc i64 %3 to i32, !dbg !4883
  %bf.set = or i32 %bf.clear, %8, !dbg !4883
  store i32 %bf.set, i32* %0, align 8, !dbg !4883
  %call13 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %call1) #7, !dbg !4884
  %9 = trunc i64 %indvars.iv to i32, !dbg !4884
  tail call void @df_ref_change_reg_with_loc(i32 %call13, i32 %9, %struct.rtx_def* %call1) #6, !dbg !4884
  %10 = trunc i64 %indvars.iv to i32, !dbg !4884
  store i32 %10, i32* %rt_uint17, align 8, !dbg !4884
  %bf.load18 = load i32, i32* %1, align 8, !dbg !4885
  %bf.clear21 = and i32 %bf.load18, -16711681, !dbg !4885
  %11 = trunc i64 %3 to i32, !dbg !4885
  %bf.set22 = or i32 %bf.clear21, %11, !dbg !4885
  store i32 %bf.set22, i32* %1, align 8, !dbg !4885
  store i32 -1, i32* %rt_int, align 8, !dbg !4886
  %call26 = tail call fastcc i32 @recog_memoized(%struct.rtx_def* %call3) #7, !dbg !4887
  %12 = load i32, i32* %rt_int, align 8, !dbg !4888
  %cmp31 = icmp slt i32 %12, 0, !dbg !4890
  br i1 %cmp31, label %for.inc, label %if.end33, !dbg !4891

if.end33:                                         ; preds = %if.end10
  tail call void @extract_insn(%struct.rtx_def* %call3) #6, !dbg !4892
  %call34 = tail call i32 @constrain_operands(i32 1) #6, !dbg !4893
  %tobool35 = icmp eq i32 %call34, 0, !dbg !4893
  br i1 %tobool35, label %for.inc, label %if.end37, !dbg !4895

if.end37:                                         ; preds = %if.end33
  %shl = shl i64 1, %indvars.iv, !dbg !4896
  %neg = xor i64 %shl, -1, !dbg !4896
  %13 = load i64, i64* %arrayidx, align 8, !dbg !4896
  %and = and i64 %13, %neg, !dbg !4896
  store i64 %and, i64* %arrayidx, align 8, !dbg !4896
  br label %for.inc, !dbg !4897

for.inc:                                          ; preds = %if.end33, %for.body6, %if.end10, %if.end37
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !4898
  call void @llvm.dbg.value(metadata i32 undef, metadata !4849, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4859
  br label %for.cond4, !dbg !4899, !llvm.loop !4900

for.inc40:                                        ; preds = %for.cond4
  %indvars.iv.next2 = add nuw nsw i64 %indvars.iv1, 1, !dbg !4902
  call void @llvm.dbg.value(metadata i32 undef, metadata !4848, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !4859
  br label %for.cond, !dbg !4903, !llvm.loop !4904

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !4906

cleanup.cont:                                     ; preds = %entry, %cleanup.cont.loopexit
  ret void, !dbg !4906
}

declare dso_local void @df_note_add_problem() local_unnamed_addr #2

declare dso_local void @df_live_add_problem() local_unnamed_addr #2

declare dso_local void @df_live_set_all_dirty() local_unnamed_addr #2

declare dso_local void @df_analyze() local_unnamed_addr #2

declare dso_local i32 @df_clear_flags(i32) local_unnamed_addr #2

declare dso_local void @regstat_init_n_sets_and_refs() local_unnamed_addr #2

declare dso_local void @regstat_compute_ri() local_unnamed_addr #2

declare dso_local void @generate_setjmp_warnings() local_unnamed_addr #2

declare dso_local i32 @leaf_function_p() local_unnamed_addr #2

declare dso_local zeroext i8 @resize_reg_info() local_unnamed_addr #2

declare dso_local void @ira_set_pseudo_classes(%struct._IO_FILE*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @update_equiv_regs() unnamed_addr #5 !dbg !4907 {
entry:
  store i1 false, i1* @recorded_label_ref, align 4, !dbg !4980
  %0 = load i32, i32* @max_regno, align 4, !dbg !4981
  %conv = sext i32 %0 to i64, !dbg !4981
  %call = tail call i8* @xcalloc(i64 %conv, i64 40) #6, !dbg !4981
  store i8* %call, i8** bitcast (%struct.equivalence** @reg_equiv to i8**), align 8, !dbg !4982
  %1 = load i32, i32* @max_regno, align 4, !dbg !4983
  %conv1 = sext i32 %1 to i64, !dbg !4983
  %mul = shl nsw i64 %conv1, 3, !dbg !4983
  %call2 = tail call i8* @ggc_alloc_cleared_stat(i64 %mul) #6, !dbg !4983
  store i8* %call2, i8** bitcast (%struct.rtx_def*** @reg_equiv_init to i8**), align 8, !dbg !4984
  %2 = load i32, i32* @max_regno, align 4, !dbg !4985
  store i32 %2, i32* @reg_equiv_init_size, align 4, !dbg !4986
  tail call void @init_alias_analysis() #6, !dbg !4987
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4988
  %cfg = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, i32 1, !dbg !4988
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4988
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i64 0, i32 0, !dbg !4988
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4988
  br label %for.cond, !dbg !4988

for.cond:                                         ; preds = %for.inc460, %entry
  %6 = phi %struct.control_flow_graph* [ %4, %entry ], [ %.pre8, %for.inc460 ], !dbg !4989
  %.pn = phi %struct.basic_block_def* [ %5, %entry ], [ %bb.0, %for.inc460 ]
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 6, !dbg !4990
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !4990
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !4910, metadata !DIExpression()), !dbg !4991
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i64 0, i32 1, !dbg !4989
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4989
  %cmp = icmp eq %struct.basic_block_def* %bb.0, %7, !dbg !4989
  br i1 %cmp, label %for.end462, label %for.body, !dbg !4988

for.body:                                         ; preds = %for.cond
  %loop_depth6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 10, !dbg !4992
  %8 = load i32, i32* %loop_depth6, align 4, !dbg !4992
  call void @llvm.dbg.value(metadata i32 %8, metadata !4911, metadata !DIExpression()), !dbg !4991
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !4993
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4993
  %9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4993
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %9, i64 0, i32 0, !dbg !4993
  br label %for.cond7, !dbg !4994

for.cond7:                                        ; preds = %cleanup, %for.body
  %10 = phi %struct.rtl_bb_info* [ %9, %for.body ], [ %.pre9, %cleanup ], !dbg !4995
  %insn.0.in = phi %struct.rtx_def** [ %head_, %for.body ], [ %rt_rtx458, %cleanup ]
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !4996
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !4909, metadata !DIExpression()), !dbg !4991
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i64 0, i32 1, !dbg !4995
  %11 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4995
  %12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !4995
  %rt_rtx = bitcast %union.rtunion_def* %12 to %struct.rtx_def**, !dbg !4995
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4995
  %cmp10 = icmp eq %struct.rtx_def* %insn.0, %13, !dbg !4997
  br i1 %cmp10, label %for.inc460, label %for.body12, !dbg !4998

for.body12:                                       ; preds = %for.cond7
  %14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !4999
  %bf.load = load i32, i32* %14, align 8, !dbg !4999
  %bf.clear = and i32 %bf.load, 65535, !dbg !4999
  %cmp13 = icmp eq i32 %bf.clear, 8, !dbg !4999
  br i1 %cmp13, label %if.end, label %lor.lhs.false, !dbg !4999

lor.lhs.false:                                    ; preds = %for.body12
  %cmp17 = icmp eq i32 %bf.clear, 7, !dbg !4999
  br i1 %cmp17, label %if.end, label %lor.lhs.false19, !dbg !4999

lor.lhs.false19:                                  ; preds = %lor.lhs.false
  %cmp22 = icmp eq i32 %bf.clear, 9, !dbg !4999
  br i1 %cmp22, label %if.end, label %lor.lhs.false24, !dbg !4999

lor.lhs.false24:                                  ; preds = %lor.lhs.false19
  %cmp27 = icmp eq i32 %bf.clear, 10, !dbg !4999
  br i1 %cmp27, label %if.end, label %cleanup, !dbg !5001

if.end:                                           ; preds = %lor.lhs.false24, %lor.lhs.false19, %lor.lhs.false, %for.body12
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !5002
  %15 = getelementptr inbounds %union.u, %union.u* %u29, i64 1, i32 0, i32 0, i64 2, !dbg !5002
  br label %for.cond33, !dbg !5004

for.cond33:                                       ; preds = %for.inc, %if.end
  %note.0.in.in = phi %union.rtunion_def* [ %15, %if.end ], [ %18, %for.inc ]
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !5005
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !5005
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !4913, metadata !DIExpression()), !dbg !5006
  %tobool = icmp eq %struct.rtx_def* %note.0, null, !dbg !5007
  br i1 %tobool, label %for.end, label %for.body34, !dbg !5007

for.body34:                                       ; preds = %for.cond33
  %16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !5008
  %bf.load35 = load i32, i32* %16, align 8, !dbg !5008
  %bf.clear36 = and i32 %bf.load35, 16711680, !dbg !5008
  %cmp37 = icmp eq i32 %bf.clear36, 131072, !dbg !5011
  br i1 %cmp37, label %if.then39, label %for.inc, !dbg !5012

if.then39:                                        ; preds = %for.body34
  %arrayidx42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5013
  %rt_rtx43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.rtx_def**, !dbg !5013
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx43, align 8, !dbg !5013
  tail call void @no_equiv(%struct.rtx_def* %17, %struct.rtx_def* nonnull %note.0, i8* null) #7, !dbg !5014
  br label %for.inc, !dbg !5014

for.inc:                                          ; preds = %for.body34, %if.then39
  %18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5015
  br label %for.cond33, !dbg !5016, !llvm.loop !5017

for.end:                                          ; preds = %for.cond33
  %bf.load49 = load i32, i32* %14, align 8, !dbg !5019
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !5019
  %cmp51 = icmp eq i32 %bf.clear50, 8, !dbg !5019
  br i1 %cmp51, label %cond.true, label %lor.lhs.false53, !dbg !5019

lor.lhs.false53:                                  ; preds = %for.end
  %cmp56 = icmp eq i32 %bf.clear50, 7, !dbg !5019
  br i1 %cmp56, label %cond.true, label %lor.lhs.false58, !dbg !5019

lor.lhs.false58:                                  ; preds = %lor.lhs.false53
  %cmp61 = icmp eq i32 %bf.clear50, 9, !dbg !5019
  br i1 %cmp61, label %cond.true, label %lor.lhs.false63, !dbg !5019

lor.lhs.false63:                                  ; preds = %lor.lhs.false58
  %cmp66 = icmp eq i32 %bf.clear50, 10, !dbg !5019
  br i1 %cmp66, label %cond.true, label %lor.lhs.false63.cond.end87_crit_edge, !dbg !5019

lor.lhs.false63.cond.end87_crit_edge:             ; preds = %lor.lhs.false63
  br label %cond.end87, !dbg !5019

cond.true:                                        ; preds = %lor.lhs.false63, %lor.lhs.false58, %lor.lhs.false53, %for.end
  %19 = getelementptr inbounds %union.u, %union.u* %u29, i64 1, i32 0, i32 0, i64 0, !dbg !5019
  %20 = bitcast %union.rtunion_def* %19 to i32**, !dbg !5019
  %21 = load i32*, i32** %20, align 8, !dbg !5019
  %bf.load72 = load i32, i32* %21, align 8, !dbg !5019
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !5019
  %cmp74 = icmp eq i32 %bf.clear73, 23, !dbg !5019
  %22 = bitcast i32* %21 to %struct.rtx_def*, !dbg !5019
  br i1 %cmp74, label %cond.end87, label %cond.false, !dbg !5019

cond.false:                                       ; preds = %cond.true
  %call85 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %insn.0, %struct.rtx_def* %22) #6, !dbg !5019
  br label %cond.end87, !dbg !5019

cond.end87:                                       ; preds = %lor.lhs.false63.cond.end87_crit_edge, %cond.false, %cond.true
  %cond88 = phi %struct.rtx_def* [ %call85, %cond.false ], [ %22, %cond.true ], [ null, %lor.lhs.false63.cond.end87_crit_edge ], !dbg !5019
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond88, metadata !4920, metadata !DIExpression()), !dbg !5006
  %cmp89 = icmp eq %struct.rtx_def* %cond88, null, !dbg !5020
  %23 = getelementptr inbounds %union.u, %union.u* %u29, i64 1, i32 0, i32 0, i64 0, !dbg !5021
  %rt_rtx95 = bitcast %union.rtunion_def* %23 to %struct.rtx_def**, !dbg !5021
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !5021
  br i1 %cmp89, label %if.then91, label %if.else, !dbg !5022

if.then91:                                        ; preds = %cond.end87
  tail call void @note_stores(%struct.rtx_def* %24, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @no_equiv, i8* null) #6, !dbg !5023
  br label %cleanup, !dbg !5025

if.else:                                          ; preds = %cond.end87
  %25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 0, !dbg !5026
  %bf.load100 = load i32, i32* %25, align 8, !dbg !5026
  %bf.clear101 = and i32 %bf.load100, 65535, !dbg !5026
  %cmp102 = icmp eq i32 %bf.clear101, 15, !dbg !5027
  br i1 %cmp102, label %if.then104, label %if.end132, !dbg !5028

if.then104:                                       ; preds = %if.else
  %arrayidx111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5029
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtvec_def**, !dbg !5029
  %26 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5029
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %26, i64 0, i32 0, !dbg !5029
  %27 = load i32, i32* %num_elem, align 8, !dbg !5029
  call void @llvm.dbg.value(metadata i32 %27, metadata !4924, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5030
  %28 = sext i32 %27 to i64, !dbg !5031
  br label %for.cond112, !dbg !5031

for.cond112:                                      ; preds = %for.inc129, %if.then104
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc129 ], [ %28, %if.then104 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !5032
  call void @llvm.dbg.value(metadata i32 undef, metadata !4924, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5030
  %cmp113 = icmp sgt i64 %indvars.iv, 0, !dbg !5033
  br i1 %cmp113, label %for.body115, label %if.end132.loopexit, !dbg !5034

for.body115:                                      ; preds = %for.cond112
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !5035
  %arrayidx122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5035
  %rt_rtvec123 = bitcast %union.rtunion_def* %arrayidx122 to %struct.rtvec_def**, !dbg !5035
  %30 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec123, align 8, !dbg !5035
  %arrayidx124 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %30, i64 0, i32 1, i64 %indvars.iv.next, !dbg !5035
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx124, align 8, !dbg !5035
  call void @llvm.dbg.value(metadata %struct.rtx_def* %31, metadata !4928, metadata !DIExpression()), !dbg !5036
  %cmp125 = icmp eq %struct.rtx_def* %31, %cond88, !dbg !5037
  br i1 %cmp125, label %for.inc129, label %if.then127, !dbg !5039

if.then127:                                       ; preds = %for.body115
  tail call void @note_stores(%struct.rtx_def* %31, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @no_equiv, i8* null) #6, !dbg !5040
  br label %for.inc129, !dbg !5040

for.inc129:                                       ; preds = %for.body115, %if.then127
  call void @llvm.dbg.value(metadata i32 undef, metadata !4924, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !5030
  br label %for.cond112, !dbg !5041, !llvm.loop !5042

if.end132.loopexit:                               ; preds = %for.cond112
  br label %if.end132, !dbg !5044

if.end132:                                        ; preds = %if.end132.loopexit, %if.else
  %arrayidx135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond88, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5044
  %rt_rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**, !dbg !5044
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx136, align 8, !dbg !5044
  call void @llvm.dbg.value(metadata %struct.rtx_def* %32, metadata !4921, metadata !DIExpression()), !dbg !5006
  %33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond88, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5045
  %rt_rtx140 = bitcast %union.rtunion_def* %33 to %struct.rtx_def**, !dbg !5045
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !5045
  call void @llvm.dbg.value(metadata %struct.rtx_def* %34, metadata !4922, metadata !DIExpression()), !dbg !5006
  %call141 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0, i32 3, %struct.rtx_def* null) #6, !dbg !5046
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call141, metadata !4913, metadata !DIExpression()), !dbg !5006
  %tobool142 = icmp eq %struct.rtx_def* %call141, null, !dbg !5047
  br i1 %tobool142, label %if.end168, label %if.then143, !dbg !5049

if.then143:                                       ; preds = %if.end132
  %35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i64 0, i32 0, !dbg !5050
  %bf.load144 = load i32, i32* %35, align 8, !dbg !5050
  %bf.clear145 = and i32 %bf.load144, 65535, !dbg !5050
  %cmp146 = icmp eq i32 %bf.clear145, 37, !dbg !5050
  br i1 %cmp146, label %cond.end150, label %cond.true148, !dbg !5050

cond.true148:                                     ; preds = %if.then143
  tail call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i32 2390, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !5050
  br label %cond.end150, !dbg !5050

cond.end150:                                      ; preds = %if.then143, %cond.true148
  %call152 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %32) #7, !dbg !5052
  call void @llvm.dbg.value(metadata i32 %call152, metadata !4923, metadata !DIExpression()), !dbg !5006
  %36 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5053
  %idxprom153 = sext i32 %call152 to i64, !dbg !5053
  %is_arg_equivalence = getelementptr inbounds %struct.equivalence, %struct.equivalence* %36, i64 %idxprom153, i32 4, !dbg !5054
  store i32 1, i32* %is_arg_equivalence, align 4, !dbg !5055
  %arrayidx157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call141, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5056
  %rt_rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**, !dbg !5056
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx158, align 8, !dbg !5056
  %call159 = tail call i32 @rtx_equal_p(%struct.rtx_def* %34, %struct.rtx_def* %37) #6, !dbg !5058
  %tobool160 = icmp eq i32 %call159, 0, !dbg !5058
  br i1 %tobool160, label %if.end168, label %if.then161, !dbg !5059

if.then161:                                       ; preds = %cond.end150
  %38 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5060
  %arrayidx163 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %38, i64 %idxprom153, !dbg !5060
  %39 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx163, align 8, !dbg !5060
  %call164 = tail call %struct.rtx_def* @gen_rtx_fmt_ue_stat(i32 4, i32 0, %struct.rtx_def* %insn.0, %struct.rtx_def* %39) #6, !dbg !5060
  %40 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5061
  %arrayidx166 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %40, i64 %idxprom153, !dbg !5061
  store %struct.rtx_def* %call164, %struct.rtx_def** %arrayidx166, align 8, !dbg !5062
  br label %if.end168, !dbg !5061

if.end168:                                        ; preds = %cond.end150, %if.end132, %if.then161
  %41 = load i32, i32* @optimize, align 4, !dbg !5063
  %tobool169 = icmp eq i32 %41, 0, !dbg !5063
  br i1 %tobool169, label %cleanup, label %if.end171, !dbg !5065

if.end171:                                        ; preds = %if.end168
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i64 0, i32 0, !dbg !5066
  %bf.load172 = load i32, i32* %42, align 8, !dbg !5066
  %bf.clear173 = and i32 %bf.load172, 65535, !dbg !5066
  %cmp174 = icmp eq i32 %bf.clear173, 37, !dbg !5066
  br i1 %cmp174, label %lor.lhs.false176, label %if.then234, !dbg !5068

lor.lhs.false176:                                 ; preds = %if.end171
  %call177 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %32) #7, !dbg !5069
  call void @llvm.dbg.value(metadata i32 %call177, metadata !4923, metadata !DIExpression()), !dbg !5006
  %cmp178 = icmp slt i32 %call177, 53, !dbg !5070
  br i1 %cmp178, label %if.then234, label %lor.lhs.false180, !dbg !5071

lor.lhs.false180:                                 ; preds = %lor.lhs.false176
  %43 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5072
  %idxprom181 = sext i32 %call177 to i64, !dbg !5072
  %init_insns = getelementptr inbounds %struct.equivalence, %struct.equivalence* %43, i64 %idxprom181, i32 2, !dbg !5073
  %44 = load %struct.rtx_def*, %struct.rtx_def** %init_insns, align 8, !dbg !5073
  %45 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5074
  %cmp183 = icmp eq %struct.rtx_def* %44, %45, !dbg !5075
  br i1 %cmp183, label %if.then234, label %lor.lhs.false185, !dbg !5076

lor.lhs.false185:                                 ; preds = %lor.lhs.false180
  %call186 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp187 = icmp eq i32 %call186, 1, !dbg !5077
  br i1 %cmp187, label %land.lhs.true, label %lor.lhs.false189, !dbg !5077

lor.lhs.false189:                                 ; preds = %lor.lhs.false185
  %call190 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp191 = icmp eq i32 %call190, 2, !dbg !5077
  br i1 %cmp191, label %land.lhs.true, label %lor.lhs.false193, !dbg !5077

lor.lhs.false193:                                 ; preds = %lor.lhs.false189
  %call194 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp195 = icmp eq i32 %call194, 3, !dbg !5077
  br i1 %cmp195, label %land.lhs.true, label %lor.lhs.false197, !dbg !5077

lor.lhs.false197:                                 ; preds = %lor.lhs.false193
  %call198 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp199 = icmp eq i32 %call198, 4, !dbg !5077
  br i1 %cmp199, label %land.lhs.true, label %lor.lhs.false201, !dbg !5077

lor.lhs.false201:                                 ; preds = %lor.lhs.false197
  %call202 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp203 = icmp eq i32 %call202, 7, !dbg !5077
  br i1 %cmp203, label %land.lhs.true, label %lor.lhs.false205, !dbg !5077

lor.lhs.false205:                                 ; preds = %lor.lhs.false201
  %call206 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp207 = icmp eq i32 %call206, 5, !dbg !5077
  br i1 %cmp207, label %land.lhs.true, label %lor.lhs.false209, !dbg !5077

lor.lhs.false209:                                 ; preds = %lor.lhs.false205
  %call210 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp211 = icmp eq i32 %call210, 6, !dbg !5077
  br i1 %cmp211, label %land.lhs.true, label %lor.lhs.false213, !dbg !5077

lor.lhs.false213:                                 ; preds = %lor.lhs.false209
  %call214 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp215 = icmp eq i32 %call214, 17, !dbg !5077
  br i1 %cmp215, label %land.lhs.true, label %lor.lhs.false217, !dbg !5077

lor.lhs.false217:                                 ; preds = %lor.lhs.false213
  %call218 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp219 = icmp eq i32 %call218, 14, !dbg !5077
  br i1 %cmp219, label %land.lhs.true, label %lor.lhs.false221, !dbg !5077

lor.lhs.false221:                                 ; preds = %lor.lhs.false217
  %call222 = tail call i32 @reg_preferred_class(i32 %call177) #6, !dbg !5077
  %cmp223 = icmp eq i32 %call222, 15, !dbg !5077
  br i1 %cmp223, label %land.lhs.true, label %if.end235, !dbg !5078

land.lhs.true:                                    ; preds = %lor.lhs.false221, %lor.lhs.false217, %lor.lhs.false213, %lor.lhs.false209, %lor.lhs.false205, %lor.lhs.false201, %lor.lhs.false197, %lor.lhs.false193, %lor.lhs.false189, %lor.lhs.false185
  %46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i64 0, i32 0, !dbg !5079
  %bf.load225 = load i32, i32* %46, align 8, !dbg !5079
  %bf.clear226 = and i32 %bf.load225, 65535, !dbg !5079
  %cmp227 = icmp eq i32 %bf.clear226, 43, !dbg !5079
  br i1 %cmp227, label %land.lhs.true229, label %if.end235, !dbg !5080

land.lhs.true229:                                 ; preds = %land.lhs.true
  %47 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5081
  %is_arg_equivalence232 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %47, i64 %idxprom181, i32 4, !dbg !5082
  %48 = load i32, i32* %is_arg_equivalence232, align 4, !dbg !5082
  %tobool233 = icmp eq i32 %48, 0, !dbg !5081
  br i1 %tobool233, label %if.then234, label %if.end235, !dbg !5083

if.then234:                                       ; preds = %land.lhs.true229, %lor.lhs.false180, %lor.lhs.false176, %if.end171
  tail call void @note_stores(%struct.rtx_def* nonnull %cond88, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @no_equiv, i8* null) #6, !dbg !5084
  br label %cleanup, !dbg !5086

if.end235:                                        ; preds = %land.lhs.true229, %land.lhs.true, %lor.lhs.false221
  %call236 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0, i32 4, %struct.rtx_def* null) #6, !dbg !5087
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call236, metadata !4913, metadata !DIExpression()), !dbg !5006
  %tobool237 = icmp eq %struct.rtx_def* %call236, null, !dbg !5088
  br i1 %tobool237, label %land.lhs.true238, label %if.end244, !dbg !5090

land.lhs.true238:                                 ; preds = %if.end235
  %call239 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %34, i8 zeroext 0) #6, !dbg !5091
  %tobool240 = icmp eq i8 %call239, 0, !dbg !5091
  br i1 %tobool240, label %if.then241, label %if.end244, !dbg !5092

if.then241:                                       ; preds = %land.lhs.true238
  %call242 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %34) #6, !dbg !5093
  %call243 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %insn.0, i32 4, %struct.rtx_def* %call242) #6, !dbg !5094
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call243, metadata !4913, metadata !DIExpression()), !dbg !5006
  br label %if.end244, !dbg !5095

if.end244:                                        ; preds = %land.lhs.true238, %if.end235, %if.then241
  %note.1 = phi %struct.rtx_def* [ %call236, %if.end235 ], [ null, %land.lhs.true238 ], [ %call243, %if.then241 ], !dbg !5006
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.1, metadata !4913, metadata !DIExpression()), !dbg !5006
  %tobool245 = icmp eq %struct.rtx_def* %note.1, null, !dbg !5096
  br i1 %tobool245, label %if.end256, label %land.lhs.true246, !dbg !5098

land.lhs.true246:                                 ; preds = %if.end244
  %arrayidx249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.1, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5099
  %49 = bitcast %union.rtunion_def* %arrayidx249 to i32**, !dbg !5099
  %50 = load i32*, i32** %49, align 8, !dbg !5099
  %bf.load251 = load i32, i32* %50, align 8, !dbg !5099
  %bf.clear252 = and i32 %bf.load251, 65535, !dbg !5099
  %cmp253 = icmp eq i32 %bf.clear252, 3, !dbg !5100
  %spec.select = select i1 %cmp253, %struct.rtx_def* null, %struct.rtx_def* %note.1, !dbg !5101
  br label %if.end256, !dbg !5101

if.end256:                                        ; preds = %if.end244, %land.lhs.true246
  %note.2 = phi %struct.rtx_def* [ null, %if.end244 ], [ %spec.select, %land.lhs.true246 ], !dbg !5006
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.2, metadata !4913, metadata !DIExpression()), !dbg !5006
  %51 = load %struct.df*, %struct.df** @df, align 8, !dbg !5102
  %def_regs = getelementptr inbounds %struct.df, %struct.df* %51, i64 0, i32 5, !dbg !5102
  %52 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs, align 8, !dbg !5102
  %arrayidx258 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %52, i64 %idxprom181, !dbg !5102
  %53 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx258, align 8, !dbg !5102
  %n_refs = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %53, i64 0, i32 1, !dbg !5102
  %54 = load i32, i32* %n_refs, align 8, !dbg !5102
  %cmp259 = icmp eq i32 %54, 1, !dbg !5104
  br i1 %cmp259, label %if.end286, label %land.lhs.true261, !dbg !5105

land.lhs.true261:                                 ; preds = %if.end256
  %tobool262 = icmp eq %struct.rtx_def* %note.2, null, !dbg !5106
  br i1 %tobool262, label %if.then285, label %lor.lhs.false263, !dbg !5107

lor.lhs.false263:                                 ; preds = %land.lhs.true261
  %arrayidx266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5108
  %rt_rtx267 = bitcast %union.rtunion_def* %arrayidx266 to %struct.rtx_def**, !dbg !5108
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx267, align 8, !dbg !5108
  %call268 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %55, i8 zeroext 0) #6, !dbg !5109
  %tobool270 = icmp eq i8 %call268, 0, !dbg !5109
  br i1 %tobool270, label %lor.lhs.false271, label %if.then285, !dbg !5110

lor.lhs.false271:                                 ; preds = %lor.lhs.false263
  %56 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5111
  %replacement = getelementptr inbounds %struct.equivalence, %struct.equivalence* %56, i64 %idxprom181, i32 0, !dbg !5112
  %57 = load %struct.rtx_def*, %struct.rtx_def** %replacement, align 8, !dbg !5112
  %tobool274 = icmp eq %struct.rtx_def* %57, null, !dbg !5111
  br i1 %tobool274, label %if.end286, label %land.lhs.true275, !dbg !5113

land.lhs.true275:                                 ; preds = %lor.lhs.false271
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx267, align 8, !dbg !5114
  %call283 = tail call i32 @rtx_equal_p(%struct.rtx_def* %58, %struct.rtx_def* nonnull %57) #6, !dbg !5115
  %tobool284 = icmp eq i32 %call283, 0, !dbg !5115
  br i1 %tobool284, label %if.then285, label %if.end286, !dbg !5116

if.then285:                                       ; preds = %land.lhs.true275, %lor.lhs.false263, %land.lhs.true261
  tail call void @no_equiv(%struct.rtx_def* %32, %struct.rtx_def* nonnull %cond88, i8* null) #7, !dbg !5117
  br label %cleanup, !dbg !5119

if.end286:                                        ; preds = %land.lhs.true275, %lor.lhs.false271, %if.end256
  %59 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5120
  %init_insns289 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %59, i64 %idxprom181, i32 2, !dbg !5120
  %60 = load %struct.rtx_def*, %struct.rtx_def** %init_insns289, align 8, !dbg !5120
  %call290 = tail call %struct.rtx_def* @gen_rtx_fmt_ue_stat(i32 4, i32 0, %struct.rtx_def* %insn.0, %struct.rtx_def* %60) #6, !dbg !5120
  %61 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5121
  %init_insns293 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %61, i64 %idxprom181, i32 2, !dbg !5122
  store %struct.rtx_def* %call290, %struct.rtx_def** %init_insns293, align 8, !dbg !5123
  %62 = load %struct.df*, %struct.df** @df, align 8, !dbg !5124
  %def_regs294 = getelementptr inbounds %struct.df, %struct.df* %62, i64 0, i32 5, !dbg !5124
  %63 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs294, align 8, !dbg !5124
  %arrayidx296 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %63, i64 %idxprom181, !dbg !5124
  %64 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx296, align 8, !dbg !5124
  %n_refs297 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %64, i64 0, i32 1, !dbg !5124
  %65 = load i32, i32* %n_refs297, align 8, !dbg !5124
  %cmp298 = icmp eq i32 %65, 1, !dbg !5125
  %tobool301 = icmp ne %struct.rtx_def* %note.2, null, !dbg !5126
  %or.cond = and i1 %cmp298, %tobool301, !dbg !5127
  br i1 %or.cond, label %land.lhs.true302, label %if.end315, !dbg !5127

land.lhs.true302:                                 ; preds = %if.end286
  %arrayidx305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.2, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5128
  %rt_rtx306 = bitcast %union.rtunion_def* %arrayidx305 to %struct.rtx_def**, !dbg !5128
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx306, align 8, !dbg !5128
  %call307 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %66, i8 zeroext 0) #6, !dbg !5129
  %tobool308 = icmp eq i8 %call307, 0, !dbg !5129
  br i1 %tobool308, label %if.then309, label %if.end315, !dbg !5130

if.then309:                                       ; preds = %land.lhs.true302
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx306, align 8, !dbg !5131
  call void @llvm.dbg.value(metadata %struct.rtx_def* %67, metadata !4932, metadata !DIExpression()), !dbg !5132
  tail call void @remove_note(%struct.rtx_def* %insn.0, %struct.rtx_def* nonnull %note.2) #6, !dbg !5133
  %call314 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %insn.0, i32 3, %struct.rtx_def* %67) #6, !dbg !5134
  br label %if.end315, !dbg !5135

if.end315:                                        ; preds = %land.lhs.true302, %if.then309, %if.end286
  %call316 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.0, i32 3, %struct.rtx_def* null) #6, !dbg !5136
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call316, metadata !4913, metadata !DIExpression()), !dbg !5006
  %cmp317 = icmp eq %struct.rtx_def* %call316, null, !dbg !5137
  br i1 %cmp317, label %land.lhs.true319, label %if.end347, !dbg !5139

land.lhs.true319:                                 ; preds = %if.end315
  %68 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !5140
  %basic_block = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %68, i64 %idxprom181, i32 6, !dbg !5140
  %69 = load i32, i32* %basic_block, align 4, !dbg !5140
  %cmp322 = icmp sgt i32 %69, 1, !dbg !5141
  br i1 %cmp322, label %land.lhs.true324, label %if.end347, !dbg !5142

land.lhs.true324:                                 ; preds = %land.lhs.true319
  %70 = bitcast %union.rtunion_def* %33 to i32**, !dbg !5143
  %71 = load i32*, i32** %70, align 8, !dbg !5143
  %bf.load329 = load i32, i32* %71, align 8, !dbg !5143
  %bf.clear330 = and i32 %bf.load329, 65535, !dbg !5143
  %cmp331 = icmp eq i32 %bf.clear330, 43, !dbg !5143
  br i1 %cmp331, label %land.lhs.true333, label %if.end347, !dbg !5144

land.lhs.true333:                                 ; preds = %land.lhs.true324
  %72 = bitcast i32* %71 to %struct.rtx_def*, !dbg !5144
  %call338 = tail call fastcc i32 @validate_equiv_mem(%struct.rtx_def* %insn.0, %struct.rtx_def* %32, %struct.rtx_def* %72) #7, !dbg !5145
  %tobool339 = icmp eq i32 %call338, 0, !dbg !5145
  br i1 %tobool339, label %if.end347, label %if.then340, !dbg !5146

if.then340:                                       ; preds = %land.lhs.true333
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !5147
  %call345 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %73) #6, !dbg !5148
  %call346 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %insn.0, i32 3, %struct.rtx_def* %call345) #6, !dbg !5149
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call346, metadata !4913, metadata !DIExpression()), !dbg !5006
  br label %if.end347, !dbg !5150

if.end347:                                        ; preds = %land.lhs.true333, %if.then340, %land.lhs.true324, %land.lhs.true319, %if.end315
  %note.3 = phi %struct.rtx_def* [ %call346, %if.then340 ], [ null, %land.lhs.true333 ], [ null, %land.lhs.true324 ], [ null, %land.lhs.true319 ], [ %call316, %if.end315 ], !dbg !5006
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.3, metadata !4913, metadata !DIExpression()), !dbg !5006
  %tobool348 = icmp eq %struct.rtx_def* %note.3, null, !dbg !5151
  br i1 %tobool348, label %cleanup, label %if.then349, !dbg !5152

if.then349:                                       ; preds = %if.end347
  %call351 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %32) #7, !dbg !5153
  call void @llvm.dbg.value(metadata i32 %call351, metadata !4935, metadata !DIExpression()), !dbg !5154
  %arrayidx354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.3, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5155
  %rt_rtx355 = bitcast %union.rtunion_def* %arrayidx354 to %struct.rtx_def**, !dbg !5155
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx355, align 8, !dbg !5155
  call void @llvm.dbg.value(metadata %struct.rtx_def* %74, metadata !4938, metadata !DIExpression()), !dbg !5154
  %75 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5156
  %idxprom356 = sext i32 %call351 to i64, !dbg !5156
  %is_arg_equivalence358 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %75, i64 %idxprom356, i32 4, !dbg !5158
  %76 = load i32, i32* %is_arg_equivalence358, align 4, !dbg !5158
  %tobool359 = icmp eq i32 %76, 0, !dbg !5156
  br i1 %tobool359, label %if.then360, label %if.end366, !dbg !5159

if.then360:                                       ; preds = %if.then349
  %77 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5160
  %arrayidx362 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %77, i64 %idxprom356, !dbg !5160
  %78 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx362, align 8, !dbg !5160
  %call363 = tail call %struct.rtx_def* @gen_rtx_fmt_ue_stat(i32 4, i32 0, %struct.rtx_def* %insn.0, %struct.rtx_def* %78) #6, !dbg !5160
  %79 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5161
  %arrayidx365 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %79, i64 %idxprom356, !dbg !5161
  store %struct.rtx_def* %call363, %struct.rtx_def** %arrayidx365, align 8, !dbg !5162
  br label %if.end366, !dbg !5161

if.end366:                                        ; preds = %if.then349, %if.then360
  %80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i64 0, i32 0, !dbg !5163
  %bf.load367 = load i32, i32* %80, align 8, !dbg !5163
  %bf.clear368 = and i32 %bf.load367, 65535, !dbg !5163
  %cmp369 = icmp eq i32 %bf.clear368, 44, !dbg !5165
  br i1 %cmp369, label %if.then398, label %lor.lhs.false371, !dbg !5166

lor.lhs.false371:                                 ; preds = %if.end366
  %cmp374 = icmp eq i32 %bf.clear368, 35, !dbg !5167
  br i1 %cmp374, label %land.lhs.true376, label %if.end399, !dbg !5168

land.lhs.true376:                                 ; preds = %lor.lhs.false371
  %arrayidx379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5169
  %81 = bitcast %union.rtunion_def* %arrayidx379 to i32**, !dbg !5169
  %82 = load i32*, i32** %81, align 8, !dbg !5169
  %bf.load381 = load i32, i32* %82, align 8, !dbg !5169
  %bf.clear382 = and i32 %bf.load381, 65535, !dbg !5169
  %cmp383 = icmp eq i32 %bf.clear382, 49, !dbg !5170
  br i1 %cmp383, label %land.lhs.true385, label %if.end399, !dbg !5171

land.lhs.true385:                                 ; preds = %land.lhs.true376
  %arrayidx392 = getelementptr inbounds i32, i32* %82, i64 2, !dbg !5172
  %83 = bitcast i32* %arrayidx392 to i32**, !dbg !5172
  %84 = load i32*, i32** %83, align 8, !dbg !5172
  %bf.load394 = load i32, i32* %84, align 8, !dbg !5172
  %bf.clear395 = and i32 %bf.load394, 65535, !dbg !5172
  %cmp396 = icmp eq i32 %bf.clear395, 44, !dbg !5173
  br i1 %cmp396, label %if.then398, label %if.end399, !dbg !5174

if.then398:                                       ; preds = %land.lhs.true385, %if.end366
  store i1 true, i1* @recorded_label_ref, align 4, !dbg !5175
  br label %if.end399, !dbg !5176

if.end399:                                        ; preds = %if.then398, %land.lhs.true385, %land.lhs.true376, %lor.lhs.false371
  %85 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5177
  %replacement402 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %85, i64 %idxprom356, i32 0, !dbg !5178
  store %struct.rtx_def* %74, %struct.rtx_def** %replacement402, align 8, !dbg !5179
  %86 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5180
  %src_p = getelementptr inbounds %struct.equivalence, %struct.equivalence* %86, i64 %idxprom356, i32 1, !dbg !5181
  %87 = bitcast %struct.rtx_def*** %src_p to %union.rtunion_def**, !dbg !5182
  store %union.rtunion_def* %33, %union.rtunion_def** %87, align 8, !dbg !5182
  %88 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5183
  %loop_depth411 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %88, i64 %idxprom356, i32 3, !dbg !5184
  store i32 %8, i32* %loop_depth411, align 8, !dbg !5185
  %89 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !5186
  %live_length = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %89, i64 %idxprom356, i32 2, !dbg !5186
  %90 = load i32, i32* %live_length, align 4, !dbg !5186
  %cmp414 = icmp sgt i32 %90, -1, !dbg !5188
  %91 = load i32, i32* @optimize, align 4, !dbg !5189
  %tobool417 = icmp ne i32 %91, 0, !dbg !5189
  %or.cond1 = and i1 %cmp414, %tobool417, !dbg !5190
  br i1 %or.cond1, label %if.then418, label %cleanup, !dbg !5190

if.then418:                                       ; preds = %if.end399
  %mul422 = shl nsw i32 %90, 1, !dbg !5191
  store i32 %mul422, i32* %live_length, align 4, !dbg !5191
  %call423 = tail call fastcc i32 @REG_N_REFS(i32 %call351) #7, !dbg !5193
  %cmp424 = icmp eq i32 %call423, 2, !dbg !5195
  br i1 %cmp424, label %land.lhs.true426, label %cleanup, !dbg !5196

land.lhs.true426:                                 ; preds = %if.then418
  %call427 = tail call i32 @rtx_equal_p(%struct.rtx_def* %74, %struct.rtx_def* %34) #6, !dbg !5197
  %tobool428 = icmp eq i32 %call427, 0, !dbg !5197
  br i1 %tobool428, label %lor.lhs.false429, label %land.lhs.true432, !dbg !5198

lor.lhs.false429:                                 ; preds = %land.lhs.true426
  %call430 = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %34) #7, !dbg !5199
  %tobool431 = icmp eq i32 %call430, 0, !dbg !5199
  br i1 %tobool431, label %land.lhs.true432, label %cleanup, !dbg !5200

land.lhs.true432:                                 ; preds = %lor.lhs.false429, %land.lhs.true426
  %bf.load433 = load i32, i32* %14, align 8, !dbg !5201
  %bf.clear434 = and i32 %bf.load433, 65535, !dbg !5201
  %cmp435 = icmp eq i32 %bf.clear434, 8, !dbg !5201
  br i1 %cmp435, label %land.lhs.true437, label %cleanup, !dbg !5202

land.lhs.true437:                                 ; preds = %land.lhs.true432
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !5203
  %call442 = tail call fastcc i32 @equiv_init_movable_p(%struct.rtx_def* %92, i32 %call351) #7, !dbg !5204
  %tobool443 = icmp eq i32 %call442, 0, !dbg !5204
  br i1 %tobool443, label %cleanup, label %if.then444, !dbg !5205

if.then444:                                       ; preds = %land.lhs.true437
  %93 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5206
  %replace = getelementptr inbounds %struct.equivalence, %struct.equivalence* %93, i64 %idxprom356, i32 5, !dbg !5207
  store i8 1, i8* %replace, align 8, !dbg !5208
  br label %cleanup, !dbg !5206

cleanup:                                          ; preds = %land.lhs.true437, %lor.lhs.false429, %if.end347, %if.end168, %if.then418, %land.lhs.true432, %if.then444, %if.end399, %lor.lhs.false24, %if.then285, %if.then234, %if.then91
  %94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5209
  %rt_rtx458 = bitcast %union.rtunion_def* %94 to %struct.rtx_def**, !dbg !5209
  %.pre9 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4995
  br label %for.cond7, !dbg !5210, !llvm.loop !5211

for.inc460:                                       ; preds = %for.cond7
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4989
  %cfg4.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !5213
  %.pre8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4.phi.trans.insert, align 8, !dbg !4989
  br label %for.cond, !dbg !4989, !llvm.loop !5214

for.end462:                                       ; preds = %for.cond
  %95 = load i32, i32* @optimize, align 4, !dbg !5216
  %tobool463 = icmp eq i32 %95, 0, !dbg !5216
  br i1 %tobool463, label %out1012, label %if.end465, !dbg !5218

if.end465:                                        ; preds = %for.end462
  %call466 = tail call %struct.rtx_def* @get_insns() #6, !dbg !5219
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call466, metadata !4909, metadata !DIExpression()), !dbg !4991
  br label %for.cond467, !dbg !5220

for.cond467:                                      ; preds = %cleanup628, %if.end465
  %insn.1 = phi %struct.rtx_def* [ %call466, %if.end465 ], [ %122, %cleanup628 ], !dbg !5221
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !4909, metadata !DIExpression()), !dbg !4991
  %tobool468 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !5222
  br i1 %tobool468, label %for.end639, label %for.body469, !dbg !5222

for.body469:                                      ; preds = %for.cond467
  %96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !5223
  %bf.load474 = load i32, i32* %96, align 8, !dbg !5223
  %bf.clear475 = and i32 %bf.load474, 65535, !dbg !5223
  %cmp476 = icmp eq i32 %bf.clear475, 8, !dbg !5223
  br i1 %cmp476, label %if.end494, label %lor.lhs.false478, !dbg !5223

lor.lhs.false478:                                 ; preds = %for.body469
  %cmp481 = icmp eq i32 %bf.clear475, 7, !dbg !5223
  br i1 %cmp481, label %if.end494, label %lor.lhs.false483, !dbg !5223

lor.lhs.false483:                                 ; preds = %lor.lhs.false478
  %cmp486 = icmp eq i32 %bf.clear475, 9, !dbg !5223
  br i1 %cmp486, label %if.end494, label %lor.lhs.false488, !dbg !5223

lor.lhs.false488:                                 ; preds = %lor.lhs.false483
  %cmp491 = icmp eq i32 %bf.clear475, 10, !dbg !5223
  br i1 %cmp491, label %if.end494, label %cleanup628, !dbg !5225

if.end494:                                        ; preds = %lor.lhs.false488, %lor.lhs.false483, %lor.lhs.false478, %for.body469
  br i1 %cmp476, label %cond.true514, label %lor.lhs.false499, !dbg !5226

lor.lhs.false499:                                 ; preds = %if.end494
  %cmp502 = icmp eq i32 %bf.clear475, 7, !dbg !5226
  br i1 %cmp502, label %cond.true514, label %lor.lhs.false504, !dbg !5226

lor.lhs.false504:                                 ; preds = %lor.lhs.false499
  %cmp507 = icmp eq i32 %bf.clear475, 9, !dbg !5226
  br i1 %cmp507, label %cond.true514, label %lor.lhs.false509, !dbg !5226

lor.lhs.false509:                                 ; preds = %lor.lhs.false504
  %cmp512 = icmp eq i32 %bf.clear475, 10, !dbg !5226
  br i1 %cmp512, label %cond.true514, label %cond.end537, !dbg !5226

cond.true514:                                     ; preds = %lor.lhs.false509, %lor.lhs.false504, %lor.lhs.false499, %if.end494
  %u515 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, !dbg !5226
  %97 = getelementptr inbounds %union.u, %union.u* %u515, i64 1, i32 0, i32 0, i64 0, !dbg !5226
  %98 = bitcast %union.rtunion_def* %97 to i32**, !dbg !5226
  %99 = load i32*, i32** %98, align 8, !dbg !5226
  %bf.load519 = load i32, i32* %99, align 8, !dbg !5226
  %bf.clear520 = and i32 %bf.load519, 65535, !dbg !5226
  %cmp521 = icmp eq i32 %bf.clear520, 23, !dbg !5226
  %100 = bitcast i32* %99 to %struct.rtx_def*, !dbg !5226
  br i1 %cmp521, label %cond.end537, label %cond.false528, !dbg !5226

cond.false528:                                    ; preds = %cond.true514
  %call533 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* nonnull %insn.1, %struct.rtx_def* %100) #6, !dbg !5226
  br label %cond.end537, !dbg !5226

cond.end537:                                      ; preds = %lor.lhs.false509, %cond.false528, %cond.true514
  %cond538 = phi %struct.rtx_def* [ %call533, %cond.false528 ], [ %100, %cond.true514 ], [ null, %lor.lhs.false509 ], !dbg !5226
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond538, metadata !4939, metadata !DIExpression()), !dbg !5227
  %tobool539 = icmp eq %struct.rtx_def* %cond538, null, !dbg !5228
  br i1 %tobool539, label %cleanup628, label %if.end541, !dbg !5230

if.end541:                                        ; preds = %cond.end537
  %arrayidx544 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond538, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5231
  %rt_rtx545 = bitcast %union.rtunion_def* %arrayidx544 to %struct.rtx_def**, !dbg !5231
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx545, align 8, !dbg !5231
  call void @llvm.dbg.value(metadata %struct.rtx_def* %101, metadata !4944, metadata !DIExpression()), !dbg !5227
  %102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond538, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5232
  %rt_rtx549 = bitcast %union.rtunion_def* %102 to %struct.rtx_def**, !dbg !5232
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx549, align 8, !dbg !5232
  call void @llvm.dbg.value(metadata %struct.rtx_def* %103, metadata !4943, metadata !DIExpression()), !dbg !5227
  %104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i64 0, i32 0, !dbg !5233
  %bf.load550 = load i32, i32* %104, align 8, !dbg !5233
  %bf.clear551 = and i32 %bf.load550, 65535, !dbg !5233
  %cmp552 = icmp eq i32 %bf.clear551, 43, !dbg !5233
  br i1 %cmp552, label %land.lhs.true554, label %cleanup628, !dbg !5234

land.lhs.true554:                                 ; preds = %if.end541
  %105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i64 0, i32 0, !dbg !5235
  %bf.load555 = load i32, i32* %105, align 8, !dbg !5235
  %bf.clear556 = and i32 %bf.load555, 65535, !dbg !5235
  %cmp557 = icmp eq i32 %bf.clear556, 37, !dbg !5235
  br i1 %cmp557, label %land.lhs.true559, label %cleanup628, !dbg !5236

land.lhs.true559:                                 ; preds = %land.lhs.true554
  %call560 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %103) #7, !dbg !5237
  call void @llvm.dbg.value(metadata i32 %call560, metadata !4945, metadata !DIExpression()), !dbg !5227
  %cmp561 = icmp ugt i32 %call560, 52, !dbg !5238
  br i1 %cmp561, label %land.lhs.true563, label %cleanup628, !dbg !5239

land.lhs.true563:                                 ; preds = %land.lhs.true559
  %106 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !5240
  %idxprom564 = zext i32 %call560 to i64, !dbg !5240
  %basic_block566 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %106, i64 %idxprom564, i32 6, !dbg !5240
  %107 = load i32, i32* %basic_block566, align 4, !dbg !5240
  %cmp567 = icmp sgt i32 %107, 1, !dbg !5241
  br i1 %cmp567, label %land.lhs.true569, label %cleanup628, !dbg !5242

land.lhs.true569:                                 ; preds = %land.lhs.true563
  %108 = load %struct.df*, %struct.df** @df, align 8, !dbg !5243
  %def_regs570 = getelementptr inbounds %struct.df, %struct.df* %108, i64 0, i32 5, !dbg !5243
  %109 = load %struct.df_reg_info**, %struct.df_reg_info*** %def_regs570, align 8, !dbg !5243
  %arrayidx572 = getelementptr inbounds %struct.df_reg_info*, %struct.df_reg_info** %109, i64 %idxprom564, !dbg !5243
  %110 = load %struct.df_reg_info*, %struct.df_reg_info** %arrayidx572, align 8, !dbg !5243
  %n_refs573 = getelementptr inbounds %struct.df_reg_info, %struct.df_reg_info* %110, i64 0, i32 1, !dbg !5243
  %111 = load i32, i32* %n_refs573, align 8, !dbg !5243
  %cmp574 = icmp eq i32 %111, 1, !dbg !5244
  br i1 %cmp574, label %land.lhs.true576, label %cleanup628, !dbg !5245

land.lhs.true576:                                 ; preds = %land.lhs.true569
  %112 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5246
  %init_insns579 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %112, i64 %idxprom564, i32 2, !dbg !5247
  %113 = load %struct.rtx_def*, %struct.rtx_def** %init_insns579, align 8, !dbg !5247
  %cmp580 = icmp eq %struct.rtx_def* %113, null, !dbg !5248
  br i1 %cmp580, label %cleanup628, label %land.lhs.true582, !dbg !5249

land.lhs.true582:                                 ; preds = %land.lhs.true576
  %114 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5250
  %cmp586 = icmp eq %struct.rtx_def* %113, %114, !dbg !5251
  br i1 %cmp586, label %cleanup628, label %land.lhs.true588, !dbg !5252

land.lhs.true588:                                 ; preds = %land.lhs.true582
  %arrayidx594 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5253
  %rt_rtx595 = bitcast %union.rtunion_def* %arrayidx594 to %struct.rtx_def**, !dbg !5253
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx595, align 8, !dbg !5253
  %call596 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %115, i32 3, %struct.rtx_def* null) #6, !dbg !5254
  %tobool597 = icmp eq %struct.rtx_def* %call596, null, !dbg !5254
  br i1 %tobool597, label %land.lhs.true598, label %cleanup628, !dbg !5255

land.lhs.true598:                                 ; preds = %land.lhs.true588
  %arrayidx601 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5256
  %rt_rtx602 = bitcast %union.rtunion_def* %arrayidx601 to %struct.rtx_def**, !dbg !5256
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx602, align 8, !dbg !5256
  %call603 = tail call fastcc i32 @contains_replace_regs(%struct.rtx_def* %116) #7, !dbg !5257
  %tobool604 = icmp eq i32 %call603, 0, !dbg !5257
  br i1 %tobool604, label %if.then605, label %cleanup628, !dbg !5258

if.then605:                                       ; preds = %land.lhs.true598
  %117 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5259
  %init_insns608 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %117, i64 %idxprom564, i32 2, !dbg !5259
  %118 = load %struct.rtx_def*, %struct.rtx_def** %init_insns608, align 8, !dbg !5259
  %arrayidx611 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5259
  %rt_rtx612 = bitcast %union.rtunion_def* %arrayidx611 to %struct.rtx_def**, !dbg !5259
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx612, align 8, !dbg !5259
  call void @llvm.dbg.value(metadata %struct.rtx_def* %119, metadata !4946, metadata !DIExpression()), !dbg !5260
  %call613 = tail call fastcc i32 @validate_equiv_mem(%struct.rtx_def* %119, %struct.rtx_def* %103, %struct.rtx_def* %101) #7, !dbg !5261
  %tobool614 = icmp eq i32 %call613, 0, !dbg !5261
  br i1 %tobool614, label %cleanup628, label %land.lhs.true615, !dbg !5263

land.lhs.true615:                                 ; preds = %if.then605
  %call616 = tail call fastcc i32 @memref_used_between_p(%struct.rtx_def* %101, %struct.rtx_def* %119, %struct.rtx_def* nonnull %insn.1) #7, !dbg !5264
  %tobool617 = icmp eq i32 %call616, 0, !dbg !5264
  br i1 %tobool617, label %land.lhs.true618, label %cleanup628, !dbg !5265

land.lhs.true618:                                 ; preds = %land.lhs.true615
  %call619 = tail call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %101) #6, !dbg !5266
  %call620 = tail call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %119, i32 3, %struct.rtx_def* %call619) #6, !dbg !5267
  %tobool621 = icmp eq %struct.rtx_def* %call620, null, !dbg !5267
  br i1 %tobool621, label %cleanup628, label %if.then622, !dbg !5268

if.then622:                                       ; preds = %land.lhs.true618
  %call623 = tail call %struct.rtx_def* @gen_rtx_fmt_ue_stat(i32 4, i32 0, %struct.rtx_def* nonnull %insn.1, %struct.rtx_def* null) #6, !dbg !5269
  %120 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5271
  %arrayidx625 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %120, i64 %idxprom564, !dbg !5271
  store %struct.rtx_def* %call623, %struct.rtx_def** %arrayidx625, align 8, !dbg !5272
  tail call void @df_notes_rescan(%struct.rtx_def* %119) #6, !dbg !5273
  br label %cleanup628, !dbg !5274

cleanup628:                                       ; preds = %land.lhs.true618, %land.lhs.true615, %if.then605, %land.lhs.true598, %land.lhs.true588, %land.lhs.true582, %land.lhs.true576, %cond.end537, %if.end541, %land.lhs.true554, %land.lhs.true559, %land.lhs.true563, %land.lhs.true569, %if.then622, %lor.lhs.false488
  %121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5275
  %rt_rtx638 = bitcast %union.rtunion_def* %121 to %struct.rtx_def**, !dbg !5275
  %122 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx638, align 8, !dbg !5275
  call void @llvm.dbg.value(metadata %struct.rtx_def* %122, metadata !4909, metadata !DIExpression()), !dbg !4991
  br label %for.cond467, !dbg !5276, !llvm.loop !5277

for.end639:                                       ; preds = %for.cond467
  %call640 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5279
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call640, metadata !4912, metadata !DIExpression()), !dbg !4991
  %123 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5280
  %cfg642 = getelementptr inbounds %struct.function, %struct.function* %123, i64 0, i32 1, !dbg !5280
  %124 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg642, align 8, !dbg !5280
  %x_exit_block_ptr643 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %124, i64 0, i32 1, !dbg !5280
  %125 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr643, align 8, !dbg !5280
  br label %for.cond644, !dbg !5280

for.cond644:                                      ; preds = %for.inc929, %for.end639
  %126 = phi %struct.control_flow_graph* [ %124, %for.end639 ], [ %.pre11, %for.inc929 ], !dbg !5281
  %.pn5 = phi %struct.basic_block_def* [ %125, %for.end639 ], [ %bb.1, %for.inc929 ]
  %bb.1.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn5, i64 0, i32 5, !dbg !5282
  %bb.1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.1.in, align 8, !dbg !5282
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.1, metadata !4910, metadata !DIExpression()), !dbg !4991
  %x_entry_block_ptr647 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %126, i64 0, i32 0, !dbg !5281
  %127 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr647, align 8, !dbg !5281
  %cmp648 = icmp eq %struct.basic_block_def* %bb.1, %127, !dbg !5281
  br i1 %cmp648, label %for.end931, label %for.body650, !dbg !5280

for.body650:                                      ; preds = %for.cond644
  %loop_depth651 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 10, !dbg !5283
  %128 = load i32, i32* %loop_depth651, align 4, !dbg !5283
  call void @llvm.dbg.value(metadata i32 %128, metadata !4911, metadata !DIExpression()), !dbg !4991
  %il652 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 7, !dbg !5284
  %rtl653 = bitcast %union.basic_block_il_dependent* %il652 to %struct.rtl_bb_info**, !dbg !5284
  %129 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl653, align 8, !dbg !5284
  %end_654 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %129, i64 0, i32 1, !dbg !5284
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.1, i64 0, i32 9, !dbg !5285
  br label %for.cond655, !dbg !5286

for.cond655:                                      ; preds = %cleanup920, %for.body650
  %130 = phi %struct.rtl_bb_info* [ %129, %for.body650 ], [ %.pre12, %cleanup920 ], !dbg !5287
  %insn.2.in = phi %struct.rtx_def** [ %end_654, %for.body650 ], [ %rt_rtx927, %cleanup920 ]
  %insn.2 = load %struct.rtx_def*, %struct.rtx_def** %insn.2.in, align 8, !dbg !5288
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !4909, metadata !DIExpression()), !dbg !4991
  %head_658 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %130, i64 0, i32 0, !dbg !5287
  %131 = load %struct.rtx_def*, %struct.rtx_def** %head_658, align 8, !dbg !5287
  %132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5287
  %rt_rtx662 = bitcast %union.rtunion_def* %132 to %struct.rtx_def**, !dbg !5287
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx662, align 8, !dbg !5287
  %cmp663 = icmp eq %struct.rtx_def* %insn.2, %133, !dbg !5289
  br i1 %cmp663, label %for.inc929, label %for.body665, !dbg !5290

for.body665:                                      ; preds = %for.cond655
  %134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 0, !dbg !5291
  %bf.load666 = load i32, i32* %134, align 8, !dbg !5291
  %bf.clear667 = and i32 %bf.load666, 65535, !dbg !5291
  %cmp668 = icmp eq i32 %bf.clear667, 8, !dbg !5291
  br i1 %cmp668, label %if.end686, label %lor.lhs.false670, !dbg !5291

lor.lhs.false670:                                 ; preds = %for.body665
  %cmp673 = icmp eq i32 %bf.clear667, 7, !dbg !5291
  br i1 %cmp673, label %if.end686, label %lor.lhs.false675, !dbg !5291

lor.lhs.false675:                                 ; preds = %lor.lhs.false670
  %cmp678 = icmp eq i32 %bf.clear667, 9, !dbg !5291
  br i1 %cmp678, label %if.end686, label %lor.lhs.false680, !dbg !5291

lor.lhs.false680:                                 ; preds = %lor.lhs.false675
  %cmp683 = icmp eq i32 %bf.clear667, 10, !dbg !5291
  br i1 %cmp683, label %if.end686, label %cleanup920, !dbg !5293

if.end686:                                        ; preds = %lor.lhs.false680, %lor.lhs.false675, %lor.lhs.false670, %for.body665
  %cmp689 = icmp eq i32 %bf.clear667, 9, !dbg !5294
  br i1 %cmp689, label %land.lhs.true691, label %if.end695, !dbg !5296

land.lhs.true691:                                 ; preds = %if.end686
  %call692 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %insn.2, i32 28, %struct.rtx_def* null) #6, !dbg !5297
  %tobool693 = icmp eq %struct.rtx_def* %call692, null, !dbg !5297
  br i1 %tobool693, label %if.end695, label %cleanup920, !dbg !5298

if.end695:                                        ; preds = %land.lhs.true691, %if.end686
  %u696 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, !dbg !5299
  %135 = getelementptr inbounds %union.u, %union.u* %u696, i64 1, i32 0, i32 0, i64 2, !dbg !5299
  %136 = getelementptr inbounds %union.u, %union.u* %u696, i64 1, i32 0, i32 0, i64 0, !dbg !5300
  %rt_rtx716 = bitcast %union.rtunion_def* %136 to %struct.rtx_def**, !dbg !5300
  %137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5301
  %138 = bitcast %union.rtunion_def* %137 to i64*, !dbg !5301
  br label %for.cond700, !dbg !5303

for.cond700:                                      ; preds = %for.inc914, %if.end695
  %link.0.in.in = phi %union.rtunion_def* [ %135, %if.end695 ], [ %197, %for.inc914 ]
  %link.0.in = bitcast %union.rtunion_def* %link.0.in.in to %struct.rtx_def**, !dbg !5304
  %link.0 = load %struct.rtx_def*, %struct.rtx_def** %link.0.in, align 8, !dbg !5304
  call void @llvm.dbg.value(metadata %struct.rtx_def* %link.0, metadata !4949, metadata !DIExpression()), !dbg !5305
  %tobool701 = icmp eq %struct.rtx_def* %link.0, null, !dbg !5306
  br i1 %tobool701, label %cleanup920.loopexit, label %for.body702, !dbg !5306

for.body702:                                      ; preds = %for.cond700
  %139 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 0, !dbg !5307
  %bf.load703 = load i32, i32* %139, align 8, !dbg !5307
  %bf.clear705 = and i32 %bf.load703, 16711680, !dbg !5307
  %cmp706 = icmp eq i32 %bf.clear705, 65536, !dbg !5308
  br i1 %cmp706, label %land.lhs.true708, label %for.inc914, !dbg !5309

land.lhs.true708:                                 ; preds = %for.body702
  %arrayidx711 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5310
  %rt_rtx712 = bitcast %union.rtunion_def* %arrayidx711 to %struct.rtx_def**, !dbg !5310
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx712, align 8, !dbg !5310
  %141 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx716, align 8, !dbg !5311
  %call717 = tail call i32 @reg_mentioned_p(%struct.rtx_def* %140, %struct.rtx_def* %141) #6, !dbg !5312
  %tobool718 = icmp eq i32 %call717, 0, !dbg !5312
  br i1 %tobool718, label %for.inc914, label %if.then719, !dbg !5313

if.then719:                                       ; preds = %land.lhs.true708
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx712, align 8, !dbg !5314
  %call725 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %142) #7, !dbg !5314
  call void @llvm.dbg.value(metadata i32 %call725, metadata !4956, metadata !DIExpression()), !dbg !5315
  %143 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5316
  %idxprom726 = sext i32 %call725 to i64, !dbg !5316
  %replace728 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %143, i64 %idxprom726, i32 5, !dbg !5318
  %144 = load i8, i8* %replace728, align 8, !dbg !5318
  %tobool729 = icmp eq i8 %144, 0, !dbg !5316
  br i1 %tobool729, label %for.inc914, label %lor.lhs.false730, !dbg !5319

lor.lhs.false730:                                 ; preds = %if.then719
  %loop_depth733 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %143, i64 %idxprom726, i32 3, !dbg !5320
  %145 = load i32, i32* %loop_depth733, align 8, !dbg !5320
  %cmp734 = icmp slt i32 %145, %128, !dbg !5321
  br i1 %cmp734, label %for.inc914, label %if.end737, !dbg !5322

if.end737:                                        ; preds = %lor.lhs.false730
  %init_insns740 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %143, i64 %idxprom726, i32 2, !dbg !5323
  %146 = load %struct.rtx_def*, %struct.rtx_def** %init_insns740, align 8, !dbg !5323
  %tobool741 = icmp eq %struct.rtx_def* %146, null, !dbg !5323
  br i1 %tobool741, label %cond.true751, label %land.lhs.true742, !dbg !5323

land.lhs.true742:                                 ; preds = %if.end737
  %147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5323
  %rt_rtx749 = bitcast %union.rtunion_def* %147 to %struct.rtx_def**, !dbg !5323
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx749, align 8, !dbg !5323
  %tobool750 = icmp eq %struct.rtx_def* %148, null, !dbg !5323
  br i1 %tobool750, label %cond.end753, label %cond.true751, !dbg !5323

cond.true751:                                     ; preds = %land.lhs.true742, %if.end737
  tail call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i32 2653, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !5323
  %.pre13 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5324
  %init_insns757.phi.trans.insert = getelementptr inbounds %struct.equivalence, %struct.equivalence* %.pre13, i64 %idxprom726, i32 2, !dbg !5315
  %.pre14 = load %struct.rtx_def*, %struct.rtx_def** %init_insns757.phi.trans.insert, align 8, !dbg !5324
  br label %cond.end753, !dbg !5323

cond.end753:                                      ; preds = %land.lhs.true742, %cond.true751
  %149 = phi %struct.rtx_def* [ %146, %land.lhs.true742 ], [ %.pre14, %cond.true751 ], !dbg !5324
  %arrayidx760 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5324
  %rt_rtx761 = bitcast %union.rtunion_def* %arrayidx760 to %struct.rtx_def**, !dbg !5324
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx761, align 8, !dbg !5324
  call void @llvm.dbg.value(metadata %struct.rtx_def* %150, metadata !4962, metadata !DIExpression()), !dbg !5315
  %call762 = tail call zeroext i8 @can_throw_internal(%struct.rtx_def* %150) #6, !dbg !5325
  %tobool763 = icmp eq i8 %call762, 0, !dbg !5325
  br i1 %tobool763, label %if.end765, label %for.inc914, !dbg !5327

if.end765:                                        ; preds = %cond.end753
  %u766 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i64 0, i32 1, !dbg !5328
  %151 = getelementptr inbounds %union.u, %union.u* %u766, i64 1, i32 0, i32 0, i64 0, !dbg !5328
  %rt_rtx769 = bitcast %union.rtunion_def* %151 to %struct.rtx_def**, !dbg !5328
  %152 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx769, align 8, !dbg !5328
  %call770 = tail call i32 @asm_noperands(%struct.rtx_def* %152) #6, !dbg !5329
  %cmp771 = icmp slt i32 %call770, 0, !dbg !5330
  br i1 %cmp771, label %land.lhs.true773, label %if.else839, !dbg !5331

land.lhs.true773:                                 ; preds = %if.end765
  %153 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5332
  %arrayidx775 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %153, i64 %idxprom726, !dbg !5332
  %154 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx775, align 8, !dbg !5332
  %155 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5333
  %src_p778 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %155, i64 %idxprom726, i32 1, !dbg !5334
  %156 = load %struct.rtx_def**, %struct.rtx_def*** %src_p778, align 8, !dbg !5334
  %157 = load %struct.rtx_def*, %struct.rtx_def** %156, align 8, !dbg !5335
  %call779 = tail call i32 @validate_replace_rtx(%struct.rtx_def* %154, %struct.rtx_def* %157, %struct.rtx_def* %insn.2) #6, !dbg !5336
  %tobool780 = icmp eq i32 %call779, 0, !dbg !5336
  br i1 %tobool780, label %if.else839, label %for.cond783.preheader, !dbg !5337

for.cond783.preheader:                            ; preds = %land.lhs.true773
  br label %for.cond783, !dbg !5338

for.cond783:                                      ; preds = %for.cond783.preheader, %for.inc790
  %last_link.0 = phi %struct.rtx_def* [ %159, %for.inc790 ], [ %link.0, %for.cond783.preheader ], !dbg !5340
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_link.0, metadata !4966, metadata !DIExpression()), !dbg !5341
  %158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5342
  %rt_rtx787 = bitcast %union.rtunion_def* %158 to %struct.rtx_def**, !dbg !5342
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx787, align 8, !dbg !5342
  %tobool788 = icmp eq %struct.rtx_def* %159, null, !dbg !5338
  br i1 %tobool788, label %for.end795, label %for.inc790, !dbg !5338

for.inc790:                                       ; preds = %for.cond783
  call void @llvm.dbg.value(metadata %struct.rtx_def* %159, metadata !4966, metadata !DIExpression()), !dbg !5341
  br label %for.cond783, !dbg !5344, !llvm.loop !5345

for.end795:                                       ; preds = %for.cond783
  %last_link.0.lcssa = phi %struct.rtx_def* [ %last_link.0, %for.cond783 ], !dbg !5340
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_link.0.lcssa, metadata !4966, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_link.0.lcssa, metadata !4966, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_link.0.lcssa, metadata !4966, metadata !DIExpression()), !dbg !5341
  %160 = getelementptr inbounds %union.u, %union.u* %u766, i64 1, i32 0, i32 0, i64 2, !dbg !5347
  %rt_rtx799 = bitcast %union.rtunion_def* %160 to %struct.rtx_def**, !dbg !5347
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx799, align 8, !dbg !5347
  call void @llvm.dbg.value(metadata %struct.rtx_def* %161, metadata !4963, metadata !DIExpression()), !dbg !5341
  br label %while.cond, !dbg !5348

while.cond:                                       ; preds = %if.end819, %for.end795
  %equiv_link.0 = phi %struct.rtx_def* [ %161, %for.end795 ], [ %163, %if.end819 ], !dbg !5341
  %last_link.1 = phi %struct.rtx_def* [ %last_link.0.lcssa, %for.end795 ], [ %last_link.2, %if.end819 ], !dbg !5341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_link.1, metadata !4966, metadata !DIExpression()), !dbg !5341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %equiv_link.0, metadata !4963, metadata !DIExpression()), !dbg !5341
  %tobool800 = icmp eq %struct.rtx_def* %equiv_link.0, null, !dbg !5348
  br i1 %tobool800, label %while.end, label %while.body, !dbg !5348

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* %equiv_link.0, metadata !4967, metadata !DIExpression()), !dbg !5341
  %162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %equiv_link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5349
  %rt_rtx804 = bitcast %union.rtunion_def* %162 to %struct.rtx_def**, !dbg !5349
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx804, align 8, !dbg !5349
  call void @llvm.dbg.value(metadata %struct.rtx_def* %163, metadata !4963, metadata !DIExpression()), !dbg !5341
  %164 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %equiv_link.0, i64 0, i32 0, !dbg !5351
  %bf.load805 = load i32, i32* %164, align 8, !dbg !5351
  %bf.clear807 = and i32 %bf.load805, 16711680, !dbg !5351
  %cmp808 = icmp eq i32 %bf.clear807, 65536, !dbg !5353
  br i1 %cmp808, label %if.then810, label %if.end819, !dbg !5354

if.then810:                                       ; preds = %while.body
  tail call void @remove_note(%struct.rtx_def* %150, %struct.rtx_def* nonnull %equiv_link.0) #6, !dbg !5355
  %165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %last_link.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5357
  %rt_rtx814 = bitcast %union.rtunion_def* %165 to %struct.rtx_def**, !dbg !5357
  store %struct.rtx_def* %equiv_link.0, %struct.rtx_def** %rt_rtx814, align 8, !dbg !5358
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx804, align 8, !dbg !5359
  call void @llvm.dbg.value(metadata %struct.rtx_def* %equiv_link.0, metadata !4966, metadata !DIExpression()), !dbg !5341
  br label %if.end819, !dbg !5360

if.end819:                                        ; preds = %if.then810, %while.body
  %last_link.2 = phi %struct.rtx_def* [ %equiv_link.0, %if.then810 ], [ %last_link.1, %while.body ], !dbg !5341
  call void @llvm.dbg.value(metadata %struct.rtx_def* %last_link.2, metadata !4966, metadata !DIExpression()), !dbg !5341
  br label %while.cond, !dbg !5348, !llvm.loop !5361

while.end:                                        ; preds = %while.cond
  %call820 = tail call %struct.rtx_def* @remove_death(i32 %call725, %struct.rtx_def* %insn.2) #6, !dbg !5363
  %166 = load %struct.regstat_n_sets_and_refs_t*, %struct.regstat_n_sets_and_refs_t** @regstat_n_sets_and_refs, align 8, !dbg !5364
  %refs = getelementptr inbounds %struct.regstat_n_sets_and_refs_t, %struct.regstat_n_sets_and_refs_t* %166, i64 %idxprom726, i32 1, !dbg !5364
  store i32 0, i32* %refs, align 4, !dbg !5364
  %167 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !5365
  %freq = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %167, i64 %idxprom726, i32 0, !dbg !5365
  store i32 0, i32* %freq, align 4, !dbg !5366
  %call825 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %150) #6, !dbg !5367
  %168 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5368
  %init_insns828 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %168, i64 %idxprom726, i32 2, !dbg !5368
  %169 = load %struct.rtx_def*, %struct.rtx_def** %init_insns828, align 8, !dbg !5368
  %170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5368
  %171 = bitcast %union.rtunion_def* %170 to i64*, !dbg !5368
  %172 = load i64, i64* %171, align 8, !dbg !5368
  %173 = bitcast %struct.rtx_def** %init_insns828 to i64*, !dbg !5369
  store i64 %172, i64* %173, align 8, !dbg !5369
  %174 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5370
  %arrayidx837 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %174, i64 %idxprom726, !dbg !5370
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx837, align 8, !dbg !5371
  %call838 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call640, i32 %call725) #6, !dbg !5372
  br label %for.inc914, !dbg !5373

if.else839:                                       ; preds = %land.lhs.true773, %if.end765
  %call840 = tail call %struct.rtx_def* @prev_nondebug_insn(%struct.rtx_def* %insn.2) #6, !dbg !5374
  %cmp841 = icmp eq %struct.rtx_def* %call840, %150, !dbg !5375
  br i1 %cmp841, label %for.inc914, label %if.then843, !dbg !5376

if.then843:                                       ; preds = %if.else839
  %175 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx769, align 8, !dbg !5377
  %call848 = tail call %struct.rtx_def* @emit_insn_before(%struct.rtx_def* %175, %struct.rtx_def* %insn.2) #6, !dbg !5378
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call848, metadata !4968, metadata !DIExpression()), !dbg !5285
  %176 = getelementptr inbounds %union.u, %union.u* %u766, i64 1, i32 0, i32 0, i64 2, !dbg !5379
  %177 = bitcast %union.rtunion_def* %176 to i64*, !dbg !5379
  %178 = load i64, i64* %177, align 8, !dbg !5379
  %u853 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call848, i64 0, i32 1, !dbg !5380
  %179 = getelementptr inbounds %union.u, %union.u* %u853, i64 1, i32 0, i32 0, i64 2, !dbg !5380
  %180 = bitcast %union.rtunion_def* %179 to i64*, !dbg !5381
  store i64 %178, i64* %180, align 8, !dbg !5381
  %rt_rtx860 = bitcast %union.rtunion_def* %176 to %struct.rtx_def**, !dbg !5382
  store %struct.rtx_def* null, %struct.rtx_def** %rt_rtx860, align 8, !dbg !5383
  %call861 = tail call zeroext i8 @df_insn_rescan(%struct.rtx_def* %call848) #6, !dbg !5384
  %181 = getelementptr inbounds %union.u, %union.u* %u766, i64 1, i32 0, i32 0, i64 1, !dbg !5385
  %rt_int = bitcast %union.rtunion_def* %181 to i32*, !dbg !5385
  %182 = load i32, i32* %rt_int, align 8, !dbg !5385
  %183 = getelementptr inbounds %union.u, %union.u* %u853, i64 1, i32 0, i32 0, i64 1, !dbg !5386
  %rt_int868 = bitcast %union.rtunion_def* %183 to i32*, !dbg !5386
  store i32 %182, i32* %rt_int868, align 8, !dbg !5387
  %call869 = tail call %struct.rtx_def* @delete_insn(%struct.rtx_def* %150) #6, !dbg !5388
  %184 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !5389
  %init_insns872 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %184, i64 %idxprom726, i32 2, !dbg !5389
  %185 = load %struct.rtx_def*, %struct.rtx_def** %init_insns872, align 8, !dbg !5389
  %arrayidx875 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5389
  %rt_rtx876 = bitcast %union.rtunion_def* %arrayidx875 to %struct.rtx_def**, !dbg !5389
  store %struct.rtx_def* %call848, %struct.rtx_def** %rt_rtx876, align 8, !dbg !5390
  %186 = load i32, i32* %index, align 8, !dbg !5391
  %187 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !5392
  %basic_block879 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %187, i64 %idxprom726, i32 6, !dbg !5392
  store i32 %186, i32* %basic_block879, align 4, !dbg !5393
  %188 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !5394
  %calls_crossed = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %188, i64 %idxprom726, i32 3, !dbg !5394
  store i32 0, i32* %calls_crossed, align 4, !dbg !5395
  %189 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !5396
  %freq_calls_crossed = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %189, i64 %idxprom726, i32 4, !dbg !5396
  store i32 0, i32* %freq_calls_crossed, align 4, !dbg !5397
  %190 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !5398
  %throw_calls_crossed = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %190, i64 %idxprom726, i32 5, !dbg !5398
  store i32 0, i32* %throw_calls_crossed, align 4, !dbg !5399
  %191 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !5400
  %live_length888 = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %191, i64 %idxprom726, i32 2, !dbg !5400
  store i32 2, i32* %live_length888, align 4, !dbg !5401
  %192 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl653, align 8, !dbg !5402
  %head_891 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %192, i64 0, i32 0, !dbg !5402
  %193 = load %struct.rtx_def*, %struct.rtx_def** %head_891, align 8, !dbg !5402
  %cmp892 = icmp eq %struct.rtx_def* %insn.2, %193, !dbg !5403
  br i1 %cmp892, label %if.then894, label %if.end902, !dbg !5404

if.then894:                                       ; preds = %if.then843
  %194 = bitcast %struct.rtl_bb_info* %192 to i64*, !dbg !5404
  %195 = load i64, i64* %138, align 8, !dbg !5405
  store i64 %195, i64* %194, align 8, !dbg !5406
  br label %if.end902, !dbg !5407

if.end902:                                        ; preds = %if.then894, %if.then843
  %call903 = tail call %struct.rtx_def* @gen_rtx_fmt_ue_stat(i32 4, i32 0, %struct.rtx_def* %call848, %struct.rtx_def* null) #6, !dbg !5408
  %196 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5409
  %arrayidx905 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %196, i64 %idxprom726, !dbg !5409
  store %struct.rtx_def* %call903, %struct.rtx_def** %arrayidx905, align 8, !dbg !5410
  %call906 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call640, i32 %call725) #6, !dbg !5411
  br label %for.inc914, !dbg !5412

for.inc914:                                       ; preds = %if.else839, %cond.end753, %if.then719, %land.lhs.true708, %lor.lhs.false730, %if.end902, %while.end, %for.body702
  %197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %link.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5413
  br label %for.cond700, !dbg !5414, !llvm.loop !5415

cleanup920.loopexit:                              ; preds = %for.cond700
  br label %cleanup920, !dbg !5417

cleanup920:                                       ; preds = %cleanup920.loopexit, %land.lhs.true691, %lor.lhs.false680
  %198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5417
  %rt_rtx927 = bitcast %union.rtunion_def* %198 to %struct.rtx_def**, !dbg !5417
  %.pre12 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl653, align 8, !dbg !5287
  br label %for.cond655, !dbg !5418, !llvm.loop !5419

for.inc929:                                       ; preds = %for.cond655
  %.pre10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5281
  %cfg646.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre10, i64 0, i32 1, !dbg !5421
  %.pre11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg646.phi.trans.insert, align 8, !dbg !5281
  br label %for.cond644, !dbg !5281, !llvm.loop !5422

for.end931:                                       ; preds = %for.cond644
  %.lcssa = phi %struct.control_flow_graph* [ %126, %for.cond644 ], !dbg !5281
  %bb.1.lcssa = phi %struct.basic_block_def* [ %bb.1, %for.cond644 ], !dbg !5282
  %first = getelementptr inbounds %struct.bitmap_head_def, %struct.bitmap_head_def* %call640, i64 0, i32 0, !dbg !5424
  %199 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %first, align 8, !dbg !5424
  %tobool932 = icmp eq %struct.bitmap_element_def* %199, null, !dbg !5424
  br i1 %tobool932, label %if.end1011, label %if.then933, !dbg !5425

if.then933:                                       ; preds = %for.end931
  br label %for.cond938, !dbg !5426

for.cond938:                                      ; preds = %for.body944, %if.then933
  %200 = phi %struct.control_flow_graph* [ %.lcssa, %if.then933 ], [ %.pre16, %for.body944 ], !dbg !5428
  %.pn6 = phi %struct.basic_block_def* [ %bb.1.lcssa, %if.then933 ], [ %bb.2, %for.body944 ]
  %bb.2.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn6, i64 0, i32 6, !dbg !5430
  %bb.2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.2.in, align 8, !dbg !5430
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.2, metadata !4910, metadata !DIExpression()), !dbg !4991
  %x_exit_block_ptr941 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %200, i64 0, i32 1, !dbg !5428
  %201 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr941, align 8, !dbg !5428
  %cmp942 = icmp eq %struct.basic_block_def* %bb.2, %201, !dbg !5428
  br i1 %cmp942, label %for.end961, label %for.body944, !dbg !5426

for.body944:                                      ; preds = %for.cond938
  %index945 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.2, i64 0, i32 9, !dbg !5431
  %202 = load i32, i32* %index945, align 8, !dbg !5431
  %call946 = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %202) #7, !dbg !5431
  %in = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call946, i64 0, i32 2, !dbg !5431
  %203 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in, align 8, !dbg !5431
  %call947 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %203, %struct.bitmap_head_def* %call640) #6, !dbg !5433
  %204 = load i32, i32* %index945, align 8, !dbg !5434
  %call949 = tail call fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %204) #7, !dbg !5434
  %out = getelementptr inbounds %struct.df_live_bb_info, %struct.df_live_bb_info* %call949, i64 0, i32 3, !dbg !5434
  %205 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5434
  %call950 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %205, %struct.bitmap_head_def* %call640) #6, !dbg !5435
  %206 = load i32, i32* %index945, align 8, !dbg !5436
  %call952 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %206) #7, !dbg !5436
  %in953 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call952, i64 0, i32 2, !dbg !5436
  %207 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %in953, align 8, !dbg !5436
  %call954 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %207, %struct.bitmap_head_def* %call640) #6, !dbg !5437
  %208 = load i32, i32* %index945, align 8, !dbg !5438
  %call956 = tail call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %208) #7, !dbg !5438
  %out957 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call956, i64 0, i32 3, !dbg !5438
  %209 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out957, align 8, !dbg !5438
  %call958 = tail call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %209, %struct.bitmap_head_def* %call640) #6, !dbg !5439
  %.pre15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5428
  %cfg940.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre15, i64 0, i32 1, !dbg !5440
  %.pre16 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg940.phi.trans.insert, align 8, !dbg !5428
  br label %for.cond938, !dbg !5428, !llvm.loop !5441

for.end961:                                       ; preds = %for.cond938
  %210 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5443
  %tobool962 = icmp eq i32 %210, 0, !dbg !5443
  br i1 %tobool962, label %if.end1011, label %if.then963, !dbg !5444

if.then963:                                       ; preds = %for.end961
  %call964 = tail call %struct.rtx_def* @get_insns() #6, !dbg !5445
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call964, metadata !4909, metadata !DIExpression()), !dbg !4991
  %211 = bitcast %struct.bitmap_head_def* %call640 to i8*, !dbg !5446
  br label %for.cond965, !dbg !5447

for.cond965:                                      ; preds = %for.inc1004, %if.then963
  %insn.3 = phi %struct.rtx_def* [ %call964, %if.then963 ], [ %223, %for.inc1004 ], !dbg !5448
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.3, metadata !4909, metadata !DIExpression()), !dbg !4991
  %tobool966 = icmp eq %struct.rtx_def* %insn.3, null, !dbg !5449
  br i1 %tobool966, label %if.end1011.loopexit, label %for.body967, !dbg !5449

for.body967:                                      ; preds = %for.cond965
  %212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.3, i64 0, i32 0, !dbg !5450
  %bf.load968 = load i32, i32* %212, align 8, !dbg !5450
  %bf.clear969 = and i32 %bf.load968, 65535, !dbg !5450
  %cmp970 = icmp eq i32 %bf.clear969, 7, !dbg !5450
  br i1 %cmp970, label %if.then972, label %for.inc1004, !dbg !5451

if.then972:                                       ; preds = %for.body967
  %u973 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.3, i64 0, i32 1, !dbg !5452
  %213 = getelementptr inbounds %union.u, %union.u* %u973, i64 1, i32 0, i32 0, i64 0, !dbg !5452
  %rt_rtx976 = bitcast %union.rtunion_def* %213 to %struct.rtx_def**, !dbg !5452
  %214 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx976, align 8, !dbg !5452
  %215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5452
  %rt_rtx980 = bitcast %union.rtunion_def* %215 to %struct.rtx_def**, !dbg !5452
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx980, align 8, !dbg !5452
  call void @llvm.dbg.value(metadata %struct.rtx_def* %216, metadata !4971, metadata !DIExpression()), !dbg !5446
  %call981 = tail call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %216, %struct.rtx_def* null, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @adjust_cleared_regs, i8* %211) #6, !dbg !5453
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx976, align 8, !dbg !5454
  %218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5454
  %rt_rtx989 = bitcast %union.rtunion_def* %218 to %struct.rtx_def**, !dbg !5454
  store %struct.rtx_def* %call981, %struct.rtx_def** %rt_rtx989, align 8, !dbg !5455
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx976, align 8, !dbg !5456
  %220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5456
  %rt_rtx997 = bitcast %union.rtunion_def* %220 to %struct.rtx_def**, !dbg !5456
  %221 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx997, align 8, !dbg !5456
  %cmp998 = icmp eq %struct.rtx_def* %216, %221, !dbg !5458
  br i1 %cmp998, label %for.inc1004, label %if.then1000, !dbg !5459

if.then1000:                                      ; preds = %if.then972
  %call1001 = tail call zeroext i8 @df_insn_rescan(%struct.rtx_def* nonnull %insn.3) #6, !dbg !5460
  br label %for.inc1004, !dbg !5460

for.inc1004:                                      ; preds = %if.then972, %for.body967, %if.then1000
  %222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.3, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !5461
  %rt_rtx1008 = bitcast %union.rtunion_def* %222 to %struct.rtx_def**, !dbg !5461
  %223 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1008, align 8, !dbg !5461
  call void @llvm.dbg.value(metadata %struct.rtx_def* %223, metadata !4909, metadata !DIExpression()), !dbg !4991
  br label %for.cond965, !dbg !5462, !llvm.loop !5463

if.end1011.loopexit:                              ; preds = %for.cond965
  br label %if.end1011, !dbg !5465

if.end1011:                                       ; preds = %if.end1011.loopexit, %for.end961, %for.end931
  tail call void @bitmap_obstack_free(%struct.bitmap_head_def* %call640) #6, !dbg !5465
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !4912, metadata !DIExpression()), !dbg !4991
  br label %out1012, !dbg !5465

out1012:                                          ; preds = %for.end462, %if.end1011
  call void @llvm.dbg.label(metadata !4979), !dbg !5466
  tail call void @end_alias_analysis() #6, !dbg !5467
  %224 = load i8*, i8** bitcast (%struct.equivalence** @reg_equiv to i8**), align 8, !dbg !5468
  tail call void @free(i8* %224) #6, !dbg !5469
  %.b = load i1, i1* @recorded_label_ref, align 4, !dbg !5470
  %225 = zext i1 %.b to i32, !dbg !5470
  ret i32 %225, !dbg !5471
}

declare dso_local void @bitmap_obstack_initialize(%struct.bitmap_obstack*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @find_reg_equiv_invariant_const() unnamed_addr #5 !dbg !5472 {
entry:
  call void @llvm.dbg.value(metadata i32 53, metadata !5474, metadata !DIExpression()), !dbg !5481
  br label %for.cond, !dbg !5482

for.cond:                                         ; preds = %for.end, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.end ], [ 53, %entry ], !dbg !5484
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5474, metadata !DIExpression()), !dbg !5481
  %0 = load i32, i32* @reg_equiv_init_size, align 4, !dbg !5485
  %1 = sext i32 %0 to i64, !dbg !5487
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !5487
  br i1 %cmp, label %for.body, label %for.end53, !dbg !5488

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5479, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i8 0, metadata !5475, metadata !DIExpression()), !dbg !5481
  %2 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5489
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %indvars.iv, !dbg !5489
  br label %for.cond1, !dbg !5492

for.cond1:                                        ; preds = %for.inc, %for.body
  %constant.0 = phi %struct.rtx_def* [ null, %for.body ], [ %constant.5, %for.inc ], !dbg !5493
  %list.0.in = phi %struct.rtx_def** [ %arrayidx, %for.body ], [ %rt_rtx47, %for.inc ]
  %invariant_p.0 = phi i8 [ 0, %for.body ], [ %invariant_p.5, %for.inc ], !dbg !5494
  %list.0 = load %struct.rtx_def*, %struct.rtx_def** %list.0.in, align 8, !dbg !5495
  call void @llvm.dbg.value(metadata i8 %invariant_p.0, metadata !5475, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list.0, metadata !5476, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.rtx_def* %constant.0, metadata !5479, metadata !DIExpression()), !dbg !5481
  %cmp2 = icmp eq %struct.rtx_def* %list.0, null, !dbg !5496
  br i1 %cmp2, label %for.end, label %for.body3, !dbg !5498

for.body3:                                        ; preds = %for.cond1
  %arrayidx4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5499
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !5499
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5499
  call void @llvm.dbg.value(metadata %struct.rtx_def* %3, metadata !5477, metadata !DIExpression()), !dbg !5481
  %call = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %3, i32 3, %struct.rtx_def* null) #6, !dbg !5501
  call void @llvm.dbg.value(metadata %struct.rtx_def* %call, metadata !5478, metadata !DIExpression()), !dbg !5481
  %cmp5 = icmp eq %struct.rtx_def* %call, null, !dbg !5502
  br i1 %cmp5, label %for.inc, label %if.end, !dbg !5504

if.end:                                           ; preds = %for.body3
  %arrayidx8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5505
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !5505
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !5505
  call void @llvm.dbg.value(metadata %struct.rtx_def* %4, metadata !5480, metadata !DIExpression()), !dbg !5481
  %call10 = tail call i32 @function_invariant_p(%struct.rtx_def* %4) #6, !dbg !5506
  %tobool = icmp ne i32 %call10, 0, !dbg !5506
  %5 = load i32, i32* @flag_pic, align 4, !dbg !5508
  %tobool11 = icmp ne i32 %5, 0, !dbg !5508
  %or.cond = and i1 %tobool, %tobool11, !dbg !5509
  br i1 %or.cond, label %lor.lhs.false12, label %if.then18, !dbg !5509

lor.lhs.false12:                                  ; preds = %if.end
  %6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !5510
  %bf.load = load i32, i32* %6, align 8, !dbg !5510
  %bf.clear = and i32 %bf.load, 65535, !dbg !5510
  %idxprom13 = zext i32 %bf.clear to i64, !dbg !5510
  %arrayidx14 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom13, !dbg !5510
  %7 = load i32, i32* %arrayidx14, align 4, !dbg !5510
  %cmp15 = icmp eq i32 %7, 9, !dbg !5510
  br i1 %cmp15, label %land.lhs.true, label %for.inc, !dbg !5511

land.lhs.true:                                    ; preds = %lor.lhs.false12
  %call16 = tail call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %4) #6, !dbg !5512
  %tobool17 = icmp eq i8 %call16, 0, !dbg !5512
  br i1 %tobool17, label %for.inc, label %if.then18, !dbg !5513

if.then18:                                        ; preds = %land.lhs.true, %if.end
  %call19 = tail call i32 @memory_operand(%struct.rtx_def* %4, i32 0) #6, !dbg !5514
  %tobool20 = icmp eq i32 %call19, 0, !dbg !5514
  br i1 %tobool20, label %if.else, label %if.then21, !dbg !5517

if.then21:                                        ; preds = %if.then18
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !5518
  %bf.load22 = load i32, i32* %8, align 8, !dbg !5518
  %bf.lshr = lshr i32 %bf.load22, 26, !dbg !5518
  %9 = trunc i32 %bf.lshr to i8, !dbg !5518
  %conv24 = and i8 %9, 1, !dbg !5518
  call void @llvm.dbg.value(metadata i8 %conv24, metadata !5475, metadata !DIExpression()), !dbg !5481
  br label %for.inc, !dbg !5519

if.else:                                          ; preds = %if.then18
  %call25 = tail call i32 @function_invariant_p(%struct.rtx_def* %4) #6, !dbg !5520
  %tobool26 = icmp eq i32 %call25, 0, !dbg !5520
  br i1 %tobool26, label %for.inc, label %if.then27, !dbg !5522

if.then27:                                        ; preds = %if.else
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i64 0, i32 0, !dbg !5523
  %bf.load28 = load i32, i32* %10, align 8, !dbg !5523
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !5523
  %cmp30 = icmp eq i32 %bf.clear29, 49, !dbg !5526
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 3), align 8, !dbg !5527
  %cmp33 = icmp eq %struct.rtx_def* %4, %11, !dbg !5528
  %or.cond1 = or i1 %cmp30, %cmp33, !dbg !5529
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !5530
  %cmp36 = icmp eq %struct.rtx_def* %4, %12, !dbg !5531
  %or.cond2 = or i1 %or.cond1, %cmp36, !dbg !5529
  %constant.1 = select i1 %or.cond2, %struct.rtx_def* %constant.0, %struct.rtx_def* %4, !dbg !5529
  %invariant_p.1 = select i1 %or.cond2, i8 1, i8 %invariant_p.0, !dbg !5529
  br label %for.inc, !dbg !5529

for.inc:                                          ; preds = %land.lhs.true, %if.else, %lor.lhs.false12, %if.then27, %if.then21, %for.body3
  %constant.5 = phi %struct.rtx_def* [ %constant.0, %for.body3 ], [ %constant.0, %land.lhs.true ], [ %constant.0, %lor.lhs.false12 ], [ %constant.0, %if.then21 ], [ %constant.0, %if.else ], [ %constant.1, %if.then27 ], !dbg !5493
  %invariant_p.5 = phi i8 [ %invariant_p.0, %for.body3 ], [ %invariant_p.0, %land.lhs.true ], [ %invariant_p.0, %lor.lhs.false12 ], [ %conv24, %if.then21 ], [ %invariant_p.0, %if.else ], [ %invariant_p.1, %if.then27 ], !dbg !5532
  call void @llvm.dbg.value(metadata i8 %invariant_p.5, metadata !5475, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.rtx_def* %constant.5, metadata !5479, metadata !DIExpression()), !dbg !5481
  %13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5533
  %rt_rtx47 = bitcast %union.rtunion_def* %13 to %struct.rtx_def**, !dbg !5533
  br label %for.cond1, !dbg !5534, !llvm.loop !5535

for.end:                                          ; preds = %for.cond1
  %constant.0.lcssa = phi %struct.rtx_def* [ %constant.0, %for.cond1 ], !dbg !5493
  %invariant_p.0.lcssa = phi i8 [ %invariant_p.0, %for.cond1 ], !dbg !5494
  call void @llvm.dbg.value(metadata %struct.rtx_def* %constant.0.lcssa, metadata !5479, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i8 %invariant_p.0.lcssa, metadata !5475, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.rtx_def* %constant.0.lcssa, metadata !5479, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i8 %invariant_p.0.lcssa, metadata !5475, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata %struct.rtx_def* %constant.0.lcssa, metadata !5479, metadata !DIExpression()), !dbg !5481
  call void @llvm.dbg.value(metadata i8 %invariant_p.0.lcssa, metadata !5475, metadata !DIExpression()), !dbg !5481
  %14 = load i8*, i8** @ira_reg_equiv_invariant_p, align 8, !dbg !5537
  %arrayidx49 = getelementptr inbounds i8, i8* %14, i64 %indvars.iv, !dbg !5537
  store i8 %invariant_p.0.lcssa, i8* %arrayidx49, align 1, !dbg !5538
  %15 = load %struct.rtx_def**, %struct.rtx_def*** @ira_reg_equiv_const, align 8, !dbg !5539
  %arrayidx51 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %15, i64 %indvars.iv, !dbg !5539
  store %struct.rtx_def* %constant.0.lcssa, %struct.rtx_def** %arrayidx51, align 8, !dbg !5540
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5541
  call void @llvm.dbg.value(metadata i32 undef, metadata !5474, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5481
  br label %for.cond, !dbg !5542, !llvm.loop !5543

for.end53:                                        ; preds = %for.cond
  ret void, !dbg !5545
}

declare dso_local void @rebuild_jump_labels(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @get_insns() local_unnamed_addr #2

declare dso_local zeroext i8 @purge_all_dead_edges() local_unnamed_addr #2

declare dso_local void @timevar_pop_1(i32) local_unnamed_addr #2

declare dso_local i32 @flow_loops_find(%struct.loops*) local_unnamed_addr #2

declare dso_local void @record_loop_exits() local_unnamed_addr #2

declare dso_local zeroext i8 @ira_build(i8 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @too_high_register_pressure_p() unnamed_addr #5 !dbg !5546 {
entry:
  call void @llvm.dbg.value(metadata i32 0, metadata !5548, metadata !DIExpression()), !dbg !5550
  %0 = load i32, i32* @ira_reg_class_cover_size, align 4, !dbg !5551
  %1 = load %struct.ira_loop_tree_node*, %struct.ira_loop_tree_node** @ira_loop_tree_root, align 8, !dbg !5554
  %2 = sext i32 %0 to i64, !dbg !5557
  br label %for.cond, !dbg !5557

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !5558
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5548, metadata !DIExpression()), !dbg !5550
  %cmp = icmp slt i64 %indvars.iv, %2, !dbg !5559
  br i1 %cmp, label %for.body, label %cleanup, !dbg !5560

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds [27 x i32], [27 x i32]* @ira_reg_class_cover, i64 0, i64 %indvars.iv, !dbg !5561
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5561
  call void @llvm.dbg.value(metadata i32 %3, metadata !5549, metadata !DIExpression()), !dbg !5550
  %idxprom1 = zext i32 %3 to i64, !dbg !5562
  %arrayidx2 = getelementptr inbounds %struct.ira_loop_tree_node, %struct.ira_loop_tree_node* %1, i64 0, i32 11, i64 %idxprom1, !dbg !5562
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !5562
  %cmp3 = icmp sgt i32 %4, 10000, !dbg !5563
  br i1 %cmp3, label %cleanup, label %for.inc, !dbg !5564

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5565
  call void @llvm.dbg.value(metadata i32 undef, metadata !5548, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5550
  br label %for.cond, !dbg !5566, !llvm.loop !5567

cleanup:                                          ; preds = %for.cond, %for.body
  %retval.0 = phi i8 [ 1, %for.body ], [ 0, %for.cond ], !dbg !5550
  ret i8 %retval.0, !dbg !5569
}

declare dso_local void @ira_color() local_unnamed_addr #2

declare dso_local void @ira_emit(i8 zeroext) local_unnamed_addr #2

declare dso_local void @ira_initiate_assign() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @expand_reg_info(i32 %old_size) unnamed_addr #5 !dbg !5570 {
entry:
  call void @llvm.dbg.value(metadata i32 %old_size, metadata !5574, metadata !DIExpression()), !dbg !5577
  %call = tail call i32 @max_reg_num() #6, !dbg !5578
  call void @llvm.dbg.value(metadata i32 %call, metadata !5576, metadata !DIExpression()), !dbg !5577
  %call1 = tail call zeroext i8 @resize_reg_info() #6, !dbg !5579
  call void @llvm.dbg.value(metadata i32 %old_size, metadata !5575, metadata !DIExpression()), !dbg !5577
  br label %for.cond, !dbg !5580

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ %old_size, %entry ], [ %inc, %for.body ], !dbg !5582
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !5575, metadata !DIExpression()), !dbg !5577
  %cmp = icmp slt i32 %i.0, %call, !dbg !5583
  br i1 %cmp, label %for.body, label %for.end, !dbg !5585

for.body:                                         ; preds = %for.cond
  tail call void @setup_reg_classes(i32 %i.0, i32 13, i32 26, i32 13) #6, !dbg !5586
  %inc = add nsw i32 %i.0, 1, !dbg !5587
  call void @llvm.dbg.value(metadata i32 %inc, metadata !5575, metadata !DIExpression()), !dbg !5577
  br label %for.cond, !dbg !5588, !llvm.loop !5589

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5591
}

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_preferred_alternate_classes_for_new_pseudos(i32 %start) unnamed_addr #5 !dbg !5592 {
entry:
  call void @llvm.dbg.value(metadata i32 %start, metadata !5594, metadata !DIExpression()), !dbg !5598
  %call = tail call i32 @max_reg_num() #6, !dbg !5599
  call void @llvm.dbg.value(metadata i32 %call, metadata !5597, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.value(metadata i32 %start, metadata !5595, metadata !DIExpression()), !dbg !5598
  %0 = sext i32 %start to i64, !dbg !5600
  %1 = sext i32 %call to i64, !dbg !5600
  br label %for.cond, !dbg !5600

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %0, %entry ], !dbg !5602
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5595, metadata !DIExpression()), !dbg !5598
  %cmp = icmp slt i64 %indvars.iv, %1, !dbg !5603
  br i1 %cmp, label %for.body, label %for.end, !dbg !5605

for.body:                                         ; preds = %for.cond
  %2 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !5606
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %2, i64 %indvars.iv, !dbg !5606
  %3 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !5606
  %4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5606
  %rt_uint = bitcast %union.rtunion_def* %4 to i32*, !dbg !5606
  %5 = load i32, i32* %rt_uint, align 8, !dbg !5606
  call void @llvm.dbg.value(metadata i32 %5, metadata !5596, metadata !DIExpression()), !dbg !5598
  %call2 = tail call i32 @reg_preferred_class(i32 %5) #6, !dbg !5608
  %call3 = tail call i32 @reg_alternate_class(i32 %5) #6, !dbg !5609
  %call4 = tail call i32 @reg_cover_class(i32 %5) #6, !dbg !5610
  %6 = trunc i64 %indvars.iv to i32, !dbg !5611
  tail call void @setup_reg_classes(i32 %6, i32 %call2, i32 %call3, i32 %call4) #6, !dbg !5611
  %7 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !5612
  %cmp5 = icmp sgt i32 %7, 2, !dbg !5614
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !5615
  %cmp6 = icmp ne %struct._IO_FILE* %8, null, !dbg !5616
  %or.cond = and i1 %cmp5, %cmp6, !dbg !5617
  br i1 %or.cond, label %if.then, label %for.inc, !dbg !5617

if.then:                                          ; preds = %for.body
  %call7 = tail call i32 @reg_preferred_class(i32 %5) #6, !dbg !5618
  %idxprom8 = zext i32 %call7 to i64, !dbg !5619
  %arrayidx9 = getelementptr inbounds [0 x i8*], [0 x i8*]* @reg_class_names, i64 0, i64 %idxprom8, !dbg !5619
  %9 = load i8*, i8** %arrayidx9, align 8, !dbg !5619
  %call10 = tail call i32 @reg_alternate_class(i32 %5) #6, !dbg !5620
  %idxprom11 = zext i32 %call10 to i64, !dbg !5621
  %arrayidx12 = getelementptr inbounds [0 x i8*], [0 x i8*]* @reg_class_names, i64 0, i64 %idxprom11, !dbg !5621
  %10 = load i8*, i8** %arrayidx12, align 8, !dbg !5621
  %11 = trunc i64 %indvars.iv to i32, !dbg !5622
  %call13 = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %8, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.45, i64 0, i64 0), i32 %11, i8* %9, i8* %10) #6, !dbg !5622
  br label %for.inc, !dbg !5622

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !5623
  call void @llvm.dbg.value(metadata i32 undef, metadata !5595, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5598
  br label %for.cond, !dbg !5624, !llvm.loop !5625

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5627
}

declare dso_local void @ira_flattening(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_allocno_assignment_flags() unnamed_addr #5 !dbg !5628 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5637
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5637
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5638
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5638
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5632, metadata !DIExpression(DW_OP_deref)), !dbg !5639
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !5640
  br label %for.cond, !dbg !5640

for.cond:                                         ; preds = %lor.end, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5631, metadata !DIExpression(DW_OP_deref)), !dbg !5639
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5632, metadata !DIExpression(DW_OP_deref)), !dbg !5639
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !5642
  %tobool = icmp eq i8 %call, 0, !dbg !5640
  br i1 %tobool, label %for.end, label %for.body, !dbg !5640

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5644
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5631, metadata !DIExpression()), !dbg !5639
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 31, !dbg !5644
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !5644
  %bf.clear = and i16 %bf.load, 256, !dbg !5644
  %tobool1 = icmp eq i16 %bf.clear, 0, !dbg !5644
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5647

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5631, metadata !DIExpression()), !dbg !5639
  call void @ira_free_allocno_updated_costs(%struct.ira_allocno* %2) #6, !dbg !5648
  %.pre = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5649
  br label %if.end, !dbg !5648

if.end:                                           ; preds = %for.body, %if.then
  %3 = phi %struct.ira_allocno* [ %2, %for.body ], [ %.pre, %if.then ], !dbg !5649
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !5631, metadata !DIExpression()), !dbg !5639
  %hard_regno2 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 3, !dbg !5649
  %4 = load i32, i32* %hard_regno2, align 4, !dbg !5649
  call void @llvm.dbg.value(metadata i32 %4, metadata !5630, metadata !DIExpression()), !dbg !5639
  %cmp = icmp sgt i32 %4, -1, !dbg !5650
  br i1 %cmp, label %if.end.lor.end_crit_edge, label %lor.lhs.false, !dbg !5651

if.end.lor.end_crit_edge:                         ; preds = %if.end
  %assigned_p8.phi.trans.insert = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 31, !dbg !5652
  %bf.load9.pre = load i16, i16* %assigned_p8.phi.trans.insert, align 4, !dbg !5653
  br label %lor.end, !dbg !5651

lor.lhs.false:                                    ; preds = %if.end
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !5631, metadata !DIExpression()), !dbg !5639
  %mem_optimized_dest_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 31, !dbg !5654
  %bf.load3 = load i16, i16* %mem_optimized_dest_p, align 4, !dbg !5654
  %bf.clear4 = and i16 %bf.load3, 1, !dbg !5654
  %tobool6 = icmp eq i16 %bf.clear4, 0, !dbg !5654
  br i1 %tobool6, label %lor.rhs, label %lor.end, !dbg !5655

lor.rhs:                                          ; preds = %lor.lhs.false
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !5631, metadata !DIExpression()), !dbg !5639
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 12, !dbg !5656
  %5 = load i32, i32* %memory_cost, align 4, !dbg !5656
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !5631, metadata !DIExpression()), !dbg !5639
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 10, !dbg !5657
  %6 = load i32, i32* %cover_class_cost, align 4, !dbg !5657
  %cmp7 = icmp slt i32 %5, %6, !dbg !5658
  br label %lor.end, !dbg !5655

lor.end:                                          ; preds = %if.end.lor.end_crit_edge, %lor.lhs.false, %lor.rhs
  %bf.load9 = phi i16 [ %bf.load3, %lor.lhs.false ], [ %bf.load9.pre, %if.end.lor.end_crit_edge ], [ %bf.load3, %lor.rhs ], !dbg !5653
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %if.end.lor.end_crit_edge ], [ %cmp7, %lor.rhs ]
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !5631, metadata !DIExpression()), !dbg !5639
  %assigned_p8 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 31, !dbg !5659
  %8 = zext i1 %7 to i16, !dbg !5653
  %bf.shl = shl nuw nsw i16 %8, 8, !dbg !5653
  %bf.clear10 = and i16 %bf.load9, -257, !dbg !5653
  %bf.set = or i16 %bf.clear10, %bf.shl, !dbg !5653
  store i16 %bf.set, i16* %assigned_p8, align 4, !dbg !5653
  br label %for.cond, !dbg !5642, !llvm.loop !5660

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5662
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5662
  ret void, !dbg !5662
}

declare dso_local void @ira_reassign_conflict_allocnos(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @setup_reg_renumber() unnamed_addr #5 !dbg !5663 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5669
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5669
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5670
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5670
  store i32 0, i32* @caller_save_needed, align 4, !dbg !5671
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5668, metadata !DIExpression(DW_OP_deref)), !dbg !5672
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !5673
  br label %for.cond, !dbg !5673

for.cond:                                         ; preds = %if.end15, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5667, metadata !DIExpression(DW_OP_deref)), !dbg !5672
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5668, metadata !DIExpression(DW_OP_deref)), !dbg !5672
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !5675
  %tobool = icmp eq i8 %call, 0, !dbg !5673
  br i1 %tobool, label %for.end, label %for.body, !dbg !5673

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5677
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5667, metadata !DIExpression()), !dbg !5672
  %assigned_p = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 31, !dbg !5677
  %bf.load = load i16, i16* %assigned_p, align 4, !dbg !5677
  %bf.clear = and i16 %bf.load, 256, !dbg !5677
  %tobool1 = icmp eq i16 %bf.clear, 0, !dbg !5677
  br i1 %tobool1, label %if.then, label %if.end, !dbg !5680

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5667, metadata !DIExpression()), !dbg !5672
  %bf.set = or i16 %bf.load, 256, !dbg !5681
  store i16 %bf.set, i16* %assigned_p, align 4, !dbg !5681
  br label %if.end, !dbg !5682

if.end:                                           ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5667, metadata !DIExpression()), !dbg !5672
  call void @ira_free_allocno_updated_costs(%struct.ira_allocno* %2) #6, !dbg !5683
  %3 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5684
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !5667, metadata !DIExpression()), !dbg !5672
  %hard_regno5 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 3, !dbg !5684
  %4 = load i32, i32* %hard_regno5, align 4, !dbg !5684
  call void @llvm.dbg.value(metadata i32 %4, metadata !5666, metadata !DIExpression()), !dbg !5672
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %3, metadata !5667, metadata !DIExpression()), !dbg !5672
  %reg = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %3, i64 0, i32 4, !dbg !5685
  %5 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !5685
  %call6 = call fastcc i32 @rhs_regno(%struct.rtx_def* %5) #7, !dbg !5685
  call void @llvm.dbg.value(metadata i32 %call6, metadata !5665, metadata !DIExpression()), !dbg !5672
  %cmp = icmp sgt i32 %4, -1, !dbg !5686
  %. = select i1 %cmp, i32 %4, i32 -1, !dbg !5687
  %conv = trunc i32 %. to i16, !dbg !5688
  %6 = load i16*, i16** @reg_renumber, align 8, !dbg !5689
  %idxprom = sext i32 %call6 to i64, !dbg !5689
  %arrayidx = getelementptr inbounds i16, i16* %6, i64 %idxprom, !dbg !5689
  store i16 %conv, i16* %arrayidx, align 2, !dbg !5690
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !5691

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5693
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !5667, metadata !DIExpression()), !dbg !5672
  %calls_crossed_num = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 30, !dbg !5693
  %8 = load i32, i32* %calls_crossed_num, align 8, !dbg !5693
  %cmp9 = icmp eq i32 %8, 0, !dbg !5694
  br i1 %cmp9, label %if.end15, label %land.lhs.true11, !dbg !5695

land.lhs.true11:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %7, metadata !5667, metadata !DIExpression()), !dbg !5672
  %mode = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %7, i64 0, i32 2, !dbg !5696
  %9 = load i32, i32* %mode, align 8, !dbg !5696
  %10 = load i64, i64* @call_used_reg_set, align 8, !dbg !5697
  %call12 = call fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %4, i32 %9, i64 %10) #7, !dbg !5698
  %tobool13 = icmp eq i8 %call12, 0, !dbg !5698
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !5699

if.then14:                                        ; preds = %land.lhs.true11
  store i32 1, i32* @caller_save_needed, align 4, !dbg !5700
  br label %if.end15, !dbg !5702

if.end15:                                         ; preds = %land.lhs.true11, %land.lhs.true, %if.then14, %if.end
  br label %for.cond, !dbg !5675, !llvm.loop !5703

for.end:                                          ; preds = %for.cond
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5705
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5705
  ret void, !dbg !5705
}

; Function Attrs: nounwind uwtable
define internal fastcc void @calculate_allocation_cost() unnamed_addr #5 !dbg !5706 {
entry:
  %a = alloca %struct.ira_allocno*, align 8
  %ai = alloca %struct.ira_allocno_iterator, align 4
  %0 = bitcast %struct.ira_allocno** %a to i8*, !dbg !5712
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5712
  %1 = bitcast %struct.ira_allocno_iterator* %ai to i8*, !dbg !5713
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5713
  store i32 0, i32* @ira_mem_cost, align 4, !dbg !5714
  store i32 0, i32* @ira_reg_cost, align 4, !dbg !5715
  store i32 0, i32* @ira_overall_cost, align 4, !dbg !5716
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5711, metadata !DIExpression(DW_OP_deref)), !dbg !5717
  call fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* nonnull %ai) #7, !dbg !5718
  br label %for.cond, !dbg !5718

for.cond:                                         ; preds = %if.end12, %entry
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !5710, metadata !DIExpression(DW_OP_deref)), !dbg !5717
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %ai, metadata !5711, metadata !DIExpression(DW_OP_deref)), !dbg !5717
  %call = call fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* nonnull %ai, %struct.ira_allocno** nonnull %a) #7, !dbg !5720
  %tobool = icmp eq i8 %call, 0, !dbg !5718
  br i1 %tobool, label %for.end, label %for.body, !dbg !5718

for.body:                                         ; preds = %for.cond
  %2 = load %struct.ira_allocno*, %struct.ira_allocno** %a, align 8, !dbg !5722
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5710, metadata !DIExpression()), !dbg !5717
  %hard_regno1 = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 3, !dbg !5722
  %3 = load i32, i32* %hard_regno1, align 4, !dbg !5722
  call void @llvm.dbg.value(metadata i32 %3, metadata !5708, metadata !DIExpression()), !dbg !5717
  %cmp = icmp slt i32 %3, 0, !dbg !5724
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5710, metadata !DIExpression()), !dbg !5717
  br i1 %cmp, label %if.then, label %if.else, !dbg !5726

if.then:                                          ; preds = %for.body
  %memory_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 12, !dbg !5727
  %4 = load i32, i32* %memory_cost, align 4, !dbg !5727
  call void @llvm.dbg.value(metadata i32 %4, metadata !5709, metadata !DIExpression()), !dbg !5717
  %5 = load i32, i32* @ira_mem_cost, align 4, !dbg !5729
  %add = add nsw i32 %5, %4, !dbg !5729
  store i32 %add, i32* @ira_mem_cost, align 4, !dbg !5729
  br label %if.end12, !dbg !5730

if.else:                                          ; preds = %for.body
  %hard_reg_costs = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 33, !dbg !5731
  %6 = load i32*, i32** %hard_reg_costs, align 8, !dbg !5731
  %cmp2 = icmp eq i32* %6, null, !dbg !5733
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5710, metadata !DIExpression()), !dbg !5717
  br i1 %cmp2, label %if.else10, label %if.then3, !dbg !5734

if.then3:                                         ; preds = %if.else
  call void @llvm.dbg.value(metadata %struct.ira_allocno* %2, metadata !5710, metadata !DIExpression()), !dbg !5717
  %cover_class = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 9, !dbg !5735
  %7 = load i32, i32* %cover_class, align 8, !dbg !5735
  %idxprom = zext i32 %7 to i64, !dbg !5737
  %idxprom5 = sext i32 %3 to i64, !dbg !5737
  %arrayidx6 = getelementptr inbounds [27 x [53 x i16]], [27 x [53 x i16]]* @ira_class_hard_reg_index, i64 0, i64 %idxprom, i64 %idxprom5, !dbg !5737
  %8 = load i16, i16* %arrayidx6, align 2, !dbg !5737
  %idxprom7 = sext i16 %8 to i64, !dbg !5738
  %arrayidx8 = getelementptr inbounds i32, i32* %6, i64 %idxprom7, !dbg !5738
  %9 = load i32, i32* %arrayidx8, align 4, !dbg !5738
  call void @llvm.dbg.value(metadata i32 %9, metadata !5709, metadata !DIExpression()), !dbg !5717
  %10 = load i32, i32* @ira_reg_cost, align 4, !dbg !5739
  %add9 = add nsw i32 %10, %9, !dbg !5739
  store i32 %add9, i32* @ira_reg_cost, align 4, !dbg !5739
  br label %if.end12, !dbg !5740

if.else10:                                        ; preds = %if.else
  %cover_class_cost = getelementptr inbounds %struct.ira_allocno, %struct.ira_allocno* %2, i64 0, i32 10, !dbg !5741
  %11 = load i32, i32* %cover_class_cost, align 4, !dbg !5741
  call void @llvm.dbg.value(metadata i32 %11, metadata !5709, metadata !DIExpression()), !dbg !5717
  %12 = load i32, i32* @ira_reg_cost, align 4, !dbg !5743
  %add11 = add nsw i32 %12, %11, !dbg !5743
  store i32 %add11, i32* @ira_reg_cost, align 4, !dbg !5743
  br label %if.end12

if.end12:                                         ; preds = %if.then3, %if.else10, %if.then
  %cost.1 = phi i32 [ %4, %if.then ], [ %9, %if.then3 ], [ %11, %if.else10 ], !dbg !5744
  call void @llvm.dbg.value(metadata i32 %cost.1, metadata !5709, metadata !DIExpression()), !dbg !5717
  %13 = load i32, i32* @ira_overall_cost, align 4, !dbg !5745
  %add13 = add nsw i32 %13, %cost.1, !dbg !5745
  store i32 %add13, i32* @ira_overall_cost, align 4, !dbg !5745
  br label %for.cond, !dbg !5720, !llvm.loop !5746

for.end:                                          ; preds = %for.cond
  %14 = load i32, i32* @internal_flag_ira_verbose, align 4, !dbg !5748
  %cmp14 = icmp sgt i32 %14, 0, !dbg !5750
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !5751
  %cmp15 = icmp ne %struct._IO_FILE* %15, null, !dbg !5752
  %or.cond = and i1 %cmp14, %cmp15, !dbg !5753
  br i1 %or.cond, label %if.then16, label %if.end19, !dbg !5753

if.then16:                                        ; preds = %for.end
  %16 = load i32, i32* @ira_overall_cost, align 4, !dbg !5754
  %17 = load i32, i32* @ira_reg_cost, align 4, !dbg !5756
  %18 = load i32, i32* @ira_mem_cost, align 4, !dbg !5757
  %19 = load i32, i32* @ira_load_cost, align 4, !dbg !5758
  %20 = load i32, i32* @ira_store_cost, align 4, !dbg !5759
  %21 = load i32, i32* @ira_shuffle_cost, align 4, !dbg !5760
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* nonnull %15, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.46, i64 0, i64 0), i32 %16, i32 %17, i32 %18, i32 %19, i32 %20, i32 %21) #6, !dbg !5761
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @ira_dump_file, align 8, !dbg !5762
  %23 = load i32, i32* @ira_move_loops_num, align 4, !dbg !5763
  %24 = load i32, i32* @ira_additional_jumps_num, align 4, !dbg !5764
  %call18 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.47, i64 0, i64 0), i32 %23, i32 %24) #6, !dbg !5765
  br label %if.end19, !dbg !5766

if.end19:                                         ; preds = %if.then16, %for.end
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1) #8, !dbg !5767
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %0) #8, !dbg !5767
  ret void, !dbg !5767
}

declare dso_local i32 @delete_trivially_dead_insns(%struct.rtx_def*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @VEC_rtx_gc_safe_grow(%struct.VEC_rtx_gc** %vec_, i32 %size_) unnamed_addr #0 !dbg !5768 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec, metadata !5773, metadata !DIExpression()), !dbg !5775
  call void @llvm.dbg.value(metadata i32 %size_, metadata !5774, metadata !DIExpression()), !dbg !5775
  %cmp = icmp sgt i32 %size_, -1, !dbg !5776
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5776

land.rhs:                                         ; preds = %entry
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec, align 8, !dbg !5776
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !5776
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !5776

cond.true:                                        ; preds = %land.rhs
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !5776
  br label %cond.end, !dbg !5776

cond.end:                                         ; preds = %land.rhs, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %land.rhs ], !dbg !5776
  %call = tail call fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %cond) #7, !dbg !5776
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %1 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec, align 8, !dbg !5776
  %tobool2 = icmp eq %struct.VEC_rtx_gc* %1, null, !dbg !5776
  br i1 %tobool2, label %cond.end11, label %cond.true3, !dbg !5776

cond.true3:                                       ; preds = %land.end
  %num = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %1, i64 0, i32 0, i32 0, !dbg !5776
  %2 = load i32, i32* %num, align 8, !dbg !5776
  br label %cond.end11, !dbg !5776

cond.end11:                                       ; preds = %land.end, %cond.true3
  %cond12 = phi i32 [ %2, %cond.true3 ], [ 0, %land.end ], !dbg !5776
  %sub = sub nsw i32 %size_, %cond12, !dbg !5776
  %call13 = tail call fastcc i32 @VEC_rtx_gc_reserve_exact(%struct.VEC_rtx_gc** nonnull @reg_equiv_memory_loc_vec, i32 %sub) #7, !dbg !5776
  %3 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec, align 8, !dbg !5776
  %num20 = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %3, i64 0, i32 0, i32 0, !dbg !5776
  store i32 %size_, i32* %num20, align 8, !dbg !5776
  ret void, !dbg !5776
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.rtx_def** @VEC_rtx_base_address(%struct.VEC_rtx_base* %vec_) unnamed_addr #0 !dbg !5777 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !5782, metadata !DIExpression()), !dbg !5783
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !5784
  %arraydecay = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 2, i64 0, !dbg !5784
  %cond = select i1 %tobool, %struct.rtx_def** null, %struct.rtx_def** %arraydecay, !dbg !5784
  ret %struct.rtx_def** %cond, !dbg !5784
}

declare dso_local void @regstat_free_n_sets_and_refs() local_unnamed_addr #2

declare dso_local void @regstat_free_ri() local_unnamed_addr #2

declare dso_local void @allocate_initial_values(%struct.rtx_def**) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @fix_reg_equiv_init() unnamed_addr #5 !dbg !5785 {
entry:
  %call = tail call i32 @max_reg_num() #6, !dbg !5795
  call void @llvm.dbg.value(metadata i32 %call, metadata !5787, metadata !DIExpression()), !dbg !5796
  %0 = load i32, i32* @reg_equiv_init_size, align 4, !dbg !5797
  %cmp = icmp slt i32 %0, %call, !dbg !5799
  br i1 %cmp, label %if.then, label %if.end147, !dbg !5800

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** bitcast (%struct.rtx_def*** @reg_equiv_init to i8**), align 8, !dbg !5801
  %conv = sext i32 %call to i64, !dbg !5801
  %mul = shl nsw i64 %conv, 3, !dbg !5801
  %call1 = tail call i8* @ggc_realloc_stat(i8* %1, i64 %mul) #6, !dbg !5801
  store i8* %call1, i8** bitcast (%struct.rtx_def*** @reg_equiv_init to i8**), align 8, !dbg !5803
  br label %while.cond, !dbg !5804

while.cond:                                       ; preds = %while.body, %if.then
  %2 = load i32, i32* @reg_equiv_init_size, align 4, !dbg !5805
  %cmp2 = icmp slt i32 %2, %call, !dbg !5806
  br i1 %cmp2, label %while.body, label %for.cond.preheader, !dbg !5804

for.cond.preheader:                               ; preds = %while.cond
  %.lcssa = phi i32 [ %2, %while.cond ], !dbg !5805
  br label %for.cond, !dbg !5807

while.body:                                       ; preds = %while.cond
  %3 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5809
  %inc = add nsw i32 %2, 1, !dbg !5810
  store i32 %inc, i32* @reg_equiv_init_size, align 4, !dbg !5810
  %idxprom = sext i32 %2 to i64, !dbg !5809
  %arrayidx = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %3, i64 %idxprom, !dbg !5809
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx, align 8, !dbg !5811
  br label %while.cond, !dbg !5804, !llvm.loop !5812

for.cond:                                         ; preds = %for.cond.preheader, %for.inc144
  %indvars.iv = phi i64 [ 53, %for.cond.preheader ], [ %indvars.iv.next, %for.inc144 ], !dbg !5814
  %4 = phi i32 [ %.lcssa, %for.cond.preheader ], [ %.pre, %for.inc144 ], !dbg !5814
  %new_regno.0 = phi i32 [ undef, %for.cond.preheader ], [ %new_regno.1.lcssa, %for.inc144 ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5788, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i32 %new_regno.0, metadata !5789, metadata !DIExpression()), !dbg !5796
  %5 = sext i32 %4 to i64, !dbg !5816
  %cmp4 = icmp slt i64 %indvars.iv, %5, !dbg !5816
  br i1 %cmp4, label %for.body, label %if.end147.loopexit, !dbg !5807

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata %struct.rtx_def* null, metadata !5791, metadata !DIExpression()), !dbg !5796
  %6 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5817
  %arrayidx7 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %6, i64 %indvars.iv, !dbg !5817
  %7 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx7, align 8, !dbg !5817
  call void @llvm.dbg.value(metadata %struct.rtx_def* %7, metadata !5790, metadata !DIExpression()), !dbg !5796
  br label %for.cond8, !dbg !5819

for.cond8:                                        ; preds = %for.inc, %for.body
  %x.0 = phi %struct.rtx_def* [ %7, %for.body ], [ %9, %for.inc ], !dbg !5820
  %new_regno.1 = phi i32 [ %new_regno.0, %for.body ], [ %new_regno.3, %for.inc ]
  %prev.0 = phi %struct.rtx_def* [ null, %for.body ], [ %prev.1, %for.inc ], !dbg !5820
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.0, metadata !5791, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i32 %new_regno.1, metadata !5789, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.0, metadata !5790, metadata !DIExpression()), !dbg !5796
  %cmp9 = icmp eq %struct.rtx_def* %x.0, null, !dbg !5821
  br i1 %cmp9, label %for.inc144, label %for.body11, !dbg !5823

for.body11:                                       ; preds = %for.cond8
  %8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5824
  %rt_rtx = bitcast %union.rtunion_def* %8 to %struct.rtx_def**, !dbg !5824
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5824
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !5792, metadata !DIExpression()), !dbg !5796
  %arrayidx15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5826
  %rt_rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !5826
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !5826
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !5793, metadata !DIExpression()), !dbg !5796
  br label %cond.true, !dbg !5827

lor.lhs.false:                                    ; No predecessors!
  unreachable, !dbg !5827

lor.lhs.false23:                                  ; No predecessors!
  unreachable, !dbg !5827

lor.lhs.false28:                                  ; No predecessors!
  unreachable, !dbg !5827

cond.true:                                        ; preds = %for.body11
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i64 0, i32 1, !dbg !5827
  %11 = getelementptr inbounds %union.u, %union.u* %u33, i64 1, i32 0, i32 0, i64 0, !dbg !5827
  %12 = bitcast %union.rtunion_def* %11 to i32**, !dbg !5827
  %13 = load i32*, i32** %12, align 8, !dbg !5827
  %bf.load37 = load i32, i32* %13, align 8, !dbg !5827
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !5827
  %cmp39 = icmp eq i32 %bf.clear38, 23, !dbg !5827
  %14 = bitcast i32* %13 to %struct.rtx_def*, !dbg !5827
  br i1 %cmp39, label %cond.end52, label %cond.false, !dbg !5827

cond.false:                                       ; preds = %cond.true
  %call50 = tail call %struct.rtx_def* @single_set_2(%struct.rtx_def* %10, %struct.rtx_def* %14) #6, !dbg !5827
  br label %cond.end52, !dbg !5827

cond.end52:                                       ; preds = %cond.false, %cond.true
  %cond53 = phi %struct.rtx_def* [ %call50, %cond.false ], [ %14, %cond.true ], !dbg !5827
  call void @llvm.dbg.value(metadata %struct.rtx_def* %cond53, metadata !5794, metadata !DIExpression()), !dbg !5796
  %arrayidx56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond53, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !5828
  %15 = bitcast %union.rtunion_def* %arrayidx56 to i32**, !dbg !5828
  %16 = load i32*, i32** %15, align 8, !dbg !5828
  %bf.load58 = load i32, i32* %16, align 8, !dbg !5828
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !5828
  %cmp60 = icmp eq i32 %bf.clear59, 37, !dbg !5828
  br i1 %cmp60, label %land.lhs.true, label %if.else, !dbg !5830

land.lhs.true:                                    ; preds = %cond.end52
  %17 = bitcast i32* %16 to %struct.rtx_def*, !dbg !5830
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !5831
  %call66 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %17) #7, !dbg !5831
  %18 = zext i32 %call66 to i64, !dbg !5832
  %cmp67 = icmp eq i64 %indvars.iv, %18, !dbg !5832
  br i1 %cmp67, label %land.lhs.true.if.then79_crit_edge, label %lor.lhs.false69, !dbg !5833

land.lhs.true.if.then79_crit_edge:                ; preds = %land.lhs.true
  %.pre2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !5834
  br label %if.then79, !dbg !5833

lor.lhs.false69:                                  ; preds = %land.lhs.true
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !5835
  %20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5835
  %rt_uint = bitcast %union.rtunion_def* %20 to i32*, !dbg !5835
  %21 = load i32, i32* %rt_uint, align 8, !dbg !5835
  %22 = zext i32 %21 to i64, !dbg !5836
  %cmp77 = icmp eq i64 %indvars.iv, %22, !dbg !5836
  br i1 %cmp77, label %if.then79, label %if.else, !dbg !5837

if.then79:                                        ; preds = %land.lhs.true.if.then79_crit_edge, %lor.lhs.false69
  %23 = phi %struct.rtx_def* [ %.pre2, %land.lhs.true.if.then79_crit_edge ], [ %19, %lor.lhs.false69 ], !dbg !5834
  %call84 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %23) #7, !dbg !5834
  call void @llvm.dbg.value(metadata i32 %call84, metadata !5789, metadata !DIExpression()), !dbg !5796
  br label %if.end119, !dbg !5838

if.else:                                          ; preds = %lor.lhs.false69, %cond.end52
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond53, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5839
  %25 = bitcast %union.rtunion_def* %24 to i32**, !dbg !5839
  %26 = load i32*, i32** %25, align 8, !dbg !5839
  %bf.load89 = load i32, i32* %26, align 8, !dbg !5839
  %bf.clear90 = and i32 %bf.load89, 65535, !dbg !5839
  %cmp91 = icmp eq i32 %bf.clear90, 37, !dbg !5839
  br i1 %cmp91, label %land.lhs.true93, label %if.else118, !dbg !5841

land.lhs.true93:                                  ; preds = %if.else
  %27 = bitcast i32* %26 to %struct.rtx_def*, !dbg !5841
  %rt_rtx97 = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !5842
  %call98 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %27) #7, !dbg !5842
  %28 = zext i32 %call98 to i64, !dbg !5843
  %cmp99 = icmp eq i64 %indvars.iv, %28, !dbg !5843
  br i1 %cmp99, label %land.lhs.true93.if.then112_crit_edge, label %lor.lhs.false101, !dbg !5844

land.lhs.true93.if.then112_crit_edge:             ; preds = %land.lhs.true93
  %.pre1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !5845
  br label %if.then112, !dbg !5844

lor.lhs.false101:                                 ; preds = %land.lhs.true93
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !5846
  %30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5846
  %rt_uint109 = bitcast %union.rtunion_def* %30 to i32*, !dbg !5846
  %31 = load i32, i32* %rt_uint109, align 8, !dbg !5846
  %32 = zext i32 %31 to i64, !dbg !5847
  %cmp110 = icmp eq i64 %indvars.iv, %32, !dbg !5847
  br i1 %cmp110, label %if.then112, label %if.else118, !dbg !5848

if.then112:                                       ; preds = %land.lhs.true93.if.then112_crit_edge, %lor.lhs.false101
  %33 = phi %struct.rtx_def* [ %.pre1, %land.lhs.true93.if.then112_crit_edge ], [ %29, %lor.lhs.false101 ], !dbg !5845
  %call117 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %33) #7, !dbg !5845
  call void @llvm.dbg.value(metadata i32 %call117, metadata !5789, metadata !DIExpression()), !dbg !5796
  br label %if.end119, !dbg !5849

if.else118:                                       ; preds = %lor.lhs.false101, %if.else
  tail call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i32 1774, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !5850
  br label %if.end119

if.end119:                                        ; preds = %if.then112, %if.else118, %if.then79
  %new_regno.3 = phi i32 [ %call84, %if.then79 ], [ %call117, %if.then112 ], [ %new_regno.1, %if.else118 ], !dbg !5851
  call void @llvm.dbg.value(metadata i32 %new_regno.3, metadata !5789, metadata !DIExpression()), !dbg !5796
  %34 = zext i32 %new_regno.3 to i64, !dbg !5852
  %cmp120 = icmp eq i64 %indvars.iv, %34, !dbg !5852
  br i1 %cmp120, label %for.inc, label %if.else123, !dbg !5854

if.else123:                                       ; preds = %if.end119
  %cmp124 = icmp eq %struct.rtx_def* %prev.0, null, !dbg !5855
  br i1 %cmp124, label %if.then126, label %if.else129, !dbg !5858

if.then126:                                       ; preds = %if.else123
  %35 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5859
  %arrayidx128 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %35, i64 %indvars.iv, !dbg !5859
  store %struct.rtx_def* %9, %struct.rtx_def** %arrayidx128, align 8, !dbg !5860
  br label %if.end134, !dbg !5859

if.else129:                                       ; preds = %if.else123
  %36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %prev.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !5861
  %rt_rtx133 = bitcast %union.rtunion_def* %36 to %struct.rtx_def**, !dbg !5861
  store %struct.rtx_def* %9, %struct.rtx_def** %rt_rtx133, align 8, !dbg !5862
  br label %if.end134

if.end134:                                        ; preds = %if.else129, %if.then126
  %37 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !5863
  %idxprom135 = sext i32 %new_regno.3 to i64, !dbg !5863
  %arrayidx136 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %37, i64 %idxprom135, !dbg !5863
  %38 = bitcast %struct.rtx_def** %arrayidx136 to i64*, !dbg !5863
  %39 = load i64, i64* %38, align 8, !dbg !5863
  %40 = bitcast %union.rtunion_def* %8 to i64*, !dbg !5864
  store i64 %39, i64* %40, align 8, !dbg !5864
  store %struct.rtx_def* %x.0, %struct.rtx_def** %arrayidx136, align 8, !dbg !5865
  br label %for.inc

for.inc:                                          ; preds = %if.end134, %if.end119
  %prev.1 = phi %struct.rtx_def* [ %prev.0, %if.end134 ], [ %x.0, %if.end119 ], !dbg !5820
  call void @llvm.dbg.value(metadata %struct.rtx_def* %prev.1, metadata !5791, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata %struct.rtx_def* %9, metadata !5790, metadata !DIExpression()), !dbg !5796
  br label %for.cond8, !dbg !5866, !llvm.loop !5867

for.inc144:                                       ; preds = %for.cond8
  %new_regno.1.lcssa = phi i32 [ %new_regno.1, %for.cond8 ]
  call void @llvm.dbg.value(metadata i32 %new_regno.1.lcssa, metadata !5789, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i32 %new_regno.1.lcssa, metadata !5789, metadata !DIExpression()), !dbg !5796
  call void @llvm.dbg.value(metadata i32 %new_regno.1.lcssa, metadata !5789, metadata !DIExpression()), !dbg !5796
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5869
  call void @llvm.dbg.value(metadata i32 undef, metadata !5788, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5796
  %.pre = load i32, i32* @reg_equiv_init_size, align 4, !dbg !5814
  br label %for.cond, !dbg !5870, !llvm.loop !5871

if.end147.loopexit:                               ; preds = %for.cond
  br label %if.end147, !dbg !5873

if.end147:                                        ; preds = %if.end147.loopexit, %entry
  ret void, !dbg !5873
}

declare dso_local i32 @df_set_flags(i32) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @build_insn_chain() unnamed_addr #5 !dbg !5874 {
entry:
  %i = alloca i32, align 4
  %bi = alloca %struct.bitmap_iterator, align 8
  %0 = bitcast i32* %i to i8*, !dbg !5952
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %0) #8, !dbg !5952
  call void @llvm.dbg.value(metadata %struct.insn_chain** @reload_insn_chain, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* null, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* null, metadata !5901, metadata !DIExpression()), !dbg !5953
  %call = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5954
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call, metadata !5902, metadata !DIExpression()), !dbg !5953
  %call1 = tail call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null) #6, !dbg !5955
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %call1, metadata !5903, metadata !DIExpression()), !dbg !5953
  %1 = load i32, i32* @max_regno, align 4, !dbg !5956
  %conv = sext i32 %1 to i64, !dbg !5956
  %call2 = tail call i8* @xcalloc(i64 %conv, i64 8) #6, !dbg !5956
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def** %5, metadata !5904, metadata !DIExpression()), !dbg !5953
  %2 = load i32, i32* @max_regno, align 4, !dbg !5957
  %conv3 = sext i32 %2 to i64, !dbg !5957
  %mul = shl nsw i64 %conv3, 2, !dbg !5957
  %call4 = tail call i8* @xmalloc(i64 %mul) #6, !dbg !5957
  call void @llvm.dbg.value(metadata i32* %6, metadata !5905, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i32 0, metadata !5876, metadata !DIExpression()), !dbg !5953
  br label %for.cond, !dbg !5958

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 0, %entry ], !dbg !5960
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5876, metadata !DIExpression()), !dbg !5953
  %exitcond = icmp eq i64 %indvars.iv, 53, !dbg !5961
  br i1 %exitcond, label %for.end, label %for.body, !dbg !5963

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* @eliminable_regset, align 8, !dbg !5964
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5876, metadata !DIExpression()), !dbg !5953
  %shl = shl i64 1, %indvars.iv, !dbg !5964
  %and = and i64 %3, %shl, !dbg !5964
  %tobool = icmp eq i64 %and, 0, !dbg !5964
  br i1 %tobool, label %for.inc, label %if.then, !dbg !5966

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5876, metadata !DIExpression()), !dbg !5953
  %4 = trunc i64 %indvars.iv to i32, !dbg !5967
  %call6 = tail call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call1, i32 %4) #6, !dbg !5967
  br label %for.inc, !dbg !5967

for.inc:                                          ; preds = %for.body, %if.then
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !5876, metadata !DIExpression()), !dbg !5953
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !5968
  call void @llvm.dbg.value(metadata i32 undef, metadata !5876, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !5953
  br label %for.cond, !dbg !5969, !llvm.loop !5970

for.end:                                          ; preds = %for.cond
  %5 = bitcast i8* %call2 to %struct.simple_bitmap_def**, !dbg !5956
  %6 = bitcast i8* %call4 to i32*, !dbg !5957
  call void @llvm.dbg.value(metadata i32 53, metadata !5876, metadata !DIExpression()), !dbg !5953
  store i32 53, i32* %i, align 4, !dbg !5960
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5972
  %cfg = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, i32 1, !dbg !5972
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !5972
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i64 0, i32 1, !dbg !5972
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !5972
  %10 = bitcast %struct.bitmap_iterator* %bi to i8*, !dbg !5973
  br label %for.cond7, !dbg !5972

for.cond7:                                        ; preds = %while.end413, %for.end
  %11 = phi %struct.control_flow_graph* [ %8, %for.end ], [ %.pre7, %while.end413 ], !dbg !5974
  %next.0 = phi %struct.insn_chain* [ null, %for.end ], [ %next.3.lcssa, %while.end413 ], !dbg !5975
  %c.0 = phi %struct.insn_chain* [ null, %for.end ], [ %c.3.lcssa, %while.end413 ], !dbg !5976
  %.pn = phi %struct.basic_block_def* [ %9, %for.end ], [ %bb.0, %while.end413 ]
  %p.0 = phi %struct.insn_chain** [ @reload_insn_chain, %for.end ], [ %p.3.lcssa, %while.end413 ], !dbg !5977
  %bb.0.in = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %.pn, i64 0, i32 5, !dbg !5978
  %bb.0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.0.in, align 8, !dbg !5978
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.0, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.basic_block_def* %bb.0, metadata !5899, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.0, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.0, metadata !5901, metadata !DIExpression()), !dbg !5953
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i64 0, i32 0, !dbg !5974
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !5974
  %cmp10 = icmp eq %struct.basic_block_def* %bb.0, %12, !dbg !5974
  br i1 %cmp10, label %for.end416, label %for.body12, !dbg !5972

for.body12:                                       ; preds = %for.cond7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8, !dbg !5979
  call void @bitmap_clear(%struct.bitmap_head_def* %call) #6, !dbg !5980
  %13 = load i32, i32* @max_regno, align 4, !dbg !5981
  %conv13 = sext i32 %13 to i64, !dbg !5981
  %mul14 = shl nsw i64 %conv13, 2, !dbg !5982
  %call15 = call i8* @memset(i8* %call4, i32 0, i64 %mul14) #6, !dbg !5983
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 9, !dbg !5984
  %14 = load i32, i32* %index, align 8, !dbg !5984
  %call16 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %14) #7, !dbg !5984
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call16, i64 0, i32 3, !dbg !5984
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !5984
  call void @llvm.dbg.value(metadata i32* %i, metadata !5876, metadata !DIExpression(DW_OP_deref)), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5906, metadata !DIExpression(DW_OP_deref)), !dbg !5973
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %15, i32 0, i32* nonnull %i) #7, !dbg !5984
  br label %for.cond17, !dbg !5984

for.cond17:                                       ; preds = %if.end24, %for.body12
  call void @llvm.dbg.value(metadata i32* %i, metadata !5876, metadata !DIExpression(DW_OP_deref)), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5906, metadata !DIExpression(DW_OP_deref)), !dbg !5973
  %call18 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5986
  %tobool19 = icmp eq i8 %call18, 0, !dbg !5984
  %16 = load i32, i32* %i, align 4, !dbg !5988
  call void @llvm.dbg.value(metadata i32 %16, metadata !5876, metadata !DIExpression()), !dbg !5953
  %cmp21 = icmp ugt i32 %16, 52, !dbg !5991
  %or.cond = or i1 %tobool19, %cmp21, !dbg !5984
  br i1 %or.cond, label %for.end27, label %if.end24, !dbg !5984

if.end24:                                         ; preds = %for.cond17
  call void @llvm.dbg.value(metadata i32 %16, metadata !5876, metadata !DIExpression()), !dbg !5953
  %call25 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %16) #6, !dbg !5992
  call void @llvm.dbg.value(metadata i32* %i, metadata !5876, metadata !DIExpression(DW_OP_deref)), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5906, metadata !DIExpression(DW_OP_deref)), !dbg !5973
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5986
  br label %for.cond17, !dbg !5986, !llvm.loop !5993

for.end27:                                        ; preds = %for.cond17
  %17 = load i32, i32* %index, align 8, !dbg !5995
  %call29 = call fastcc %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %17) #7, !dbg !5995
  %out30 = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call29, i64 0, i32 3, !dbg !5995
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out30, align 8, !dbg !5995
  call void @llvm.dbg.value(metadata i32* %i, metadata !5876, metadata !DIExpression(DW_OP_deref)), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5906, metadata !DIExpression(DW_OP_deref)), !dbg !5973
  call fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* nonnull %bi, %struct.bitmap_head_def* %18, i32 53, i32* nonnull %i) #7, !dbg !5995
  br label %for.cond31, !dbg !5995

for.cond31:                                       ; preds = %for.inc40, %for.end27
  call void @llvm.dbg.value(metadata i32* %i, metadata !5876, metadata !DIExpression(DW_OP_deref)), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5906, metadata !DIExpression(DW_OP_deref)), !dbg !5973
  %call32 = call fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5997
  %tobool33 = icmp eq i8 %call32, 0, !dbg !5995
  br i1 %tobool33, label %for.end41, label %for.body34, !dbg !5995

for.body34:                                       ; preds = %for.cond31
  %19 = load i32, i32* %i, align 4, !dbg !5999
  call void @llvm.dbg.value(metadata i32 %19, metadata !5876, metadata !DIExpression()), !dbg !5953
  %call35 = call fastcc zeroext i8 @pseudo_for_reload_consideration_p(i32 %19) #7, !dbg !6002
  %tobool36 = icmp eq i8 %call35, 0, !dbg !6002
  br i1 %tobool36, label %for.inc40, label %if.then37, !dbg !6003

if.then37:                                        ; preds = %for.body34
  %20 = load i32, i32* %i, align 4, !dbg !6004
  call void @llvm.dbg.value(metadata i32 %20, metadata !5876, metadata !DIExpression()), !dbg !5953
  %call38 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %20) #6, !dbg !6005
  br label %for.inc40, !dbg !6005

for.inc40:                                        ; preds = %for.body34, %if.then37
  call void @llvm.dbg.value(metadata i32* %i, metadata !5876, metadata !DIExpression(DW_OP_deref)), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !5906, metadata !DIExpression(DW_OP_deref)), !dbg !5973
  call fastcc void @bmp_iter_next(%struct.bitmap_iterator* nonnull %bi, i32* nonnull %i) #7, !dbg !5997
  br label %for.cond31, !dbg !5997, !llvm.loop !6006

for.end41:                                        ; preds = %for.cond31
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %bb.0, i64 0, i32 7, !dbg !6008
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6008
  %21 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6008
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %21, i64 0, i32 1, !dbg !6008
  br label %for.cond42, !dbg !6008

for.cond42:                                       ; preds = %for.inc348, %for.end41
  %insn.0.in = phi %struct.rtx_def** [ %end_, %for.end41 ], [ %rt_rtx352, %for.inc348 ]
  %next.1 = phi %struct.insn_chain* [ %next.0, %for.end41 ], [ %next.2, %for.inc348 ], !dbg !5975
  %c.1 = phi %struct.insn_chain* [ %c.0, %for.end41 ], [ %c.2, %for.inc348 ], !dbg !5976
  %p.1 = phi %struct.insn_chain** [ %p.0, %for.end41 ], [ %p.2, %for.inc348 ], !dbg !5977
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6009
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.1, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.1, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.1, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !5917, metadata !DIExpression()), !dbg !5973
  %tobool43 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6010
  br i1 %tobool43, label %for.cond42.for.end353_crit_edge, label %land.rhs, !dbg !6010

for.cond42.for.end353_crit_edge:                  ; preds = %for.cond42
  %next.1.lcssa = phi %struct.insn_chain* [ %next.1, %for.cond42 ], !dbg !5975
  %c.1.lcssa = phi %struct.insn_chain* [ %c.1, %for.cond42 ], !dbg !5976
  %p.1.lcssa = phi %struct.insn_chain** [ %p.1, %for.cond42 ], !dbg !5977
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.1.lcssa, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.1.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.1.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.1.lcssa, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.1.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.1.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  %.pre8 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6011
  br label %for.end353, !dbg !6010

land.rhs:                                         ; preds = %for.cond42
  %22 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6010
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %22, i64 0, i32 0, !dbg !6010
  %23 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6010
  %24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6010
  %rt_rtx = bitcast %union.rtunion_def* %24 to %struct.rtx_def**, !dbg !6010
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6010
  %cmp46 = icmp eq %struct.rtx_def* %insn.0, %25, !dbg !6010
  br i1 %cmp46, label %for.end353.loopexit, label %for.body48, !dbg !6008

for.body48:                                       ; preds = %land.rhs
  %26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6012
  %bf.load = load i32, i32* %26, align 8, !dbg !6012
  %bf.clear = and i32 %bf.load, 65535, !dbg !6012
  %cmp49 = icmp eq i32 %bf.clear, 13, !dbg !6012
  br i1 %cmp49, label %for.inc348, label %land.lhs.true, !dbg !6013

land.lhs.true:                                    ; preds = %for.body48
  %cmp53 = icmp eq i32 %bf.clear, 11, !dbg !6014
  br i1 %cmp53, label %for.inc348, label %if.then55, !dbg !6015

if.then55:                                        ; preds = %land.lhs.true
  %arrayidx58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6016
  %rt_int = bitcast %union.rtunion_def* %arrayidx58 to i32*, !dbg !6016
  %27 = load i32, i32* %rt_int, align 8, !dbg !6016
  call void @llvm.dbg.value(metadata i32 %27, metadata !5918, metadata !DIExpression()), !dbg !6017
  %call59 = call %struct.insn_chain* @new_insn_chain() #6, !dbg !6018
  call void @llvm.dbg.value(metadata %struct.insn_chain* %call59, metadata !5900, metadata !DIExpression()), !dbg !5953
  %next60 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call59, i64 0, i32 0, !dbg !6019
  store %struct.insn_chain* %next.1, %struct.insn_chain** %next60, align 8, !dbg !6020
  call void @llvm.dbg.value(metadata %struct.insn_chain* %call59, metadata !5901, metadata !DIExpression()), !dbg !5953
  store %struct.insn_chain* %call59, %struct.insn_chain** %p.1, align 8, !dbg !6021
  %prev = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call59, i64 0, i32 1, !dbg !6022
  call void @llvm.dbg.value(metadata %struct.insn_chain** %prev, metadata !5877, metadata !DIExpression()), !dbg !5953
  %insn61 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call59, i64 0, i32 3, !dbg !6023
  store %struct.rtx_def* %insn.0, %struct.rtx_def** %insn61, align 8, !dbg !6024
  %28 = load i32, i32* %index, align 8, !dbg !6025
  %block = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call59, i64 0, i32 4, !dbg !6026
  store i32 %28, i32* %block, align 8, !dbg !6027
  %bf.load63 = load i32, i32* %26, align 8, !dbg !6028
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !6028
  %cmp65 = icmp eq i32 %bf.clear64, 8, !dbg !6028
  br i1 %cmp65, label %if.then81, label %lor.lhs.false, !dbg !6028

lor.lhs.false:                                    ; preds = %if.then55
  %cmp69 = icmp eq i32 %bf.clear64, 7, !dbg !6028
  br i1 %cmp69, label %if.then81, label %lor.lhs.false71, !dbg !6028

lor.lhs.false71:                                  ; preds = %lor.lhs.false
  %cmp74 = icmp eq i32 %bf.clear64, 9, !dbg !6028
  br i1 %cmp74, label %if.then81, label %lor.lhs.false76, !dbg !6028

lor.lhs.false76:                                  ; preds = %lor.lhs.false71
  %cmp79 = icmp eq i32 %bf.clear64, 10, !dbg !6028
  br i1 %cmp79, label %if.then81, label %if.end206, !dbg !6029

if.then81:                                        ; preds = %lor.lhs.false76, %lor.lhs.false71, %lor.lhs.false, %if.then55
  %29 = load %struct.df*, %struct.df** @df, align 8, !dbg !6030
  %insns = getelementptr inbounds %struct.df, %struct.df* %29, i64 0, i32 10, !dbg !6030
  %30 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns, align 8, !dbg !6030
  %idxprom = zext i32 %27 to i64, !dbg !6030
  %arrayidx82 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %30, i64 %idxprom, !dbg !6030
  %31 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx82, align 8, !dbg !6030
  %defs = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %31, i64 0, i32 1, !dbg !6030
  %32 = load %union.df_ref_d**, %union.df_ref_d*** %defs, align 8, !dbg !6030
  call void @llvm.dbg.value(metadata %union.df_ref_d** %32, metadata !5924, metadata !DIExpression()), !dbg !6017
  %dead_or_set105 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call59, i64 0, i32 7, !dbg !6031
  br label %for.cond83, !dbg !6036

for.cond83:                                       ; preds = %for.inc204, %if.then81
  %def_rec.0 = phi %union.df_ref_d** [ %32, %if.then81 ], [ %incdec.ptr, %for.inc204 ], !dbg !6037
  call void @llvm.dbg.value(metadata %union.df_ref_d** %def_rec.0, metadata !5924, metadata !DIExpression()), !dbg !6017
  %33 = load %union.df_ref_d*, %union.df_ref_d** %def_rec.0, align 8, !dbg !6038
  %tobool84 = icmp eq %union.df_ref_d* %33, null, !dbg !6039
  br i1 %tobool84, label %if.end206.loopexit, label %for.body85, !dbg !6039

for.body85:                                       ; preds = %for.cond83
  call void @llvm.dbg.value(metadata %union.df_ref_d* %33, metadata !5926, metadata !DIExpression()), !dbg !6040
  %regno86 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %33, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6041
  %34 = load i32, i32* %regno86, align 8, !dbg !6041
  call void @llvm.dbg.value(metadata i32 %34, metadata !5931, metadata !DIExpression()), !dbg !6040
  %35 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %33, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6042
  %bf.load88 = load i32, i32* %35, align 8, !dbg !6042
  %and89 = and i32 %bf.load88, 4194304, !dbg !6042
  %cmp90 = icmp eq i32 %and89, 0, !dbg !6042
  br i1 %cmp90, label %if.then92, label %if.end109, !dbg !6043

if.then92:                                        ; preds = %for.body85
  %cmp93 = icmp ult i32 %34, 53, !dbg !6044
  br i1 %cmp93, label %if.then95, label %if.else, !dbg !6045

if.then95:                                        ; preds = %if.then92
  %idxprom96 = zext i32 %34 to i64, !dbg !6046
  %arrayidx97 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom96, !dbg !6046
  %36 = load i8, i8* %arrayidx97, align 1, !dbg !6046
  %tobool98 = icmp eq i8 %36, 0, !dbg !6046
  br i1 %tobool98, label %if.then99, label %if.end109, !dbg !6049

if.then99:                                        ; preds = %if.then95
  %call100 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %dead_or_set105, i32 %34) #6, !dbg !6050
  br label %if.end109, !dbg !6050

if.else:                                          ; preds = %if.then92
  %call102 = call fastcc zeroext i8 @pseudo_for_reload_consideration_p(i32 %34) #7, !dbg !6051
  %tobool103 = icmp eq i8 %call102, 0, !dbg !6051
  br i1 %tobool103, label %if.end109, label %if.then104, !dbg !6052

if.then104:                                       ; preds = %if.else
  %call106 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %dead_or_set105, i32 %34) #6, !dbg !6053
  br label %if.end109, !dbg !6053

if.end109:                                        ; preds = %if.then95, %if.else, %for.body85, %if.then99, %if.then104
  %cmp110 = icmp ult i32 %34, 53, !dbg !6054
  br i1 %cmp110, label %land.lhs.true121, label %lor.lhs.false112, !dbg !6055

lor.lhs.false112:                                 ; preds = %if.end109
  %37 = load i16*, i16** @reg_renumber, align 8, !dbg !6056
  %idxprom113 = zext i32 %34 to i64, !dbg !6056
  %arrayidx114 = getelementptr inbounds i16, i16* %37, i64 %idxprom113, !dbg !6056
  %38 = load i16, i16* %arrayidx114, align 2, !dbg !6056
  %cmp116 = icmp sgt i16 %38, -1, !dbg !6057
  br i1 %cmp116, label %land.lhs.true121, label %lor.lhs.false118, !dbg !6058

lor.lhs.false118:                                 ; preds = %lor.lhs.false112
  %39 = load i8, i8* @ira_conflicts_p, align 1, !dbg !6059
  %tobool120 = icmp eq i8 %39, 0, !dbg !6059
  br i1 %tobool120, label %for.inc204, label %land.lhs.true121, !dbg !6060

land.lhs.true121:                                 ; preds = %lor.lhs.false118, %lor.lhs.false112, %if.end109
  %bf.load123 = load i32, i32* %35, align 8, !dbg !6061
  %and125 = and i32 %bf.load123, 65536, !dbg !6061
  %cmp126 = icmp eq i32 %and125, 0, !dbg !6061
  br i1 %cmp126, label %if.then128, label %for.inc204, !dbg !6062

if.then128:                                       ; preds = %land.lhs.true121
  %reg130 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %33, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6063
  %40 = load %struct.rtx_def*, %struct.rtx_def** %reg130, align 8, !dbg !6063
  call void @llvm.dbg.value(metadata %struct.rtx_def* %40, metadata !5932, metadata !DIExpression()), !dbg !6064
  %41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i64 0, i32 0, !dbg !6065
  %bf.load131 = load i32, i32* %41, align 8, !dbg !6065
  %bf.clear132 = and i32 %bf.load131, 65535, !dbg !6065
  %cmp133 = icmp eq i32 %bf.clear132, 39, !dbg !6066
  br i1 %cmp133, label %land.lhs.true135, label %if.else190, !dbg !6067

land.lhs.true135:                                 ; preds = %if.then128
  %and139 = and i32 %bf.load123, 33554432, !dbg !6068
  %cmp140 = icmp eq i32 %and139, 0, !dbg !6068
  br i1 %cmp140, label %if.then142, label %if.else190, !dbg !6069

if.then142:                                       ; preds = %land.lhs.true135
  %42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6070
  %rt_uint = bitcast %union.rtunion_def* %42 to i32*, !dbg !6070
  %43 = load i32, i32* %rt_uint, align 8, !dbg !6070
  call void @llvm.dbg.value(metadata i32 %43, metadata !5935, metadata !DIExpression()), !dbg !6071
  %bf.lshr = lshr i32 %bf.load131, 16, !dbg !6072
  %bf.clear147 = and i32 %bf.lshr, 255, !dbg !6072
  %idxprom148 = zext i32 %bf.clear147 to i64, !dbg !6072
  %arrayidx149 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom148, !dbg !6072
  %44 = load i8, i8* %arrayidx149, align 1, !dbg !6072
  %conv151 = zext i8 %44 to i32, !dbg !6072
  %add = add i32 %43, %conv151, !dbg !6073
  call void @llvm.dbg.value(metadata i32 %add, metadata !5938, metadata !DIExpression()), !dbg !6071
  %call152 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %34) #6, !dbg !6074
  %conv153 = trunc i32 %call152 to i8, !dbg !6074
  call fastcc void @init_live_subregs(i8 zeroext %conv153, %struct.simple_bitmap_def** %5, i32* %6, i32 %34, %struct.rtx_def* %40) #7, !dbg !6075
  %bf.load155 = load i32, i32* %35, align 8, !dbg !6076
  %and157 = and i32 %bf.load155, 67108864, !dbg !6076
  %cmp158 = icmp eq i32 %and157, 0, !dbg !6076
  br i1 %cmp158, label %if.then160, label %if.end165, !dbg !6078

if.then160:                                       ; preds = %if.then142
  %div = and i32 %43, -4, !dbg !6079
  call void @llvm.dbg.value(metadata i32 %div, metadata !5935, metadata !DIExpression()), !dbg !6071
  %sub = add i32 %add, 3, !dbg !6081
  %div163 = and i32 %sub, -4, !dbg !6082
  call void @llvm.dbg.value(metadata i32 %div163, metadata !5938, metadata !DIExpression()), !dbg !6071
  br label %if.end165, !dbg !6083

if.end165:                                        ; preds = %if.then142, %if.then160
  %start.0 = phi i32 [ %43, %if.then142 ], [ %div, %if.then160 ], !dbg !6071
  %last.0 = phi i32 [ %add, %if.then142 ], [ %div163, %if.then160 ], !dbg !6071
  call void @llvm.dbg.value(metadata i32 %last.0, metadata !5938, metadata !DIExpression()), !dbg !6071
  call void @llvm.dbg.value(metadata i32 %start.0, metadata !5935, metadata !DIExpression()), !dbg !6071
  %idxprom166 = zext i32 %34 to i64, !dbg !6084
  %arrayidx167 = getelementptr inbounds i32, i32* %6, i64 %idxprom166, !dbg !6084
  %45 = load i32, i32* %arrayidx167, align 4, !dbg !6084
  %cmp168 = icmp sgt i32 %last.0, %45, !dbg !6086
  br i1 %cmp168, label %if.then170, label %if.end173, !dbg !6087

if.then170:                                       ; preds = %if.end165
  call void @llvm.dbg.value(metadata i32 %45, metadata !5938, metadata !DIExpression()), !dbg !6071
  br label %if.end173, !dbg !6088

if.end173:                                        ; preds = %if.then170, %if.end165
  %last.1 = phi i32 [ %45, %if.then170 ], [ %last.0, %if.end165 ], !dbg !6071
  call void @llvm.dbg.value(metadata i32 %last.1, metadata !5938, metadata !DIExpression()), !dbg !6071
  %arrayidx177 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %5, i64 %idxprom166, !dbg !6071
  br label %while.cond, !dbg !6089

while.cond:                                       ; preds = %while.body, %if.end173
  %start.1 = phi i32 [ %start.0, %if.end173 ], [ %inc178, %while.body ], !dbg !6071
  call void @llvm.dbg.value(metadata i32 %start.1, metadata !5935, metadata !DIExpression()), !dbg !6071
  %cmp174 = icmp ult i32 %start.1, %last.1, !dbg !6090
  %46 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx177, align 8, !dbg !6071
  br i1 %cmp174, label %while.body, label %while.end, !dbg !6089

while.body:                                       ; preds = %while.cond
  call fastcc void @RESET_BIT(%struct.simple_bitmap_def* %46, i32 %start.1) #7, !dbg !6091
  %inc178 = add i32 %start.1, 1, !dbg !6093
  call void @llvm.dbg.value(metadata i32 %inc178, metadata !5935, metadata !DIExpression()), !dbg !6071
  br label %while.cond, !dbg !6089, !llvm.loop !6094

while.end:                                        ; preds = %while.cond
  %.lcssa = phi %struct.simple_bitmap_def* [ %46, %while.cond ], !dbg !6071
  %call181 = call zeroext i8 @sbitmap_empty_p(%struct.simple_bitmap_def* %.lcssa) #6, !dbg !6096
  %tobool182 = icmp eq i8 %call181, 0, !dbg !6096
  br i1 %tobool182, label %if.else187, label %if.then183, !dbg !6098

if.then183:                                       ; preds = %while.end
  store i32 0, i32* %arrayidx167, align 4, !dbg !6099
  %call186 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %call, i32 %34) #6, !dbg !6101
  br label %for.inc204, !dbg !6102

if.else187:                                       ; preds = %while.end
  %call188 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %34) #6, !dbg !6103
  br label %for.inc204

if.else190:                                       ; preds = %land.lhs.true135, %if.then128
  %and194 = and i32 %bf.load123, 1048576, !dbg !6104
  %cmp195 = icmp eq i32 %and194, 0, !dbg !6104
  br i1 %cmp195, label %if.then197, label %for.inc204, !dbg !6107

if.then197:                                       ; preds = %if.else190
  %call198 = call zeroext i8 @bitmap_clear_bit(%struct.bitmap_head_def* %call, i32 %34) #6, !dbg !6108
  %idxprom199 = zext i32 %34 to i64, !dbg !6110
  %arrayidx200 = getelementptr inbounds i32, i32* %6, i64 %idxprom199, !dbg !6110
  store i32 0, i32* %arrayidx200, align 4, !dbg !6111
  br label %for.inc204, !dbg !6112

for.inc204:                                       ; preds = %if.else190, %land.lhs.true121, %lor.lhs.false118, %if.then197, %if.then183, %if.else187
  %incdec.ptr = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %def_rec.0, i64 1, !dbg !6113
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr, metadata !5924, metadata !DIExpression()), !dbg !6017
  br label %for.cond83, !dbg !6114, !llvm.loop !6115

if.end206.loopexit:                               ; preds = %for.cond83
  br label %if.end206, !dbg !6117

if.end206:                                        ; preds = %if.end206.loopexit, %lor.lhs.false76
  %call207 = call zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def* %call, %struct.bitmap_head_def* %call1) #6, !dbg !6117
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call59, i64 0, i32 6, !dbg !6118
  call void @bitmap_copy(%struct.bitmap_head_def* nonnull %live_throughout, %struct.bitmap_head_def* %call) #6, !dbg !6119
  %bf.load208 = load i32, i32* %26, align 8, !dbg !6120
  %bf.clear209 = and i32 %bf.load208, 65535, !dbg !6120
  %cmp210 = icmp eq i32 %bf.clear209, 8, !dbg !6120
  br i1 %cmp210, label %if.then227, label %lor.lhs.false212, !dbg !6120

lor.lhs.false212:                                 ; preds = %if.end206
  %cmp215 = icmp eq i32 %bf.clear209, 7, !dbg !6120
  br i1 %cmp215, label %if.then227, label %lor.lhs.false217, !dbg !6120

lor.lhs.false217:                                 ; preds = %lor.lhs.false212
  %cmp220 = icmp eq i32 %bf.clear209, 9, !dbg !6120
  br i1 %cmp220, label %if.then227, label %lor.lhs.false222, !dbg !6120

lor.lhs.false222:                                 ; preds = %lor.lhs.false217
  %cmp225 = icmp eq i32 %bf.clear209, 10, !dbg !6120
  br i1 %cmp225, label %if.then227, label %for.inc348, !dbg !6121

if.then227:                                       ; preds = %lor.lhs.false222, %lor.lhs.false217, %lor.lhs.false212, %if.end206
  %47 = load %struct.df*, %struct.df** @df, align 8, !dbg !6122
  %insns228 = getelementptr inbounds %struct.df, %struct.df* %47, i64 0, i32 10, !dbg !6122
  %48 = load %struct.df_insn_info**, %struct.df_insn_info*** %insns228, align 8, !dbg !6122
  %idxprom229 = zext i32 %27 to i64, !dbg !6122
  %arrayidx230 = getelementptr inbounds %struct.df_insn_info*, %struct.df_insn_info** %48, i64 %idxprom229, !dbg !6122
  %49 = load %struct.df_insn_info*, %struct.df_insn_info** %arrayidx230, align 8, !dbg !6122
  %uses = getelementptr inbounds %struct.df_insn_info, %struct.df_insn_info* %49, i64 0, i32 2, !dbg !6122
  %50 = load %union.df_ref_d**, %union.df_ref_d*** %uses, align 8, !dbg !6122
  call void @llvm.dbg.value(metadata %union.df_ref_d** %50, metadata !5925, metadata !DIExpression()), !dbg !6017
  %dead_or_set279 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call59, i64 0, i32 7, !dbg !6123
  br label %for.cond231, !dbg !6128

for.cond231:                                      ; preds = %cleanup, %if.then227
  %use_rec.0 = phi %union.df_ref_d** [ %50, %if.then227 ], [ %incdec.ptr344, %cleanup ], !dbg !6129
  call void @llvm.dbg.value(metadata %union.df_ref_d** %use_rec.0, metadata !5925, metadata !DIExpression()), !dbg !6017
  %51 = load %union.df_ref_d*, %union.df_ref_d** %use_rec.0, align 8, !dbg !6130
  %tobool232 = icmp eq %union.df_ref_d* %51, null, !dbg !6131
  br i1 %tobool232, label %for.inc348.loopexit, label %for.body233, !dbg !6131

for.body233:                                      ; preds = %for.cond231
  call void @llvm.dbg.value(metadata %union.df_ref_d* %51, metadata !5939, metadata !DIExpression()), !dbg !6132
  %regno236 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %51, i64 0, i32 0, i32 0, i32 0, i32 6, !dbg !6133
  %52 = load i32, i32* %regno236, align 8, !dbg !6133
  call void @llvm.dbg.value(metadata i32 %52, metadata !5944, metadata !DIExpression()), !dbg !6132
  %reg239 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %51, i64 0, i32 0, i32 0, i32 0, i32 1, !dbg !6134
  %53 = load %struct.rtx_def*, %struct.rtx_def** %reg239, align 8, !dbg !6134
  call void @llvm.dbg.value(metadata %struct.rtx_def* %53, metadata !5945, metadata !DIExpression()), !dbg !6132
  %54 = getelementptr inbounds %union.df_ref_d, %union.df_ref_d* %51, i64 0, i32 0, i32 0, i32 0, i32 0, !dbg !6135
  %bf.load241 = load i32, i32* %54, align 8, !dbg !6135
  %and243 = and i32 %bf.load241, 2097152, !dbg !6135
  %cmp244 = icmp eq i32 %and243, 0, !dbg !6135
  br i1 %cmp244, label %if.end261, label %land.lhs.true246, !dbg !6137

land.lhs.true246:                                 ; preds = %for.body233
  %and250 = and i32 %bf.load241, 33554432, !dbg !6138
  %cmp251 = icmp eq i32 %and250, 0, !dbg !6138
  br i1 %cmp251, label %land.lhs.true253, label %if.end261, !dbg !6139

land.lhs.true253:                                 ; preds = %land.lhs.true246
  %and257 = and i32 %bf.load241, 134217728, !dbg !6140
  %cmp258 = icmp eq i32 %and257, 0, !dbg !6140
  br i1 %cmp258, label %if.end261, label %cleanup, !dbg !6141

if.end261:                                        ; preds = %land.lhs.true253, %land.lhs.true246, %for.body233
  %call262 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %52) #6, !dbg !6142
  %tobool263 = icmp eq i32 %call262, 0, !dbg !6142
  br i1 %tobool263, label %if.then264, label %if.end283, !dbg !6143

if.then264:                                       ; preds = %if.end261
  %cmp265 = icmp ult i32 %52, 53, !dbg !6144
  br i1 %cmp265, label %if.then267, label %if.else275, !dbg !6145

if.then267:                                       ; preds = %if.then264
  %idxprom268 = zext i32 %52 to i64, !dbg !6146
  %arrayidx269 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom268, !dbg !6146
  %55 = load i8, i8* %arrayidx269, align 1, !dbg !6146
  %tobool270 = icmp eq i8 %55, 0, !dbg !6146
  br i1 %tobool270, label %if.then271, label %if.end283, !dbg !6149

if.then271:                                       ; preds = %if.then267
  %call273 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %dead_or_set279, i32 %52) #6, !dbg !6150
  br label %if.end283, !dbg !6150

if.else275:                                       ; preds = %if.then264
  %call276 = call fastcc zeroext i8 @pseudo_for_reload_consideration_p(i32 %52) #7, !dbg !6151
  %tobool277 = icmp eq i8 %call276, 0, !dbg !6151
  br i1 %tobool277, label %if.end283, label %if.then278, !dbg !6152

if.then278:                                       ; preds = %if.else275
  %call280 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* nonnull %dead_or_set279, i32 %52) #6, !dbg !6153
  br label %if.end283, !dbg !6153

if.end283:                                        ; preds = %if.then267, %if.else275, %if.end261, %if.then271, %if.then278
  %cmp284 = icmp ult i32 %52, 53, !dbg !6154
  br i1 %cmp284, label %if.then290, label %lor.lhs.false286, !dbg !6155

lor.lhs.false286:                                 ; preds = %if.end283
  %call287 = call fastcc zeroext i8 @pseudo_for_reload_consideration_p(i32 %52) #7, !dbg !6156
  %tobool289 = icmp eq i8 %call287, 0, !dbg !6156
  br i1 %tobool289, label %cleanup, label %if.then290, !dbg !6157

if.then290:                                       ; preds = %lor.lhs.false286, %if.end283
  %56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i64 0, i32 0, !dbg !6158
  %bf.load291 = load i32, i32* %56, align 8, !dbg !6158
  %bf.clear292 = and i32 %bf.load291, 65535, !dbg !6158
  %cmp293 = icmp eq i32 %bf.clear292, 39, !dbg !6159
  br i1 %cmp293, label %land.lhs.true295, label %if.else335, !dbg !6160

land.lhs.true295:                                 ; preds = %if.then290
  %bf.load297 = load i32, i32* %54, align 8, !dbg !6161
  %and299 = and i32 %bf.load297, 50331648, !dbg !6161
  %cmp300 = icmp eq i32 %and299, 0, !dbg !6161
  br i1 %cmp300, label %if.then302, label %if.else335, !dbg !6162

if.then302:                                       ; preds = %land.lhs.true295
  %57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6163
  %rt_uint307 = bitcast %union.rtunion_def* %57 to i32*, !dbg !6163
  %58 = load i32, i32* %rt_uint307, align 8, !dbg !6163
  call void @llvm.dbg.value(metadata i32 %58, metadata !5946, metadata !DIExpression()), !dbg !6164
  %bf.lshr310 = lshr i32 %bf.load291, 16, !dbg !6165
  %bf.clear311 = and i32 %bf.lshr310, 255, !dbg !6165
  %idxprom312 = zext i32 %bf.clear311 to i64, !dbg !6165
  %arrayidx313 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom312, !dbg !6165
  %59 = load i8, i8* %arrayidx313, align 1, !dbg !6165
  %conv315 = zext i8 %59 to i32, !dbg !6165
  %add316 = add i32 %58, %conv315, !dbg !6166
  call void @llvm.dbg.value(metadata i32 %add316, metadata !5951, metadata !DIExpression()), !dbg !6164
  %call317 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %call, i32 %52) #6, !dbg !6167
  %conv318 = trunc i32 %call317 to i8, !dbg !6167
  call fastcc void @init_live_subregs(i8 zeroext %conv318, %struct.simple_bitmap_def** %5, i32* %6, i32 %52, %struct.rtx_def* %53) #7, !dbg !6168
  %idxprom319 = zext i32 %52 to i64, !dbg !6169
  %arrayidx320 = getelementptr inbounds i32, i32* %6, i64 %idxprom319, !dbg !6169
  %60 = load i32, i32* %arrayidx320, align 4, !dbg !6169
  %cmp321 = icmp sgt i32 %add316, %60, !dbg !6171
  br i1 %cmp321, label %if.then323, label %if.end326, !dbg !6172

if.then323:                                       ; preds = %if.then302
  call void @llvm.dbg.value(metadata i32 %60, metadata !5951, metadata !DIExpression()), !dbg !6164
  br label %if.end326, !dbg !6173

if.end326:                                        ; preds = %if.then323, %if.then302
  %last308.0 = phi i32 [ %60, %if.then323 ], [ %add316, %if.then302 ], !dbg !6164
  call void @llvm.dbg.value(metadata i32 %last308.0, metadata !5951, metadata !DIExpression()), !dbg !6164
  %arrayidx332 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %5, i64 %idxprom319, !dbg !6174
  br label %while.cond327, !dbg !6176

while.cond327:                                    ; preds = %while.body330, %if.end326
  %start303.0 = phi i32 [ %58, %if.end326 ], [ %inc333, %while.body330 ], !dbg !6164
  call void @llvm.dbg.value(metadata i32 %start303.0, metadata !5946, metadata !DIExpression()), !dbg !6164
  %cmp328 = icmp ult i32 %start303.0, %last308.0, !dbg !6177
  br i1 %cmp328, label %while.body330, label %if.end338.loopexit, !dbg !6176

while.body330:                                    ; preds = %while.cond327
  %61 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx332, align 8, !dbg !6178
  call fastcc void @SET_BIT(%struct.simple_bitmap_def* %61, i32 %start303.0) #7, !dbg !6179
  %inc333 = add i32 %start303.0, 1, !dbg !6180
  call void @llvm.dbg.value(metadata i32 %inc333, metadata !5946, metadata !DIExpression()), !dbg !6164
  br label %while.cond327, !dbg !6176, !llvm.loop !6181

if.else335:                                       ; preds = %land.lhs.true295, %if.then290
  %idxprom336 = zext i32 %52 to i64, !dbg !6183
  %arrayidx337 = getelementptr inbounds i32, i32* %6, i64 %idxprom336, !dbg !6183
  store i32 0, i32* %arrayidx337, align 4, !dbg !6184
  br label %if.end338

if.end338.loopexit:                               ; preds = %while.cond327
  br label %if.end338, !dbg !6185

if.end338:                                        ; preds = %if.end338.loopexit, %if.else335
  %call339 = call zeroext i8 @bitmap_set_bit(%struct.bitmap_head_def* %call, i32 %52) #6, !dbg !6185
  br label %cleanup, !dbg !6186

cleanup:                                          ; preds = %land.lhs.true253, %lor.lhs.false286, %if.end338
  %incdec.ptr344 = getelementptr inbounds %union.df_ref_d*, %union.df_ref_d** %use_rec.0, i64 1, !dbg !6187
  call void @llvm.dbg.value(metadata %union.df_ref_d** %incdec.ptr344, metadata !5925, metadata !DIExpression()), !dbg !6017
  br label %for.cond231, !dbg !6188, !llvm.loop !6189

for.inc348.loopexit:                              ; preds = %for.cond231
  br label %for.inc348, !dbg !6010

for.inc348:                                       ; preds = %for.inc348.loopexit, %for.body48, %land.lhs.true, %lor.lhs.false222
  %next.2 = phi %struct.insn_chain* [ %next.1, %for.body48 ], [ %next.1, %land.lhs.true ], [ %call59, %lor.lhs.false222 ], [ %call59, %for.inc348.loopexit ], !dbg !5953
  %c.2 = phi %struct.insn_chain* [ %c.1, %for.body48 ], [ %c.1, %land.lhs.true ], [ %call59, %lor.lhs.false222 ], [ %call59, %for.inc348.loopexit ], !dbg !5953
  %p.2 = phi %struct.insn_chain** [ %p.1, %for.body48 ], [ %p.1, %land.lhs.true ], [ %prev, %lor.lhs.false222 ], [ %prev, %for.inc348.loopexit ], !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.2, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.2, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.2, metadata !5901, metadata !DIExpression()), !dbg !5953
  %62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6010
  %rt_rtx352 = bitcast %union.rtunion_def* %62 to %struct.rtx_def**, !dbg !6010
  br label %for.cond42, !dbg !6010, !llvm.loop !6191

for.end353.loopexit:                              ; preds = %land.rhs
  %.lcssa23 = phi %struct.rtl_bb_info* [ %22, %land.rhs ], !dbg !6010
  %next.1.lcssa21 = phi %struct.insn_chain* [ %next.1, %land.rhs ], !dbg !5975
  %c.1.lcssa19 = phi %struct.insn_chain* [ %c.1, %land.rhs ], !dbg !5976
  %p.1.lcssa17 = phi %struct.insn_chain** [ %p.1, %land.rhs ], !dbg !5977
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.1.lcssa21, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.1.lcssa19, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.1.lcssa17, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.1.lcssa21, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.1.lcssa19, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.1.lcssa17, metadata !5877, metadata !DIExpression()), !dbg !5953
  br label %for.end353, !dbg !6011

for.end353:                                       ; preds = %for.end353.loopexit, %for.cond42.for.end353_crit_edge
  %next.122 = phi %struct.insn_chain* [ %next.1.lcssa, %for.cond42.for.end353_crit_edge ], [ %next.1.lcssa21, %for.end353.loopexit ]
  %c.120 = phi %struct.insn_chain* [ %c.1.lcssa, %for.cond42.for.end353_crit_edge ], [ %c.1.lcssa19, %for.end353.loopexit ]
  %p.118 = phi %struct.insn_chain** [ %p.1.lcssa, %for.cond42.for.end353_crit_edge ], [ %p.1.lcssa17, %for.end353.loopexit ]
  %63 = phi %struct.rtl_bb_info* [ %.pre8, %for.cond42.for.end353_crit_edge ], [ %.lcssa23, %for.end353.loopexit ], !dbg !6011
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.122, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.122, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.120, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.120, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.118, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.118, metadata !5877, metadata !DIExpression()), !dbg !5953
  %head_356 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %63, i64 0, i32 0, !dbg !6011
  br label %while.cond357, !dbg !6193

while.cond357:                                    ; preds = %while.body375, %for.end353
  %insn.1.in = phi %struct.rtx_def** [ %head_356, %for.end353 ], [ %rt_rtx379, %while.body375 ]
  %insn.1 = load %struct.rtx_def*, %struct.rtx_def** %insn.1.in, align 8, !dbg !5973
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.1, metadata !5917, metadata !DIExpression()), !dbg !5973
  %tobool358 = icmp eq %struct.rtx_def* %insn.1, null, !dbg !6194
  br i1 %tobool358, label %while.end380, label %land.rhs359, !dbg !6195

land.rhs359:                                      ; preds = %while.cond357
  %64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 0, !dbg !6196
  %bf.load360 = load i32, i32* %64, align 8, !dbg !6196
  %bf.clear361 = and i32 %bf.load360, 65535, !dbg !6196
  %cmp362 = icmp eq i32 %bf.clear361, 11, !dbg !6196
  br i1 %cmp362, label %while.body375, label %lor.lhs.false364, !dbg !6197

lor.lhs.false364:                                 ; preds = %land.rhs359
  %cmp367 = icmp eq i32 %bf.clear361, 13, !dbg !6198
  br i1 %cmp367, label %while.body375, label %lor.rhs, !dbg !6199

lor.rhs:                                          ; preds = %lor.lhs.false364
  %arrayidx371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 1, !dbg !6200
  %rt_bb = bitcast %struct.object_block** %arrayidx371 to %struct.basic_block_def**, !dbg !6200
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !6200
  %cmp372 = icmp eq %struct.basic_block_def* %65, %bb.0, !dbg !6201
  br i1 %cmp372, label %while.body375, label %while.end380, !dbg !6193

while.body375:                                    ; preds = %land.rhs359, %lor.lhs.false364, %lor.rhs
  %66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.1, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6202
  %rt_rtx379 = bitcast %union.rtunion_def* %66 to %struct.rtx_def**, !dbg !6202
  br label %while.cond357, !dbg !6193, !llvm.loop !6203

while.end380:                                     ; preds = %while.cond357, %lor.rhs
  %insn.1.lcssa = phi %struct.rtx_def* [ %insn.1, %while.cond357 ], [ %insn.1, %lor.rhs ], !dbg !5973
  br label %while.cond381, !dbg !6204

while.cond381:                                    ; preds = %if.end408, %while.end380
  %insn.2 = phi %struct.rtx_def* [ %insn.1.lcssa, %while.end380 ], [ %71, %if.end408 ], !dbg !5973
  %next.3 = phi %struct.insn_chain* [ %next.122, %while.end380 ], [ %next.4, %if.end408 ], !dbg !5975
  %c.3 = phi %struct.insn_chain* [ %c.120, %while.end380 ], [ %c.4, %if.end408 ], !dbg !5976
  %p.3 = phi %struct.insn_chain** [ %p.118, %while.end380 ], [ %p.4, %if.end408 ], !dbg !5977
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.3, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.3, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.3, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.2, metadata !5917, metadata !DIExpression()), !dbg !5973
  %tobool382 = icmp eq %struct.rtx_def* %insn.2, null, !dbg !6204
  br i1 %tobool382, label %while.end413, label %while.body383, !dbg !6204

while.body383:                                    ; preds = %while.cond381
  %67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 0, !dbg !6205
  %bf.load384 = load i32, i32* %67, align 8, !dbg !6205
  %bf.clear385 = and i32 %bf.load384, 65535, !dbg !6205
  %cmp386 = icmp eq i32 %bf.clear385, 13, !dbg !6205
  br i1 %cmp386, label %if.end408, label %land.lhs.true388, !dbg !6208

land.lhs.true388:                                 ; preds = %while.body383
  %cmp391 = icmp eq i32 %bf.clear385, 11, !dbg !6209
  br i1 %cmp391, label %if.end408, label %if.then393, !dbg !6210

if.then393:                                       ; preds = %land.lhs.true388
  %arrayidx396 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 1, !dbg !6211
  %rt_bb397 = bitcast %struct.object_block** %arrayidx396 to %struct.basic_block_def**, !dbg !6211
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb397, align 8, !dbg !6211
  %tobool398 = icmp eq %struct.basic_block_def* %68, null, !dbg !6211
  br i1 %tobool398, label %if.end400, label %while.end413, !dbg !6214

if.end400:                                        ; preds = %if.then393
  %call401 = call %struct.insn_chain* @new_insn_chain() #6, !dbg !6215
  call void @llvm.dbg.value(metadata %struct.insn_chain* %call401, metadata !5900, metadata !DIExpression()), !dbg !5953
  %next402 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call401, i64 0, i32 0, !dbg !6216
  store %struct.insn_chain* %next.3, %struct.insn_chain** %next402, align 8, !dbg !6217
  call void @llvm.dbg.value(metadata %struct.insn_chain* %call401, metadata !5901, metadata !DIExpression()), !dbg !5953
  store %struct.insn_chain* %call401, %struct.insn_chain** %p.3, align 8, !dbg !6218
  %prev403 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call401, i64 0, i32 1, !dbg !6219
  call void @llvm.dbg.value(metadata %struct.insn_chain** %prev403, metadata !5877, metadata !DIExpression()), !dbg !5953
  %69 = load i32, i32* %index, align 8, !dbg !6220
  %block405 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call401, i64 0, i32 4, !dbg !6221
  store i32 %69, i32* %block405, align 8, !dbg !6222
  %insn406 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call401, i64 0, i32 3, !dbg !6223
  store %struct.rtx_def* %insn.2, %struct.rtx_def** %insn406, align 8, !dbg !6224
  %live_throughout407 = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %call401, i64 0, i32 6, !dbg !6225
  call void @bitmap_copy(%struct.bitmap_head_def* nonnull %live_throughout407, %struct.bitmap_head_def* %call) #6, !dbg !6226
  br label %if.end408, !dbg !6227

if.end408:                                        ; preds = %if.end400, %land.lhs.true388, %while.body383
  %next.4 = phi %struct.insn_chain* [ %next.3, %while.body383 ], [ %next.3, %land.lhs.true388 ], [ %call401, %if.end400 ], !dbg !5953
  %c.4 = phi %struct.insn_chain* [ %c.3, %while.body383 ], [ %c.3, %land.lhs.true388 ], [ %call401, %if.end400 ], !dbg !5953
  %p.4 = phi %struct.insn_chain** [ %p.3, %while.body383 ], [ %p.3, %land.lhs.true388 ], [ %prev403, %if.end400 ], !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.4, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.4, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.4, metadata !5901, metadata !DIExpression()), !dbg !5953
  %70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.2, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6228
  %rt_rtx412 = bitcast %union.rtunion_def* %70 to %struct.rtx_def**, !dbg !6228
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx412, align 8, !dbg !6228
  call void @llvm.dbg.value(metadata %struct.rtx_def* %71, metadata !5917, metadata !DIExpression()), !dbg !5973
  br label %while.cond381, !dbg !6204, !llvm.loop !6229

while.end413:                                     ; preds = %if.then393, %while.cond381
  %next.3.lcssa = phi %struct.insn_chain* [ %next.3, %if.then393 ], [ %next.3, %while.cond381 ], !dbg !5975
  %c.3.lcssa = phi %struct.insn_chain* [ %c.3, %if.then393 ], [ %c.3, %while.cond381 ], !dbg !5976
  %p.3.lcssa = phi %struct.insn_chain** [ %p.3, %if.then393 ], [ %p.3, %while.cond381 ], !dbg !5977
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.3.lcssa, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.3.lcssa, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.3.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.3.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.3.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.3.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.3.lcssa, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.3.lcssa, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.3.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.3.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.3.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.3.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.3.lcssa, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %next.3.lcssa, metadata !5901, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.3.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.3.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.3.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.3.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8, !dbg !6231
  %.pre = load %struct.function*, %struct.function** @cfun, align 8, !dbg !5974
  %cfg9.phi.trans.insert = getelementptr inbounds %struct.function, %struct.function* %.pre, i64 0, i32 1, !dbg !6232
  %.pre7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg9.phi.trans.insert, align 8, !dbg !5974
  br label %for.cond7, !dbg !5974, !llvm.loop !6233

for.end416:                                       ; preds = %for.cond7
  %c.0.lcssa = phi %struct.insn_chain* [ %c.0, %for.cond7 ], !dbg !5976
  %p.0.lcssa = phi %struct.insn_chain** [ %p.0, %for.cond7 ], !dbg !5977
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.0.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.0.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.0.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.0.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.0.lcssa, metadata !5900, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata %struct.insn_chain** %p.0.lcssa, metadata !5877, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.value(metadata i32 0, metadata !5876, metadata !DIExpression()), !dbg !5953
  br label %for.cond417, !dbg !6235

for.cond417:                                      ; preds = %for.inc428, %for.end416
  %72 = phi i32 [ 0, %for.end416 ], [ %inc429, %for.inc428 ], !dbg !6237
  store i32 %72, i32* %i, align 4, !dbg !6237
  call void @llvm.dbg.value(metadata i32 %72, metadata !5876, metadata !DIExpression()), !dbg !5953
  %73 = load i32, i32* @max_regno, align 4, !dbg !6238
  %cmp418 = icmp ult i32 %72, %73, !dbg !6240
  br i1 %cmp418, label %for.body420, label %for.end430, !dbg !6241

for.body420:                                      ; preds = %for.cond417
  call void @llvm.dbg.value(metadata i32 %72, metadata !5876, metadata !DIExpression()), !dbg !5953
  %idxprom421 = zext i32 %72 to i64, !dbg !6242
  %arrayidx422 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %5, i64 %idxprom421, !dbg !6242
  %74 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx422, align 8, !dbg !6242
  %tobool423 = icmp eq %struct.simple_bitmap_def* %74, null, !dbg !6242
  br i1 %tobool423, label %for.inc428, label %if.then424, !dbg !6244

if.then424:                                       ; preds = %for.body420
  %75 = bitcast %struct.simple_bitmap_def* %74 to i8*, !dbg !6244
  call void @llvm.dbg.value(metadata i32 %72, metadata !5876, metadata !DIExpression()), !dbg !5953
  call void @free(i8* nonnull %75) #6, !dbg !6245
  %.pre9 = load i32, i32* %i, align 4, !dbg !6246
  br label %for.inc428, !dbg !6245

for.inc428:                                       ; preds = %for.body420, %if.then424
  %76 = phi i32 [ %72, %for.body420 ], [ %.pre9, %if.then424 ], !dbg !6246
  call void @llvm.dbg.value(metadata i32 %76, metadata !5876, metadata !DIExpression()), !dbg !5953
  %inc429 = add i32 %76, 1, !dbg !6246
  call void @llvm.dbg.value(metadata i32 %inc429, metadata !5876, metadata !DIExpression()), !dbg !5953
  br label %for.cond417, !dbg !6247, !llvm.loop !6248

for.end430:                                       ; preds = %for.cond417
  store %struct.insn_chain* %c.0.lcssa, %struct.insn_chain** @reload_insn_chain, align 8, !dbg !6250
  store %struct.insn_chain* null, %struct.insn_chain** %p.0.lcssa, align 8, !dbg !6251
  call void @free(i8* %call2) #6, !dbg !6252
  call void @free(i8* %call4) #6, !dbg !6253
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call) #6, !dbg !6254
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5902, metadata !DIExpression()), !dbg !5953
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %call1) #6, !dbg !6255
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* null, metadata !5903, metadata !DIExpression()), !dbg !5953
  %77 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !6256
  %tobool431 = icmp eq %struct._IO_FILE* %77, null, !dbg !6256
  br i1 %tobool431, label %if.end433, label %if.then432, !dbg !6258

if.then432:                                       ; preds = %for.end430
  call fastcc void @print_insn_chains(%struct._IO_FILE* nonnull %77) #7, !dbg !6259
  br label %if.end433, !dbg !6259

if.end433:                                        ; preds = %for.end430, %if.then432
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %0) #8, !dbg !6260
  ret void, !dbg !6260
}

declare dso_local i32 @reload(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @finish_subregs_of_mode() local_unnamed_addr #2

declare dso_local void @ira_finish_assign() local_unnamed_addr #2

declare dso_local void @ira_destroy() local_unnamed_addr #2

declare dso_local void @flow_loops_free(%struct.loops*) local_unnamed_addr #2

declare dso_local void @free_dominance_info(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @cleanup_cfg(i32) local_unnamed_addr #2

declare dso_local void @bitmap_obstack_release(%struct.bitmap_obstack*) local_unnamed_addr #2

declare dso_local void @df_finish_pass(i8 zeroext) local_unnamed_addr #2

declare dso_local void @df_scan_alloc(%struct.bitmap_head_def*) local_unnamed_addr #2

declare dso_local void @df_scan_blocks() local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_iuuBieie_stat(i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.basic_block_def*, i32, %struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @df_ref_change_reg_with_loc(i32, i32, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @rhs_regno(%struct.rtx_def* %x) unnamed_addr #0 !dbg !6261 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6268, metadata !DIExpression()), !dbg !6269
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6270
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !6270
  %0 = load i32, i32* %rt_uint, align 8, !dbg !6270
  ret i32 %0, !dbg !6271
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @recog_memoized(%struct.rtx_def* %insn) unnamed_addr #0 !dbg !6272 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn, metadata !6277, metadata !DIExpression()), !dbg !6278
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn, i64 0, i32 1, !dbg !6279
  %0 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 1, !dbg !6279
  %rt_int = bitcast %union.rtunion_def* %0 to i32*, !dbg !6279
  %1 = load i32, i32* %rt_int, align 8, !dbg !6279
  %cmp = icmp slt i32 %1, 0, !dbg !6281
  br i1 %cmp, label %if.then, label %if.end, !dbg !6282

if.then:                                          ; preds = %entry
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6283
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !6283
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6283
  %call = tail call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %insn, i32* null) #6, !dbg !6284
  store i32 %call, i32* %rt_int, align 8, !dbg !6285
  br label %if.end, !dbg !6286

if.end:                                           ; preds = %if.then, %entry
  %4 = phi i32 [ %call, %if.then ], [ %1, %entry ], !dbg !6287
  ret i32 %4, !dbg !6288
}

declare dso_local void @extract_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @constrain_operands(i32) local_unnamed_addr #2

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) local_unnamed_addr #2

declare dso_local i8* @xcalloc(i64, i64) local_unnamed_addr #2

declare dso_local i8* @ggc_alloc_cleared_stat(i64) local_unnamed_addr #2

declare dso_local void @init_alias_analysis() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @no_equiv(%struct.rtx_def* %reg, %struct.rtx_def* %store, i8* %data) #5 !dbg !6289 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !6293, metadata !DIExpression()), !dbg !6302
  call void @llvm.dbg.value(metadata %struct.rtx_def* %store, metadata !6294, metadata !DIExpression()), !dbg !6302
  call void @llvm.dbg.value(metadata i8* %data, metadata !6295, metadata !DIExpression()), !dbg !6302
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 0, !dbg !6303
  %bf.load = load i32, i32* %0, align 8, !dbg !6303
  %bf.clear = and i32 %bf.load, 65535, !dbg !6303
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !6303
  br i1 %cmp, label %if.end, label %cleanup.cont, !dbg !6305

if.end:                                           ; preds = %entry
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %reg) #7, !dbg !6306
  call void @llvm.dbg.value(metadata i32 %call, metadata !6296, metadata !DIExpression()), !dbg !6302
  %1 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6307
  %idxprom = sext i32 %call to i64, !dbg !6307
  %init_insns = getelementptr inbounds %struct.equivalence, %struct.equivalence* %1, i64 %idxprom, i32 2, !dbg !6308
  %2 = load %struct.rtx_def*, %struct.rtx_def** %init_insns, align 8, !dbg !6308
  call void @llvm.dbg.value(metadata %struct.rtx_def* %2, metadata !6297, metadata !DIExpression()), !dbg !6302
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !6309
  %cmp1 = icmp eq %struct.rtx_def* %2, %3, !dbg !6311
  br i1 %cmp1, label %cleanup.cont, label %if.end3, !dbg !6312

if.end3:                                          ; preds = %if.end
  %4 = ptrtoint %struct.rtx_def* %3 to i64, !dbg !6312
  %5 = bitcast %struct.rtx_def** %init_insns to i64*, !dbg !6313
  store i64 %4, i64* %5, align 8, !dbg !6313
  %6 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6314
  %replacement = getelementptr inbounds %struct.equivalence, %struct.equivalence* %6, i64 %idxprom, i32 0, !dbg !6315
  store %struct.rtx_def* null, %struct.rtx_def** %replacement, align 8, !dbg !6316
  %7 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6317
  %is_arg_equivalence = getelementptr inbounds %struct.equivalence, %struct.equivalence* %7, i64 %idxprom, i32 4, !dbg !6319
  %8 = load i32, i32* %is_arg_equivalence, align 4, !dbg !6319
  %tobool = icmp eq i32 %8, 0, !dbg !6317
  br i1 %tobool, label %if.end12, label %cleanup.cont, !dbg !6320

if.end12:                                         ; preds = %if.end3
  %9 = load %struct.rtx_def**, %struct.rtx_def*** @reg_equiv_init, align 8, !dbg !6321
  %arrayidx14 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %9, i64 %idxprom, !dbg !6321
  store %struct.rtx_def* null, %struct.rtx_def** %arrayidx14, align 8, !dbg !6322
  br label %for.cond, !dbg !6323

for.cond:                                         ; preds = %for.body, %if.end12
  %list.0 = phi %struct.rtx_def* [ %2, %if.end12 ], [ %12, %for.body ], !dbg !6302
  call void @llvm.dbg.value(metadata %struct.rtx_def* %list.0, metadata !6297, metadata !DIExpression()), !dbg !6302
  %tobool15 = icmp eq %struct.rtx_def* %list.0, null, !dbg !6324
  br i1 %tobool15, label %cleanup.cont.loopexit, label %for.body, !dbg !6324

for.body:                                         ; preds = %for.cond
  %arrayidx16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6325
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**, !dbg !6325
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6325
  call void @llvm.dbg.value(metadata %struct.rtx_def* %10, metadata !6298, metadata !DIExpression()), !dbg !6326
  %call17 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %10, i32 3, %struct.rtx_def* null) #6, !dbg !6327
  tail call void @remove_note(%struct.rtx_def* %10, %struct.rtx_def* %call17) #6, !dbg !6328
  %11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %list.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6329
  %rt_rtx21 = bitcast %union.rtunion_def* %11 to %struct.rtx_def**, !dbg !6329
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !6329
  call void @llvm.dbg.value(metadata %struct.rtx_def* %12, metadata !6297, metadata !DIExpression()), !dbg !6302
  br label %for.cond, !dbg !6330, !llvm.loop !6331

cleanup.cont.loopexit:                            ; preds = %for.cond
  br label %cleanup.cont, !dbg !6333

cleanup.cont:                                     ; preds = %cleanup.cont.loopexit, %if.end3, %entry, %if.end
  ret void, !dbg !6333
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ue_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @reg_preferred_class(i32) local_unnamed_addr #2

declare dso_local zeroext i8 @rtx_varies_p(%struct.rtx_def*, i8 zeroext) #2

declare dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local void @remove_note(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @validate_equiv_mem(%struct.rtx_def* %start, %struct.rtx_def* %reg, %struct.rtx_def* %memref) unnamed_addr #5 !dbg !6334 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %start, metadata !6338, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !6339, metadata !DIExpression()), !dbg !6343
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !6340, metadata !DIExpression()), !dbg !6343
  store %struct.rtx_def* %memref, %struct.rtx_def** @equiv_mem, align 8, !dbg !6344
  store i1 false, i1* @equiv_mem_modified, align 4, !dbg !6345
  %call = tail call i32 @side_effects_p(%struct.rtx_def* %memref) #6, !dbg !6346
  %tobool = icmp eq i32 %call, 0, !dbg !6346
  br i1 %tobool, label %for.cond.preheader, label %cleanup, !dbg !6348

for.cond.preheader:                               ; preds = %entry
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %memref, i64 0, i32 0, !dbg !6349
  br label %for.cond, !dbg !6354

for.cond:                                         ; preds = %for.cond.preheader, %for.inc74
  %insn.0 = phi %struct.rtx_def* [ %11, %for.inc74 ], [ %start, %for.cond.preheader ], !dbg !6355
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6341, metadata !DIExpression()), !dbg !6343
  %tobool1 = icmp eq %struct.rtx_def* %insn.0, null, !dbg !6356
  br i1 %tobool1, label %cleanup.loopexit1, label %land.rhs, !dbg !6357

land.rhs:                                         ; preds = %for.cond
  %.b = load i1, i1* @equiv_mem_modified, align 4, !dbg !6358
  br i1 %.b, label %cleanup.loopexit1, label %for.body, !dbg !6354

for.body:                                         ; preds = %land.rhs
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6359
  %bf.load = load i32, i32* %1, align 8, !dbg !6359
  %bf.clear = and i32 %bf.load, 65535, !dbg !6359
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !6359
  br i1 %cmp, label %if.end15, label %lor.lhs.false, !dbg !6359

lor.lhs.false:                                    ; preds = %for.body
  %cmp5 = icmp eq i32 %bf.clear, 7, !dbg !6359
  br i1 %cmp5, label %if.end15, label %lor.lhs.false6, !dbg !6359

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %cmp9 = icmp eq i32 %bf.clear, 9, !dbg !6359
  br i1 %cmp9, label %if.end15, label %lor.lhs.false10, !dbg !6359

lor.lhs.false10:                                  ; preds = %lor.lhs.false6
  %cmp13 = icmp eq i32 %bf.clear, 10, !dbg !6359
  br i1 %cmp13, label %if.end15, label %for.inc74, !dbg !6361

if.end15:                                         ; preds = %lor.lhs.false10, %lor.lhs.false6, %lor.lhs.false, %for.body
  %call16 = tail call %struct.rtx_def* @find_reg_note(%struct.rtx_def* nonnull %insn.0, i32 1, %struct.rtx_def* %reg) #6, !dbg !6362
  %tobool17 = icmp eq %struct.rtx_def* %call16, null, !dbg !6362
  br i1 %tobool17, label %if.end19, label %cleanup.loopexit1, !dbg !6364

if.end19:                                         ; preds = %if.end15
  %bf.load20 = load i32, i32* %1, align 8, !dbg !6365
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !6365
  %cmp22 = icmp eq i32 %bf.clear21, 10, !dbg !6365
  br i1 %cmp22, label %land.lhs.true, label %if.end36, !dbg !6366

land.lhs.true:                                    ; preds = %if.end19
  %bf.load23 = load i32, i32* %0, align 8, !dbg !6367
  %bf.clear24 = and i32 %bf.load23, 67108864, !dbg !6367
  %tobool25 = icmp eq i32 %bf.clear24, 0, !dbg !6367
  br i1 %tobool25, label %land.lhs.true26, label %if.end36, !dbg !6368

land.lhs.true26:                                  ; preds = %land.lhs.true
  %bf.clear29 = and i32 %bf.load20, 67108864, !dbg !6369
  %tobool30 = icmp eq i32 %bf.clear29, 0, !dbg !6369
  br i1 %tobool30, label %lor.lhs.false31, label %if.end36, !dbg !6369

lor.lhs.false31:                                  ; preds = %land.lhs.true26
  %tobool34 = icmp slt i32 %bf.load20, 0, !dbg !6369
  br i1 %tobool34, label %if.end36, label %cleanup.loopexit1, !dbg !6370

if.end36:                                         ; preds = %land.lhs.true26, %land.lhs.true, %lor.lhs.false31, %if.end19
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6371
  %2 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 0, !dbg !6371
  %rt_rtx = bitcast %union.rtunion_def* %2 to %struct.rtx_def**, !dbg !6371
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6371
  tail call void @note_stores(%struct.rtx_def* %3, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @validate_equiv_mem_from_store, i8* null) #6, !dbg !6372
  %4 = getelementptr inbounds %union.u, %union.u* %u, i64 1, i32 0, i32 0, i64 2, !dbg !6373
  br label %for.cond41, !dbg !6375

for.cond41:                                       ; preds = %for.inc, %if.end36
  %note.0.in.in = phi %union.rtunion_def* [ %4, %if.end36 ], [ %9, %for.inc ]
  %note.0.in = bitcast %union.rtunion_def* %note.0.in.in to %struct.rtx_def**, !dbg !6376
  %note.0 = load %struct.rtx_def*, %struct.rtx_def** %note.0.in, align 8, !dbg !6376
  call void @llvm.dbg.value(metadata %struct.rtx_def* %note.0, metadata !6342, metadata !DIExpression()), !dbg !6343
  %tobool42 = icmp eq %struct.rtx_def* %note.0, null, !dbg !6377
  br i1 %tobool42, label %for.inc74.loopexit, label %for.body43, !dbg !6377

for.body43:                                       ; preds = %for.cond41
  %5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 0, !dbg !6378
  %bf.load44 = load i32, i32* %5, align 8, !dbg !6378
  %bf.clear46 = and i32 %bf.load44, 16711680, !dbg !6378
  %cmp47 = icmp eq i32 %bf.clear46, 131072, !dbg !6381
  br i1 %cmp47, label %land.lhs.true53, label %lor.lhs.false48, !dbg !6382

lor.lhs.false48:                                  ; preds = %for.body43
  %cmp52 = icmp eq i32 %bf.clear46, 65536, !dbg !6383
  br i1 %cmp52, label %land.lhs.true53, label %for.inc, !dbg !6384

land.lhs.true53:                                  ; preds = %lor.lhs.false48, %for.body43
  %arrayidx56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6385
  %6 = bitcast %union.rtunion_def* %arrayidx56 to i32**, !dbg !6385
  %7 = load i32*, i32** %6, align 8, !dbg !6385
  %bf.load58 = load i32, i32* %7, align 8, !dbg !6385
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !6385
  %cmp60 = icmp eq i32 %bf.clear59, 37, !dbg !6385
  br i1 %cmp60, label %land.lhs.true61, label %for.inc, !dbg !6386

land.lhs.true61:                                  ; preds = %land.lhs.true53
  %8 = bitcast i32* %7 to %struct.rtx_def*, !dbg !6386
  %call66 = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %8, %struct.rtx_def* %memref) #6, !dbg !6387
  %tobool67 = icmp eq i32 %call66, 0, !dbg !6387
  br i1 %tobool67, label %for.inc, label %cleanup.loopexit, !dbg !6388

for.inc:                                          ; preds = %land.lhs.true61, %lor.lhs.false48, %land.lhs.true53
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %note.0, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6389
  br label %for.cond41, !dbg !6390, !llvm.loop !6391

for.inc74.loopexit:                               ; preds = %for.cond41
  br label %for.inc74, !dbg !6393

for.inc74:                                        ; preds = %for.inc74.loopexit, %lor.lhs.false10
  %10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6393
  %rt_rtx78 = bitcast %union.rtunion_def* %10 to %struct.rtx_def**, !dbg !6393
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !6393
  call void @llvm.dbg.value(metadata %struct.rtx_def* %11, metadata !6341, metadata !DIExpression()), !dbg !6343
  br label %for.cond, !dbg !6394, !llvm.loop !6395

cleanup.loopexit:                                 ; preds = %land.lhs.true61
  br label %cleanup, !dbg !6397

cleanup.loopexit1:                                ; preds = %land.rhs, %lor.lhs.false31, %for.cond, %if.end15
  %retval.0.ph = phi i32 [ 0, %land.rhs ], [ 0, %for.cond ], [ 0, %lor.lhs.false31 ], [ 1, %if.end15 ]
  br label %cleanup, !dbg !6397

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ 0, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !6343
  ret i32 %retval.0, !dbg !6397
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @REG_N_REFS(i32 %regno) unnamed_addr #0 !dbg !6398 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !6400, metadata !DIExpression()), !dbg !6401
  %0 = load %struct.regstat_n_sets_and_refs_t*, %struct.regstat_n_sets_and_refs_t** @regstat_n_sets_and_refs, align 8, !dbg !6402
  %idxprom = sext i32 %regno to i64, !dbg !6402
  %refs = getelementptr inbounds %struct.regstat_n_sets_and_refs_t, %struct.regstat_n_sets_and_refs_t* %0, i64 %idxprom, i32 1, !dbg !6403
  %1 = load i32, i32* %refs, align 4, !dbg !6403
  ret i32 %1, !dbg !6404
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %x) unnamed_addr #5 !dbg !6405 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6407, metadata !DIExpression()), !dbg !6417
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6418
  %bf.load = load i32, i32* %0, align 8, !dbg !6418
  %bf.clear = and i32 %bf.load, 65535, !dbg !6418
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6408, metadata !DIExpression()), !dbg !6417
  %trunc = trunc i32 %bf.load to i16, !dbg !6419
  switch i16 %trunc, label %sw.epilog [
    i16 43, label %sw.bb
    i16 35, label %cleanup68
    i16 30, label %cleanup68
    i16 32, label %cleanup68
    i16 31, label %cleanup68
    i16 33, label %cleanup68
    i16 45, label %cleanup68
    i16 44, label %cleanup68
    i16 37, label %sw.bb5
    i16 17, label %sw.bb12
  ], !dbg !6419

sw.bb:                                            ; preds = %entry
  %bf.clear2 = and i32 %bf.load, 67108864, !dbg !6420
  %tobool = icmp eq i32 %bf.clear2, 0, !dbg !6420
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !6422

lor.rhs:                                          ; preds = %sw.bb
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6423
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6423
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6423
  %call = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %1) #7, !dbg !6424
  %tobool3 = icmp ne i32 %call, 0, !dbg !6422
  %phitmp1 = zext i1 %tobool3 to i32, !dbg !6422
  br label %lor.end, !dbg !6422

lor.end:                                          ; preds = %sw.bb, %lor.rhs
  %2 = phi i32 [ 1, %sw.bb ], [ %phitmp1, %lor.rhs ]
  br label %cleanup68, !dbg !6425

sw.bb5:                                           ; preds = %entry
  %3 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6426
  %call6 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !6427
  %idxprom = zext i32 %call6 to i64, !dbg !6426
  %replace = getelementptr inbounds %struct.equivalence, %struct.equivalence* %3, i64 %idxprom, i32 5, !dbg !6428
  %4 = load i8, i8* %replace, align 8, !dbg !6428
  %cmp = icmp eq i8 %4, 0, !dbg !6429
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6430

land.rhs:                                         ; preds = %sw.bb5
  %call9 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %x, i8 zeroext 0) #6, !dbg !6431
  %tobool11 = icmp ne i8 %call9, 0, !dbg !6430
  %phitmp = zext i1 %tobool11 to i32
  br label %land.end

land.end:                                         ; preds = %land.rhs, %sw.bb5
  %5 = phi i32 [ 0, %sw.bb5 ], [ %phitmp, %land.rhs ]
  br label %cleanup68, !dbg !6432

sw.bb12:                                          ; preds = %entry
  %bf.clear15 = and i32 %bf.load, 134217728, !dbg !6433
  %tobool16 = icmp eq i32 %bf.clear15, 0, !dbg !6433
  br i1 %tobool16, label %sw.epilog, label %cleanup68, !dbg !6435

sw.epilog:                                        ; preds = %sw.bb12, %entry
  %idxprom17 = zext i32 %bf.clear to i64, !dbg !6436
  %arrayidx18 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom17, !dbg !6436
  %6 = load i8*, i8** %arrayidx18, align 8, !dbg !6436
  call void @llvm.dbg.value(metadata i8* %6, metadata !6410, metadata !DIExpression()), !dbg !6417
  %arrayidx20 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom17, !dbg !6437
  %7 = load i8, i8* %arrayidx20, align 1, !dbg !6437
  call void @llvm.dbg.value(metadata i8 %7, metadata !6409, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6417
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !6438
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !6438
  %8 = zext i8 %7 to i64, !dbg !6441
  br label %for.cond, !dbg !6441

for.cond:                                         ; preds = %for.inc66, %sw.epilog
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc66 ], [ %8, %sw.epilog ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !6442
  call void @llvm.dbg.value(metadata i32 undef, metadata !6409, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6417
  %cmp22 = icmp sgt i64 %indvars.iv2, 0, !dbg !6443
  br i1 %cmp22, label %for.body, label %cleanup68.loopexit, !dbg !6444

for.body:                                         ; preds = %for.cond
  %arrayidx25 = getelementptr inbounds i8, i8* %6, i64 %indvars.iv.next3, !dbg !6445
  %9 = load i8, i8* %arrayidx25, align 1, !dbg !6445
  %cmp27 = icmp eq i8 %9, 101, !dbg !6446
  br i1 %cmp27, label %if.then29, label %if.else, !dbg !6447

if.then29:                                        ; preds = %for.body
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 %indvars.iv.next3, !dbg !6438
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !6438
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !6438
  %call35 = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %10) #7, !dbg !6448
  %tobool36 = icmp eq i32 %call35, 0, !dbg !6448
  br i1 %tobool36, label %for.inc66, label %cleanup68.loopexit, !dbg !6449

if.else:                                          ; preds = %for.body
  %cmp42 = icmp eq i8 %9, 69, !dbg !6450
  br i1 %cmp42, label %for.cond45.preheader, label %for.inc66, !dbg !6451

for.cond45.preheader:                             ; preds = %if.else
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 %indvars.iv.next3, !dbg !6452
  %rt_rtvec57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtvec_def**, !dbg !6452
  br label %for.cond45, !dbg !6456

for.cond45:                                       ; preds = %for.cond45.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.cond45.preheader ], [ %indvars.iv.next, %for.inc ], !dbg !6457
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6411, metadata !DIExpression()), !dbg !6458
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec57, align 8, !dbg !6459
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 0, !dbg !6459
  %12 = load i32, i32* %num_elem, align 8, !dbg !6459
  %13 = sext i32 %12 to i64, !dbg !6460
  %cmp50 = icmp slt i64 %indvars.iv, %13, !dbg !6460
  br i1 %cmp50, label %for.body52, label %cleanup, !dbg !6456

for.body52:                                       ; preds = %for.cond45
  %arrayidx59 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 1, i64 %indvars.iv, !dbg !6452
  %14 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx59, align 8, !dbg !6452
  %call60 = tail call fastcc i32 @equiv_init_varies_p(%struct.rtx_def* %14) #7, !dbg !6461
  %tobool61 = icmp eq i32 %call60, 0, !dbg !6461
  br i1 %tobool61, label %for.inc, label %cleanup, !dbg !6462

for.inc:                                          ; preds = %for.body52
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1, !dbg !6463
  call void @llvm.dbg.value(metadata i32 undef, metadata !6411, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6458
  br label %for.cond45, !dbg !6464, !llvm.loop !6465

cleanup:                                          ; preds = %for.body52, %for.cond45
  %cleanup.dest.slot.0 = phi i1 [ false, %for.body52 ], [ true, %for.cond45 ]
  br i1 %cleanup.dest.slot.0, label %for.inc66, label %cleanup68.loopexit

for.inc66:                                        ; preds = %if.then29, %cleanup, %if.else
  call void @llvm.dbg.value(metadata i32 undef, metadata !6409, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6417
  br label %for.cond, !dbg !6467, !llvm.loop !6468

cleanup68.loopexit:                               ; preds = %cleanup, %for.cond, %if.then29
  %retval.4.ph = phi i32 [ 0, %for.cond ], [ 1, %if.then29 ], [ 1, %cleanup ]
  br label %cleanup68, !dbg !6470

cleanup68:                                        ; preds = %cleanup68.loopexit, %sw.bb12, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %land.end, %lor.end
  %retval.4 = phi i32 [ %5, %land.end ], [ %2, %lor.end ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 1, %sw.bb12 ], [ %retval.4.ph, %cleanup68.loopexit ], !dbg !6417
  ret i32 %retval.4, !dbg !6470
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @equiv_init_movable_p(%struct.rtx_def* %x, i32 %regno) unnamed_addr #5 !dbg !6471 {
entry:
  br label %tailrecurse, !dbg !6481

tailrecurse:                                      ; preds = %sw.bb, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %2, %sw.bb ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !6475, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata i32 %regno, metadata !6476, metadata !DIExpression()), !dbg !6483
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !6484
  %bf.load = load i32, i32* %0, align 8, !dbg !6484
  %trunc = trunc i32 %bf.load to i16, !dbg !6485
  switch i16 %trunc, label %sw.epilog.loopexit [
    i16 23, label %sw.bb
    i16 46, label %cleanup.loopexit2
    i16 25, label %cleanup.loopexit2
    i16 75, label %cleanup.loopexit2
    i16 74, label %cleanup.loopexit2
    i16 77, label %cleanup.loopexit2
    i16 76, label %cleanup.loopexit2
    i16 78, label %cleanup.loopexit2
    i16 79, label %cleanup.loopexit2
    i16 37, label %sw.bb3
    i16 19, label %cleanup.loopexit2
    i16 17, label %sw.bb20
  ], !dbg !6485

sw.bb:                                            ; preds = %tailrecurse
  %1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6486
  %rt_rtx = bitcast %union.rtunion_def* %1 to %struct.rtx_def**, !dbg !6486
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6486
  br label %tailrecurse, !dbg !6481

sw.bb3:                                           ; preds = %tailrecurse
  %x.tr.lcssa28 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa28, metadata !6475, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa28, metadata !6475, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa28, metadata !6475, metadata !DIExpression()), !dbg !6483
  %3 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6487
  %call4 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa28) #7, !dbg !6488
  %idxprom = zext i32 %call4 to i64, !dbg !6487
  %loop_depth = getelementptr inbounds %struct.equivalence, %struct.equivalence* %3, i64 %idxprom, i32 3, !dbg !6489
  %4 = load i32, i32* %loop_depth, align 8, !dbg !6489
  %5 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6490
  %idxprom6 = sext i32 %regno to i64, !dbg !6490
  %loop_depth8 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %5, i64 %idxprom6, i32 3, !dbg !6491
  %6 = load i32, i32* %loop_depth8, align 8, !dbg !6491
  %cmp = icmp slt i32 %4, %6, !dbg !6492
  br i1 %cmp, label %lor.rhs, label %land.lhs.true, !dbg !6493

land.lhs.true:                                    ; preds = %sw.bb3
  %call9 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa28) #7, !dbg !6494
  %idxprom10 = zext i32 %call9 to i64, !dbg !6495
  %replace = getelementptr inbounds %struct.equivalence, %struct.equivalence* %5, i64 %idxprom10, i32 5, !dbg !6496
  %7 = load i8, i8* %replace, align 8, !dbg !6496
  %tobool = icmp eq i8 %7, 0, !dbg !6495
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6497

lor.rhs:                                          ; preds = %land.lhs.true, %sw.bb3
  %8 = load %struct.reg_info_t*, %struct.reg_info_t** @reg_info_p, align 8, !dbg !6498
  %call12 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa28) #7, !dbg !6498
  %idxprom13 = zext i32 %call12 to i64, !dbg !6498
  %basic_block = getelementptr inbounds %struct.reg_info_t, %struct.reg_info_t* %8, i64 %idxprom13, i32 6, !dbg !6498
  %9 = load i32, i32* %basic_block, align 4, !dbg !6498
  %cmp15 = icmp slt i32 %9, 2, !dbg !6499
  br i1 %cmp15, label %land.rhs, label %lor.end, !dbg !6500

land.rhs:                                         ; preds = %lor.rhs
  %call17 = tail call zeroext i8 @rtx_varies_p(%struct.rtx_def* %x.tr.lcssa28, i8 zeroext 0) #6, !dbg !6501
  %tobool18 = icmp eq i8 %call17, 0, !dbg !6502
  %phitmp = zext i1 %tobool18 to i32
  br label %lor.end

lor.end:                                          ; preds = %land.lhs.true, %lor.rhs, %land.rhs
  %10 = phi i32 [ 1, %land.lhs.true ], [ 0, %lor.rhs ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !6503

sw.bb20:                                          ; preds = %tailrecurse
  %x.tr.lcssa29 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  %bf.load.lcssa25 = phi i32 [ %bf.load, %tailrecurse ], !dbg !6484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa29, metadata !6475, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa29, metadata !6475, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa29, metadata !6475, metadata !DIExpression()), !dbg !6483
  %bf.clear22 = and i32 %bf.load.lcssa25, 134217728, !dbg !6504
  %tobool23 = icmp eq i32 %bf.clear22, 0, !dbg !6504
  br i1 %tobool23, label %sw.epilog, label %cleanup, !dbg !6506

sw.epilog.loopexit:                               ; preds = %tailrecurse
  %x.tr.lcssa = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  %bf.load.lcssa = phi i32 [ %bf.load, %tailrecurse ], !dbg !6484
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !6475, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !6475, metadata !DIExpression()), !dbg !6483
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !6475, metadata !DIExpression()), !dbg !6483
  br label %sw.epilog, !dbg !6507

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb20
  %x.tr30 = phi %struct.rtx_def* [ %x.tr.lcssa, %sw.epilog.loopexit ], [ %x.tr.lcssa29, %sw.bb20 ]
  %bf.load26 = phi i32 [ %bf.load.lcssa, %sw.epilog.loopexit ], [ %bf.load.lcssa25, %sw.bb20 ]
  %bf.clear6 = and i32 %bf.load26, 65535, !dbg !6484
  %idxprom24 = zext i32 %bf.clear6 to i64, !dbg !6507
  %arrayidx25 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom24, !dbg !6507
  %11 = load i8*, i8** %arrayidx25, align 8, !dbg !6507
  call void @llvm.dbg.value(metadata i8* %11, metadata !6479, metadata !DIExpression()), !dbg !6483
  %arrayidx27 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom24, !dbg !6508
  %12 = load i8, i8* %arrayidx27, align 1, !dbg !6508
  call void @llvm.dbg.value(metadata i8 %12, metadata !6477, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6483
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr30, i64 0, i32 1, !dbg !6510
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !6510
  %13 = zext i8 %12 to i64, !dbg !6514
  br label %for.cond, !dbg !6514

for.cond:                                         ; preds = %for.inc66, %sw.epilog
  %indvars.iv21 = phi i64 [ %indvars.iv.next22, %for.inc66 ], [ %13, %sw.epilog ]
  %indvars.iv.next22 = add nsw i64 %indvars.iv21, -1, !dbg !6515
  call void @llvm.dbg.value(metadata i32 undef, metadata !6477, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6483
  %cmp29 = icmp sgt i64 %indvars.iv21, 0, !dbg !6516
  br i1 %cmp29, label %for.body, label %cleanup.loopexit1, !dbg !6517

for.body:                                         ; preds = %for.cond
  %arrayidx32 = getelementptr inbounds i8, i8* %11, i64 %indvars.iv.next22, !dbg !6518
  %14 = load i8, i8* %arrayidx32, align 1, !dbg !6518
  %conv33 = sext i8 %14 to i32, !dbg !6518
  switch i32 %conv33, label %for.inc66 [
    i32 101, label %sw.bb34
    i32 69, label %sw.bb44
  ], !dbg !6519

sw.bb34:                                          ; preds = %for.body
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 %indvars.iv.next22, !dbg !6520
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !6520
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !6520
  %call40 = tail call fastcc i32 @equiv_init_movable_p(%struct.rtx_def* %15, i32 %regno) #7, !dbg !6522
  %tobool41 = icmp eq i32 %call40, 0, !dbg !6522
  br i1 %tobool41, label %cleanup.loopexit1, label %for.inc66, !dbg !6523

sw.bb44:                                          ; preds = %for.body
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 %indvars.iv.next22, !dbg !6524
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtvec_def**, !dbg !6524
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6524
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i64 0, i32 0, !dbg !6524
  %17 = load i32, i32* %num_elem, align 8, !dbg !6524
  call void @llvm.dbg.value(metadata i32 %17, metadata !6478, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6483
  %18 = sext i32 %17 to i64, !dbg !6525
  br label %for.cond50, !dbg !6525

for.cond50:                                       ; preds = %for.inc, %sw.bb44
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %18, %sw.bb44 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6510
  call void @llvm.dbg.value(metadata i32 undef, metadata !6478, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6483
  %cmp51 = icmp sgt i64 %indvars.iv, 0, !dbg !6526
  br i1 %cmp51, label %for.body53, label %for.inc66.loopexit, !dbg !6528

for.body53:                                       ; preds = %for.cond50
  %19 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6529
  %arrayidx60 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %19, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6529
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx60, align 8, !dbg !6529
  %call61 = tail call fastcc i32 @equiv_init_movable_p(%struct.rtx_def* %20, i32 %regno) #7, !dbg !6531
  %tobool62 = icmp eq i32 %call61, 0, !dbg !6531
  br i1 %tobool62, label %cleanup.loopexit, label %for.inc, !dbg !6532

for.inc:                                          ; preds = %for.body53
  call void @llvm.dbg.value(metadata i32 undef, metadata !6478, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6483
  br label %for.cond50, !dbg !6533, !llvm.loop !6534

for.inc66.loopexit:                               ; preds = %for.cond50
  br label %for.inc66, !dbg !6536

for.inc66:                                        ; preds = %for.inc66.loopexit, %sw.bb34, %for.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !6477, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6483
  br label %for.cond, !dbg !6536, !llvm.loop !6537

cleanup.loopexit:                                 ; preds = %for.body53
  br label %cleanup, !dbg !6539

cleanup.loopexit1:                                ; preds = %for.cond, %sw.bb34
  %retval.0.ph = phi i32 [ 1, %for.cond ], [ 0, %sw.bb34 ]
  br label %cleanup, !dbg !6539

cleanup.loopexit2:                                ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse
  br label %cleanup, !dbg !6539

cleanup:                                          ; preds = %cleanup.loopexit2, %cleanup.loopexit1, %cleanup.loopexit, %sw.bb20, %lor.end
  %retval.0 = phi i32 [ %10, %lor.end ], [ 0, %sw.bb20 ], [ 0, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], [ 0, %cleanup.loopexit2 ], !dbg !6483
  ret i32 %retval.0, !dbg !6539
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @contains_replace_regs(%struct.rtx_def* %x) unnamed_addr #5 !dbg !6540 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x, metadata !6542, metadata !DIExpression()), !dbg !6547
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 0, !dbg !6548
  %bf.load = load i32, i32* %0, align 8, !dbg !6548
  call void @llvm.dbg.value(metadata i32 %bf.load, metadata !6546, metadata !DIExpression(DW_OP_constu, 65535, DW_OP_and, DW_OP_stack_value)), !dbg !6547
  %trunc = trunc i32 %bf.load to i16, !dbg !6549
  switch i16 %trunc, label %sw.epilog [
    i16 30, label %cleanup
    i16 35, label %cleanup
    i16 44, label %cleanup
    i16 45, label %cleanup
    i16 32, label %cleanup
    i16 31, label %cleanup
    i16 33, label %cleanup
    i16 36, label %cleanup
    i16 46, label %cleanup
    i16 121, label %cleanup
    i16 37, label %sw.bb1
  ], !dbg !6549

sw.bb1:                                           ; preds = %entry
  %1 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6550
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x) #7, !dbg !6552
  %idxprom = zext i32 %call to i64, !dbg !6550
  %replace = getelementptr inbounds %struct.equivalence, %struct.equivalence* %1, i64 %idxprom, i32 5, !dbg !6553
  %2 = load i8, i8* %replace, align 8, !dbg !6553
  %conv = sext i8 %2 to i32, !dbg !6550
  br label %cleanup, !dbg !6554

sw.epilog:                                        ; preds = %entry
  %bf.clear = and i32 %bf.load, 65535, !dbg !6548
  call void @llvm.dbg.value(metadata i32 %bf.clear, metadata !6546, metadata !DIExpression()), !dbg !6547
  %idxprom2 = zext i32 %bf.clear to i64, !dbg !6555
  %arrayidx3 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom2, !dbg !6555
  %3 = load i8*, i8** %arrayidx3, align 8, !dbg !6555
  call void @llvm.dbg.value(metadata i8* %3, metadata !6545, metadata !DIExpression()), !dbg !6547
  %arrayidx5 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom2, !dbg !6556
  %4 = load i8, i8* %arrayidx5, align 1, !dbg !6556
  call void @llvm.dbg.value(metadata i8 %4, metadata !6543, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6547
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x, i64 0, i32 1, !dbg !6558
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !6558
  %5 = zext i8 %4 to i64, !dbg !6562
  br label %for.cond, !dbg !6562

for.cond:                                         ; preds = %for.inc37, %sw.epilog
  %indvars.iv2 = phi i64 [ %indvars.iv.next3, %for.inc37 ], [ %5, %sw.epilog ]
  %indvars.iv.next3 = add nsw i64 %indvars.iv2, -1, !dbg !6563
  call void @llvm.dbg.value(metadata i32 undef, metadata !6543, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6547
  %cmp = icmp sgt i64 %indvars.iv2, 0, !dbg !6564
  br i1 %cmp, label %for.body, label %cleanup.loopexit1, !dbg !6565

for.body:                                         ; preds = %for.cond
  %arrayidx9 = getelementptr inbounds i8, i8* %3, i64 %indvars.iv.next3, !dbg !6566
  %6 = load i8, i8* %arrayidx9, align 1, !dbg !6566
  %conv10 = sext i8 %6 to i32, !dbg !6566
  switch i32 %conv10, label %for.inc37 [
    i32 101, label %sw.bb11
    i32 69, label %sw.bb15
  ], !dbg !6567

sw.bb11:                                          ; preds = %for.body
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 %indvars.iv.next3, !dbg !6568
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !6568
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6568
  %call14 = tail call fastcc i32 @contains_replace_regs(%struct.rtx_def* %7) #7, !dbg !6570
  %tobool = icmp eq i32 %call14, 0, !dbg !6570
  br i1 %tobool, label %for.inc37, label %cleanup.loopexit1, !dbg !6571

sw.bb15:                                          ; preds = %for.body
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 %indvars.iv.next3, !dbg !6572
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**, !dbg !6572
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6572
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i64 0, i32 0, !dbg !6572
  %9 = load i32, i32* %num_elem, align 8, !dbg !6572
  call void @llvm.dbg.value(metadata i32 %9, metadata !6544, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6547
  %10 = sext i32 %9 to i64, !dbg !6573
  br label %for.cond21, !dbg !6573

for.cond21:                                       ; preds = %for.inc, %sw.bb15
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %10, %sw.bb15 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6558
  call void @llvm.dbg.value(metadata i32 undef, metadata !6544, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6547
  %cmp22 = icmp sgt i64 %indvars.iv, 0, !dbg !6574
  br i1 %cmp22, label %for.body24, label %for.inc37.loopexit, !dbg !6576

for.body24:                                       ; preds = %for.cond21
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6577
  %arrayidx31 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6577
  %12 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8, !dbg !6577
  %call32 = tail call fastcc i32 @contains_replace_regs(%struct.rtx_def* %12) #7, !dbg !6579
  %tobool33 = icmp eq i32 %call32, 0, !dbg !6579
  br i1 %tobool33, label %for.inc, label %cleanup.loopexit, !dbg !6580

for.inc:                                          ; preds = %for.body24
  call void @llvm.dbg.value(metadata i32 undef, metadata !6544, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6547
  br label %for.cond21, !dbg !6581, !llvm.loop !6582

for.inc37.loopexit:                               ; preds = %for.cond21
  br label %for.inc37, !dbg !6584

for.inc37:                                        ; preds = %for.inc37.loopexit, %sw.bb11, %for.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !6543, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6547
  br label %for.cond, !dbg !6584, !llvm.loop !6585

cleanup.loopexit:                                 ; preds = %for.body24
  br label %cleanup, !dbg !6587

cleanup.loopexit1:                                ; preds = %for.cond, %sw.bb11
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %sw.bb11 ]
  br label %cleanup, !dbg !6587

cleanup:                                          ; preds = %cleanup.loopexit1, %cleanup.loopexit, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %sw.bb1
  %retval.0 = phi i32 [ %conv, %sw.bb1 ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 0, %entry ], [ 1, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], !dbg !6547
  ret i32 %retval.0, !dbg !6587
}

; Function Attrs: nounwind uwtable
define internal fastcc i32 @memref_used_between_p(%struct.rtx_def* %memref, %struct.rtx_def* %start, %struct.rtx_def* %end) unnamed_addr #5 !dbg !6588 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !6590, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata %struct.rtx_def* %start, metadata !6591, metadata !DIExpression()), !dbg !6594
  call void @llvm.dbg.value(metadata %struct.rtx_def* %end, metadata !6592, metadata !DIExpression()), !dbg !6594
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %end, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6595
  %rt_rtx4 = bitcast %union.rtunion_def* %0 to %struct.rtx_def**, !dbg !6595
  br label %for.cond, !dbg !6598

for.cond:                                         ; preds = %for.inc, %entry
  %start.pn = phi %struct.rtx_def* [ %start, %entry ], [ %insn.0, %for.inc ]
  %insn.0.in.in = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %start.pn, i64 0, i32 1, i32 0, i32 0, i64 2, !dbg !6599
  %insn.0.in = bitcast %union.rtunion_def* %insn.0.in.in to %struct.rtx_def**, !dbg !6599
  %insn.0 = load %struct.rtx_def*, %struct.rtx_def** %insn.0.in, align 8, !dbg !6599
  call void @llvm.dbg.value(metadata %struct.rtx_def* %insn.0, metadata !6593, metadata !DIExpression()), !dbg !6594
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !6600
  %cmp = icmp eq %struct.rtx_def* %insn.0, %1, !dbg !6601
  br i1 %cmp, label %cleanup, label %for.body, !dbg !6602

for.body:                                         ; preds = %for.cond
  %2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 0, !dbg !6603
  %bf.load = load i32, i32* %2, align 8, !dbg !6603
  %bf.clear = and i32 %bf.load, 65535, !dbg !6603
  %cmp5 = icmp eq i32 %bf.clear, 8, !dbg !6603
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false, !dbg !6603

lor.lhs.false:                                    ; preds = %for.body
  %cmp8 = icmp eq i32 %bf.clear, 7, !dbg !6603
  br i1 %cmp8, label %land.lhs.true, label %lor.lhs.false9, !dbg !6603

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %cmp12 = icmp eq i32 %bf.clear, 9, !dbg !6603
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false13, !dbg !6603

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %cmp16 = icmp eq i32 %bf.clear, 10, !dbg !6603
  br i1 %cmp16, label %land.lhs.true, label %for.inc, !dbg !6603

land.lhs.true:                                    ; preds = %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false, %for.body
  %cmp19 = icmp eq i32 %bf.clear, 7, !dbg !6603
  br i1 %cmp19, label %for.inc, label %if.end, !dbg !6606

if.end:                                           ; preds = %land.lhs.true
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %insn.0, i64 0, i32 1, !dbg !6607
  %3 = getelementptr inbounds %union.u, %union.u* %u20, i64 1, i32 0, i32 0, i64 0, !dbg !6607
  %rt_rtx23 = bitcast %union.rtunion_def* %3 to %struct.rtx_def**, !dbg !6607
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !6607
  %call = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %4) #7, !dbg !6609
  %tobool = icmp eq i32 %call, 0, !dbg !6609
  br i1 %tobool, label %if.end25, label %cleanup, !dbg !6610

if.end25:                                         ; preds = %if.end
  %bf.load26 = load i32, i32* %2, align 8, !dbg !6611
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !6611
  %cmp28 = icmp eq i32 %bf.clear27, 10, !dbg !6611
  br i1 %cmp28, label %land.lhs.true29, label %for.inc, !dbg !6613

land.lhs.true29:                                  ; preds = %if.end25
  %bf.clear31 = and i32 %bf.load26, 67108864, !dbg !6614
  %tobool32 = icmp eq i32 %bf.clear31, 0, !dbg !6614
  br i1 %tobool32, label %cleanup, label %for.inc, !dbg !6615

for.inc:                                          ; preds = %land.lhs.true29, %if.end25, %lor.lhs.false13, %land.lhs.true
  br label %for.cond, !dbg !6616, !llvm.loop !6617

cleanup:                                          ; preds = %land.lhs.true29, %if.end, %for.cond
  %retval.0 = phi i32 [ 1, %if.end ], [ 1, %land.lhs.true29 ], [ 0, %for.cond ], !dbg !6594
  ret i32 %retval.0, !dbg !6619
}

declare dso_local void @df_notes_rescan(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @asm_noperands(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @validate_replace_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @remove_death(i32, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @prev_nondebug_insn(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local %struct.rtx_def* @emit_insn_before(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @bitmap_and_compl_into(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc %struct.df_live_bb_info* @df_live_get_bb_info(i32 %index) unnamed_addr #0 !dbg !6620 {
entry:
  call void @llvm.dbg.value(metadata i32 %index, metadata !6624, metadata !DIExpression()), !dbg !6625
  %0 = load %struct.df*, %struct.df** @df, align 8, !dbg !6626
  %arrayidx = getelementptr inbounds %struct.df, %struct.df* %0, i64 0, i32 1, i64 2, !dbg !6626
  %1 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !6626
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 2, !dbg !6628
  %2 = load i32, i32* %block_info_size, align 8, !dbg !6628
  %cmp = icmp ugt i32 %2, %index, !dbg !6629
  br i1 %cmp, label %if.then, label %return, !dbg !6630

if.then:                                          ; preds = %entry
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %1, i64 0, i32 1, !dbg !6631
  %3 = load i8**, i8*** %block_info, align 8, !dbg !6631
  %idxprom = zext i32 %index to i64, !dbg !6632
  %arrayidx3 = getelementptr inbounds i8*, i8** %3, i64 %idxprom, !dbg !6632
  %4 = bitcast i8** %arrayidx3 to %struct.df_live_bb_info**, !dbg !6632
  %5 = load %struct.df_live_bb_info*, %struct.df_live_bb_info** %4, align 8, !dbg !6632
  br label %return, !dbg !6633

return:                                           ; preds = %entry, %if.then
  %retval.0 = phi %struct.df_live_bb_info* [ %5, %if.then ], [ null, %entry ], !dbg !6634
  ret %struct.df_live_bb_info* %retval.0, !dbg !6635
}

declare dso_local %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal %struct.rtx_def* @adjust_cleared_regs(%struct.rtx_def* %loc, %struct.rtx_def* %old_rtx, i8* %data) #5 !dbg !6636 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %loc, metadata !6640, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.value(metadata %struct.rtx_def* %old_rtx, metadata !6641, metadata !DIExpression()), !dbg !6646
  call void @llvm.dbg.value(metadata i8* %data, metadata !6642, metadata !DIExpression()), !dbg !6646
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %loc, i64 0, i32 0, !dbg !6647
  %bf.load = load i32, i32* %0, align 8, !dbg !6647
  %bf.clear = and i32 %bf.load, 65535, !dbg !6647
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !6647
  br i1 %cmp, label %if.then, label %if.end5, !dbg !6648

if.then:                                          ; preds = %entry
  %1 = bitcast i8* %data to %struct.bitmap_head_def*, !dbg !6649
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %1, metadata !6643, metadata !DIExpression()), !dbg !6650
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %loc) #7, !dbg !6651
  %call1 = tail call i32 @bitmap_bit_p(%struct.bitmap_head_def* %1, i32 %call) #6, !dbg !6653
  %tobool = icmp eq i32 %call1, 0, !dbg !6653
  br i1 %tobool, label %cleanup, label %if.then2, !dbg !6654

if.then2:                                         ; preds = %if.then
  %2 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6655
  %call3 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %loc) #7, !dbg !6656
  %idxprom = zext i32 %call3 to i64, !dbg !6655
  %src_p = getelementptr inbounds %struct.equivalence, %struct.equivalence* %2, i64 %idxprom, i32 1, !dbg !6657
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %src_p, align 8, !dbg !6657
  %4 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8, !dbg !6658
  %call4 = tail call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %4, %struct.rtx_def* null, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* nonnull @adjust_cleared_regs, i8* %data) #6, !dbg !6659
  br label %cleanup, !dbg !6660

cleanup:                                          ; preds = %if.then, %if.then2
  %cleanup.dest.slot.0 = phi i1 [ false, %if.then2 ], [ true, %if.then ]
  %retval.0 = phi %struct.rtx_def* [ %call4, %if.then2 ], [ undef, %if.then ]
  br i1 %cleanup.dest.slot.0, label %if.end5, label %return

if.end5:                                          ; preds = %cleanup, %entry
  br label %return, !dbg !6661

return:                                           ; preds = %cleanup, %if.end5
  %retval.1 = phi %struct.rtx_def* [ %retval.0, %cleanup ], [ null, %if.end5 ], !dbg !6646
  ret %struct.rtx_def* %retval.1, !dbg !6662
}

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @end_alias_analysis() local_unnamed_addr #2

declare dso_local i32 @side_effects_p(%struct.rtx_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal void @validate_equiv_mem_from_store(%struct.rtx_def* %dest, %struct.rtx_def* %set, i8* %data) #5 !dbg !6663 {
entry:
  call void @llvm.dbg.value(metadata %struct.rtx_def* %dest, metadata !6665, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata %struct.rtx_def* %set, metadata !6666, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.value(metadata i8* %data, metadata !6667, metadata !DIExpression()), !dbg !6668
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %dest, i64 0, i32 0, !dbg !6669
  %bf.load = load i32, i32* %0, align 8, !dbg !6669
  %bf.clear = and i32 %bf.load, 65535, !dbg !6669
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !6669
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !6671

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** @equiv_mem, align 8, !dbg !6672
  %call = tail call i32 @reg_overlap_mentioned_p(%struct.rtx_def* %dest, %struct.rtx_def* %1) #6, !dbg !6673
  %tobool = icmp eq i32 %call, 0, !dbg !6673
  br i1 %tobool, label %land.lhs.true.lor.lhs.false_crit_edge, label %if.then, !dbg !6674

land.lhs.true.lor.lhs.false_crit_edge:            ; preds = %land.lhs.true
  %bf.load1.pre = load i32, i32* %0, align 8, !dbg !6675
  br label %lor.lhs.false, !dbg !6674

lor.lhs.false:                                    ; preds = %land.lhs.true.lor.lhs.false_crit_edge, %entry
  %bf.load1 = phi i32 [ %bf.load1.pre, %land.lhs.true.lor.lhs.false_crit_edge ], [ %bf.load, %entry ], !dbg !6675
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6675
  %cmp3 = icmp eq i32 %bf.clear2, 43, !dbg !6675
  br i1 %cmp3, label %land.lhs.true4, label %if.end, !dbg !6676

land.lhs.true4:                                   ; preds = %lor.lhs.false
  %2 = load %struct.rtx_def*, %struct.rtx_def** @equiv_mem, align 8, !dbg !6677
  %call5 = tail call i32 @true_dependence(%struct.rtx_def* %dest, i32 0, %struct.rtx_def* %2, i8 (%struct.rtx_def*, i8)* nonnull @rtx_varies_p) #6, !dbg !6678
  %tobool6 = icmp eq i32 %call5, 0, !dbg !6678
  br i1 %tobool6, label %if.end, label %if.then, !dbg !6679

if.then:                                          ; preds = %land.lhs.true, %land.lhs.true4
  store i1 true, i1* @equiv_mem_modified, align 4, !dbg !6680
  br label %if.end, !dbg !6681

if.end:                                           ; preds = %land.lhs.true4, %if.then, %lor.lhs.false
  ret void, !dbg !6682
}

declare dso_local i32 @reg_overlap_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @true_dependence(%struct.rtx_def*, i32, %struct.rtx_def*, i8 (%struct.rtx_def*, i8)*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %x) unnamed_addr #5 !dbg !6683 {
entry:
  br label %tailrecurse, !dbg !6693

tailrecurse:                                      ; preds = %if.end36, %entry
  %x.tr = phi %struct.rtx_def* [ %x, %entry ], [ %10, %if.end36 ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %memref, metadata !6687, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr, metadata !6688, metadata !DIExpression()), !dbg !6695
  %0 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 0, !dbg !6696
  %bf.load = load i32, i32* %0, align 8, !dbg !6696
  %trunc = trunc i32 %bf.load to i16, !dbg !6697
  switch i16 %trunc, label %sw.epilog.loopexit [
    i16 30, label %cleanup.loopexit2
    i16 35, label %cleanup.loopexit2
    i16 44, label %cleanup.loopexit2
    i16 45, label %cleanup.loopexit2
    i16 32, label %cleanup.loopexit2
    i16 31, label %cleanup.loopexit2
    i16 33, label %cleanup.loopexit2
    i16 36, label %cleanup.loopexit2
    i16 46, label %cleanup.loopexit2
    i16 121, label %cleanup.loopexit2
    i16 122, label %cleanup.loopexit2
    i16 37, label %sw.bb1
    i16 43, label %sw.bb8
    i16 23, label %sw.bb11
  ], !dbg !6697

sw.bb1:                                           ; preds = %tailrecurse
  %x.tr.lcssa29 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa29, metadata !6688, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa29, metadata !6688, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa29, metadata !6688, metadata !DIExpression()), !dbg !6695
  %1 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6698
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa29) #7, !dbg !6699
  %idxprom = zext i32 %call to i64, !dbg !6698
  %replacement = getelementptr inbounds %struct.equivalence, %struct.equivalence* %1, i64 %idxprom, i32 0, !dbg !6700
  %2 = load %struct.rtx_def*, %struct.rtx_def** %replacement, align 8, !dbg !6700
  %tobool = icmp eq %struct.rtx_def* %2, null, !dbg !6698
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !6701

land.rhs:                                         ; preds = %sw.bb1
  %3 = load %struct.equivalence*, %struct.equivalence** @reg_equiv, align 8, !dbg !6702
  %call2 = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %x.tr.lcssa29) #7, !dbg !6703
  %idxprom3 = zext i32 %call2 to i64, !dbg !6702
  %replacement5 = getelementptr inbounds %struct.equivalence, %struct.equivalence* %3, i64 %idxprom3, i32 0, !dbg !6704
  %4 = load %struct.rtx_def*, %struct.rtx_def** %replacement5, align 8, !dbg !6704
  %call6 = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %4) #7, !dbg !6705
  %tobool7 = icmp ne i32 %call6, 0, !dbg !6701
  %phitmp = zext i1 %tobool7 to i32
  br label %land.end

land.end:                                         ; preds = %sw.bb1, %land.rhs
  %5 = phi i32 [ 0, %sw.bb1 ], [ %phitmp, %land.rhs ]
  br label %cleanup, !dbg !6706

sw.bb8:                                           ; preds = %tailrecurse
  %x.tr.lcssa30 = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  %bf.load.lcssa26 = phi i32 [ %bf.load, %tailrecurse ], !dbg !6696
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa30, metadata !6688, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa30, metadata !6688, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa30, metadata !6688, metadata !DIExpression()), !dbg !6695
  %call9 = tail call i32 @true_dependence(%struct.rtx_def* %memref, i32 0, %struct.rtx_def* %x.tr.lcssa30, i8 (%struct.rtx_def*, i8)* nonnull @rtx_varies_p) #6, !dbg !6707
  %tobool10 = icmp eq i32 %call9, 0, !dbg !6707
  br i1 %tobool10, label %sw.epilog, label %cleanup, !dbg !6709

sw.bb11:                                          ; preds = %tailrecurse
  %arrayidx12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6710
  %6 = bitcast %union.rtunion_def* %arrayidx12 to i32**, !dbg !6710
  %7 = load i32*, i32** %6, align 8, !dbg !6710
  %bf.load13 = load i32, i32* %7, align 8, !dbg !6710
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !6710
  %cmp = icmp eq i32 %bf.clear14, 43, !dbg !6710
  br i1 %cmp, label %if.then15, label %if.else, !dbg !6712

if.then15:                                        ; preds = %sw.bb11
  %u20 = getelementptr inbounds i32, i32* %7, i64 2, !dbg !6713
  %rt_rtx23 = bitcast i32* %u20 to %struct.rtx_def**, !dbg !6713
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !6713
  %call24 = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %8) #7, !dbg !6716
  %tobool25 = icmp eq i32 %call24, 0, !dbg !6716
  br i1 %tobool25, label %if.end36, label %cleanup.loopexit2, !dbg !6717

if.else:                                          ; preds = %sw.bb11
  %.cast = bitcast i32* %7 to %struct.rtx_def*, !dbg !6718
  %call32 = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %.cast) #7, !dbg !6719
  %tobool33 = icmp eq i32 %call32, 0, !dbg !6719
  br i1 %tobool33, label %if.end36, label %cleanup.loopexit2, !dbg !6721

if.end36:                                         ; preds = %if.then15, %if.else
  %9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr, i64 0, i32 1, i32 0, i32 0, i64 1, !dbg !6722
  %rt_rtx40 = bitcast %union.rtunion_def* %9 to %struct.rtx_def**, !dbg !6722
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !6722
  br label %tailrecurse, !dbg !6693

sw.epilog.loopexit:                               ; preds = %tailrecurse
  %x.tr.lcssa = phi %struct.rtx_def* [ %x.tr, %tailrecurse ]
  %bf.load.lcssa = phi i32 [ %bf.load, %tailrecurse ], !dbg !6696
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !6688, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !6688, metadata !DIExpression()), !dbg !6695
  call void @llvm.dbg.value(metadata %struct.rtx_def* %x.tr.lcssa, metadata !6688, metadata !DIExpression()), !dbg !6695
  br label %sw.epilog, !dbg !6723

sw.epilog:                                        ; preds = %sw.epilog.loopexit, %sw.bb8
  %x.tr31 = phi %struct.rtx_def* [ %x.tr.lcssa, %sw.epilog.loopexit ], [ %x.tr.lcssa30, %sw.bb8 ]
  %bf.load27 = phi i32 [ %bf.load.lcssa, %sw.epilog.loopexit ], [ %bf.load.lcssa26, %sw.bb8 ]
  %bf.clear7 = and i32 %bf.load27, 65535, !dbg !6696
  %idxprom42 = zext i32 %bf.clear7 to i64, !dbg !6723
  %arrayidx43 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom42, !dbg !6723
  %11 = load i8*, i8** %arrayidx43, align 8, !dbg !6723
  call void @llvm.dbg.value(metadata i8* %11, metadata !6691, metadata !DIExpression()), !dbg !6695
  %arrayidx45 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom42, !dbg !6724
  %12 = load i8, i8* %arrayidx45, align 1, !dbg !6724
  call void @llvm.dbg.value(metadata i8 %12, metadata !6689, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6695
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %x.tr31, i64 0, i32 1, !dbg !6726
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !6726
  %13 = zext i8 %12 to i64, !dbg !6730
  br label %for.cond, !dbg !6730

for.cond:                                         ; preds = %for.inc83, %sw.epilog
  %indvars.iv22 = phi i64 [ %indvars.iv.next23, %for.inc83 ], [ %13, %sw.epilog ]
  %indvars.iv.next23 = add nsw i64 %indvars.iv22, -1, !dbg !6731
  call void @llvm.dbg.value(metadata i32 undef, metadata !6689, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6695
  %cmp46 = icmp sgt i64 %indvars.iv22, 0, !dbg !6732
  br i1 %cmp46, label %for.body, label %cleanup.loopexit1, !dbg !6733

for.body:                                         ; preds = %for.cond
  %arrayidx49 = getelementptr inbounds i8, i8* %11, i64 %indvars.iv.next23, !dbg !6734
  %14 = load i8, i8* %arrayidx49, align 1, !dbg !6734
  %conv50 = sext i8 %14 to i32, !dbg !6734
  switch i32 %conv50, label %for.inc83 [
    i32 101, label %sw.bb51
    i32 69, label %sw.bb61
  ], !dbg !6735

sw.bb51:                                          ; preds = %for.body
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 %indvars.iv.next23, !dbg !6736
  %rt_rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**, !dbg !6736
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !6736
  %call57 = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %15) #7, !dbg !6738
  %tobool58 = icmp eq i32 %call57, 0, !dbg !6738
  br i1 %tobool58, label %for.inc83, label %cleanup.loopexit1, !dbg !6739

sw.bb61:                                          ; preds = %for.body
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 %indvars.iv.next23, !dbg !6740
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtvec_def**, !dbg !6740
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6740
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i64 0, i32 0, !dbg !6740
  %17 = load i32, i32* %num_elem, align 8, !dbg !6740
  call void @llvm.dbg.value(metadata i32 %17, metadata !6690, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6695
  %18 = sext i32 %17 to i64, !dbg !6741
  br label %for.cond67, !dbg !6741

for.cond67:                                       ; preds = %for.inc, %sw.bb61
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %18, %sw.bb61 ]
  %indvars.iv.next = add nsw i64 %indvars.iv, -1, !dbg !6726
  call void @llvm.dbg.value(metadata i32 undef, metadata !6690, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6695
  %cmp68 = icmp sgt i64 %indvars.iv, 0, !dbg !6742
  br i1 %cmp68, label %for.body70, label %for.inc83.loopexit, !dbg !6744

for.body70:                                       ; preds = %for.cond67
  %19 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6745
  %arrayidx77 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %19, i64 0, i32 1, i64 %indvars.iv.next, !dbg !6745
  %20 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx77, align 8, !dbg !6745
  %call78 = tail call fastcc i32 @memref_referenced_p(%struct.rtx_def* %memref, %struct.rtx_def* %20) #7, !dbg !6747
  %tobool79 = icmp eq i32 %call78, 0, !dbg !6747
  br i1 %tobool79, label %for.inc, label %cleanup.loopexit, !dbg !6748

for.inc:                                          ; preds = %for.body70
  call void @llvm.dbg.value(metadata i32 undef, metadata !6690, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6695
  br label %for.cond67, !dbg !6749, !llvm.loop !6750

for.inc83.loopexit:                               ; preds = %for.cond67
  br label %for.inc83, !dbg !6752

for.inc83:                                        ; preds = %for.inc83.loopexit, %sw.bb51, %for.body
  call void @llvm.dbg.value(metadata i32 undef, metadata !6689, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6695
  br label %for.cond, !dbg !6752, !llvm.loop !6753

cleanup.loopexit:                                 ; preds = %for.body70
  br label %cleanup, !dbg !6755

cleanup.loopexit1:                                ; preds = %for.cond, %sw.bb51
  %retval.0.ph = phi i32 [ 0, %for.cond ], [ 1, %sw.bb51 ]
  br label %cleanup, !dbg !6755

cleanup.loopexit2:                                ; preds = %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %tailrecurse, %if.else, %if.then15
  %retval.0.ph3 = phi i32 [ 1, %if.else ], [ 1, %if.then15 ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ], [ 0, %tailrecurse ]
  br label %cleanup, !dbg !6755

cleanup:                                          ; preds = %cleanup.loopexit2, %cleanup.loopexit1, %cleanup.loopexit, %sw.bb8, %land.end
  %retval.0 = phi i32 [ %5, %land.end ], [ 1, %sw.bb8 ], [ 1, %cleanup.loopexit ], [ %retval.0.ph, %cleanup.loopexit1 ], [ %retval.0.ph3, %cleanup.loopexit2 ], !dbg !6695
  ret i32 %retval.0, !dbg !6755
}

declare dso_local i32 @function_invariant_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def*) local_unnamed_addr #2

declare dso_local i32 @memory_operand(%struct.rtx_def*, i32) local_unnamed_addr #2

declare dso_local void @setup_reg_classes(i32, i32, i32, i32) local_unnamed_addr #2

declare dso_local i32 @reg_alternate_class(i32) local_unnamed_addr #2

declare dso_local i32 @reg_cover_class(i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @ira_allocno_iter_init(%struct.ira_allocno_iterator* %i) unnamed_addr #0 !dbg !6756 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %i, metadata !6761, metadata !DIExpression()), !dbg !6762
  %n = getelementptr inbounds %struct.ira_allocno_iterator, %struct.ira_allocno_iterator* %i, i64 0, i32 0, !dbg !6763
  store i32 0, i32* %n, align 4, !dbg !6764
  ret void, !dbg !6765
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ira_allocno_iter_cond(%struct.ira_allocno_iterator* %i, %struct.ira_allocno** %a) unnamed_addr #0 !dbg !6766 {
entry:
  call void @llvm.dbg.value(metadata %struct.ira_allocno_iterator* %i, metadata !6770, metadata !DIExpression()), !dbg !6773
  call void @llvm.dbg.value(metadata %struct.ira_allocno** %a, metadata !6771, metadata !DIExpression()), !dbg !6773
  %n1 = getelementptr inbounds %struct.ira_allocno_iterator, %struct.ira_allocno_iterator* %i, i64 0, i32 0, !dbg !6774
  %0 = load i32, i32* %n1, align 4, !dbg !6774
  call void @llvm.dbg.value(metadata i32 %0, metadata !6772, metadata !DIExpression()), !dbg !6773
  %1 = load i32, i32* @ira_allocnos_num, align 4, !dbg !6776
  %2 = load %struct.ira_allocno**, %struct.ira_allocno*** @ira_allocnos, align 8, !dbg !6778
  %3 = sext i32 %0 to i64, !dbg !6780
  %4 = sext i32 %1 to i64, !dbg !6780
  br label %for.cond, !dbg !6780

for.cond:                                         ; preds = %for.inc, %entry
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ %3, %entry ], !dbg !6781
  call void @llvm.dbg.value(metadata i64 %indvars.iv, metadata !6772, metadata !DIExpression()), !dbg !6773
  %cmp = icmp slt i64 %indvars.iv, %4, !dbg !6782
  br i1 %cmp, label %for.body, label %cleanup.loopexit, !dbg !6783

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds %struct.ira_allocno*, %struct.ira_allocno** %2, i64 %indvars.iv, !dbg !6784
  %5 = load %struct.ira_allocno*, %struct.ira_allocno** %arrayidx, align 8, !dbg !6784
  %cmp2 = icmp eq %struct.ira_allocno* %5, null, !dbg !6785
  br i1 %cmp2, label %for.inc, label %if.then, !dbg !6786

if.then:                                          ; preds = %for.body
  %.lcssa = phi %struct.ira_allocno* [ %5, %for.body ], !dbg !6784
  %indvars.iv.lcssa3 = phi i64 [ %indvars.iv, %for.body ], !dbg !6781
  call void @llvm.dbg.value(metadata i64 %indvars.iv.lcssa3, metadata !6772, metadata !DIExpression()), !dbg !6773
  %6 = ptrtoint %struct.ira_allocno* %.lcssa to i64, !dbg !6786
  %7 = trunc i64 %indvars.iv.lcssa3 to i32, !dbg !6773
  call void @llvm.dbg.value(metadata i32 %7, metadata !6772, metadata !DIExpression()), !dbg !6773
  call void @llvm.dbg.value(metadata i32 %7, metadata !6772, metadata !DIExpression()), !dbg !6773
  %8 = bitcast %struct.ira_allocno** %a to i64*, !dbg !6787
  store i64 %6, i64* %8, align 8, !dbg !6787
  %add = add nsw i32 %7, 1, !dbg !6789
  store i32 %add, i32* %n1, align 4, !dbg !6790
  br label %cleanup, !dbg !6791

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nsw i64 %indvars.iv, 1, !dbg !6792
  call void @llvm.dbg.value(metadata i32 undef, metadata !6772, metadata !DIExpression(DW_OP_plus_uconst, 1, DW_OP_stack_value)), !dbg !6773
  br label %for.cond, !dbg !6793, !llvm.loop !6794

cleanup.loopexit:                                 ; preds = %for.cond
  br label %cleanup, !dbg !6796

cleanup:                                          ; preds = %cleanup.loopexit, %if.then
  %retval.0 = phi i8 [ 1, %if.then ], [ 0, %cleanup.loopexit ], !dbg !6773
  ret i8 %retval.0, !dbg !6796
}

declare dso_local void @ira_free_allocno_updated_costs(%struct.ira_allocno*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @ira_hard_reg_not_in_set_p(i32 %hard_regno, i32 %mode, i64 %hard_regset) unnamed_addr #0 !dbg !6797 {
entry:
  call void @llvm.dbg.value(metadata i32 %hard_regno, metadata !6801, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i32 %mode, metadata !6802, metadata !DIExpression()), !dbg !6805
  call void @llvm.dbg.value(metadata i64 %hard_regset, metadata !6803, metadata !DIExpression()), !dbg !6805
  %idxprom = sext i32 %hard_regno to i64, !dbg !6806
  %idxprom1 = zext i32 %mode to i64, !dbg !6806
  %arrayidx2 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, i64 %idxprom1, !dbg !6806
  %0 = load i8, i8* %arrayidx2, align 1, !dbg !6806
  %conv = zext i8 %0 to i32, !dbg !6806
  call void @llvm.dbg.value(metadata i32 %conv, metadata !6804, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6805
  br label %for.cond, !dbg !6808

for.cond:                                         ; preds = %for.inc, %entry
  %i.0.in = phi i32 [ %conv, %entry ], [ %i.0, %for.inc ]
  %i.0 = add nsw i32 %i.0.in, -1, !dbg !6809
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6804, metadata !DIExpression()), !dbg !6805
  %cmp = icmp sgt i32 %i.0.in, 0, !dbg !6810
  br i1 %cmp, label %for.body, label %cleanup, !dbg !6812

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 %i.0, %hard_regno, !dbg !6813
  %sh_prom = zext i32 %add to i64, !dbg !6813
  %shl = shl i64 1, %sh_prom, !dbg !6813
  %and = and i64 %shl, %hard_regset, !dbg !6813
  %tobool = icmp eq i64 %and, 0, !dbg !6813
  br i1 %tobool, label %for.inc, label %cleanup, !dbg !6815

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.value(metadata i32 %i.0, metadata !6804, metadata !DIExpression(DW_OP_constu, 1, DW_OP_minus, DW_OP_stack_value)), !dbg !6805
  br label %for.cond, !dbg !6816, !llvm.loop !6817

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i8 [ 0, %for.body ], [ 1, %for.cond ], !dbg !6805
  ret i8 %retval.0, !dbg !6819
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %vec_) unnamed_addr #0 !dbg !6820 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !6826, metadata !DIExpression()), !dbg !6827
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !6828
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6828

cond.true:                                        ; preds = %entry
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !6828
  %0 = load i32, i32* %num, align 8, !dbg !6828
  br label %cond.end, !dbg !6828

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %0, %cond.true ], [ 0, %entry ], !dbg !6828
  ret i32 %cond, !dbg !6828
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_gc_reserve_exact(%struct.VEC_rtx_gc** %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6829 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec, metadata !6833, metadata !DIExpression()), !dbg !6836
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6834, metadata !DIExpression()), !dbg !6836
  %0 = load %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec, align 8, !dbg !6837
  %tobool = icmp eq %struct.VEC_rtx_gc* %0, null, !dbg !6837
  br i1 %tobool, label %cond.end, label %cond.true, !dbg !6837

cond.true:                                        ; preds = %entry
  %base = getelementptr inbounds %struct.VEC_rtx_gc, %struct.VEC_rtx_gc* %0, i64 0, i32 0, !dbg !6837
  br label %cond.end, !dbg !6837

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %entry ], !dbg !6837
  %call = tail call fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %cond, i32 %alloc_) #7, !dbg !6837
  %tobool1 = icmp eq i32 %call, 0, !dbg !6837
  %lnot.ext = zext i1 %tobool1 to i32, !dbg !6837
  call void @llvm.dbg.value(metadata i32 %lnot.ext, metadata !6835, metadata !DIExpression()), !dbg !6836
  br i1 %tobool1, label %if.then, label %if.end, !dbg !6837

if.then:                                          ; preds = %cond.end
  %1 = load i8*, i8** bitcast (%struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec to i8**), align 8, !dbg !6838
  %call3 = tail call i8* @vec_gc_p_reserve_exact(i8* %1, i32 %alloc_) #6, !dbg !6838
  store i8* %call3, i8** bitcast (%struct.VEC_rtx_gc** @reg_equiv_memory_loc_vec to i8**), align 8, !dbg !6838
  br label %if.end, !dbg !6838

if.end:                                           ; preds = %if.then, %cond.end
  ret i32 %lnot.ext, !dbg !6837
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %vec_, i32 %alloc_) unnamed_addr #0 !dbg !6840 {
entry:
  call void @llvm.dbg.value(metadata %struct.VEC_rtx_base* %vec_, metadata !6844, metadata !DIExpression()), !dbg !6846
  call void @llvm.dbg.value(metadata i32 %alloc_, metadata !6845, metadata !DIExpression()), !dbg !6846
  %tobool = icmp eq %struct.VEC_rtx_base* %vec_, null, !dbg !6847
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !6847

cond.true:                                        ; preds = %entry
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 1, !dbg !6847
  %0 = load i32, i32* %alloc, align 4, !dbg !6847
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %vec_, i64 0, i32 0, !dbg !6847
  %1 = load i32, i32* %num, align 8, !dbg !6847
  %sub = sub i32 %0, %1, !dbg !6847
  %cmp1 = icmp uge i32 %sub, %alloc_, !dbg !6847
  br label %cond.end, !dbg !6847

cond.false:                                       ; preds = %entry
  %tobool3 = icmp eq i32 %alloc_, 0, !dbg !6847
  br label %cond.end, !dbg !6847

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond.in = phi i1 [ %cmp1, %cond.true ], [ %tobool3, %cond.false ]
  %cond = zext i1 %cond.in to i32, !dbg !6847
  ret i32 %cond, !dbg !6847
}

declare dso_local i8* @vec_gc_p_reserve_exact(i8*, i32) local_unnamed_addr #2

declare dso_local i8* @ggc_realloc_stat(i8*, i64) local_unnamed_addr #2

declare dso_local void @bitmap_clear(%struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_set_init(%struct.bitmap_iterator* %bi, %struct.bitmap_head_def* %map, i32 %start_bit, i32* %bit_no) unnamed_addr #0 !dbg !6848 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6857, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.value(metadata %struct.bitmap_head_def* %map, metadata !6858, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.value(metadata i32 %start_bit, metadata !6859, metadata !DIExpression()), !dbg !6861
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6860, metadata !DIExpression()), !dbg !6861
  %0 = bitcast %struct.bitmap_head_def* %map to i64*, !dbg !6862
  %1 = load i64, i64* %0, align 8, !dbg !6862
  %2 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6863
  store i64 %1, i64* %2, align 8, !dbg !6863
  %elt2 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 1, !dbg !6864
  store %struct.bitmap_element_def* null, %struct.bitmap_element_def** %elt2, align 8, !dbg !6865
  %elt11 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6866
  %div = lshr i32 %start_bit, 7, !dbg !6869
  %3 = inttoptr i64 %1 to %struct.bitmap_element_def*, !dbg !6871
  br label %while.body, !dbg !6871

while.body:                                       ; preds = %entry, %if.end5
  %4 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %5 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %6 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %.in = phi i64 [ %1, %entry ], [ %11, %if.end5 ]
  %7 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ]
  %8 = phi %struct.bitmap_element_def* [ %3, %entry ], [ %12, %if.end5 ], !dbg !6872
  %9 = inttoptr i64 %.in to i64*, !dbg !6871
  %tobool = icmp eq %struct.bitmap_element_def* %8, null, !dbg !6873
  br i1 %tobool, label %if.then, label %if.end, !dbg !6874

if.then:                                          ; preds = %while.body
  store %struct.bitmap_element_def* @bitmap_zero_bits, %struct.bitmap_element_def** %elt11, align 8, !dbg !6875
  br label %while.end, !dbg !6877

if.end:                                           ; preds = %while.body
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %7, i64 0, i32 2, !dbg !6878
  %10 = load i32, i32* %indx, align 8, !dbg !6878
  %cmp = icmp ult i32 %10, %div, !dbg !6879
  br i1 %cmp, label %if.end5, label %while.end.loopexit, !dbg !6880

if.end5:                                          ; preds = %if.end
  %11 = load i64, i64* %9, align 8, !dbg !6881
  store i64 %11, i64* %2, align 8, !dbg !6882
  %12 = inttoptr i64 %11 to %struct.bitmap_element_def*, !dbg !6871
  br label %while.body, !dbg !6871, !llvm.loop !6883

while.end.loopexit:                               ; preds = %if.end
  %.lcssa11 = phi %struct.bitmap_element_def* [ %4, %if.end ]
  %.lcssa9 = phi %struct.bitmap_element_def* [ %5, %if.end ]
  %.lcssa7 = phi %struct.bitmap_element_def* [ %6, %if.end ]
  br label %while.end, !dbg !6885

while.end:                                        ; preds = %while.end.loopexit, %if.then
  %13 = phi %struct.bitmap_element_def* [ %.lcssa11, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %14 = phi %struct.bitmap_element_def* [ %.lcssa9, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ]
  %15 = phi %struct.bitmap_element_def* [ %.lcssa7, %while.end.loopexit ], [ @bitmap_zero_bits, %if.then ], !dbg !6885
  %indx9 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !6887
  %16 = load i32, i32* %indx9, align 8, !dbg !6887
  %cmp11 = icmp eq i32 %16, %div, !dbg !6888
  br i1 %cmp11, label %if.end15, label %if.then12, !dbg !6889

if.then12:                                        ; preds = %while.end
  %indx14 = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %14, i64 0, i32 2, !dbg !6890
  %17 = load i32, i32* %indx14, align 8, !dbg !6890
  %mul = shl i32 %17, 7, !dbg !6891
  call void @llvm.dbg.value(metadata i32 %mul, metadata !6859, metadata !DIExpression()), !dbg !6861
  br label %if.end15, !dbg !6892

if.end15:                                         ; preds = %while.end, %if.then12
  %start_bit.addr.0 = phi i32 [ %mul, %if.then12 ], [ %start_bit, %while.end ]
  call void @llvm.dbg.value(metadata i32 %start_bit.addr.0, metadata !6859, metadata !DIExpression()), !dbg !6861
  %div16 = lshr i32 %start_bit.addr.0, 6, !dbg !6893
  %rem = and i32 %div16, 1, !dbg !6894
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6895
  store i32 %rem, i32* %word_no, align 8, !dbg !6896
  %idxprom = zext i32 %rem to i64, !dbg !6897
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %13, i64 0, i32 3, i64 %idxprom, !dbg !6897
  %18 = load i64, i64* %arrayidx, align 8, !dbg !6897
  %rem20 = and i32 %start_bit.addr.0, 63, !dbg !6898
  %bits21 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6899
  %sh_prom = zext i32 %rem20 to i64, !dbg !6900
  %shr = lshr i64 %18, %sh_prom, !dbg !6900
  store i64 %shr, i64* %bits21, align 8, !dbg !6900
  %tobool23 = icmp eq i64 %shr, 0, !dbg !6901
  %lnot.ext = zext i1 %tobool23 to i32, !dbg !6901
  %add = add i32 %start_bit.addr.0, %lnot.ext, !dbg !6902
  call void @llvm.dbg.value(metadata i32 %add, metadata !6859, metadata !DIExpression()), !dbg !6861
  store i32 %add, i32* %bit_no, align 4, !dbg !6903
  ret void, !dbg !6904
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc zeroext i8 @bmp_iter_set(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6905 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6909, metadata !DIExpression()), !dbg !6914
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6910, metadata !DIExpression()), !dbg !6914
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6915
  %0 = load i64, i64* %bits, align 8, !dbg !6915
  %tobool = icmp eq i64 %0, 0, !dbg !6916
  br i1 %tobool, label %if.end, label %next_bit, !dbg !6917

next_bit.loopexit:                                ; preds = %while.body9
  %.lcssa6 = phi i64 [ %10, %while.body9 ], !dbg !6918
  br label %next_bit, !dbg !6921

next_bit:                                         ; preds = %next_bit.loopexit, %entry
  %1 = phi i64 [ %.lcssa6, %next_bit.loopexit ], [ %0, %entry ]
  call void @llvm.dbg.label(metadata !6911), !dbg !6922
  br label %while.cond, !dbg !6921

while.cond:                                       ; preds = %while.body, %next_bit
  %2 = phi i64 [ %.pre, %while.body ], [ %1, %next_bit ], !dbg !6923
  %and = and i64 %2, 1, !dbg !6924
  %tobool2 = icmp eq i64 %and, 0, !dbg !6925
  br i1 %tobool2, label %while.body, label %return.loopexit, !dbg !6921

while.body:                                       ; preds = %while.cond
  %shr = lshr i64 %2, 1, !dbg !6926
  store i64 %shr, i64* %bits, align 8, !dbg !6926
  %3 = load i32, i32* %bit_no, align 4, !dbg !6928
  %add = add i32 %3, 1, !dbg !6928
  store i32 %add, i32* %bit_no, align 4, !dbg !6928
  %.pre = load i64, i64* %bits, align 8, !dbg !6923
  br label %while.cond, !dbg !6921, !llvm.loop !6929

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %bit_no, align 4, !dbg !6931
  %sub = add i32 %4, 63, !dbg !6932
  %div = and i32 %sub, -64, !dbg !6933
  store i32 %div, i32* %bit_no, align 4, !dbg !6934
  %word_no = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 2, !dbg !6935
  %5 = load i32, i32* %word_no, align 8, !dbg !6936
  %inc = add i32 %5, 1, !dbg !6936
  store i32 %inc, i32* %word_no, align 8, !dbg !6936
  %elt1 = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 0, !dbg !6937
  %6 = bitcast %struct.bitmap_iterator* %bi to i64*, !dbg !6937
  br label %while.body6, !dbg !6938

while.body6:                                      ; preds = %if.end, %if.end26
  %7 = phi i32 [ %inc, %if.end ], [ 0, %if.end26 ]
  br label %while.cond7, !dbg !6939

while.cond7:                                      ; preds = %if.end16, %while.body6
  %8 = phi i32 [ %inc19, %if.end16 ], [ %7, %while.body6 ], !dbg !6940
  %cmp = icmp eq i32 %8, 2, !dbg !6941
  %9 = load %struct.bitmap_element_def*, %struct.bitmap_element_def** %elt1, align 8, !dbg !6937
  br i1 %cmp, label %while.end20, label %while.body9, !dbg !6939

while.body9:                                      ; preds = %while.cond7
  %idxprom = zext i32 %8 to i64, !dbg !6918
  %arrayidx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %9, i64 0, i32 3, i64 %idxprom, !dbg !6918
  %10 = load i64, i64* %arrayidx, align 8, !dbg !6918
  store i64 %10, i64* %bits, align 8, !dbg !6942
  %tobool14 = icmp eq i64 %10, 0, !dbg !6943
  br i1 %tobool14, label %if.end16, label %next_bit.loopexit, !dbg !6945

if.end16:                                         ; preds = %while.body9
  %11 = load i32, i32* %bit_no, align 4, !dbg !6946
  %add17 = add i32 %11, 64, !dbg !6946
  store i32 %add17, i32* %bit_no, align 4, !dbg !6946
  %12 = load i32, i32* %word_no, align 8, !dbg !6947
  %inc19 = add i32 %12, 1, !dbg !6947
  store i32 %inc19, i32* %word_no, align 8, !dbg !6947
  br label %while.cond7, !dbg !6939, !llvm.loop !6948

while.end20:                                      ; preds = %while.cond7
  %.lcssa = phi %struct.bitmap_element_def* [ %9, %while.cond7 ], !dbg !6937
  %13 = bitcast %struct.bitmap_element_def* %.lcssa to i64*, !dbg !6950
  %14 = load i64, i64* %13, align 8, !dbg !6950
  store i64 %14, i64* %6, align 8, !dbg !6951
  %tobool24 = icmp eq i64 %14, 0, !dbg !6952
  br i1 %tobool24, label %return.loopexit1, label %if.end26, !dbg !6954

if.end26:                                         ; preds = %while.end20
  %15 = inttoptr i64 %14 to %struct.bitmap_element_def*, !dbg !6954
  %indx = getelementptr inbounds %struct.bitmap_element_def, %struct.bitmap_element_def* %15, i64 0, i32 2, !dbg !6955
  %16 = load i32, i32* %indx, align 8, !dbg !6955
  %mul28 = shl i32 %16, 7, !dbg !6956
  store i32 %mul28, i32* %bit_no, align 4, !dbg !6957
  store i32 0, i32* %word_no, align 8, !dbg !6958
  br label %while.body6, !dbg !6938, !llvm.loop !6959

return.loopexit:                                  ; preds = %while.cond
  br label %return, !dbg !6961

return.loopexit1:                                 ; preds = %while.end20
  br label %return, !dbg !6961

return:                                           ; preds = %return.loopexit1, %return.loopexit
  %retval.0 = phi i8 [ 1, %return.loopexit ], [ 0, %return.loopexit1 ], !dbg !6914
  ret i8 %retval.0, !dbg !6961
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @bmp_iter_next(%struct.bitmap_iterator* %bi, i32* %bit_no) unnamed_addr #0 !dbg !6962 {
entry:
  call void @llvm.dbg.value(metadata %struct.bitmap_iterator* %bi, metadata !6966, metadata !DIExpression()), !dbg !6968
  call void @llvm.dbg.value(metadata i32* %bit_no, metadata !6967, metadata !DIExpression()), !dbg !6968
  %bits = getelementptr inbounds %struct.bitmap_iterator, %struct.bitmap_iterator* %bi, i64 0, i32 3, !dbg !6969
  %0 = load i64, i64* %bits, align 8, !dbg !6970
  %shr = lshr i64 %0, 1, !dbg !6970
  store i64 %shr, i64* %bits, align 8, !dbg !6970
  %1 = load i32, i32* %bit_no, align 4, !dbg !6971
  %add = add i32 %1, 1, !dbg !6971
  store i32 %add, i32* %bit_no, align 4, !dbg !6971
  ret void, !dbg !6972
}

; Function Attrs: nounwind uwtable
define internal fastcc zeroext i8 @pseudo_for_reload_consideration_p(i32 %regno) unnamed_addr #5 !dbg !6973 {
entry:
  call void @llvm.dbg.value(metadata i32 %regno, metadata !6977, metadata !DIExpression()), !dbg !6978
  %0 = load i16*, i16** @reg_renumber, align 8, !dbg !6979
  %idxprom = sext i32 %regno to i64, !dbg !6979
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 %idxprom, !dbg !6979
  %1 = load i16, i16* %arrayidx, align 2, !dbg !6979
  %cmp = icmp sgt i16 %1, -1, !dbg !6980
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6981

lor.rhs:                                          ; preds = %entry
  %2 = load i8, i8* @ira_conflicts_p, align 1, !dbg !6982
  %tobool = icmp ne i8 %2, 0, !dbg !6982
  %3 = load i32, i32* @flag_ira_share_spill_slots, align 4, !dbg !6983
  %tobool3 = icmp ne i32 %3, 0, !dbg !6983
  %4 = and i1 %tobool3, %tobool, !dbg !6983
  %phitmp = zext i1 %4 to i8, !dbg !6983
  br label %lor.end, !dbg !6983

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i8 [ 1, %entry ], [ %phitmp, %lor.rhs ]
  ret i8 %5, !dbg !6984
}

declare dso_local %struct.insn_chain* @new_insn_chain() local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @init_live_subregs(i8 zeroext %init_value, %struct.simple_bitmap_def** %live_subregs, i32* %live_subregs_used, i32 %allocnum, %struct.rtx_def* %reg) unnamed_addr #5 !dbg !6985 {
entry:
  call void @llvm.dbg.value(metadata i8 %init_value, metadata !6989, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def** %live_subregs, metadata !6990, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i32* %live_subregs_used, metadata !6991, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata i32 %allocnum, metadata !6992, metadata !DIExpression()), !dbg !6996
  call void @llvm.dbg.value(metadata %struct.rtx_def* %reg, metadata !6993, metadata !DIExpression()), !dbg !6996
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %reg, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !6997
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6997
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6997
  %call = tail call fastcc i32 @rhs_regno(%struct.rtx_def* %0) #7, !dbg !6997
  call void @llvm.dbg.value(metadata i32 %call, metadata !6994, metadata !DIExpression()), !dbg !6996
  %1 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !6998
  %idxprom = zext i32 %call to i64, !dbg !6998
  %arrayidx1 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %1, i64 %idxprom, !dbg !6998
  %2 = bitcast %struct.rtx_def** %arrayidx1 to i32**, !dbg !6998
  %3 = load i32*, i32** %2, align 8, !dbg !6998
  %bf.load = load i32, i32* %3, align 8, !dbg !6998
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6998
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6998
  %idxprom2 = zext i32 %bf.clear to i64, !dbg !6998
  %arrayidx3 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2, !dbg !6998
  %4 = load i8, i8* %arrayidx3, align 1, !dbg !6998
  %conv4 = zext i8 %4 to i32, !dbg !6998
  call void @llvm.dbg.value(metadata i32 %conv4, metadata !6995, metadata !DIExpression()), !dbg !6996
  %cmp = icmp eq i8 %4, 0, !dbg !6999
  br i1 %cmp, label %cond.true, label %cond.end, !dbg !6999

cond.true:                                        ; preds = %entry
  tail call void @fancy_abort(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i32 2817, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.41, i64 0, i64 0)) #6, !dbg !6999
  br label %cond.end, !dbg !6999

cond.end:                                         ; preds = %entry, %cond.true
  %idxprom6 = sext i32 %allocnum to i64, !dbg !7000
  %arrayidx7 = getelementptr inbounds i32, i32* %live_subregs_used, i64 %idxprom6, !dbg !7000
  %5 = load i32, i32* %arrayidx7, align 4, !dbg !7000
  %tobool = icmp eq i32 %5, 0, !dbg !7000
  br i1 %tobool, label %if.end, label %cleanup.cont, !dbg !7002

if.end:                                           ; preds = %cond.end
  %arrayidx9 = getelementptr inbounds %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %live_subregs, i64 %idxprom6, !dbg !7003
  %6 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %arrayidx9, align 8, !dbg !7003
  %cmp10 = icmp eq %struct.simple_bitmap_def* %6, null, !dbg !7005
  br i1 %cmp10, label %if.then12, label %if.end16, !dbg !7006

if.then12:                                        ; preds = %if.end
  %call13 = tail call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %conv4) #6, !dbg !7007
  store %struct.simple_bitmap_def* %call13, %struct.simple_bitmap_def** %arrayidx9, align 8, !dbg !7008
  br label %if.end16, !dbg !7009

if.end16:                                         ; preds = %if.then12, %if.end
  %7 = phi %struct.simple_bitmap_def* [ %call13, %if.then12 ], [ %6, %if.end ], !dbg !7010
  %tobool17 = icmp eq i8 %init_value, 0, !dbg !7012
  br i1 %tobool17, label %if.else, label %if.then18, !dbg !7013

if.then18:                                        ; preds = %if.end16
  tail call void @sbitmap_ones(%struct.simple_bitmap_def* %7) #6, !dbg !7014
  br label %if.end23, !dbg !7014

if.else:                                          ; preds = %if.end16
  tail call void @sbitmap_zero(%struct.simple_bitmap_def* %7) #6, !dbg !7015
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then18
  store i32 %conv4, i32* %arrayidx7, align 4, !dbg !7016
  br label %cleanup.cont, !dbg !7017

cleanup.cont:                                     ; preds = %cond.end, %if.end23
  ret void, !dbg !7017
}

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !7018 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !7022, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !7023, metadata !DIExpression()), !dbg !7027
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !7028
  %0 = load i8*, i8** %popcount, align 8, !dbg !7028
  %tobool = icmp eq i8* %0, null, !dbg !7029
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !7030

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !7031
  %.pre2 = zext i32 %.pre to i64, !dbg !7032
  %.pre3 = shl i64 1, %.pre2, !dbg !7032
  %.pre4 = lshr i32 %bitno, 6, !dbg !7033
  %.pre5 = zext i32 %.pre4 to i64, !dbg !7034
  br label %if.end7, !dbg !7030

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !7035
  %idxprom = zext i32 %div to i64, !dbg !7035
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !7035
  %1 = load i64, i64* %arrayidx, align 8, !dbg !7035
  %rem = and i32 %bitno, 63, !dbg !7035
  %sh_prom = zext i32 %rem to i64, !dbg !7035
  %2 = shl i64 1, %sh_prom, !dbg !7036
  %3 = and i64 %1, %2, !dbg !7036
  %tobool1 = icmp eq i64 %3, 0, !dbg !7036
  br i1 %tobool1, label %if.end7, label %if.then2, !dbg !7038

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !7039
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !7040
  %dec = add i8 %4, -1, !dbg !7040
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !7040
  br label %if.end7, !dbg !7039

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !7034
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !7032
  %neg = xor i64 %shl.pre-phi, -1, !dbg !7041
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !7034
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !7042
  %and14 = and i64 %5, %neg, !dbg !7042
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !7042
  ret void, !dbg !7043
}

declare dso_local zeroext i8 @sbitmap_empty_p(%struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind uwtable
define internal fastcc void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) unnamed_addr #0 !dbg !7044 {
entry:
  call void @llvm.dbg.value(metadata %struct.simple_bitmap_def* %map, metadata !7046, metadata !DIExpression()), !dbg !7051
  call void @llvm.dbg.value(metadata i32 %bitno, metadata !7047, metadata !DIExpression()), !dbg !7051
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 0, !dbg !7052
  %0 = load i8*, i8** %popcount, align 8, !dbg !7052
  %tobool = icmp eq i8* %0, null, !dbg !7053
  br i1 %tobool, label %entry.if.end7_crit_edge, label %if.then, !dbg !7054

entry.if.end7_crit_edge:                          ; preds = %entry
  %.pre = and i32 %bitno, 63, !dbg !7055
  %.pre2 = zext i32 %.pre to i64, !dbg !7056
  %.pre3 = shl i64 1, %.pre2, !dbg !7056
  %.pre4 = lshr i32 %bitno, 6, !dbg !7057
  %.pre5 = zext i32 %.pre4 to i64, !dbg !7058
  br label %if.end7, !dbg !7054

if.then:                                          ; preds = %entry
  %div = lshr i32 %bitno, 6, !dbg !7059
  %idxprom = zext i32 %div to i64, !dbg !7059
  %arrayidx = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom, !dbg !7059
  %1 = load i64, i64* %arrayidx, align 8, !dbg !7059
  %rem = and i32 %bitno, 63, !dbg !7059
  %sh_prom = zext i32 %rem to i64, !dbg !7059
  %2 = shl i64 1, %sh_prom, !dbg !7060
  %3 = and i64 %1, %2, !dbg !7060
  %tobool1 = icmp eq i64 %3, 0, !dbg !7060
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !7062

if.then2:                                         ; preds = %if.then
  %arrayidx6 = getelementptr inbounds i8, i8* %0, i64 %idxprom, !dbg !7063
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !7064
  %inc = add i8 %4, 1, !dbg !7064
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !7064
  br label %if.end7, !dbg !7063

if.end7:                                          ; preds = %entry.if.end7_crit_edge, %if.then, %if.then2
  %idxprom12.pre-phi = phi i64 [ %.pre5, %entry.if.end7_crit_edge ], [ %idxprom, %if.then ], [ %idxprom, %if.then2 ], !dbg !7058
  %shl.pre-phi = phi i64 [ %.pre3, %entry.if.end7_crit_edge ], [ %2, %if.then ], [ %2, %if.then2 ], !dbg !7056
  %arrayidx13 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %map, i64 0, i32 3, i64 %idxprom12.pre-phi, !dbg !7058
  %5 = load i64, i64* %arrayidx13, align 8, !dbg !7065
  %or = or i64 %5, %shl.pre-phi, !dbg !7065
  store i64 %or, i64* %arrayidx13, align 8, !dbg !7065
  ret void, !dbg !7066
}

; Function Attrs: nounwind uwtable
define internal fastcc void @print_insn_chains(%struct._IO_FILE* %file) unnamed_addr #5 !dbg !7067 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !7069, metadata !DIExpression()), !dbg !7071
  br label %for.cond, !dbg !7072

for.cond:                                         ; preds = %for.body, %entry
  %c.0.in = phi %struct.insn_chain** [ @reload_insn_chain, %entry ], [ %next, %for.body ]
  %c.0 = load %struct.insn_chain*, %struct.insn_chain** %c.0.in, align 8, !dbg !7074
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c.0, metadata !7070, metadata !DIExpression()), !dbg !7071
  %tobool = icmp eq %struct.insn_chain* %c.0, null, !dbg !7075
  br i1 %tobool, label %for.end, label %for.body, !dbg !7075

for.body:                                         ; preds = %for.cond
  tail call fastcc void @print_insn_chain(%struct._IO_FILE* %file, %struct.insn_chain* nonnull %c.0) #7, !dbg !7076
  %next = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %c.0, i64 0, i32 0, !dbg !7078
  br label %for.cond, !dbg !7079, !llvm.loop !7080

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7082
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) local_unnamed_addr #2

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) local_unnamed_addr #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) local_unnamed_addr #2

; Function Attrs: nounwind uwtable
define internal fastcc void @print_insn_chain(%struct._IO_FILE* %file, %struct.insn_chain* %c) unnamed_addr #5 !dbg !7083 {
entry:
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %file, metadata !7087, metadata !DIExpression()), !dbg !7089
  call void @llvm.dbg.value(metadata %struct.insn_chain* %c, metadata !7088, metadata !DIExpression()), !dbg !7089
  %insn = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %c, i64 0, i32 3, !dbg !7090
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7090
  %arrayidx = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i64 0, i32 1, i32 0, i32 0, i64 0, !dbg !7090
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !7090
  %1 = load i32, i32* %rt_int, align 8, !dbg !7090
  %call = tail call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %file, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.48, i64 0, i64 0), i32 %1) #6, !dbg !7091
  %live_throughout = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %c, i64 0, i32 6, !dbg !7092
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* nonnull %live_throughout, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.49, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.50, i64 0, i64 0)) #6, !dbg !7093
  %dead_or_set = getelementptr inbounds %struct.insn_chain, %struct.insn_chain* %c, i64 0, i32 7, !dbg !7094
  tail call void @bitmap_print(%struct._IO_FILE* %file, %struct.bitmap_head_def* nonnull %dead_or_set, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.51, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)) #6, !dbg !7095
  ret void, !dbg !7096
}

declare dso_local void @bitmap_print(%struct._IO_FILE*, %struct.bitmap_head_def*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

attributes #0 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind }
attributes #7 = { nobuiltin }
attributes #8 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2425, !2426, !2427}
!llvm.ident = !{!2428}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "ira_bitmap_obstack", scope: !2, file: !3, line: 560, type: !898, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)", isOptimized: true, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !846, globals: !2140, nameTableKind: None)
!3 = !DIFile(filename: "ira.c", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!4 = !{!5, !134, !141, !150, !154, !160, !165, !170, !189, !196, !203, !397, !427, !434, !610, !647, !669, !812}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eh_region_type", file: !135, line: 30, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./except.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!136 = !{!137, !138, !139, !140}
!137 = !DIEnumerator(name: "ERT_CLEANUP", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "ERT_TRY", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "ERT_ALLOWED_EXCEPTIONS", value: 2, isUnsigned: true)
!140 = !DIEnumerator(name: "ERT_MUST_NOT_THROW", value: 3, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "lpt_dec", file: !142, line: 31, baseType: !7, size: 32, elements: !143)
!142 = !DIFile(filename: "./cfgloop.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!143 = !{!144, !145, !146, !147, !148, !149}
!144 = !DIEnumerator(name: "LPT_NONE", value: 0, isUnsigned: true)
!145 = !DIEnumerator(name: "LPT_PEEL_COMPLETELY", value: 1, isUnsigned: true)
!146 = !DIEnumerator(name: "LPT_PEEL_SIMPLE", value: 2, isUnsigned: true)
!147 = !DIEnumerator(name: "LPT_UNROLL_CONSTANT", value: 3, isUnsigned: true)
!148 = !DIEnumerator(name: "LPT_UNROLL_RUNTIME", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "LPT_UNROLL_STUPID", value: 5, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "loop_estimation", file: !142, line: 91, baseType: !7, size: 32, elements: !151)
!151 = !{!152, !153}
!152 = !DIEnumerator(name: "EST_NOT_COMPUTED", value: 0, isUnsigned: true)
!153 = !DIEnumerator(name: "EST_AVAILABLE", value: 1, isUnsigned: true)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !155, line: 363, baseType: !7, size: 32, elements: !156)
!155 = !DIFile(filename: "./basic-block.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!156 = !{!157, !158, !159}
!157 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!158 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!159 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!160 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !155, line: 355, baseType: !7, size: 32, elements: !161)
!161 = !{!162, !163, !164}
!162 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!163 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!164 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!165 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !166, line: 474, baseType: !7, size: 32, elements: !167)
!166 = !DIFile(filename: "./config/i386/i386.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!167 = !{!168, !169}
!168 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!169 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !171, line: 280, baseType: !7, size: 32, elements: !172)
!171 = !DIFile(filename: "./tree.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!172 = !{!173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!173 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!176 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!183 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!184 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!185 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!186 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!187 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!188 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !171, line: 1817, baseType: !7, size: 32, elements: !190)
!190 = !{!191, !192, !193, !194, !195}
!191 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !171, line: 1805, baseType: !7, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202}
!198 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !171, line: 39, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!205 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!207 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!208 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!209 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!210 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!211 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!212 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!213 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!214 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!215 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!216 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!217 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!220 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!221 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!222 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!223 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!224 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!225 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!226 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!227 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!228 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!229 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!230 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!231 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!232 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!233 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!234 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!235 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!236 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!237 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!238 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!239 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!240 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!241 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!242 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!243 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!244 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!245 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!246 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!247 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!248 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!249 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!250 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!251 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!252 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!253 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!254 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!255 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!256 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!257 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!258 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!259 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!260 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!261 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!262 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!263 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!264 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!265 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!266 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!267 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!268 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!269 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!270 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!271 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!272 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!273 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!274 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!275 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!277 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!278 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!279 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!280 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!281 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!282 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!283 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!284 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!285 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!286 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!287 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!288 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!289 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!290 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!291 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!292 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!293 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!294 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!295 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!296 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!297 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!298 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!299 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!300 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!301 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!302 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!303 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!304 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!305 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!306 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!307 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!308 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!309 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!310 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!311 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!312 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!313 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!314 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!315 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!316 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!317 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!318 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!319 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!320 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!321 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!322 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!323 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!324 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!325 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!326 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!327 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!328 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!329 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!330 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!331 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!332 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!333 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!334 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!335 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!336 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!337 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!338 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!339 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!340 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!341 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!342 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!343 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!344 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!345 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!346 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!347 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!348 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!349 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!350 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!351 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!352 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!353 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!354 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!355 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!356 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!357 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!358 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!359 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!360 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!361 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!362 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!363 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!364 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!365 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!366 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!367 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!368 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!369 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!370 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!371 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!372 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!373 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!374 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!377 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!378 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!379 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!380 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!381 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!382 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!383 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!384 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!385 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!386 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!387 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!388 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!389 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!390 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!391 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!392 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!393 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!394 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!395 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!396 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !166, line: 1188, baseType: !7, size: 32, elements: !398)
!398 = !{!399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426}
!399 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!400 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!401 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!402 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!403 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!404 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!405 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!406 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!407 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!408 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!409 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!410 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!411 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!412 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!413 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!414 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!415 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!416 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!417 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!418 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!419 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!420 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!421 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!422 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!423 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!424 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!425 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!426 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!427 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !428, line: 104, baseType: !7, size: 32, elements: !429)
!428 = !DIFile(filename: "./tree-pass.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!429 = !{!430, !431, !432, !433}
!430 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!431 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!432 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!433 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!434 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !435, line: 74, baseType: !7, size: 32, elements: !436)
!435 = !DIFile(filename: "./timevar.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!436 = !{!437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609}
!437 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!438 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!439 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!440 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!441 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!442 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!443 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!444 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!445 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!446 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!447 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!448 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!449 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!450 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!451 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!452 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!453 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!454 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!455 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!456 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!457 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!458 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!459 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!460 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!461 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!462 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!463 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!464 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!465 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!466 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!467 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!468 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!469 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!470 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!471 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!472 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!473 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!474 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!475 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!476 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!477 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!478 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!479 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!480 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!481 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!482 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!483 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!484 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!485 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!486 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!487 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!488 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!489 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!490 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!491 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!492 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!493 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!494 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!495 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!496 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!497 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!498 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!499 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!500 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!501 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!502 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!503 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!504 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!505 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!506 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!507 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!508 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!509 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!510 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!511 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!512 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!513 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!514 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!515 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!516 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!517 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!518 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!519 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!520 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!521 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!522 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!523 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!524 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!525 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!526 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!527 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!528 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!529 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!530 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!531 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!532 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!533 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!534 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!535 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!536 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!537 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!538 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!539 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!540 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!541 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!542 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!543 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!544 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!545 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!546 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!547 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!548 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!549 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!550 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!551 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!552 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!553 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!554 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!555 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!556 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!557 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!558 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!559 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!560 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!561 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!562 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!563 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!564 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!565 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!566 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!567 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!568 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!569 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!570 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!571 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!572 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!573 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!574 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!575 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!576 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!577 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!578 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!579 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!580 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!581 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!582 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!583 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!584 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!585 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!586 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!587 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!588 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!589 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!590 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!591 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!592 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!593 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!594 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!595 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!596 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!597 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!598 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!599 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!600 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!601 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!602 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!603 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!604 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!605 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!606 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!607 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!608 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!609 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "constraint_num", file: !611, line: 135, baseType: !7, size: 32, elements: !612)
!611 = !DIFile(filename: "./tm-preds.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!612 = !{!613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646}
!613 = !DIEnumerator(name: "CONSTRAINT__UNKNOWN", value: 0, isUnsigned: true)
!614 = !DIEnumerator(name: "CONSTRAINT_R", value: 1, isUnsigned: true)
!615 = !DIEnumerator(name: "CONSTRAINT_q", value: 2, isUnsigned: true)
!616 = !DIEnumerator(name: "CONSTRAINT_Q", value: 3, isUnsigned: true)
!617 = !DIEnumerator(name: "CONSTRAINT_l", value: 4, isUnsigned: true)
!618 = !DIEnumerator(name: "CONSTRAINT_a", value: 5, isUnsigned: true)
!619 = !DIEnumerator(name: "CONSTRAINT_b", value: 6, isUnsigned: true)
!620 = !DIEnumerator(name: "CONSTRAINT_c", value: 7, isUnsigned: true)
!621 = !DIEnumerator(name: "CONSTRAINT_d", value: 8, isUnsigned: true)
!622 = !DIEnumerator(name: "CONSTRAINT_S", value: 9, isUnsigned: true)
!623 = !DIEnumerator(name: "CONSTRAINT_D", value: 10, isUnsigned: true)
!624 = !DIEnumerator(name: "CONSTRAINT_A", value: 11, isUnsigned: true)
!625 = !DIEnumerator(name: "CONSTRAINT_U", value: 12, isUnsigned: true)
!626 = !DIEnumerator(name: "CONSTRAINT_f", value: 13, isUnsigned: true)
!627 = !DIEnumerator(name: "CONSTRAINT_t", value: 14, isUnsigned: true)
!628 = !DIEnumerator(name: "CONSTRAINT_u", value: 15, isUnsigned: true)
!629 = !DIEnumerator(name: "CONSTRAINT_y", value: 16, isUnsigned: true)
!630 = !DIEnumerator(name: "CONSTRAINT_x", value: 17, isUnsigned: true)
!631 = !DIEnumerator(name: "CONSTRAINT_Yz", value: 18, isUnsigned: true)
!632 = !DIEnumerator(name: "CONSTRAINT_Y2", value: 19, isUnsigned: true)
!633 = !DIEnumerator(name: "CONSTRAINT_Yi", value: 20, isUnsigned: true)
!634 = !DIEnumerator(name: "CONSTRAINT_Ym", value: 21, isUnsigned: true)
!635 = !DIEnumerator(name: "CONSTRAINT_I", value: 22, isUnsigned: true)
!636 = !DIEnumerator(name: "CONSTRAINT_J", value: 23, isUnsigned: true)
!637 = !DIEnumerator(name: "CONSTRAINT_K", value: 24, isUnsigned: true)
!638 = !DIEnumerator(name: "CONSTRAINT_L", value: 25, isUnsigned: true)
!639 = !DIEnumerator(name: "CONSTRAINT_M", value: 26, isUnsigned: true)
!640 = !DIEnumerator(name: "CONSTRAINT_N", value: 27, isUnsigned: true)
!641 = !DIEnumerator(name: "CONSTRAINT_O", value: 28, isUnsigned: true)
!642 = !DIEnumerator(name: "CONSTRAINT_G", value: 29, isUnsigned: true)
!643 = !DIEnumerator(name: "CONSTRAINT_C", value: 30, isUnsigned: true)
!644 = !DIEnumerator(name: "CONSTRAINT_e", value: 31, isUnsigned: true)
!645 = !DIEnumerator(name: "CONSTRAINT_Z", value: 32, isUnsigned: true)
!646 = !DIEnumerator(name: "CONSTRAINT__LIMIT", value: 33, isUnsigned: true)
!647 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !648, line: 36, baseType: !7, size: 32, elements: !649)
!648 = !DIFile(filename: "./machmode.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!649 = !{!650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668}
!650 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!651 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!652 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!653 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!654 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!655 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!656 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!657 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!658 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!659 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!660 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!661 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!662 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!663 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!664 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!665 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!666 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!667 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!668 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!669 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !670, line: 45, baseType: !7, size: 32, elements: !671)
!670 = !DIFile(filename: "./rtl.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!671 = !{!672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811}
!672 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!673 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!674 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!675 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!676 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!677 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!678 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!679 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!680 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!681 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!682 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!683 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!684 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!685 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!686 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!687 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!688 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!689 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!690 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!691 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!692 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!693 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!694 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!695 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!696 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!697 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!698 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!699 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!700 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!701 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!702 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!703 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!704 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!705 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!706 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!707 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!708 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!709 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!710 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!711 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!712 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!713 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!714 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!715 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!716 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!717 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!718 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!719 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!720 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!721 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!722 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!723 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!724 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!725 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!726 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!727 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!728 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!729 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!730 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!731 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!732 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!733 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!734 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!735 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!736 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!737 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!738 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!739 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!740 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!741 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!742 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!743 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!744 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!745 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!746 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!747 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!748 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!749 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!750 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!751 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!752 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!753 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!754 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!755 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!756 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!757 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!758 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!759 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!760 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!761 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!762 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!763 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!764 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!765 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!766 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!767 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!768 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!769 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!770 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!771 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!772 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!773 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!774 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!775 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!776 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!777 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!778 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!779 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!780 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!781 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!782 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!783 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!784 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!785 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!786 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!787 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!788 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!789 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!790 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!791 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!792 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!793 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!794 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!795 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!796 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!797 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!798 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!799 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!800 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!801 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!802 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!803 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!804 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!805 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!806 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!807 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!808 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!809 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!810 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!811 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!812 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !670, line: 836, baseType: !7, size: 32, elements: !813)
!813 = !{!814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845}
!814 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!815 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!816 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!817 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!818 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!819 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!820 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!821 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!822 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!823 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!824 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!825 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!826 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!827 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!828 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!829 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!830 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!831 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!832 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!833 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!834 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!835 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!836 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!837 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!838 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!839 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!840 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!841 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!842 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!843 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!844 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!845 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!846 = !{!847, !848, !849, !850, !853, !854, !856, !851, !863, !5, !397, !610, !866, !647, !860, !669, !868, !938, !2103, !2112, !812, !939, !873, !2121, !7, !2088, !2128, !2139, !865}
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!849 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !852)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "move_table", file: !858, line: 269, baseType: !859)
!858 = !DIFile(filename: "./regs.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!859 = !DICompositeType(tag: DW_TAG_array_type, baseType: !860, size: 432, elements: !861)
!860 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!861 = !{!862}
!862 = !DISubrange(count: 27)
!863 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !864, line: 42, baseType: !865)
!864 = !DIFile(filename: "./hard-reg-set.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!865 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !870, line: 826, size: 256, elements: !871)
!870 = !DIFile(filename: "./df.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!871 = !{!872, !935, !936, !937}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !869, file: !870, line: 829, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !874, line: 47, baseType: !875)
!874 = !DIFile(filename: "./coretypes.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !877, line: 75, size: 256, elements: !878)
!877 = !DIFile(filename: "./bitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!878 = !{!879, !893, !894, !895}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !876, file: !877, line: 76, baseType: !880, size: 64)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !877, line: 68, baseType: !882)
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !877, line: 63, size: 320, elements: !883)
!883 = !{!884, !886, !887, !888}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !882, file: !877, line: 64, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !882, file: !877, line: 65, baseType: !885, size: 64, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !882, file: !877, line: 66, baseType: !7, size: 32, offset: 128)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !882, file: !877, line: 67, baseType: !889, size: 128, offset: 192)
!889 = !DICompositeType(tag: DW_TAG_array_type, baseType: !890, size: 128, elements: !891)
!890 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !877, line: 29, baseType: !865)
!891 = !{!892}
!892 = !DISubrange(count: 2)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !876, file: !877, line: 77, baseType: !880, size: 64, offset: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !876, file: !877, line: 78, baseType: !7, size: 32, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !876, file: !877, line: 79, baseType: !896, size: 64, offset: 192)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !877, line: 49, baseType: !898)
!898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !877, line: 45, size: 832, elements: !899)
!899 = !{!900, !901, !902}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !898, file: !877, line: 46, baseType: !885, size: 64)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !898, file: !877, line: 47, baseType: !875, size: 64, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !898, file: !877, line: 48, baseType: !903, size: 704, offset: 128)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !904, line: 164, size: 704, elements: !905)
!904 = !DIFile(filename: "./include/obstack.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!905 = !{!906, !908, !918, !919, !920, !921, !922, !923, !927, !931, !932, !933, !934}
!906 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !903, file: !904, line: 166, baseType: !907, size: 64)
!907 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !903, file: !904, line: 167, baseType: !909, size: 64, offset: 64)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !904, line: 157, size: 192, elements: !911)
!911 = !{!912, !913, !914}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !910, file: !904, line: 159, baseType: !851, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !910, file: !904, line: 160, baseType: !909, size: 64, offset: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !910, file: !904, line: 161, baseType: !915, size: 32, offset: 128)
!915 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 32, elements: !916)
!916 = !{!917}
!917 = !DISubrange(count: 4)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !903, file: !904, line: 168, baseType: !851, size: 64, offset: 128)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !903, file: !904, line: 169, baseType: !851, size: 64, offset: 192)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !903, file: !904, line: 170, baseType: !851, size: 64, offset: 256)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !903, file: !904, line: 171, baseType: !907, size: 64, offset: 320)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !903, file: !904, line: 172, baseType: !849, size: 32, offset: 384)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !903, file: !904, line: 176, baseType: !924, size: 64, offset: 448)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!909, !853, !907}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !903, file: !904, line: 177, baseType: !928, size: 64, offset: 512)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!929 = !DISubroutineType(types: !930)
!930 = !{null, !853, !909}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !903, file: !904, line: 178, baseType: !853, size: 64, offset: 576)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !903, file: !904, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !903, file: !904, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !903, file: !904, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !869, file: !870, line: 831, baseType: !873, size: 64, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !869, file: !870, line: 834, baseType: !873, size: 64, offset: 128)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !869, file: !870, line: 835, baseType: !873, size: 64, offset: 192)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !874, line: 50, baseType: !940)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !670, line: 240, size: 384, elements: !942)
!942 = !{!943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !941, file: !670, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !941, file: !670, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !941, file: !670, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !941, file: !670, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !941, file: !670, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !941, file: !670, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !941, file: !670, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !941, file: !670, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !941, file: !670, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !941, file: !670, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !941, file: !670, line: 321, baseType: !954, size: 320, offset: 64)
!954 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !670, line: 315, size: 320, elements: !955)
!955 = !{!956, !2038, !2040, !2101, !2102}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !954, file: !670, line: 316, baseType: !957, size: 64)
!957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 64, elements: !973)
!958 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !670, line: 183, baseType: !959)
!959 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !670, line: 166, size: 64, elements: !960)
!960 = !{!961, !962, !963, !964, !965, !975, !976, !988, !991, !992, !2016, !2017, !2028, !2035}
!961 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !959, file: !670, line: 168, baseType: !849, size: 32)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !959, file: !670, line: 169, baseType: !7, size: 32)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !959, file: !670, line: 170, baseType: !854, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !959, file: !670, line: 171, baseType: !939, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !959, file: !670, line: 172, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !874, line: 53, baseType: !967)
!967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !968, size: 64)
!968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !670, line: 359, size: 128, elements: !969)
!969 = !{!970, !971}
!970 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !968, file: !670, line: 360, baseType: !849, size: 32)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !968, file: !670, line: 361, baseType: !972, size: 64, offset: 64)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 64, elements: !973)
!973 = !{!974}
!974 = !DISubrange(count: 1)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !959, file: !670, line: 173, baseType: !5, size: 32)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !959, file: !670, line: 174, baseType: !977, size: 32)
!977 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !670, line: 133, baseType: !978)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !670, line: 115, size: 32, elements: !979)
!979 = !{!980, !981, !982, !983, !984, !985, !986, !987}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !978, file: !670, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !978, file: !670, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !978, file: !670, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !978, file: !670, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !978, file: !670, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !978, file: !670, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !978, file: !670, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !978, file: !670, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !959, file: !670, line: 175, baseType: !989, size: 64)
!989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !990, size: 64)
!990 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !670, line: 175, flags: DIFlagFwdDecl)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !959, file: !670, line: 176, baseType: !875, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !959, file: !670, line: 177, baseType: !993, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !874, line: 56, baseType: !994)
!994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !995, size: 64)
!995 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !171, line: 3371, size: 1792, elements: !996)
!996 = !{!997, !1030, !1036, !1047, !1066, !1077, !1082, !1089, !1095, !1108, !1120, !1158, !1163, !1191, !1199, !1200, !1205, !1214, !1220, !1225, !1229, !1233, !1655, !1704, !1710, !1716, !1723, !1746, !1760, !1777, !1789, !1811, !1826, !1998}
!997 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !995, file: !171, line: 3372, baseType: !998, size: 64)
!998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !171, line: 360, size: 64, elements: !999)
!999 = !{!1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !998, file: !171, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !998, file: !171, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !998, file: !171, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !998, file: !171, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !998, file: !171, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !998, file: !171, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !998, file: !171, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !998, file: !171, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !998, file: !171, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !998, file: !171, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !998, file: !171, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !998, file: !171, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !998, file: !171, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !998, file: !171, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !998, file: !171, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !998, file: !171, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !998, file: !171, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !998, file: !171, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !998, file: !171, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !998, file: !171, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !998, file: !171, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !998, file: !171, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !998, file: !171, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !998, file: !171, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !998, file: !171, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !998, file: !171, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !998, file: !171, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !998, file: !171, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !998, file: !171, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !998, file: !171, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !995, file: !171, line: 3373, baseType: !1031, size: 192)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !171, line: 402, size: 192, elements: !1032)
!1032 = !{!1033, !1034, !1035}
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1031, file: !171, line: 403, baseType: !998, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1031, file: !171, line: 404, baseType: !993, size: 64, offset: 64)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1031, file: !171, line: 405, baseType: !993, size: 64, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !995, file: !171, line: 3374, baseType: !1037, size: 320)
!1037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !171, line: 1384, size: 320, elements: !1038)
!1038 = !{!1039, !1040}
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1037, file: !171, line: 1385, baseType: !1031, size: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1037, file: !171, line: 1386, baseType: !1041, size: 128, offset: 192)
!1041 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1042, line: 58, baseType: !1043)
!1042 = !DIFile(filename: "./double-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1043 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1042, line: 54, size: 128, elements: !1044)
!1044 = !{!1045, !1046}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1043, file: !1042, line: 56, baseType: !865, size: 64)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1043, file: !1042, line: 57, baseType: !907, size: 64, offset: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !995, file: !171, line: 3375, baseType: !1048, size: 256)
!1048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !171, line: 1397, size: 256, elements: !1049)
!1049 = !{!1050, !1051}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1048, file: !171, line: 1398, baseType: !1031, size: 192)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1048, file: !171, line: 1399, baseType: !1052, size: 64, offset: 192)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1053, size: 64)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1054, line: 52, size: 256, elements: !1055)
!1054 = !DIFile(filename: "./real.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1055 = !{!1056, !1057, !1058, !1059, !1060, !1061, !1062}
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1053, file: !1054, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1053, file: !1054, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1053, file: !1054, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1053, file: !1054, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1053, file: !1054, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1053, file: !1054, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1053, file: !1054, line: 62, baseType: !1063, size: 192, offset: 64)
!1063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 192, elements: !1064)
!1064 = !{!1065}
!1065 = !DISubrange(count: 3)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !995, file: !171, line: 3376, baseType: !1067, size: 256)
!1067 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !171, line: 1408, size: 256, elements: !1068)
!1068 = !{!1069, !1070}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1067, file: !171, line: 1409, baseType: !1031, size: 192)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1067, file: !171, line: 1410, baseType: !1071, size: 64, offset: 192)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1073, line: 27, size: 192, elements: !1074)
!1073 = !DIFile(filename: "./fixed-value.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1074 = !{!1075, !1076}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1072, file: !1073, line: 29, baseType: !1041, size: 128)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1072, file: !1073, line: 30, baseType: !5, size: 32, offset: 128)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !995, file: !171, line: 3377, baseType: !1078, size: 256)
!1078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !171, line: 1437, size: 256, elements: !1079)
!1079 = !{!1080, !1081}
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1078, file: !171, line: 1438, baseType: !1031, size: 192)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1078, file: !171, line: 1439, baseType: !993, size: 64, offset: 192)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !995, file: !171, line: 3378, baseType: !1083, size: 256)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !171, line: 1418, size: 256, elements: !1084)
!1084 = !{!1085, !1086, !1087}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1083, file: !171, line: 1419, baseType: !1031, size: 192)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1083, file: !171, line: 1420, baseType: !849, size: 32, offset: 192)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1083, file: !171, line: 1421, baseType: !1088, size: 8, offset: 224)
!1088 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 8, elements: !973)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !995, file: !171, line: 3379, baseType: !1090, size: 320)
!1090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !171, line: 1428, size: 320, elements: !1091)
!1091 = !{!1092, !1093, !1094}
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1090, file: !171, line: 1429, baseType: !1031, size: 192)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1090, file: !171, line: 1430, baseType: !993, size: 64, offset: 192)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1090, file: !171, line: 1431, baseType: !993, size: 64, offset: 256)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !995, file: !171, line: 3380, baseType: !1096, size: 320)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !171, line: 1460, size: 320, elements: !1097)
!1097 = !{!1098, !1099}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1096, file: !171, line: 1461, baseType: !1031, size: 192)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1096, file: !171, line: 1462, baseType: !1100, size: 128, offset: 192)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1101, line: 31, size: 128, elements: !1102)
!1101 = !DIFile(filename: "./symtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1102 = !{!1103, !1106, !1107}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1100, file: !1101, line: 32, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !848)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1100, file: !1101, line: 33, baseType: !7, size: 32, offset: 64)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1100, file: !1101, line: 34, baseType: !7, size: 32, offset: 96)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !995, file: !171, line: 3381, baseType: !1109, size: 384)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !171, line: 2507, size: 384, elements: !1110)
!1110 = !{!1111, !1112, !1117, !1118, !1119}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1109, file: !171, line: 2508, baseType: !1031, size: 192)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1109, file: !171, line: 2509, baseType: !1113, size: 32, offset: 192)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1114, line: 58, baseType: !1115)
!1114 = !DIFile(filename: "./input.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1116, line: 44, baseType: !7)
!1116 = !DIFile(filename: "./line-map.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1109, file: !171, line: 2510, baseType: !7, size: 32, offset: 224)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1109, file: !171, line: 2511, baseType: !993, size: 64, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1109, file: !171, line: 2512, baseType: !993, size: 64, offset: 320)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !995, file: !171, line: 3382, baseType: !1121, size: 896)
!1121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !171, line: 2652, size: 896, elements: !1122)
!1122 = !{!1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155}
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1121, file: !171, line: 2653, baseType: !1109, size: 384)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1121, file: !171, line: 2654, baseType: !993, size: 64, offset: 384)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1121, file: !171, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1121, file: !171, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1121, file: !171, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1121, file: !171, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1121, file: !171, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1121, file: !171, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1121, file: !171, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1121, file: !171, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1121, file: !171, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1121, file: !171, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1121, file: !171, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1121, file: !171, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1121, file: !171, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1121, file: !171, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1121, file: !171, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1121, file: !171, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1121, file: !171, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1121, file: !171, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1121, file: !171, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1121, file: !171, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1121, file: !171, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1121, file: !171, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1121, file: !171, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1121, file: !171, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1121, file: !171, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1121, file: !171, line: 2703, baseType: !7, size: 32, offset: 512)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1121, file: !171, line: 2705, baseType: !993, size: 64, offset: 576)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1121, file: !171, line: 2706, baseType: !993, size: 64, offset: 640)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1121, file: !171, line: 2707, baseType: !993, size: 64, offset: 704)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1121, file: !171, line: 2708, baseType: !993, size: 64, offset: 768)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1121, file: !171, line: 2711, baseType: !1156, size: 64, offset: 832)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !171, line: 2711, flags: DIFlagFwdDecl)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !995, file: !171, line: 3383, baseType: !1159, size: 960)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !171, line: 2756, size: 960, elements: !1160)
!1160 = !{!1161, !1162}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1159, file: !171, line: 2757, baseType: !1121, size: 896)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1159, file: !171, line: 2758, baseType: !939, size: 64, offset: 896)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !995, file: !171, line: 3384, baseType: !1164, size: 1472)
!1164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !171, line: 3114, size: 1472, elements: !1165)
!1165 = !{!1166, !1187, !1188, !1189, !1190}
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1164, file: !171, line: 3115, baseType: !1167, size: 1216)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !171, line: 2984, size: 1216, elements: !1168)
!1168 = !{!1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1167, file: !171, line: 2985, baseType: !1159, size: 960)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1167, file: !171, line: 2986, baseType: !993, size: 64, offset: 960)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1167, file: !171, line: 2987, baseType: !993, size: 64, offset: 1024)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1167, file: !171, line: 2988, baseType: !993, size: 64, offset: 1088)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1167, file: !171, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1167, file: !171, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1167, file: !171, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1167, file: !171, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1167, file: !171, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1167, file: !171, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1167, file: !171, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1167, file: !171, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1167, file: !171, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1167, file: !171, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1167, file: !171, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1167, file: !171, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1167, file: !171, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1167, file: !171, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1164, file: !171, line: 3117, baseType: !993, size: 64, offset: 1216)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1164, file: !171, line: 3119, baseType: !993, size: 64, offset: 1280)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1164, file: !171, line: 3121, baseType: !993, size: 64, offset: 1344)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1164, file: !171, line: 3123, baseType: !993, size: 64, offset: 1408)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !995, file: !171, line: 3385, baseType: !1192, size: 1088)
!1192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !171, line: 2874, size: 1088, elements: !1193)
!1193 = !{!1194, !1195, !1196}
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1192, file: !171, line: 2875, baseType: !1159, size: 960)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1192, file: !171, line: 2876, baseType: !939, size: 64, offset: 960)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1192, file: !171, line: 2877, baseType: !1197, size: 64, offset: 1024)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !171, line: 2856, flags: DIFlagFwdDecl)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !995, file: !171, line: 3386, baseType: !1167, size: 1216)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !995, file: !171, line: 3387, baseType: !1201, size: 1280)
!1201 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !171, line: 3093, size: 1280, elements: !1202)
!1202 = !{!1203, !1204}
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1201, file: !171, line: 3094, baseType: !1167, size: 1216)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1201, file: !171, line: 3095, baseType: !1197, size: 64, offset: 1216)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !995, file: !171, line: 3388, baseType: !1206, size: 1216)
!1206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !171, line: 2824, size: 1216, elements: !1207)
!1207 = !{!1208, !1209, !1210, !1211, !1212, !1213}
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1206, file: !171, line: 2825, baseType: !1121, size: 896)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1206, file: !171, line: 2827, baseType: !993, size: 64, offset: 896)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1206, file: !171, line: 2828, baseType: !993, size: 64, offset: 960)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1206, file: !171, line: 2829, baseType: !993, size: 64, offset: 1024)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1206, file: !171, line: 2830, baseType: !993, size: 64, offset: 1088)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1206, file: !171, line: 2831, baseType: !993, size: 64, offset: 1152)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !995, file: !171, line: 3389, baseType: !1215, size: 1024)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !171, line: 2850, size: 1024, elements: !1216)
!1216 = !{!1217, !1218, !1219}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1215, file: !171, line: 2851, baseType: !1159, size: 960)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1215, file: !171, line: 2852, baseType: !849, size: 32, offset: 960)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1215, file: !171, line: 2853, baseType: !849, size: 32, offset: 992)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !995, file: !171, line: 3390, baseType: !1221, size: 1024)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !171, line: 2857, size: 1024, elements: !1222)
!1222 = !{!1223, !1224}
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1221, file: !171, line: 2858, baseType: !1159, size: 960)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1221, file: !171, line: 2859, baseType: !1197, size: 64, offset: 960)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !995, file: !171, line: 3391, baseType: !1226, size: 960)
!1226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !171, line: 2862, size: 960, elements: !1227)
!1227 = !{!1228}
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1226, file: !171, line: 2863, baseType: !1159, size: 960)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !995, file: !171, line: 3392, baseType: !1230, size: 1472)
!1230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !171, line: 3304, size: 1472, elements: !1231)
!1231 = !{!1232}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1230, file: !171, line: 3305, baseType: !1164, size: 1472)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !995, file: !171, line: 3393, baseType: !1234, size: 1792)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !171, line: 3248, size: 1792, elements: !1235)
!1235 = !{!1236, !1237, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1234, file: !171, line: 3249, baseType: !1164, size: 1472)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1234, file: !171, line: 3251, baseType: !1238, size: 64, offset: 1472)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1240, line: 463, size: 1152, elements: !1241)
!1240 = !DIFile(filename: "./function.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1241 = !{!1242, !1406, !1566, !1567, !1570, !1578, !1579, !1580, !1581, !1582, !1583, !1607, !1610, !1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1239, file: !1240, line: 464, baseType: !1243, size: 64)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !135, line: 194, size: 384, elements: !1245)
!1245 = !{!1246, !1295, !1308, !1322, !1374, !1387}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "region_tree", scope: !1244, file: !135, line: 197, baseType: !1247, size: 64)
!1247 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_region", file: !135, line: 182, baseType: !1248)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_d", file: !135, line: 116, size: 704, elements: !1250)
!1250 = !{!1251, !1252, !1253, !1254, !1255, !1256, !1283, !1292, !1293, !1294}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "outer", scope: !1249, file: !135, line: 119, baseType: !1248, size: 64)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1249, file: !135, line: 122, baseType: !1248, size: 64, offset: 64)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "next_peer", scope: !1249, file: !135, line: 123, baseType: !1248, size: 64, offset: 128)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1249, file: !135, line: 126, baseType: !849, size: 32, offset: 192)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1249, file: !135, line: 129, baseType: !134, size: 32, offset: 224)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1249, file: !135, line: 165, baseType: !1257, size: 192, offset: 256)
!1257 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_region_u", file: !135, line: 132, size: 192, elements: !1258)
!1258 = !{!1259, !1272, !1278}
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "eh_try", scope: !1257, file: !135, line: 137, baseType: !1260, size: 128)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_try", file: !135, line: 133, size: 128, elements: !1261)
!1261 = !{!1262, !1271}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "first_catch", scope: !1260, file: !135, line: 135, baseType: !1263, size: 64)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_catch_d", file: !135, line: 93, size: 320, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1270}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "next_catch", scope: !1264, file: !135, line: 96, baseType: !1263, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "prev_catch", scope: !1264, file: !135, line: 97, baseType: !1263, size: 64, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1264, file: !135, line: 101, baseType: !993, size: 64, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "filter_list", scope: !1264, file: !135, line: 106, baseType: !993, size: 64, offset: 192)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1264, file: !135, line: 111, baseType: !993, size: 64, offset: 256)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "last_catch", scope: !1260, file: !135, line: 136, baseType: !1263, size: 64, offset: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "allowed", scope: !1257, file: !135, line: 151, baseType: !1273, size: 192)
!1273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_allowed", file: !135, line: 139, size: 192, elements: !1274)
!1274 = !{!1275, !1276, !1277}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "type_list", scope: !1273, file: !135, line: 141, baseType: !993, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !1273, file: !135, line: 145, baseType: !993, size: 64, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1273, file: !135, line: 150, baseType: !849, size: 32, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "must_not_throw", scope: !1257, file: !135, line: 164, baseType: !1279, size: 128)
!1279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_region_u_must_not_throw", file: !135, line: 153, size: 128, elements: !1280)
!1280 = !{!1281, !1282}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "failure_decl", scope: !1279, file: !135, line: 161, baseType: !993, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "failure_loc", scope: !1279, file: !135, line: 163, baseType: !1113, size: 32, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pads", scope: !1249, file: !135, line: 168, baseType: !1284, size: 64, offset: 448)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "eh_landing_pad_d", file: !135, line: 67, size: 320, elements: !1286)
!1286 = !{!1287, !1288, !1289, !1290, !1291}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "next_lp", scope: !1285, file: !135, line: 70, baseType: !1284, size: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1285, file: !135, line: 73, baseType: !1248, size: 64, offset: 64)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "post_landing_pad", scope: !1285, file: !135, line: 78, baseType: !993, size: 64, offset: 128)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "landing_pad", scope: !1285, file: !135, line: 85, baseType: !939, size: 64, offset: 192)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1285, file: !135, line: 88, baseType: !849, size: 32, offset: 256)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "exc_ptr_reg", scope: !1249, file: !135, line: 173, baseType: !939, size: 64, offset: 512)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "filter_reg", scope: !1249, file: !135, line: 173, baseType: !939, size: 64, offset: 576)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "use_cxa_end_cleanup", scope: !1249, file: !135, line: 177, baseType: !848, size: 8, offset: 640)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "region_array", scope: !1244, file: !135, line: 200, baseType: !1296, size: 64, offset: 64)
!1296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_gc", file: !135, line: 185, baseType: !1298)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_gc", file: !135, line: 185, size: 128, elements: !1299)
!1299 = !{!1300}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1298, file: !135, line: 185, baseType: !1301, size: 128)
!1301 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_region_base", file: !135, line: 184, baseType: !1302)
!1302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_region_base", file: !135, line: 184, size: 128, elements: !1303)
!1303 = !{!1304, !1305, !1306}
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1302, file: !135, line: 184, baseType: !7, size: 32)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1302, file: !135, line: 184, baseType: !7, size: 32, offset: 32)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1302, file: !135, line: 184, baseType: !1307, size: 64, offset: 64)
!1307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1247, size: 64, elements: !973)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "lp_array", scope: !1244, file: !135, line: 203, baseType: !1309, size: 64, offset: 128)
!1309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!1310 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, baseType: !1311)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_gc", file: !135, line: 189, size: 128, elements: !1312)
!1312 = !{!1313}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1311, file: !135, line: 189, baseType: !1314, size: 128)
!1314 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_eh_landing_pad_base", file: !135, line: 188, baseType: !1315)
!1315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_eh_landing_pad_base", file: !135, line: 188, size: 128, elements: !1316)
!1316 = !{!1317, !1318, !1319}
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1315, file: !135, line: 188, baseType: !7, size: 32)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1315, file: !135, line: 188, baseType: !7, size: 32, offset: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1315, file: !135, line: 188, baseType: !1320, size: 64, offset: 64)
!1320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1321, size: 64, elements: !973)
!1321 = !DIDerivedType(tag: DW_TAG_typedef, name: "eh_landing_pad", file: !135, line: 180, baseType: !1284)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "throw_stmt_table", scope: !1244, file: !135, line: 207, baseType: !1323, size: 64, offset: 192)
!1323 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1324, line: 144, baseType: !1325)
!1324 = !DIFile(filename: "./include/hashtab.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1326, size: 64)
!1326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1324, line: 100, size: 896, elements: !1327)
!1327 = !{!1328, !1336, !1341, !1346, !1348, !1351, !1352, !1353, !1354, !1355, !1360, !1362, !1363, !1368, !1373}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1326, file: !1324, line: 102, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1324, line: 52, baseType: !1330)
!1330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1331, size: 64)
!1331 = !DISubroutineType(types: !1332)
!1332 = !{!1333, !1334}
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1324, line: 47, baseType: !7)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1326, file: !1324, line: 105, baseType: !1337, size: 64, offset: 64)
!1337 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1324, line: 59, baseType: !1338)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DISubroutineType(types: !1340)
!1340 = !{!849, !1334, !1334}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1326, file: !1324, line: 108, baseType: !1342, size: 64, offset: 128)
!1342 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1324, line: 63, baseType: !1343)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DISubroutineType(types: !1345)
!1345 = !{null, !853}
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1326, file: !1324, line: 111, baseType: !1347, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !853, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1326, file: !1324, line: 114, baseType: !1349, size: 64, offset: 256)
!1349 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1350, line: 46, baseType: !865)
!1350 = !DIFile(filename: "/scratch/install/llvm-install-release/lib/clang/9.0.1/include/stddef.h", directory: "")
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1326, file: !1324, line: 117, baseType: !1349, size: 64, offset: 320)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1326, file: !1324, line: 120, baseType: !1349, size: 64, offset: 384)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1326, file: !1324, line: 124, baseType: !7, size: 32, offset: 448)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1326, file: !1324, line: 128, baseType: !7, size: 32, offset: 480)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1326, file: !1324, line: 131, baseType: !1356, size: 64, offset: 512)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1324, line: 75, baseType: !1357)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DISubroutineType(types: !1359)
!1359 = !{!853, !1349, !1349}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1326, file: !1324, line: 132, baseType: !1361, size: 64, offset: 576)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1324, line: 78, baseType: !1343)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1326, file: !1324, line: 135, baseType: !853, size: 64, offset: 640)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1326, file: !1324, line: 136, baseType: !1364, size: 64, offset: 704)
!1364 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1324, line: 82, baseType: !1365)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DISubroutineType(types: !1367)
!1367 = !{!853, !853, !1349, !1349}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1326, file: !1324, line: 137, baseType: !1369, size: 64, offset: 768)
!1369 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1324, line: 83, baseType: !1370)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DISubroutineType(types: !1372)
!1372 = !{null, !853, !853}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1326, file: !1324, line: 141, baseType: !7, size: 32, offset: 832)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "ttype_data", scope: !1244, file: !135, line: 211, baseType: !1375, size: 64, offset: 256)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !171, line: 183, baseType: !1377)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !171, line: 183, size: 128, elements: !1378)
!1378 = !{!1379}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1377, file: !171, line: 183, baseType: !1380, size: 128)
!1380 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !171, line: 182, baseType: !1381)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !171, line: 182, size: 128, elements: !1382)
!1382 = !{!1383, !1384, !1385}
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1381, file: !171, line: 182, baseType: !7, size: 32)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1381, file: !171, line: 182, baseType: !7, size: 32, offset: 32)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1381, file: !171, line: 182, baseType: !1386, size: 64, offset: 64)
!1386 = !DICompositeType(tag: DW_TAG_array_type, baseType: !993, size: 64, elements: !973)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "ehspec_data", scope: !1244, file: !135, line: 220, baseType: !1388, size: 64, offset: 320)
!1388 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eh_status_u", file: !135, line: 217, size: 64, elements: !1389)
!1389 = !{!1390, !1391}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "arm_eabi", scope: !1388, file: !135, line: 218, baseType: !1375, size: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !1388, file: !135, line: 219, baseType: !1392, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_gc", file: !1394, line: 29, baseType: !1395)
!1394 = !DIFile(filename: "./vecprim.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_gc", file: !1394, line: 29, size: 96, elements: !1396)
!1396 = !{!1397}
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1395, file: !1394, line: 29, baseType: !1398, size: 96)
!1398 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_uchar_base", file: !1394, line: 27, baseType: !1399)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_uchar_base", file: !1394, line: 27, size: 96, elements: !1400)
!1400 = !{!1401, !1402, !1403}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1399, file: !1394, line: 27, baseType: !7, size: 32)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1399, file: !1394, line: 27, baseType: !7, size: 32, offset: 32)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1399, file: !1394, line: 27, baseType: !1404, size: 8, offset: 64)
!1404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1405, size: 8, elements: !973)
!1405 = !DIDerivedType(tag: DW_TAG_typedef, name: "uchar", file: !1394, line: 26, baseType: !848)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1239, file: !1240, line: 467, baseType: !1407, size: 64, offset: 64)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !155, line: 374, size: 640, elements: !1409)
!1409 = !{!1410, !1541, !1542, !1555, !1556, !1557, !1558, !1559, !1560, !1562, !1564, !1565}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1408, file: !155, line: 377, baseType: !1411, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !874, line: 111, baseType: !1412)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !155, line: 217, size: 832, elements: !1414)
!1414 = !{!1415, !1450, !1451, !1452, !1511, !1515, !1516, !1517, !1535, !1536, !1537, !1538, !1539, !1540}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1413, file: !155, line: 219, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !155, line: 151, baseType: !1418)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !155, line: 151, size: 128, elements: !1419)
!1419 = !{!1420}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1418, file: !155, line: 151, baseType: !1421, size: 128)
!1421 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !155, line: 150, baseType: !1422)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !155, line: 150, size: 128, elements: !1423)
!1423 = !{!1424, !1425, !1426}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1422, file: !155, line: 150, baseType: !7, size: 32)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1422, file: !155, line: 150, baseType: !7, size: 32, offset: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1422, file: !155, line: 150, baseType: !1427, size: 64, offset: 64)
!1427 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1428, size: 64, elements: !973)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !874, line: 108, baseType: !1429)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !155, line: 122, size: 512, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1442, !1443, !1444, !1445, !1446, !1447, !1448}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1430, file: !155, line: 124, baseType: !1412, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1430, file: !155, line: 125, baseType: !1412, size: 64, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1430, file: !155, line: 131, baseType: !1435, size: 64, offset: 128)
!1435 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !155, line: 128, size: 64, elements: !1436)
!1436 = !{!1437, !1441}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1435, file: !155, line: 129, baseType: !1438, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !874, line: 66, baseType: !1439)
!1439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1440, size: 64)
!1440 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !874, line: 65, flags: DIFlagFwdDecl)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1435, file: !155, line: 130, baseType: !939, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1430, file: !155, line: 134, baseType: !853, size: 64, offset: 192)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1430, file: !155, line: 137, baseType: !993, size: 64, offset: 256)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1430, file: !155, line: 138, baseType: !1113, size: 32, offset: 320)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1430, file: !155, line: 142, baseType: !7, size: 32, offset: 352)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1430, file: !155, line: 144, baseType: !849, size: 32, offset: 384)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1430, file: !155, line: 145, baseType: !849, size: 32, offset: 416)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1430, file: !155, line: 146, baseType: !1449, size: 64, offset: 448)
!1449 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !155, line: 119, baseType: !907)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1413, file: !155, line: 220, baseType: !1416, size: 64, offset: 64)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1413, file: !155, line: 223, baseType: !853, size: 64, offset: 128)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1413, file: !155, line: 226, baseType: !1453, size: 64, offset: 192)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !142, line: 100, size: 1216, elements: !1455)
!1455 = !{!1456, !1457, !1458, !1459, !1460, !1465, !1466, !1467, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1501, !1509, !1510}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1454, file: !142, line: 102, baseType: !849, size: 32)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "ninsns", scope: !1454, file: !142, line: 105, baseType: !7, size: 32, offset: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1454, file: !142, line: 108, baseType: !1412, size: 64, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "latch", scope: !1454, file: !142, line: 111, baseType: !1412, size: 64, offset: 128)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "lpt_decision", scope: !1454, file: !142, line: 114, baseType: !1461, size: 64, offset: 192)
!1461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lpt_decision", file: !142, line: 41, size: 64, elements: !1462)
!1462 = !{!1463, !1464}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "decision", scope: !1461, file: !142, line: 42, baseType: !141, size: 32)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1461, file: !142, line: 43, baseType: !7, size: 32, offset: 32)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "av_ninsns", scope: !1454, file: !142, line: 117, baseType: !7, size: 32, offset: 256)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "num_nodes", scope: !1454, file: !142, line: 120, baseType: !7, size: 32, offset: 288)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "superloops", scope: !1454, file: !142, line: 123, baseType: !1468, size: 64, offset: 320)
!1468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1469, size: 64)
!1469 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_gc", file: !142, line: 87, baseType: !1470)
!1470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_gc", file: !142, line: 87, size: 128, elements: !1471)
!1471 = !{!1472}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1470, file: !142, line: 87, baseType: !1473, size: 128)
!1473 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_loop_p_base", file: !142, line: 85, baseType: !1474)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_loop_p_base", file: !142, line: 85, size: 128, elements: !1475)
!1475 = !{!1476, !1477, !1478}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1474, file: !142, line: 85, baseType: !7, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1474, file: !142, line: 85, baseType: !7, size: 32, offset: 32)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1474, file: !142, line: 85, baseType: !1479, size: 64, offset: 64)
!1479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1480, size: 64, elements: !973)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "loop_p", file: !142, line: 84, baseType: !1453)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "inner", scope: !1454, file: !142, line: 126, baseType: !1453, size: 64, offset: 384)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1454, file: !142, line: 129, baseType: !1453, size: 64, offset: 448)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1454, file: !142, line: 132, baseType: !853, size: 64, offset: 512)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations", scope: !1454, file: !142, line: 139, baseType: !993, size: 64, offset: 576)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_upper_bound", scope: !1454, file: !142, line: 143, baseType: !1041, size: 128, offset: 640)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "nb_iterations_estimate", scope: !1454, file: !142, line: 146, baseType: !1041, size: 128, offset: 768)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "any_upper_bound", scope: !1454, file: !142, line: 148, baseType: !848, size: 8, offset: 896)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "any_estimate", scope: !1454, file: !142, line: 149, baseType: !848, size: 8, offset: 904)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "estimate_state", scope: !1454, file: !142, line: 153, baseType: !150, size: 32, offset: 928)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1454, file: !142, line: 156, baseType: !1491, size: 64, offset: 960)
!1491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!1492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nb_iter_bound", file: !142, line: 48, size: 320, elements: !1493)
!1493 = !{!1494, !1498, !1499, !1500}
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1492, file: !142, line: 50, baseType: !1495, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !874, line: 58, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !874, line: 57, flags: DIFlagFwdDecl)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "bound", scope: !1492, file: !142, line: 59, baseType: !1041, size: 128, offset: 64)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "is_exit", scope: !1492, file: !142, line: 64, baseType: !848, size: 8, offset: 192)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1492, file: !142, line: 67, baseType: !1491, size: 64, offset: 256)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1454, file: !142, line: 159, baseType: !1502, size: 64, offset: 1024)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1503, size: 64)
!1503 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loop_exit", file: !142, line: 72, size: 256, elements: !1504)
!1504 = !{!1505, !1506, !1507, !1508}
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1503, file: !142, line: 74, baseType: !1429, size: 64)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1503, file: !142, line: 77, baseType: !1502, size: 64, offset: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1503, file: !142, line: 78, baseType: !1502, size: 64, offset: 128)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "next_e", scope: !1503, file: !142, line: 81, baseType: !1502, size: 64, offset: 192)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "can_be_parallel", scope: !1454, file: !142, line: 162, baseType: !848, size: 8, offset: 1088)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "single_iv", scope: !1454, file: !142, line: 166, baseType: !993, size: 64, offset: 1152)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1413, file: !155, line: 229, baseType: !1512, size: 128, offset: 256)
!1512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1513, size: 128, elements: !891)
!1513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1514, size: 64)
!1514 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !155, line: 229, flags: DIFlagFwdDecl)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1413, file: !155, line: 232, baseType: !1412, size: 64, offset: 384)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1413, file: !155, line: 233, baseType: !1412, size: 64, offset: 448)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1413, file: !155, line: 238, baseType: !1518, size: 64, offset: 512)
!1518 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !155, line: 235, size: 64, elements: !1519)
!1519 = !{!1520, !1526}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1518, file: !155, line: 236, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !155, line: 273, size: 128, elements: !1523)
!1523 = !{!1524, !1525}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1522, file: !155, line: 275, baseType: !1438, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1522, file: !155, line: 278, baseType: !1438, size: 64, offset: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1518, file: !155, line: 237, baseType: !1527, size: 64)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !155, line: 259, size: 320, elements: !1529)
!1529 = !{!1530, !1531, !1532, !1533, !1534}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1528, file: !155, line: 261, baseType: !939, size: 64)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1528, file: !155, line: 262, baseType: !939, size: 64, offset: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1528, file: !155, line: 266, baseType: !939, size: 64, offset: 128)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1528, file: !155, line: 267, baseType: !939, size: 64, offset: 192)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1528, file: !155, line: 270, baseType: !849, size: 32, offset: 256)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1413, file: !155, line: 241, baseType: !1449, size: 64, offset: 576)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1413, file: !155, line: 244, baseType: !849, size: 32, offset: 640)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1413, file: !155, line: 247, baseType: !849, size: 32, offset: 672)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1413, file: !155, line: 250, baseType: !849, size: 32, offset: 704)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1413, file: !155, line: 253, baseType: !849, size: 32, offset: 736)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1413, file: !155, line: 256, baseType: !849, size: 32, offset: 768)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1408, file: !155, line: 378, baseType: !1411, size: 64, offset: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1408, file: !155, line: 381, baseType: !1543, size: 64, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !155, line: 282, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !155, line: 282, size: 128, elements: !1546)
!1546 = !{!1547}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1545, file: !155, line: 282, baseType: !1548, size: 128)
!1548 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !155, line: 281, baseType: !1549)
!1549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !155, line: 281, size: 128, elements: !1550)
!1550 = !{!1551, !1552, !1553}
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1549, file: !155, line: 281, baseType: !7, size: 32)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1549, file: !155, line: 281, baseType: !7, size: 32, offset: 32)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1549, file: !155, line: 281, baseType: !1554, size: 64, offset: 64)
!1554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1411, size: 64, elements: !973)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1408, file: !155, line: 384, baseType: !849, size: 32, offset: 192)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1408, file: !155, line: 387, baseType: !849, size: 32, offset: 224)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1408, file: !155, line: 390, baseType: !849, size: 32, offset: 256)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1408, file: !155, line: 394, baseType: !1543, size: 64, offset: 320)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1408, file: !155, line: 396, baseType: !154, size: 32, offset: 384)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1408, file: !155, line: 399, baseType: !1561, size: 64, offset: 416)
!1561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !160, size: 64, elements: !891)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1408, file: !155, line: 402, baseType: !1563, size: 64, offset: 480)
!1563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !891)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1408, file: !155, line: 406, baseType: !849, size: 32, offset: 544)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1408, file: !155, line: 409, baseType: !849, size: 32, offset: 576)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1239, file: !1240, line: 470, baseType: !1439, size: 64, offset: 128)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1239, file: !1240, line: 473, baseType: !1568, size: 64, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1240, line: 166, flags: DIFlagFwdDecl)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1239, file: !1240, line: 476, baseType: !1571, size: 64, offset: 256)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !142, line: 187, size: 256, elements: !1573)
!1573 = !{!1574, !1575, !1576, !1577}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1572, file: !142, line: 189, baseType: !849, size: 32)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "larray", scope: !1572, file: !142, line: 192, baseType: !1468, size: 64, offset: 64)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "exits", scope: !1572, file: !142, line: 197, baseType: !1323, size: 64, offset: 128)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "tree_root", scope: !1572, file: !142, line: 200, baseType: !1453, size: 64, offset: 192)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1239, file: !1240, line: 479, baseType: !1323, size: 64, offset: 320)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1239, file: !1240, line: 484, baseType: !993, size: 64, offset: 384)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1239, file: !1240, line: 488, baseType: !993, size: 64, offset: 448)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1239, file: !1240, line: 493, baseType: !993, size: 64, offset: 512)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1239, file: !1240, line: 496, baseType: !993, size: 64, offset: 576)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1239, file: !1240, line: 501, baseType: !1584, size: 64, offset: 640)
!1584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1585, size: 64)
!1585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !166, line: 2355, size: 576, elements: !1586)
!1586 = !{!1587, !1590, !1591, !1592, !1593, !1595, !1596, !1601, !1602, !1603, !1604, !1605, !1606}
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1585, file: !166, line: 2356, baseType: !1588, size: 64)
!1588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1589, size: 64)
!1589 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !166, line: 2356, flags: DIFlagFwdDecl)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1585, file: !166, line: 2357, baseType: !854, size: 64, offset: 64)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1585, file: !166, line: 2358, baseType: !849, size: 32, offset: 128)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1585, file: !166, line: 2359, baseType: !849, size: 32, offset: 160)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1585, file: !166, line: 2360, baseType: !1594, size: 128, offset: 192)
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 128, elements: !916)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1585, file: !166, line: 2364, baseType: !849, size: 32, offset: 320)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1585, file: !166, line: 2367, baseType: !1597, size: 128, offset: 384)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !166, line: 2349, size: 128, elements: !1598)
!1598 = !{!1599, !1600}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1597, file: !166, line: 2351, baseType: !939, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1597, file: !166, line: 2352, baseType: !907, size: 64, offset: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1585, file: !166, line: 2371, baseType: !165, size: 32, offset: 512)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1585, file: !166, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1585, file: !166, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1585, file: !166, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1585, file: !166, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1585, file: !166, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1239, file: !1240, line: 504, baseType: !1608, size: 64, offset: 704)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1240, line: 504, flags: DIFlagFwdDecl)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1239, file: !1240, line: 507, baseType: !1323, size: 64, offset: 768)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1239, file: !1240, line: 510, baseType: !849, size: 32, offset: 832)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1239, file: !1240, line: 513, baseType: !849, size: 32, offset: 864)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1239, file: !1240, line: 516, baseType: !1113, size: 32, offset: 896)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1239, file: !1240, line: 519, baseType: !1113, size: 32, offset: 928)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1239, file: !1240, line: 522, baseType: !7, size: 32, offset: 960)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1239, file: !1240, line: 523, baseType: !7, size: 32, offset: 992)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1239, file: !1240, line: 528, baseType: !854, size: 64, offset: 1024)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1239, file: !1240, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1239, file: !1240, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1239, file: !1240, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1239, file: !1240, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1239, file: !1240, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1239, file: !1240, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1239, file: !1240, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1239, file: !1240, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1239, file: !1240, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1239, file: !1240, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1239, file: !1240, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1239, file: !1240, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1239, file: !1240, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1239, file: !1240, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1239, file: !1240, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1239, file: !1240, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1234, file: !171, line: 3254, baseType: !993, size: 64, offset: 1536)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1234, file: !171, line: 3257, baseType: !993, size: 64, offset: 1600)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1234, file: !171, line: 3258, baseType: !993, size: 64, offset: 1664)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1234, file: !171, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1234, file: !171, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1234, file: !171, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1234, file: !171, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1234, file: !171, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1234, file: !171, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1234, file: !171, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1234, file: !171, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1234, file: !171, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1234, file: !171, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1234, file: !171, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1234, file: !171, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1234, file: !171, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1234, file: !171, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1234, file: !171, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1234, file: !171, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1234, file: !171, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1234, file: !171, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !995, file: !171, line: 3394, baseType: !1656, size: 1344)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !171, line: 2279, size: 1344, elements: !1657)
!1657 = !{!1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1683, !1684, !1685, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1656, file: !171, line: 2280, baseType: !1031, size: 192)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1656, file: !171, line: 2281, baseType: !993, size: 64, offset: 192)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1656, file: !171, line: 2282, baseType: !993, size: 64, offset: 256)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1656, file: !171, line: 2283, baseType: !993, size: 64, offset: 320)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1656, file: !171, line: 2284, baseType: !993, size: 64, offset: 384)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1656, file: !171, line: 2285, baseType: !7, size: 32, offset: 448)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1656, file: !171, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1656, file: !171, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1656, file: !171, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1656, file: !171, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1656, file: !171, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1656, file: !171, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1656, file: !171, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1656, file: !171, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1656, file: !171, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1656, file: !171, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1656, file: !171, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1656, file: !171, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1656, file: !171, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1656, file: !171, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1656, file: !171, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1656, file: !171, line: 2305, baseType: !7, size: 32, offset: 512)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1656, file: !171, line: 2306, baseType: !1681, size: 32, offset: 544)
!1681 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1682, line: 31, baseType: !849)
!1682 = !DIFile(filename: "./alias.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1656, file: !171, line: 2307, baseType: !993, size: 64, offset: 576)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1656, file: !171, line: 2308, baseType: !993, size: 64, offset: 640)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1656, file: !171, line: 2314, baseType: !1686, size: 64, offset: 704)
!1686 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !171, line: 2309, size: 64, elements: !1687)
!1687 = !{!1688, !1689, !1690}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1686, file: !171, line: 2310, baseType: !849, size: 32)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1686, file: !171, line: 2311, baseType: !854, size: 64)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1686, file: !171, line: 2312, baseType: !1691, size: 64)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !171, line: 2277, flags: DIFlagFwdDecl)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1656, file: !171, line: 2315, baseType: !993, size: 64, offset: 768)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1656, file: !171, line: 2316, baseType: !993, size: 64, offset: 832)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1656, file: !171, line: 2317, baseType: !993, size: 64, offset: 896)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1656, file: !171, line: 2318, baseType: !993, size: 64, offset: 960)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1656, file: !171, line: 2319, baseType: !993, size: 64, offset: 1024)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1656, file: !171, line: 2320, baseType: !993, size: 64, offset: 1088)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1656, file: !171, line: 2321, baseType: !993, size: 64, offset: 1152)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1656, file: !171, line: 2322, baseType: !993, size: 64, offset: 1216)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1656, file: !171, line: 2324, baseType: !1702, size: 64, offset: 1280)
!1702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1703, size: 64)
!1703 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !171, line: 2324, flags: DIFlagFwdDecl)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !995, file: !171, line: 3395, baseType: !1705, size: 320)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !171, line: 1469, size: 320, elements: !1706)
!1706 = !{!1707, !1708, !1709}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1705, file: !171, line: 1470, baseType: !1031, size: 192)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1705, file: !171, line: 1471, baseType: !993, size: 64, offset: 192)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1705, file: !171, line: 1472, baseType: !993, size: 64, offset: 256)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !995, file: !171, line: 3396, baseType: !1711, size: 320)
!1711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !171, line: 1482, size: 320, elements: !1712)
!1712 = !{!1713, !1714, !1715}
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1711, file: !171, line: 1483, baseType: !1031, size: 192)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1711, file: !171, line: 1484, baseType: !849, size: 32, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1711, file: !171, line: 1485, baseType: !1386, size: 64, offset: 256)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !995, file: !171, line: 3397, baseType: !1717, size: 384)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !171, line: 1829, size: 384, elements: !1718)
!1718 = !{!1719, !1720, !1721, !1722}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1717, file: !171, line: 1830, baseType: !1031, size: 192)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1717, file: !171, line: 1831, baseType: !1113, size: 32, offset: 192)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1717, file: !171, line: 1832, baseType: !993, size: 64, offset: 256)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1717, file: !171, line: 1835, baseType: !1386, size: 64, offset: 320)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !995, file: !171, line: 3398, baseType: !1724, size: 704)
!1724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !171, line: 1898, size: 704, elements: !1725)
!1725 = !{!1726, !1727, !1728, !1729, !1730, !1733}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1724, file: !171, line: 1899, baseType: !1031, size: 192)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1724, file: !171, line: 1902, baseType: !993, size: 64, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1724, file: !171, line: 1905, baseType: !1495, size: 64, offset: 256)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1724, file: !171, line: 1908, baseType: !7, size: 32, offset: 320)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1724, file: !171, line: 1911, baseType: !1731, size: 64, offset: 384)
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1732 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !171, line: 1876, flags: DIFlagFwdDecl)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1724, file: !171, line: 1914, baseType: !1734, size: 256, offset: 448)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !171, line: 1883, size: 256, elements: !1735)
!1735 = !{!1736, !1738, !1739, !1744}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1734, file: !171, line: 1884, baseType: !1737, size: 64)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1734, file: !171, line: 1885, baseType: !1737, size: 64, offset: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1734, file: !171, line: 1891, baseType: !1740, size: 64, offset: 128)
!1740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1734, file: !171, line: 1891, size: 64, elements: !1741)
!1741 = !{!1742, !1743}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1740, file: !171, line: 1891, baseType: !1495, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1740, file: !171, line: 1891, baseType: !993, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1734, file: !171, line: 1892, baseType: !1745, size: 64, offset: 192)
!1745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !993, size: 64)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !995, file: !171, line: 3399, baseType: !1747, size: 704)
!1747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !171, line: 2008, size: 704, elements: !1748)
!1748 = !{!1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759}
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1747, file: !171, line: 2009, baseType: !1031, size: 192)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1747, file: !171, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1747, file: !171, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1747, file: !171, line: 2014, baseType: !1113, size: 32, offset: 224)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1747, file: !171, line: 2016, baseType: !993, size: 64, offset: 256)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1747, file: !171, line: 2017, baseType: !1375, size: 64, offset: 320)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1747, file: !171, line: 2019, baseType: !993, size: 64, offset: 384)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1747, file: !171, line: 2020, baseType: !993, size: 64, offset: 448)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1747, file: !171, line: 2021, baseType: !993, size: 64, offset: 512)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1747, file: !171, line: 2022, baseType: !993, size: 64, offset: 576)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1747, file: !171, line: 2023, baseType: !993, size: 64, offset: 640)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !995, file: !171, line: 3400, baseType: !1761, size: 832)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !171, line: 2430, size: 832, elements: !1762)
!1762 = !{!1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1761, file: !171, line: 2431, baseType: !1031, size: 192)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1761, file: !171, line: 2433, baseType: !993, size: 64, offset: 192)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1761, file: !171, line: 2434, baseType: !993, size: 64, offset: 256)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1761, file: !171, line: 2435, baseType: !993, size: 64, offset: 320)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1761, file: !171, line: 2436, baseType: !993, size: 64, offset: 384)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1761, file: !171, line: 2437, baseType: !1375, size: 64, offset: 448)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1761, file: !171, line: 2438, baseType: !993, size: 64, offset: 512)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1761, file: !171, line: 2440, baseType: !993, size: 64, offset: 576)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1761, file: !171, line: 2441, baseType: !993, size: 64, offset: 640)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1761, file: !171, line: 2443, baseType: !1773, size: 128, offset: 704)
!1773 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !171, line: 182, baseType: !1774)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !171, line: 182, size: 128, elements: !1775)
!1775 = !{!1776}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1774, file: !171, line: 182, baseType: !1380, size: 128)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !995, file: !171, line: 3401, baseType: !1778, size: 320)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !171, line: 3327, size: 320, elements: !1779)
!1779 = !{!1780, !1781, !1788}
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1778, file: !171, line: 3329, baseType: !1031, size: 192)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1778, file: !171, line: 3330, baseType: !1782, size: 64, offset: 192)
!1782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1783, size: 64)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !171, line: 3320, size: 192, elements: !1784)
!1784 = !{!1785, !1786, !1787}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1783, file: !171, line: 3322, baseType: !1782, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1783, file: !171, line: 3323, baseType: !1782, size: 64, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1783, file: !171, line: 3324, baseType: !993, size: 64, offset: 128)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1778, file: !171, line: 3331, baseType: !1782, size: 64, offset: 256)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !995, file: !171, line: 3402, baseType: !1790, size: 256)
!1790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !171, line: 1540, size: 256, elements: !1791)
!1791 = !{!1792, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1790, file: !171, line: 1541, baseType: !1031, size: 192)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1790, file: !171, line: 1542, baseType: !1794, size: 64, offset: 192)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !171, line: 1538, baseType: !1796)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !171, line: 1538, size: 192, elements: !1797)
!1797 = !{!1798}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1796, file: !171, line: 1538, baseType: !1799, size: 192)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !171, line: 1537, baseType: !1800)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !171, line: 1537, size: 192, elements: !1801)
!1801 = !{!1802, !1803, !1804}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1800, file: !171, line: 1537, baseType: !7, size: 32)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1800, file: !171, line: 1537, baseType: !7, size: 32, offset: 32)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1800, file: !171, line: 1537, baseType: !1805, size: 128, offset: 64)
!1805 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1806, size: 128, elements: !973)
!1806 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !171, line: 1535, baseType: !1807)
!1807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !171, line: 1532, size: 128, elements: !1808)
!1808 = !{!1809, !1810}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1807, file: !171, line: 1533, baseType: !993, size: 64)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1807, file: !171, line: 1534, baseType: !993, size: 64, offset: 64)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !995, file: !171, line: 3403, baseType: !1812, size: 512)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !171, line: 1938, size: 512, elements: !1813)
!1813 = !{!1814, !1815, !1816, !1817, !1823, !1824, !1825}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1812, file: !171, line: 1939, baseType: !1031, size: 192)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1812, file: !171, line: 1940, baseType: !1113, size: 32, offset: 192)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1812, file: !171, line: 1941, baseType: !170, size: 32, offset: 224)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1812, file: !171, line: 1946, baseType: !1818, size: 32, offset: 256)
!1818 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !171, line: 1942, size: 32, elements: !1819)
!1819 = !{!1820, !1821, !1822}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1818, file: !171, line: 1943, baseType: !189, size: 32)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1818, file: !171, line: 1944, baseType: !196, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1818, file: !171, line: 1945, baseType: !203, size: 32)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1812, file: !171, line: 1950, baseType: !1438, size: 64, offset: 320)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1812, file: !171, line: 1951, baseType: !1438, size: 64, offset: 384)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1812, file: !171, line: 1953, baseType: !1386, size: 64, offset: 448)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !995, file: !171, line: 3404, baseType: !1827, size: 1664)
!1827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !171, line: 3337, size: 1664, elements: !1828)
!1828 = !{!1829, !1830}
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1827, file: !171, line: 3338, baseType: !1031, size: 192)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1827, file: !171, line: 3341, baseType: !1831, size: 1472, offset: 192)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1832, line: 410, size: 1472, elements: !1833)
!1832 = !DIFile(filename: "./options.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!1833 = !{!1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1931, !1932, !1933, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997}
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1831, file: !1832, line: 412, baseType: !849, size: 32)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1831, file: !1832, line: 413, baseType: !849, size: 32, offset: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1831, file: !1832, line: 414, baseType: !849, size: 32, offset: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1831, file: !1832, line: 415, baseType: !849, size: 32, offset: 96)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1831, file: !1832, line: 416, baseType: !849, size: 32, offset: 128)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1831, file: !1832, line: 417, baseType: !849, size: 32, offset: 160)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1831, file: !1832, line: 418, baseType: !848, size: 8, offset: 192)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1831, file: !1832, line: 419, baseType: !848, size: 8, offset: 200)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1831, file: !1832, line: 420, baseType: !1843, size: 8, offset: 208)
!1843 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1831, file: !1832, line: 421, baseType: !1843, size: 8, offset: 216)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1831, file: !1832, line: 422, baseType: !1843, size: 8, offset: 224)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1831, file: !1832, line: 423, baseType: !1843, size: 8, offset: 232)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1831, file: !1832, line: 424, baseType: !1843, size: 8, offset: 240)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1831, file: !1832, line: 425, baseType: !1843, size: 8, offset: 248)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1831, file: !1832, line: 426, baseType: !1843, size: 8, offset: 256)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1831, file: !1832, line: 427, baseType: !1843, size: 8, offset: 264)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1831, file: !1832, line: 428, baseType: !1843, size: 8, offset: 272)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1831, file: !1832, line: 429, baseType: !1843, size: 8, offset: 280)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1831, file: !1832, line: 430, baseType: !1843, size: 8, offset: 288)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1831, file: !1832, line: 431, baseType: !1843, size: 8, offset: 296)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1831, file: !1832, line: 432, baseType: !1843, size: 8, offset: 304)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1831, file: !1832, line: 433, baseType: !1843, size: 8, offset: 312)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1831, file: !1832, line: 434, baseType: !1843, size: 8, offset: 320)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1831, file: !1832, line: 435, baseType: !1843, size: 8, offset: 328)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1831, file: !1832, line: 436, baseType: !1843, size: 8, offset: 336)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1831, file: !1832, line: 437, baseType: !1843, size: 8, offset: 344)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1831, file: !1832, line: 438, baseType: !1843, size: 8, offset: 352)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1831, file: !1832, line: 439, baseType: !1843, size: 8, offset: 360)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1831, file: !1832, line: 440, baseType: !1843, size: 8, offset: 368)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1831, file: !1832, line: 441, baseType: !1843, size: 8, offset: 376)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1831, file: !1832, line: 442, baseType: !1843, size: 8, offset: 384)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1831, file: !1832, line: 443, baseType: !1843, size: 8, offset: 392)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1831, file: !1832, line: 444, baseType: !1843, size: 8, offset: 400)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1831, file: !1832, line: 445, baseType: !1843, size: 8, offset: 408)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1831, file: !1832, line: 446, baseType: !1843, size: 8, offset: 416)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1831, file: !1832, line: 447, baseType: !1843, size: 8, offset: 424)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1831, file: !1832, line: 448, baseType: !1843, size: 8, offset: 432)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1831, file: !1832, line: 449, baseType: !1843, size: 8, offset: 440)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1831, file: !1832, line: 450, baseType: !1843, size: 8, offset: 448)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1831, file: !1832, line: 451, baseType: !1843, size: 8, offset: 456)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1831, file: !1832, line: 452, baseType: !1843, size: 8, offset: 464)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1831, file: !1832, line: 453, baseType: !1843, size: 8, offset: 472)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1831, file: !1832, line: 454, baseType: !1843, size: 8, offset: 480)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1831, file: !1832, line: 455, baseType: !1843, size: 8, offset: 488)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1831, file: !1832, line: 456, baseType: !1843, size: 8, offset: 496)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1831, file: !1832, line: 457, baseType: !1843, size: 8, offset: 504)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1831, file: !1832, line: 458, baseType: !1843, size: 8, offset: 512)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1831, file: !1832, line: 459, baseType: !1843, size: 8, offset: 520)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1831, file: !1832, line: 460, baseType: !1843, size: 8, offset: 528)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1831, file: !1832, line: 461, baseType: !1843, size: 8, offset: 536)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1831, file: !1832, line: 462, baseType: !1843, size: 8, offset: 544)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1831, file: !1832, line: 463, baseType: !1843, size: 8, offset: 552)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1831, file: !1832, line: 464, baseType: !1843, size: 8, offset: 560)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1831, file: !1832, line: 465, baseType: !1843, size: 8, offset: 568)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1831, file: !1832, line: 466, baseType: !1843, size: 8, offset: 576)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1831, file: !1832, line: 467, baseType: !1843, size: 8, offset: 584)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1831, file: !1832, line: 468, baseType: !1843, size: 8, offset: 592)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1831, file: !1832, line: 469, baseType: !1843, size: 8, offset: 600)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1831, file: !1832, line: 470, baseType: !1843, size: 8, offset: 608)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1831, file: !1832, line: 471, baseType: !1843, size: 8, offset: 616)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1831, file: !1832, line: 472, baseType: !1843, size: 8, offset: 624)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1831, file: !1832, line: 473, baseType: !1843, size: 8, offset: 632)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1831, file: !1832, line: 474, baseType: !1843, size: 8, offset: 640)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1831, file: !1832, line: 475, baseType: !1843, size: 8, offset: 648)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1831, file: !1832, line: 476, baseType: !1843, size: 8, offset: 656)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1831, file: !1832, line: 477, baseType: !1843, size: 8, offset: 664)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1831, file: !1832, line: 478, baseType: !1843, size: 8, offset: 672)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1831, file: !1832, line: 479, baseType: !1843, size: 8, offset: 680)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1831, file: !1832, line: 480, baseType: !1843, size: 8, offset: 688)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1831, file: !1832, line: 481, baseType: !1843, size: 8, offset: 696)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1831, file: !1832, line: 482, baseType: !1843, size: 8, offset: 704)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1831, file: !1832, line: 483, baseType: !1843, size: 8, offset: 712)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1831, file: !1832, line: 484, baseType: !1843, size: 8, offset: 720)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1831, file: !1832, line: 485, baseType: !1843, size: 8, offset: 728)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1831, file: !1832, line: 486, baseType: !1843, size: 8, offset: 736)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1831, file: !1832, line: 487, baseType: !1843, size: 8, offset: 744)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1831, file: !1832, line: 488, baseType: !1843, size: 8, offset: 752)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1831, file: !1832, line: 489, baseType: !1843, size: 8, offset: 760)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1831, file: !1832, line: 490, baseType: !1843, size: 8, offset: 768)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1831, file: !1832, line: 491, baseType: !1843, size: 8, offset: 776)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1831, file: !1832, line: 492, baseType: !1843, size: 8, offset: 784)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1831, file: !1832, line: 493, baseType: !1843, size: 8, offset: 792)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1831, file: !1832, line: 494, baseType: !1843, size: 8, offset: 800)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1831, file: !1832, line: 495, baseType: !1843, size: 8, offset: 808)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1831, file: !1832, line: 496, baseType: !1843, size: 8, offset: 816)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1831, file: !1832, line: 497, baseType: !1843, size: 8, offset: 824)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1831, file: !1832, line: 498, baseType: !1843, size: 8, offset: 832)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1831, file: !1832, line: 499, baseType: !1843, size: 8, offset: 840)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1831, file: !1832, line: 500, baseType: !1843, size: 8, offset: 848)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1831, file: !1832, line: 501, baseType: !1843, size: 8, offset: 856)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1831, file: !1832, line: 502, baseType: !1843, size: 8, offset: 864)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1831, file: !1832, line: 503, baseType: !1843, size: 8, offset: 872)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1831, file: !1832, line: 504, baseType: !1843, size: 8, offset: 880)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1831, file: !1832, line: 505, baseType: !1843, size: 8, offset: 888)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1831, file: !1832, line: 506, baseType: !1843, size: 8, offset: 896)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1831, file: !1832, line: 507, baseType: !1843, size: 8, offset: 904)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1831, file: !1832, line: 508, baseType: !1843, size: 8, offset: 912)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1831, file: !1832, line: 509, baseType: !1843, size: 8, offset: 920)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1831, file: !1832, line: 510, baseType: !1843, size: 8, offset: 928)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1831, file: !1832, line: 511, baseType: !1843, size: 8, offset: 936)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1831, file: !1832, line: 512, baseType: !1843, size: 8, offset: 944)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1831, file: !1832, line: 513, baseType: !1843, size: 8, offset: 952)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1831, file: !1832, line: 514, baseType: !1843, size: 8, offset: 960)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1831, file: !1832, line: 515, baseType: !1843, size: 8, offset: 968)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1831, file: !1832, line: 516, baseType: !1843, size: 8, offset: 976)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1831, file: !1832, line: 517, baseType: !1843, size: 8, offset: 984)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1831, file: !1832, line: 518, baseType: !1843, size: 8, offset: 992)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1831, file: !1832, line: 519, baseType: !1843, size: 8, offset: 1000)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1831, file: !1832, line: 520, baseType: !1843, size: 8, offset: 1008)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1831, file: !1832, line: 521, baseType: !1843, size: 8, offset: 1016)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1831, file: !1832, line: 522, baseType: !1843, size: 8, offset: 1024)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1831, file: !1832, line: 523, baseType: !1843, size: 8, offset: 1032)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1831, file: !1832, line: 524, baseType: !1843, size: 8, offset: 1040)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1831, file: !1832, line: 525, baseType: !1843, size: 8, offset: 1048)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1831, file: !1832, line: 526, baseType: !1843, size: 8, offset: 1056)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1831, file: !1832, line: 527, baseType: !1843, size: 8, offset: 1064)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1831, file: !1832, line: 528, baseType: !1843, size: 8, offset: 1072)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1831, file: !1832, line: 529, baseType: !1843, size: 8, offset: 1080)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1831, file: !1832, line: 530, baseType: !1843, size: 8, offset: 1088)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1831, file: !1832, line: 531, baseType: !1843, size: 8, offset: 1096)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1831, file: !1832, line: 532, baseType: !1843, size: 8, offset: 1104)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1831, file: !1832, line: 533, baseType: !1843, size: 8, offset: 1112)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1831, file: !1832, line: 534, baseType: !1843, size: 8, offset: 1120)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1831, file: !1832, line: 535, baseType: !1843, size: 8, offset: 1128)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1831, file: !1832, line: 536, baseType: !1843, size: 8, offset: 1136)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1831, file: !1832, line: 537, baseType: !1843, size: 8, offset: 1144)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1831, file: !1832, line: 538, baseType: !1843, size: 8, offset: 1152)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1831, file: !1832, line: 539, baseType: !1843, size: 8, offset: 1160)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1831, file: !1832, line: 540, baseType: !1843, size: 8, offset: 1168)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1831, file: !1832, line: 541, baseType: !1843, size: 8, offset: 1176)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1831, file: !1832, line: 542, baseType: !1843, size: 8, offset: 1184)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1831, file: !1832, line: 543, baseType: !1843, size: 8, offset: 1192)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1831, file: !1832, line: 544, baseType: !1843, size: 8, offset: 1200)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1831, file: !1832, line: 545, baseType: !1843, size: 8, offset: 1208)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1831, file: !1832, line: 546, baseType: !1843, size: 8, offset: 1216)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1831, file: !1832, line: 547, baseType: !1843, size: 8, offset: 1224)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1831, file: !1832, line: 548, baseType: !1843, size: 8, offset: 1232)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1831, file: !1832, line: 549, baseType: !1843, size: 8, offset: 1240)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1831, file: !1832, line: 550, baseType: !1843, size: 8, offset: 1248)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1831, file: !1832, line: 551, baseType: !1843, size: 8, offset: 1256)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1831, file: !1832, line: 552, baseType: !1843, size: 8, offset: 1264)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1831, file: !1832, line: 553, baseType: !1843, size: 8, offset: 1272)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1831, file: !1832, line: 554, baseType: !1843, size: 8, offset: 1280)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1831, file: !1832, line: 555, baseType: !1843, size: 8, offset: 1288)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1831, file: !1832, line: 556, baseType: !1843, size: 8, offset: 1296)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1831, file: !1832, line: 557, baseType: !1843, size: 8, offset: 1304)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1831, file: !1832, line: 558, baseType: !1843, size: 8, offset: 1312)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1831, file: !1832, line: 559, baseType: !1843, size: 8, offset: 1320)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1831, file: !1832, line: 560, baseType: !1843, size: 8, offset: 1328)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1831, file: !1832, line: 561, baseType: !1843, size: 8, offset: 1336)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1831, file: !1832, line: 562, baseType: !1843, size: 8, offset: 1344)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1831, file: !1832, line: 563, baseType: !1843, size: 8, offset: 1352)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1831, file: !1832, line: 564, baseType: !1843, size: 8, offset: 1360)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1831, file: !1832, line: 565, baseType: !1843, size: 8, offset: 1368)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1831, file: !1832, line: 566, baseType: !1843, size: 8, offset: 1376)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1831, file: !1832, line: 567, baseType: !1843, size: 8, offset: 1384)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1831, file: !1832, line: 568, baseType: !1843, size: 8, offset: 1392)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1831, file: !1832, line: 569, baseType: !1843, size: 8, offset: 1400)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1831, file: !1832, line: 570, baseType: !1843, size: 8, offset: 1408)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1831, file: !1832, line: 571, baseType: !1843, size: 8, offset: 1416)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1831, file: !1832, line: 572, baseType: !1843, size: 8, offset: 1424)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1831, file: !1832, line: 573, baseType: !1843, size: 8, offset: 1432)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1831, file: !1832, line: 574, baseType: !1843, size: 8, offset: 1440)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !995, file: !171, line: 3405, baseType: !1999, size: 384)
!1999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !171, line: 3352, size: 384, elements: !2000)
!2000 = !{!2001, !2002}
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1999, file: !171, line: 3353, baseType: !1031, size: 192)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1999, file: !171, line: 3356, baseType: !2003, size: 192, offset: 192)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1832, line: 578, size: 192, elements: !2004)
!2004 = !{!2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2003, file: !1832, line: 580, baseType: !849, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2003, file: !1832, line: 581, baseType: !849, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2003, file: !1832, line: 582, baseType: !849, size: 32, offset: 64)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2003, file: !1832, line: 583, baseType: !849, size: 32, offset: 96)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2003, file: !1832, line: 584, baseType: !848, size: 8, offset: 128)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2003, file: !1832, line: 585, baseType: !848, size: 8, offset: 136)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2003, file: !1832, line: 586, baseType: !848, size: 8, offset: 144)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2003, file: !1832, line: 587, baseType: !848, size: 8, offset: 152)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2003, file: !1832, line: 588, baseType: !848, size: 8, offset: 160)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2003, file: !1832, line: 589, baseType: !848, size: 8, offset: 168)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2003, file: !1832, line: 590, baseType: !848, size: 8, offset: 176)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !959, file: !670, line: 178, baseType: !1412, size: 64)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !959, file: !670, line: 179, baseType: !2018, size: 64)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !670, line: 150, baseType: !2020)
!2020 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !670, line: 142, size: 320, elements: !2021)
!2021 = !{!2022, !2023, !2024, !2025, !2026, !2027}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2020, file: !670, line: 144, baseType: !993, size: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2020, file: !670, line: 145, baseType: !939, size: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2020, file: !670, line: 146, baseType: !939, size: 64, offset: 128)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2020, file: !670, line: 147, baseType: !1681, size: 32, offset: 192)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2020, file: !670, line: 148, baseType: !7, size: 32, offset: 224)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !2020, file: !670, line: 149, baseType: !848, size: 8, offset: 256)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !959, file: !670, line: 180, baseType: !2029, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2030, size: 64)
!2030 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !670, line: 162, baseType: !2031)
!2031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !670, line: 159, size: 128, elements: !2032)
!2032 = !{!2033, !2034}
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2031, file: !670, line: 160, baseType: !993, size: 64)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2031, file: !670, line: 161, baseType: !907, size: 64, offset: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !959, file: !670, line: 181, baseType: !2036, size: 64)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !670, line: 181, flags: DIFlagFwdDecl)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !954, file: !670, line: 317, baseType: !2039, size: 64)
!2039 = !DICompositeType(tag: DW_TAG_array_type, baseType: !907, size: 64, elements: !973)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !954, file: !670, line: 318, baseType: !2041, size: 320)
!2041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !670, line: 188, size: 320, elements: !2042)
!2042 = !{!2043, !2045, !2100}
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2041, file: !670, line: 190, baseType: !2044, size: 192)
!2044 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 192, elements: !1064)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2041, file: !670, line: 193, baseType: !2046, size: 64, offset: 192)
!2046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2047, size: 64)
!2047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !670, line: 206, size: 320, elements: !2048)
!2048 = !{!2049, !2085, !2086, !2087, !2099}
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !2047, file: !670, line: 208, baseType: !2050, size: 64)
!2050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2051, size: 64)
!2051 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !874, line: 62, baseType: !2052)
!2052 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2053, line: 538, size: 256, elements: !2054)
!2053 = !DIFile(filename: "./output.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2054 = !{!2055, !2059, !2065, !2076}
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2052, file: !2053, line: 539, baseType: !2056, size: 32)
!2056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !2053, line: 482, size: 32, elements: !2057)
!2057 = !{!2058}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2056, file: !2053, line: 484, baseType: !7, size: 32)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !2052, file: !2053, line: 540, baseType: !2060, size: 192)
!2060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !2053, line: 488, size: 192, elements: !2061)
!2061 = !{!2062, !2063, !2064}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2060, file: !2053, line: 489, baseType: !2056, size: 32)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2060, file: !2053, line: 492, baseType: !854, size: 64, offset: 64)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2060, file: !2053, line: 496, baseType: !993, size: 64, offset: 128)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !2052, file: !2053, line: 541, baseType: !2066, size: 256)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !2053, line: 504, size: 256, elements: !2067)
!2067 = !{!2068, !2069, !2074, !2075}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2066, file: !2053, line: 505, baseType: !2056, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2066, file: !2053, line: 509, baseType: !2070, size: 64, offset: 64)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !2053, line: 501, baseType: !2071)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DISubroutineType(types: !2073)
!2073 = !{null, !1334}
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2066, file: !2053, line: 510, baseType: !1334, size: 64, offset: 128)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2066, file: !2053, line: 513, baseType: !2050, size: 64, offset: 192)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !2052, file: !2053, line: 542, baseType: !2077, size: 128)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !2053, line: 530, size: 128, elements: !2078)
!2078 = !{!2079, !2080}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2077, file: !2053, line: 531, baseType: !2056, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2077, file: !2053, line: 534, baseType: !2081, size: 64, offset: 64)
!2081 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !2053, line: 525, baseType: !2082)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{!848, !993, !854, !865, !865}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2047, file: !670, line: 211, baseType: !7, size: 32, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2047, file: !670, line: 214, baseType: !907, size: 64, offset: 128)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2047, file: !670, line: 224, baseType: !2088, size: 64, offset: 192)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !670, line: 202, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !670, line: 202, size: 128, elements: !2091)
!2091 = !{!2092}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2090, file: !670, line: 202, baseType: !2093, size: 128)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !670, line: 200, baseType: !2094)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !670, line: 200, size: 128, elements: !2095)
!2095 = !{!2096, !2097, !2098}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2094, file: !670, line: 200, baseType: !7, size: 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2094, file: !670, line: 200, baseType: !7, size: 32, offset: 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2094, file: !670, line: 200, baseType: !972, size: 64, offset: 64)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !2047, file: !670, line: 234, baseType: !2088, size: 64, offset: 256)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2041, file: !670, line: 197, baseType: !907, size: 64, offset: 256)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !954, file: !670, line: 319, baseType: !1053, size: 256)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !954, file: !670, line: 320, baseType: !1072, size: 192)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_spilled_reg_stack_slot", file: !2105, line: 542, size: 384, elements: !2106)
!2105 = !DIFile(filename: "./ira-int.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2106 = !{!2107, !2110, !2111}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "spilled_regs", scope: !2104, file: !2105, line: 545, baseType: !2108, size: 256)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset_head", file: !155, line: 34, baseType: !2109)
!2109 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_head", file: !877, line: 84, baseType: !876)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2104, file: !2105, line: 547, baseType: !939, size: 64, offset: 256)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2104, file: !2105, line: 549, baseType: !7, size: 32, offset: 320)
!2112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2113, size: 64)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "equivalence", file: !3, line: 1907, size: 320, elements: !2114)
!2114 = !{!2115, !2116, !2117, !2118, !2119, !2120}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "replacement", scope: !2113, file: !3, line: 1912, baseType: !939, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "src_p", scope: !2113, file: !3, line: 1913, baseType: !938, size: 64, offset: 64)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "init_insns", scope: !2113, file: !3, line: 1915, baseType: !939, size: 64, offset: 128)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !2113, file: !3, line: 1918, baseType: !849, size: 32, offset: 192)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "is_arg_equivalence", scope: !2113, file: !3, line: 1920, baseType: !849, size: 32, offset: 224)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "replace", scope: !2113, file: !3, line: 1923, baseType: !852, size: 8, offset: 256)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_live_bb_info", file: !870, line: 843, size: 256, elements: !2123)
!2123 = !{!2124, !2125, !2126, !2127}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2122, file: !870, line: 846, baseType: !873, size: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2122, file: !870, line: 848, baseType: !873, size: 64, offset: 64)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2122, file: !870, line: 851, baseType: !873, size: 64, offset: 128)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2122, file: !870, line: 852, baseType: !873, size: 64, offset: 192)
!2128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2129, size: 64)
!2129 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !2130, line: 45, baseType: !2131)
!2130 = !DIFile(filename: "./sbitmap.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !2130, line: 39, size: 192, elements: !2133)
!2133 = !{!2134, !2135, !2136, !2137}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !2132, file: !2130, line: 41, baseType: !847, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !2132, file: !2130, line: 42, baseType: !7, size: 32, offset: 64)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2132, file: !2130, line: 43, baseType: !7, size: 32, offset: 96)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !2132, file: !2130, line: 44, baseType: !2138, size: 64, offset: 128)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !865, size: 64, elements: !973)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!2140 = !{!2141, !2161, !2189, !2191, !2243, !2266, !2268, !2270, !2272, !2274, !2276, !2278, !2280, !2282, !2284, !2286, !2288, !2290, !2292, !2298, !2303, !2307, !2309, !2311, !2315, !2317, !2321, !2324, !2326, !0, !2328, !2330, !2333, !2335, !2337, !2339, !2341, !2344, !2347, !2349, !2351, !2355, !2359, !2361, !2364, !2367, !2369, !2371, !2373, !2375, !2378, !2380, !2382, !2392, !2394, !2396, !2410, !2412, !2414, !2416, !2418, !2420}
!2141 = !DIGlobalVariableExpression(var: !2142, expr: !DIExpression())
!2142 = distinct !DIGlobalVariable(name: "eliminables", scope: !2143, file: !3, line: 1441, type: !2154, isLocal: true, isDefinition: true)
!2143 = distinct !DISubprogram(name: "ira_setup_eliminable_regset", scope: !3, file: !3, line: 1431, type: !2144, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2146)
!2144 = !DISubroutineType(types: !2145)
!2145 = !{null}
!2146 = !{!2147, !2148, !2149, !2150}
!2147 = !DILocalVariable(name: "regs_asm_clobbered", scope: !2143, file: !3, line: 1437, type: !851)
!2148 = !DILocalVariable(name: "i", scope: !2143, file: !3, line: 1440, type: !849)
!2149 = !DILocalVariable(name: "need_fp", scope: !2143, file: !3, line: 1447, type: !849)
!2150 = !DILocalVariable(name: "cannot_elim", scope: !2151, file: !3, line: 1468, type: !848)
!2151 = distinct !DILexicalBlock(scope: !2152, file: !3, line: 1467, column: 5)
!2152 = distinct !DILexicalBlock(scope: !2153, file: !3, line: 1466, column: 3)
!2153 = distinct !DILexicalBlock(scope: !2143, file: !3, line: 1466, column: 3)
!2154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2155, size: 256, elements: !916)
!2155 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2156)
!2156 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2143, file: !3, line: 1441, size: 64, elements: !2157)
!2157 = !{!2158, !2160}
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !2156, file: !3, line: 1441, baseType: !2159, size: 32)
!2159 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !2156, file: !3, line: 1441, baseType: !2159, size: 32, offset: 32)
!2161 = !DIGlobalVariableExpression(var: !2162, expr: !DIExpression())
!2162 = distinct !DIGlobalVariable(name: "pass_ira", scope: !2, file: !3, line: 3396, type: !2163, isLocal: false, isDefinition: true)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !428, line: 162, size: 640, elements: !2164)
!2164 = !{!2165}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2163, file: !428, line: 164, baseType: !2166, size: 640)
!2166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !428, line: 114, size: 640, elements: !2167)
!2167 = !{!2168, !2169, !2170, !2174, !2178, !2180, !2181, !2182, !2184, !2185, !2186, !2187, !2188}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2166, file: !428, line: 117, baseType: !427, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2166, file: !428, line: 121, baseType: !854, size: 64, offset: 64)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2166, file: !428, line: 125, baseType: !2171, size: 64, offset: 128)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DISubroutineType(types: !2173)
!2173 = !{!848}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2166, file: !428, line: 130, baseType: !2175, size: 64, offset: 192)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!7}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2166, file: !428, line: 133, baseType: !2179, size: 64, offset: 256)
!2179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2166, file: !428, line: 136, baseType: !2179, size: 64, offset: 320)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2166, file: !428, line: 139, baseType: !849, size: 32, offset: 384)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2166, file: !428, line: 143, baseType: !2183, size: 32, offset: 416)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !435, line: 80, baseType: !434)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2166, file: !428, line: 146, baseType: !7, size: 32, offset: 448)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2166, file: !428, line: 147, baseType: !7, size: 32, offset: 480)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2166, file: !428, line: 148, baseType: !7, size: 32, offset: 512)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2166, file: !428, line: 151, baseType: !7, size: 32, offset: 544)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2166, file: !428, line: 152, baseType: !7, size: 32, offset: 576)
!2189 = !DIGlobalVariableExpression(var: !2190, expr: !DIExpression())
!2190 = distinct !DIGlobalVariable(name: "internal_flag_ira_verbose", scope: !2, file: !3, line: 329, type: !849, isLocal: false, isDefinition: true)
!2191 = !DIGlobalVariableExpression(var: !2192, expr: !DIExpression())
!2192 = distinct !DIGlobalVariable(name: "ira_dump_file", scope: !2, file: !3, line: 332, type: !2193, isLocal: false, isDefinition: true)
!2193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2194, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !2195, line: 7, baseType: !2196)
!2195 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !2197, line: 49, size: 1728, elements: !2198)
!2197 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!2198 = !{!2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2214, !2216, !2217, !2218, !2221, !2222, !2223, !2224, !2227, !2229, !2232, !2235, !2236, !2237, !2238, !2239}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !2196, file: !2197, line: 51, baseType: !849, size: 32)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !2196, file: !2197, line: 54, baseType: !851, size: 64, offset: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !2196, file: !2197, line: 55, baseType: !851, size: 64, offset: 128)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !2196, file: !2197, line: 56, baseType: !851, size: 64, offset: 192)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !2196, file: !2197, line: 57, baseType: !851, size: 64, offset: 256)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !2196, file: !2197, line: 58, baseType: !851, size: 64, offset: 320)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !2196, file: !2197, line: 59, baseType: !851, size: 64, offset: 384)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !2196, file: !2197, line: 60, baseType: !851, size: 64, offset: 448)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !2196, file: !2197, line: 61, baseType: !851, size: 64, offset: 512)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !2196, file: !2197, line: 64, baseType: !851, size: 64, offset: 576)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !2196, file: !2197, line: 65, baseType: !851, size: 64, offset: 640)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !2196, file: !2197, line: 66, baseType: !851, size: 64, offset: 704)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !2196, file: !2197, line: 68, baseType: !2212, size: 64, offset: 768)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !2197, line: 36, flags: DIFlagFwdDecl)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !2196, file: !2197, line: 70, baseType: !2215, size: 64, offset: 832)
!2215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !2196, file: !2197, line: 72, baseType: !849, size: 32, offset: 896)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !2196, file: !2197, line: 73, baseType: !849, size: 32, offset: 928)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !2196, file: !2197, line: 74, baseType: !2219, size: 64, offset: 960)
!2219 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !2220, line: 152, baseType: !907)
!2220 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !2196, file: !2197, line: 77, baseType: !860, size: 16, offset: 1024)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !2196, file: !2197, line: 78, baseType: !1843, size: 8, offset: 1040)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !2196, file: !2197, line: 79, baseType: !1088, size: 8, offset: 1048)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !2196, file: !2197, line: 81, baseType: !2225, size: 64, offset: 1088)
!2225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2226, size: 64)
!2226 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !2197, line: 43, baseType: null)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !2196, file: !2197, line: 89, baseType: !2228, size: 64, offset: 1152)
!2228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !2220, line: 153, baseType: !907)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !2196, file: !2197, line: 91, baseType: !2230, size: 64, offset: 1216)
!2230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2231, size: 64)
!2231 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !2197, line: 37, flags: DIFlagFwdDecl)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !2196, file: !2197, line: 92, baseType: !2233, size: 64, offset: 1280)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !2197, line: 38, flags: DIFlagFwdDecl)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !2196, file: !2197, line: 93, baseType: !2215, size: 64, offset: 1344)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !2196, file: !2197, line: 94, baseType: !853, size: 64, offset: 1408)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !2196, file: !2197, line: 95, baseType: !1349, size: 64, offset: 1472)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !2196, file: !2197, line: 96, baseType: !849, size: 32, offset: 1536)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !2196, file: !2197, line: 98, baseType: !2240, size: 160, offset: 1568)
!2240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !852, size: 160, elements: !2241)
!2241 = !{!2242}
!2242 = !DISubrange(count: 20)
!2243 = !DIGlobalVariableExpression(var: !2244, expr: !DIExpression())
!2244 = distinct !DIGlobalVariable(name: "allocno_pool", scope: !2, file: !3, line: 335, type: !2245, isLocal: false, isDefinition: true)
!2245 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2246, line: 58, baseType: !2247)
!2246 = !DIFile(filename: "./alloc-pool.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2246, line: 32, size: 704, elements: !2249)
!2249 = !{!2250, !2251, !2252, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2248, file: !2246, line: 34, baseType: !854, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2248, file: !2246, line: 38, baseType: !1349, size: 64, offset: 64)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2248, file: !2246, line: 41, baseType: !2253, size: 64, offset: 128)
!2253 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2246, line: 30, baseType: !2254)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2246, line: 26, size: 64, elements: !2256)
!2256 = !{!2257}
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2255, file: !2246, line: 28, baseType: !2254, size: 64)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2248, file: !2246, line: 45, baseType: !851, size: 64, offset: 192)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2248, file: !2246, line: 49, baseType: !1349, size: 64, offset: 256)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2248, file: !2246, line: 51, baseType: !1349, size: 64, offset: 320)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2248, file: !2246, line: 52, baseType: !1349, size: 64, offset: 384)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2248, file: !2246, line: 53, baseType: !1349, size: 64, offset: 448)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2248, file: !2246, line: 54, baseType: !2253, size: 64, offset: 512)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2248, file: !2246, line: 55, baseType: !1349, size: 64, offset: 576)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2248, file: !2246, line: 56, baseType: !1349, size: 64, offset: 640)
!2266 = !DIGlobalVariableExpression(var: !2267, expr: !DIExpression())
!2267 = distinct !DIGlobalVariable(name: "copy_pool", scope: !2, file: !3, line: 335, type: !2245, isLocal: false, isDefinition: true)
!2268 = !DIGlobalVariableExpression(var: !2269, expr: !DIExpression())
!2269 = distinct !DIGlobalVariable(name: "allocno_live_range_pool", scope: !2, file: !3, line: 335, type: !2245, isLocal: false, isDefinition: true)
!2270 = !DIGlobalVariableExpression(var: !2271, expr: !DIExpression())
!2271 = distinct !DIGlobalVariable(name: "ira_spilled_reg_stack_slots_num", scope: !2, file: !3, line: 338, type: !849, isLocal: false, isDefinition: true)
!2272 = !DIGlobalVariableExpression(var: !2273, expr: !DIExpression())
!2273 = distinct !DIGlobalVariable(name: "ira_spilled_reg_stack_slots", scope: !2, file: !3, line: 342, type: !2103, isLocal: false, isDefinition: true)
!2274 = !DIGlobalVariableExpression(var: !2275, expr: !DIExpression())
!2275 = distinct !DIGlobalVariable(name: "ira_overall_cost", scope: !2, file: !3, line: 348, type: !849, isLocal: false, isDefinition: true)
!2276 = !DIGlobalVariableExpression(var: !2277, expr: !DIExpression())
!2277 = distinct !DIGlobalVariable(name: "ira_reg_cost", scope: !2, file: !3, line: 349, type: !849, isLocal: false, isDefinition: true)
!2278 = !DIGlobalVariableExpression(var: !2279, expr: !DIExpression())
!2279 = distinct !DIGlobalVariable(name: "ira_mem_cost", scope: !2, file: !3, line: 349, type: !849, isLocal: false, isDefinition: true)
!2280 = !DIGlobalVariableExpression(var: !2281, expr: !DIExpression())
!2281 = distinct !DIGlobalVariable(name: "ira_load_cost", scope: !2, file: !3, line: 350, type: !849, isLocal: false, isDefinition: true)
!2282 = !DIGlobalVariableExpression(var: !2283, expr: !DIExpression())
!2283 = distinct !DIGlobalVariable(name: "ira_store_cost", scope: !2, file: !3, line: 350, type: !849, isLocal: false, isDefinition: true)
!2284 = !DIGlobalVariableExpression(var: !2285, expr: !DIExpression())
!2285 = distinct !DIGlobalVariable(name: "ira_shuffle_cost", scope: !2, file: !3, line: 350, type: !849, isLocal: false, isDefinition: true)
!2286 = !DIGlobalVariableExpression(var: !2287, expr: !DIExpression())
!2287 = distinct !DIGlobalVariable(name: "ira_move_loops_num", scope: !2, file: !3, line: 351, type: !849, isLocal: false, isDefinition: true)
!2288 = !DIGlobalVariableExpression(var: !2289, expr: !DIExpression())
!2289 = distinct !DIGlobalVariable(name: "ira_additional_jumps_num", scope: !2, file: !3, line: 351, type: !849, isLocal: false, isDefinition: true)
!2290 = !DIGlobalVariableExpression(var: !2291, expr: !DIExpression())
!2291 = distinct !DIGlobalVariable(name: "eliminable_regset", scope: !2, file: !3, line: 355, type: !863, isLocal: false, isDefinition: true)
!2292 = !DIGlobalVariableExpression(var: !2293, expr: !DIExpression())
!2293 = distinct !DIGlobalVariable(name: "ira_reg_mode_hard_regset", scope: !2, file: !3, line: 359, type: !2294, isLocal: false, isDefinition: true)
!2294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 295104, elements: !2295)
!2295 = !{!2296, !2297}
!2296 = !DISubrange(count: 53)
!2297 = !DISubrange(count: 87)
!2298 = !DIGlobalVariableExpression(var: !2299, expr: !DIExpression())
!2299 = distinct !DIGlobalVariable(name: "ira_memory_move_cost", scope: !2, file: !3, line: 363, type: !2300, isLocal: false, isDefinition: true)
!2300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2301, size: 75168, elements: !2302)
!2301 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!2302 = !{!2297, !862, !892}
!2303 = !DIGlobalVariableExpression(var: !2304, expr: !DIExpression())
!2304 = distinct !DIGlobalVariable(name: "ira_register_move_cost", scope: !2, file: !3, line: 364, type: !2305, isLocal: false, isDefinition: true)
!2305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !856, size: 5568, elements: !2306)
!2306 = !{!2297}
!2307 = !DIGlobalVariableExpression(var: !2308, expr: !DIExpression())
!2308 = distinct !DIGlobalVariable(name: "ira_may_move_in_cost", scope: !2, file: !3, line: 370, type: !2305, isLocal: false, isDefinition: true)
!2309 = !DIGlobalVariableExpression(var: !2310, expr: !DIExpression())
!2310 = distinct !DIGlobalVariable(name: "ira_may_move_out_cost", scope: !2, file: !3, line: 376, type: !2305, isLocal: false, isDefinition: true)
!2311 = !DIGlobalVariableExpression(var: !2312, expr: !DIExpression())
!2312 = distinct !DIGlobalVariable(name: "ira_class_subset_p", scope: !2, file: !3, line: 381, type: !2313, isLocal: false, isDefinition: true)
!2313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 23328, elements: !2314)
!2314 = !{!862, !862}
!2315 = !DIGlobalVariableExpression(var: !2316, expr: !DIExpression())
!2316 = distinct !DIGlobalVariable(name: "no_unit_alloc_regs", scope: !2, file: !3, line: 409, type: !863, isLocal: true, isDefinition: true)
!2317 = !DIGlobalVariableExpression(var: !2318, expr: !DIExpression())
!2318 = distinct !DIGlobalVariable(name: "ira_class_hard_regs", scope: !2, file: !3, line: 414, type: !2319, isLocal: false, isDefinition: true)
!2319 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2301, size: 22896, elements: !2320)
!2320 = !{!862, !2296}
!2321 = !DIGlobalVariableExpression(var: !2322, expr: !DIExpression())
!2322 = distinct !DIGlobalVariable(name: "ira_class_hard_regs_num", scope: !2, file: !3, line: 418, type: !2323, isLocal: false, isDefinition: true)
!2323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 864, elements: !861)
!2324 = !DIGlobalVariableExpression(var: !2325, expr: !DIExpression())
!2325 = distinct !DIGlobalVariable(name: "ira_class_hard_reg_index", scope: !2, file: !3, line: 424, type: !2319, isLocal: false, isDefinition: true)
!2326 = !DIGlobalVariableExpression(var: !2327, expr: !DIExpression())
!2327 = distinct !DIGlobalVariable(name: "ira_available_class_regs", scope: !2, file: !3, line: 468, type: !2323, isLocal: false, isDefinition: true)
!2328 = !DIGlobalVariableExpression(var: !2329, expr: !DIExpression())
!2329 = distinct !DIGlobalVariable(name: "ira_reg_class_cover_size", scope: !2, file: !3, line: 707, type: !849, isLocal: false, isDefinition: true)
!2330 = !DIGlobalVariableExpression(var: !2331, expr: !DIExpression())
!2331 = distinct !DIGlobalVariable(name: "ira_reg_class_cover", scope: !2, file: !3, line: 712, type: !2332, isLocal: false, isDefinition: true)
!2332 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 864, elements: !861)
!2333 = !DIGlobalVariableExpression(var: !2334, expr: !DIExpression())
!2334 = distinct !DIGlobalVariable(name: "ira_important_classes_num", scope: !2, file: !3, line: 715, type: !849, isLocal: false, isDefinition: true)
!2335 = !DIGlobalVariableExpression(var: !2336, expr: !DIExpression())
!2336 = distinct !DIGlobalVariable(name: "ira_important_classes", scope: !2, file: !3, line: 720, type: !2332, isLocal: false, isDefinition: true)
!2337 = !DIGlobalVariableExpression(var: !2338, expr: !DIExpression())
!2338 = distinct !DIGlobalVariable(name: "ira_important_class_nums", scope: !2, file: !3, line: 725, type: !2323, isLocal: false, isDefinition: true)
!2339 = !DIGlobalVariableExpression(var: !2340, expr: !DIExpression())
!2340 = distinct !DIGlobalVariable(name: "ira_class_translate", scope: !2, file: !3, line: 834, type: !2332, isLocal: false, isDefinition: true)
!2341 = !DIGlobalVariableExpression(var: !2342, expr: !DIExpression())
!2342 = distinct !DIGlobalVariable(name: "ira_reg_class_intersect", scope: !2, file: !3, line: 971, type: !2343, isLocal: false, isDefinition: true)
!2343 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 23328, elements: !2314)
!2344 = !DIGlobalVariableExpression(var: !2345, expr: !DIExpression())
!2345 = distinct !DIGlobalVariable(name: "ira_reg_classes_intersect_p", scope: !2, file: !3, line: 976, type: !2346, isLocal: false, isDefinition: true)
!2346 = !DICompositeType(tag: DW_TAG_array_type, baseType: !848, size: 5832, elements: !2314)
!2347 = !DIGlobalVariableExpression(var: !2348, expr: !DIExpression())
!2348 = distinct !DIGlobalVariable(name: "ira_reg_class_super_classes", scope: !2, file: !3, line: 982, type: !2343, isLocal: false, isDefinition: true)
!2349 = !DIGlobalVariableExpression(var: !2350, expr: !DIExpression())
!2350 = distinct !DIGlobalVariable(name: "ira_reg_class_union", scope: !2, file: !3, line: 991, type: !2343, isLocal: false, isDefinition: true)
!2351 = !DIGlobalVariableExpression(var: !2352, expr: !DIExpression())
!2352 = distinct !DIGlobalVariable(name: "ira_hard_regno_cover_class", scope: !2, file: !3, line: 1138, type: !2353, isLocal: false, isDefinition: true)
!2353 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 1696, elements: !2354)
!2354 = !{!2296}
!2355 = !DIGlobalVariableExpression(var: !2356, expr: !DIExpression())
!2356 = distinct !DIGlobalVariable(name: "ira_reg_class_nregs", scope: !2, file: !3, line: 1168, type: !2357, isLocal: false, isDefinition: true)
!2357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !849, size: 75168, elements: !2358)
!2358 = !{!862, !2297}
!2359 = !DIGlobalVariableExpression(var: !2360, expr: !DIExpression())
!2360 = distinct !DIGlobalVariable(name: "ira_max_nregs", scope: !2, file: !3, line: 1171, type: !849, isLocal: false, isDefinition: true)
!2361 = !DIGlobalVariableExpression(var: !2362, expr: !DIExpression())
!2362 = distinct !DIGlobalVariable(name: "prohibited_class_mode_regs", scope: !2, file: !3, line: 1195, type: !2363, isLocal: false, isDefinition: true)
!2363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 150336, elements: !2358)
!2364 = !DIGlobalVariableExpression(var: !2365, expr: !DIExpression())
!2365 = distinct !DIGlobalVariable(name: "ira_prohibited_mode_move_regs", scope: !2, file: !3, line: 1326, type: !2366, isLocal: false, isDefinition: true)
!2366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !863, size: 5568, elements: !2306)
!2367 = !DIGlobalVariableExpression(var: !2368, expr: !DIExpression())
!2368 = distinct !DIGlobalVariable(name: "ira_no_alloc_regs", scope: !2, file: !3, line: 1372, type: !863, isLocal: false, isDefinition: true)
!2369 = !DIGlobalVariableExpression(var: !2370, expr: !DIExpression())
!2370 = distinct !DIGlobalVariable(name: "ira_reg_equiv_len", scope: !2, file: !3, line: 1516, type: !849, isLocal: false, isDefinition: true)
!2371 = !DIGlobalVariableExpression(var: !2372, expr: !DIExpression())
!2372 = distinct !DIGlobalVariable(name: "ira_reg_equiv_invariant_p", scope: !2, file: !3, line: 1520, type: !847, isLocal: false, isDefinition: true)
!2373 = !DIGlobalVariableExpression(var: !2374, expr: !DIExpression())
!2374 = distinct !DIGlobalVariable(name: "ira_reg_equiv_const", scope: !2, file: !3, line: 1524, type: !938, isLocal: false, isDefinition: true)
!2375 = !DIGlobalVariableExpression(var: !2376, expr: !DIExpression())
!2376 = distinct !DIGlobalVariable(name: "reg_renumber", scope: !2, file: !3, line: 1585, type: !2377, isLocal: false, isDefinition: true)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2378 = !DIGlobalVariableExpression(var: !2379, expr: !DIExpression())
!2379 = distinct !DIGlobalVariable(name: "ira_loops", scope: !2, file: !3, line: 3116, type: !1572, isLocal: false, isDefinition: true)
!2380 = !DIGlobalVariableExpression(var: !2381, expr: !DIExpression())
!2381 = distinct !DIGlobalVariable(name: "ira_conflicts_p", scope: !2, file: !3, line: 3120, type: !848, isLocal: false, isDefinition: true)
!2382 = !DIGlobalVariableExpression(var: !2383, expr: !DIExpression())
!2383 = distinct !DIGlobalVariable(name: "reg_class_names", scope: !2384, file: !3, line: 1101, type: !2390, isLocal: true, isDefinition: true)
!2384 = distinct !DISubprogram(name: "print_class_cover", scope: !3, file: !3, line: 1099, type: !2385, scopeLine: 1100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2387)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{null, !2193}
!2387 = !{!2388, !2389}
!2388 = !DILocalVariable(name: "f", arg: 1, scope: !2384, file: !3, line: 1099, type: !2193)
!2389 = !DILocalVariable(name: "i", scope: !2384, file: !3, line: 1102, type: !849)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2391, size: 1728, elements: !861)
!2391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !854)
!2392 = !DIGlobalVariableExpression(var: !2393, expr: !DIExpression())
!2393 = distinct !DIGlobalVariable(name: "temp_hard_regset", scope: !2, file: !3, line: 384, type: !863, isLocal: true, isDefinition: true)
!2394 = !DIGlobalVariableExpression(var: !2395, expr: !DIExpression())
!2395 = distinct !DIGlobalVariable(name: "alloc_reg_class_subclasses", scope: !2, file: !3, line: 663, type: !2343, isLocal: true, isDefinition: true)
!2396 = !DIGlobalVariableExpression(var: !2397, expr: !DIExpression())
!2397 = distinct !DIGlobalVariable(name: "classes", scope: !2398, file: !3, line: 735, type: !2407, isLocal: true, isDefinition: true)
!2398 = distinct !DISubprogram(name: "setup_cover_and_important_classes", scope: !3, file: !3, line: 729, type: !2144, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2399)
!2399 = !{!2400, !2401, !2402, !2403, !2404, !2405, !2406}
!2400 = !DILocalVariable(name: "i", scope: !2398, file: !3, line: 731, type: !849)
!2401 = !DILocalVariable(name: "j", scope: !2398, file: !3, line: 731, type: !849)
!2402 = !DILocalVariable(name: "n", scope: !2398, file: !3, line: 731, type: !849)
!2403 = !DILocalVariable(name: "cl", scope: !2398, file: !3, line: 731, type: !849)
!2404 = !DILocalVariable(name: "set_p", scope: !2398, file: !3, line: 732, type: !848)
!2405 = !DILocalVariable(name: "cover_classes", scope: !2398, file: !3, line: 733, type: !866)
!2406 = !DILocalVariable(name: "temp_hard_regset2", scope: !2398, file: !3, line: 734, type: !863)
!2407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !397, size: 896, elements: !2408)
!2408 = !{!2409}
!2409 = !DISubrange(count: 28)
!2410 = !DIGlobalVariableExpression(var: !2411, expr: !DIExpression())
!2411 = distinct !DIGlobalVariable(name: "cover_class_order", scope: !2, file: !3, line: 925, type: !2323, isLocal: true, isDefinition: true)
!2412 = !DIGlobalVariableExpression(var: !2413, expr: !DIExpression())
!2413 = distinct !DIGlobalVariable(name: "ira_prohibited_mode_move_regs_initialized_p", scope: !2, file: !3, line: 1329, type: !848, isLocal: true, isDefinition: true)
!2414 = !DIGlobalVariableExpression(var: !2415, expr: !DIExpression())
!2415 = distinct !DIGlobalVariable(name: "recorded_label_ref", scope: !2, file: !3, line: 2307, type: !849, isLocal: true, isDefinition: true)
!2416 = !DIGlobalVariableExpression(var: !2417, expr: !DIExpression())
!2417 = distinct !DIGlobalVariable(name: "reg_equiv", scope: !2, file: !3, line: 1928, type: !2112, isLocal: true, isDefinition: true)
!2418 = !DIGlobalVariableExpression(var: !2419, expr: !DIExpression())
!2419 = distinct !DIGlobalVariable(name: "equiv_mem", scope: !2, file: !3, line: 1932, type: !939, isLocal: true, isDefinition: true)
!2420 = !DIGlobalVariableExpression(var: !2421, expr: !DIExpression())
!2421 = distinct !DIGlobalVariable(name: "equiv_mem_modified", scope: !2, file: !3, line: 1935, type: !849, isLocal: true, isDefinition: true)
!2422 = !DIGlobalVariableExpression(var: !2413, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2423 = !DIGlobalVariableExpression(var: !2415, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2424 = !DIGlobalVariableExpression(var: !2421, expr: !DIExpression(DW_OP_deref_size, 1, DW_OP_constu, 1, DW_OP_mul, DW_OP_constu, 0, DW_OP_plus, DW_OP_stack_value))
!2425 = !{i32 2, !"Dwarf Version", i32 4}
!2426 = !{i32 2, !"Debug Info Version", i32 3}
!2427 = !{i32 1, !"wchar_size", i32 4}
!2428 = !{!"clang version 9.0.1 (https://github.com/llvm/llvm-project.git c1a0a213378a458fbea1a5c77b315c7dce08fd05)"}
!2429 = distinct !DISubprogram(name: "vprintf", scope: !2430, file: !2430, line: 39, type: !2431, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2441)
!2430 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdio.h", directory: "")
!2431 = !DISubroutineType(types: !2432)
!2432 = !{!849, !2433, !2434}
!2433 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !854)
!2434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2435, size: 64)
!2435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !2436)
!2436 = !{!2437, !2438, !2439, !2440}
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !2435, file: !3, baseType: !7, size: 32)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !2435, file: !3, baseType: !7, size: 32, offset: 32)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !2435, file: !3, baseType: !853, size: 64, offset: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !2435, file: !3, baseType: !853, size: 64, offset: 128)
!2441 = !{!2442, !2443}
!2442 = !DILocalVariable(name: "__fmt", arg: 1, scope: !2429, file: !2430, line: 39, type: !2433)
!2443 = !DILocalVariable(name: "__arg", arg: 2, scope: !2429, file: !2430, line: 39, type: !2434)
!2444 = !DILocation(line: 0, scope: !2429)
!2445 = !DILocation(line: 41, column: 20, scope: !2429)
!2446 = !DILocation(line: 41, column: 10, scope: !2429)
!2447 = !DILocation(line: 41, column: 3, scope: !2429)
!2448 = distinct !DISubprogram(name: "getchar", scope: !2430, file: !2430, line: 47, type: !2449, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!2449 = !DISubroutineType(types: !2450)
!2450 = !{!849}
!2451 = !{}
!2452 = !DILocation(line: 49, column: 16, scope: !2448)
!2453 = !DILocation(line: 49, column: 10, scope: !2448)
!2454 = !DILocation(line: 49, column: 3, scope: !2448)
!2455 = distinct !DISubprogram(name: "fgetc_unlocked", scope: !2430, file: !2430, line: 56, type: !2456, scopeLine: 57, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2458)
!2456 = !DISubroutineType(types: !2457)
!2457 = !{!849, !2193}
!2458 = !{!2459}
!2459 = !DILocalVariable(name: "__fp", arg: 1, scope: !2455, file: !2430, line: 56, type: !2193)
!2460 = !DILocation(line: 0, scope: !2455)
!2461 = !DILocation(line: 58, column: 10, scope: !2455)
!2462 = !DILocation(line: 58, column: 3, scope: !2455)
!2463 = distinct !DISubprogram(name: "getc_unlocked", scope: !2430, file: !2430, line: 66, type: !2456, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2464)
!2464 = !{!2465}
!2465 = !DILocalVariable(name: "__fp", arg: 1, scope: !2463, file: !2430, line: 66, type: !2193)
!2466 = !DILocation(line: 0, scope: !2463)
!2467 = !DILocation(line: 68, column: 10, scope: !2463)
!2468 = !DILocation(line: 68, column: 3, scope: !2463)
!2469 = distinct !DISubprogram(name: "getchar_unlocked", scope: !2430, file: !2430, line: 73, type: !2449, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!2470 = !DILocation(line: 75, column: 10, scope: !2469)
!2471 = !DILocation(line: 75, column: 3, scope: !2469)
!2472 = distinct !DISubprogram(name: "putchar", scope: !2430, file: !2430, line: 82, type: !2473, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2475)
!2473 = !DISubroutineType(types: !2474)
!2474 = !{!849, !849}
!2475 = !{!2476}
!2476 = !DILocalVariable(name: "__c", arg: 1, scope: !2472, file: !2430, line: 82, type: !849)
!2477 = !DILocation(line: 0, scope: !2472)
!2478 = !DILocation(line: 84, column: 21, scope: !2472)
!2479 = !DILocation(line: 84, column: 10, scope: !2472)
!2480 = !DILocation(line: 84, column: 3, scope: !2472)
!2481 = distinct !DISubprogram(name: "fputc_unlocked", scope: !2430, file: !2430, line: 91, type: !2482, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2484)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{!849, !849, !2193}
!2484 = !{!2485, !2486}
!2485 = !DILocalVariable(name: "__c", arg: 1, scope: !2481, file: !2430, line: 91, type: !849)
!2486 = !DILocalVariable(name: "__stream", arg: 2, scope: !2481, file: !2430, line: 91, type: !2193)
!2487 = !DILocation(line: 0, scope: !2481)
!2488 = !DILocation(line: 93, column: 10, scope: !2481)
!2489 = !DILocation(line: 93, column: 3, scope: !2481)
!2490 = distinct !DISubprogram(name: "putc_unlocked", scope: !2430, file: !2430, line: 101, type: !2482, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2491)
!2491 = !{!2492, !2493}
!2492 = !DILocalVariable(name: "__c", arg: 1, scope: !2490, file: !2430, line: 101, type: !849)
!2493 = !DILocalVariable(name: "__stream", arg: 2, scope: !2490, file: !2430, line: 101, type: !2193)
!2494 = !DILocation(line: 0, scope: !2490)
!2495 = !DILocation(line: 103, column: 10, scope: !2490)
!2496 = !DILocation(line: 103, column: 3, scope: !2490)
!2497 = distinct !DISubprogram(name: "putchar_unlocked", scope: !2430, file: !2430, line: 108, type: !2473, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2498)
!2498 = !{!2499}
!2499 = !DILocalVariable(name: "__c", arg: 1, scope: !2497, file: !2430, line: 108, type: !849)
!2500 = !DILocation(line: 0, scope: !2497)
!2501 = !DILocation(line: 110, column: 10, scope: !2497)
!2502 = !DILocation(line: 110, column: 3, scope: !2497)
!2503 = distinct !DISubprogram(name: "getline", scope: !2430, file: !2430, line: 118, type: !2504, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2508)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{!2506, !850, !2507, !2193}
!2506 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !2220, line: 193, baseType: !907)
!2507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1349, size: 64)
!2508 = !{!2509, !2510, !2511}
!2509 = !DILocalVariable(name: "__lineptr", arg: 1, scope: !2503, file: !2430, line: 118, type: !850)
!2510 = !DILocalVariable(name: "__n", arg: 2, scope: !2503, file: !2430, line: 118, type: !2507)
!2511 = !DILocalVariable(name: "__stream", arg: 3, scope: !2503, file: !2430, line: 118, type: !2193)
!2512 = !DILocation(line: 0, scope: !2503)
!2513 = !DILocation(line: 120, column: 10, scope: !2503)
!2514 = !DILocation(line: 120, column: 3, scope: !2503)
!2515 = distinct !DISubprogram(name: "feof_unlocked", scope: !2430, file: !2430, line: 128, type: !2456, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2516)
!2516 = !{!2517}
!2517 = !DILocalVariable(name: "__stream", arg: 1, scope: !2515, file: !2430, line: 128, type: !2193)
!2518 = !DILocation(line: 0, scope: !2515)
!2519 = !DILocation(line: 130, column: 10, scope: !2515)
!2520 = !DILocation(line: 130, column: 3, scope: !2515)
!2521 = distinct !DISubprogram(name: "ferror_unlocked", scope: !2430, file: !2430, line: 135, type: !2456, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2522)
!2522 = !{!2523}
!2523 = !DILocalVariable(name: "__stream", arg: 1, scope: !2521, file: !2430, line: 135, type: !2193)
!2524 = !DILocation(line: 0, scope: !2521)
!2525 = !DILocation(line: 137, column: 10, scope: !2521)
!2526 = !DILocation(line: 137, column: 3, scope: !2521)
!2527 = distinct !DISubprogram(name: "tolower", scope: !2528, file: !2528, line: 207, type: !2473, scopeLine: 208, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2529)
!2528 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!2529 = !{!2530}
!2530 = !DILocalVariable(name: "__c", arg: 1, scope: !2527, file: !2528, line: 207, type: !849)
!2531 = !DILocation(line: 0, scope: !2527)
!2532 = !DILocation(line: 209, column: 22, scope: !2527)
!2533 = !DILocation(line: 209, column: 39, scope: !2527)
!2534 = !DILocation(line: 209, column: 38, scope: !2527)
!2535 = !DILocation(line: 209, column: 37, scope: !2527)
!2536 = !DILocation(line: 209, column: 10, scope: !2527)
!2537 = !DILocation(line: 209, column: 3, scope: !2527)
!2538 = distinct !DISubprogram(name: "toupper", scope: !2528, file: !2528, line: 213, type: !2473, scopeLine: 214, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2539)
!2539 = !{!2540}
!2540 = !DILocalVariable(name: "__c", arg: 1, scope: !2538, file: !2528, line: 213, type: !849)
!2541 = !DILocation(line: 0, scope: !2538)
!2542 = !DILocation(line: 215, column: 22, scope: !2538)
!2543 = !DILocation(line: 215, column: 39, scope: !2538)
!2544 = !DILocation(line: 215, column: 38, scope: !2538)
!2545 = !DILocation(line: 215, column: 37, scope: !2538)
!2546 = !DILocation(line: 215, column: 10, scope: !2538)
!2547 = !DILocation(line: 215, column: 3, scope: !2538)
!2548 = distinct !DISubprogram(name: "atoi", scope: !2549, file: !2549, line: 361, type: !2550, scopeLine: 362, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2552)
!2549 = !DIFile(filename: "/usr/include/stdlib.h", directory: "")
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!849, !854}
!2552 = !{!2553}
!2553 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2548, file: !2549, line: 361, type: !854)
!2554 = !DILocation(line: 0, scope: !2548)
!2555 = !DILocation(line: 363, column: 16, scope: !2548)
!2556 = !DILocation(line: 363, column: 10, scope: !2548)
!2557 = !DILocation(line: 363, column: 3, scope: !2548)
!2558 = distinct !DISubprogram(name: "atol", scope: !2549, file: !2549, line: 366, type: !2559, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2561)
!2559 = !DISubroutineType(types: !2560)
!2560 = !{!907, !854}
!2561 = !{!2562}
!2562 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2558, file: !2549, line: 366, type: !854)
!2563 = !DILocation(line: 0, scope: !2558)
!2564 = !DILocation(line: 368, column: 10, scope: !2558)
!2565 = !DILocation(line: 368, column: 3, scope: !2558)
!2566 = distinct !DISubprogram(name: "atoll", scope: !2549, file: !2549, line: 373, type: !2567, scopeLine: 374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2570)
!2567 = !DISubroutineType(types: !2568)
!2568 = !{!2569, !854}
!2569 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!2570 = !{!2571}
!2571 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2566, file: !2549, line: 373, type: !854)
!2572 = !DILocation(line: 0, scope: !2566)
!2573 = !DILocation(line: 375, column: 10, scope: !2566)
!2574 = !DILocation(line: 375, column: 3, scope: !2566)
!2575 = distinct !DISubprogram(name: "bsearch", scope: !2576, file: !2576, line: 20, type: !2577, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2580)
!2576 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-bsearch.h", directory: "")
!2577 = !DISubroutineType(types: !2578)
!2578 = !{!853, !1334, !1334, !1349, !1349, !2579}
!2579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__compar_fn_t", file: !2549, line: 808, baseType: !1338)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590}
!2581 = !DILocalVariable(name: "__key", arg: 1, scope: !2575, file: !2576, line: 20, type: !1334)
!2582 = !DILocalVariable(name: "__base", arg: 2, scope: !2575, file: !2576, line: 20, type: !1334)
!2583 = !DILocalVariable(name: "__nmemb", arg: 3, scope: !2575, file: !2576, line: 20, type: !1349)
!2584 = !DILocalVariable(name: "__size", arg: 4, scope: !2575, file: !2576, line: 20, type: !1349)
!2585 = !DILocalVariable(name: "__compar", arg: 5, scope: !2575, file: !2576, line: 21, type: !2579)
!2586 = !DILocalVariable(name: "__l", scope: !2575, file: !2576, line: 23, type: !1349)
!2587 = !DILocalVariable(name: "__u", scope: !2575, file: !2576, line: 23, type: !1349)
!2588 = !DILocalVariable(name: "__idx", scope: !2575, file: !2576, line: 23, type: !1349)
!2589 = !DILocalVariable(name: "__p", scope: !2575, file: !2576, line: 24, type: !1334)
!2590 = !DILocalVariable(name: "__comparison", scope: !2575, file: !2576, line: 25, type: !849)
!2591 = !DILocation(line: 0, scope: !2575)
!2592 = !DILocation(line: 29, column: 3, scope: !2575)
!2593 = !DILocation(line: 27, column: 7, scope: !2575)
!2594 = !DILocation(line: 29, column: 14, scope: !2575)
!2595 = !DILocation(line: 31, column: 20, scope: !2596)
!2596 = distinct !DILexicalBlock(scope: !2575, file: !2576, line: 30, column: 5)
!2597 = !DILocation(line: 31, column: 27, scope: !2596)
!2598 = !DILocation(line: 32, column: 56, scope: !2596)
!2599 = !DILocation(line: 32, column: 47, scope: !2596)
!2600 = !DILocation(line: 33, column: 22, scope: !2596)
!2601 = !DILocation(line: 34, column: 24, scope: !2602)
!2602 = distinct !DILexicalBlock(scope: !2596, file: !2576, line: 34, column: 11)
!2603 = !DILocation(line: 34, column: 11, scope: !2596)
!2604 = !DILocation(line: 36, column: 29, scope: !2605)
!2605 = distinct !DILexicalBlock(scope: !2602, file: !2576, line: 36, column: 16)
!2606 = !DILocation(line: 36, column: 16, scope: !2602)
!2607 = !DILocation(line: 37, column: 14, scope: !2605)
!2608 = distinct !{!2608, !2592, !2609}
!2609 = !DILocation(line: 40, column: 5, scope: !2575)
!2610 = !DILocation(line: 43, column: 1, scope: !2575)
!2611 = distinct !DISubprogram(name: "atof", scope: !2612, file: !2612, line: 25, type: !2613, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2616)
!2612 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdlib-float.h", directory: "")
!2613 = !DISubroutineType(types: !2614)
!2614 = !{!2615, !854}
!2615 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!2616 = !{!2617}
!2617 = !DILocalVariable(name: "__nptr", arg: 1, scope: !2611, file: !2612, line: 25, type: !854)
!2618 = !DILocation(line: 0, scope: !2611)
!2619 = !DILocation(line: 27, column: 10, scope: !2611)
!2620 = !DILocation(line: 27, column: 3, scope: !2611)
!2621 = distinct !DISubprogram(name: "strtoimax", scope: !2622, file: !2622, line: 324, type: !2623, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2629)
!2622 = !DIFile(filename: "/usr/include/inttypes.h", directory: "")
!2623 = !DISubroutineType(types: !2624)
!2624 = !{!2625, !2433, !2628, !849}
!2625 = !DIDerivedType(tag: DW_TAG_typedef, name: "intmax_t", file: !2626, line: 101, baseType: !2627)
!2626 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2627 = !DIDerivedType(tag: DW_TAG_typedef, name: "__intmax_t", file: !2220, line: 72, baseType: !907)
!2628 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !850)
!2629 = !{!2630, !2631, !2632}
!2630 = !DILocalVariable(name: "nptr", arg: 1, scope: !2621, file: !2622, line: 324, type: !2433)
!2631 = !DILocalVariable(name: "endptr", arg: 2, scope: !2621, file: !2622, line: 324, type: !2628)
!2632 = !DILocalVariable(name: "base", arg: 3, scope: !2621, file: !2622, line: 324, type: !849)
!2633 = !DILocation(line: 0, scope: !2621)
!2634 = !DILocation(line: 327, column: 10, scope: !2621)
!2635 = !DILocation(line: 327, column: 3, scope: !2621)
!2636 = distinct !DISubprogram(name: "strtoumax", scope: !2622, file: !2622, line: 336, type: !2637, scopeLine: 338, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2641)
!2637 = !DISubroutineType(types: !2638)
!2638 = !{!2639, !2433, !2628, !849}
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintmax_t", file: !2626, line: 102, baseType: !2640)
!2640 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uintmax_t", file: !2220, line: 73, baseType: !865)
!2641 = !{!2642, !2643, !2644}
!2642 = !DILocalVariable(name: "nptr", arg: 1, scope: !2636, file: !2622, line: 336, type: !2433)
!2643 = !DILocalVariable(name: "endptr", arg: 2, scope: !2636, file: !2622, line: 336, type: !2628)
!2644 = !DILocalVariable(name: "base", arg: 3, scope: !2636, file: !2622, line: 336, type: !849)
!2645 = !DILocation(line: 0, scope: !2636)
!2646 = !DILocation(line: 339, column: 10, scope: !2636)
!2647 = !DILocation(line: 339, column: 3, scope: !2636)
!2648 = distinct !DISubprogram(name: "wcstoimax", scope: !2622, file: !2622, line: 348, type: !2649, scopeLine: 350, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2658)
!2649 = !DISubroutineType(types: !2650)
!2650 = !{!2625, !2651, !2655, !849}
!2651 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2652)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2654)
!2654 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gwchar_t", file: !2622, line: 34, baseType: !849)
!2655 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !2656)
!2656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2657, size: 64)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2654, size: 64)
!2658 = !{!2659, !2660, !2661}
!2659 = !DILocalVariable(name: "nptr", arg: 1, scope: !2648, file: !2622, line: 348, type: !2651)
!2660 = !DILocalVariable(name: "endptr", arg: 2, scope: !2648, file: !2622, line: 348, type: !2655)
!2661 = !DILocalVariable(name: "base", arg: 3, scope: !2648, file: !2622, line: 348, type: !849)
!2662 = !DILocation(line: 0, scope: !2648)
!2663 = !DILocation(line: 351, column: 10, scope: !2648)
!2664 = !DILocation(line: 351, column: 3, scope: !2648)
!2665 = distinct !DISubprogram(name: "wcstoumax", scope: !2622, file: !2622, line: 362, type: !2666, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2668)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{!2639, !2651, !2655, !849}
!2668 = !{!2669, !2670, !2671}
!2669 = !DILocalVariable(name: "nptr", arg: 1, scope: !2665, file: !2622, line: 362, type: !2651)
!2670 = !DILocalVariable(name: "endptr", arg: 2, scope: !2665, file: !2622, line: 362, type: !2655)
!2671 = !DILocalVariable(name: "base", arg: 3, scope: !2665, file: !2622, line: 362, type: !849)
!2672 = !DILocation(line: 0, scope: !2665)
!2673 = !DILocation(line: 365, column: 10, scope: !2665)
!2674 = !DILocation(line: 365, column: 3, scope: !2665)
!2675 = distinct !DISubprogram(name: "stat", scope: !2676, file: !2676, line: 453, type: !2677, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2714)
!2676 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/stat.h", directory: "")
!2677 = !DISubroutineType(types: !2678)
!2678 = !{!849, !854, !2679}
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat", file: !2681, line: 46, size: 1152, elements: !2682)
!2681 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stat.h", directory: "")
!2682 = !{!2683, !2685, !2687, !2689, !2691, !2693, !2695, !2696, !2697, !2698, !2700, !2702, !2710, !2711, !2712}
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2680, file: !2681, line: 48, baseType: !2684, size: 64)
!2684 = !DIDerivedType(tag: DW_TAG_typedef, name: "__dev_t", file: !2220, line: 145, baseType: !865)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2680, file: !2681, line: 53, baseType: !2686, size: 64, offset: 64)
!2686 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino_t", file: !2220, line: 148, baseType: !865)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2680, file: !2681, line: 61, baseType: !2688, size: 64, offset: 128)
!2688 = !DIDerivedType(tag: DW_TAG_typedef, name: "__nlink_t", file: !2220, line: 151, baseType: !865)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2680, file: !2681, line: 62, baseType: !2690, size: 32, offset: 192)
!2690 = !DIDerivedType(tag: DW_TAG_typedef, name: "__mode_t", file: !2220, line: 150, baseType: !7)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2680, file: !2681, line: 64, baseType: !2692, size: 32, offset: 224)
!2692 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uid_t", file: !2220, line: 146, baseType: !7)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2680, file: !2681, line: 65, baseType: !2694, size: 32, offset: 256)
!2694 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gid_t", file: !2220, line: 147, baseType: !7)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2680, file: !2681, line: 67, baseType: !849, size: 32, offset: 288)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2680, file: !2681, line: 69, baseType: !2684, size: 64, offset: 320)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2680, file: !2681, line: 74, baseType: !2219, size: 64, offset: 384)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2680, file: !2681, line: 78, baseType: !2699, size: 64, offset: 448)
!2699 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blksize_t", file: !2220, line: 174, baseType: !907)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2680, file: !2681, line: 80, baseType: !2701, size: 64, offset: 512)
!2701 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt_t", file: !2220, line: 179, baseType: !907)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2680, file: !2681, line: 91, baseType: !2703, size: 128, offset: 576)
!2703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec", file: !2704, line: 10, size: 128, elements: !2705)
!2704 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h", directory: "")
!2705 = !{!2706, !2708}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2703, file: !2704, line: 12, baseType: !2707, size: 64)
!2707 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !2220, line: 160, baseType: !907)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2703, file: !2704, line: 16, baseType: !2709, size: 64, offset: 64)
!2709 = !DIDerivedType(tag: DW_TAG_typedef, name: "__syscall_slong_t", file: !2220, line: 196, baseType: !907)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2680, file: !2681, line: 92, baseType: !2703, size: 128, offset: 704)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2680, file: !2681, line: 93, baseType: !2703, size: 128, offset: 832)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2680, file: !2681, line: 106, baseType: !2713, size: 192, offset: 960)
!2713 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2709, size: 192, elements: !1064)
!2714 = !{!2715, !2716}
!2715 = !DILocalVariable(name: "__path", arg: 1, scope: !2675, file: !2676, line: 453, type: !854)
!2716 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2675, file: !2676, line: 453, type: !2679)
!2717 = !DILocation(line: 0, scope: !2675)
!2718 = !DILocation(line: 455, column: 10, scope: !2675)
!2719 = !DILocation(line: 455, column: 3, scope: !2675)
!2720 = distinct !DISubprogram(name: "lstat", scope: !2676, file: !2676, line: 460, type: !2677, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2721)
!2721 = !{!2722, !2723}
!2722 = !DILocalVariable(name: "__path", arg: 1, scope: !2720, file: !2676, line: 460, type: !854)
!2723 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2720, file: !2676, line: 460, type: !2679)
!2724 = !DILocation(line: 0, scope: !2720)
!2725 = !DILocation(line: 462, column: 10, scope: !2720)
!2726 = !DILocation(line: 462, column: 3, scope: !2720)
!2727 = distinct !DISubprogram(name: "fstat", scope: !2676, file: !2676, line: 467, type: !2728, scopeLine: 468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2730)
!2728 = !DISubroutineType(types: !2729)
!2729 = !{!849, !849, !2679}
!2730 = !{!2731, !2732}
!2731 = !DILocalVariable(name: "__fd", arg: 1, scope: !2727, file: !2676, line: 467, type: !849)
!2732 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2727, file: !2676, line: 467, type: !2679)
!2733 = !DILocation(line: 0, scope: !2727)
!2734 = !DILocation(line: 469, column: 10, scope: !2727)
!2735 = !DILocation(line: 469, column: 3, scope: !2727)
!2736 = distinct !DISubprogram(name: "fstatat", scope: !2676, file: !2676, line: 474, type: !2737, scopeLine: 476, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2739)
!2737 = !DISubroutineType(types: !2738)
!2738 = !{!849, !849, !854, !2679, !849}
!2739 = !{!2740, !2741, !2742, !2743}
!2740 = !DILocalVariable(name: "__fd", arg: 1, scope: !2736, file: !2676, line: 474, type: !849)
!2741 = !DILocalVariable(name: "__filename", arg: 2, scope: !2736, file: !2676, line: 474, type: !854)
!2742 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2736, file: !2676, line: 474, type: !2679)
!2743 = !DILocalVariable(name: "__flag", arg: 4, scope: !2736, file: !2676, line: 474, type: !849)
!2744 = !DILocation(line: 0, scope: !2736)
!2745 = !DILocation(line: 477, column: 10, scope: !2736)
!2746 = !DILocation(line: 477, column: 3, scope: !2736)
!2747 = distinct !DISubprogram(name: "mknod", scope: !2676, file: !2676, line: 483, type: !2748, scopeLine: 484, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2750)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{!849, !854, !2690, !2684}
!2750 = !{!2751, !2752, !2753}
!2751 = !DILocalVariable(name: "__path", arg: 1, scope: !2747, file: !2676, line: 483, type: !854)
!2752 = !DILocalVariable(name: "__mode", arg: 2, scope: !2747, file: !2676, line: 483, type: !2690)
!2753 = !DILocalVariable(name: "__dev", arg: 3, scope: !2747, file: !2676, line: 483, type: !2684)
!2754 = !DILocation(line: 0, scope: !2747)
!2755 = !DILocation(line: 485, column: 10, scope: !2747)
!2756 = !DILocation(line: 485, column: 3, scope: !2747)
!2757 = distinct !DISubprogram(name: "mknodat", scope: !2676, file: !2676, line: 491, type: !2758, scopeLine: 493, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2760)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!849, !849, !854, !2690, !2684}
!2760 = !{!2761, !2762, !2763, !2764}
!2761 = !DILocalVariable(name: "__fd", arg: 1, scope: !2757, file: !2676, line: 491, type: !849)
!2762 = !DILocalVariable(name: "__path", arg: 2, scope: !2757, file: !2676, line: 491, type: !854)
!2763 = !DILocalVariable(name: "__mode", arg: 3, scope: !2757, file: !2676, line: 491, type: !2690)
!2764 = !DILocalVariable(name: "__dev", arg: 4, scope: !2757, file: !2676, line: 491, type: !2684)
!2765 = !DILocation(line: 0, scope: !2757)
!2766 = !DILocation(line: 494, column: 10, scope: !2757)
!2767 = !DILocation(line: 494, column: 3, scope: !2757)
!2768 = distinct !DISubprogram(name: "stat64", scope: !2676, file: !2676, line: 502, type: !2769, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2791)
!2769 = !DISubroutineType(types: !2770)
!2770 = !{!849, !854, !2771}
!2771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2772, size: 64)
!2772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "stat64", file: !2681, line: 119, size: 1152, elements: !2773)
!2773 = !{!2774, !2775, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2787, !2788, !2789, !2790}
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "st_dev", scope: !2772, file: !2681, line: 121, baseType: !2684, size: 64)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "st_ino", scope: !2772, file: !2681, line: 123, baseType: !2776, size: 64, offset: 64)
!2776 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ino64_t", file: !2220, line: 149, baseType: !865)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "st_nlink", scope: !2772, file: !2681, line: 124, baseType: !2688, size: 64, offset: 128)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "st_mode", scope: !2772, file: !2681, line: 125, baseType: !2690, size: 32, offset: 192)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "st_uid", scope: !2772, file: !2681, line: 132, baseType: !2692, size: 32, offset: 224)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "st_gid", scope: !2772, file: !2681, line: 133, baseType: !2694, size: 32, offset: 256)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "__pad0", scope: !2772, file: !2681, line: 135, baseType: !849, size: 32, offset: 288)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "st_rdev", scope: !2772, file: !2681, line: 136, baseType: !2684, size: 64, offset: 320)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "st_size", scope: !2772, file: !2681, line: 137, baseType: !2219, size: 64, offset: 384)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "st_blksize", scope: !2772, file: !2681, line: 143, baseType: !2699, size: 64, offset: 448)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "st_blocks", scope: !2772, file: !2681, line: 144, baseType: !2786, size: 64, offset: 512)
!2786 = !DIDerivedType(tag: DW_TAG_typedef, name: "__blkcnt64_t", file: !2220, line: 180, baseType: !907)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "st_atim", scope: !2772, file: !2681, line: 152, baseType: !2703, size: 128, offset: 576)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "st_mtim", scope: !2772, file: !2681, line: 153, baseType: !2703, size: 128, offset: 704)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "st_ctim", scope: !2772, file: !2681, line: 154, baseType: !2703, size: 128, offset: 832)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "__glibc_reserved", scope: !2772, file: !2681, line: 164, baseType: !2713, size: 192, offset: 960)
!2791 = !{!2792, !2793}
!2792 = !DILocalVariable(name: "__path", arg: 1, scope: !2768, file: !2676, line: 502, type: !854)
!2793 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2768, file: !2676, line: 502, type: !2771)
!2794 = !DILocation(line: 0, scope: !2768)
!2795 = !DILocation(line: 504, column: 10, scope: !2768)
!2796 = !DILocation(line: 504, column: 3, scope: !2768)
!2797 = distinct !DISubprogram(name: "lstat64", scope: !2676, file: !2676, line: 509, type: !2769, scopeLine: 510, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2798)
!2798 = !{!2799, !2800}
!2799 = !DILocalVariable(name: "__path", arg: 1, scope: !2797, file: !2676, line: 509, type: !854)
!2800 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2797, file: !2676, line: 509, type: !2771)
!2801 = !DILocation(line: 0, scope: !2797)
!2802 = !DILocation(line: 511, column: 10, scope: !2797)
!2803 = !DILocation(line: 511, column: 3, scope: !2797)
!2804 = distinct !DISubprogram(name: "fstat64", scope: !2676, file: !2676, line: 516, type: !2805, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2807)
!2805 = !DISubroutineType(types: !2806)
!2806 = !{!849, !849, !2771}
!2807 = !{!2808, !2809}
!2808 = !DILocalVariable(name: "__fd", arg: 1, scope: !2804, file: !2676, line: 516, type: !849)
!2809 = !DILocalVariable(name: "__statbuf", arg: 2, scope: !2804, file: !2676, line: 516, type: !2771)
!2810 = !DILocation(line: 0, scope: !2804)
!2811 = !DILocation(line: 518, column: 10, scope: !2804)
!2812 = !DILocation(line: 518, column: 3, scope: !2804)
!2813 = distinct !DISubprogram(name: "fstatat64", scope: !2676, file: !2676, line: 523, type: !2814, scopeLine: 525, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2816)
!2814 = !DISubroutineType(types: !2815)
!2815 = !{!849, !849, !854, !2771, !849}
!2816 = !{!2817, !2818, !2819, !2820}
!2817 = !DILocalVariable(name: "__fd", arg: 1, scope: !2813, file: !2676, line: 523, type: !849)
!2818 = !DILocalVariable(name: "__filename", arg: 2, scope: !2813, file: !2676, line: 523, type: !854)
!2819 = !DILocalVariable(name: "__statbuf", arg: 3, scope: !2813, file: !2676, line: 523, type: !2771)
!2820 = !DILocalVariable(name: "__flag", arg: 4, scope: !2813, file: !2676, line: 523, type: !849)
!2821 = !DILocation(line: 0, scope: !2813)
!2822 = !DILocation(line: 526, column: 10, scope: !2813)
!2823 = !DILocation(line: 526, column: 3, scope: !2813)
!2824 = distinct !DISubprogram(name: "ira_allocate", scope: !3, file: !3, line: 564, type: !2825, scopeLine: 565, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2827)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!853, !1349}
!2827 = !{!2828, !2829}
!2828 = !DILocalVariable(name: "len", arg: 1, scope: !2824, file: !3, line: 564, type: !1349)
!2829 = !DILocalVariable(name: "res", scope: !2824, file: !3, line: 566, type: !853)
!2830 = !DILocation(line: 0, scope: !2824)
!2831 = !DILocation(line: 571, column: 9, scope: !2824)
!2832 = !DILocation(line: 573, column: 3, scope: !2824)
!2833 = distinct !DISubprogram(name: "ira_reallocate", scope: !3, file: !3, line: 578, type: !2834, scopeLine: 579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2836)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{!853, !853, !1349}
!2836 = !{!2837, !2838, !2839}
!2837 = !DILocalVariable(name: "ptr", arg: 1, scope: !2833, file: !3, line: 578, type: !853)
!2838 = !DILocalVariable(name: "len", arg: 2, scope: !2833, file: !3, line: 578, type: !1349)
!2839 = !DILocalVariable(name: "res", scope: !2833, file: !3, line: 580, type: !853)
!2840 = !DILocation(line: 0, scope: !2833)
!2841 = !DILocation(line: 585, column: 9, scope: !2833)
!2842 = !DILocation(line: 587, column: 3, scope: !2833)
!2843 = distinct !DISubprogram(name: "ira_free", scope: !3, file: !3, line: 592, type: !1344, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2844)
!2844 = !{!2845}
!2845 = !DILocalVariable(name: "addr", arg: 1, scope: !2843, file: !3, line: 592, type: !853)
!2846 = !DILocation(line: 0, scope: !2843)
!2847 = !DILocation(line: 597, column: 3, scope: !2843)
!2848 = !DILocation(line: 599, column: 1, scope: !2843)
!2849 = distinct !DISubprogram(name: "ira_allocate_bitmap", scope: !3, file: !3, line: 604, type: !2850, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!873}
!2852 = !DILocation(line: 606, column: 10, scope: !2849)
!2853 = !DILocation(line: 606, column: 3, scope: !2849)
!2854 = distinct !DISubprogram(name: "ira_free_bitmap", scope: !3, file: !3, line: 611, type: !2855, scopeLine: 612, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2857)
!2855 = !DISubroutineType(types: !2856)
!2856 = !{null, !873}
!2857 = !{!2858}
!2858 = !DILocalVariable(name: "b", arg: 1, scope: !2854, file: !3, line: 611, type: !873)
!2859 = !DILocation(line: 0, scope: !2854)
!2860 = !DILocation(line: 614, column: 1, scope: !2854)
!2861 = distinct !DISubprogram(name: "ira_print_disposition", scope: !3, file: !3, line: 621, type: !2385, scopeLine: 622, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2862)
!2862 = !{!2863, !2864, !2865, !2866, !2867, !2971}
!2863 = !DILocalVariable(name: "f", arg: 1, scope: !2861, file: !3, line: 621, type: !2193)
!2864 = !DILocalVariable(name: "i", scope: !2861, file: !3, line: 623, type: !849)
!2865 = !DILocalVariable(name: "n", scope: !2861, file: !3, line: 623, type: !849)
!2866 = !DILocalVariable(name: "max_regno", scope: !2861, file: !3, line: 623, type: !849)
!2867 = !DILocalVariable(name: "a", scope: !2861, file: !3, line: 624, type: !2868)
!2868 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_allocno_t", file: !2105, line: 63, baseType: !2869)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_allocno", file: !2105, line: 232, size: 1984, elements: !2871)
!2871 = !{!2872, !2873, !2874, !2875, !2876, !2877, !2878, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2924, !2925, !2926, !2927, !2928, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2964, !2965, !2966, !2967, !2968, !2969, !2970}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2870, file: !2105, line: 237, baseType: !849, size: 32)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !2870, file: !2105, line: 239, baseType: !849, size: 32, offset: 32)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2870, file: !2105, line: 242, baseType: !5, size: 32, offset: 64)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "hard_regno", scope: !2870, file: !2105, line: 249, baseType: !849, size: 32, offset: 96)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2870, file: !2105, line: 251, baseType: !939, size: 64, offset: 128)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "next_regno_allocno", scope: !2870, file: !2105, line: 255, baseType: !2868, size: 64, offset: 192)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "loop_tree_node", scope: !2870, file: !2105, line: 260, baseType: !2879, size: 64, offset: 256)
!2879 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_loop_tree_node_t", file: !2105, line: 73, baseType: !2880)
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_loop_tree_node", file: !2105, line: 83, size: 1728, elements: !2882)
!2882 = !{!2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2894, !2895, !2896, !2897, !2898, !2899}
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2881, file: !2105, line: 86, baseType: !1411, size: 64)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "loop", scope: !2881, file: !2105, line: 87, baseType: !1453, size: 64, offset: 64)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "subloop_next", scope: !2881, file: !2105, line: 90, baseType: !2879, size: 64, offset: 128)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2881, file: !2105, line: 90, baseType: !2879, size: 64, offset: 192)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "subloops", scope: !2881, file: !2105, line: 93, baseType: !2879, size: 64, offset: 256)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2881, file: !2105, line: 93, baseType: !2879, size: 64, offset: 320)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2881, file: !2105, line: 95, baseType: !2879, size: 64, offset: 384)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2881, file: !2105, line: 98, baseType: !849, size: 32, offset: 448)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "to_remove_p", scope: !2881, file: !2105, line: 105, baseType: !848, size: 8, offset: 480)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "regno_allocno_map", scope: !2881, file: !2105, line: 114, baseType: !2893, size: 64, offset: 512)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "entered_from_non_parent_p", scope: !2881, file: !2105, line: 119, baseType: !848, size: 8, offset: 576)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pressure", scope: !2881, file: !2105, line: 123, baseType: !2323, size: 864, offset: 608)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "all_allocnos", scope: !2881, file: !2105, line: 127, baseType: !873, size: 64, offset: 1472)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "border_allocnos", scope: !2881, file: !2105, line: 130, baseType: !873, size: 64, offset: 1536)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "modified_regnos", scope: !2881, file: !2105, line: 134, baseType: !873, size: 64, offset: 1600)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "local_copies", scope: !2881, file: !2105, line: 137, baseType: !873, size: 64, offset: 1664)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "nrefs", scope: !2870, file: !2105, line: 266, baseType: !849, size: 32, offset: 320)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !2870, file: !2105, line: 268, baseType: !849, size: 32, offset: 352)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "cover_class", scope: !2870, file: !2105, line: 271, baseType: !397, size: 32, offset: 384)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "cover_class_cost", scope: !2870, file: !2105, line: 274, baseType: !849, size: 32, offset: 416)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "updated_cover_class_cost", scope: !2870, file: !2105, line: 274, baseType: !849, size: 32, offset: 448)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "memory_cost", scope: !2870, file: !2105, line: 282, baseType: !849, size: 32, offset: 480)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "updated_memory_cost", scope: !2870, file: !2105, line: 282, baseType: !849, size: 32, offset: 512)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "excess_pressure_points_num", scope: !2870, file: !2105, line: 288, baseType: !849, size: 32, offset: 544)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "allocno_copies", scope: !2870, file: !2105, line: 292, baseType: !2909, size: 64, offset: 576)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_copy_t", file: !2105, line: 64, baseType: !2910)
!2910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2911, size: 64)
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_allocno_copy", file: !2105, line: 506, size: 640, elements: !2912)
!2912 = !{!2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2922, !2923}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2911, file: !2105, line: 509, baseType: !849, size: 32)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2911, file: !2105, line: 512, baseType: !2868, size: 64, offset: 64)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "second", scope: !2911, file: !2105, line: 512, baseType: !2868, size: 64, offset: 128)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "freq", scope: !2911, file: !2105, line: 514, baseType: !849, size: 32, offset: 192)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "constraint_p", scope: !2911, file: !2105, line: 515, baseType: !848, size: 8, offset: 224)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2911, file: !2105, line: 521, baseType: !939, size: 64, offset: 256)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "prev_first_allocno_copy", scope: !2911, file: !2105, line: 524, baseType: !2909, size: 64, offset: 320)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "next_first_allocno_copy", scope: !2911, file: !2105, line: 524, baseType: !2909, size: 64, offset: 384)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "prev_second_allocno_copy", scope: !2911, file: !2105, line: 527, baseType: !2909, size: 64, offset: 448)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "next_second_allocno_copy", scope: !2911, file: !2105, line: 527, baseType: !2909, size: 64, offset: 512)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "loop_tree_node", scope: !2911, file: !2105, line: 529, baseType: !2879, size: 64, offset: 576)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !2870, file: !2105, line: 295, baseType: !2868, size: 64, offset: 640)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "cap_member", scope: !2870, file: !2105, line: 298, baseType: !2868, size: 64, offset: 704)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "first_coalesced_allocno", scope: !2870, file: !2105, line: 302, baseType: !2868, size: 64, offset: 768)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "next_coalesced_allocno", scope: !2870, file: !2105, line: 303, baseType: !2868, size: 64, offset: 832)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "live_ranges", scope: !2870, file: !2105, line: 308, baseType: !2929, size: 64, offset: 896)
!2929 = !DIDerivedType(tag: DW_TAG_typedef, name: "allocno_live_range_t", file: !2105, line: 62, baseType: !2930)
!2930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2931, size: 64)
!2931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ira_allocno_live_range", file: !2105, line: 199, size: 320, elements: !2932)
!2932 = !{!2933, !2934, !2935, !2936, !2937, !2938}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "allocno", scope: !2931, file: !2105, line: 202, baseType: !2868, size: 64)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2931, file: !2105, line: 204, baseType: !849, size: 32, offset: 64)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "finish", scope: !2931, file: !2105, line: 204, baseType: !849, size: 32, offset: 96)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2931, file: !2105, line: 207, baseType: !2929, size: 64, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "start_next", scope: !2931, file: !2105, line: 209, baseType: !2929, size: 64, offset: 192)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "finish_next", scope: !2931, file: !2105, line: 209, baseType: !2929, size: 64, offset: 256)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2870, file: !2105, line: 314, baseType: !849, size: 32, offset: 960)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2870, file: !2105, line: 314, baseType: !849, size: 32, offset: 992)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_allocno_array", scope: !2870, file: !2105, line: 319, baseType: !853, size: 64, offset: 1024)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_id", scope: !2870, file: !2105, line: 322, baseType: !849, size: 32, offset: 1088)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_allocno_array_size", scope: !2870, file: !2105, line: 324, baseType: !7, size: 32, offset: 1120)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_hard_regs", scope: !2870, file: !2105, line: 329, baseType: !863, size: 64, offset: 1152)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "total_conflict_hard_regs", scope: !2870, file: !2105, line: 329, baseType: !863, size: 64, offset: 1216)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_allocnos_num", scope: !2870, file: !2105, line: 332, baseType: !849, size: 32, offset: 1280)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "call_freq", scope: !2870, file: !2105, line: 335, baseType: !849, size: 32, offset: 1312)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "calls_crossed_num", scope: !2870, file: !2105, line: 337, baseType: !849, size: 32, offset: 1344)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "mem_optimized_dest_p", scope: !2870, file: !2105, line: 342, baseType: !7, size: 1, offset: 1376, flags: DIFlagBitField, extraData: i64 1376)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "somewhere_renamed_p", scope: !2870, file: !2105, line: 346, baseType: !7, size: 1, offset: 1377, flags: DIFlagBitField, extraData: i64 1376)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "child_renamed_p", scope: !2870, file: !2105, line: 349, baseType: !7, size: 1, offset: 1378, flags: DIFlagBitField, extraData: i64 1376)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "dont_reassign_p", scope: !2870, file: !2105, line: 354, baseType: !7, size: 1, offset: 1379, flags: DIFlagBitField, extraData: i64 1376)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "no_stack_reg_p", scope: !2870, file: !2105, line: 359, baseType: !7, size: 1, offset: 1380, flags: DIFlagBitField, extraData: i64 1376)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "total_no_stack_reg_p", scope: !2870, file: !2105, line: 359, baseType: !7, size: 1, offset: 1381, flags: DIFlagBitField, extraData: i64 1376)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "bad_spill_p", scope: !2870, file: !2105, line: 364, baseType: !7, size: 1, offset: 1382, flags: DIFlagBitField, extraData: i64 1376)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "in_graph_p", scope: !2870, file: !2105, line: 367, baseType: !7, size: 1, offset: 1383, flags: DIFlagBitField, extraData: i64 1376)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "assigned_p", scope: !2870, file: !2105, line: 370, baseType: !7, size: 1, offset: 1384, flags: DIFlagBitField, extraData: i64 1376)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "may_be_spilled_p", scope: !2870, file: !2105, line: 373, baseType: !7, size: 1, offset: 1385, flags: DIFlagBitField, extraData: i64 1376)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "splay_removed_p", scope: !2870, file: !2105, line: 376, baseType: !7, size: 1, offset: 1386, flags: DIFlagBitField, extraData: i64 1376)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_vec_p", scope: !2870, file: !2105, line: 381, baseType: !7, size: 1, offset: 1387, flags: DIFlagBitField, extraData: i64 1376)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "mem_optimized_dest", scope: !2870, file: !2105, line: 385, baseType: !2868, size: 64, offset: 1408)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "hard_reg_costs", scope: !2870, file: !2105, line: 400, baseType: !2139, size: 64, offset: 1472)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "updated_hard_reg_costs", scope: !2870, file: !2105, line: 400, baseType: !2139, size: 64, offset: 1536)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "conflict_hard_reg_costs", scope: !2870, file: !2105, line: 407, baseType: !2139, size: 64, offset: 1600)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "updated_conflict_hard_reg_costs", scope: !2870, file: !2105, line: 407, baseType: !2139, size: 64, offset: 1664)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "left_conflicts_size", scope: !2870, file: !2105, line: 411, baseType: !849, size: 32, offset: 1728)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "available_regs_num", scope: !2870, file: !2105, line: 414, baseType: !849, size: 32, offset: 1760)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "next_bucket_allocno", scope: !2870, file: !2105, line: 417, baseType: !2868, size: 64, offset: 1792)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bucket_allocno", scope: !2870, file: !2105, line: 418, baseType: !2868, size: 64, offset: 1856)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2870, file: !2105, line: 420, baseType: !849, size: 32, offset: 1920)
!2971 = !DILocalVariable(name: "bb", scope: !2861, file: !3, line: 625, type: !1411)
!2972 = !DILocation(line: 0, scope: !2861)
!2973 = !DILocation(line: 627, column: 3, scope: !2861)
!2974 = !DILocation(line: 628, column: 15, scope: !2861)
!2975 = !DILocation(line: 629, column: 8, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2861, file: !3, line: 629, column: 3)
!2977 = !DILocation(line: 629, column: 10, scope: !2976)
!2978 = !DILocation(line: 629, column: 44, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2976, file: !3, line: 629, column: 3)
!2980 = !DILocation(line: 629, column: 3, scope: !2976)
!2981 = !DILocation(line: 630, column: 14, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 630, column: 5)
!2983 = !DILocation(line: 630, column: 10, scope: !2982)
!2984 = !DILocation(line: 0, scope: !2976)
!2985 = !DILocation(line: 0, scope: !2982)
!2986 = !DILocation(line: 631, column: 5, scope: !2987)
!2987 = distinct !DILexicalBlock(scope: !2982, file: !3, line: 630, column: 5)
!2988 = !DILocation(line: 630, column: 5, scope: !2982)
!2989 = !DILocation(line: 634, column: 12, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 634, column: 6)
!2991 = distinct !DILexicalBlock(scope: !2987, file: !3, line: 633, column: 7)
!2992 = !DILocation(line: 634, column: 6, scope: !2991)
!2993 = !DILocation(line: 635, column: 4, scope: !2990)
!2994 = !DILocation(line: 636, column: 3, scope: !2991)
!2995 = !DILocation(line: 637, column: 28, scope: !2991)
!2996 = !DILocation(line: 637, column: 45, scope: !2991)
!2997 = !DILocation(line: 637, column: 2, scope: !2991)
!2998 = !DILocation(line: 638, column: 12, scope: !2999)
!2999 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 638, column: 6)
!3000 = !DILocation(line: 638, column: 40, scope: !2999)
!3001 = !DILocation(line: 638, column: 44, scope: !2999)
!3002 = !DILocation(line: 638, column: 6, scope: !2991)
!3003 = !DILocation(line: 639, column: 29, scope: !2999)
!3004 = !DILocation(line: 639, column: 4, scope: !2999)
!3005 = !DILocation(line: 641, column: 53, scope: !2999)
!3006 = !DILocation(line: 641, column: 59, scope: !2999)
!3007 = !DILocation(line: 641, column: 4, scope: !2999)
!3008 = !DILocation(line: 642, column: 6, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !2991, file: !3, line: 642, column: 6)
!3010 = !DILocation(line: 642, column: 29, scope: !3009)
!3011 = !DILocation(line: 642, column: 6, scope: !2991)
!3012 = !DILocation(line: 643, column: 4, scope: !3009)
!3013 = !DILocation(line: 645, column: 4, scope: !3009)
!3014 = !DILocation(line: 632, column: 7, scope: !2987)
!3015 = !DILocation(line: 630, column: 5, scope: !2987)
!3016 = distinct !{!3016, !2988, !3017}
!3017 = !DILocation(line: 646, column: 7, scope: !2982)
!3018 = !DILocation(line: 629, column: 58, scope: !2979)
!3019 = !DILocation(line: 629, column: 3, scope: !2979)
!3020 = distinct !{!3020, !2980, !3021}
!3021 = !DILocation(line: 646, column: 7, scope: !2976)
!3022 = !DILocation(line: 647, column: 3, scope: !2861)
!3023 = !DILocation(line: 648, column: 1, scope: !2861)
!3024 = distinct !DISubprogram(name: "ira_debug_disposition", scope: !3, file: !3, line: 653, type: !2144, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!3025 = !DILocation(line: 655, column: 26, scope: !3024)
!3026 = !DILocation(line: 655, column: 3, scope: !3024)
!3027 = !DILocation(line: 656, column: 1, scope: !3024)
!3028 = distinct !DISubprogram(name: "ira_debug_class_cover", scope: !3, file: !3, line: 1116, type: !2144, scopeLine: 1117, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!3029 = !DILocation(line: 1118, column: 22, scope: !3028)
!3030 = !DILocation(line: 1118, column: 3, scope: !3028)
!3031 = !DILocation(line: 1119, column: 1, scope: !3028)
!3032 = !DILocation(line: 0, scope: !2384)
!3033 = !DILocation(line: 1104, column: 3, scope: !2384)
!3034 = !DILocation(line: 1105, column: 8, scope: !3035)
!3035 = distinct !DILexicalBlock(scope: !2384, file: !3, line: 1105, column: 3)
!3036 = !DILocation(line: 0, scope: !3035)
!3037 = !DILocation(line: 1105, column: 19, scope: !3038)
!3038 = distinct !DILexicalBlock(scope: !3035, file: !3, line: 1105, column: 3)
!3039 = !DILocation(line: 1105, column: 17, scope: !3038)
!3040 = !DILocation(line: 1105, column: 3, scope: !3035)
!3041 = !DILocation(line: 1106, column: 40, scope: !3038)
!3042 = !DILocation(line: 1106, column: 24, scope: !3038)
!3043 = !DILocation(line: 1106, column: 5, scope: !3038)
!3044 = !DILocation(line: 1105, column: 46, scope: !3038)
!3045 = !DILocation(line: 1105, column: 3, scope: !3038)
!3046 = distinct !{!3046, !3040, !3047}
!3047 = !DILocation(line: 1106, column: 63, scope: !3035)
!3048 = !DILocation(line: 1107, column: 3, scope: !2384)
!3049 = !DILocation(line: 1108, column: 8, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !2384, file: !3, line: 1108, column: 3)
!3051 = !DILocation(line: 0, scope: !3050)
!3052 = !DILocation(line: 1108, column: 17, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !3050, file: !3, line: 1108, column: 3)
!3054 = !DILocation(line: 1108, column: 3, scope: !3050)
!3055 = !DILocation(line: 1109, column: 32, scope: !3053)
!3056 = !DILocation(line: 1110, column: 23, scope: !3053)
!3057 = !DILocation(line: 1110, column: 7, scope: !3053)
!3058 = !DILocation(line: 1109, column: 5, scope: !3053)
!3059 = !DILocation(line: 1108, column: 35, scope: !3053)
!3060 = !DILocation(line: 1108, column: 3, scope: !3053)
!3061 = distinct !{!3061, !3054, !3062}
!3062 = !DILocation(line: 1110, column: 46, scope: !3050)
!3063 = !DILocation(line: 1111, column: 1, scope: !2384)
!3064 = distinct !DISubprogram(name: "ira_init_register_move_cost", scope: !3, file: !3, line: 1227, type: !3065, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3067)
!3065 = !DISubroutineType(types: !3066)
!3066 = !{null, !5}
!3067 = !{!3068, !3069, !3070}
!3068 = !DILocalVariable(name: "mode", arg: 1, scope: !3064, file: !3, line: 1227, type: !5)
!3069 = !DILocalVariable(name: "cl1", scope: !3064, file: !3, line: 1229, type: !849)
!3070 = !DILocalVariable(name: "cl2", scope: !3064, file: !3, line: 1229, type: !849)
!3071 = !DILocation(line: 0, scope: !3064)
!3072 = !DILocation(line: 1234, column: 7, scope: !3073)
!3073 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 1234, column: 7)
!3074 = !DILocation(line: 1234, column: 23, scope: !3073)
!3075 = !DILocation(line: 1234, column: 7, scope: !3064)
!3076 = !DILocation(line: 1235, column: 5, scope: !3073)
!3077 = !DILocation(line: 1236, column: 34, scope: !3064)
!3078 = !DILocation(line: 1236, column: 3, scope: !3064)
!3079 = !DILocation(line: 1236, column: 32, scope: !3064)
!3080 = !DILocation(line: 1240, column: 22, scope: !3064)
!3081 = !DILocation(line: 1239, column: 3, scope: !3064)
!3082 = !DILocation(line: 1240, column: 5, scope: !3064)
!3083 = !DILocation(line: 1241, column: 39, scope: !3064)
!3084 = !DILocation(line: 1241, column: 3, scope: !3064)
!3085 = !DILocation(line: 1244, column: 22, scope: !3064)
!3086 = !DILocation(line: 1243, column: 3, scope: !3064)
!3087 = !DILocation(line: 1244, column: 5, scope: !3064)
!3088 = !DILocation(line: 1245, column: 40, scope: !3064)
!3089 = !DILocation(line: 1245, column: 3, scope: !3064)
!3090 = !DILocation(line: 1247, column: 8, scope: !3091)
!3091 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 1247, column: 3)
!3092 = !DILocation(line: 0, scope: !3091)
!3093 = !DILocation(line: 1247, column: 21, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 1247, column: 3)
!3095 = !DILocation(line: 1247, column: 3, scope: !3091)
!3096 = !DILocation(line: 1249, column: 7, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3098, file: !3, line: 1249, column: 7)
!3098 = distinct !DILexicalBlock(scope: !3094, file: !3, line: 1248, column: 5)
!3099 = !DILocation(line: 0, scope: !3097)
!3100 = !DILocation(line: 1249, column: 25, scope: !3101)
!3101 = distinct !DILexicalBlock(scope: !3097, file: !3, line: 1249, column: 7)
!3102 = !DILocation(line: 1251, column: 8, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 1251, column: 8)
!3104 = distinct !DILexicalBlock(scope: !3101, file: !3, line: 1250, column: 2)
!3105 = !DILocation(line: 1251, column: 8, scope: !3104)
!3106 = !DILocation(line: 1252, column: 6, scope: !3103)
!3107 = !DILocation(line: 1252, column: 43, scope: !3103)
!3108 = !DILocation(line: 1253, column: 8, scope: !3109)
!3109 = distinct !DILexicalBlock(scope: !3104, file: !3, line: 1253, column: 8)
!3110 = !DILocation(line: 1253, column: 8, scope: !3104)
!3111 = !DILocation(line: 1254, column: 6, scope: !3109)
!3112 = !DILocation(line: 1254, column: 44, scope: !3109)
!3113 = !DILocation(line: 1249, column: 45, scope: !3101)
!3114 = !DILocation(line: 1249, column: 7, scope: !3101)
!3115 = distinct !{!3115, !3096, !3116}
!3116 = !DILocation(line: 1255, column: 2, scope: !3097)
!3117 = !DILocation(line: 1247, column: 41, scope: !3094)
!3118 = !DILocation(line: 1247, column: 3, scope: !3094)
!3119 = distinct !{!3119, !3095, !3120}
!3120 = !DILocation(line: 1256, column: 5, scope: !3091)
!3121 = !DILocation(line: 1257, column: 1, scope: !3064)
!3122 = distinct !DISubprogram(name: "ira_init_once", scope: !3, file: !3, line: 1265, type: !2144, scopeLine: 1266, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3123)
!3123 = !{!3124}
!3124 = !DILocalVariable(name: "mode", scope: !3122, file: !3, line: 1267, type: !849)
!3125 = !DILocation(line: 0, scope: !3122)
!3126 = !DILocation(line: 1269, column: 8, scope: !3127)
!3127 = distinct !DILexicalBlock(scope: !3122, file: !3, line: 1269, column: 3)
!3128 = !DILocation(line: 0, scope: !3127)
!3129 = !DILocation(line: 1269, column: 23, scope: !3130)
!3130 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 1269, column: 3)
!3131 = !DILocation(line: 1269, column: 3, scope: !3127)
!3132 = !DILocation(line: 1271, column: 7, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3130, file: !3, line: 1270, column: 5)
!3134 = !DILocation(line: 1271, column: 36, scope: !3133)
!3135 = !DILocation(line: 1272, column: 7, scope: !3133)
!3136 = !DILocation(line: 1272, column: 34, scope: !3133)
!3137 = !DILocation(line: 1273, column: 7, scope: !3133)
!3138 = !DILocation(line: 1273, column: 35, scope: !3133)
!3139 = !DILocation(line: 1269, column: 47, scope: !3130)
!3140 = !DILocation(line: 1269, column: 3, scope: !3130)
!3141 = distinct !{!3141, !3131, !3142}
!3142 = !DILocation(line: 1274, column: 5, scope: !3127)
!3143 = !DILocation(line: 1275, column: 3, scope: !3122)
!3144 = !DILocation(line: 1276, column: 1, scope: !3122)
!3145 = distinct !DISubprogram(name: "ira_init", scope: !3, file: !3, line: 1300, type: !2144, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!3146 = !DILocation(line: 1302, column: 3, scope: !3145)
!3147 = !DILocation(line: 1303, column: 3, scope: !3145)
!3148 = !DILocation(line: 1304, column: 21, scope: !3145)
!3149 = !DILocation(line: 1304, column: 45, scope: !3145)
!3150 = !DILocation(line: 1304, column: 3, scope: !3145)
!3151 = !DILocation(line: 1305, column: 3, scope: !3145)
!3152 = !DILocation(line: 1306, column: 3, scope: !3145)
!3153 = !DILocation(line: 1307, column: 3, scope: !3145)
!3154 = !DILocation(line: 1308, column: 3, scope: !3145)
!3155 = !DILocation(line: 1309, column: 3, scope: !3145)
!3156 = !DILocation(line: 1310, column: 3, scope: !3145)
!3157 = !DILocation(line: 1311, column: 1, scope: !3145)
!3158 = distinct !DISubprogram(name: "free_register_move_costs", scope: !3, file: !3, line: 1281, type: !2144, scopeLine: 1282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3159)
!3159 = !{!3160}
!3160 = !DILocalVariable(name: "mode", scope: !3158, file: !3, line: 1283, type: !849)
!3161 = !DILocation(line: 0, scope: !3158)
!3162 = !DILocation(line: 1285, column: 8, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 1285, column: 3)
!3164 = !DILocation(line: 0, scope: !3163)
!3165 = !DILocation(line: 1285, column: 23, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1285, column: 3)
!3167 = !DILocation(line: 1285, column: 3, scope: !3163)
!3168 = !DILocation(line: 1287, column: 11, scope: !3169)
!3169 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 1287, column: 11)
!3170 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 1286, column: 5)
!3171 = !DILocation(line: 1287, column: 38, scope: !3169)
!3172 = !DILocation(line: 1287, column: 11, scope: !3170)
!3173 = !DILocation(line: 1288, column: 2, scope: !3169)
!3174 = !DILocation(line: 1289, column: 11, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3170, file: !3, line: 1289, column: 11)
!3176 = !DILocation(line: 1289, column: 39, scope: !3175)
!3177 = !DILocation(line: 1289, column: 11, scope: !3170)
!3178 = !DILocation(line: 1290, column: 2, scope: !3175)
!3179 = !DILocation(line: 1291, column: 7, scope: !3170)
!3180 = !DILocation(line: 1291, column: 36, scope: !3170)
!3181 = !DILocation(line: 1292, column: 34, scope: !3170)
!3182 = !DILocation(line: 1293, column: 35, scope: !3170)
!3183 = !DILocation(line: 1285, column: 47, scope: !3166)
!3184 = !DILocation(line: 1285, column: 3, scope: !3166)
!3185 = distinct !{!3185, !3167, !3186}
!3186 = !DILocation(line: 1294, column: 5, scope: !3163)
!3187 = !DILocation(line: 1295, column: 1, scope: !3158)
!3188 = distinct !DISubprogram(name: "setup_reg_mode_hard_regset", scope: !3, file: !3, line: 390, type: !2144, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3189)
!3189 = !{!3190, !3191, !3192}
!3190 = !DILocalVariable(name: "i", scope: !3188, file: !3, line: 392, type: !849)
!3191 = !DILocalVariable(name: "m", scope: !3188, file: !3, line: 392, type: !849)
!3192 = !DILocalVariable(name: "hard_regno", scope: !3188, file: !3, line: 392, type: !849)
!3193 = !DILocation(line: 0, scope: !3188)
!3194 = !DILocation(line: 394, column: 8, scope: !3195)
!3195 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 394, column: 3)
!3196 = !DILocation(line: 0, scope: !3195)
!3197 = !DILocation(line: 394, column: 17, scope: !3198)
!3198 = distinct !DILexicalBlock(scope: !3195, file: !3, line: 394, column: 3)
!3199 = !DILocation(line: 394, column: 3, scope: !3195)
!3200 = !DILocation(line: 395, column: 5, scope: !3201)
!3201 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 395, column: 5)
!3202 = !DILocation(line: 0, scope: !3201)
!3203 = !DILocation(line: 395, column: 37, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3201, file: !3, line: 395, column: 5)
!3205 = !DILocation(line: 397, column: 2, scope: !3206)
!3206 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 396, column: 7)
!3207 = !DILocation(line: 398, column: 11, scope: !3208)
!3208 = distinct !DILexicalBlock(scope: !3206, file: !3, line: 398, column: 2)
!3209 = !DILocation(line: 398, column: 7, scope: !3208)
!3210 = !DILocation(line: 0, scope: !3208)
!3211 = !DILocation(line: 398, column: 50, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3208, file: !3, line: 398, column: 2)
!3213 = !DILocation(line: 398, column: 2, scope: !3208)
!3214 = !DILocation(line: 399, column: 19, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 399, column: 8)
!3216 = !DILocation(line: 399, column: 23, scope: !3215)
!3217 = !DILocation(line: 399, column: 8, scope: !3212)
!3218 = !DILocation(line: 400, column: 6, scope: !3215)
!3219 = !DILocation(line: 398, column: 2, scope: !3212)
!3220 = distinct !{!3220, !3213, !3221}
!3221 = !DILocation(line: 400, column: 6, scope: !3208)
!3222 = !DILocation(line: 395, column: 72, scope: !3204)
!3223 = !DILocation(line: 395, column: 5, scope: !3204)
!3224 = distinct !{!3224, !3200, !3225}
!3225 = !DILocation(line: 402, column: 7, scope: !3201)
!3226 = !DILocation(line: 394, column: 39, scope: !3198)
!3227 = !DILocation(line: 394, column: 3, scope: !3198)
!3228 = distinct !{!3228, !3199, !3229}
!3229 = !DILocation(line: 402, column: 7, scope: !3195)
!3230 = !DILocation(line: 403, column: 1, scope: !3188)
!3231 = distinct !DISubprogram(name: "setup_alloc_regs", scope: !3, file: !3, line: 491, type: !3232, scopeLine: 492, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3234)
!3232 = !DISubroutineType(types: !3233)
!3233 = !{null, !848}
!3234 = !{!3235}
!3235 = !DILocalVariable(name: "use_hard_frame_p", arg: 1, scope: !3231, file: !3, line: 491, type: !848)
!3236 = !DILocation(line: 0, scope: !3231)
!3237 = !DILocation(line: 493, column: 3, scope: !3231)
!3238 = !DILocation(line: 494, column: 9, scope: !3239)
!3239 = distinct !DILexicalBlock(scope: !3231, file: !3, line: 494, column: 7)
!3240 = !DILocation(line: 494, column: 7, scope: !3231)
!3241 = !DILocation(line: 495, column: 5, scope: !3239)
!3242 = !DILocation(line: 496, column: 3, scope: !3231)
!3243 = !DILocation(line: 497, column: 3, scope: !3231)
!3244 = !DILocation(line: 498, column: 1, scope: !3231)
!3245 = distinct !DISubprogram(name: "setup_class_subset_and_memory_move_costs", scope: !3, file: !3, line: 504, type: !2144, scopeLine: 505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3246)
!3246 = !{!3247, !3248, !3249, !3250}
!3247 = !DILocalVariable(name: "cl", scope: !3245, file: !3, line: 506, type: !849)
!3248 = !DILocalVariable(name: "cl2", scope: !3245, file: !3, line: 506, type: !849)
!3249 = !DILocalVariable(name: "mode", scope: !3245, file: !3, line: 506, type: !849)
!3250 = !DILocalVariable(name: "temp_hard_regset2", scope: !3245, file: !3, line: 507, type: !863)
!3251 = !DILocation(line: 0, scope: !3245)
!3252 = !DILocation(line: 509, column: 8, scope: !3253)
!3253 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 509, column: 3)
!3254 = !DILocation(line: 0, scope: !3253)
!3255 = !DILocation(line: 509, column: 23, scope: !3256)
!3256 = distinct !DILexicalBlock(scope: !3253, file: !3, line: 509, column: 3)
!3257 = !DILocation(line: 509, column: 3, scope: !3253)
!3258 = !DILocation(line: 512, column: 3, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3245, file: !3, line: 512, column: 3)
!3260 = !DILocation(line: 511, column: 9, scope: !3256)
!3261 = !DILocation(line: 511, column: 48, scope: !3256)
!3262 = !DILocation(line: 510, column: 5, scope: !3256)
!3263 = !DILocation(line: 511, column: 7, scope: !3256)
!3264 = !DILocation(line: 509, column: 47, scope: !3256)
!3265 = !DILocation(line: 509, column: 3, scope: !3256)
!3266 = distinct !{!3266, !3257, !3267}
!3267 = !DILocation(line: 511, column: 50, scope: !3253)
!3268 = !DILocation(line: 0, scope: !3259)
!3269 = !DILocation(line: 512, column: 41, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 512, column: 3)
!3271 = !DILocation(line: 514, column: 11, scope: !3272)
!3272 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 513, column: 5)
!3273 = !DILocation(line: 515, column: 2, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 515, column: 2)
!3275 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 514, column: 11)
!3276 = !DILocation(line: 0, scope: !3274)
!3277 = !DILocation(line: 515, column: 22, scope: !3278)
!3278 = distinct !DILexicalBlock(scope: !3274, file: !3, line: 515, column: 2)
!3279 = !DILocation(line: 518, column: 8, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3278, file: !3, line: 516, column: 4)
!3281 = !DILocation(line: 517, column: 6, scope: !3280)
!3282 = !DILocation(line: 517, column: 40, scope: !3280)
!3283 = !DILocation(line: 521, column: 8, scope: !3280)
!3284 = !DILocation(line: 520, column: 6, scope: !3280)
!3285 = !DILocation(line: 520, column: 40, scope: !3280)
!3286 = !DILocation(line: 526, column: 10, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 526, column: 10)
!3288 = !DILocation(line: 527, column: 5, scope: !3287)
!3289 = !DILocation(line: 527, column: 3, scope: !3287)
!3290 = !DILocation(line: 526, column: 10, scope: !3280)
!3291 = !DILocation(line: 529, column: 3, scope: !3287)
!3292 = !DILocation(line: 528, column: 8, scope: !3287)
!3293 = !DILocation(line: 530, column: 10, scope: !3294)
!3294 = distinct !DILexicalBlock(scope: !3280, file: !3, line: 530, column: 10)
!3295 = !DILocation(line: 531, column: 3, scope: !3294)
!3296 = !DILocation(line: 530, column: 10, scope: !3280)
!3297 = !DILocation(line: 533, column: 3, scope: !3294)
!3298 = !DILocation(line: 532, column: 8, scope: !3294)
!3299 = !DILocation(line: 515, column: 46, scope: !3278)
!3300 = !DILocation(line: 515, column: 2, scope: !3278)
!3301 = distinct !{!3301, !3273, !3302}
!3302 = !DILocation(line: 534, column: 4, scope: !3274)
!3303 = !DILocation(line: 535, column: 12, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3272, file: !3, line: 535, column: 7)
!3305 = !DILocation(line: 0, scope: !3306)
!3306 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 536, column: 2)
!3307 = distinct !DILexicalBlock(scope: !3304, file: !3, line: 535, column: 7)
!3308 = !DILocation(line: 0, scope: !3304)
!3309 = !DILocation(line: 535, column: 47, scope: !3307)
!3310 = !DILocation(line: 535, column: 7, scope: !3304)
!3311 = !DILocation(line: 537, column: 4, scope: !3306)
!3312 = !DILocation(line: 538, column: 4, scope: !3306)
!3313 = !DILocation(line: 539, column: 4, scope: !3306)
!3314 = !DILocation(line: 540, column: 4, scope: !3306)
!3315 = !DILocation(line: 542, column: 8, scope: !3306)
!3316 = !DILocation(line: 541, column: 4, scope: !3306)
!3317 = !DILocation(line: 542, column: 6, scope: !3306)
!3318 = !DILocation(line: 535, column: 56, scope: !3307)
!3319 = !DILocation(line: 535, column: 7, scope: !3307)
!3320 = distinct !{!3320, !3310, !3321}
!3321 = !DILocation(line: 543, column: 2, scope: !3304)
!3322 = !DILocation(line: 512, column: 49, scope: !3270)
!3323 = !DILocation(line: 512, column: 3, scope: !3270)
!3324 = distinct !{!3324, !3258, !3325}
!3325 = !DILocation(line: 544, column: 5, scope: !3259)
!3326 = !DILocation(line: 545, column: 1, scope: !3245)
!3327 = distinct !DISubprogram(name: "find_reg_class_closure", scope: !3, file: !3, line: 1124, type: !2144, scopeLine: 1125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!3328 = !DILocation(line: 1126, column: 3, scope: !3327)
!3329 = !DILocation(line: 1127, column: 3, scope: !3327)
!3330 = !DILocation(line: 1128, column: 3, scope: !3327)
!3331 = !DILocation(line: 1129, column: 3, scope: !3327)
!3332 = !DILocation(line: 1130, column: 3, scope: !3327)
!3333 = !DILocation(line: 1131, column: 1, scope: !3327)
!3334 = distinct !DISubprogram(name: "setup_hard_regno_cover_class", scope: !3, file: !3, line: 1142, type: !2144, scopeLine: 1143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3335)
!3335 = !{!3336, !3337, !3338}
!3336 = !DILocalVariable(name: "i", scope: !3334, file: !3, line: 1144, type: !849)
!3337 = !DILocalVariable(name: "j", scope: !3334, file: !3, line: 1144, type: !849)
!3338 = !DILocalVariable(name: "cl", scope: !3334, file: !3, line: 1145, type: !397)
!3339 = !DILocation(line: 0, scope: !3334)
!3340 = !DILocation(line: 0, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3342, file: !3, line: 1150, column: 7)
!3342 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 1150, column: 7)
!3343 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 1148, column: 5)
!3344 = distinct !DILexicalBlock(scope: !3345, file: !3, line: 1147, column: 3)
!3345 = distinct !DILexicalBlock(scope: !3334, file: !3, line: 1147, column: 3)
!3346 = !DILocation(line: 1147, column: 8, scope: !3345)
!3347 = !DILocation(line: 0, scope: !3345)
!3348 = !DILocation(line: 1147, column: 17, scope: !3344)
!3349 = !DILocation(line: 1147, column: 3, scope: !3345)
!3350 = !DILocation(line: 1149, column: 7, scope: !3343)
!3351 = !DILocation(line: 1149, column: 37, scope: !3343)
!3352 = !DILocation(line: 1150, column: 12, scope: !3342)
!3353 = !DILocation(line: 0, scope: !3342)
!3354 = !DILocation(line: 1150, column: 21, scope: !3341)
!3355 = !DILocation(line: 1150, column: 7, scope: !3342)
!3356 = !DILocation(line: 1152, column: 9, scope: !3357)
!3357 = distinct !DILexicalBlock(scope: !3341, file: !3, line: 1151, column: 2)
!3358 = !DILocation(line: 1153, column: 8, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3357, file: !3, line: 1153, column: 8)
!3360 = !DILocation(line: 1153, column: 40, scope: !3359)
!3361 = !DILocation(line: 1153, column: 8, scope: !3357)
!3362 = !DILocation(line: 1155, column: 38, scope: !3363)
!3363 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 1154, column: 6)
!3364 = !DILocation(line: 1156, column: 8, scope: !3363)
!3365 = !DILocation(line: 1150, column: 50, scope: !3341)
!3366 = !DILocation(line: 1150, column: 7, scope: !3341)
!3367 = distinct !{!3367, !3355, !3368}
!3368 = !DILocation(line: 1158, column: 2, scope: !3342)
!3369 = !DILocation(line: 1147, column: 43, scope: !3344)
!3370 = !DILocation(line: 1147, column: 3, scope: !3344)
!3371 = distinct !{!3371, !3349, !3372}
!3372 = !DILocation(line: 1160, column: 5, scope: !3345)
!3373 = !DILocation(line: 1161, column: 1, scope: !3334)
!3374 = distinct !DISubprogram(name: "setup_reg_class_nregs", scope: !3, file: !3, line: 1175, type: !2144, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3375)
!3375 = !{!3376, !3377}
!3376 = !DILocalVariable(name: "cl", scope: !3374, file: !3, line: 1177, type: !849)
!3377 = !DILocalVariable(name: "m", scope: !3374, file: !3, line: 1177, type: !849)
!3378 = !DILocation(line: 1179, column: 17, scope: !3374)
!3379 = !DILocation(line: 0, scope: !3374)
!3380 = !DILocation(line: 1180, column: 8, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3374, file: !3, line: 1180, column: 3)
!3382 = !DILocation(line: 0, scope: !3381)
!3383 = !DILocation(line: 1180, column: 19, scope: !3384)
!3384 = distinct !DILexicalBlock(scope: !3381, file: !3, line: 1180, column: 3)
!3385 = !DILocation(line: 1180, column: 3, scope: !3381)
!3386 = !DILocation(line: 1181, column: 5, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3384, file: !3, line: 1181, column: 5)
!3388 = !DILocation(line: 0, scope: !3387)
!3389 = !DILocation(line: 1181, column: 19, scope: !3390)
!3390 = distinct !DILexicalBlock(scope: !3387, file: !3, line: 1181, column: 5)
!3391 = !DILocation(line: 1183, column: 31, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3390, file: !3, line: 1182, column: 7)
!3393 = !DILocation(line: 1183, column: 2, scope: !3392)
!3394 = !DILocation(line: 1183, column: 29, scope: !3392)
!3395 = !DILocation(line: 1185, column: 6, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3392, file: !3, line: 1185, column: 6)
!3397 = !DILocation(line: 1185, column: 20, scope: !3396)
!3398 = !DILocation(line: 1185, column: 6, scope: !3392)
!3399 = !DILocation(line: 1186, column: 18, scope: !3396)
!3400 = !DILocation(line: 1186, column: 4, scope: !3396)
!3401 = !DILocation(line: 1181, column: 40, scope: !3390)
!3402 = !DILocation(line: 1181, column: 5, scope: !3390)
!3403 = distinct !{!3403, !3386, !3404}
!3404 = !DILocation(line: 1187, column: 7, scope: !3387)
!3405 = !DILocation(line: 1180, column: 38, scope: !3384)
!3406 = !DILocation(line: 1180, column: 3, scope: !3384)
!3407 = distinct !{!3407, !3385, !3408}
!3408 = !DILocation(line: 1187, column: 7, scope: !3381)
!3409 = !DILocation(line: 1188, column: 1, scope: !3374)
!3410 = distinct !DISubprogram(name: "setup_prohibited_class_mode_regs", scope: !3, file: !3, line: 1199, type: !2144, scopeLine: 1200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3411)
!3411 = !{!3412, !3413, !3414, !3415, !3416}
!3412 = !DILocalVariable(name: "i", scope: !3410, file: !3, line: 1201, type: !849)
!3413 = !DILocalVariable(name: "j", scope: !3410, file: !3, line: 1201, type: !849)
!3414 = !DILocalVariable(name: "k", scope: !3410, file: !3, line: 1201, type: !849)
!3415 = !DILocalVariable(name: "hard_regno", scope: !3410, file: !3, line: 1201, type: !849)
!3416 = !DILocalVariable(name: "cl", scope: !3410, file: !3, line: 1202, type: !397)
!3417 = !DILocation(line: 0, scope: !3410)
!3418 = !DILocation(line: 1204, column: 8, scope: !3419)
!3419 = distinct !DILexicalBlock(scope: !3410, file: !3, line: 1204, column: 3)
!3420 = !DILocation(line: 0, scope: !3419)
!3421 = !DILocation(line: 1204, column: 19, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3419, file: !3, line: 1204, column: 3)
!3423 = !DILocation(line: 1204, column: 17, scope: !3422)
!3424 = !DILocation(line: 1204, column: 3, scope: !3419)
!3425 = !DILocation(line: 1206, column: 12, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3422, file: !3, line: 1205, column: 5)
!3427 = !DILocation(line: 0, scope: !3428)
!3428 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 1208, column: 2)
!3429 = distinct !DILexicalBlock(scope: !3430, file: !3, line: 1207, column: 7)
!3430 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 1207, column: 7)
!3431 = !DILocation(line: 0, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3428, file: !3, line: 1210, column: 4)
!3433 = !DILocation(line: 1207, column: 12, scope: !3430)
!3434 = !DILocation(line: 0, scope: !3430)
!3435 = !DILocation(line: 1207, column: 21, scope: !3429)
!3436 = !DILocation(line: 1207, column: 7, scope: !3430)
!3437 = !DILocation(line: 1209, column: 4, scope: !3428)
!3438 = !DILocation(line: 1210, column: 13, scope: !3432)
!3439 = !DILocation(line: 1210, column: 9, scope: !3432)
!3440 = !DILocation(line: 1210, column: 48, scope: !3441)
!3441 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 1210, column: 4)
!3442 = !DILocation(line: 1210, column: 4, scope: !3432)
!3443 = !DILocation(line: 1212, column: 21, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 1211, column: 6)
!3445 = !DILocation(line: 1213, column: 14, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 1213, column: 12)
!3447 = !DILocation(line: 1213, column: 12, scope: !3444)
!3448 = !DILocation(line: 1214, column: 3, scope: !3446)
!3449 = !DILocation(line: 1210, column: 4, scope: !3441)
!3450 = distinct !{!3450, !3442, !3451}
!3451 = !DILocation(line: 1216, column: 6, scope: !3432)
!3452 = !DILocation(line: 1207, column: 43, scope: !3429)
!3453 = !DILocation(line: 1207, column: 7, scope: !3429)
!3454 = distinct !{!3454, !3436, !3455}
!3455 = !DILocation(line: 1217, column: 2, scope: !3430)
!3456 = !DILocation(line: 1204, column: 46, scope: !3422)
!3457 = !DILocation(line: 1204, column: 3, scope: !3422)
!3458 = distinct !{!3458, !3424, !3459}
!3459 = !DILocation(line: 1218, column: 5, scope: !3419)
!3460 = !DILocation(line: 1219, column: 1, scope: !3410)
!3461 = distinct !DISubprogram(name: "ira_finish_once", scope: !3, file: !3, line: 1315, type: !2144, scopeLine: 1316, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!3462 = !DILocation(line: 1317, column: 3, scope: !3461)
!3463 = !DILocation(line: 1318, column: 3, scope: !3461)
!3464 = !DILocation(line: 1319, column: 1, scope: !3461)
!3465 = !DILocation(line: 1438, column: 16, scope: !2143)
!3466 = !DILocation(line: 0, scope: !2143)
!3467 = !DILocation(line: 1448, column: 10, scope: !2143)
!3468 = !DILocation(line: 1449, column: 8, scope: !2143)
!3469 = !DILocation(line: 1449, column: 12, scope: !2143)
!3470 = !DILocation(line: 1449, column: 18, scope: !2143)
!3471 = !DILocation(line: 1452, column: 12, scope: !2143)
!3472 = !DILocation(line: 1452, column: 8, scope: !2143)
!3473 = !DILocation(line: 1453, column: 17, scope: !2143)
!3474 = !DILocation(line: 1453, column: 11, scope: !2143)
!3475 = !DILocation(line: 1454, column: 8, scope: !2143)
!3476 = !DILocation(line: 1454, column: 17, scope: !2143)
!3477 = !DILocation(line: 1454, column: 11, scope: !2143)
!3478 = !DILocation(line: 1455, column: 8, scope: !2143)
!3479 = !DILocation(line: 1455, column: 19, scope: !2143)
!3480 = !DILocation(line: 1455, column: 11, scope: !2143)
!3481 = !DILocation(line: 1457, column: 26, scope: !2143)
!3482 = !DILocation(line: 1457, column: 24, scope: !2143)
!3483 = !DILocation(line: 1459, column: 3, scope: !2143)
!3484 = !DILocation(line: 1460, column: 3, scope: !2143)
!3485 = !DILocation(line: 1462, column: 3, scope: !2143)
!3486 = !DILocation(line: 0, scope: !2151)
!3487 = !DILocation(line: 1466, column: 8, scope: !2153)
!3488 = !DILocation(line: 0, scope: !2153)
!3489 = !DILocation(line: 1466, column: 17, scope: !2152)
!3490 = !DILocation(line: 1466, column: 3, scope: !2153)
!3491 = !DILocation(line: 1469, column: 15, scope: !2151)
!3492 = !DILocation(line: 1469, column: 45, scope: !2151)
!3493 = !DILocation(line: 1469, column: 66, scope: !2151)
!3494 = !DILocation(line: 1469, column: 7, scope: !2151)
!3495 = !DILocation(line: 1470, column: 5, scope: !2151)
!3496 = !DILocation(line: 1470, column: 27, scope: !2151)
!3497 = !DILocation(line: 1470, column: 51, scope: !2151)
!3498 = !DILocation(line: 1472, column: 13, scope: !3499)
!3499 = distinct !DILexicalBlock(scope: !2151, file: !3, line: 1472, column: 11)
!3500 = !DILocation(line: 1472, column: 11, scope: !2151)
!3501 = !DILocation(line: 1474, column: 6, scope: !3502)
!3502 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 1473, column: 2)
!3503 = !DILocation(line: 1476, column: 10, scope: !3502)
!3504 = !DILocation(line: 1477, column: 8, scope: !3505)
!3505 = distinct !DILexicalBlock(scope: !3502, file: !3, line: 1476, column: 10)
!3506 = !DILocation(line: 1479, column: 16, scope: !3499)
!3507 = !DILocation(line: 1481, column: 9, scope: !3508)
!3508 = distinct !DILexicalBlock(scope: !3499, file: !3, line: 1479, column: 16)
!3509 = !DILocation(line: 1480, column: 2, scope: !3508)
!3510 = !DILocation(line: 1483, column: 2, scope: !3508)
!3511 = !DILocation(line: 1466, column: 52, scope: !2152)
!3512 = !DILocation(line: 1466, column: 3, scope: !2152)
!3513 = distinct !{!3513, !3490, !3514}
!3514 = !DILocation(line: 1484, column: 5, scope: !2153)
!3515 = !DILocation(line: 1486, column: 9, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !2143, file: !3, line: 1486, column: 7)
!3517 = !DILocation(line: 1486, column: 7, scope: !2143)
!3518 = !DILocation(line: 1488, column: 7, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1487, column: 5)
!3520 = !DILocation(line: 1489, column: 11, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3519, file: !3, line: 1489, column: 11)
!3522 = !DILocation(line: 1489, column: 11, scope: !3519)
!3523 = !DILocation(line: 1490, column: 2, scope: !3521)
!3524 = !DILocation(line: 1492, column: 12, scope: !3525)
!3525 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1492, column: 12)
!3526 = !DILocation(line: 1492, column: 12, scope: !3516)
!3527 = !DILocation(line: 1494, column: 5, scope: !3525)
!3528 = !DILocation(line: 1493, column: 5, scope: !3525)
!3529 = !DILocation(line: 1496, column: 5, scope: !3525)
!3530 = !DILocation(line: 1511, column: 1, scope: !2143)
!3531 = distinct !DISubprogram(name: "compute_regs_asm_clobbered", scope: !3, file: !3, line: 1395, type: !3532, scopeLine: 1396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3534)
!3532 = !DISubroutineType(types: !3533)
!3533 = !{null, !851}
!3534 = !{!3535, !3536, !3537, !3541, !3605, !3610, !3611, !3614, !3615}
!3535 = !DILocalVariable(name: "regs_asm_clobbered", arg: 1, scope: !3531, file: !3, line: 1395, type: !851)
!3536 = !DILocalVariable(name: "bb", scope: !3531, file: !3, line: 1397, type: !1411)
!3537 = !DILocalVariable(name: "insn", scope: !3538, file: !3, line: 1403, type: !939)
!3538 = distinct !DILexicalBlock(scope: !3539, file: !3, line: 1402, column: 5)
!3539 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 1401, column: 3)
!3540 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 1401, column: 3)
!3541 = !DILocalVariable(name: "def_rec", scope: !3542, file: !3, line: 1406, type: !3545)
!3542 = distinct !DILexicalBlock(scope: !3543, file: !3, line: 1405, column: 2)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !3, line: 1404, column: 7)
!3544 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 1404, column: 7)
!3545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3546, size: 64)
!3546 = !DIDerivedType(tag: DW_TAG_typedef, name: "df_ref", file: !870, line: 429, baseType: !3547)
!3547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3548, size: 64)
!3548 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "df_ref_d", file: !870, line: 422, size: 704, elements: !3549)
!3549 = !{!3550, !3588, !3593, !3598}
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3548, file: !870, line: 424, baseType: !3551, size: 512)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_base_ref", file: !870, line: 356, size: 512, elements: !3552)
!3552 = !{!3553, !3554, !3555, !3556, !3557, !3563, !3583, !3584, !3585, !3586, !3587}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !3551, file: !870, line: 360, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3551, file: !870, line: 362, baseType: !7, size: 8, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3551, file: !870, line: 364, baseType: !849, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !3551, file: !870, line: 365, baseType: !939, size: 64, offset: 64)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !3551, file: !870, line: 366, baseType: !3558, size: 64, offset: 128)
!3558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3559, size: 64)
!3559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_link", file: !870, line: 449, size: 128, elements: !3560)
!3560 = !{!3561, !3562}
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3559, file: !870, line: 451, baseType: !3546, size: 64)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3559, file: !870, line: 452, baseType: !3558, size: 64, offset: 64)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "insn_info", scope: !3551, file: !870, line: 370, baseType: !3564, size: 64, offset: 192)
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3565, size: 64)
!3565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_insn_info", file: !870, line: 433, size: 384, elements: !3566)
!3566 = !{!3567, !3568, !3569, !3570, !3571, !3582}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3565, file: !870, line: 435, baseType: !939, size: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "defs", scope: !3565, file: !870, line: 436, baseType: !3545, size: 64, offset: 64)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "uses", scope: !3565, file: !870, line: 437, baseType: !3545, size: 64, offset: 128)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "eq_uses", scope: !3565, file: !870, line: 439, baseType: !3545, size: 64, offset: 192)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "mw_hardregs", scope: !3565, file: !870, line: 440, baseType: !3572, size: 64, offset: 256)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3573, size: 64)
!3573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3574, size: 64)
!3574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_mw_hardreg", file: !870, line: 339, size: 192, elements: !3575)
!3575 = !{!3576, !3577, !3578, !3579, !3580, !3581}
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "mw_reg", scope: !3574, file: !870, line: 341, baseType: !939, size: 64)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3574, file: !870, line: 344, baseType: !7, size: 16, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3574, file: !870, line: 346, baseType: !849, size: 16, offset: 80, flags: DIFlagBitField, extraData: i64 64)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "start_regno", scope: !3574, file: !870, line: 347, baseType: !7, size: 32, offset: 96)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "end_regno", scope: !3574, file: !870, line: 348, baseType: !7, size: 32, offset: 128)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "mw_order", scope: !3574, file: !870, line: 349, baseType: !7, size: 32, offset: 160)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "luid", scope: !3565, file: !870, line: 444, baseType: !849, size: 32, offset: 320)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "next_reg", scope: !3551, file: !870, line: 374, baseType: !3547, size: 64, offset: 256)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "prev_reg", scope: !3551, file: !870, line: 375, baseType: !3547, size: 64, offset: 320)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "regno", scope: !3551, file: !870, line: 376, baseType: !7, size: 32, offset: 384)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3551, file: !870, line: 379, baseType: !849, size: 32, offset: 416)
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "ref_order", scope: !3551, file: !870, line: 382, baseType: !7, size: 32, offset: 448)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "regular_ref", scope: !3548, file: !870, line: 425, baseType: !3589, size: 576)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_regular_ref", file: !870, line: 398, size: 576, elements: !3590)
!3590 = !{!3591, !3592}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3589, file: !870, line: 400, baseType: !3551, size: 512)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3589, file: !870, line: 405, baseType: !938, size: 64, offset: 512)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_ref", scope: !3548, file: !870, line: 426, baseType: !3594, size: 576)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_artificial_ref", file: !870, line: 388, size: 576, elements: !3595)
!3595 = !{!3596, !3597}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3594, file: !870, line: 390, baseType: !3551, size: 512)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3594, file: !870, line: 394, baseType: !1411, size: 64, offset: 512)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "extract_ref", scope: !3548, file: !870, line: 427, baseType: !3599, size: 704)
!3599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_extract_ref", file: !870, line: 413, size: 704, elements: !3600)
!3600 = !{!3601, !3602, !3603, !3604}
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3599, file: !870, line: 415, baseType: !3589, size: 576)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !3599, file: !870, line: 416, baseType: !849, size: 32, offset: 576)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3599, file: !870, line: 417, baseType: !849, size: 32, offset: 608)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3599, file: !870, line: 418, baseType: !5, size: 32, offset: 640)
!3605 = !DILocalVariable(name: "def", scope: !3606, file: !3, line: 1411, type: !3546)
!3606 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 1410, column: 8)
!3607 = distinct !DILexicalBlock(scope: !3608, file: !3, line: 1409, column: 6)
!3608 = distinct !DILexicalBlock(scope: !3609, file: !3, line: 1409, column: 6)
!3609 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 1408, column: 8)
!3610 = !DILocalVariable(name: "dregno", scope: !3606, file: !3, line: 1412, type: !7)
!3611 = !DILocalVariable(name: "i", scope: !3612, file: !3, line: 1415, type: !7)
!3612 = distinct !DILexicalBlock(scope: !3613, file: !3, line: 1414, column: 5)
!3613 = distinct !DILexicalBlock(scope: !3606, file: !3, line: 1413, column: 7)
!3614 = !DILocalVariable(name: "mode", scope: !3612, file: !3, line: 1416, type: !5)
!3615 = !DILocalVariable(name: "end", scope: !3612, file: !3, line: 1417, type: !7)
!3616 = !DILocation(line: 0, scope: !3531)
!3617 = !DILocation(line: 1399, column: 3, scope: !3531)
!3618 = !DILocation(line: 1401, column: 3, scope: !3540)
!3619 = !DILocation(line: 1401, column: 3, scope: !3539)
!3620 = !DILocation(line: 0, scope: !3540)
!3621 = !DILocation(line: 1404, column: 7, scope: !3544)
!3622 = !DILocation(line: 0, scope: !3544)
!3623 = !DILocation(line: 0, scope: !3538)
!3624 = !DILocation(line: 1404, column: 7, scope: !3543)
!3625 = !DILocation(line: 1408, column: 8, scope: !3609)
!3626 = !DILocation(line: 1408, column: 8, scope: !3542)
!3627 = !DILocation(line: 1409, column: 21, scope: !3608)
!3628 = !DILocation(line: 0, scope: !3542)
!3629 = !DILocation(line: 1409, column: 11, scope: !3608)
!3630 = !DILocation(line: 0, scope: !3608)
!3631 = !DILocation(line: 1409, column: 42, scope: !3607)
!3632 = !DILocation(line: 1409, column: 6, scope: !3608)
!3633 = !DILocation(line: 0, scope: !3606)
!3634 = !DILocation(line: 1412, column: 25, scope: !3606)
!3635 = !DILocation(line: 1413, column: 14, scope: !3613)
!3636 = !DILocation(line: 1413, column: 7, scope: !3606)
!3637 = !DILocation(line: 1416, column: 32, scope: !3612)
!3638 = !DILocation(line: 0, scope: !3612)
!3639 = !DILocation(line: 1418, column: 11, scope: !3612)
!3640 = !DILocation(line: 1418, column: 9, scope: !3612)
!3641 = !DILocation(line: 1418, column: 42, scope: !3612)
!3642 = !DILocation(line: 1420, column: 12, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 1420, column: 7)
!3644 = !DILocation(line: 0, scope: !3643)
!3645 = !DILocation(line: 1420, column: 26, scope: !3646)
!3646 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 1420, column: 7)
!3647 = !DILocation(line: 1420, column: 7, scope: !3643)
!3648 = !DILocation(line: 1421, column: 9, scope: !3646)
!3649 = !DILocation(line: 1421, column: 31, scope: !3646)
!3650 = !DILocation(line: 1420, column: 34, scope: !3646)
!3651 = !DILocation(line: 1420, column: 7, scope: !3646)
!3652 = distinct !{!3652, !3647, !3653}
!3653 = !DILocation(line: 1421, column: 33, scope: !3643)
!3654 = !DILocation(line: 1409, column: 59, scope: !3607)
!3655 = !DILocation(line: 1409, column: 6, scope: !3607)
!3656 = distinct !{!3656, !3632, !3657}
!3657 = !DILocation(line: 1423, column: 8, scope: !3608)
!3658 = distinct !{!3658, !3621, !3659}
!3659 = !DILocation(line: 1424, column: 2, scope: !3544)
!3660 = !DILocation(line: 0, scope: !3539)
!3661 = distinct !{!3661, !3618, !3662}
!3662 = !DILocation(line: 1425, column: 5, scope: !3540)
!3663 = !DILocation(line: 1426, column: 1, scope: !3531)
!3664 = distinct !DISubprogram(name: "mark_elimination", scope: !3, file: !3, line: 1888, type: !3665, scopeLine: 1889, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3667)
!3665 = !DISubroutineType(types: !3666)
!3666 = !{null, !849, !849}
!3667 = !{!3668, !3669, !3670, !3671}
!3668 = !DILocalVariable(name: "from", arg: 1, scope: !3664, file: !3, line: 1888, type: !849)
!3669 = !DILocalVariable(name: "to", arg: 2, scope: !3664, file: !3, line: 1888, type: !849)
!3670 = !DILocalVariable(name: "bb", scope: !3664, file: !3, line: 1890, type: !1411)
!3671 = !DILocalVariable(name: "r", scope: !3672, file: !3, line: 1895, type: !3675)
!3672 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1893, column: 5)
!3673 = distinct !DILexicalBlock(scope: !3674, file: !3, line: 1892, column: 3)
!3674 = distinct !DILexicalBlock(scope: !3664, file: !3, line: 1892, column: 3)
!3675 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !155, line: 37, baseType: !873)
!3676 = !DILocation(line: 0, scope: !3664)
!3677 = !DILocation(line: 1892, column: 3, scope: !3674)
!3678 = !DILocation(line: 1892, column: 3, scope: !3673)
!3679 = !DILocation(line: 0, scope: !3674)
!3680 = !DILocation(line: 1895, column: 18, scope: !3672)
!3681 = !DILocation(line: 0, scope: !3672)
!3682 = !DILocation(line: 1897, column: 11, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3672, file: !3, line: 1897, column: 11)
!3684 = !DILocation(line: 1897, column: 11, scope: !3672)
!3685 = !DILocation(line: 1899, column: 4, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3683, file: !3, line: 1898, column: 2)
!3687 = !DILocation(line: 1900, column: 4, scope: !3686)
!3688 = !DILocation(line: 1901, column: 2, scope: !3686)
!3689 = !DILocation(line: 0, scope: !3673)
!3690 = distinct !{!3690, !3677, !3691}
!3691 = !DILocation(line: 1902, column: 5, scope: !3674)
!3692 = !DILocation(line: 1903, column: 1, scope: !3664)
!3693 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !870, file: !870, line: 1052, type: !3694, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3696)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!868, !7}
!3696 = !{!3697}
!3697 = !DILocalVariable(name: "index", arg: 1, scope: !3693, file: !870, line: 1052, type: !7)
!3698 = !DILocation(line: 0, scope: !3693)
!3699 = !DILocation(line: 1054, column: 15, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3693, file: !870, line: 1054, column: 7)
!3701 = !DILocation(line: 1054, column: 22, scope: !3700)
!3702 = !DILocation(line: 1054, column: 13, scope: !3700)
!3703 = !DILocation(line: 1054, column: 7, scope: !3693)
!3704 = !DILocation(line: 1055, column: 44, scope: !3700)
!3705 = !DILocation(line: 1055, column: 37, scope: !3700)
!3706 = !DILocation(line: 1055, column: 5, scope: !3700)
!3707 = !DILocation(line: 0, scope: !3700)
!3708 = !DILocation(line: 1058, column: 1, scope: !3693)
!3709 = distinct !DISubprogram(name: "gate_ira", scope: !3, file: !3, line: 3383, type: !2172, scopeLine: 3384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!3710 = !DILocation(line: 3385, column: 3, scope: !3709)
!3711 = distinct !DISubprogram(name: "rest_of_handle_ira", scope: !3, file: !3, line: 3390, type: !2176, scopeLine: 3391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !2451)
!3712 = !DILocation(line: 3392, column: 8, scope: !3711)
!3713 = !DILocation(line: 3392, column: 3, scope: !3711)
!3714 = !DILocation(line: 3393, column: 3, scope: !3711)
!3715 = distinct !DISubprogram(name: "setup_class_hard_regs", scope: !3, file: !3, line: 428, type: !2144, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3716)
!3716 = !{!3717, !3718, !3719, !3720, !3721}
!3717 = !DILocalVariable(name: "cl", scope: !3715, file: !3, line: 430, type: !849)
!3718 = !DILocalVariable(name: "i", scope: !3715, file: !3, line: 430, type: !849)
!3719 = !DILocalVariable(name: "hard_regno", scope: !3715, file: !3, line: 430, type: !849)
!3720 = !DILocalVariable(name: "n", scope: !3715, file: !3, line: 430, type: !849)
!3721 = !DILocalVariable(name: "processed_hard_reg_set", scope: !3715, file: !3, line: 431, type: !863)
!3722 = !DILocation(line: 0, scope: !3715)
!3723 = !DILocation(line: 0, scope: !3724)
!3724 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 438, column: 5)
!3725 = distinct !DILexicalBlock(scope: !3726, file: !3, line: 437, column: 3)
!3726 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 437, column: 3)
!3727 = !DILocation(line: 0, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 454, column: 14)
!3729 = distinct !DILexicalBlock(scope: !3730, file: !3, line: 445, column: 2)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 444, column: 7)
!3731 = distinct !DILexicalBlock(scope: !3724, file: !3, line: 444, column: 7)
!3732 = !DILocation(line: 437, column: 8, scope: !3726)
!3733 = !DILocation(line: 437, column: 41, scope: !3725)
!3734 = !DILocation(line: 437, column: 3, scope: !3726)
!3735 = !DILocation(line: 439, column: 7, scope: !3724)
!3736 = !DILocation(line: 0, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3738, file: !3, line: 442, column: 7)
!3738 = distinct !DILexicalBlock(scope: !3724, file: !3, line: 442, column: 7)
!3739 = !DILocation(line: 442, column: 12, scope: !3738)
!3740 = !DILocation(line: 440, column: 7, scope: !3724)
!3741 = !DILocation(line: 444, column: 7, scope: !3731)
!3742 = !DILocation(line: 444, column: 14, scope: !3731)
!3743 = !DILocation(line: 441, column: 7, scope: !3724)
!3744 = !DILocation(line: 444, column: 28, scope: !3730)
!3745 = !DILocation(line: 447, column: 17, scope: !3729)
!3746 = !DILocation(line: 451, column: 8, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3729, file: !3, line: 451, column: 8)
!3748 = !DILocation(line: 451, column: 8, scope: !3729)
!3749 = !DILocation(line: 453, column: 4, scope: !3729)
!3750 = !DILocation(line: 454, column: 16, scope: !3728)
!3751 = !DILocation(line: 454, column: 14, scope: !3729)
!3752 = !DILocation(line: 455, column: 6, scope: !3728)
!3753 = !DILocation(line: 455, column: 47, scope: !3728)
!3754 = !DILocation(line: 458, column: 51, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 457, column: 6)
!3756 = !DILocation(line: 458, column: 8, scope: !3755)
!3757 = !DILocation(line: 458, column: 49, scope: !3755)
!3758 = !DILocation(line: 459, column: 39, scope: !3755)
!3759 = !DILocation(line: 459, column: 33, scope: !3755)
!3760 = !DILocation(line: 459, column: 8, scope: !3755)
!3761 = !DILocation(line: 459, column: 37, scope: !3755)
!3762 = !DILocation(line: 0, scope: !3731)
!3763 = !DILocation(line: 444, column: 54, scope: !3730)
!3764 = !DILocation(line: 444, column: 7, scope: !3730)
!3765 = distinct !{!3765, !3741, !3766}
!3766 = !DILocation(line: 461, column: 2, scope: !3731)
!3767 = !DILocation(line: 462, column: 7, scope: !3724)
!3768 = !DILocation(line: 462, column: 35, scope: !3724)
!3769 = !DILocation(line: 437, column: 49, scope: !3725)
!3770 = !DILocation(line: 437, column: 3, scope: !3725)
!3771 = distinct !{!3771, !3734, !3772}
!3772 = !DILocation(line: 463, column: 5, scope: !3726)
!3773 = !DILocation(line: 464, column: 1, scope: !3715)
!3774 = distinct !DISubprogram(name: "setup_available_class_regs", scope: !3, file: !3, line: 472, type: !2144, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3775)
!3775 = !{!3776, !3777}
!3776 = !DILocalVariable(name: "i", scope: !3774, file: !3, line: 474, type: !849)
!3777 = !DILocalVariable(name: "j", scope: !3774, file: !3, line: 474, type: !849)
!3778 = !DILocation(line: 476, column: 3, scope: !3774)
!3779 = !DILocation(line: 0, scope: !3774)
!3780 = !DILocation(line: 0, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 478, column: 5)
!3782 = distinct !DILexicalBlock(scope: !3783, file: !3, line: 477, column: 3)
!3783 = distinct !DILexicalBlock(scope: !3774, file: !3, line: 477, column: 3)
!3784 = !DILocation(line: 0, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 482, column: 6)
!3786 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 481, column: 7)
!3787 = distinct !DILexicalBlock(scope: !3781, file: !3, line: 481, column: 7)
!3788 = !DILocation(line: 477, column: 8, scope: !3783)
!3789 = !DILocation(line: 477, column: 17, scope: !3782)
!3790 = !DILocation(line: 477, column: 3, scope: !3783)
!3791 = !DILocation(line: 479, column: 7, scope: !3781)
!3792 = !DILocation(line: 480, column: 7, scope: !3781)
!3793 = !DILocation(line: 481, column: 12, scope: !3787)
!3794 = !DILocation(line: 0, scope: !3787)
!3795 = !DILocation(line: 481, column: 21, scope: !3786)
!3796 = !DILocation(line: 481, column: 7, scope: !3787)
!3797 = !DILocation(line: 482, column: 6, scope: !3785)
!3798 = !DILocation(line: 482, column: 6, scope: !3786)
!3799 = !DILocation(line: 483, column: 31, scope: !3785)
!3800 = !DILocation(line: 483, column: 4, scope: !3785)
!3801 = !DILocation(line: 481, column: 47, scope: !3786)
!3802 = !DILocation(line: 481, column: 7, scope: !3786)
!3803 = distinct !{!3803, !3796, !3804}
!3804 = !DILocation(line: 483, column: 31, scope: !3787)
!3805 = !DILocation(line: 477, column: 35, scope: !3782)
!3806 = !DILocation(line: 477, column: 3, scope: !3782)
!3807 = distinct !{!3807, !3790, !3808}
!3808 = !DILocation(line: 484, column: 5, scope: !3783)
!3809 = !DILocation(line: 485, column: 1, scope: !3774)
!3810 = distinct !DISubprogram(name: "hard_reg_set_subset_p", scope: !864, file: !864, line: 115, type: !3811, scopeLine: 116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3814)
!3811 = !DISubroutineType(types: !3812)
!3812 = !{!848, !3813, !3813}
!3813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !863)
!3814 = !{!3815, !3816}
!3815 = !DILocalVariable(name: "x", arg: 1, scope: !3810, file: !864, line: 115, type: !3813)
!3816 = !DILocalVariable(name: "y", arg: 2, scope: !3810, file: !864, line: 115, type: !3813)
!3817 = !DILocation(line: 0, scope: !3810)
!3818 = !DILocation(line: 117, column: 15, scope: !3810)
!3819 = !DILocation(line: 117, column: 13, scope: !3810)
!3820 = !DILocation(line: 117, column: 19, scope: !3810)
!3821 = !DILocation(line: 117, column: 10, scope: !3810)
!3822 = !DILocation(line: 117, column: 3, scope: !3810)
!3823 = distinct !DISubprogram(name: "setup_reg_subclasses", scope: !3, file: !3, line: 667, type: !2144, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !3824)
!3824 = !{!3825, !3826, !3827, !3828}
!3825 = !DILocalVariable(name: "i", scope: !3823, file: !3, line: 669, type: !849)
!3826 = !DILocalVariable(name: "j", scope: !3823, file: !3, line: 669, type: !849)
!3827 = !DILocalVariable(name: "temp_hard_regset2", scope: !3823, file: !3, line: 670, type: !863)
!3828 = !DILocalVariable(name: "p", scope: !3829, file: !3, line: 688, type: !3836)
!3829 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 687, column: 4)
!3830 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 686, column: 6)
!3831 = distinct !DILexicalBlock(scope: !3832, file: !3, line: 685, column: 7)
!3832 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 685, column: 7)
!3833 = distinct !DILexicalBlock(scope: !3834, file: !3, line: 677, column: 5)
!3834 = distinct !DILexicalBlock(scope: !3835, file: !3, line: 676, column: 3)
!3835 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 676, column: 3)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!3837 = !DILocation(line: 0, scope: !3823)
!3838 = !DILocation(line: 672, column: 8, scope: !3839)
!3839 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 672, column: 3)
!3840 = !DILocation(line: 0, scope: !3839)
!3841 = !DILocation(line: 672, column: 17, scope: !3842)
!3842 = distinct !DILexicalBlock(scope: !3839, file: !3, line: 672, column: 3)
!3843 = !DILocation(line: 672, column: 3, scope: !3839)
!3844 = !DILocation(line: 673, column: 5, scope: !3845)
!3845 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 673, column: 5)
!3846 = !DILocation(line: 676, column: 3, scope: !3835)
!3847 = !DILocation(line: 0, scope: !3845)
!3848 = !DILocation(line: 673, column: 19, scope: !3849)
!3849 = distinct !DILexicalBlock(scope: !3845, file: !3, line: 673, column: 5)
!3850 = !DILocation(line: 674, column: 7, scope: !3849)
!3851 = !DILocation(line: 674, column: 40, scope: !3849)
!3852 = !DILocation(line: 673, column: 37, scope: !3849)
!3853 = !DILocation(line: 673, column: 5, scope: !3849)
!3854 = distinct !{!3854, !3844, !3855}
!3855 = !DILocation(line: 674, column: 42, scope: !3845)
!3856 = !DILocation(line: 672, column: 35, scope: !3842)
!3857 = !DILocation(line: 672, column: 3, scope: !3842)
!3858 = distinct !{!3858, !3843, !3859}
!3859 = !DILocation(line: 674, column: 42, scope: !3839)
!3860 = !DILocation(line: 0, scope: !3835)
!3861 = !DILocation(line: 676, column: 17, scope: !3834)
!3862 = !DILocation(line: 678, column: 13, scope: !3863)
!3863 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 678, column: 11)
!3864 = !DILocation(line: 678, column: 11, scope: !3833)
!3865 = !DILocation(line: 681, column: 7, scope: !3833)
!3866 = !DILocation(line: 682, column: 7, scope: !3833)
!3867 = !DILocation(line: 683, column: 11, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3833, file: !3, line: 683, column: 11)
!3869 = !DILocation(line: 683, column: 11, scope: !3833)
!3870 = !DILocation(line: 685, column: 7, scope: !3832)
!3871 = !DILocation(line: 0, scope: !3832)
!3872 = !DILocation(line: 685, column: 21, scope: !3831)
!3873 = !DILocation(line: 686, column: 8, scope: !3830)
!3874 = !DILocation(line: 686, column: 6, scope: !3831)
!3875 = !DILocation(line: 690, column: 6, scope: !3829)
!3876 = !DILocation(line: 691, column: 6, scope: !3829)
!3877 = !DILocation(line: 692, column: 35, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3829, file: !3, line: 692, column: 10)
!3879 = !DILocation(line: 692, column: 12, scope: !3878)
!3880 = !DILocation(line: 692, column: 10, scope: !3829)
!3881 = !DILocation(line: 695, column: 11, scope: !3829)
!3882 = !DILocation(line: 0, scope: !3829)
!3883 = !DILocation(line: 696, column: 6, scope: !3829)
!3884 = !DILocation(line: 696, column: 13, scope: !3829)
!3885 = !DILocation(line: 696, column: 16, scope: !3829)
!3886 = !DILocation(line: 696, column: 37, scope: !3829)
!3887 = distinct !{!3887, !3883, !3886}
!3888 = !DILocation(line: 697, column: 9, scope: !3829)
!3889 = !DILocation(line: 698, column: 4, scope: !3830)
!3890 = !DILocation(line: 685, column: 39, scope: !3831)
!3891 = !DILocation(line: 685, column: 7, scope: !3831)
!3892 = distinct !{!3892, !3870, !3893}
!3893 = !DILocation(line: 698, column: 4, scope: !3832)
!3894 = !DILocation(line: 676, column: 35, scope: !3834)
!3895 = !DILocation(line: 676, column: 3, scope: !3834)
!3896 = distinct !{!3896, !3846, !3897}
!3897 = !DILocation(line: 699, column: 5, scope: !3835)
!3898 = !DILocation(line: 700, column: 1, scope: !3823)
!3899 = !DILocation(line: 737, column: 15, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 737, column: 7)
!3901 = !DILocation(line: 737, column: 33, scope: !3900)
!3902 = !DILocation(line: 737, column: 7, scope: !2398)
!3903 = !DILocation(line: 740, column: 21, scope: !3900)
!3904 = !DILocation(line: 0, scope: !2398)
!3905 = !DILocation(line: 0, scope: !3900)
!3906 = !DILocation(line: 741, column: 21, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 741, column: 7)
!3908 = !DILocation(line: 741, column: 7, scope: !2398)
!3909 = !DILocation(line: 745, column: 7, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3911, file: !3, line: 745, column: 7)
!3911 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 744, column: 5)
!3912 = !DILocation(line: 0, scope: !3910)
!3913 = !DILocation(line: 745, column: 25, scope: !3914)
!3914 = distinct !DILexicalBlock(scope: !3910, file: !3, line: 745, column: 7)
!3915 = !DILocation(line: 745, column: 43, scope: !3914)
!3916 = !DILocation(line: 0, scope: !3911)
!3917 = !DILocation(line: 746, column: 13, scope: !3914)
!3918 = !DILocation(line: 745, column: 64, scope: !3914)
!3919 = !DILocation(line: 745, column: 7, scope: !3914)
!3920 = distinct !{!3920, !3909, !3921}
!3921 = !DILocation(line: 746, column: 32, scope: !3910)
!3922 = !DILocation(line: 747, column: 18, scope: !3911)
!3923 = !DILocation(line: 750, column: 7, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 750, column: 7)
!3925 = !DILocation(line: 750, column: 26, scope: !3924)
!3926 = !DILocation(line: 750, column: 7, scope: !2398)
!3927 = !DILocation(line: 753, column: 7, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3929, file: !3, line: 753, column: 7)
!3929 = distinct !DILexicalBlock(scope: !3924, file: !3, line: 751, column: 5)
!3930 = !DILocation(line: 752, column: 9, scope: !3929)
!3931 = !DILocation(line: 753, column: 21, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3928, file: !3, line: 753, column: 7)
!3933 = !DILocation(line: 755, column: 10, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 755, column: 8)
!3935 = distinct !DILexicalBlock(scope: !3932, file: !3, line: 754, column: 2)
!3936 = !DILocation(line: 755, column: 8, scope: !3935)
!3937 = !DILocation(line: 758, column: 4, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 758, column: 4)
!3939 = !DILocation(line: 0, scope: !3938)
!3940 = !DILocation(line: 758, column: 18, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3938, file: !3, line: 758, column: 4)
!3942 = !DILocation(line: 759, column: 16, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 759, column: 10)
!3944 = !DILocation(line: 759, column: 67, scope: !3943)
!3945 = !DILocation(line: 759, column: 10, scope: !3941)
!3946 = !DILocation(line: 758, column: 40, scope: !3941)
!3947 = !DILocation(line: 758, column: 4, scope: !3941)
!3948 = distinct !{!3948, !3937, !3949}
!3949 = !DILocation(line: 760, column: 8, scope: !3938)
!3950 = !DILocation(line: 761, column: 8, scope: !3935)
!3951 = !DILocation(line: 763, column: 17, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3953, file: !3, line: 762, column: 6)
!3953 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 761, column: 8)
!3954 = !DILocation(line: 763, column: 8, scope: !3952)
!3955 = !DILocation(line: 763, column: 21, scope: !3952)
!3956 = !DILocation(line: 764, column: 8, scope: !3952)
!3957 = !DILocation(line: 767, column: 4, scope: !3935)
!3958 = !DILocation(line: 768, column: 4, scope: !3935)
!3959 = !DILocation(line: 769, column: 9, scope: !3960)
!3960 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 769, column: 4)
!3961 = !DILocation(line: 0, scope: !3960)
!3962 = !DILocation(line: 769, column: 18, scope: !3963)
!3963 = distinct !DILexicalBlock(scope: !3960, file: !3, line: 769, column: 4)
!3964 = !DILocation(line: 769, column: 4, scope: !3960)
!3965 = !DILocation(line: 771, column: 14, scope: !3966)
!3966 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 771, column: 12)
!3967 = distinct !DILexicalBlock(scope: !3963, file: !3, line: 770, column: 6)
!3968 = !DILocation(line: 771, column: 12, scope: !3967)
!3969 = !DILocation(line: 773, column: 8, scope: !3967)
!3970 = !DILocation(line: 774, column: 8, scope: !3967)
!3971 = !DILocation(line: 776, column: 34, scope: !3972)
!3972 = distinct !DILexicalBlock(scope: !3967, file: !3, line: 776, column: 12)
!3973 = !DILocation(line: 776, column: 12, scope: !3972)
!3974 = !DILocation(line: 776, column: 12, scope: !3967)
!3975 = !DILocation(line: 769, column: 38, scope: !3963)
!3976 = !DILocation(line: 769, column: 4, scope: !3963)
!3977 = distinct !{!3977, !3964, !3978}
!3978 = !DILocation(line: 779, column: 6, scope: !3960)
!3979 = !DILocation(line: 780, column: 10, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3935, file: !3, line: 780, column: 8)
!3981 = !DILocation(line: 780, column: 8, scope: !3935)
!3982 = !DILocation(line: 781, column: 15, scope: !3980)
!3983 = !DILocation(line: 781, column: 6, scope: !3980)
!3984 = !DILocation(line: 781, column: 19, scope: !3980)
!3985 = !DILocation(line: 0, scope: !3929)
!3986 = !DILocation(line: 753, column: 42, scope: !3932)
!3987 = !DILocation(line: 753, column: 7, scope: !3932)
!3988 = distinct !{!3988, !3927, !3989}
!3989 = !DILocation(line: 782, column: 2, scope: !3928)
!3990 = !DILocation(line: 783, column: 7, scope: !3929)
!3991 = !DILocation(line: 783, column: 18, scope: !3929)
!3992 = !DILocation(line: 784, column: 5, scope: !3929)
!3993 = !DILocation(line: 786, column: 28, scope: !2398)
!3994 = !DILocation(line: 787, column: 8, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 787, column: 3)
!3996 = !DILocation(line: 0, scope: !3995)
!3997 = !DILocation(line: 787, column: 21, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3995, file: !3, line: 787, column: 3)
!3999 = !DILocation(line: 787, column: 33, scope: !3998)
!4000 = !DILocation(line: 787, column: 3, scope: !3995)
!4001 = !DILocation(line: 789, column: 7, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 789, column: 7)
!4003 = distinct !DILexicalBlock(scope: !3998, file: !3, line: 788, column: 5)
!4004 = !DILocation(line: 0, scope: !4002)
!4005 = !DILocation(line: 789, column: 21, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !4002, file: !3, line: 789, column: 7)
!4007 = !DILocation(line: 790, column: 6, scope: !4008)
!4008 = distinct !DILexicalBlock(scope: !4006, file: !3, line: 790, column: 6)
!4009 = !DILocation(line: 790, column: 25, scope: !4008)
!4010 = !DILocation(line: 791, column: 6, scope: !4008)
!4011 = !DILocation(line: 791, column: 55, scope: !4008)
!4012 = !DILocation(line: 791, column: 9, scope: !4008)
!4013 = !DILocation(line: 790, column: 6, scope: !4006)
!4014 = !DILocation(line: 792, column: 4, scope: !4008)
!4015 = !DILocation(line: 789, column: 27, scope: !4006)
!4016 = !DILocation(line: 789, column: 7, scope: !4006)
!4017 = distinct !{!4017, !4001, !4018}
!4018 = !DILocation(line: 792, column: 4, scope: !4002)
!4019 = !DILocation(line: 793, column: 7, scope: !4003)
!4020 = !DILocation(line: 794, column: 7, scope: !4003)
!4021 = !DILocation(line: 795, column: 13, scope: !4022)
!4022 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 795, column: 11)
!4023 = !DILocation(line: 795, column: 11, scope: !4003)
!4024 = !DILocation(line: 796, column: 46, scope: !4022)
!4025 = !DILocation(line: 796, column: 2, scope: !4022)
!4026 = !DILocation(line: 796, column: 50, scope: !4022)
!4027 = !DILocation(line: 787, column: 54, scope: !3998)
!4028 = !DILocation(line: 787, column: 3, scope: !3998)
!4029 = distinct !{!4029, !4000, !4030}
!4030 = !DILocation(line: 797, column: 5, scope: !3995)
!4031 = !DILocation(line: 798, column: 29, scope: !2398)
!4032 = !DILocation(line: 799, column: 8, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 799, column: 3)
!4034 = !DILocation(line: 0, scope: !4033)
!4035 = !DILocation(line: 799, column: 19, scope: !4036)
!4036 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 799, column: 3)
!4037 = !DILocation(line: 799, column: 3, scope: !4033)
!4038 = !DILocation(line: 0, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4040, file: !3, line: 826, column: 3)
!4040 = distinct !DILexicalBlock(scope: !2398, file: !3, line: 826, column: 3)
!4041 = !DILocation(line: 826, column: 3, scope: !4040)
!4042 = !DILocation(line: 801, column: 7, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 800, column: 5)
!4044 = !DILocation(line: 802, column: 7, scope: !4043)
!4045 = !DILocation(line: 803, column: 13, scope: !4046)
!4046 = distinct !DILexicalBlock(scope: !4043, file: !3, line: 803, column: 11)
!4047 = !DILocation(line: 803, column: 11, scope: !4043)
!4048 = !DILocation(line: 806, column: 4, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 806, column: 4)
!4050 = distinct !DILexicalBlock(scope: !4046, file: !3, line: 804, column: 2)
!4051 = !DILocation(line: 0, scope: !4050)
!4052 = !DILocation(line: 806, column: 20, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 806, column: 4)
!4054 = !DILocation(line: 806, column: 18, scope: !4053)
!4055 = !DILocation(line: 808, column: 8, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 807, column: 6)
!4057 = !DILocation(line: 809, column: 8, scope: !4056)
!4058 = !DILocation(line: 810, column: 8, scope: !4056)
!4059 = !DILocation(line: 812, column: 8, scope: !4056)
!4060 = !DILocation(line: 813, column: 32, scope: !4061)
!4061 = distinct !DILexicalBlock(scope: !4056, file: !3, line: 813, column: 12)
!4062 = !DILocation(line: 814, column: 5, scope: !4061)
!4063 = !DILocation(line: 814, column: 8, scope: !4061)
!4064 = !DILocation(line: 813, column: 12, scope: !4056)
!4065 = !DILocation(line: 821, column: 22, scope: !4066)
!4066 = distinct !DILexicalBlock(scope: !4050, file: !3, line: 821, column: 8)
!4067 = !DILocation(line: 817, column: 40, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4061, file: !3, line: 817, column: 17)
!4069 = !DILocation(line: 817, column: 17, scope: !4068)
!4070 = !DILocation(line: 817, column: 17, scope: !4061)
!4071 = !DILocation(line: 806, column: 47, scope: !4053)
!4072 = !DILocation(line: 806, column: 4, scope: !4053)
!4073 = distinct !{!4073, !4048, !4074}
!4074 = !DILocation(line: 820, column: 6, scope: !4049)
!4075 = !DILocation(line: 821, column: 8, scope: !4066)
!4076 = !DILocation(line: 821, column: 19, scope: !4066)
!4077 = !DILocation(line: 821, column: 14, scope: !4066)
!4078 = !DILocation(line: 822, column: 53, scope: !4066)
!4079 = !DILocation(line: 822, column: 6, scope: !4066)
!4080 = !DILocation(line: 823, column: 8, scope: !4066)
!4081 = !DILocation(line: 799, column: 38, scope: !4036)
!4082 = !DILocation(line: 799, column: 3, scope: !4036)
!4083 = distinct !{!4083, !4037, !4084}
!4084 = !DILocation(line: 825, column: 5, scope: !4033)
!4085 = !DILocation(line: 0, scope: !4040)
!4086 = !DILocation(line: 826, column: 17, scope: !4039)
!4087 = !DILocation(line: 828, column: 9, scope: !4039)
!4088 = !DILocation(line: 827, column: 52, scope: !4039)
!4089 = !DILocation(line: 827, column: 5, scope: !4039)
!4090 = !DILocation(line: 828, column: 7, scope: !4039)
!4091 = !DILocation(line: 826, column: 46, scope: !4039)
!4092 = !DILocation(line: 826, column: 3, scope: !4039)
!4093 = distinct !{!4093, !4041, !4094}
!4094 = !DILocation(line: 828, column: 30, scope: !4040)
!4095 = !DILocation(line: 829, column: 1, scope: !2398)
!4096 = distinct !DISubprogram(name: "setup_class_translate", scope: !3, file: !3, line: 838, type: !2144, scopeLine: 839, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4097)
!4097 = !{!4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107}
!4098 = !DILocalVariable(name: "cl", scope: !4096, file: !3, line: 840, type: !849)
!4099 = !DILocalVariable(name: "mode", scope: !4096, file: !3, line: 840, type: !849)
!4100 = !DILocalVariable(name: "cover_class", scope: !4096, file: !3, line: 841, type: !397)
!4101 = !DILocalVariable(name: "best_class", scope: !4096, file: !3, line: 841, type: !397)
!4102 = !DILocalVariable(name: "cl_ptr", scope: !4096, file: !3, line: 841, type: !3836)
!4103 = !DILocalVariable(name: "i", scope: !4096, file: !3, line: 842, type: !849)
!4104 = !DILocalVariable(name: "cost", scope: !4096, file: !3, line: 842, type: !849)
!4105 = !DILocalVariable(name: "min_cost", scope: !4096, file: !3, line: 842, type: !849)
!4106 = !DILocalVariable(name: "best_cost", scope: !4096, file: !3, line: 842, type: !849)
!4107 = !DILocalVariable(name: "temp_hard_regset2", scope: !4108, file: !3, line: 854, type: !863)
!4108 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 853, column: 4)
!4109 = distinct !DILexicalBlock(scope: !4110, file: !3, line: 852, column: 2)
!4110 = distinct !DILexicalBlock(scope: !4111, file: !3, line: 852, column: 2)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !3, line: 849, column: 7)
!4112 = distinct !DILexicalBlock(scope: !4113, file: !3, line: 848, column: 5)
!4113 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 848, column: 5)
!4114 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 847, column: 7)
!4115 = !DILocation(line: 0, scope: !4096)
!4116 = !DILocation(line: 844, column: 8, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 844, column: 3)
!4118 = !DILocation(line: 0, scope: !4117)
!4119 = !DILocation(line: 844, column: 19, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4117, file: !3, line: 844, column: 3)
!4121 = !DILocation(line: 844, column: 3, scope: !4117)
!4122 = !DILocation(line: 845, column: 5, scope: !4120)
!4123 = !DILocation(line: 845, column: 29, scope: !4120)
!4124 = !DILocation(line: 844, column: 38, scope: !4120)
!4125 = !DILocation(line: 844, column: 3, scope: !4120)
!4126 = distinct !{!4126, !4121, !4127}
!4127 = !DILocation(line: 845, column: 31, scope: !4117)
!4128 = !DILocation(line: 847, column: 7, scope: !4114)
!4129 = !DILocation(line: 847, column: 26, scope: !4114)
!4130 = !DILocation(line: 847, column: 7, scope: !4096)
!4131 = !DILocation(line: 848, column: 5, scope: !4113)
!4132 = !DILocation(line: 0, scope: !4113)
!4133 = !DILocation(line: 848, column: 21, scope: !4112)
!4134 = !DILocation(line: 850, column: 2, scope: !4111)
!4135 = !DILocation(line: 851, column: 2, scope: !4111)
!4136 = !DILocation(line: 0, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4108, file: !3, line: 860, column: 10)
!4138 = !DILocation(line: 852, column: 7, scope: !4110)
!4139 = !DILocation(line: 0, scope: !4110)
!4140 = !DILocation(line: 852, column: 18, scope: !4109)
!4141 = !DILocation(line: 852, column: 16, scope: !4109)
!4142 = !DILocation(line: 852, column: 2, scope: !4110)
!4143 = !DILocation(line: 856, column: 20, scope: !4108)
!4144 = !DILocation(line: 857, column: 6, scope: !4108)
!4145 = !DILocation(line: 0, scope: !4108)
!4146 = !DILocation(line: 859, column: 6, scope: !4108)
!4147 = !DILocation(line: 860, column: 32, scope: !4137)
!4148 = !DILocation(line: 860, column: 10, scope: !4137)
!4149 = !DILocation(line: 860, column: 10, scope: !4108)
!4150 = !DILocation(line: 861, column: 32, scope: !4137)
!4151 = !DILocation(line: 861, column: 8, scope: !4137)
!4152 = !DILocation(line: 852, column: 45, scope: !4109)
!4153 = !DILocation(line: 852, column: 2, scope: !4109)
!4154 = distinct !{!4154, !4142, !4155}
!4155 = !DILocation(line: 862, column: 4, scope: !4110)
!4156 = !DILocation(line: 848, column: 42, scope: !4112)
!4157 = !DILocation(line: 848, column: 5, scope: !4112)
!4158 = distinct !{!4158, !4131, !4159}
!4159 = !DILocation(line: 863, column: 7, scope: !4113)
!4160 = !DILocation(line: 0, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4162, file: !3, line: 867, column: 11)
!4162 = distinct !DILexicalBlock(scope: !4163, file: !3, line: 865, column: 5)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !3, line: 864, column: 3)
!4164 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 864, column: 3)
!4165 = !DILocation(line: 864, column: 8, scope: !4164)
!4166 = !DILocation(line: 0, scope: !4163)
!4167 = !DILocation(line: 0, scope: !4164)
!4168 = !DILocation(line: 864, column: 17, scope: !4163)
!4169 = !DILocation(line: 864, column: 3, scope: !4164)
!4170 = !DILocation(line: 866, column: 21, scope: !4162)
!4171 = !DILocation(line: 884, column: 7, scope: !4162)
!4172 = !DILocation(line: 884, column: 40, scope: !4162)
!4173 = !DILocation(line: 864, column: 46, scope: !4163)
!4174 = !DILocation(line: 864, column: 3, scope: !4163)
!4175 = distinct !{!4175, !4169, !4176}
!4176 = !DILocation(line: 885, column: 5, scope: !4164)
!4177 = !DILocation(line: 889, column: 3, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4096, file: !3, line: 889, column: 3)
!4179 = !DILocation(line: 868, column: 17, scope: !4180)
!4180 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 868, column: 2)
!4181 = !DILocation(line: 868, column: 7, scope: !4180)
!4182 = !DILocation(line: 0, scope: !4180)
!4183 = !DILocation(line: 869, column: 13, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4180, file: !3, line: 868, column: 2)
!4185 = !DILocation(line: 869, column: 22, scope: !4184)
!4186 = !DILocation(line: 868, column: 2, scope: !4180)
!4187 = !DILocation(line: 872, column: 10, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4189, file: !3, line: 872, column: 10)
!4189 = distinct !DILexicalBlock(scope: !4184, file: !3, line: 871, column: 4)
!4190 = !DILocation(line: 872, column: 34, scope: !4188)
!4191 = !DILocation(line: 872, column: 10, scope: !4189)
!4192 = !DILocation(line: 873, column: 32, scope: !4188)
!4193 = !DILocation(line: 873, column: 8, scope: !4188)
!4194 = !DILocation(line: 870, column: 13, scope: !4184)
!4195 = !DILocation(line: 868, column: 2, scope: !4184)
!4196 = distinct !{!4196, !4186, !4197}
!4197 = !DILocation(line: 883, column: 4, scope: !4180)
!4198 = !DILocation(line: 889, column: 19, scope: !4199)
!4199 = distinct !DILexicalBlock(scope: !4178, file: !3, line: 889, column: 3)
!4200 = !DILocation(line: 891, column: 14, scope: !4201)
!4201 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 891, column: 11)
!4202 = distinct !DILexicalBlock(scope: !4199, file: !3, line: 890, column: 5)
!4203 = !DILocation(line: 891, column: 25, scope: !4201)
!4204 = !DILocation(line: 891, column: 28, scope: !4201)
!4205 = !DILocation(line: 891, column: 52, scope: !4201)
!4206 = !DILocation(line: 891, column: 11, scope: !4202)
!4207 = !DILocation(line: 0, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4209, file: !3, line: 896, column: 2)
!4209 = distinct !DILexicalBlock(scope: !4210, file: !3, line: 895, column: 7)
!4210 = distinct !DILexicalBlock(scope: !4202, file: !3, line: 895, column: 7)
!4211 = !DILocation(line: 895, column: 7, scope: !4210)
!4212 = !DILocation(line: 895, column: 23, scope: !4209)
!4213 = !DILocation(line: 894, column: 17, scope: !4202)
!4214 = !DILocation(line: 893, column: 18, scope: !4202)
!4215 = !DILocation(line: 895, column: 21, scope: !4209)
!4216 = !DILocation(line: 897, column: 18, scope: !4208)
!4217 = !DILocation(line: 898, column: 4, scope: !4208)
!4218 = !DILocation(line: 900, column: 4, scope: !4208)
!4219 = !DILocation(line: 901, column: 4, scope: !4208)
!4220 = !DILocation(line: 902, column: 10, scope: !4221)
!4221 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 902, column: 8)
!4222 = !DILocation(line: 902, column: 8, scope: !4208)
!4223 = !DILocation(line: 905, column: 8, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 905, column: 8)
!4225 = distinct !DILexicalBlock(scope: !4221, file: !3, line: 903, column: 6)
!4226 = !DILocation(line: 0, scope: !4225)
!4227 = !DILocation(line: 905, column: 28, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 905, column: 8)
!4229 = !DILocation(line: 907, column: 13, scope: !4230)
!4230 = distinct !DILexicalBlock(scope: !4228, file: !3, line: 906, column: 3)
!4231 = !DILocation(line: 908, column: 8, scope: !4230)
!4232 = !DILocation(line: 908, column: 6, scope: !4230)
!4233 = !DILocation(line: 909, column: 18, scope: !4234)
!4234 = distinct !DILexicalBlock(scope: !4230, file: !3, line: 909, column: 9)
!4235 = !DILocation(line: 909, column: 9, scope: !4230)
!4236 = !DILocation(line: 905, column: 52, scope: !4228)
!4237 = !DILocation(line: 905, column: 8, scope: !4228)
!4238 = distinct !{!4238, !4223, !4239}
!4239 = !DILocation(line: 911, column: 3, scope: !4224)
!4240 = !DILocation(line: 912, column: 23, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !4225, file: !3, line: 912, column: 12)
!4242 = !DILocation(line: 912, column: 47, scope: !4241)
!4243 = !DILocation(line: 912, column: 34, scope: !4241)
!4244 = !DILocation(line: 0, scope: !4202)
!4245 = !DILocation(line: 895, column: 50, scope: !4209)
!4246 = !DILocation(line: 895, column: 7, scope: !4209)
!4247 = distinct !{!4247, !4211, !4248}
!4248 = !DILocation(line: 918, column: 2, scope: !4210)
!4249 = !DILocation(line: 919, column: 31, scope: !4202)
!4250 = !DILocation(line: 920, column: 5, scope: !4202)
!4251 = !DILocation(line: 889, column: 38, scope: !4199)
!4252 = !DILocation(line: 889, column: 3, scope: !4199)
!4253 = distinct !{!4253, !4177, !4254}
!4254 = !DILocation(line: 920, column: 5, scope: !4178)
!4255 = !DILocation(line: 921, column: 1, scope: !4096)
!4256 = distinct !DISubprogram(name: "reorder_important_classes", scope: !3, file: !3, line: 946, type: !2144, scopeLine: 947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4257)
!4257 = !{!4258}
!4258 = !DILocalVariable(name: "i", scope: !4256, file: !3, line: 948, type: !849)
!4259 = !DILocation(line: 0, scope: !4256)
!4260 = !DILocation(line: 950, column: 8, scope: !4261)
!4261 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 950, column: 3)
!4262 = !DILocation(line: 0, scope: !4261)
!4263 = !DILocation(line: 950, column: 17, scope: !4264)
!4264 = distinct !DILexicalBlock(scope: !4261, file: !3, line: 950, column: 3)
!4265 = !DILocation(line: 950, column: 3, scope: !4261)
!4266 = !DILocation(line: 0, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4268, file: !3, line: 952, column: 3)
!4268 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 952, column: 3)
!4269 = !DILocation(line: 952, column: 3, scope: !4268)
!4270 = !DILocation(line: 951, column: 5, scope: !4264)
!4271 = !DILocation(line: 951, column: 26, scope: !4264)
!4272 = !DILocation(line: 950, column: 35, scope: !4264)
!4273 = !DILocation(line: 950, column: 3, scope: !4264)
!4274 = distinct !{!4274, !4265, !4275}
!4275 = !DILocation(line: 951, column: 29, scope: !4261)
!4276 = !DILocation(line: 0, scope: !4268)
!4277 = !DILocation(line: 952, column: 17, scope: !4267)
!4278 = !DILocation(line: 953, column: 23, scope: !4267)
!4279 = !DILocation(line: 953, column: 5, scope: !4267)
!4280 = !DILocation(line: 953, column: 47, scope: !4267)
!4281 = !DILocation(line: 952, column: 46, scope: !4267)
!4282 = !DILocation(line: 952, column: 3, scope: !4267)
!4283 = distinct !{!4283, !4269, !4284}
!4284 = !DILocation(line: 953, column: 49, scope: !4268)
!4285 = !DILocation(line: 955, column: 38, scope: !4256)
!4286 = !DILocation(line: 955, column: 3, scope: !4256)
!4287 = !DILocation(line: 0, scope: !4288)
!4288 = distinct !DILexicalBlock(scope: !4289, file: !3, line: 961, column: 3)
!4289 = distinct !DILexicalBlock(scope: !4256, file: !3, line: 961, column: 3)
!4290 = !DILocation(line: 961, column: 8, scope: !4289)
!4291 = !DILocation(line: 0, scope: !4289)
!4292 = !DILocation(line: 961, column: 17, scope: !4288)
!4293 = !DILocation(line: 961, column: 3, scope: !4289)
!4294 = !DILocation(line: 962, column: 30, scope: !4288)
!4295 = !DILocation(line: 962, column: 5, scope: !4288)
!4296 = !DILocation(line: 962, column: 56, scope: !4288)
!4297 = !DILocation(line: 961, column: 47, scope: !4288)
!4298 = !DILocation(line: 961, column: 3, scope: !4288)
!4299 = distinct !{!4299, !4293, !4300}
!4300 = !DILocation(line: 962, column: 58, scope: !4289)
!4301 = !DILocation(line: 963, column: 1, scope: !4256)
!4302 = distinct !DISubprogram(name: "setup_reg_class_relations", scope: !3, file: !3, line: 995, type: !2144, scopeLine: 996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4303)
!4303 = !{!4304, !4305, !4306, !4307, !4308, !4309, !4310, !4311, !4313}
!4304 = !DILocalVariable(name: "i", scope: !4302, file: !3, line: 997, type: !849)
!4305 = !DILocalVariable(name: "cl1", scope: !4302, file: !3, line: 997, type: !849)
!4306 = !DILocalVariable(name: "cl2", scope: !4302, file: !3, line: 997, type: !849)
!4307 = !DILocalVariable(name: "cl3", scope: !4302, file: !3, line: 997, type: !849)
!4308 = !DILocalVariable(name: "intersection_set", scope: !4302, file: !3, line: 998, type: !863)
!4309 = !DILocalVariable(name: "union_set", scope: !4302, file: !3, line: 998, type: !863)
!4310 = !DILocalVariable(name: "temp_set2", scope: !4302, file: !3, line: 998, type: !863)
!4311 = !DILocalVariable(name: "important_class_p", scope: !4302, file: !3, line: 999, type: !4312)
!4312 = !DICompositeType(tag: DW_TAG_array_type, baseType: !848, size: 216, elements: !861)
!4313 = !DILocalVariable(name: "p", scope: !4314, file: !3, line: 1035, type: !3836)
!4314 = distinct !DILexicalBlock(scope: !4315, file: !3, line: 1034, column: 6)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 1032, column: 8)
!4316 = distinct !DILexicalBlock(scope: !4317, file: !3, line: 1008, column: 2)
!4317 = distinct !DILexicalBlock(scope: !4318, file: !3, line: 1007, column: 7)
!4318 = distinct !DILexicalBlock(scope: !4319, file: !3, line: 1007, column: 7)
!4319 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 1005, column: 5)
!4320 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 1004, column: 3)
!4321 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 1004, column: 3)
!4322 = !DILocation(line: 999, column: 3, scope: !4302)
!4323 = !DILocation(line: 999, column: 8, scope: !4302)
!4324 = !DILocation(line: 1001, column: 3, scope: !4302)
!4325 = !DILocation(line: 0, scope: !4302)
!4326 = !DILocation(line: 0, scope: !4327)
!4327 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 1002, column: 3)
!4328 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 1002, column: 3)
!4329 = !DILocation(line: 1002, column: 8, scope: !4328)
!4330 = !DILocation(line: 0, scope: !4328)
!4331 = !DILocation(line: 1002, column: 17, scope: !4327)
!4332 = !DILocation(line: 1002, column: 3, scope: !4328)
!4333 = !DILocation(line: 1004, column: 3, scope: !4321)
!4334 = !DILocation(line: 1003, column: 23, scope: !4327)
!4335 = !DILocation(line: 1003, column: 5, scope: !4327)
!4336 = !DILocation(line: 1003, column: 49, scope: !4327)
!4337 = !DILocation(line: 1002, column: 47, scope: !4327)
!4338 = !DILocation(line: 1002, column: 3, scope: !4327)
!4339 = distinct !{!4339, !4332, !4340}
!4340 = !DILocation(line: 1003, column: 51, scope: !4328)
!4341 = !DILocation(line: 0, scope: !4321)
!4342 = !DILocation(line: 1004, column: 21, scope: !4320)
!4343 = !DILocation(line: 1006, column: 7, scope: !4319)
!4344 = !DILocation(line: 1006, column: 43, scope: !4319)
!4345 = !DILocation(line: 0, scope: !4316)
!4346 = !DILocation(line: 0, scope: !4315)
!4347 = !DILocation(line: 1007, column: 12, scope: !4318)
!4348 = !DILocation(line: 0, scope: !4318)
!4349 = !DILocation(line: 1007, column: 25, scope: !4317)
!4350 = !DILocation(line: 1007, column: 7, scope: !4318)
!4351 = !DILocation(line: 1009, column: 4, scope: !4316)
!4352 = !DILocation(line: 1009, column: 42, scope: !4316)
!4353 = !DILocation(line: 1010, column: 4, scope: !4316)
!4354 = !DILocation(line: 1010, column: 38, scope: !4316)
!4355 = !DILocation(line: 1011, column: 4, scope: !4316)
!4356 = !DILocation(line: 1012, column: 4, scope: !4316)
!4357 = !DILocation(line: 1013, column: 4, scope: !4316)
!4358 = !DILocation(line: 1014, column: 4, scope: !4316)
!4359 = !DILocation(line: 1015, column: 8, scope: !4360)
!4360 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 1015, column: 8)
!4361 = !DILocation(line: 1016, column: 8, scope: !4360)
!4362 = !DILocation(line: 1016, column: 11, scope: !4360)
!4363 = !DILocation(line: 1015, column: 8, scope: !4316)
!4364 = !DILocation(line: 1018, column: 8, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4366, file: !3, line: 1018, column: 8)
!4366 = distinct !DILexicalBlock(scope: !4360, file: !3, line: 1017, column: 6)
!4367 = !DILocation(line: 0, scope: !4365)
!4368 = !DILocation(line: 1020, column: 11, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4370, file: !3, line: 1019, column: 3)
!4370 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 1018, column: 8)
!4371 = !DILocation(line: 1021, column: 13, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 1021, column: 9)
!4373 = !DILocation(line: 1021, column: 9, scope: !4369)
!4374 = !DILocation(line: 1023, column: 29, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4369, file: !3, line: 1023, column: 9)
!4376 = !DILocation(line: 1023, column: 9, scope: !4375)
!4377 = !DILocation(line: 1023, column: 9, scope: !4369)
!4378 = !DILocation(line: 1025, column: 41, scope: !4375)
!4379 = !DILocation(line: 1025, column: 7, scope: !4375)
!4380 = !DILocation(line: 1018, column: 22, scope: !4370)
!4381 = !DILocation(line: 1018, column: 8, scope: !4370)
!4382 = distinct !{!4382, !4364, !4383}
!4383 = !DILocation(line: 1026, column: 3, scope: !4365)
!4384 = !DILocation(line: 1027, column: 40, scope: !4366)
!4385 = !DILocation(line: 1027, column: 8, scope: !4366)
!4386 = !DILocation(line: 1027, column: 38, scope: !4366)
!4387 = !DILocation(line: 1028, column: 8, scope: !4366)
!4388 = !DILocation(line: 1031, column: 34, scope: !4316)
!4389 = !DILocation(line: 1031, column: 8, scope: !4316)
!4390 = !DILocation(line: 1031, column: 6, scope: !4316)
!4391 = !DILocation(line: 1032, column: 8, scope: !4315)
!4392 = !DILocation(line: 1032, column: 31, scope: !4315)
!4393 = !DILocation(line: 1032, column: 34, scope: !4315)
!4394 = !DILocation(line: 1033, column: 8, scope: !4315)
!4395 = !DILocation(line: 1033, column: 34, scope: !4315)
!4396 = !DILocation(line: 1033, column: 11, scope: !4315)
!4397 = !DILocation(line: 1032, column: 8, scope: !4316)
!4398 = !DILocation(line: 0, scope: !4314)
!4399 = !DILocation(line: 1038, column: 8, scope: !4314)
!4400 = !DILocation(line: 1038, column: 15, scope: !4314)
!4401 = !DILocation(line: 1038, column: 18, scope: !4314)
!4402 = distinct !{!4402, !4399, !4403}
!4403 = !DILocation(line: 1039, column: 4, scope: !4314)
!4404 = !DILocation(line: 1040, column: 13, scope: !4314)
!4405 = !DILocation(line: 1041, column: 11, scope: !4314)
!4406 = !DILocation(line: 1042, column: 6, scope: !4314)
!4407 = !DILocation(line: 1043, column: 4, scope: !4316)
!4408 = !DILocation(line: 1043, column: 34, scope: !4316)
!4409 = !DILocation(line: 1044, column: 4, scope: !4316)
!4410 = !DILocation(line: 1045, column: 4, scope: !4316)
!4411 = !DILocation(line: 1046, column: 4, scope: !4316)
!4412 = !DILocation(line: 1048, column: 4, scope: !4316)
!4413 = !DILocation(line: 1049, column: 4, scope: !4316)
!4414 = !DILocation(line: 1050, column: 9, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4316, file: !3, line: 1050, column: 4)
!4416 = !DILocation(line: 0, scope: !4415)
!4417 = !DILocation(line: 1050, column: 20, scope: !4418)
!4418 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1050, column: 4)
!4419 = !DILocation(line: 1050, column: 18, scope: !4418)
!4420 = !DILocation(line: 1050, column: 4, scope: !4415)
!4421 = !DILocation(line: 1052, column: 14, scope: !4422)
!4422 = distinct !DILexicalBlock(scope: !4418, file: !3, line: 1051, column: 6)
!4423 = !DILocation(line: 1053, column: 8, scope: !4422)
!4424 = !DILocation(line: 1054, column: 8, scope: !4422)
!4425 = !DILocation(line: 1055, column: 12, scope: !4426)
!4426 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 1055, column: 12)
!4427 = !DILocation(line: 1055, column: 12, scope: !4422)
!4428 = !DILocation(line: 1057, column: 5, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4426, file: !3, line: 1056, column: 3)
!4430 = !DILocation(line: 1061, column: 5, scope: !4429)
!4431 = !DILocation(line: 1062, column: 35, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 1062, column: 10)
!4433 = !DILocation(line: 1062, column: 12, scope: !4432)
!4434 = !DILocation(line: 1065, column: 9, scope: !4432)
!4435 = !DILocation(line: 1065, column: 35, scope: !4432)
!4436 = !DILocation(line: 1065, column: 13, scope: !4432)
!4437 = !DILocation(line: 1066, column: 6, scope: !4432)
!4438 = !DILocation(line: 1067, column: 10, scope: !4432)
!4439 = !DILocation(line: 1069, column: 17, scope: !4432)
!4440 = !DILocation(line: 1068, column: 10, scope: !4432)
!4441 = !DILocation(line: 1066, column: 9, scope: !4432)
!4442 = !DILocation(line: 1062, column: 10, scope: !4429)
!4443 = !DILocation(line: 1070, column: 41, scope: !4432)
!4444 = !DILocation(line: 1070, column: 7, scope: !4432)
!4445 = !DILocation(line: 1072, column: 35, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4422, file: !3, line: 1072, column: 12)
!4447 = !DILocation(line: 1072, column: 12, scope: !4446)
!4448 = !DILocation(line: 1072, column: 12, scope: !4422)
!4449 = !DILocation(line: 1074, column: 5, scope: !4450)
!4450 = distinct !DILexicalBlock(scope: !4446, file: !3, line: 1073, column: 3)
!4451 = !DILocation(line: 1077, column: 5, scope: !4450)
!4452 = !DILocation(line: 1078, column: 40, scope: !4453)
!4453 = distinct !DILexicalBlock(scope: !4450, file: !3, line: 1078, column: 10)
!4454 = !DILocation(line: 1079, column: 9, scope: !4453)
!4455 = !DILocation(line: 1079, column: 47, scope: !4453)
!4456 = !DILocation(line: 1079, column: 13, scope: !4453)
!4457 = !DILocation(line: 1081, column: 6, scope: !4453)
!4458 = !DILocation(line: 1082, column: 13, scope: !4453)
!4459 = !DILocation(line: 1081, column: 12, scope: !4453)
!4460 = !DILocation(line: 1086, column: 10, scope: !4453)
!4461 = !DILocation(line: 1087, column: 14, scope: !4453)
!4462 = !DILocation(line: 1089, column: 14, scope: !4453)
!4463 = !DILocation(line: 1088, column: 7, scope: !4453)
!4464 = !DILocation(line: 1086, column: 13, scope: !4453)
!4465 = !DILocation(line: 1078, column: 10, scope: !4450)
!4466 = !DILocation(line: 1090, column: 37, scope: !4453)
!4467 = !DILocation(line: 1090, column: 7, scope: !4453)
!4468 = !DILocation(line: 1050, column: 48, scope: !4418)
!4469 = !DILocation(line: 1050, column: 4, scope: !4418)
!4470 = distinct !{!4470, !4420, !4471}
!4471 = !DILocation(line: 1092, column: 6, scope: !4415)
!4472 = !DILocation(line: 1007, column: 45, scope: !4317)
!4473 = !DILocation(line: 1007, column: 7, scope: !4317)
!4474 = distinct !{!4474, !4350, !4475}
!4475 = !DILocation(line: 1093, column: 2, scope: !4318)
!4476 = !DILocation(line: 1004, column: 41, scope: !4320)
!4477 = !DILocation(line: 1004, column: 3, scope: !4320)
!4478 = distinct !{!4478, !4333, !4479}
!4479 = !DILocation(line: 1094, column: 5, scope: !4321)
!4480 = !DILocation(line: 1095, column: 1, scope: !4302)
!4481 = distinct !DISubprogram(name: "hard_reg_set_empty_p", scope: !864, file: !864, line: 133, type: !4482, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4484)
!4482 = !DISubroutineType(types: !4483)
!4483 = !{!848, !3813}
!4484 = !{!4485}
!4485 = !DILocalVariable(name: "x", arg: 1, scope: !4481, file: !864, line: 133, type: !3813)
!4486 = !DILocation(line: 0, scope: !4481)
!4487 = !DILocation(line: 135, column: 12, scope: !4481)
!4488 = !DILocation(line: 135, column: 10, scope: !4481)
!4489 = !DILocation(line: 135, column: 3, scope: !4481)
!4490 = distinct !DISubprogram(name: "hard_reg_set_equal_p", scope: !864, file: !864, line: 121, type: !3811, scopeLine: 122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4491)
!4491 = !{!4492, !4493}
!4492 = !DILocalVariable(name: "x", arg: 1, scope: !4490, file: !864, line: 121, type: !3813)
!4493 = !DILocalVariable(name: "y", arg: 2, scope: !4490, file: !864, line: 121, type: !3813)
!4494 = !DILocation(line: 0, scope: !4490)
!4495 = !DILocation(line: 123, column: 12, scope: !4490)
!4496 = !DILocation(line: 123, column: 10, scope: !4490)
!4497 = !DILocation(line: 123, column: 3, scope: !4490)
!4498 = distinct !DISubprogram(name: "comp_reg_classes_func", scope: !3, file: !3, line: 929, type: !1339, scopeLine: 930, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4499)
!4499 = !{!4500, !4501, !4502, !4503, !4504}
!4500 = !DILocalVariable(name: "v1p", arg: 1, scope: !4498, file: !3, line: 929, type: !1334)
!4501 = !DILocalVariable(name: "v2p", arg: 2, scope: !4498, file: !3, line: 929, type: !1334)
!4502 = !DILocalVariable(name: "cl1", scope: !4498, file: !3, line: 931, type: !397)
!4503 = !DILocalVariable(name: "cl2", scope: !4498, file: !3, line: 932, type: !397)
!4504 = !DILocalVariable(name: "diff", scope: !4498, file: !3, line: 933, type: !849)
!4505 = !DILocation(line: 0, scope: !4498)
!4506 = !DILocation(line: 931, column: 25, scope: !4498)
!4507 = !DILocation(line: 931, column: 24, scope: !4498)
!4508 = !DILocation(line: 932, column: 25, scope: !4498)
!4509 = !DILocation(line: 932, column: 24, scope: !4498)
!4510 = !DILocation(line: 935, column: 9, scope: !4498)
!4511 = !DILocation(line: 936, column: 9, scope: !4498)
!4512 = !DILocation(line: 937, column: 11, scope: !4513)
!4513 = distinct !DILexicalBlock(scope: !4498, file: !3, line: 937, column: 7)
!4514 = !DILocation(line: 937, column: 29, scope: !4513)
!4515 = !DILocation(line: 937, column: 22, scope: !4513)
!4516 = !DILocation(line: 938, column: 18, scope: !4513)
!4517 = !DILocation(line: 938, column: 43, scope: !4513)
!4518 = !DILocation(line: 938, column: 41, scope: !4513)
!4519 = !DILocation(line: 938, column: 67, scope: !4513)
!4520 = !DILocation(line: 937, column: 7, scope: !4498)
!4521 = !DILocation(line: 940, column: 20, scope: !4498)
!4522 = !DILocation(line: 940, column: 3, scope: !4498)
!4523 = !DILocation(line: 941, column: 1, scope: !4498)
!4524 = distinct !DISubprogram(name: "hard_reg_set_intersect_p", scope: !864, file: !864, line: 127, type: !3811, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4525)
!4525 = !{!4526, !4527}
!4526 = !DILocalVariable(name: "x", arg: 1, scope: !4524, file: !864, line: 127, type: !3813)
!4527 = !DILocalVariable(name: "y", arg: 2, scope: !4524, file: !864, line: 127, type: !3813)
!4528 = !DILocation(line: 0, scope: !4524)
!4529 = !DILocation(line: 129, column: 13, scope: !4524)
!4530 = !DILocation(line: 129, column: 18, scope: !4524)
!4531 = !DILocation(line: 129, column: 10, scope: !4524)
!4532 = !DILocation(line: 129, column: 3, scope: !4524)
!4533 = distinct !DISubprogram(name: "insn_contains_asm", scope: !3, file: !3, line: 1388, type: !4534, scopeLine: 1389, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4536)
!4534 = !DISubroutineType(types: !4535)
!4535 = !{!848, !939}
!4536 = !{!4537}
!4537 = !DILocalVariable(name: "insn", arg: 1, scope: !4533, file: !3, line: 1388, type: !939)
!4538 = !DILocation(line: 0, scope: !4533)
!4539 = !DILocation(line: 1390, column: 10, scope: !4533)
!4540 = !DILocation(line: 1390, column: 3, scope: !4533)
!4541 = distinct !DISubprogram(name: "insn_contains_asm_1", scope: !3, file: !3, line: 1376, type: !4542, scopeLine: 1377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4544)
!4542 = !DISubroutineType(types: !4543)
!4543 = !{!849, !938, !853}
!4544 = !{!4545, !4546}
!4545 = !DILocalVariable(name: "loc", arg: 1, scope: !4541, file: !3, line: 1376, type: !938)
!4546 = !DILocalVariable(name: "data", arg: 2, scope: !4541, file: !3, line: 1376, type: !853)
!4547 = !DILocation(line: 0, scope: !4541)
!4548 = !DILocation(line: 1378, column: 9, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 1378, column: 8)
!4550 = !DILocation(line: 1378, column: 8, scope: !4541)
!4551 = !DILocation(line: 1380, column: 7, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4541, file: !3, line: 1380, column: 7)
!4553 = !DILocation(line: 1380, column: 23, scope: !4552)
!4554 = !DILocation(line: 1383, column: 1, scope: !4541)
!4555 = distinct !DISubprogram(name: "ira", scope: !3, file: !3, line: 3124, type: !2385, scopeLine: 3125, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4556)
!4556 = !{!4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565}
!4557 = !DILocalVariable(name: "f", arg: 1, scope: !4555, file: !3, line: 3124, type: !2193)
!4558 = !DILocalVariable(name: "overall_cost_before", scope: !4555, file: !3, line: 3126, type: !849)
!4559 = !DILocalVariable(name: "allocated_reg_info_size", scope: !4555, file: !3, line: 3126, type: !849)
!4560 = !DILocalVariable(name: "loops_p", scope: !4555, file: !3, line: 3127, type: !848)
!4561 = !DILocalVariable(name: "max_regno_before_ira", scope: !4555, file: !3, line: 3128, type: !849)
!4562 = !DILocalVariable(name: "ira_max_point_before_emit", scope: !4555, file: !3, line: 3128, type: !849)
!4563 = !DILocalVariable(name: "rebuild_p", scope: !4555, file: !3, line: 3129, type: !849)
!4564 = !DILocalVariable(name: "saved_flag_ira_share_spill_slots", scope: !4555, file: !3, line: 3130, type: !849)
!4565 = !DILocalVariable(name: "bb", scope: !4555, file: !3, line: 3131, type: !1411)
!4566 = !DILocation(line: 0, scope: !4555)
!4567 = !DILocation(line: 3133, column: 3, scope: !4568)
!4568 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 3133, column: 3)
!4569 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3133, column: 3)
!4570 = !DILocation(line: 3133, column: 3, scope: !4569)
!4571 = !DILocation(line: 3135, column: 7, scope: !4572)
!4572 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3135, column: 7)
!4573 = !DILocation(line: 3135, column: 7, scope: !4555)
!4574 = !DILocation(line: 3136, column: 5, scope: !4572)
!4575 = !DILocation(line: 3138, column: 7, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3138, column: 7)
!4577 = !DILocation(line: 3138, column: 24, scope: !4576)
!4578 = !DILocation(line: 3138, column: 7, scope: !4555)
!4579 = !DILocation(line: 3140, column: 33, scope: !4580)
!4580 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 3139, column: 5)
!4581 = !DILocation(line: 3141, column: 21, scope: !4580)
!4582 = !DILocation(line: 3142, column: 5, scope: !4580)
!4583 = !DILocation(line: 3145, column: 52, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 3144, column: 5)
!4585 = !DILocation(line: 3145, column: 33, scope: !4584)
!4586 = !DILocation(line: 3146, column: 23, scope: !4584)
!4587 = !DILocation(line: 3146, column: 21, scope: !4584)
!4588 = !DILocation(line: 3149, column: 21, scope: !4555)
!4589 = !DILocation(line: 3149, column: 30, scope: !4555)
!4590 = !DILocation(line: 3149, column: 19, scope: !4555)
!4591 = !DILocation(line: 3150, column: 3, scope: !4555)
!4592 = !DILocation(line: 3152, column: 3, scope: !4555)
!4593 = !DILocation(line: 3154, column: 7, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3154, column: 7)
!4595 = !DILocation(line: 3154, column: 16, scope: !4594)
!4596 = !DILocation(line: 3154, column: 7, scope: !4555)
!4597 = !DILocation(line: 3156, column: 7, scope: !4598)
!4598 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 3155, column: 5)
!4599 = !DILocation(line: 3157, column: 7, scope: !4598)
!4600 = !DILocation(line: 3158, column: 5, scope: !4598)
!4601 = !DILocation(line: 3162, column: 3, scope: !4555)
!4602 = !DILocation(line: 3163, column: 3, scope: !4555)
!4603 = !DILocation(line: 3164, column: 3, scope: !4555)
!4604 = !DILocation(line: 3165, column: 3, scope: !4555)
!4605 = !DILocation(line: 3170, column: 7, scope: !4606)
!4606 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3170, column: 7)
!4607 = !DILocation(line: 3170, column: 7, scope: !4555)
!4608 = !DILocation(line: 3171, column: 5, scope: !4606)
!4609 = !DILocation(line: 3176, column: 30, scope: !4555)
!4610 = !DILocation(line: 3176, column: 28, scope: !4555)
!4611 = !DILocation(line: 3178, column: 7, scope: !4612)
!4612 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3178, column: 7)
!4613 = !DILocation(line: 3178, column: 29, scope: !4612)
!4614 = !DILocation(line: 3178, column: 26, scope: !4612)
!4615 = !DILocation(line: 3179, column: 29, scope: !4612)
!4616 = !DILocation(line: 3179, column: 5, scope: !4612)
!4617 = !DILocation(line: 3181, column: 15, scope: !4555)
!4618 = !DILocation(line: 3186, column: 3, scope: !4555)
!4619 = !DILocation(line: 3187, column: 7, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3187, column: 7)
!4621 = !DILocation(line: 3187, column: 7, scope: !4555)
!4622 = !DILocation(line: 3189, column: 19, scope: !4623)
!4623 = distinct !DILexicalBlock(scope: !4620, file: !3, line: 3188, column: 5)
!4624 = !DILocation(line: 3189, column: 17, scope: !4623)
!4625 = !DILocation(line: 3190, column: 25, scope: !4623)
!4626 = !DILocation(line: 3192, column: 27, scope: !4623)
!4627 = !DILocation(line: 3192, column: 13, scope: !4623)
!4628 = !DILocation(line: 3192, column: 2, scope: !4623)
!4629 = !DILocation(line: 3193, column: 45, scope: !4623)
!4630 = !DILocation(line: 3193, column: 7, scope: !4623)
!4631 = !DILocation(line: 3194, column: 51, scope: !4623)
!4632 = !DILocation(line: 3194, column: 61, scope: !4623)
!4633 = !DILocation(line: 3194, column: 37, scope: !4623)
!4634 = !DILocation(line: 3194, column: 27, scope: !4623)
!4635 = !DILocation(line: 3195, column: 39, scope: !4623)
!4636 = !DILocation(line: 3195, column: 49, scope: !4623)
!4637 = !DILocation(line: 3195, column: 7, scope: !4623)
!4638 = !DILocation(line: 3196, column: 7, scope: !4623)
!4639 = !DILocation(line: 3197, column: 11, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 3197, column: 11)
!4641 = !DILocation(line: 3197, column: 11, scope: !4623)
!4642 = !DILocation(line: 3199, column: 4, scope: !4643)
!4643 = distinct !DILexicalBlock(scope: !4644, file: !3, line: 3199, column: 4)
!4644 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 3199, column: 4)
!4645 = distinct !DILexicalBlock(scope: !4640, file: !3, line: 3198, column: 2)
!4646 = !DILocation(line: 3199, column: 4, scope: !4644)
!4647 = !DILocation(line: 3200, column: 25, scope: !4645)
!4648 = !DILocation(line: 3200, column: 4, scope: !4645)
!4649 = !DILocation(line: 3201, column: 4, scope: !4645)
!4650 = !DILocation(line: 3202, column: 4, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 3202, column: 4)
!4652 = distinct !DILexicalBlock(scope: !4645, file: !3, line: 3202, column: 4)
!4653 = !DILocation(line: 3202, column: 4, scope: !4652)
!4654 = !DILocation(line: 3206, column: 52, scope: !4555)
!4655 = !DILocation(line: 3207, column: 3, scope: !4555)
!4656 = !DILocation(line: 3209, column: 50, scope: !4555)
!4657 = !DILocation(line: 3209, column: 35, scope: !4555)
!4658 = !DILocation(line: 3209, column: 20, scope: !4555)
!4659 = !DILocation(line: 3210, column: 53, scope: !4555)
!4660 = !DILocation(line: 3210, column: 34, scope: !4555)
!4661 = !DILocation(line: 3210, column: 17, scope: !4555)
!4662 = !DILocation(line: 3211, column: 49, scope: !4555)
!4663 = !DILocation(line: 3211, column: 22, scope: !4555)
!4664 = !DILocation(line: 3214, column: 3, scope: !4555)
!4665 = !DILocation(line: 3215, column: 3, scope: !4555)
!4666 = !DILocation(line: 3216, column: 3, scope: !4555)
!4667 = !DILocation(line: 3216, column: 17, scope: !4555)
!4668 = !DILocation(line: 3218, column: 7, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3218, column: 7)
!4670 = !DILocation(line: 3218, column: 33, scope: !4669)
!4671 = !DILocation(line: 3218, column: 40, scope: !4669)
!4672 = !DILocation(line: 3218, column: 54, scope: !4669)
!4673 = !DILocation(line: 3218, column: 37, scope: !4669)
!4674 = !DILocation(line: 3219, column: 5, scope: !4669)
!4675 = !DILocation(line: 3220, column: 24, scope: !4555)
!4676 = !DILocation(line: 3221, column: 10, scope: !4555)
!4677 = !DILocation(line: 3221, column: 14, scope: !4555)
!4678 = !DILocation(line: 3222, column: 7, scope: !4555)
!4679 = !DILocation(line: 3220, column: 13, scope: !4555)
!4680 = !DILocation(line: 3226, column: 38, scope: !4555)
!4681 = !DILocation(line: 3227, column: 7, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3227, column: 7)
!4683 = !DILocation(line: 3227, column: 7, scope: !4555)
!4684 = !DILocation(line: 3230, column: 32, scope: !4682)
!4685 = !DILocation(line: 3230, column: 5, scope: !4682)
!4686 = !DILocation(line: 3232, column: 3, scope: !4555)
!4687 = !DILocation(line: 3234, column: 31, scope: !4555)
!4688 = !DILocation(line: 3236, column: 3, scope: !4555)
!4689 = !DILocation(line: 3238, column: 7, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3238, column: 7)
!4691 = !DILocation(line: 3238, column: 7, scope: !4555)
!4692 = !DILocation(line: 3240, column: 19, scope: !4693)
!4693 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3239, column: 5)
!4694 = !DILocation(line: 3240, column: 17, scope: !4693)
!4695 = !DILocation(line: 3242, column: 13, scope: !4696)
!4696 = distinct !DILexicalBlock(scope: !4693, file: !3, line: 3242, column: 11)
!4697 = !DILocation(line: 3242, column: 11, scope: !4693)
!4698 = !DILocation(line: 3243, column: 2, scope: !4696)
!4699 = !DILocation(line: 3246, column: 4, scope: !4700)
!4700 = distinct !DILexicalBlock(scope: !4696, file: !3, line: 3245, column: 2)
!4701 = !DILocation(line: 3247, column: 4, scope: !4700)
!4702 = !DILocation(line: 3251, column: 8, scope: !4703)
!4703 = distinct !DILexicalBlock(scope: !4700, file: !3, line: 3251, column: 8)
!4704 = !DILocation(line: 3251, column: 34, scope: !4703)
!4705 = !DILocation(line: 3251, column: 41, scope: !4703)
!4706 = !DILocation(line: 3251, column: 55, scope: !4703)
!4707 = !DILocation(line: 3251, column: 38, scope: !4703)
!4708 = !DILocation(line: 3252, column: 6, scope: !4703)
!4709 = !DILocation(line: 3253, column: 4, scope: !4700)
!4710 = !DILocation(line: 3256, column: 4, scope: !4700)
!4711 = !DILocation(line: 3258, column: 4, scope: !4700)
!4712 = !DILocation(line: 3259, column: 4, scope: !4700)
!4713 = !DILocation(line: 3260, column: 4, scope: !4700)
!4714 = !DILocation(line: 3260, column: 18, scope: !4700)
!4715 = !DILocation(line: 3262, column: 4, scope: !4700)
!4716 = !DILocation(line: 3263, column: 4, scope: !4700)
!4717 = !DILocation(line: 3264, column: 36, scope: !4700)
!4718 = !DILocation(line: 3264, column: 4, scope: !4700)
!4719 = !DILocation(line: 3268, column: 3, scope: !4555)
!4720 = !DILocation(line: 3270, column: 3, scope: !4555)
!4721 = !DILocation(line: 3277, column: 32, scope: !4555)
!4722 = !DILocation(line: 3277, column: 46, scope: !4555)
!4723 = !DILocation(line: 3277, column: 3, scope: !4555)
!4724 = !DILocation(line: 3278, column: 15, scope: !4555)
!4725 = !DILocation(line: 3278, column: 13, scope: !4555)
!4726 = !DILocation(line: 3281, column: 3, scope: !4555)
!4727 = !DILocation(line: 3282, column: 11, scope: !4555)
!4728 = !DILocation(line: 3283, column: 19, scope: !4555)
!4729 = !DILocation(line: 3283, column: 17, scope: !4555)
!4730 = !DILocation(line: 3282, column: 3, scope: !4555)
!4731 = !DILocation(line: 3284, column: 26, scope: !4555)
!4732 = !DILocation(line: 3284, column: 24, scope: !4555)
!4733 = !DILocation(line: 3286, column: 7, scope: !4734)
!4734 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3286, column: 7)
!4735 = !DILocation(line: 3286, column: 17, scope: !4734)
!4736 = !DILocation(line: 3286, column: 7, scope: !4555)
!4737 = !DILocation(line: 3288, column: 7, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4734, file: !3, line: 3287, column: 5)
!4739 = !DILocation(line: 3289, column: 7, scope: !4738)
!4740 = !DILocation(line: 3290, column: 7, scope: !4738)
!4741 = !DILocation(line: 3291, column: 7, scope: !4738)
!4742 = !DILocation(line: 3294, column: 28, scope: !4555)
!4743 = !DILocation(line: 3292, column: 5, scope: !4738)
!4744 = !DILocation(line: 3294, column: 3, scope: !4555)
!4745 = !DILocation(line: 3296, column: 25, scope: !4555)
!4746 = !DILocation(line: 3297, column: 7, scope: !4747)
!4747 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3297, column: 7)
!4748 = !DILocation(line: 3297, column: 7, scope: !4555)
!4749 = !DILocation(line: 3299, column: 7, scope: !4750)
!4750 = distinct !DILexicalBlock(scope: !4747, file: !3, line: 3298, column: 5)
!4751 = !DILocation(line: 3305, column: 39, scope: !4750)
!4752 = !DILocation(line: 3308, column: 19, scope: !4750)
!4753 = !DILocation(line: 3309, column: 5, scope: !4750)
!4754 = !DILocation(line: 3308, column: 5, scope: !4750)
!4755 = !DILocation(line: 3307, column: 2, scope: !4750)
!4756 = !DILocation(line: 3311, column: 8, scope: !4750)
!4757 = !DILocation(line: 3311, column: 18, scope: !4750)
!4758 = !DILocation(line: 3310, column: 7, scope: !4750)
!4759 = !DILocation(line: 3312, column: 5, scope: !4750)
!4760 = !DILocation(line: 3314, column: 3, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4762, file: !3, line: 3314, column: 3)
!4762 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3314, column: 3)
!4763 = !DILocation(line: 3314, column: 3, scope: !4762)
!4764 = !DILocation(line: 3316, column: 3, scope: !4765)
!4765 = distinct !DILexicalBlock(scope: !4766, file: !3, line: 3316, column: 3)
!4766 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3316, column: 3)
!4767 = !DILocation(line: 3316, column: 3, scope: !4766)
!4768 = !DILocation(line: 3317, column: 3, scope: !4555)
!4769 = !DILocation(line: 3318, column: 3, scope: !4555)
!4770 = !DILocation(line: 3320, column: 31, scope: !4555)
!4771 = !DILocation(line: 3320, column: 45, scope: !4555)
!4772 = !DILocation(line: 3320, column: 23, scope: !4555)
!4773 = !DILocation(line: 3320, column: 22, scope: !4555)
!4774 = !DILocation(line: 3320, column: 20, scope: !4555)
!4775 = !DILocation(line: 3322, column: 3, scope: !4555)
!4776 = !DILocation(line: 3324, column: 3, scope: !4777)
!4777 = distinct !DILexicalBlock(scope: !4778, file: !3, line: 3324, column: 3)
!4778 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3324, column: 3)
!4779 = !DILocation(line: 3324, column: 3, scope: !4778)
!4780 = !DILocation(line: 3326, column: 3, scope: !4781)
!4781 = distinct !DILexicalBlock(scope: !4782, file: !3, line: 3326, column: 3)
!4782 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3326, column: 3)
!4783 = !DILocation(line: 3326, column: 3, scope: !4782)
!4784 = !DILocation(line: 3328, column: 7, scope: !4785)
!4785 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3328, column: 7)
!4786 = !DILocation(line: 3328, column: 7, scope: !4555)
!4787 = !DILocation(line: 3330, column: 17, scope: !4788)
!4788 = distinct !DILexicalBlock(scope: !4785, file: !3, line: 3329, column: 5)
!4789 = !DILocation(line: 3330, column: 7, scope: !4788)
!4790 = !DILocation(line: 3332, column: 7, scope: !4788)
!4791 = !DILocation(line: 3334, column: 5, scope: !4788)
!4792 = !DILocation(line: 3335, column: 7, scope: !4793)
!4793 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3335, column: 7)
!4794 = !DILocation(line: 3335, column: 33, scope: !4793)
!4795 = !DILocation(line: 3335, column: 40, scope: !4793)
!4796 = !DILocation(line: 3335, column: 54, scope: !4793)
!4797 = !DILocation(line: 3335, column: 37, scope: !4793)
!4798 = !DILocation(line: 3336, column: 33, scope: !4793)
!4799 = !DILocation(line: 3336, column: 30, scope: !4793)
!4800 = !DILocation(line: 3337, column: 5, scope: !4793)
!4801 = !DILocation(line: 3338, column: 3, scope: !4555)
!4802 = !DILocation(line: 3340, column: 30, scope: !4555)
!4803 = !DILocation(line: 3342, column: 3, scope: !4555)
!4804 = !DILocation(line: 3343, column: 3, scope: !4555)
!4805 = !DILocation(line: 3344, column: 3, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3344, column: 3)
!4807 = !DILocation(line: 0, scope: !4806)
!4808 = !DILocation(line: 3345, column: 9, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4806, file: !3, line: 3344, column: 3)
!4810 = !DILocation(line: 3345, column: 21, scope: !4809)
!4811 = !DILocation(line: 3344, column: 3, scope: !4809)
!4812 = distinct !{!4812, !4805, !4813}
!4813 = !DILocation(line: 3345, column: 23, scope: !4806)
!4814 = !DILocation(line: 3346, column: 3, scope: !4555)
!4815 = !DILocation(line: 3346, column: 17, scope: !4555)
!4816 = !DILocation(line: 3348, column: 3, scope: !4555)
!4817 = !DILocation(line: 3349, column: 3, scope: !4555)
!4818 = !DILocation(line: 3351, column: 7, scope: !4819)
!4819 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3351, column: 7)
!4820 = !DILocation(line: 3351, column: 7, scope: !4555)
!4821 = !DILocation(line: 3353, column: 7, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4819, file: !3, line: 3352, column: 5)
!4823 = !DILocation(line: 3355, column: 17, scope: !4822)
!4824 = !DILocation(line: 3355, column: 7, scope: !4822)
!4825 = !DILocation(line: 3356, column: 17, scope: !4822)
!4826 = !DILocation(line: 3356, column: 7, scope: !4822)
!4827 = !DILocation(line: 3357, column: 5, scope: !4822)
!4828 = !DILocation(line: 3359, column: 3, scope: !4555)
!4829 = !DILocation(line: 3368, column: 3, scope: !4555)
!4830 = !DILocation(line: 3369, column: 7, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3369, column: 7)
!4832 = !DILocation(line: 3369, column: 16, scope: !4831)
!4833 = !DILocation(line: 3369, column: 7, scope: !4555)
!4834 = !DILocation(line: 3370, column: 5, scope: !4831)
!4835 = !DILocation(line: 3371, column: 3, scope: !4555)
!4836 = !DILocation(line: 3372, column: 3, scope: !4555)
!4837 = !DILocation(line: 3374, column: 7, scope: !4838)
!4838 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3374, column: 7)
!4839 = !DILocation(line: 3374, column: 7, scope: !4555)
!4840 = !DILocation(line: 3375, column: 5, scope: !4838)
!4841 = !DILocation(line: 3377, column: 3, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 3377, column: 3)
!4843 = distinct !DILexicalBlock(scope: !4555, file: !3, line: 3377, column: 3)
!4844 = !DILocation(line: 3377, column: 3, scope: !4843)
!4845 = !DILocation(line: 3378, column: 1, scope: !4555)
!4846 = distinct !DISubprogram(name: "setup_prohibited_mode_move_regs", scope: !3, file: !3, line: 1333, type: !2144, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4847)
!4847 = !{!4848, !4849, !4850, !4851, !4852, !4853}
!4848 = !DILocalVariable(name: "i", scope: !4846, file: !3, line: 1335, type: !849)
!4849 = !DILocalVariable(name: "j", scope: !4846, file: !3, line: 1335, type: !849)
!4850 = !DILocalVariable(name: "test_reg1", scope: !4846, file: !3, line: 1336, type: !939)
!4851 = !DILocalVariable(name: "test_reg2", scope: !4846, file: !3, line: 1336, type: !939)
!4852 = !DILocalVariable(name: "move_pat", scope: !4846, file: !3, line: 1336, type: !939)
!4853 = !DILocalVariable(name: "move_insn", scope: !4846, file: !3, line: 1336, type: !939)
!4854 = !DILocation(line: 1338, column: 7, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 1338, column: 7)
!4856 = !DILocation(line: 1338, column: 7, scope: !4846)
!4857 = !DILocation(line: 1340, column: 47, scope: !4846)
!4858 = !DILocation(line: 1341, column: 15, scope: !4846)
!4859 = !DILocation(line: 0, scope: !4846)
!4860 = !DILocation(line: 1342, column: 15, scope: !4846)
!4861 = !DILocation(line: 1343, column: 14, scope: !4846)
!4862 = !DILocation(line: 1344, column: 15, scope: !4846)
!4863 = !DILocation(line: 0, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4865, file: !3, line: 1349, column: 2)
!4865 = distinct !DILexicalBlock(scope: !4866, file: !3, line: 1348, column: 7)
!4866 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 1348, column: 7)
!4867 = distinct !DILexicalBlock(scope: !4868, file: !3, line: 1346, column: 5)
!4868 = distinct !DILexicalBlock(scope: !4869, file: !3, line: 1345, column: 3)
!4869 = distinct !DILexicalBlock(scope: !4846, file: !3, line: 1345, column: 3)
!4870 = !DILocation(line: 1345, column: 8, scope: !4869)
!4871 = !DILocation(line: 0, scope: !4869)
!4872 = !DILocation(line: 1345, column: 17, scope: !4868)
!4873 = !DILocation(line: 1345, column: 3, scope: !4869)
!4874 = !DILocation(line: 1347, column: 7, scope: !4867)
!4875 = !DILocation(line: 1348, column: 12, scope: !4866)
!4876 = !DILocation(line: 0, scope: !4866)
!4877 = !DILocation(line: 1348, column: 21, scope: !4865)
!4878 = !DILocation(line: 1348, column: 7, scope: !4866)
!4879 = !DILocation(line: 1350, column: 10, scope: !4880)
!4880 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1350, column: 8)
!4881 = !DILocation(line: 1350, column: 8, scope: !4864)
!4882 = !DILocation(line: 1352, column: 4, scope: !4864)
!4883 = !DILocation(line: 1353, column: 4, scope: !4864)
!4884 = !DILocation(line: 1354, column: 4, scope: !4864)
!4885 = !DILocation(line: 1355, column: 4, scope: !4864)
!4886 = !DILocation(line: 1356, column: 26, scope: !4864)
!4887 = !DILocation(line: 1357, column: 4, scope: !4864)
!4888 = !DILocation(line: 1358, column: 8, scope: !4889)
!4889 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1358, column: 8)
!4890 = !DILocation(line: 1358, column: 30, scope: !4889)
!4891 = !DILocation(line: 1358, column: 8, scope: !4864)
!4892 = !DILocation(line: 1360, column: 4, scope: !4864)
!4893 = !DILocation(line: 1361, column: 10, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4864, file: !3, line: 1361, column: 8)
!4895 = !DILocation(line: 1361, column: 8, scope: !4864)
!4896 = !DILocation(line: 1363, column: 4, scope: !4864)
!4897 = !DILocation(line: 1364, column: 2, scope: !4864)
!4898 = !DILocation(line: 1348, column: 47, scope: !4865)
!4899 = !DILocation(line: 1348, column: 7, scope: !4865)
!4900 = distinct !{!4900, !4878, !4901}
!4901 = !DILocation(line: 1364, column: 2, scope: !4866)
!4902 = !DILocation(line: 1345, column: 39, scope: !4868)
!4903 = !DILocation(line: 1345, column: 3, scope: !4868)
!4904 = distinct !{!4904, !4873, !4905}
!4905 = !DILocation(line: 1365, column: 5, scope: !4869)
!4906 = !DILocation(line: 1366, column: 1, scope: !4846)
!4907 = distinct !DISubprogram(name: "update_equiv_regs", scope: !3, file: !3, line: 2321, type: !2449, scopeLine: 2322, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !4908)
!4908 = !{!4909, !4910, !4911, !4912, !4913, !4920, !4921, !4922, !4923, !4924, !4928, !4932, !4935, !4938, !4939, !4943, !4944, !4945, !4946, !4949, !4956, !4962, !4963, !4966, !4967, !4968, !4971, !4979}
!4909 = !DILocalVariable(name: "insn", scope: !4907, file: !3, line: 2323, type: !939)
!4910 = !DILocalVariable(name: "bb", scope: !4907, file: !3, line: 2324, type: !1411)
!4911 = !DILocalVariable(name: "loop_depth", scope: !4907, file: !3, line: 2325, type: !849)
!4912 = !DILocalVariable(name: "cleared_regs", scope: !4907, file: !3, line: 2326, type: !873)
!4913 = !DILocalVariable(name: "note", scope: !4914, file: !3, line: 2349, type: !939)
!4914 = distinct !DILexicalBlock(scope: !4915, file: !3, line: 2348, column: 2)
!4915 = distinct !DILexicalBlock(scope: !4916, file: !3, line: 2345, column: 7)
!4916 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 2345, column: 7)
!4917 = distinct !DILexicalBlock(scope: !4918, file: !3, line: 2342, column: 5)
!4918 = distinct !DILexicalBlock(scope: !4919, file: !3, line: 2341, column: 3)
!4919 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2341, column: 3)
!4920 = !DILocalVariable(name: "set", scope: !4914, file: !3, line: 2350, type: !939)
!4921 = !DILocalVariable(name: "dest", scope: !4914, file: !3, line: 2351, type: !939)
!4922 = !DILocalVariable(name: "src", scope: !4914, file: !3, line: 2351, type: !939)
!4923 = !DILocalVariable(name: "regno", scope: !4914, file: !3, line: 2352, type: !849)
!4924 = !DILocalVariable(name: "i", scope: !4925, file: !3, line: 2372, type: !849)
!4925 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 2371, column: 6)
!4926 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2370, column: 13)
!4927 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2365, column: 8)
!4928 = !DILocalVariable(name: "part", scope: !4929, file: !3, line: 2376, type: !939)
!4929 = distinct !DILexicalBlock(scope: !4930, file: !3, line: 2375, column: 3)
!4930 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 2374, column: 8)
!4931 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 2374, column: 8)
!4932 = !DILocalVariable(name: "note_value", scope: !4933, file: !3, line: 2465, type: !939)
!4933 = distinct !DILexicalBlock(scope: !4934, file: !3, line: 2464, column: 6)
!4934 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2462, column: 8)
!4935 = !DILocalVariable(name: "regno", scope: !4936, file: !3, line: 2494, type: !849)
!4936 = distinct !DILexicalBlock(scope: !4937, file: !3, line: 2493, column: 6)
!4937 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2492, column: 8)
!4938 = !DILocalVariable(name: "x", scope: !4936, file: !3, line: 2495, type: !939)
!4939 = !DILocalVariable(name: "set", scope: !4940, file: !3, line: 2553, type: !939)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !3, line: 2552, column: 5)
!4941 = distinct !DILexicalBlock(scope: !4942, file: !3, line: 2551, column: 3)
!4942 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2551, column: 3)
!4943 = !DILocalVariable(name: "src", scope: !4940, file: !3, line: 2553, type: !939)
!4944 = !DILocalVariable(name: "dest", scope: !4940, file: !3, line: 2553, type: !939)
!4945 = !DILocalVariable(name: "regno", scope: !4940, file: !3, line: 2554, type: !7)
!4946 = !DILocalVariable(name: "init_insn", scope: !4947, file: !3, line: 2592, type: !939)
!4947 = distinct !DILexicalBlock(scope: !4948, file: !3, line: 2591, column: 2)
!4948 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2582, column: 11)
!4949 = !DILocalVariable(name: "link", scope: !4950, file: !3, line: 2624, type: !939)
!4950 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 2623, column: 2)
!4951 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 2620, column: 7)
!4952 = distinct !DILexicalBlock(scope: !4953, file: !3, line: 2620, column: 7)
!4953 = distinct !DILexicalBlock(scope: !4954, file: !3, line: 2618, column: 5)
!4954 = distinct !DILexicalBlock(scope: !4955, file: !3, line: 2617, column: 3)
!4955 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2617, column: 3)
!4956 = !DILocalVariable(name: "regno", scope: !4957, file: !3, line: 2640, type: !849)
!4957 = distinct !DILexicalBlock(scope: !4958, file: !3, line: 2639, column: 3)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !3, line: 2636, column: 12)
!4959 = distinct !DILexicalBlock(scope: !4960, file: !3, line: 2635, column: 6)
!4960 = distinct !DILexicalBlock(scope: !4961, file: !3, line: 2634, column: 4)
!4961 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 2634, column: 4)
!4962 = !DILocalVariable(name: "equiv_insn", scope: !4957, file: !3, line: 2641, type: !939)
!4963 = !DILocalVariable(name: "equiv_link", scope: !4964, file: !3, line: 2666, type: !939)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 2665, column: 7)
!4965 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 2662, column: 9)
!4966 = !DILocalVariable(name: "last_link", scope: !4964, file: !3, line: 2667, type: !939)
!4967 = !DILocalVariable(name: "note", scope: !4964, file: !3, line: 2668, type: !939)
!4968 = !DILocalVariable(name: "new_insn", scope: !4969, file: !3, line: 2705, type: !939)
!4969 = distinct !DILexicalBlock(scope: !4970, file: !3, line: 2704, column: 7)
!4970 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 2703, column: 14)
!4971 = !DILocalVariable(name: "old_loc", scope: !4972, file: !3, line: 2755, type: !939)
!4972 = distinct !DILexicalBlock(scope: !4973, file: !3, line: 2754, column: 6)
!4973 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 2753, column: 8)
!4974 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 2752, column: 2)
!4975 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 2752, column: 2)
!4976 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2751, column: 11)
!4977 = distinct !DILexicalBlock(scope: !4978, file: !3, line: 2741, column: 5)
!4978 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2740, column: 7)
!4979 = !DILabel(scope: !4907, name: "out", file: !3, line: 2767)
!4980 = !DILocation(line: 2330, column: 22, scope: !4907)
!4981 = !DILocation(line: 2332, column: 15, scope: !4907)
!4982 = !DILocation(line: 2332, column: 13, scope: !4907)
!4983 = !DILocation(line: 2333, column: 20, scope: !4907)
!4984 = !DILocation(line: 2333, column: 18, scope: !4907)
!4985 = !DILocation(line: 2334, column: 25, scope: !4907)
!4986 = !DILocation(line: 2334, column: 23, scope: !4907)
!4987 = !DILocation(line: 2336, column: 3, scope: !4907)
!4988 = !DILocation(line: 2341, column: 3, scope: !4919)
!4989 = !DILocation(line: 2341, column: 3, scope: !4918)
!4990 = !DILocation(line: 0, scope: !4919)
!4991 = !DILocation(line: 0, scope: !4907)
!4992 = !DILocation(line: 2343, column: 24, scope: !4917)
!4993 = !DILocation(line: 2345, column: 19, scope: !4916)
!4994 = !DILocation(line: 2345, column: 12, scope: !4916)
!4995 = !DILocation(line: 2346, column: 13, scope: !4915)
!4996 = !DILocation(line: 0, scope: !4916)
!4997 = !DILocation(line: 2346, column: 10, scope: !4915)
!4998 = !DILocation(line: 2345, column: 7, scope: !4916)
!4999 = !DILocation(line: 2354, column: 10, scope: !5000)
!5000 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2354, column: 8)
!5001 = !DILocation(line: 2354, column: 8, scope: !4914)
!5002 = !DILocation(line: 2357, column: 16, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2357, column: 4)
!5004 = !DILocation(line: 2357, column: 9, scope: !5003)
!5005 = !DILocation(line: 0, scope: !5003)
!5006 = !DILocation(line: 0, scope: !4914)
!5007 = !DILocation(line: 2357, column: 4, scope: !5003)
!5008 = !DILocation(line: 2358, column: 10, scope: !5009)
!5009 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 2358, column: 10)
!5010 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 2357, column: 4)
!5011 = !DILocation(line: 2358, column: 31, scope: !5009)
!5012 = !DILocation(line: 2358, column: 10, scope: !5010)
!5013 = !DILocation(line: 2359, column: 18, scope: !5009)
!5014 = !DILocation(line: 2359, column: 8, scope: !5009)
!5015 = !DILocation(line: 2357, column: 47, scope: !5010)
!5016 = !DILocation(line: 2357, column: 4, scope: !5010)
!5017 = distinct !{!5017, !5007, !5018}
!5018 = !DILocation(line: 2359, column: 44, scope: !5003)
!5019 = !DILocation(line: 2361, column: 10, scope: !4914)
!5020 = !DILocation(line: 2365, column: 12, scope: !4927)
!5021 = !DILocation(line: 0, scope: !4927)
!5022 = !DILocation(line: 2365, column: 8, scope: !4914)
!5023 = !DILocation(line: 2367, column: 8, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !4927, file: !3, line: 2366, column: 6)
!5025 = !DILocation(line: 2368, column: 8, scope: !5024)
!5026 = !DILocation(line: 2370, column: 13, scope: !4926)
!5027 = !DILocation(line: 2370, column: 39, scope: !4926)
!5028 = !DILocation(line: 2370, column: 13, scope: !4927)
!5029 = !DILocation(line: 2374, column: 17, scope: !4931)
!5030 = !DILocation(line: 0, scope: !4925)
!5031 = !DILocation(line: 2374, column: 13, scope: !4931)
!5032 = !DILocation(line: 0, scope: !4931)
!5033 = !DILocation(line: 2374, column: 52, scope: !4930)
!5034 = !DILocation(line: 2374, column: 8, scope: !4931)
!5035 = !DILocation(line: 2376, column: 16, scope: !4929)
!5036 = !DILocation(line: 0, scope: !4929)
!5037 = !DILocation(line: 2377, column: 14, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 2377, column: 9)
!5039 = !DILocation(line: 2377, column: 9, scope: !4929)
!5040 = !DILocation(line: 2378, column: 7, scope: !5038)
!5041 = !DILocation(line: 2374, column: 8, scope: !4930)
!5042 = distinct !{!5042, !5034, !5043}
!5043 = !DILocation(line: 2379, column: 3, scope: !4931)
!5044 = !DILocation(line: 2382, column: 11, scope: !4914)
!5045 = !DILocation(line: 2383, column: 10, scope: !4914)
!5046 = !DILocation(line: 2387, column: 11, scope: !4914)
!5047 = !DILocation(line: 2388, column: 8, scope: !5048)
!5048 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2388, column: 8)
!5049 = !DILocation(line: 2388, column: 8, scope: !4914)
!5050 = !DILocation(line: 2390, column: 8, scope: !5051)
!5051 = distinct !DILexicalBlock(scope: !5048, file: !3, line: 2389, column: 6)
!5052 = !DILocation(line: 2391, column: 16, scope: !5051)
!5053 = !DILocation(line: 2395, column: 8, scope: !5051)
!5054 = !DILocation(line: 2395, column: 25, scope: !5051)
!5055 = !DILocation(line: 2395, column: 44, scope: !5051)
!5056 = !DILocation(line: 2398, column: 30, scope: !5057)
!5057 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 2398, column: 12)
!5058 = !DILocation(line: 2398, column: 12, scope: !5057)
!5059 = !DILocation(line: 2398, column: 12, scope: !5051)
!5060 = !DILocation(line: 2400, column: 7, scope: !5057)
!5061 = !DILocation(line: 2399, column: 3, scope: !5057)
!5062 = !DILocation(line: 2400, column: 5, scope: !5057)
!5063 = !DILocation(line: 2406, column: 9, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2406, column: 8)
!5065 = !DILocation(line: 2406, column: 8, scope: !4914)
!5066 = !DILocation(line: 2421, column: 9, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2421, column: 8)
!5068 = !DILocation(line: 2422, column: 8, scope: !5067)
!5069 = !DILocation(line: 2422, column: 20, scope: !5067)
!5070 = !DILocation(line: 2422, column: 34, scope: !5067)
!5071 = !DILocation(line: 2423, column: 8, scope: !5067)
!5072 = !DILocation(line: 2423, column: 11, scope: !5067)
!5073 = !DILocation(line: 2423, column: 28, scope: !5067)
!5074 = !DILocation(line: 2423, column: 42, scope: !5067)
!5075 = !DILocation(line: 2423, column: 39, scope: !5067)
!5076 = !DILocation(line: 2424, column: 8, scope: !5067)
!5077 = !DILocation(line: 2424, column: 12, scope: !5067)
!5078 = !DILocation(line: 2425, column: 5, scope: !5067)
!5079 = !DILocation(line: 2425, column: 8, scope: !5067)
!5080 = !DILocation(line: 2425, column: 20, scope: !5067)
!5081 = !DILocation(line: 2425, column: 25, scope: !5067)
!5082 = !DILocation(line: 2425, column: 42, scope: !5067)
!5083 = !DILocation(line: 2421, column: 8, scope: !4914)
!5084 = !DILocation(line: 2429, column: 8, scope: !5085)
!5085 = distinct !DILexicalBlock(scope: !5067, file: !3, line: 2426, column: 6)
!5086 = !DILocation(line: 2430, column: 8, scope: !5085)
!5087 = !DILocation(line: 2433, column: 11, scope: !4914)
!5088 = !DILocation(line: 2438, column: 10, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2438, column: 8)
!5090 = !DILocation(line: 2438, column: 15, scope: !5089)
!5091 = !DILocation(line: 2438, column: 20, scope: !5089)
!5092 = !DILocation(line: 2438, column: 8, scope: !4914)
!5093 = !DILocation(line: 2439, column: 51, scope: !5089)
!5094 = !DILocation(line: 2439, column: 13, scope: !5089)
!5095 = !DILocation(line: 2439, column: 6, scope: !5089)
!5096 = !DILocation(line: 2443, column: 8, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2443, column: 8)
!5098 = !DILocation(line: 2443, column: 13, scope: !5097)
!5099 = !DILocation(line: 2443, column: 16, scope: !5097)
!5100 = !DILocation(line: 2443, column: 42, scope: !5097)
!5101 = !DILocation(line: 2443, column: 8, scope: !4914)
!5102 = !DILocation(line: 2446, column: 8, scope: !5103)
!5103 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2446, column: 8)
!5104 = !DILocation(line: 2446, column: 33, scope: !5103)
!5105 = !DILocation(line: 2447, column: 8, scope: !5103)
!5106 = !DILocation(line: 2447, column: 14, scope: !5103)
!5107 = !DILocation(line: 2448, column: 5, scope: !5103)
!5108 = !DILocation(line: 2448, column: 22, scope: !5103)
!5109 = !DILocation(line: 2448, column: 8, scope: !5103)
!5110 = !DILocation(line: 2449, column: 5, scope: !5103)
!5111 = !DILocation(line: 2449, column: 9, scope: !5103)
!5112 = !DILocation(line: 2449, column: 26, scope: !5103)
!5113 = !DILocation(line: 2450, column: 9, scope: !5103)
!5114 = !DILocation(line: 2450, column: 27, scope: !5103)
!5115 = !DILocation(line: 2450, column: 14, scope: !5103)
!5116 = !DILocation(line: 2446, column: 8, scope: !4914)
!5117 = !DILocation(line: 2453, column: 8, scope: !5118)
!5118 = distinct !DILexicalBlock(scope: !5103, file: !3, line: 2452, column: 6)
!5119 = !DILocation(line: 2454, column: 8, scope: !5118)
!5120 = !DILocation(line: 2458, column: 8, scope: !4914)
!5121 = !DILocation(line: 2457, column: 4, scope: !4914)
!5122 = !DILocation(line: 2457, column: 21, scope: !4914)
!5123 = !DILocation(line: 2458, column: 6, scope: !4914)
!5124 = !DILocation(line: 2462, column: 8, scope: !4934)
!5125 = !DILocation(line: 2462, column: 33, scope: !4934)
!5126 = !DILocation(line: 2463, column: 11, scope: !4934)
!5127 = !DILocation(line: 2463, column: 8, scope: !4934)
!5128 = !DILocation(line: 2463, column: 35, scope: !4934)
!5129 = !DILocation(line: 2463, column: 21, scope: !4934)
!5130 = !DILocation(line: 2462, column: 8, scope: !4914)
!5131 = !DILocation(line: 2465, column: 25, scope: !4933)
!5132 = !DILocation(line: 0, scope: !4933)
!5133 = !DILocation(line: 2466, column: 8, scope: !4933)
!5134 = !DILocation(line: 2467, column: 8, scope: !4933)
!5135 = !DILocation(line: 2468, column: 6, scope: !4933)
!5136 = !DILocation(line: 2485, column: 11, scope: !4914)
!5137 = !DILocation(line: 2487, column: 13, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !4914, file: !3, line: 2487, column: 8)
!5139 = !DILocation(line: 2487, column: 18, scope: !5138)
!5140 = !DILocation(line: 2487, column: 21, scope: !5138)
!5141 = !DILocation(line: 2487, column: 45, scope: !5138)
!5142 = !DILocation(line: 2488, column: 8, scope: !5138)
!5143 = !DILocation(line: 2488, column: 11, scope: !5138)
!5144 = !DILocation(line: 2489, column: 8, scope: !5138)
!5145 = !DILocation(line: 2489, column: 11, scope: !5138)
!5146 = !DILocation(line: 2487, column: 8, scope: !4914)
!5147 = !DILocation(line: 2490, column: 61, scope: !5138)
!5148 = !DILocation(line: 2490, column: 51, scope: !5138)
!5149 = !DILocation(line: 2490, column: 13, scope: !5138)
!5150 = !DILocation(line: 2490, column: 6, scope: !5138)
!5151 = !DILocation(line: 2492, column: 8, scope: !4937)
!5152 = !DILocation(line: 2492, column: 8, scope: !4914)
!5153 = !DILocation(line: 2494, column: 20, scope: !4936)
!5154 = !DILocation(line: 0, scope: !4936)
!5155 = !DILocation(line: 2495, column: 16, scope: !4936)
!5156 = !DILocation(line: 2499, column: 13, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 2499, column: 12)
!5158 = !DILocation(line: 2499, column: 30, scope: !5157)
!5159 = !DILocation(line: 2499, column: 12, scope: !4936)
!5160 = !DILocation(line: 2501, column: 7, scope: !5157)
!5161 = !DILocation(line: 2500, column: 3, scope: !5157)
!5162 = !DILocation(line: 2501, column: 5, scope: !5157)
!5163 = !DILocation(line: 2508, column: 12, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 2508, column: 12)
!5165 = !DILocation(line: 2508, column: 25, scope: !5164)
!5166 = !DILocation(line: 2509, column: 5, scope: !5164)
!5167 = !DILocation(line: 2509, column: 22, scope: !5164)
!5168 = !DILocation(line: 2510, column: 9, scope: !5164)
!5169 = !DILocation(line: 2510, column: 12, scope: !5164)
!5170 = !DILocation(line: 2510, column: 35, scope: !5164)
!5171 = !DILocation(line: 2511, column: 9, scope: !5164)
!5172 = !DILocation(line: 2511, column: 13, scope: !5164)
!5173 = !DILocation(line: 2511, column: 46, scope: !5164)
!5174 = !DILocation(line: 2508, column: 12, scope: !4936)
!5175 = !DILocation(line: 2512, column: 22, scope: !5164)
!5176 = !DILocation(line: 2512, column: 3, scope: !5164)
!5177 = !DILocation(line: 2514, column: 8, scope: !4936)
!5178 = !DILocation(line: 2514, column: 25, scope: !4936)
!5179 = !DILocation(line: 2514, column: 37, scope: !4936)
!5180 = !DILocation(line: 2515, column: 8, scope: !4936)
!5181 = !DILocation(line: 2515, column: 25, scope: !4936)
!5182 = !DILocation(line: 2515, column: 31, scope: !4936)
!5183 = !DILocation(line: 2516, column: 8, scope: !4936)
!5184 = !DILocation(line: 2516, column: 25, scope: !4936)
!5185 = !DILocation(line: 2516, column: 36, scope: !4936)
!5186 = !DILocation(line: 2519, column: 12, scope: !5187)
!5187 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 2519, column: 12)
!5188 = !DILocation(line: 2519, column: 36, scope: !5187)
!5189 = !DILocation(line: 2519, column: 44, scope: !5187)
!5190 = !DILocation(line: 2519, column: 41, scope: !5187)
!5191 = !DILocation(line: 2523, column: 29, scope: !5192)
!5192 = distinct !DILexicalBlock(scope: !5187, file: !3, line: 2520, column: 3)
!5193 = !DILocation(line: 2534, column: 9, scope: !5194)
!5194 = distinct !DILexicalBlock(scope: !5192, file: !3, line: 2534, column: 9)
!5195 = !DILocation(line: 2534, column: 28, scope: !5194)
!5196 = !DILocation(line: 2535, column: 9, scope: !5194)
!5197 = !DILocation(line: 2535, column: 13, scope: !5194)
!5198 = !DILocation(line: 2536, column: 6, scope: !5194)
!5199 = !DILocation(line: 2536, column: 11, scope: !5194)
!5200 = !DILocation(line: 2537, column: 9, scope: !5194)
!5201 = !DILocation(line: 2537, column: 12, scope: !5194)
!5202 = !DILocation(line: 2538, column: 9, scope: !5194)
!5203 = !DILocation(line: 2538, column: 34, scope: !5194)
!5204 = !DILocation(line: 2538, column: 12, scope: !5194)
!5205 = !DILocation(line: 2534, column: 9, scope: !5192)
!5206 = !DILocation(line: 2539, column: 7, scope: !5194)
!5207 = !DILocation(line: 2539, column: 24, scope: !5194)
!5208 = !DILocation(line: 2539, column: 32, scope: !5194)
!5209 = !DILocation(line: 2347, column: 12, scope: !4915)
!5210 = !DILocation(line: 2345, column: 7, scope: !4915)
!5211 = distinct !{!5211, !4998, !5212}
!5212 = !DILocation(line: 2542, column: 2, scope: !4916)
!5213 = !DILocation(line: 0, scope: !4918)
!5214 = distinct !{!5214, !4988, !5215}
!5215 = !DILocation(line: 2543, column: 5, scope: !4919)
!5216 = !DILocation(line: 2545, column: 8, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2545, column: 7)
!5218 = !DILocation(line: 2545, column: 7, scope: !4907)
!5219 = !DILocation(line: 2551, column: 15, scope: !4942)
!5220 = !DILocation(line: 2551, column: 8, scope: !4942)
!5221 = !DILocation(line: 0, scope: !4942)
!5222 = !DILocation(line: 2551, column: 3, scope: !4942)
!5223 = !DILocation(line: 2556, column: 13, scope: !5224)
!5224 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2556, column: 11)
!5225 = !DILocation(line: 2556, column: 11, scope: !4940)
!5226 = !DILocation(line: 2559, column: 13, scope: !4940)
!5227 = !DILocation(line: 0, scope: !4940)
!5228 = !DILocation(line: 2560, column: 13, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !4940, file: !3, line: 2560, column: 11)
!5230 = !DILocation(line: 2560, column: 11, scope: !4940)
!5231 = !DILocation(line: 2563, column: 14, scope: !4940)
!5232 = !DILocation(line: 2564, column: 13, scope: !4940)
!5233 = !DILocation(line: 2582, column: 11, scope: !4948)
!5234 = !DILocation(line: 2582, column: 24, scope: !4948)
!5235 = !DILocation(line: 2582, column: 27, scope: !4948)
!5236 = !DILocation(line: 2583, column: 4, scope: !4948)
!5237 = !DILocation(line: 2583, column: 16, scope: !4948)
!5238 = !DILocation(line: 2583, column: 29, scope: !4948)
!5239 = !DILocation(line: 2584, column: 4, scope: !4948)
!5240 = !DILocation(line: 2584, column: 7, scope: !4948)
!5241 = !DILocation(line: 2584, column: 31, scope: !4948)
!5242 = !DILocation(line: 2585, column: 4, scope: !4948)
!5243 = !DILocation(line: 2585, column: 7, scope: !4948)
!5244 = !DILocation(line: 2585, column: 32, scope: !4948)
!5245 = !DILocation(line: 2586, column: 4, scope: !4948)
!5246 = !DILocation(line: 2586, column: 7, scope: !4948)
!5247 = !DILocation(line: 2586, column: 24, scope: !4948)
!5248 = !DILocation(line: 2586, column: 35, scope: !4948)
!5249 = !DILocation(line: 2587, column: 4, scope: !4948)
!5250 = !DILocation(line: 2587, column: 38, scope: !4948)
!5251 = !DILocation(line: 2587, column: 35, scope: !4948)
!5252 = !DILocation(line: 2588, column: 4, scope: !4948)
!5253 = !DILocation(line: 2588, column: 24, scope: !4948)
!5254 = !DILocation(line: 2588, column: 9, scope: !4948)
!5255 = !DILocation(line: 2590, column: 4, scope: !4948)
!5256 = !DILocation(line: 2590, column: 32, scope: !4948)
!5257 = !DILocation(line: 2590, column: 9, scope: !4948)
!5258 = !DILocation(line: 2582, column: 11, scope: !4940)
!5259 = !DILocation(line: 2592, column: 20, scope: !4947)
!5260 = !DILocation(line: 0, scope: !4947)
!5261 = !DILocation(line: 2593, column: 8, scope: !5262)
!5262 = distinct !DILexicalBlock(scope: !4947, file: !3, line: 2593, column: 8)
!5263 = !DILocation(line: 2594, column: 8, scope: !5262)
!5264 = !DILocation(line: 2594, column: 13, scope: !5262)
!5265 = !DILocation(line: 2597, column: 8, scope: !5262)
!5266 = !DILocation(line: 2597, column: 54, scope: !5262)
!5267 = !DILocation(line: 2597, column: 11, scope: !5262)
!5268 = !DILocation(line: 2593, column: 8, scope: !4947)
!5269 = !DILocation(line: 2602, column: 5, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5262, file: !3, line: 2598, column: 6)
!5271 = !DILocation(line: 2601, column: 8, scope: !5270)
!5272 = !DILocation(line: 2602, column: 3, scope: !5270)
!5273 = !DILocation(line: 2603, column: 8, scope: !5270)
!5274 = !DILocation(line: 2604, column: 6, scope: !5270)
!5275 = !DILocation(line: 2551, column: 42, scope: !4941)
!5276 = !DILocation(line: 2551, column: 3, scope: !4941)
!5277 = distinct !{!5277, !5222, !5278}
!5278 = !DILocation(line: 2606, column: 5, scope: !4942)
!5279 = !DILocation(line: 2608, column: 18, scope: !4907)
!5280 = !DILocation(line: 2617, column: 3, scope: !4955)
!5281 = !DILocation(line: 2617, column: 3, scope: !4954)
!5282 = !DILocation(line: 0, scope: !4955)
!5283 = !DILocation(line: 2619, column: 24, scope: !4953)
!5284 = !DILocation(line: 2620, column: 19, scope: !4952)
!5285 = !DILocation(line: 0, scope: !4969)
!5286 = !DILocation(line: 2620, column: 12, scope: !4952)
!5287 = !DILocation(line: 2621, column: 13, scope: !4951)
!5288 = !DILocation(line: 0, scope: !4952)
!5289 = !DILocation(line: 2621, column: 10, scope: !4951)
!5290 = !DILocation(line: 2620, column: 7, scope: !4952)
!5291 = !DILocation(line: 2626, column: 10, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 2626, column: 8)
!5293 = !DILocation(line: 2626, column: 8, scope: !4950)
!5294 = !DILocation(line: 2630, column: 8, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 2630, column: 8)
!5296 = !DILocation(line: 2631, column: 8, scope: !5295)
!5297 = !DILocation(line: 2631, column: 11, scope: !5295)
!5298 = !DILocation(line: 2630, column: 8, scope: !4950)
!5299 = !DILocation(line: 2634, column: 16, scope: !4961)
!5300 = !DILocation(line: 0, scope: !4958)
!5301 = !DILocation(line: 0, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !4969, file: !3, line: 2728, column: 13)
!5303 = !DILocation(line: 2634, column: 9, scope: !4961)
!5304 = !DILocation(line: 0, scope: !4961)
!5305 = !DILocation(line: 0, scope: !4950)
!5306 = !DILocation(line: 2634, column: 4, scope: !4961)
!5307 = !DILocation(line: 2636, column: 12, scope: !4958)
!5308 = !DILocation(line: 2636, column: 33, scope: !4958)
!5309 = !DILocation(line: 2638, column: 5, scope: !4958)
!5310 = !DILocation(line: 2638, column: 25, scope: !4958)
!5311 = !DILocation(line: 2638, column: 41, scope: !4958)
!5312 = !DILocation(line: 2638, column: 8, scope: !4958)
!5313 = !DILocation(line: 2636, column: 12, scope: !4959)
!5314 = !DILocation(line: 2640, column: 17, scope: !4957)
!5315 = !DILocation(line: 0, scope: !4957)
!5316 = !DILocation(line: 2643, column: 11, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 2643, column: 9)
!5318 = !DILocation(line: 2643, column: 28, scope: !5317)
!5319 = !DILocation(line: 2644, column: 9, scope: !5317)
!5320 = !DILocation(line: 2644, column: 29, scope: !5317)
!5321 = !DILocation(line: 2644, column: 40, scope: !5317)
!5322 = !DILocation(line: 2643, column: 9, scope: !4957)
!5323 = !DILocation(line: 2652, column: 5, scope: !4957)
!5324 = !DILocation(line: 2654, column: 18, scope: !4957)
!5325 = !DILocation(line: 2659, column: 9, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !4957, file: !3, line: 2659, column: 9)
!5327 = !DILocation(line: 2659, column: 9, scope: !4957)
!5328 = !DILocation(line: 2662, column: 24, scope: !4965)
!5329 = !DILocation(line: 2662, column: 9, scope: !4965)
!5330 = !DILocation(line: 2662, column: 46, scope: !4965)
!5331 = !DILocation(line: 2663, column: 9, scope: !4965)
!5332 = !DILocation(line: 2663, column: 34, scope: !4965)
!5333 = !DILocation(line: 2664, column: 15, scope: !4965)
!5334 = !DILocation(line: 2664, column: 32, scope: !4965)
!5335 = !DILocation(line: 2664, column: 13, scope: !4965)
!5336 = !DILocation(line: 2663, column: 12, scope: !4965)
!5337 = !DILocation(line: 2662, column: 9, scope: !4957)
!5338 = !DILocation(line: 2671, column: 9, scope: !5339)
!5339 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 2671, column: 9)
!5340 = !DILocation(line: 0, scope: !5339)
!5341 = !DILocation(line: 0, scope: !4964)
!5342 = !DILocation(line: 2671, column: 32, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5339, file: !3, line: 2671, column: 9)
!5344 = !DILocation(line: 2671, column: 9, scope: !5343)
!5345 = distinct !{!5345, !5338, !5346}
!5346 = !DILocation(line: 2673, column: 4, scope: !5339)
!5347 = !DILocation(line: 2676, column: 22, scope: !4964)
!5348 = !DILocation(line: 2677, column: 9, scope: !4964)
!5349 = !DILocation(line: 2680, column: 19, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !4964, file: !3, line: 2678, column: 4)
!5351 = !DILocation(line: 2681, column: 10, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 2681, column: 10)
!5353 = !DILocation(line: 2681, column: 31, scope: !5352)
!5354 = !DILocation(line: 2681, column: 10, scope: !5350)
!5355 = !DILocation(line: 2683, column: 10, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5352, file: !3, line: 2682, column: 8)
!5357 = !DILocation(line: 2684, column: 10, scope: !5356)
!5358 = !DILocation(line: 2684, column: 30, scope: !5356)
!5359 = !DILocation(line: 2685, column: 25, scope: !5356)
!5360 = !DILocation(line: 2687, column: 8, scope: !5356)
!5361 = distinct !{!5361, !5348, !5362}
!5362 = !DILocation(line: 2688, column: 4, scope: !4964)
!5363 = !DILocation(line: 2690, column: 9, scope: !4964)
!5364 = !DILocation(line: 2691, column: 9, scope: !4964)
!5365 = !DILocation(line: 2692, column: 9, scope: !4964)
!5366 = !DILocation(line: 2692, column: 26, scope: !4964)
!5367 = !DILocation(line: 2693, column: 9, scope: !4964)
!5368 = !DILocation(line: 2696, column: 6, scope: !4964)
!5369 = !DILocation(line: 2696, column: 4, scope: !4964)
!5370 = !DILocation(line: 2698, column: 9, scope: !4964)
!5371 = !DILocation(line: 2698, column: 31, scope: !4964)
!5372 = !DILocation(line: 2699, column: 9, scope: !4964)
!5373 = !DILocation(line: 2700, column: 7, scope: !4964)
!5374 = !DILocation(line: 2703, column: 14, scope: !4970)
!5375 = !DILocation(line: 2703, column: 40, scope: !4970)
!5376 = !DILocation(line: 2703, column: 14, scope: !4965)
!5377 = !DILocation(line: 2707, column: 38, scope: !4969)
!5378 = !DILocation(line: 2707, column: 20, scope: !4969)
!5379 = !DILocation(line: 2708, column: 32, scope: !4969)
!5380 = !DILocation(line: 2708, column: 9, scope: !4969)
!5381 = !DILocation(line: 2708, column: 30, scope: !4969)
!5382 = !DILocation(line: 2709, column: 9, scope: !4969)
!5383 = !DILocation(line: 2709, column: 32, scope: !4969)
!5384 = !DILocation(line: 2711, column: 9, scope: !4969)
!5385 = !DILocation(line: 2716, column: 32, scope: !4969)
!5386 = !DILocation(line: 2716, column: 9, scope: !4969)
!5387 = !DILocation(line: 2716, column: 30, scope: !4969)
!5388 = !DILocation(line: 2718, column: 9, scope: !4969)
!5389 = !DILocation(line: 2720, column: 9, scope: !4969)
!5390 = !DILocation(line: 2720, column: 47, scope: !4969)
!5391 = !DILocation(line: 2722, column: 39, scope: !4969)
!5392 = !DILocation(line: 2722, column: 9, scope: !4969)
!5393 = !DILocation(line: 2722, column: 33, scope: !4969)
!5394 = !DILocation(line: 2723, column: 9, scope: !4969)
!5395 = !DILocation(line: 2723, column: 37, scope: !4969)
!5396 = !DILocation(line: 2724, column: 9, scope: !4969)
!5397 = !DILocation(line: 2724, column: 40, scope: !4969)
!5398 = !DILocation(line: 2725, column: 9, scope: !4969)
!5399 = !DILocation(line: 2725, column: 46, scope: !4969)
!5400 = !DILocation(line: 2726, column: 9, scope: !4969)
!5401 = !DILocation(line: 2726, column: 33, scope: !4969)
!5402 = !DILocation(line: 2728, column: 21, scope: !5302)
!5403 = !DILocation(line: 2728, column: 18, scope: !5302)
!5404 = !DILocation(line: 2728, column: 13, scope: !4969)
!5405 = !DILocation(line: 2729, column: 19, scope: !5302)
!5406 = !DILocation(line: 2729, column: 17, scope: !5302)
!5407 = !DILocation(line: 2729, column: 4, scope: !5302)
!5408 = !DILocation(line: 2732, column: 6, scope: !4969)
!5409 = !DILocation(line: 2731, column: 9, scope: !4969)
!5410 = !DILocation(line: 2732, column: 4, scope: !4969)
!5411 = !DILocation(line: 2733, column: 9, scope: !4969)
!5412 = !DILocation(line: 2734, column: 7, scope: !4969)
!5413 = !DILocation(line: 2634, column: 47, scope: !4960)
!5414 = !DILocation(line: 2634, column: 4, scope: !4960)
!5415 = distinct !{!5415, !5306, !5416}
!5416 = !DILocation(line: 2736, column: 6, scope: !4961)
!5417 = !DILocation(line: 2622, column: 12, scope: !4951)
!5418 = !DILocation(line: 2620, column: 7, scope: !4951)
!5419 = distinct !{!5419, !5290, !5420}
!5420 = !DILocation(line: 2737, column: 2, scope: !4952)
!5421 = !DILocation(line: 0, scope: !4954)
!5422 = distinct !{!5422, !5280, !5423}
!5423 = !DILocation(line: 2738, column: 5, scope: !4955)
!5424 = !DILocation(line: 2740, column: 8, scope: !4978)
!5425 = !DILocation(line: 2740, column: 7, scope: !4907)
!5426 = !DILocation(line: 2742, column: 7, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !4977, file: !3, line: 2742, column: 7)
!5428 = !DILocation(line: 2742, column: 7, scope: !5429)
!5429 = distinct !DILexicalBlock(scope: !5427, file: !3, line: 2742, column: 7)
!5430 = !DILocation(line: 0, scope: !5427)
!5431 = !DILocation(line: 2744, column: 27, scope: !5432)
!5432 = distinct !DILexicalBlock(scope: !5429, file: !3, line: 2743, column: 2)
!5433 = !DILocation(line: 2744, column: 4, scope: !5432)
!5434 = !DILocation(line: 2745, column: 27, scope: !5432)
!5435 = !DILocation(line: 2745, column: 4, scope: !5432)
!5436 = !DILocation(line: 2746, column: 27, scope: !5432)
!5437 = !DILocation(line: 2746, column: 4, scope: !5432)
!5438 = !DILocation(line: 2747, column: 27, scope: !5432)
!5439 = !DILocation(line: 2747, column: 4, scope: !5432)
!5440 = !DILocation(line: 0, scope: !5429)
!5441 = distinct !{!5441, !5426, !5442}
!5442 = !DILocation(line: 2748, column: 2, scope: !5427)
!5443 = !DILocation(line: 2751, column: 11, scope: !4976)
!5444 = !DILocation(line: 2751, column: 11, scope: !4977)
!5445 = !DILocation(line: 2752, column: 14, scope: !4975)
!5446 = !DILocation(line: 0, scope: !4972)
!5447 = !DILocation(line: 2752, column: 7, scope: !4975)
!5448 = !DILocation(line: 0, scope: !4975)
!5449 = !DILocation(line: 2752, column: 2, scope: !4975)
!5450 = !DILocation(line: 2753, column: 8, scope: !4973)
!5451 = !DILocation(line: 2753, column: 8, scope: !4974)
!5452 = !DILocation(line: 2755, column: 22, scope: !4972)
!5453 = !DILocation(line: 2757, column: 5, scope: !4972)
!5454 = !DILocation(line: 2756, column: 8, scope: !4972)
!5455 = !DILocation(line: 2757, column: 3, scope: !4972)
!5456 = !DILocation(line: 2760, column: 23, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 2760, column: 12)
!5458 = !DILocation(line: 2760, column: 20, scope: !5457)
!5459 = !DILocation(line: 2760, column: 12, scope: !4972)
!5460 = !DILocation(line: 2761, column: 3, scope: !5457)
!5461 = !DILocation(line: 2752, column: 41, scope: !4974)
!5462 = !DILocation(line: 2752, column: 2, scope: !4974)
!5463 = distinct !{!5463, !5449, !5464}
!5464 = !DILocation(line: 2762, column: 6, scope: !4975)
!5465 = !DILocation(line: 2765, column: 3, scope: !4907)
!5466 = !DILocation(line: 2767, column: 3, scope: !4907)
!5467 = !DILocation(line: 2770, column: 3, scope: !4907)
!5468 = !DILocation(line: 2771, column: 9, scope: !4907)
!5469 = !DILocation(line: 2771, column: 3, scope: !4907)
!5470 = !DILocation(line: 2772, column: 10, scope: !4907)
!5471 = !DILocation(line: 2772, column: 3, scope: !4907)
!5472 = distinct !DISubprogram(name: "find_reg_equiv_invariant_const", scope: !3, file: !3, line: 1528, type: !2144, scopeLine: 1529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5473)
!5473 = !{!5474, !5475, !5476, !5477, !5478, !5479, !5480}
!5474 = !DILocalVariable(name: "i", scope: !5472, file: !3, line: 1530, type: !849)
!5475 = !DILocalVariable(name: "invariant_p", scope: !5472, file: !3, line: 1531, type: !848)
!5476 = !DILocalVariable(name: "list", scope: !5472, file: !3, line: 1532, type: !939)
!5477 = !DILocalVariable(name: "insn", scope: !5472, file: !3, line: 1532, type: !939)
!5478 = !DILocalVariable(name: "note", scope: !5472, file: !3, line: 1532, type: !939)
!5479 = !DILocalVariable(name: "constant", scope: !5472, file: !3, line: 1532, type: !939)
!5480 = !DILocalVariable(name: "x", scope: !5472, file: !3, line: 1532, type: !939)
!5481 = !DILocation(line: 0, scope: !5472)
!5482 = !DILocation(line: 1534, column: 8, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5472, file: !3, line: 1534, column: 3)
!5484 = !DILocation(line: 0, scope: !5483)
!5485 = !DILocation(line: 1534, column: 39, scope: !5486)
!5486 = distinct !DILexicalBlock(scope: !5483, file: !3, line: 1534, column: 3)
!5487 = !DILocation(line: 1534, column: 37, scope: !5486)
!5488 = !DILocation(line: 1534, column: 3, scope: !5483)
!5489 = !DILocation(line: 1538, column: 19, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5491, file: !3, line: 1538, column: 7)
!5491 = distinct !DILexicalBlock(scope: !5486, file: !3, line: 1535, column: 5)
!5492 = !DILocation(line: 1538, column: 12, scope: !5490)
!5493 = !DILocation(line: 1536, column: 16, scope: !5491)
!5494 = !DILocation(line: 1537, column: 19, scope: !5491)
!5495 = !DILocation(line: 0, scope: !5490)
!5496 = !DILocation(line: 1538, column: 43, scope: !5497)
!5497 = distinct !DILexicalBlock(scope: !5490, file: !3, line: 1538, column: 7)
!5498 = !DILocation(line: 1538, column: 7, scope: !5490)
!5499 = !DILocation(line: 1540, column: 11, scope: !5500)
!5500 = distinct !DILexicalBlock(scope: !5497, file: !3, line: 1539, column: 2)
!5501 = !DILocation(line: 1541, column: 11, scope: !5500)
!5502 = !DILocation(line: 1543, column: 13, scope: !5503)
!5503 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 1543, column: 8)
!5504 = !DILocation(line: 1543, column: 8, scope: !5500)
!5505 = !DILocation(line: 1546, column: 8, scope: !5500)
!5506 = !DILocation(line: 1548, column: 10, scope: !5507)
!5507 = distinct !DILexicalBlock(scope: !5500, file: !3, line: 1548, column: 8)
!5508 = !DILocation(line: 1549, column: 13, scope: !5507)
!5509 = !DILocation(line: 1549, column: 8, scope: !5507)
!5510 = !DILocation(line: 1553, column: 12, scope: !5507)
!5511 = !DILocation(line: 1553, column: 27, scope: !5507)
!5512 = !DILocation(line: 1553, column: 30, scope: !5507)
!5513 = !DILocation(line: 1548, column: 8, scope: !5500)
!5514 = !DILocation(line: 1560, column: 12, scope: !5515)
!5515 = distinct !DILexicalBlock(scope: !5516, file: !3, line: 1560, column: 12)
!5516 = distinct !DILexicalBlock(scope: !5507, file: !3, line: 1554, column: 6)
!5517 = !DILocation(line: 1560, column: 12, scope: !5516)
!5518 = !DILocation(line: 1561, column: 17, scope: !5515)
!5519 = !DILocation(line: 1561, column: 3, scope: !5515)
!5520 = !DILocation(line: 1562, column: 17, scope: !5521)
!5521 = distinct !DILexicalBlock(scope: !5515, file: !3, line: 1562, column: 17)
!5522 = !DILocation(line: 1562, column: 17, scope: !5515)
!5523 = !DILocation(line: 1564, column: 9, scope: !5524)
!5524 = distinct !DILexicalBlock(scope: !5525, file: !3, line: 1564, column: 9)
!5525 = distinct !DILexicalBlock(scope: !5521, file: !3, line: 1563, column: 3)
!5526 = !DILocation(line: 1564, column: 22, scope: !5524)
!5527 = !DILocation(line: 1565, column: 17, scope: !5524)
!5528 = !DILocation(line: 1565, column: 14, scope: !5524)
!5529 = !DILocation(line: 1565, column: 9, scope: !5524)
!5530 = !DILocation(line: 1565, column: 43, scope: !5524)
!5531 = !DILocation(line: 1565, column: 40, scope: !5524)
!5532 = !DILocation(line: 0, scope: !5491)
!5533 = !DILocation(line: 1538, column: 63, scope: !5497)
!5534 = !DILocation(line: 1538, column: 7, scope: !5497)
!5535 = distinct !{!5535, !5498, !5536}
!5536 = !DILocation(line: 1571, column: 2, scope: !5490)
!5537 = !DILocation(line: 1572, column: 7, scope: !5491)
!5538 = !DILocation(line: 1572, column: 36, scope: !5491)
!5539 = !DILocation(line: 1573, column: 7, scope: !5491)
!5540 = !DILocation(line: 1573, column: 30, scope: !5491)
!5541 = !DILocation(line: 1534, column: 61, scope: !5486)
!5542 = !DILocation(line: 1534, column: 3, scope: !5486)
!5543 = distinct !{!5543, !5488, !5544}
!5544 = !DILocation(line: 1574, column: 5, scope: !5483)
!5545 = !DILocation(line: 1575, column: 1, scope: !5472)
!5546 = distinct !DISubprogram(name: "too_high_register_pressure_p", scope: !3, file: !3, line: 1866, type: !2172, scopeLine: 1867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5547)
!5547 = !{!5548, !5549}
!5548 = !DILocalVariable(name: "i", scope: !5546, file: !3, line: 1868, type: !849)
!5549 = !DILocalVariable(name: "cover_class", scope: !5546, file: !3, line: 1869, type: !397)
!5550 = !DILocation(line: 0, scope: !5546)
!5551 = !DILocation(line: 0, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5553, file: !3, line: 1871, column: 3)
!5553 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 1871, column: 3)
!5554 = !DILocation(line: 0, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 1874, column: 11)
!5556 = distinct !DILexicalBlock(scope: !5552, file: !3, line: 1872, column: 5)
!5557 = !DILocation(line: 1871, column: 8, scope: !5553)
!5558 = !DILocation(line: 0, scope: !5553)
!5559 = !DILocation(line: 1871, column: 17, scope: !5552)
!5560 = !DILocation(line: 1871, column: 3, scope: !5553)
!5561 = !DILocation(line: 1873, column: 21, scope: !5556)
!5562 = !DILocation(line: 1874, column: 11, scope: !5555)
!5563 = !DILocation(line: 1874, column: 57, scope: !5555)
!5564 = !DILocation(line: 1874, column: 11, scope: !5556)
!5565 = !DILocation(line: 1871, column: 46, scope: !5552)
!5566 = !DILocation(line: 1871, column: 3, scope: !5552)
!5567 = distinct !{!5567, !5560, !5568}
!5568 = !DILocation(line: 1876, column: 5, scope: !5553)
!5569 = !DILocation(line: 1878, column: 1, scope: !5546)
!5570 = distinct !DISubprogram(name: "expand_reg_info", scope: !3, file: !3, line: 1853, type: !5571, scopeLine: 1854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5573)
!5571 = !DISubroutineType(types: !5572)
!5572 = !{null, !849}
!5573 = !{!5574, !5575, !5576}
!5574 = !DILocalVariable(name: "old_size", arg: 1, scope: !5570, file: !3, line: 1853, type: !849)
!5575 = !DILocalVariable(name: "i", scope: !5570, file: !3, line: 1855, type: !849)
!5576 = !DILocalVariable(name: "size", scope: !5570, file: !3, line: 1856, type: !849)
!5577 = !DILocation(line: 0, scope: !5570)
!5578 = !DILocation(line: 1856, column: 14, scope: !5570)
!5579 = !DILocation(line: 1858, column: 3, scope: !5570)
!5580 = !DILocation(line: 1859, column: 8, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 1859, column: 3)
!5582 = !DILocation(line: 0, scope: !5581)
!5583 = !DILocation(line: 1859, column: 24, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 1859, column: 3)
!5585 = !DILocation(line: 1859, column: 3, scope: !5581)
!5586 = !DILocation(line: 1860, column: 5, scope: !5584)
!5587 = !DILocation(line: 1859, column: 33, scope: !5584)
!5588 = !DILocation(line: 1859, column: 3, scope: !5584)
!5589 = distinct !{!5589, !5585, !5590}
!5590 = !DILocation(line: 1860, column: 63, scope: !5581)
!5591 = !DILocation(line: 1861, column: 1, scope: !5570)
!5592 = distinct !DISubprogram(name: "setup_preferred_alternate_classes_for_new_pseudos", scope: !3, file: !3, line: 1828, type: !5571, scopeLine: 1829, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5593)
!5593 = !{!5594, !5595, !5596, !5597}
!5594 = !DILocalVariable(name: "start", arg: 1, scope: !5592, file: !3, line: 1828, type: !849)
!5595 = !DILocalVariable(name: "i", scope: !5592, file: !3, line: 1830, type: !849)
!5596 = !DILocalVariable(name: "old_regno", scope: !5592, file: !3, line: 1830, type: !849)
!5597 = !DILocalVariable(name: "max_regno", scope: !5592, file: !3, line: 1831, type: !849)
!5598 = !DILocation(line: 0, scope: !5592)
!5599 = !DILocation(line: 1831, column: 19, scope: !5592)
!5600 = !DILocation(line: 1833, column: 8, scope: !5601)
!5601 = distinct !DILexicalBlock(scope: !5592, file: !3, line: 1833, column: 3)
!5602 = !DILocation(line: 0, scope: !5601)
!5603 = !DILocation(line: 1833, column: 21, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5601, file: !3, line: 1833, column: 3)
!5605 = !DILocation(line: 1833, column: 3, scope: !5601)
!5606 = !DILocation(line: 1835, column: 19, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5604, file: !3, line: 1834, column: 5)
!5608 = !DILocation(line: 1837, column: 29, scope: !5607)
!5609 = !DILocation(line: 1838, column: 5, scope: !5607)
!5610 = !DILocation(line: 1839, column: 5, scope: !5607)
!5611 = !DILocation(line: 1837, column: 7, scope: !5607)
!5612 = !DILocation(line: 1840, column: 11, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5607, file: !3, line: 1840, column: 11)
!5614 = !DILocation(line: 1840, column: 37, scope: !5613)
!5615 = !DILocation(line: 1840, column: 44, scope: !5613)
!5616 = !DILocation(line: 1840, column: 58, scope: !5613)
!5617 = !DILocation(line: 1840, column: 41, scope: !5613)
!5618 = !DILocation(line: 1843, column: 23, scope: !5613)
!5619 = !DILocation(line: 1843, column: 7, scope: !5613)
!5620 = !DILocation(line: 1844, column: 20, scope: !5613)
!5621 = !DILocation(line: 1844, column: 4, scope: !5613)
!5622 = !DILocation(line: 1841, column: 2, scope: !5613)
!5623 = !DILocation(line: 1833, column: 35, scope: !5604)
!5624 = !DILocation(line: 1833, column: 3, scope: !5604)
!5625 = distinct !{!5625, !5605, !5626}
!5626 = !DILocation(line: 1845, column: 5, scope: !5601)
!5627 = !DILocation(line: 1846, column: 1, scope: !5592)
!5628 = distinct !DISubprogram(name: "setup_allocno_assignment_flags", scope: !3, file: !3, line: 1625, type: !2144, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5629)
!5629 = !{!5630, !5631, !5632}
!5630 = !DILocalVariable(name: "hard_regno", scope: !5628, file: !3, line: 1627, type: !849)
!5631 = !DILocalVariable(name: "a", scope: !5628, file: !3, line: 1628, type: !2868)
!5632 = !DILocalVariable(name: "ai", scope: !5628, file: !3, line: 1629, type: !5633)
!5633 = !DIDerivedType(tag: DW_TAG_typedef, name: "ira_allocno_iterator", file: !2105, line: 935, baseType: !5634)
!5634 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2105, line: 932, size: 32, elements: !5635)
!5635 = !{!5636}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !5634, file: !2105, line: 934, baseType: !849, size: 32)
!5637 = !DILocation(line: 1628, column: 3, scope: !5628)
!5638 = !DILocation(line: 1629, column: 3, scope: !5628)
!5639 = !DILocation(line: 0, scope: !5628)
!5640 = !DILocation(line: 1631, column: 3, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5628, file: !3, line: 1631, column: 3)
!5642 = !DILocation(line: 1631, column: 3, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 1631, column: 3)
!5644 = !DILocation(line: 1633, column: 13, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5646, file: !3, line: 1633, column: 11)
!5646 = distinct !DILexicalBlock(scope: !5643, file: !3, line: 1632, column: 5)
!5647 = !DILocation(line: 1633, column: 11, scope: !5646)
!5648 = !DILocation(line: 1636, column: 2, scope: !5645)
!5649 = !DILocation(line: 1637, column: 20, scope: !5646)
!5650 = !DILocation(line: 1644, column: 44, scope: !5646)
!5651 = !DILocation(line: 1645, column: 5, scope: !5646)
!5652 = !DILocation(line: 0, scope: !5646)
!5653 = !DILocation(line: 1644, column: 30, scope: !5646)
!5654 = !DILocation(line: 1645, column: 8, scope: !5646)
!5655 = !DILocation(line: 1646, column: 5, scope: !5646)
!5656 = !DILocation(line: 1646, column: 9, scope: !5646)
!5657 = !DILocation(line: 1647, column: 11, scope: !5646)
!5658 = !DILocation(line: 1647, column: 41, scope: !5646)
!5659 = !DILocation(line: 1644, column: 7, scope: !5646)
!5660 = distinct !{!5660, !5640, !5661}
!5661 = !DILocation(line: 1652, column: 5, scope: !5641)
!5662 = !DILocation(line: 1653, column: 1, scope: !5628)
!5663 = distinct !DISubprogram(name: "setup_reg_renumber", scope: !3, file: !3, line: 1590, type: !2144, scopeLine: 1591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5664)
!5664 = !{!5665, !5666, !5667, !5668}
!5665 = !DILocalVariable(name: "regno", scope: !5663, file: !3, line: 1592, type: !849)
!5666 = !DILocalVariable(name: "hard_regno", scope: !5663, file: !3, line: 1592, type: !849)
!5667 = !DILocalVariable(name: "a", scope: !5663, file: !3, line: 1593, type: !2868)
!5668 = !DILocalVariable(name: "ai", scope: !5663, file: !3, line: 1594, type: !5633)
!5669 = !DILocation(line: 1593, column: 3, scope: !5663)
!5670 = !DILocation(line: 1594, column: 3, scope: !5663)
!5671 = !DILocation(line: 1596, column: 22, scope: !5663)
!5672 = !DILocation(line: 0, scope: !5663)
!5673 = !DILocation(line: 1597, column: 3, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 1597, column: 3)
!5675 = !DILocation(line: 1597, column: 3, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5674, file: !3, line: 1597, column: 3)
!5677 = !DILocation(line: 1601, column: 13, scope: !5678)
!5678 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 1601, column: 11)
!5679 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 1598, column: 5)
!5680 = !DILocation(line: 1601, column: 11, scope: !5679)
!5681 = !DILocation(line: 1604, column: 25, scope: !5678)
!5682 = !DILocation(line: 1604, column: 2, scope: !5678)
!5683 = !DILocation(line: 1605, column: 7, scope: !5679)
!5684 = !DILocation(line: 1606, column: 20, scope: !5679)
!5685 = !DILocation(line: 1607, column: 21, scope: !5679)
!5686 = !DILocation(line: 1608, column: 41, scope: !5679)
!5687 = !DILocation(line: 1608, column: 30, scope: !5679)
!5688 = !DILocation(line: 1608, column: 29, scope: !5679)
!5689 = !DILocation(line: 1608, column: 7, scope: !5679)
!5690 = !DILocation(line: 1608, column: 27, scope: !5679)
!5691 = !DILocation(line: 1609, column: 27, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5679, file: !3, line: 1609, column: 11)
!5693 = !DILocation(line: 1609, column: 30, scope: !5692)
!5694 = !DILocation(line: 1609, column: 60, scope: !5692)
!5695 = !DILocation(line: 1610, column: 4, scope: !5692)
!5696 = !DILocation(line: 1610, column: 48, scope: !5692)
!5697 = !DILocation(line: 1611, column: 8, scope: !5692)
!5698 = !DILocation(line: 1610, column: 9, scope: !5692)
!5699 = !DILocation(line: 1609, column: 11, scope: !5679)
!5700 = !DILocation(line: 1617, column: 23, scope: !5701)
!5701 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 1612, column: 2)
!5702 = !DILocation(line: 1618, column: 2, scope: !5701)
!5703 = distinct !{!5703, !5673, !5704}
!5704 = !DILocation(line: 1619, column: 5, scope: !5674)
!5705 = !DILocation(line: 1620, column: 1, scope: !5663)
!5706 = distinct !DISubprogram(name: "calculate_allocation_cost", scope: !3, file: !3, line: 1658, type: !2144, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5707)
!5707 = !{!5708, !5709, !5710, !5711}
!5708 = !DILocalVariable(name: "hard_regno", scope: !5706, file: !3, line: 1660, type: !849)
!5709 = !DILocalVariable(name: "cost", scope: !5706, file: !3, line: 1660, type: !849)
!5710 = !DILocalVariable(name: "a", scope: !5706, file: !3, line: 1661, type: !2868)
!5711 = !DILocalVariable(name: "ai", scope: !5706, file: !3, line: 1662, type: !5633)
!5712 = !DILocation(line: 1661, column: 3, scope: !5706)
!5713 = !DILocation(line: 1662, column: 3, scope: !5706)
!5714 = !DILocation(line: 1664, column: 50, scope: !5706)
!5715 = !DILocation(line: 1664, column: 35, scope: !5706)
!5716 = !DILocation(line: 1664, column: 20, scope: !5706)
!5717 = !DILocation(line: 0, scope: !5706)
!5718 = !DILocation(line: 1665, column: 3, scope: !5719)
!5719 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1665, column: 3)
!5720 = !DILocation(line: 1665, column: 3, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 1665, column: 3)
!5722 = !DILocation(line: 1667, column: 20, scope: !5723)
!5723 = distinct !DILexicalBlock(scope: !5721, file: !3, line: 1666, column: 5)
!5724 = !DILocation(line: 1672, column: 22, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5723, file: !3, line: 1672, column: 11)
!5726 = !DILocation(line: 1672, column: 11, scope: !5723)
!5727 = !DILocation(line: 1674, column: 11, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 1673, column: 2)
!5729 = !DILocation(line: 1675, column: 17, scope: !5728)
!5730 = !DILocation(line: 1676, column: 2, scope: !5728)
!5731 = !DILocation(line: 1677, column: 16, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5725, file: !3, line: 1677, column: 16)
!5733 = !DILocation(line: 1677, column: 43, scope: !5732)
!5734 = !DILocation(line: 1677, column: 16, scope: !5725)
!5735 = !DILocation(line: 1681, column: 7, scope: !5736)
!5736 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 1678, column: 2)
!5737 = !DILocation(line: 1680, column: 6, scope: !5736)
!5738 = !DILocation(line: 1679, column: 12, scope: !5736)
!5739 = !DILocation(line: 1682, column: 17, scope: !5736)
!5740 = !DILocation(line: 1683, column: 2, scope: !5736)
!5741 = !DILocation(line: 1686, column: 11, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 1685, column: 2)
!5743 = !DILocation(line: 1687, column: 17, scope: !5742)
!5744 = !DILocation(line: 0, scope: !5725)
!5745 = !DILocation(line: 1689, column: 24, scope: !5723)
!5746 = distinct !{!5746, !5718, !5747}
!5747 = !DILocation(line: 1690, column: 5, scope: !5719)
!5748 = !DILocation(line: 1692, column: 7, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5706, file: !3, line: 1692, column: 7)
!5750 = !DILocation(line: 1692, column: 33, scope: !5749)
!5751 = !DILocation(line: 1692, column: 40, scope: !5749)
!5752 = !DILocation(line: 1692, column: 54, scope: !5749)
!5753 = !DILocation(line: 1692, column: 37, scope: !5749)
!5754 = !DILocation(line: 1696, column: 9, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 1693, column: 5)
!5756 = !DILocation(line: 1696, column: 27, scope: !5755)
!5757 = !DILocation(line: 1696, column: 41, scope: !5755)
!5758 = !DILocation(line: 1697, column: 9, scope: !5755)
!5759 = !DILocation(line: 1697, column: 24, scope: !5755)
!5760 = !DILocation(line: 1697, column: 40, scope: !5755)
!5761 = !DILocation(line: 1694, column: 7, scope: !5755)
!5762 = !DILocation(line: 1698, column: 16, scope: !5755)
!5763 = !DILocation(line: 1699, column: 9, scope: !5755)
!5764 = !DILocation(line: 1699, column: 29, scope: !5755)
!5765 = !DILocation(line: 1698, column: 7, scope: !5755)
!5766 = !DILocation(line: 1700, column: 5, scope: !5755)
!5767 = !DILocation(line: 1702, column: 1, scope: !5706)
!5768 = distinct !DISubprogram(name: "VEC_rtx_gc_safe_grow", scope: !670, file: !670, line: 202, type: !5769, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5772)
!5769 = !DISubroutineType(types: !5770)
!5770 = !{null, !5771, !849}
!5771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!5772 = !{!5773, !5774}
!5773 = !DILocalVariable(name: "vec_", arg: 1, scope: !5768, file: !670, line: 202, type: !5771)
!5774 = !DILocalVariable(name: "size_", arg: 2, scope: !5768, file: !670, line: 202, type: !849)
!5775 = !DILocation(line: 0, scope: !5768)
!5776 = !DILocation(line: 202, column: 1, scope: !5768)
!5777 = distinct !DISubprogram(name: "VEC_rtx_base_address", scope: !670, file: !670, line: 200, type: !5778, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5781)
!5778 = !DISubroutineType(types: !5779)
!5779 = !{!938, !5780}
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2093, size: 64)
!5781 = !{!5782}
!5782 = !DILocalVariable(name: "vec_", arg: 1, scope: !5777, file: !670, line: 200, type: !5780)
!5783 = !DILocation(line: 0, scope: !5777)
!5784 = !DILocation(line: 200, column: 1, scope: !5777)
!5785 = distinct !DISubprogram(name: "fix_reg_equiv_init", scope: !3, file: !3, line: 1745, type: !2144, scopeLine: 1746, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5786)
!5786 = !{!5787, !5788, !5789, !5790, !5791, !5792, !5793, !5794}
!5787 = !DILocalVariable(name: "max_regno", scope: !5785, file: !3, line: 1747, type: !849)
!5788 = !DILocalVariable(name: "i", scope: !5785, file: !3, line: 1748, type: !849)
!5789 = !DILocalVariable(name: "new_regno", scope: !5785, file: !3, line: 1748, type: !849)
!5790 = !DILocalVariable(name: "x", scope: !5785, file: !3, line: 1749, type: !939)
!5791 = !DILocalVariable(name: "prev", scope: !5785, file: !3, line: 1749, type: !939)
!5792 = !DILocalVariable(name: "next", scope: !5785, file: !3, line: 1749, type: !939)
!5793 = !DILocalVariable(name: "insn", scope: !5785, file: !3, line: 1749, type: !939)
!5794 = !DILocalVariable(name: "set", scope: !5785, file: !3, line: 1749, type: !939)
!5795 = !DILocation(line: 1747, column: 19, scope: !5785)
!5796 = !DILocation(line: 0, scope: !5785)
!5797 = !DILocation(line: 1751, column: 7, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 1751, column: 7)
!5799 = !DILocation(line: 1751, column: 27, scope: !5798)
!5800 = !DILocation(line: 1751, column: 7, scope: !5785)
!5801 = !DILocation(line: 1754, column: 12, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5798, file: !3, line: 1752, column: 5)
!5803 = !DILocation(line: 1754, column: 2, scope: !5802)
!5804 = !DILocation(line: 1755, column: 7, scope: !5802)
!5805 = !DILocation(line: 1755, column: 14, scope: !5802)
!5806 = !DILocation(line: 1755, column: 34, scope: !5802)
!5807 = !DILocation(line: 1757, column: 7, scope: !5808)
!5808 = distinct !DILexicalBlock(scope: !5802, file: !3, line: 1757, column: 7)
!5809 = !DILocation(line: 1756, column: 2, scope: !5802)
!5810 = !DILocation(line: 1756, column: 36, scope: !5802)
!5811 = !DILocation(line: 1756, column: 40, scope: !5802)
!5812 = distinct !{!5812, !5804, !5813}
!5813 = !DILocation(line: 1756, column: 42, scope: !5802)
!5814 = !DILocation(line: 1757, column: 43, scope: !5815)
!5815 = distinct !DILexicalBlock(scope: !5808, file: !3, line: 1757, column: 7)
!5816 = !DILocation(line: 1757, column: 41, scope: !5815)
!5817 = !DILocation(line: 1758, column: 28, scope: !5818)
!5818 = distinct !DILexicalBlock(scope: !5815, file: !3, line: 1758, column: 2)
!5819 = !DILocation(line: 1758, column: 7, scope: !5818)
!5820 = !DILocation(line: 0, scope: !5818)
!5821 = !DILocation(line: 1758, column: 49, scope: !5822)
!5822 = distinct !DILexicalBlock(scope: !5818, file: !3, line: 1758, column: 2)
!5823 = !DILocation(line: 1758, column: 2, scope: !5818)
!5824 = !DILocation(line: 1760, column: 13, scope: !5825)
!5825 = distinct !DILexicalBlock(scope: !5822, file: !3, line: 1759, column: 4)
!5826 = !DILocation(line: 1761, column: 13, scope: !5825)
!5827 = !DILocation(line: 1762, column: 12, scope: !5825)
!5828 = !DILocation(line: 1765, column: 10, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1765, column: 10)
!5830 = !DILocation(line: 1766, column: 3, scope: !5829)
!5831 = !DILocation(line: 1766, column: 13, scope: !5829)
!5832 = !DILocation(line: 1766, column: 36, scope: !5829)
!5833 = !DILocation(line: 1767, column: 7, scope: !5829)
!5834 = !DILocation(line: 1768, column: 20, scope: !5829)
!5835 = !DILocation(line: 1767, column: 16, scope: !5829)
!5836 = !DILocation(line: 1767, column: 48, scope: !5829)
!5837 = !DILocation(line: 1765, column: 10, scope: !5825)
!5838 = !DILocation(line: 1768, column: 8, scope: !5829)
!5839 = !DILocation(line: 1769, column: 15, scope: !5840)
!5840 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 1769, column: 15)
!5841 = !DILocation(line: 1770, column: 8, scope: !5840)
!5842 = !DILocation(line: 1770, column: 18, scope: !5840)
!5843 = !DILocation(line: 1770, column: 40, scope: !5840)
!5844 = !DILocation(line: 1771, column: 5, scope: !5840)
!5845 = !DILocation(line: 1772, column: 20, scope: !5840)
!5846 = !DILocation(line: 1771, column: 14, scope: !5840)
!5847 = !DILocation(line: 1771, column: 45, scope: !5840)
!5848 = !DILocation(line: 1769, column: 15, scope: !5829)
!5849 = !DILocation(line: 1772, column: 8, scope: !5840)
!5850 = !DILocation(line: 1774, column: 9, scope: !5840)
!5851 = !DILocation(line: 0, scope: !5829)
!5852 = !DILocation(line: 1775, column: 20, scope: !5853)
!5853 = distinct !DILexicalBlock(scope: !5825, file: !3, line: 1775, column: 10)
!5854 = !DILocation(line: 1775, column: 10, scope: !5825)
!5855 = !DILocation(line: 1779, column: 12, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 1779, column: 7)
!5857 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 1778, column: 8)
!5858 = !DILocation(line: 1779, column: 7, scope: !5857)
!5859 = !DILocation(line: 1780, column: 5, scope: !5856)
!5860 = !DILocation(line: 1780, column: 23, scope: !5856)
!5861 = !DILocation(line: 1782, column: 5, scope: !5856)
!5862 = !DILocation(line: 1782, column: 20, scope: !5856)
!5863 = !DILocation(line: 1783, column: 17, scope: !5857)
!5864 = !DILocation(line: 1783, column: 15, scope: !5857)
!5865 = !DILocation(line: 1784, column: 29, scope: !5857)
!5866 = !DILocation(line: 1758, column: 2, scope: !5822)
!5867 = distinct !{!5867, !5823, !5868}
!5868 = !DILocation(line: 1786, column: 4, scope: !5818)
!5869 = !DILocation(line: 1757, column: 65, scope: !5815)
!5870 = !DILocation(line: 1757, column: 7, scope: !5815)
!5871 = distinct !{!5871, !5807, !5872}
!5872 = !DILocation(line: 1786, column: 4, scope: !5808)
!5873 = !DILocation(line: 1788, column: 1, scope: !5785)
!5874 = distinct !DISubprogram(name: "build_insn_chain", scope: !3, file: !3, line: 2841, type: !2144, scopeLine: 2842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !5875)
!5875 = !{!5876, !5877, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5917, !5918, !5924, !5925, !5926, !5931, !5932, !5935, !5938, !5939, !5944, !5945, !5946, !5951}
!5876 = !DILocalVariable(name: "i", scope: !5874, file: !3, line: 2843, type: !7)
!5877 = !DILocalVariable(name: "p", scope: !5874, file: !3, line: 2844, type: !5878)
!5878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5879, size: 64)
!5879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5880, size: 64)
!5880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "insn_chain", file: !5881, line: 200, size: 1024, elements: !5882)
!5881 = !DIFile(filename: "./reload.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!5882 = !{!5883, !5884, !5885, !5886, !5887, !5888, !5889, !5890, !5891, !5892, !5893, !5894, !5897, !5898}
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5880, file: !5881, line: 203, baseType: !5879, size: 64)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5880, file: !5881, line: 203, baseType: !5879, size: 64, offset: 64)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "next_need_reload", scope: !5880, file: !5881, line: 207, baseType: !5879, size: 64, offset: 128)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !5880, file: !5881, line: 210, baseType: !939, size: 64, offset: 192)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5880, file: !5881, line: 213, baseType: !849, size: 32, offset: 256)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "need_reload", scope: !5880, file: !5881, line: 216, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "need_operand_change", scope: !5880, file: !5881, line: 219, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "need_elim", scope: !5880, file: !5881, line: 221, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "is_caller_save_insn", scope: !5880, file: !5881, line: 223, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "live_throughout", scope: !5880, file: !5881, line: 228, baseType: !2108, size: 256, offset: 320)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "dead_or_set", scope: !5880, file: !5881, line: 229, baseType: !2108, size: 256, offset: 576)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "rld", scope: !5880, file: !5881, line: 232, baseType: !5895, size: 64, offset: 832)
!5895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5896, size: 64)
!5896 = !DICompositeType(tag: DW_TAG_structure_type, name: "reload", file: !5881, line: 232, flags: DIFlagFwdDecl)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "n_reloads", scope: !5880, file: !5881, line: 233, baseType: !849, size: 32, offset: 896)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "used_spill_regs", scope: !5880, file: !5881, line: 236, baseType: !863, size: 64, offset: 960)
!5899 = !DILocalVariable(name: "bb", scope: !5874, file: !3, line: 2845, type: !1411)
!5900 = !DILocalVariable(name: "c", scope: !5874, file: !3, line: 2846, type: !5879)
!5901 = !DILocalVariable(name: "next", scope: !5874, file: !3, line: 2847, type: !5879)
!5902 = !DILocalVariable(name: "live_relevant_regs", scope: !5874, file: !3, line: 2848, type: !873)
!5903 = !DILocalVariable(name: "elim_regset", scope: !5874, file: !3, line: 2849, type: !873)
!5904 = !DILocalVariable(name: "live_subregs", scope: !5874, file: !3, line: 2857, type: !2128)
!5905 = !DILocalVariable(name: "live_subregs_used", scope: !5874, file: !3, line: 2858, type: !2139)
!5906 = !DILocalVariable(name: "bi", scope: !5907, file: !3, line: 2865, type: !5910)
!5907 = distinct !DILexicalBlock(scope: !5908, file: !3, line: 2864, column: 5)
!5908 = distinct !DILexicalBlock(scope: !5909, file: !3, line: 2863, column: 3)
!5909 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 2863, column: 3)
!5910 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_iterator", file: !877, line: 218, baseType: !5911)
!5911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !877, line: 203, size: 256, elements: !5912)
!5912 = !{!5913, !5914, !5915, !5916}
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "elt1", scope: !5911, file: !877, line: 206, baseType: !880, size: 64)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "elt2", scope: !5911, file: !877, line: 209, baseType: !880, size: 64, offset: 64)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "word_no", scope: !5911, file: !877, line: 212, baseType: !7, size: 32, offset: 128)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !5911, file: !877, line: 217, baseType: !890, size: 64, offset: 192)
!5917 = !DILocalVariable(name: "insn", scope: !5907, file: !3, line: 2866, type: !939)
!5918 = !DILocalVariable(name: "uid", scope: !5919, file: !3, line: 2889, type: !7)
!5919 = distinct !DILexicalBlock(scope: !5920, file: !3, line: 2888, column: 6)
!5920 = distinct !DILexicalBlock(scope: !5921, file: !3, line: 2887, column: 8)
!5921 = distinct !DILexicalBlock(scope: !5922, file: !3, line: 2886, column: 2)
!5922 = distinct !DILexicalBlock(scope: !5923, file: !3, line: 2885, column: 7)
!5923 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 2885, column: 7)
!5924 = !DILocalVariable(name: "def_rec", scope: !5919, file: !3, line: 2890, type: !3545)
!5925 = !DILocalVariable(name: "use_rec", scope: !5919, file: !3, line: 2891, type: !3545)
!5926 = !DILocalVariable(name: "def", scope: !5927, file: !3, line: 2905, type: !3546)
!5927 = distinct !DILexicalBlock(scope: !5928, file: !3, line: 2904, column: 5)
!5928 = distinct !DILexicalBlock(scope: !5929, file: !3, line: 2903, column: 3)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 2903, column: 3)
!5930 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 2902, column: 12)
!5931 = !DILocalVariable(name: "regno", scope: !5927, file: !3, line: 2906, type: !7)
!5932 = !DILocalVariable(name: "reg", scope: !5933, file: !3, line: 2927, type: !939)
!5933 = distinct !DILexicalBlock(scope: !5934, file: !3, line: 2926, column: 9)
!5934 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 2922, column: 11)
!5935 = !DILocalVariable(name: "start", scope: !5936, file: !3, line: 2934, type: !7)
!5936 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 2933, column: 6)
!5937 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 2931, column: 8)
!5938 = !DILocalVariable(name: "last", scope: !5936, file: !3, line: 2935, type: !7)
!5939 = !DILocalVariable(name: "use", scope: !5940, file: !3, line: 2996, type: !3546)
!5940 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 2995, column: 5)
!5941 = distinct !DILexicalBlock(scope: !5942, file: !3, line: 2994, column: 3)
!5942 = distinct !DILexicalBlock(scope: !5943, file: !3, line: 2994, column: 3)
!5943 = distinct !DILexicalBlock(scope: !5919, file: !3, line: 2993, column: 12)
!5944 = !DILocalVariable(name: "regno", scope: !5940, file: !3, line: 2997, type: !7)
!5945 = !DILocalVariable(name: "reg", scope: !5940, file: !3, line: 2998, type: !939)
!5946 = !DILocalVariable(name: "start", scope: !5947, file: !3, line: 3031, type: !7)
!5947 = distinct !DILexicalBlock(scope: !5948, file: !3, line: 3030, column: 6)
!5948 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 3026, column: 8)
!5949 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 3025, column: 9)
!5950 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 3023, column: 11)
!5951 = !DILocalVariable(name: "last", scope: !5947, file: !3, line: 3032, type: !7)
!5952 = !DILocation(line: 2843, column: 3, scope: !5874)
!5953 = !DILocation(line: 0, scope: !5874)
!5954 = !DILocation(line: 2848, column: 31, scope: !5874)
!5955 = !DILocation(line: 2849, column: 24, scope: !5874)
!5956 = !DILocation(line: 2857, column: 27, scope: !5874)
!5957 = !DILocation(line: 2858, column: 28, scope: !5874)
!5958 = !DILocation(line: 2860, column: 8, scope: !5959)
!5959 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 2860, column: 3)
!5960 = !DILocation(line: 0, scope: !5959)
!5961 = !DILocation(line: 2860, column: 17, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5959, file: !3, line: 2860, column: 3)
!5963 = !DILocation(line: 2860, column: 3, scope: !5959)
!5964 = !DILocation(line: 2861, column: 9, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 2861, column: 9)
!5966 = !DILocation(line: 2861, column: 9, scope: !5962)
!5967 = !DILocation(line: 2862, column: 7, scope: !5965)
!5968 = !DILocation(line: 2860, column: 43, scope: !5962)
!5969 = !DILocation(line: 2860, column: 3, scope: !5962)
!5970 = distinct !{!5970, !5963, !5971}
!5971 = !DILocation(line: 2862, column: 37, scope: !5959)
!5972 = !DILocation(line: 2863, column: 3, scope: !5909)
!5973 = !DILocation(line: 0, scope: !5907)
!5974 = !DILocation(line: 2863, column: 3, scope: !5908)
!5975 = !DILocation(line: 2847, column: 22, scope: !5874)
!5976 = !DILocation(line: 2846, column: 22, scope: !5874)
!5977 = !DILocation(line: 2844, column: 23, scope: !5874)
!5978 = !DILocation(line: 0, scope: !5909)
!5979 = !DILocation(line: 2865, column: 7, scope: !5907)
!5980 = !DILocation(line: 2868, column: 7, scope: !5907)
!5981 = !DILocation(line: 2869, column: 37, scope: !5907)
!5982 = !DILocation(line: 2869, column: 47, scope: !5907)
!5983 = !DILocation(line: 2869, column: 7, scope: !5907)
!5984 = !DILocation(line: 2871, column: 7, scope: !5985)
!5985 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 2871, column: 7)
!5986 = !DILocation(line: 2871, column: 7, scope: !5987)
!5987 = distinct !DILexicalBlock(scope: !5985, file: !3, line: 2871, column: 7)
!5988 = !DILocation(line: 2873, column: 8, scope: !5989)
!5989 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 2873, column: 8)
!5990 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 2872, column: 2)
!5991 = !DILocation(line: 2873, column: 10, scope: !5989)
!5992 = !DILocation(line: 2875, column: 4, scope: !5990)
!5993 = distinct !{!5993, !5984, !5994}
!5994 = !DILocation(line: 2876, column: 2, scope: !5985)
!5995 = !DILocation(line: 2878, column: 7, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 2878, column: 7)
!5997 = !DILocation(line: 2878, column: 7, scope: !5998)
!5998 = distinct !DILexicalBlock(scope: !5996, file: !3, line: 2878, column: 7)
!5999 = !DILocation(line: 2881, column: 43, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !6001, file: !3, line: 2881, column: 8)
!6001 = distinct !DILexicalBlock(scope: !5998, file: !3, line: 2880, column: 2)
!6002 = !DILocation(line: 2881, column: 8, scope: !6000)
!6003 = !DILocation(line: 2881, column: 8, scope: !6001)
!6004 = !DILocation(line: 2882, column: 42, scope: !6000)
!6005 = !DILocation(line: 2882, column: 6, scope: !6000)
!6006 = distinct !{!6006, !5995, !6007}
!6007 = !DILocation(line: 2883, column: 2, scope: !5996)
!6008 = !DILocation(line: 2885, column: 7, scope: !5923)
!6009 = !DILocation(line: 0, scope: !5923)
!6010 = !DILocation(line: 2885, column: 7, scope: !5922)
!6011 = !DILocation(line: 3064, column: 14, scope: !5907)
!6012 = !DILocation(line: 2887, column: 9, scope: !5920)
!6013 = !DILocation(line: 2887, column: 23, scope: !5920)
!6014 = !DILocation(line: 2887, column: 27, scope: !5920)
!6015 = !DILocation(line: 2887, column: 8, scope: !5921)
!6016 = !DILocation(line: 2889, column: 27, scope: !5919)
!6017 = !DILocation(line: 0, scope: !5919)
!6018 = !DILocation(line: 2893, column: 12, scope: !5919)
!6019 = !DILocation(line: 2894, column: 11, scope: !5919)
!6020 = !DILocation(line: 2894, column: 16, scope: !5919)
!6021 = !DILocation(line: 2896, column: 11, scope: !5919)
!6022 = !DILocation(line: 2897, column: 16, scope: !5919)
!6023 = !DILocation(line: 2899, column: 11, scope: !5919)
!6024 = !DILocation(line: 2899, column: 16, scope: !5919)
!6025 = !DILocation(line: 2900, column: 23, scope: !5919)
!6026 = !DILocation(line: 2900, column: 11, scope: !5919)
!6027 = !DILocation(line: 2900, column: 17, scope: !5919)
!6028 = !DILocation(line: 2902, column: 12, scope: !5930)
!6029 = !DILocation(line: 2902, column: 12, scope: !5919)
!6030 = !DILocation(line: 2903, column: 18, scope: !5929)
!6031 = !DILocation(line: 0, scope: !6032)
!6032 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 2918, column: 13)
!6033 = distinct !DILexicalBlock(scope: !6034, file: !3, line: 2913, column: 8)
!6034 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 2912, column: 9)
!6035 = distinct !DILexicalBlock(scope: !5927, file: !3, line: 2911, column: 11)
!6036 = !DILocation(line: 2903, column: 8, scope: !5929)
!6037 = !DILocation(line: 0, scope: !5929)
!6038 = !DILocation(line: 2903, column: 42, scope: !5928)
!6039 = !DILocation(line: 2903, column: 3, scope: !5929)
!6040 = !DILocation(line: 0, scope: !5927)
!6041 = !DILocation(line: 2906, column: 28, scope: !5927)
!6042 = !DILocation(line: 2911, column: 12, scope: !6035)
!6043 = !DILocation(line: 2911, column: 11, scope: !5927)
!6044 = !DILocation(line: 2913, column: 14, scope: !6033)
!6045 = !DILocation(line: 2913, column: 8, scope: !6034)
!6046 = !DILocation(line: 2915, column: 13, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6048, file: !3, line: 2915, column: 12)
!6048 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 2914, column: 6)
!6049 = !DILocation(line: 2915, column: 12, scope: !6048)
!6050 = !DILocation(line: 2916, column: 10, scope: !6047)
!6051 = !DILocation(line: 2918, column: 13, scope: !6032)
!6052 = !DILocation(line: 2918, column: 13, scope: !6033)
!6053 = !DILocation(line: 2919, column: 6, scope: !6032)
!6054 = !DILocation(line: 2922, column: 18, scope: !5934)
!6055 = !DILocation(line: 2923, column: 5, scope: !5934)
!6056 = !DILocation(line: 2923, column: 8, scope: !5934)
!6057 = !DILocation(line: 2923, column: 28, scope: !5934)
!6058 = !DILocation(line: 2924, column: 5, scope: !5934)
!6059 = !DILocation(line: 2924, column: 8, scope: !5934)
!6060 = !DILocation(line: 2925, column: 4, scope: !5934)
!6061 = !DILocation(line: 2925, column: 9, scope: !5934)
!6062 = !DILocation(line: 2922, column: 11, scope: !5927)
!6063 = !DILocation(line: 2927, column: 14, scope: !5933)
!6064 = !DILocation(line: 0, scope: !5933)
!6065 = !DILocation(line: 2931, column: 8, scope: !5937)
!6066 = !DILocation(line: 2931, column: 23, scope: !5937)
!6067 = !DILocation(line: 2932, column: 8, scope: !5937)
!6068 = !DILocation(line: 2932, column: 12, scope: !5937)
!6069 = !DILocation(line: 2931, column: 8, scope: !5933)
!6070 = !DILocation(line: 2934, column: 29, scope: !5936)
!6071 = !DILocation(line: 0, scope: !5936)
!6072 = !DILocation(line: 2936, column: 12, scope: !5936)
!6073 = !DILocation(line: 2936, column: 10, scope: !5936)
!6074 = !DILocation(line: 2939, column: 11, scope: !5936)
!6075 = !DILocation(line: 2938, column: 8, scope: !5936)
!6076 = !DILocation(line: 2942, column: 13, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 2942, column: 12)
!6078 = !DILocation(line: 2942, column: 12, scope: !5936)
!6079 = !DILocation(line: 2948, column: 32, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 2944, column: 10)
!6081 = !DILocation(line: 2949, column: 36, scope: !6080)
!6082 = !DILocation(line: 2950, column: 23, scope: !6080)
!6083 = !DILocation(line: 2951, column: 10, scope: !6080)
!6084 = !DILocation(line: 2954, column: 24, scope: !6085)
!6085 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 2954, column: 12)
!6086 = !DILocation(line: 2954, column: 22, scope: !6085)
!6087 = !DILocation(line: 2954, column: 12, scope: !5936)
!6088 = !DILocation(line: 2955, column: 10, scope: !6085)
!6089 = !DILocation(line: 2957, column: 8, scope: !5936)
!6090 = !DILocation(line: 2957, column: 21, scope: !5936)
!6091 = !DILocation(line: 2959, column: 5, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 2958, column: 10)
!6093 = !DILocation(line: 2960, column: 10, scope: !6092)
!6094 = distinct !{!6094, !6089, !6095}
!6095 = !DILocation(line: 2961, column: 10, scope: !5936)
!6096 = !DILocation(line: 2963, column: 12, scope: !6097)
!6097 = distinct !DILexicalBlock(scope: !5936, file: !3, line: 2963, column: 12)
!6098 = !DILocation(line: 2963, column: 12, scope: !5936)
!6099 = !DILocation(line: 2965, column: 30, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6097, file: !3, line: 2964, column: 10)
!6101 = !DILocation(line: 2966, column: 5, scope: !6100)
!6102 = !DILocation(line: 2967, column: 10, scope: !6100)
!6103 = !DILocation(line: 2972, column: 10, scope: !6097)
!6104 = !DILocation(line: 2981, column: 13, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6106, file: !3, line: 2981, column: 12)
!6106 = distinct !DILexicalBlock(scope: !5937, file: !3, line: 2975, column: 6)
!6107 = !DILocation(line: 2981, column: 12, scope: !6106)
!6108 = !DILocation(line: 2983, column: 5, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6105, file: !3, line: 2982, column: 10)
!6110 = !DILocation(line: 2984, column: 5, scope: !6109)
!6111 = !DILocation(line: 2984, column: 30, scope: !6109)
!6112 = !DILocation(line: 2985, column: 10, scope: !6109)
!6113 = !DILocation(line: 2903, column: 59, scope: !5928)
!6114 = !DILocation(line: 2903, column: 3, scope: !5928)
!6115 = distinct !{!6115, !6039, !6116}
!6116 = !DILocation(line: 2988, column: 5, scope: !5929)
!6117 = !DILocation(line: 2990, column: 8, scope: !5919)
!6118 = !DILocation(line: 2991, column: 25, scope: !5919)
!6119 = !DILocation(line: 2991, column: 8, scope: !5919)
!6120 = !DILocation(line: 2993, column: 12, scope: !5943)
!6121 = !DILocation(line: 2993, column: 12, scope: !5919)
!6122 = !DILocation(line: 2994, column: 18, scope: !5942)
!6123 = !DILocation(line: 0, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 3019, column: 13)
!6125 = distinct !DILexicalBlock(scope: !6126, file: !3, line: 3014, column: 8)
!6126 = distinct !DILexicalBlock(scope: !6127, file: !3, line: 3013, column: 9)
!6127 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 3012, column: 11)
!6128 = !DILocation(line: 2994, column: 8, scope: !5942)
!6129 = !DILocation(line: 0, scope: !5942)
!6130 = !DILocation(line: 2994, column: 42, scope: !5941)
!6131 = !DILocation(line: 2994, column: 3, scope: !5942)
!6132 = !DILocation(line: 0, scope: !5940)
!6133 = !DILocation(line: 2997, column: 28, scope: !5940)
!6134 = !DILocation(line: 2998, column: 17, scope: !5940)
!6135 = !DILocation(line: 3006, column: 11, scope: !6136)
!6136 = distinct !DILexicalBlock(scope: !5940, file: !3, line: 3006, column: 11)
!6137 = !DILocation(line: 3007, column: 4, scope: !6136)
!6138 = !DILocation(line: 3007, column: 8, scope: !6136)
!6139 = !DILocation(line: 3008, column: 4, scope: !6136)
!6140 = !DILocation(line: 3008, column: 7, scope: !6136)
!6141 = !DILocation(line: 3006, column: 11, scope: !5940)
!6142 = !DILocation(line: 3012, column: 12, scope: !6127)
!6143 = !DILocation(line: 3012, column: 11, scope: !5940)
!6144 = !DILocation(line: 3014, column: 14, scope: !6125)
!6145 = !DILocation(line: 3014, column: 8, scope: !6126)
!6146 = !DILocation(line: 3016, column: 13, scope: !6147)
!6147 = distinct !DILexicalBlock(scope: !6148, file: !3, line: 3016, column: 12)
!6148 = distinct !DILexicalBlock(scope: !6125, file: !3, line: 3015, column: 6)
!6149 = !DILocation(line: 3016, column: 12, scope: !6148)
!6150 = !DILocation(line: 3017, column: 10, scope: !6147)
!6151 = !DILocation(line: 3019, column: 13, scope: !6124)
!6152 = !DILocation(line: 3019, column: 13, scope: !6125)
!6153 = !DILocation(line: 3020, column: 6, scope: !6124)
!6154 = !DILocation(line: 3023, column: 17, scope: !5950)
!6155 = !DILocation(line: 3024, column: 4, scope: !5950)
!6156 = !DILocation(line: 3024, column: 7, scope: !5950)
!6157 = !DILocation(line: 3023, column: 11, scope: !5940)
!6158 = !DILocation(line: 3026, column: 8, scope: !5948)
!6159 = !DILocation(line: 3026, column: 23, scope: !5948)
!6160 = !DILocation(line: 3027, column: 8, scope: !5948)
!6161 = !DILocation(line: 3027, column: 12, scope: !5948)
!6162 = !DILocation(line: 3026, column: 8, scope: !5949)
!6163 = !DILocation(line: 3031, column: 29, scope: !5947)
!6164 = !DILocation(line: 0, scope: !5947)
!6165 = !DILocation(line: 3033, column: 12, scope: !5947)
!6166 = !DILocation(line: 3033, column: 10, scope: !5947)
!6167 = !DILocation(line: 3036, column: 11, scope: !5947)
!6168 = !DILocation(line: 3035, column: 8, scope: !5947)
!6169 = !DILocation(line: 3040, column: 24, scope: !6170)
!6170 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3040, column: 12)
!6171 = !DILocation(line: 3040, column: 22, scope: !6170)
!6172 = !DILocation(line: 3040, column: 12, scope: !5947)
!6173 = !DILocation(line: 3041, column: 10, scope: !6170)
!6174 = !DILocation(line: 0, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !5947, file: !3, line: 3044, column: 10)
!6176 = !DILocation(line: 3043, column: 8, scope: !5947)
!6177 = !DILocation(line: 3043, column: 21, scope: !5947)
!6178 = !DILocation(line: 3045, column: 14, scope: !6175)
!6179 = !DILocation(line: 3045, column: 5, scope: !6175)
!6180 = !DILocation(line: 3046, column: 10, scope: !6175)
!6181 = distinct !{!6181, !6176, !6182}
!6182 = !DILocation(line: 3047, column: 10, scope: !5947)
!6183 = !DILocation(line: 3054, column: 6, scope: !5948)
!6184 = !DILocation(line: 3054, column: 31, scope: !5948)
!6185 = !DILocation(line: 3055, column: 4, scope: !5949)
!6186 = !DILocation(line: 3056, column: 9, scope: !5949)
!6187 = !DILocation(line: 2994, column: 59, scope: !5941)
!6188 = !DILocation(line: 2994, column: 3, scope: !5941)
!6189 = distinct !{!6189, !6131, !6190}
!6190 = !DILocation(line: 3057, column: 5, scope: !5942)
!6191 = distinct !{!6191, !6008, !6192}
!6192 = !DILocation(line: 3059, column: 2, scope: !5923)
!6193 = !DILocation(line: 3067, column: 7, scope: !5907)
!6194 = !DILocation(line: 3067, column: 14, scope: !5907)
!6195 = !DILocation(line: 3067, column: 19, scope: !5907)
!6196 = !DILocation(line: 3067, column: 23, scope: !5907)
!6197 = !DILocation(line: 3067, column: 40, scope: !5907)
!6198 = !DILocation(line: 3067, column: 43, scope: !5907)
!6199 = !DILocation(line: 3068, column: 9, scope: !5907)
!6200 = !DILocation(line: 3068, column: 12, scope: !5907)
!6201 = !DILocation(line: 3068, column: 34, scope: !5907)
!6202 = !DILocation(line: 3069, column: 9, scope: !5907)
!6203 = distinct !{!6203, !6193, !6202}
!6204 = !DILocation(line: 3074, column: 7, scope: !5907)
!6205 = !DILocation(line: 3076, column: 9, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 3076, column: 8)
!6207 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 3075, column: 2)
!6208 = !DILocation(line: 3076, column: 23, scope: !6206)
!6209 = !DILocation(line: 3076, column: 27, scope: !6206)
!6210 = !DILocation(line: 3076, column: 8, scope: !6207)
!6211 = !DILocation(line: 3078, column: 12, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6213, file: !3, line: 3078, column: 12)
!6213 = distinct !DILexicalBlock(scope: !6206, file: !3, line: 3077, column: 6)
!6214 = !DILocation(line: 3078, column: 12, scope: !6213)
!6215 = !DILocation(line: 3081, column: 12, scope: !6213)
!6216 = !DILocation(line: 3082, column: 11, scope: !6213)
!6217 = !DILocation(line: 3082, column: 16, scope: !6213)
!6218 = !DILocation(line: 3084, column: 11, scope: !6213)
!6219 = !DILocation(line: 3085, column: 16, scope: !6213)
!6220 = !DILocation(line: 3089, column: 23, scope: !6213)
!6221 = !DILocation(line: 3089, column: 11, scope: !6213)
!6222 = !DILocation(line: 3089, column: 17, scope: !6213)
!6223 = !DILocation(line: 3090, column: 11, scope: !6213)
!6224 = !DILocation(line: 3090, column: 16, scope: !6213)
!6225 = !DILocation(line: 3091, column: 25, scope: !6213)
!6226 = !DILocation(line: 3091, column: 8, scope: !6213)
!6227 = !DILocation(line: 3092, column: 6, scope: !6213)
!6228 = !DILocation(line: 3093, column: 11, scope: !6207)
!6229 = distinct !{!6229, !6204, !6230}
!6230 = !DILocation(line: 3094, column: 2, scope: !5907)
!6231 = !DILocation(line: 3095, column: 5, scope: !5908)
!6232 = !DILocation(line: 0, scope: !5908)
!6233 = distinct !{!6233, !5972, !6234}
!6234 = !DILocation(line: 3095, column: 5, scope: !5909)
!6235 = !DILocation(line: 3097, column: 8, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 3097, column: 3)
!6237 = !DILocation(line: 0, scope: !6236)
!6238 = !DILocation(line: 3097, column: 34, scope: !6239)
!6239 = distinct !DILexicalBlock(scope: !6236, file: !3, line: 3097, column: 3)
!6240 = !DILocation(line: 3097, column: 17, scope: !6239)
!6241 = !DILocation(line: 3097, column: 3, scope: !6236)
!6242 = !DILocation(line: 3098, column: 9, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6239, file: !3, line: 3098, column: 9)
!6244 = !DILocation(line: 3098, column: 9, scope: !6239)
!6245 = !DILocation(line: 3099, column: 7, scope: !6243)
!6246 = !DILocation(line: 3097, column: 46, scope: !6239)
!6247 = !DILocation(line: 3097, column: 3, scope: !6239)
!6248 = distinct !{!6248, !6241, !6249}
!6249 = !DILocation(line: 3099, column: 28, scope: !6236)
!6250 = !DILocation(line: 3101, column: 21, scope: !5874)
!6251 = !DILocation(line: 3102, column: 6, scope: !5874)
!6252 = !DILocation(line: 3104, column: 3, scope: !5874)
!6253 = !DILocation(line: 3105, column: 3, scope: !5874)
!6254 = !DILocation(line: 3106, column: 3, scope: !5874)
!6255 = !DILocation(line: 3107, column: 3, scope: !5874)
!6256 = !DILocation(line: 3109, column: 7, scope: !6257)
!6257 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 3109, column: 7)
!6258 = !DILocation(line: 3109, column: 7, scope: !5874)
!6259 = !DILocation(line: 3110, column: 5, scope: !6257)
!6260 = !DILocation(line: 3111, column: 1, scope: !5874)
!6261 = distinct !DISubprogram(name: "rhs_regno", scope: !670, file: !670, line: 1051, type: !6262, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6267)
!6262 = !DISubroutineType(types: !6263)
!6263 = !{!7, !6264}
!6264 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !874, line: 51, baseType: !6265)
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 64)
!6266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !941)
!6267 = !{!6268}
!6268 = !DILocalVariable(name: "x", arg: 1, scope: !6261, file: !670, line: 1051, type: !6264)
!6269 = !DILocation(line: 0, scope: !6261)
!6270 = !DILocation(line: 1053, column: 10, scope: !6261)
!6271 = !DILocation(line: 1053, column: 3, scope: !6261)
!6272 = distinct !DISubprogram(name: "recog_memoized", scope: !6273, file: !6273, line: 150, type: !6274, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6276)
!6273 = !DIFile(filename: "./recog.h", directory: "/u/ziyangx/old_or_raw_benchmarks/spec2017-workspace/benchspec/CPU/502.gcc_r/src")
!6274 = !DISubroutineType(types: !6275)
!6275 = !{!849, !939}
!6276 = !{!6277}
!6277 = !DILocalVariable(name: "insn", arg: 1, scope: !6272, file: !6273, line: 150, type: !939)
!6278 = !DILocation(line: 0, scope: !6272)
!6279 = !DILocation(line: 152, column: 7, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6272, file: !6273, line: 152, column: 7)
!6281 = !DILocation(line: 152, column: 24, scope: !6280)
!6282 = !DILocation(line: 152, column: 7, scope: !6272)
!6283 = !DILocation(line: 153, column: 31, scope: !6280)
!6284 = !DILocation(line: 153, column: 24, scope: !6280)
!6285 = !DILocation(line: 153, column: 22, scope: !6280)
!6286 = !DILocation(line: 153, column: 5, scope: !6280)
!6287 = !DILocation(line: 154, column: 10, scope: !6272)
!6288 = !DILocation(line: 154, column: 3, scope: !6272)
!6289 = distinct !DISubprogram(name: "no_equiv", scope: !3, file: !3, line: 2265, type: !6290, scopeLine: 2266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6292)
!6290 = !DISubroutineType(types: !6291)
!6291 = !{null, !939, !6264, !853}
!6292 = !{!6293, !6294, !6295, !6296, !6297, !6298}
!6293 = !DILocalVariable(name: "reg", arg: 1, scope: !6289, file: !3, line: 2265, type: !939)
!6294 = !DILocalVariable(name: "store", arg: 2, scope: !6289, file: !3, line: 2265, type: !6264)
!6295 = !DILocalVariable(name: "data", arg: 3, scope: !6289, file: !3, line: 2265, type: !853)
!6296 = !DILocalVariable(name: "regno", scope: !6289, file: !3, line: 2267, type: !849)
!6297 = !DILocalVariable(name: "list", scope: !6289, file: !3, line: 2268, type: !939)
!6298 = !DILocalVariable(name: "insn", scope: !6299, file: !3, line: 2285, type: !939)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 2284, column: 5)
!6300 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 2283, column: 3)
!6301 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 2283, column: 3)
!6302 = !DILocation(line: 0, scope: !6289)
!6303 = !DILocation(line: 2270, column: 8, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 2270, column: 7)
!6305 = !DILocation(line: 2270, column: 7, scope: !6289)
!6306 = !DILocation(line: 2272, column: 11, scope: !6289)
!6307 = !DILocation(line: 2273, column: 10, scope: !6289)
!6308 = !DILocation(line: 2273, column: 27, scope: !6289)
!6309 = !DILocation(line: 2274, column: 15, scope: !6310)
!6310 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 2274, column: 7)
!6311 = !DILocation(line: 2274, column: 12, scope: !6310)
!6312 = !DILocation(line: 2274, column: 7, scope: !6289)
!6313 = !DILocation(line: 2276, column: 31, scope: !6289)
!6314 = !DILocation(line: 2277, column: 3, scope: !6289)
!6315 = !DILocation(line: 2277, column: 20, scope: !6289)
!6316 = !DILocation(line: 2277, column: 32, scope: !6289)
!6317 = !DILocation(line: 2280, column: 7, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6289, file: !3, line: 2280, column: 7)
!6319 = !DILocation(line: 2280, column: 24, scope: !6318)
!6320 = !DILocation(line: 2280, column: 7, scope: !6289)
!6321 = !DILocation(line: 2282, column: 3, scope: !6289)
!6322 = !DILocation(line: 2282, column: 25, scope: !6289)
!6323 = !DILocation(line: 2283, column: 3, scope: !6289)
!6324 = !DILocation(line: 2283, column: 3, scope: !6301)
!6325 = !DILocation(line: 2285, column: 18, scope: !6299)
!6326 = !DILocation(line: 0, scope: !6299)
!6327 = !DILocation(line: 2286, column: 26, scope: !6299)
!6328 = !DILocation(line: 2286, column: 7, scope: !6299)
!6329 = !DILocation(line: 2283, column: 24, scope: !6300)
!6330 = !DILocation(line: 2283, column: 3, scope: !6300)
!6331 = distinct !{!6331, !6324, !6332}
!6332 = !DILocation(line: 2287, column: 5, scope: !6301)
!6333 = !DILocation(line: 2288, column: 1, scope: !6289)
!6334 = distinct !DISubprogram(name: "validate_equiv_mem", scope: !3, file: !3, line: 1957, type: !6335, scopeLine: 1958, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6337)
!6335 = !DISubroutineType(types: !6336)
!6336 = !{!849, !939, !939, !939}
!6337 = !{!6338, !6339, !6340, !6341, !6342}
!6338 = !DILocalVariable(name: "start", arg: 1, scope: !6334, file: !3, line: 1957, type: !939)
!6339 = !DILocalVariable(name: "reg", arg: 2, scope: !6334, file: !3, line: 1957, type: !939)
!6340 = !DILocalVariable(name: "memref", arg: 3, scope: !6334, file: !3, line: 1957, type: !939)
!6341 = !DILocalVariable(name: "insn", scope: !6334, file: !3, line: 1959, type: !939)
!6342 = !DILocalVariable(name: "note", scope: !6334, file: !3, line: 1960, type: !939)
!6343 = !DILocation(line: 0, scope: !6334)
!6344 = !DILocation(line: 1962, column: 13, scope: !6334)
!6345 = !DILocation(line: 1963, column: 22, scope: !6334)
!6346 = !DILocation(line: 1967, column: 7, scope: !6347)
!6347 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 1967, column: 7)
!6348 = !DILocation(line: 1967, column: 7, scope: !6334)
!6349 = !DILocation(line: 0, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 1978, column: 11)
!6351 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 1971, column: 5)
!6352 = distinct !DILexicalBlock(scope: !6353, file: !3, line: 1970, column: 3)
!6353 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 1970, column: 3)
!6354 = !DILocation(line: 1970, column: 3, scope: !6353)
!6355 = !DILocation(line: 0, scope: !6353)
!6356 = !DILocation(line: 1970, column: 22, scope: !6352)
!6357 = !DILocation(line: 1970, column: 27, scope: !6352)
!6358 = !DILocation(line: 1970, column: 32, scope: !6352)
!6359 = !DILocation(line: 1972, column: 13, scope: !6360)
!6360 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 1972, column: 11)
!6361 = !DILocation(line: 1972, column: 11, scope: !6351)
!6362 = !DILocation(line: 1975, column: 11, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 1975, column: 11)
!6364 = !DILocation(line: 1975, column: 11, scope: !6351)
!6365 = !DILocation(line: 1978, column: 11, scope: !6350)
!6366 = !DILocation(line: 1978, column: 25, scope: !6350)
!6367 = !DILocation(line: 1978, column: 30, scope: !6350)
!6368 = !DILocation(line: 1979, column: 4, scope: !6350)
!6369 = !DILocation(line: 1979, column: 9, scope: !6350)
!6370 = !DILocation(line: 1978, column: 11, scope: !6351)
!6371 = !DILocation(line: 1982, column: 20, scope: !6351)
!6372 = !DILocation(line: 1982, column: 7, scope: !6351)
!6373 = !DILocation(line: 1989, column: 19, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 1989, column: 7)
!6375 = !DILocation(line: 1989, column: 12, scope: !6374)
!6376 = !DILocation(line: 0, scope: !6374)
!6377 = !DILocation(line: 1989, column: 7, scope: !6374)
!6378 = !DILocation(line: 1990, column: 7, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 1990, column: 6)
!6380 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 1989, column: 7)
!6381 = !DILocation(line: 1990, column: 28, scope: !6379)
!6382 = !DILocation(line: 1991, column: 7, scope: !6379)
!6383 = !DILocation(line: 1991, column: 31, scope: !6379)
!6384 = !DILocation(line: 1992, column: 6, scope: !6379)
!6385 = !DILocation(line: 1992, column: 9, scope: !6379)
!6386 = !DILocation(line: 1993, column: 6, scope: !6379)
!6387 = !DILocation(line: 1993, column: 9, scope: !6379)
!6388 = !DILocation(line: 1990, column: 6, scope: !6380)
!6389 = !DILocation(line: 1989, column: 50, scope: !6380)
!6390 = !DILocation(line: 1989, column: 7, scope: !6380)
!6391 = distinct !{!6391, !6377, !6392}
!6392 = !DILocation(line: 1994, column: 11, scope: !6374)
!6393 = !DILocation(line: 1970, column: 59, scope: !6352)
!6394 = !DILocation(line: 1970, column: 3, scope: !6352)
!6395 = distinct !{!6395, !6354, !6396}
!6396 = !DILocation(line: 1995, column: 5, scope: !6353)
!6397 = !DILocation(line: 1998, column: 1, scope: !6334)
!6398 = distinct !DISubprogram(name: "REG_N_REFS", scope: !858, file: !858, line: 79, type: !2473, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6399)
!6399 = !{!6400}
!6400 = !DILocalVariable(name: "regno", arg: 1, scope: !6398, file: !858, line: 79, type: !849)
!6401 = !DILocation(line: 0, scope: !6398)
!6402 = !DILocation(line: 81, column: 10, scope: !6398)
!6403 = !DILocation(line: 81, column: 41, scope: !6398)
!6404 = !DILocation(line: 81, column: 3, scope: !6398)
!6405 = distinct !DISubprogram(name: "equiv_init_varies_p", scope: !3, file: !3, line: 2002, type: !6274, scopeLine: 2003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6406)
!6406 = !{!6407, !6408, !6409, !6410, !6411}
!6407 = !DILocalVariable(name: "x", arg: 1, scope: !6405, file: !3, line: 2002, type: !939)
!6408 = !DILocalVariable(name: "code", scope: !6405, file: !3, line: 2004, type: !669)
!6409 = !DILocalVariable(name: "i", scope: !6405, file: !3, line: 2005, type: !849)
!6410 = !DILocalVariable(name: "fmt", scope: !6405, file: !3, line: 2006, type: !854)
!6411 = !DILocalVariable(name: "j", scope: !6412, file: !3, line: 2044, type: !849)
!6412 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 2043, column: 7)
!6413 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 2042, column: 14)
!6414 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 2037, column: 9)
!6415 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 2036, column: 3)
!6416 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2036, column: 3)
!6417 = !DILocation(line: 0, scope: !6405)
!6418 = !DILocation(line: 2004, column: 19, scope: !6405)
!6419 = !DILocation(line: 2008, column: 3, scope: !6405)
!6420 = !DILocation(line: 2011, column: 15, scope: !6421)
!6421 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2009, column: 5)
!6422 = !DILocation(line: 2011, column: 34, scope: !6421)
!6423 = !DILocation(line: 2011, column: 58, scope: !6421)
!6424 = !DILocation(line: 2011, column: 37, scope: !6421)
!6425 = !DILocation(line: 2011, column: 7, scope: !6421)
!6426 = !DILocation(line: 2023, column: 14, scope: !6421)
!6427 = !DILocation(line: 2023, column: 24, scope: !6421)
!6428 = !DILocation(line: 2023, column: 35, scope: !6421)
!6429 = !DILocation(line: 2023, column: 43, scope: !6421)
!6430 = !DILocation(line: 2023, column: 48, scope: !6421)
!6431 = !DILocation(line: 2023, column: 51, scope: !6421)
!6432 = !DILocation(line: 2023, column: 7, scope: !6421)
!6433 = !DILocation(line: 2026, column: 11, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 2026, column: 11)
!6435 = !DILocation(line: 2026, column: 11, scope: !6421)
!6436 = !DILocation(line: 2035, column: 9, scope: !6405)
!6437 = !DILocation(line: 2036, column: 12, scope: !6416)
!6438 = !DILocation(line: 2039, column: 27, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !3, line: 2039, column: 6)
!6440 = distinct !DILexicalBlock(scope: !6414, file: !3, line: 2038, column: 7)
!6441 = !DILocation(line: 2036, column: 8, scope: !6416)
!6442 = !DILocation(line: 0, scope: !6416)
!6443 = !DILocation(line: 2036, column: 41, scope: !6415)
!6444 = !DILocation(line: 2036, column: 3, scope: !6416)
!6445 = !DILocation(line: 2037, column: 9, scope: !6414)
!6446 = !DILocation(line: 2037, column: 16, scope: !6414)
!6447 = !DILocation(line: 2037, column: 9, scope: !6415)
!6448 = !DILocation(line: 2039, column: 6, scope: !6439)
!6449 = !DILocation(line: 2039, column: 6, scope: !6440)
!6450 = !DILocation(line: 2042, column: 21, scope: !6413)
!6451 = !DILocation(line: 2042, column: 14, scope: !6414)
!6452 = !DILocation(line: 2046, column: 29, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6454, file: !3, line: 2046, column: 8)
!6454 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 2045, column: 2)
!6455 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 2045, column: 2)
!6456 = !DILocation(line: 2045, column: 2, scope: !6455)
!6457 = !DILocation(line: 0, scope: !6455)
!6458 = !DILocation(line: 0, scope: !6412)
!6459 = !DILocation(line: 2045, column: 18, scope: !6454)
!6460 = !DILocation(line: 2045, column: 16, scope: !6454)
!6461 = !DILocation(line: 2046, column: 8, scope: !6453)
!6462 = !DILocation(line: 2046, column: 8, scope: !6454)
!6463 = !DILocation(line: 2045, column: 35, scope: !6454)
!6464 = !DILocation(line: 2045, column: 2, scope: !6454)
!6465 = distinct !{!6465, !6456, !6466}
!6466 = !DILocation(line: 2047, column: 13, scope: !6455)
!6467 = !DILocation(line: 2036, column: 3, scope: !6415)
!6468 = distinct !{!6468, !6444, !6469}
!6469 = !DILocation(line: 2048, column: 7, scope: !6416)
!6470 = !DILocation(line: 2051, column: 1, scope: !6405)
!6471 = distinct !DISubprogram(name: "equiv_init_movable_p", scope: !3, file: !3, line: 2058, type: !6472, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6474)
!6472 = !DISubroutineType(types: !6473)
!6473 = !{!849, !939, !849}
!6474 = !{!6475, !6476, !6477, !6478, !6479, !6480}
!6475 = !DILocalVariable(name: "x", arg: 1, scope: !6471, file: !3, line: 2058, type: !939)
!6476 = !DILocalVariable(name: "regno", arg: 2, scope: !6471, file: !3, line: 2058, type: !849)
!6477 = !DILocalVariable(name: "i", scope: !6471, file: !3, line: 2060, type: !849)
!6478 = !DILocalVariable(name: "j", scope: !6471, file: !3, line: 2060, type: !849)
!6479 = !DILocalVariable(name: "fmt", scope: !6471, file: !3, line: 2061, type: !854)
!6480 = !DILocalVariable(name: "code", scope: !6471, file: !3, line: 2062, type: !669)
!6481 = !DILocation(line: 2067, column: 14, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 2065, column: 5)
!6483 = !DILocation(line: 0, scope: !6471)
!6484 = !DILocation(line: 2062, column: 24, scope: !6471)
!6485 = !DILocation(line: 2064, column: 3, scope: !6471)
!6486 = !DILocation(line: 2067, column: 36, scope: !6482)
!6487 = !DILocation(line: 2082, column: 15, scope: !6482)
!6488 = !DILocation(line: 2082, column: 25, scope: !6482)
!6489 = !DILocation(line: 2082, column: 36, scope: !6482)
!6490 = !DILocation(line: 2082, column: 50, scope: !6482)
!6491 = !DILocation(line: 2082, column: 67, scope: !6482)
!6492 = !DILocation(line: 2082, column: 47, scope: !6482)
!6493 = !DILocation(line: 2083, column: 8, scope: !6482)
!6494 = !DILocation(line: 2083, column: 21, scope: !6482)
!6495 = !DILocation(line: 2083, column: 11, scope: !6482)
!6496 = !DILocation(line: 2083, column: 32, scope: !6482)
!6497 = !DILocation(line: 2084, column: 7, scope: !6482)
!6498 = !DILocation(line: 2084, column: 11, scope: !6482)
!6499 = !DILocation(line: 2084, column: 39, scope: !6482)
!6500 = !DILocation(line: 2084, column: 58, scope: !6482)
!6501 = !DILocation(line: 2084, column: 63, scope: !6482)
!6502 = !DILocation(line: 2084, column: 61, scope: !6482)
!6503 = !DILocation(line: 2082, column: 7, scope: !6482)
!6504 = !DILocation(line: 2090, column: 11, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6482, file: !3, line: 2090, column: 11)
!6506 = !DILocation(line: 2090, column: 11, scope: !6482)
!6507 = !DILocation(line: 2099, column: 9, scope: !6471)
!6508 = !DILocation(line: 2100, column: 12, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 2100, column: 3)
!6510 = !DILocation(line: 0, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 2108, column: 2)
!6512 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 2102, column: 7)
!6513 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 2100, column: 3)
!6514 = !DILocation(line: 2100, column: 8, scope: !6509)
!6515 = !DILocation(line: 0, scope: !6509)
!6516 = !DILocation(line: 2100, column: 41, scope: !6513)
!6517 = !DILocation(line: 2100, column: 3, scope: !6509)
!6518 = !DILocation(line: 2101, column: 13, scope: !6513)
!6519 = !DILocation(line: 2101, column: 5, scope: !6513)
!6520 = !DILocation(line: 2104, column: 30, scope: !6521)
!6521 = distinct !DILexicalBlock(scope: !6512, file: !3, line: 2104, column: 6)
!6522 = !DILocation(line: 2104, column: 8, scope: !6521)
!6523 = !DILocation(line: 2104, column: 6, scope: !6512)
!6524 = !DILocation(line: 2108, column: 11, scope: !6511)
!6525 = !DILocation(line: 2108, column: 7, scope: !6511)
!6526 = !DILocation(line: 2108, column: 33, scope: !6527)
!6527 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 2108, column: 2)
!6528 = !DILocation(line: 2108, column: 2, scope: !6511)
!6529 = !DILocation(line: 2109, column: 32, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6527, file: !3, line: 2109, column: 8)
!6531 = !DILocation(line: 2109, column: 10, scope: !6530)
!6532 = !DILocation(line: 2109, column: 8, scope: !6527)
!6533 = !DILocation(line: 2108, column: 2, scope: !6527)
!6534 = distinct !{!6534, !6528, !6535}
!6535 = !DILocation(line: 2110, column: 13, scope: !6511)
!6536 = !DILocation(line: 2100, column: 3, scope: !6513)
!6537 = distinct !{!6537, !6517, !6538}
!6538 = !DILocation(line: 2112, column: 7, scope: !6509)
!6539 = !DILocation(line: 2115, column: 1, scope: !6471)
!6540 = distinct !DISubprogram(name: "contains_replace_regs", scope: !3, file: !3, line: 2119, type: !6274, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6541)
!6541 = !{!6542, !6543, !6544, !6545, !6546}
!6542 = !DILocalVariable(name: "x", arg: 1, scope: !6540, file: !3, line: 2119, type: !939)
!6543 = !DILocalVariable(name: "i", scope: !6540, file: !3, line: 2121, type: !849)
!6544 = !DILocalVariable(name: "j", scope: !6540, file: !3, line: 2121, type: !849)
!6545 = !DILocalVariable(name: "fmt", scope: !6540, file: !3, line: 2122, type: !854)
!6546 = !DILocalVariable(name: "code", scope: !6540, file: !3, line: 2123, type: !669)
!6547 = !DILocation(line: 0, scope: !6540)
!6548 = !DILocation(line: 2123, column: 24, scope: !6540)
!6549 = !DILocation(line: 2125, column: 3, scope: !6540)
!6550 = !DILocation(line: 2140, column: 14, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 2126, column: 5)
!6552 = !DILocation(line: 2140, column: 24, scope: !6551)
!6553 = !DILocation(line: 2140, column: 35, scope: !6551)
!6554 = !DILocation(line: 2140, column: 7, scope: !6551)
!6555 = !DILocation(line: 2146, column: 9, scope: !6540)
!6556 = !DILocation(line: 2147, column: 12, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6540, file: !3, line: 2147, column: 3)
!6558 = !DILocation(line: 0, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 2155, column: 2)
!6560 = distinct !DILexicalBlock(scope: !6561, file: !3, line: 2149, column: 7)
!6561 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 2147, column: 3)
!6562 = !DILocation(line: 2147, column: 8, scope: !6557)
!6563 = !DILocation(line: 0, scope: !6557)
!6564 = !DILocation(line: 2147, column: 41, scope: !6561)
!6565 = !DILocation(line: 2147, column: 3, scope: !6557)
!6566 = !DILocation(line: 2148, column: 13, scope: !6561)
!6567 = !DILocation(line: 2148, column: 5, scope: !6561)
!6568 = !DILocation(line: 2151, column: 29, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 2151, column: 6)
!6570 = !DILocation(line: 2151, column: 6, scope: !6569)
!6571 = !DILocation(line: 2151, column: 6, scope: !6560)
!6572 = !DILocation(line: 2155, column: 11, scope: !6559)
!6573 = !DILocation(line: 2155, column: 7, scope: !6559)
!6574 = !DILocation(line: 2155, column: 33, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6559, file: !3, line: 2155, column: 2)
!6576 = !DILocation(line: 2155, column: 2, scope: !6559)
!6577 = !DILocation(line: 2156, column: 31, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 2156, column: 8)
!6579 = !DILocation(line: 2156, column: 8, scope: !6578)
!6580 = !DILocation(line: 2156, column: 8, scope: !6575)
!6581 = !DILocation(line: 2155, column: 2, scope: !6575)
!6582 = distinct !{!6582, !6576, !6583}
!6583 = !DILocation(line: 2157, column: 13, scope: !6559)
!6584 = !DILocation(line: 2147, column: 3, scope: !6561)
!6585 = distinct !{!6585, !6565, !6586}
!6586 = !DILocation(line: 2159, column: 7, scope: !6557)
!6587 = !DILocation(line: 2162, column: 1, scope: !6540)
!6588 = distinct !DISubprogram(name: "memref_used_between_p", scope: !3, file: !3, line: 2236, type: !6335, scopeLine: 2237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6589)
!6589 = !{!6590, !6591, !6592, !6593}
!6590 = !DILocalVariable(name: "memref", arg: 1, scope: !6588, file: !3, line: 2236, type: !939)
!6591 = !DILocalVariable(name: "start", arg: 2, scope: !6588, file: !3, line: 2236, type: !939)
!6592 = !DILocalVariable(name: "end", arg: 3, scope: !6588, file: !3, line: 2236, type: !939)
!6593 = !DILocalVariable(name: "insn", scope: !6588, file: !3, line: 2238, type: !939)
!6594 = !DILocation(line: 0, scope: !6588)
!6595 = !DILocation(line: 0, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6597, file: !3, line: 2240, column: 3)
!6597 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 2240, column: 3)
!6598 = !DILocation(line: 2240, column: 8, scope: !6597)
!6599 = !DILocation(line: 0, scope: !6597)
!6600 = !DILocation(line: 2240, column: 42, scope: !6596)
!6601 = !DILocation(line: 2240, column: 39, scope: !6596)
!6602 = !DILocation(line: 2240, column: 3, scope: !6597)
!6603 = !DILocation(line: 2243, column: 12, scope: !6604)
!6604 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 2243, column: 11)
!6605 = distinct !DILexicalBlock(scope: !6596, file: !3, line: 2242, column: 5)
!6606 = !DILocation(line: 2243, column: 11, scope: !6605)
!6607 = !DILocation(line: 2246, column: 40, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 2246, column: 11)
!6609 = !DILocation(line: 2246, column: 11, scope: !6608)
!6610 = !DILocation(line: 2246, column: 11, scope: !6605)
!6611 = !DILocation(line: 2250, column: 11, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6605, file: !3, line: 2250, column: 11)
!6613 = !DILocation(line: 2250, column: 25, scope: !6612)
!6614 = !DILocation(line: 2250, column: 31, scope: !6612)
!6615 = !DILocation(line: 2250, column: 11, scope: !6605)
!6616 = !DILocation(line: 2240, column: 3, scope: !6596)
!6617 = distinct !{!6617, !6602, !6618}
!6618 = !DILocation(line: 2252, column: 5, scope: !6597)
!6619 = !DILocation(line: 2255, column: 1, scope: !6588)
!6620 = distinct !DISubprogram(name: "df_live_get_bb_info", scope: !870, file: !870, line: 1070, type: !6621, scopeLine: 1071, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6623)
!6621 = !DISubroutineType(types: !6622)
!6622 = !{!2121, !7}
!6623 = !{!6624}
!6624 = !DILocalVariable(name: "index", arg: 1, scope: !6620, file: !870, line: 1070, type: !7)
!6625 = !DILocation(line: 0, scope: !6620)
!6626 = !DILocation(line: 1072, column: 15, scope: !6627)
!6627 = distinct !DILexicalBlock(scope: !6620, file: !870, line: 1072, column: 7)
!6628 = !DILocation(line: 1072, column: 24, scope: !6627)
!6629 = !DILocation(line: 1072, column: 13, scope: !6627)
!6630 = !DILocation(line: 1072, column: 7, scope: !6620)
!6631 = !DILocation(line: 1073, column: 48, scope: !6627)
!6632 = !DILocation(line: 1073, column: 39, scope: !6627)
!6633 = !DILocation(line: 1073, column: 5, scope: !6627)
!6634 = !DILocation(line: 0, scope: !6627)
!6635 = !DILocation(line: 1076, column: 1, scope: !6620)
!6636 = distinct !DISubprogram(name: "adjust_cleared_regs", scope: !3, file: !3, line: 2294, type: !6637, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6639)
!6637 = !DISubroutineType(types: !6638)
!6638 = !{!939, !939, !6264, !853}
!6639 = !{!6640, !6641, !6642, !6643}
!6640 = !DILocalVariable(name: "loc", arg: 1, scope: !6636, file: !3, line: 2294, type: !939)
!6641 = !DILocalVariable(name: "old_rtx", arg: 2, scope: !6636, file: !3, line: 2294, type: !6264)
!6642 = !DILocalVariable(name: "data", arg: 3, scope: !6636, file: !3, line: 2294, type: !853)
!6643 = !DILocalVariable(name: "cleared_regs", scope: !6644, file: !3, line: 2298, type: !873)
!6644 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 2297, column: 5)
!6645 = distinct !DILexicalBlock(scope: !6636, file: !3, line: 2296, column: 7)
!6646 = !DILocation(line: 0, scope: !6636)
!6647 = !DILocation(line: 2296, column: 7, scope: !6645)
!6648 = !DILocation(line: 2296, column: 7, scope: !6636)
!6649 = !DILocation(line: 2298, column: 29, scope: !6644)
!6650 = !DILocation(line: 0, scope: !6644)
!6651 = !DILocation(line: 2299, column: 39, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 2299, column: 11)
!6653 = !DILocation(line: 2299, column: 11, scope: !6652)
!6654 = !DILocation(line: 2299, column: 11, scope: !6644)
!6655 = !DILocation(line: 2300, column: 35, scope: !6652)
!6656 = !DILocation(line: 2300, column: 45, scope: !6652)
!6657 = !DILocation(line: 2300, column: 58, scope: !6652)
!6658 = !DILocation(line: 2300, column: 34, scope: !6652)
!6659 = !DILocation(line: 2300, column: 9, scope: !6652)
!6660 = !DILocation(line: 2300, column: 2, scope: !6652)
!6661 = !DILocation(line: 2303, column: 3, scope: !6636)
!6662 = !DILocation(line: 2304, column: 1, scope: !6636)
!6663 = distinct !DISubprogram(name: "validate_equiv_mem_from_store", scope: !3, file: !3, line: 1940, type: !6290, scopeLine: 1942, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6664)
!6664 = !{!6665, !6666, !6667}
!6665 = !DILocalVariable(name: "dest", arg: 1, scope: !6663, file: !3, line: 1940, type: !939)
!6666 = !DILocalVariable(name: "set", arg: 2, scope: !6663, file: !3, line: 1940, type: !6264)
!6667 = !DILocalVariable(name: "data", arg: 3, scope: !6663, file: !3, line: 1941, type: !853)
!6668 = !DILocation(line: 0, scope: !6663)
!6669 = !DILocation(line: 1943, column: 8, scope: !6670)
!6670 = distinct !DILexicalBlock(scope: !6663, file: !3, line: 1943, column: 7)
!6671 = !DILocation(line: 1944, column: 8, scope: !6670)
!6672 = !DILocation(line: 1944, column: 42, scope: !6670)
!6673 = !DILocation(line: 1944, column: 11, scope: !6670)
!6674 = !DILocation(line: 1945, column: 7, scope: !6670)
!6675 = !DILocation(line: 1945, column: 11, scope: !6670)
!6676 = !DILocation(line: 1946, column: 4, scope: !6670)
!6677 = !DILocation(line: 1946, column: 40, scope: !6670)
!6678 = !DILocation(line: 1946, column: 7, scope: !6670)
!6679 = !DILocation(line: 1943, column: 7, scope: !6663)
!6680 = !DILocation(line: 1947, column: 24, scope: !6670)
!6681 = !DILocation(line: 1947, column: 5, scope: !6670)
!6682 = !DILocation(line: 1948, column: 1, scope: !6663)
!6683 = distinct !DISubprogram(name: "memref_referenced_p", scope: !3, file: !3, line: 2167, type: !6684, scopeLine: 2168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6686)
!6684 = !DISubroutineType(types: !6685)
!6685 = !{!849, !939, !939}
!6686 = !{!6687, !6688, !6689, !6690, !6691, !6692}
!6687 = !DILocalVariable(name: "memref", arg: 1, scope: !6683, file: !3, line: 2167, type: !939)
!6688 = !DILocalVariable(name: "x", arg: 2, scope: !6683, file: !3, line: 2167, type: !939)
!6689 = !DILocalVariable(name: "i", scope: !6683, file: !3, line: 2169, type: !849)
!6690 = !DILocalVariable(name: "j", scope: !6683, file: !3, line: 2169, type: !849)
!6691 = !DILocalVariable(name: "fmt", scope: !6683, file: !3, line: 2170, type: !854)
!6692 = !DILocalVariable(name: "code", scope: !6683, file: !3, line: 2171, type: !669)
!6693 = !DILocation(line: 2209, column: 14, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 2174, column: 5)
!6695 = !DILocation(line: 0, scope: !6683)
!6696 = !DILocation(line: 2171, column: 24, scope: !6683)
!6697 = !DILocation(line: 2173, column: 3, scope: !6683)
!6698 = !DILocation(line: 2189, column: 15, scope: !6694)
!6699 = !DILocation(line: 2189, column: 25, scope: !6694)
!6700 = !DILocation(line: 2189, column: 36, scope: !6694)
!6701 = !DILocation(line: 2190, column: 8, scope: !6694)
!6702 = !DILocation(line: 2191, column: 11, scope: !6694)
!6703 = !DILocation(line: 2191, column: 21, scope: !6694)
!6704 = !DILocation(line: 2191, column: 32, scope: !6694)
!6705 = !DILocation(line: 2190, column: 11, scope: !6694)
!6706 = !DILocation(line: 2189, column: 7, scope: !6694)
!6707 = !DILocation(line: 2194, column: 11, scope: !6708)
!6708 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 2194, column: 11)
!6709 = !DILocation(line: 2194, column: 11, scope: !6694)
!6710 = !DILocation(line: 2201, column: 11, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6694, file: !3, line: 2201, column: 11)
!6712 = !DILocation(line: 2201, column: 11, scope: !6694)
!6713 = !DILocation(line: 2203, column: 37, scope: !6714)
!6714 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 2203, column: 8)
!6715 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 2202, column: 2)
!6716 = !DILocation(line: 2203, column: 8, scope: !6714)
!6717 = !DILocation(line: 2203, column: 8, scope: !6715)
!6718 = !DILocation(line: 0, scope: !6711)
!6719 = !DILocation(line: 2206, column: 16, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 2206, column: 16)
!6721 = !DILocation(line: 2206, column: 16, scope: !6711)
!6722 = !DILocation(line: 2209, column: 43, scope: !6694)
!6723 = !DILocation(line: 2215, column: 9, scope: !6683)
!6724 = !DILocation(line: 2216, column: 12, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6683, file: !3, line: 2216, column: 3)
!6726 = !DILocation(line: 0, scope: !6727)
!6727 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 2224, column: 2)
!6728 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 2218, column: 7)
!6729 = distinct !DILexicalBlock(scope: !6725, file: !3, line: 2216, column: 3)
!6730 = !DILocation(line: 2216, column: 8, scope: !6725)
!6731 = !DILocation(line: 0, scope: !6725)
!6732 = !DILocation(line: 2216, column: 41, scope: !6729)
!6733 = !DILocation(line: 2216, column: 3, scope: !6725)
!6734 = !DILocation(line: 2217, column: 13, scope: !6729)
!6735 = !DILocation(line: 2217, column: 5, scope: !6729)
!6736 = !DILocation(line: 2220, column: 35, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6728, file: !3, line: 2220, column: 6)
!6738 = !DILocation(line: 2220, column: 6, scope: !6737)
!6739 = !DILocation(line: 2220, column: 6, scope: !6728)
!6740 = !DILocation(line: 2224, column: 11, scope: !6727)
!6741 = !DILocation(line: 2224, column: 7, scope: !6727)
!6742 = !DILocation(line: 2224, column: 33, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 2224, column: 2)
!6744 = !DILocation(line: 2224, column: 2, scope: !6727)
!6745 = !DILocation(line: 2225, column: 37, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 2225, column: 8)
!6747 = !DILocation(line: 2225, column: 8, scope: !6746)
!6748 = !DILocation(line: 2225, column: 8, scope: !6743)
!6749 = !DILocation(line: 2224, column: 2, scope: !6743)
!6750 = distinct !{!6750, !6744, !6751}
!6751 = !DILocation(line: 2226, column: 13, scope: !6727)
!6752 = !DILocation(line: 2216, column: 3, scope: !6729)
!6753 = distinct !{!6753, !6733, !6754}
!6754 = !DILocation(line: 2228, column: 7, scope: !6725)
!6755 = !DILocation(line: 2231, column: 1, scope: !6683)
!6756 = distinct !DISubprogram(name: "ira_allocno_iter_init", scope: !2105, file: !2105, line: 939, type: !6757, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6760)
!6757 = !DISubroutineType(types: !6758)
!6758 = !{null, !6759}
!6759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5633, size: 64)
!6760 = !{!6761}
!6761 = !DILocalVariable(name: "i", arg: 1, scope: !6756, file: !2105, line: 939, type: !6759)
!6762 = !DILocation(line: 0, scope: !6756)
!6763 = !DILocation(line: 941, column: 6, scope: !6756)
!6764 = !DILocation(line: 941, column: 8, scope: !6756)
!6765 = !DILocation(line: 942, column: 1, scope: !6756)
!6766 = distinct !DISubprogram(name: "ira_allocno_iter_cond", scope: !2105, file: !2105, line: 947, type: !6767, scopeLine: 948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6769)
!6767 = !DISubroutineType(types: !6768)
!6768 = !{!848, !6759, !2893}
!6769 = !{!6770, !6771, !6772}
!6770 = !DILocalVariable(name: "i", arg: 1, scope: !6766, file: !2105, line: 947, type: !6759)
!6771 = !DILocalVariable(name: "a", arg: 2, scope: !6766, file: !2105, line: 947, type: !2893)
!6772 = !DILocalVariable(name: "n", scope: !6766, file: !2105, line: 949, type: !849)
!6773 = !DILocation(line: 0, scope: !6766)
!6774 = !DILocation(line: 951, column: 15, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6766, file: !2105, line: 951, column: 3)
!6776 = !DILocation(line: 0, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6775, file: !2105, line: 951, column: 3)
!6778 = !DILocation(line: 0, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6777, file: !2105, line: 952, column: 9)
!6780 = !DILocation(line: 951, column: 8, scope: !6775)
!6781 = !DILocation(line: 0, scope: !6775)
!6782 = !DILocation(line: 951, column: 20, scope: !6777)
!6783 = !DILocation(line: 951, column: 3, scope: !6775)
!6784 = !DILocation(line: 952, column: 9, scope: !6779)
!6785 = !DILocation(line: 952, column: 25, scope: !6779)
!6786 = !DILocation(line: 952, column: 9, scope: !6777)
!6787 = !DILocation(line: 954, column: 5, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6779, file: !2105, line: 953, column: 7)
!6789 = !DILocation(line: 955, column: 11, scope: !6788)
!6790 = !DILocation(line: 955, column: 7, scope: !6788)
!6791 = !DILocation(line: 956, column: 2, scope: !6788)
!6792 = !DILocation(line: 951, column: 41, scope: !6777)
!6793 = !DILocation(line: 951, column: 3, scope: !6777)
!6794 = distinct !{!6794, !6783, !6795}
!6795 = !DILocation(line: 957, column: 7, scope: !6775)
!6796 = !DILocation(line: 959, column: 1, scope: !6766)
!6797 = distinct !DISubprogram(name: "ira_hard_reg_not_in_set_p", scope: !2105, file: !2105, line: 1135, type: !6798, scopeLine: 1137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6800)
!6798 = !DISubroutineType(types: !6799)
!6799 = !{!848, !849, !5, !863}
!6800 = !{!6801, !6802, !6803, !6804}
!6801 = !DILocalVariable(name: "hard_regno", arg: 1, scope: !6797, file: !2105, line: 1135, type: !849)
!6802 = !DILocalVariable(name: "mode", arg: 2, scope: !6797, file: !2105, line: 1135, type: !5)
!6803 = !DILocalVariable(name: "hard_regset", arg: 3, scope: !6797, file: !2105, line: 1136, type: !863)
!6804 = !DILocalVariable(name: "i", scope: !6797, file: !2105, line: 1138, type: !849)
!6805 = !DILocation(line: 0, scope: !6797)
!6806 = !DILocation(line: 1141, column: 12, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6797, file: !2105, line: 1141, column: 3)
!6808 = !DILocation(line: 1141, column: 8, scope: !6807)
!6809 = !DILocation(line: 0, scope: !6807)
!6810 = !DILocation(line: 1141, column: 54, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6807, file: !2105, line: 1141, column: 3)
!6812 = !DILocation(line: 1141, column: 3, scope: !6807)
!6813 = !DILocation(line: 1142, column: 9, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6811, file: !2105, line: 1142, column: 9)
!6815 = !DILocation(line: 1142, column: 9, scope: !6811)
!6816 = !DILocation(line: 1141, column: 3, scope: !6811)
!6817 = distinct !{!6817, !6812, !6818}
!6818 = !DILocation(line: 1143, column: 14, scope: !6807)
!6819 = !DILocation(line: 1145, column: 1, scope: !6797)
!6820 = distinct !DISubprogram(name: "VEC_rtx_base_length", scope: !670, file: !670, line: 200, type: !6821, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6825)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{!7, !6823}
!6823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6824, size: 64)
!6824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2093)
!6825 = !{!6826}
!6826 = !DILocalVariable(name: "vec_", arg: 1, scope: !6820, file: !670, line: 200, type: !6823)
!6827 = !DILocation(line: 0, scope: !6820)
!6828 = !DILocation(line: 200, column: 1, scope: !6820)
!6829 = distinct !DISubprogram(name: "VEC_rtx_gc_reserve_exact", scope: !670, file: !670, line: 202, type: !6830, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6832)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{!849, !5771, !849}
!6832 = !{!6833, !6834, !6835}
!6833 = !DILocalVariable(name: "vec_", arg: 1, scope: !6829, file: !670, line: 202, type: !5771)
!6834 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6829, file: !670, line: 202, type: !849)
!6835 = !DILocalVariable(name: "extend", scope: !6829, file: !670, line: 202, type: !849)
!6836 = !DILocation(line: 0, scope: !6829)
!6837 = !DILocation(line: 202, column: 1, scope: !6829)
!6838 = !DILocation(line: 202, column: 1, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6829, file: !670, line: 202, column: 1)
!6840 = distinct !DISubprogram(name: "VEC_rtx_base_space", scope: !670, file: !670, line: 200, type: !6841, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6843)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{!849, !5780, !849}
!6843 = !{!6844, !6845}
!6844 = !DILocalVariable(name: "vec_", arg: 1, scope: !6840, file: !670, line: 200, type: !5780)
!6845 = !DILocalVariable(name: "alloc_", arg: 2, scope: !6840, file: !670, line: 200, type: !849)
!6846 = !DILocation(line: 0, scope: !6840)
!6847 = !DILocation(line: 200, column: 1, scope: !6840)
!6848 = distinct !DISubprogram(name: "bmp_iter_set_init", scope: !877, file: !877, line: 224, type: !6849, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6856)
!6849 = !DISubroutineType(types: !6850)
!6850 = !{null, !6851, !6852, !7, !6855}
!6851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5910, size: 64)
!6852 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_bitmap", file: !874, line: 48, baseType: !6853)
!6853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6854, size: 64)
!6854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !876)
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!6856 = !{!6857, !6858, !6859, !6860}
!6857 = !DILocalVariable(name: "bi", arg: 1, scope: !6848, file: !877, line: 224, type: !6851)
!6858 = !DILocalVariable(name: "map", arg: 2, scope: !6848, file: !877, line: 224, type: !6852)
!6859 = !DILocalVariable(name: "start_bit", arg: 3, scope: !6848, file: !877, line: 225, type: !7)
!6860 = !DILocalVariable(name: "bit_no", arg: 4, scope: !6848, file: !877, line: 225, type: !6855)
!6861 = !DILocation(line: 0, scope: !6848)
!6862 = !DILocation(line: 227, column: 19, scope: !6848)
!6863 = !DILocation(line: 227, column: 12, scope: !6848)
!6864 = !DILocation(line: 228, column: 7, scope: !6848)
!6865 = !DILocation(line: 228, column: 12, scope: !6848)
!6866 = !DILocation(line: 0, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6868, file: !877, line: 233, column: 11)
!6868 = distinct !DILexicalBlock(scope: !6848, file: !877, line: 232, column: 5)
!6869 = !DILocation(line: 0, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6868, file: !877, line: 239, column: 11)
!6871 = !DILocation(line: 231, column: 3, scope: !6848)
!6872 = !DILocation(line: 233, column: 16, scope: !6867)
!6873 = !DILocation(line: 233, column: 12, scope: !6867)
!6874 = !DILocation(line: 233, column: 11, scope: !6868)
!6875 = !DILocation(line: 235, column: 13, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6867, file: !877, line: 234, column: 2)
!6877 = !DILocation(line: 236, column: 4, scope: !6876)
!6878 = !DILocation(line: 239, column: 21, scope: !6870)
!6879 = !DILocation(line: 239, column: 26, scope: !6870)
!6880 = !DILocation(line: 239, column: 11, scope: !6868)
!6881 = !DILocation(line: 241, column: 28, scope: !6868)
!6882 = !DILocation(line: 241, column: 16, scope: !6868)
!6883 = distinct !{!6883, !6871, !6884}
!6884 = !DILocation(line: 242, column: 5, scope: !6848)
!6885 = !DILocation(line: 245, column: 11, scope: !6886)
!6886 = distinct !DILexicalBlock(scope: !6848, file: !877, line: 245, column: 7)
!6887 = !DILocation(line: 245, column: 17, scope: !6886)
!6888 = !DILocation(line: 245, column: 22, scope: !6886)
!6889 = !DILocation(line: 245, column: 7, scope: !6848)
!6890 = !DILocation(line: 246, column: 27, scope: !6886)
!6891 = !DILocation(line: 246, column: 32, scope: !6886)
!6892 = !DILocation(line: 246, column: 5, scope: !6886)
!6893 = !DILocation(line: 249, column: 27, scope: !6848)
!6894 = !DILocation(line: 249, column: 46, scope: !6848)
!6895 = !DILocation(line: 249, column: 7, scope: !6848)
!6896 = !DILocation(line: 249, column: 15, scope: !6848)
!6897 = !DILocation(line: 250, column: 14, scope: !6848)
!6898 = !DILocation(line: 251, column: 26, scope: !6848)
!6899 = !DILocation(line: 251, column: 7, scope: !6848)
!6900 = !DILocation(line: 251, column: 12, scope: !6848)
!6901 = !DILocation(line: 257, column: 16, scope: !6848)
!6902 = !DILocation(line: 257, column: 13, scope: !6848)
!6903 = !DILocation(line: 259, column: 11, scope: !6848)
!6904 = !DILocation(line: 260, column: 1, scope: !6848)
!6905 = distinct !DISubprogram(name: "bmp_iter_set", scope: !877, file: !877, line: 393, type: !6906, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6908)
!6906 = !DISubroutineType(types: !6907)
!6907 = !{!848, !6851, !6855}
!6908 = !{!6909, !6910, !6911}
!6909 = !DILocalVariable(name: "bi", arg: 1, scope: !6905, file: !877, line: 393, type: !6851)
!6910 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6905, file: !877, line: 393, type: !6855)
!6911 = !DILabel(scope: !6912, name: "next_bit", file: !877, line: 398)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !877, line: 397, column: 5)
!6913 = distinct !DILexicalBlock(scope: !6905, file: !877, line: 396, column: 7)
!6914 = !DILocation(line: 0, scope: !6905)
!6915 = !DILocation(line: 396, column: 11, scope: !6913)
!6916 = !DILocation(line: 396, column: 7, scope: !6913)
!6917 = !DILocation(line: 396, column: 7, scope: !6905)
!6918 = !DILocation(line: 419, column: 15, scope: !6919)
!6919 = distinct !DILexicalBlock(scope: !6920, file: !877, line: 418, column: 2)
!6920 = distinct !DILexicalBlock(scope: !6905, file: !877, line: 415, column: 5)
!6921 = !DILocation(line: 399, column: 7, scope: !6912)
!6922 = !DILocation(line: 398, column: 5, scope: !6912)
!6923 = !DILocation(line: 399, column: 20, scope: !6912)
!6924 = !DILocation(line: 399, column: 25, scope: !6912)
!6925 = !DILocation(line: 399, column: 14, scope: !6912)
!6926 = !DILocation(line: 401, column: 13, scope: !6927)
!6927 = distinct !DILexicalBlock(scope: !6912, file: !877, line: 400, column: 2)
!6928 = !DILocation(line: 402, column: 12, scope: !6927)
!6929 = distinct !{!6929, !6921, !6930}
!6930 = !DILocation(line: 403, column: 2, scope: !6912)
!6931 = !DILocation(line: 410, column: 15, scope: !6905)
!6932 = !DILocation(line: 410, column: 42, scope: !6905)
!6933 = !DILocation(line: 411, column: 26, scope: !6905)
!6934 = !DILocation(line: 410, column: 11, scope: !6905)
!6935 = !DILocation(line: 412, column: 7, scope: !6905)
!6936 = !DILocation(line: 412, column: 14, scope: !6905)
!6937 = !DILocation(line: 0, scope: !6920)
!6938 = !DILocation(line: 414, column: 3, scope: !6905)
!6939 = !DILocation(line: 417, column: 7, scope: !6920)
!6940 = !DILocation(line: 417, column: 18, scope: !6920)
!6941 = !DILocation(line: 417, column: 26, scope: !6920)
!6942 = !DILocation(line: 419, column: 13, scope: !6919)
!6943 = !DILocation(line: 420, column: 8, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6919, file: !877, line: 420, column: 8)
!6945 = !DILocation(line: 420, column: 8, scope: !6919)
!6946 = !DILocation(line: 422, column: 12, scope: !6919)
!6947 = !DILocation(line: 423, column: 15, scope: !6919)
!6948 = distinct !{!6948, !6939, !6949}
!6949 = !DILocation(line: 424, column: 2, scope: !6920)
!6950 = !DILocation(line: 427, column: 28, scope: !6920)
!6951 = !DILocation(line: 427, column: 16, scope: !6920)
!6952 = !DILocation(line: 428, column: 12, scope: !6953)
!6953 = distinct !DILexicalBlock(scope: !6920, file: !877, line: 428, column: 11)
!6954 = !DILocation(line: 428, column: 11, scope: !6920)
!6955 = !DILocation(line: 430, column: 27, scope: !6920)
!6956 = !DILocation(line: 430, column: 32, scope: !6920)
!6957 = !DILocation(line: 430, column: 15, scope: !6920)
!6958 = !DILocation(line: 431, column: 19, scope: !6920)
!6959 = distinct !{!6959, !6938, !6960}
!6960 = !DILocation(line: 432, column: 5, scope: !6905)
!6961 = !DILocation(line: 433, column: 1, scope: !6905)
!6962 = distinct !DISubprogram(name: "bmp_iter_next", scope: !877, file: !877, line: 382, type: !6963, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6965)
!6963 = !DISubroutineType(types: !6964)
!6964 = !{null, !6851, !6855}
!6965 = !{!6966, !6967}
!6966 = !DILocalVariable(name: "bi", arg: 1, scope: !6962, file: !877, line: 382, type: !6851)
!6967 = !DILocalVariable(name: "bit_no", arg: 2, scope: !6962, file: !877, line: 382, type: !6855)
!6968 = !DILocation(line: 0, scope: !6962)
!6969 = !DILocation(line: 384, column: 7, scope: !6962)
!6970 = !DILocation(line: 384, column: 12, scope: !6962)
!6971 = !DILocation(line: 385, column: 11, scope: !6962)
!6972 = !DILocation(line: 386, column: 1, scope: !6962)
!6973 = distinct !DISubprogram(name: "pseudo_for_reload_consideration_p", scope: !3, file: !3, line: 2799, type: !6974, scopeLine: 2800, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6976)
!6974 = !DISubroutineType(types: !6975)
!6975 = !{!848, !849}
!6976 = !{!6977}
!6977 = !DILocalVariable(name: "regno", arg: 1, scope: !6973, file: !3, line: 2799, type: !849)
!6978 = !DILocation(line: 0, scope: !6973)
!6979 = !DILocation(line: 2803, column: 11, scope: !6973)
!6980 = !DILocation(line: 2803, column: 31, scope: !6973)
!6981 = !DILocation(line: 2804, column: 4, scope: !6973)
!6982 = !DILocation(line: 2804, column: 8, scope: !6973)
!6983 = !DILocation(line: 2804, column: 24, scope: !6973)
!6984 = !DILocation(line: 2803, column: 3, scope: !6973)
!6985 = distinct !DISubprogram(name: "init_live_subregs", scope: !3, file: !3, line: 2811, type: !6986, scopeLine: 2813, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !6988)
!6986 = !DISubroutineType(types: !6987)
!6987 = !{null, !848, !2128, !2139, !849, !939}
!6988 = !{!6989, !6990, !6991, !6992, !6993, !6994, !6995}
!6989 = !DILocalVariable(name: "init_value", arg: 1, scope: !6985, file: !3, line: 2811, type: !848)
!6990 = !DILocalVariable(name: "live_subregs", arg: 2, scope: !6985, file: !3, line: 2811, type: !2128)
!6991 = !DILocalVariable(name: "live_subregs_used", arg: 3, scope: !6985, file: !3, line: 2812, type: !2139)
!6992 = !DILocalVariable(name: "allocnum", arg: 4, scope: !6985, file: !3, line: 2812, type: !849)
!6993 = !DILocalVariable(name: "reg", arg: 5, scope: !6985, file: !3, line: 2812, type: !939)
!6994 = !DILocalVariable(name: "regno", scope: !6985, file: !3, line: 2814, type: !7)
!6995 = !DILocalVariable(name: "size", scope: !6985, file: !3, line: 2815, type: !849)
!6996 = !DILocation(line: 0, scope: !6985)
!6997 = !DILocation(line: 2814, column: 24, scope: !6985)
!6998 = !DILocation(line: 2815, column: 14, scope: !6985)
!6999 = !DILocation(line: 2817, column: 3, scope: !6985)
!7000 = !DILocation(line: 2820, column: 7, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 2820, column: 7)
!7002 = !DILocation(line: 2820, column: 7, scope: !6985)
!7003 = !DILocation(line: 2824, column: 7, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 2824, column: 7)
!7005 = !DILocation(line: 2824, column: 30, scope: !7004)
!7006 = !DILocation(line: 2824, column: 7, scope: !6985)
!7007 = !DILocation(line: 2825, column: 30, scope: !7004)
!7008 = !DILocation(line: 2825, column: 28, scope: !7004)
!7009 = !DILocation(line: 2825, column: 5, scope: !7004)
!7010 = !DILocation(line: 0, scope: !7011)
!7011 = distinct !DILexicalBlock(scope: !6985, file: !3, line: 2829, column: 7)
!7012 = !DILocation(line: 2829, column: 7, scope: !7011)
!7013 = !DILocation(line: 2829, column: 7, scope: !6985)
!7014 = !DILocation(line: 2830, column: 5, scope: !7011)
!7015 = !DILocation(line: 2832, column: 5, scope: !7011)
!7016 = !DILocation(line: 2835, column: 31, scope: !6985)
!7017 = !DILocation(line: 2836, column: 1, scope: !6985)
!7018 = distinct !DISubprogram(name: "RESET_BIT", scope: !2130, file: !2130, line: 82, type: !7019, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7021)
!7019 = !DISubroutineType(types: !7020)
!7020 = !{null, !2129, !7}
!7021 = !{!7022, !7023, !7024}
!7022 = !DILocalVariable(name: "map", arg: 1, scope: !7018, file: !2130, line: 82, type: !2129)
!7023 = !DILocalVariable(name: "bitno", arg: 2, scope: !7018, file: !2130, line: 82, type: !7)
!7024 = !DILocalVariable(name: "oldbit", scope: !7025, file: !2130, line: 86, type: !848)
!7025 = distinct !DILexicalBlock(scope: !7026, file: !2130, line: 85, column: 5)
!7026 = distinct !DILexicalBlock(scope: !7018, file: !2130, line: 84, column: 7)
!7027 = !DILocation(line: 0, scope: !7018)
!7028 = !DILocation(line: 84, column: 12, scope: !7026)
!7029 = !DILocation(line: 84, column: 7, scope: !7026)
!7030 = !DILocation(line: 84, column: 7, scope: !7018)
!7031 = !DILocation(line: 92, column: 42, scope: !7018)
!7032 = !DILocation(line: 92, column: 31, scope: !7018)
!7033 = !DILocation(line: 91, column: 19, scope: !7018)
!7034 = !DILocation(line: 91, column: 3, scope: !7018)
!7035 = !DILocation(line: 87, column: 16, scope: !7025)
!7036 = !DILocation(line: 88, column: 11, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7025, file: !2130, line: 88, column: 11)
!7038 = !DILocation(line: 88, column: 11, scope: !7025)
!7039 = !DILocation(line: 89, column: 2, scope: !7037)
!7040 = !DILocation(line: 89, column: 41, scope: !7037)
!7041 = !DILocation(line: 92, column: 8, scope: !7018)
!7042 = !DILocation(line: 92, column: 5, scope: !7018)
!7043 = !DILocation(line: 93, column: 1, scope: !7018)
!7044 = distinct !DISubprogram(name: "SET_BIT", scope: !2130, file: !2130, line: 63, type: !7019, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7045)
!7045 = !{!7046, !7047, !7048}
!7046 = !DILocalVariable(name: "map", arg: 1, scope: !7044, file: !2130, line: 63, type: !2129)
!7047 = !DILocalVariable(name: "bitno", arg: 2, scope: !7044, file: !2130, line: 63, type: !7)
!7048 = !DILocalVariable(name: "oldbit", scope: !7049, file: !2130, line: 67, type: !848)
!7049 = distinct !DILexicalBlock(scope: !7050, file: !2130, line: 66, column: 5)
!7050 = distinct !DILexicalBlock(scope: !7044, file: !2130, line: 65, column: 7)
!7051 = !DILocation(line: 0, scope: !7044)
!7052 = !DILocation(line: 65, column: 12, scope: !7050)
!7053 = !DILocation(line: 65, column: 7, scope: !7050)
!7054 = !DILocation(line: 65, column: 7, scope: !7044)
!7055 = !DILocation(line: 73, column: 40, scope: !7044)
!7056 = !DILocation(line: 73, column: 29, scope: !7044)
!7057 = !DILocation(line: 72, column: 19, scope: !7044)
!7058 = !DILocation(line: 72, column: 3, scope: !7044)
!7059 = !DILocation(line: 68, column: 16, scope: !7049)
!7060 = !DILocation(line: 69, column: 12, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7049, file: !2130, line: 69, column: 11)
!7062 = !DILocation(line: 69, column: 11, scope: !7049)
!7063 = !DILocation(line: 70, column: 2, scope: !7061)
!7064 = !DILocation(line: 70, column: 41, scope: !7061)
!7065 = !DILocation(line: 73, column: 5, scope: !7044)
!7066 = !DILocation(line: 74, column: 1, scope: !7044)
!7067 = distinct !DISubprogram(name: "print_insn_chains", scope: !3, file: !3, line: 2789, type: !2385, scopeLine: 2790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7068)
!7068 = !{!7069, !7070}
!7069 = !DILocalVariable(name: "file", arg: 1, scope: !7067, file: !3, line: 2789, type: !2193)
!7070 = !DILocalVariable(name: "c", scope: !7067, file: !3, line: 2791, type: !5879)
!7071 = !DILocation(line: 0, scope: !7067)
!7072 = !DILocation(line: 2792, column: 8, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 2792, column: 3)
!7074 = !DILocation(line: 0, scope: !7073)
!7075 = !DILocation(line: 2792, column: 3, scope: !7073)
!7076 = !DILocation(line: 2793, column: 5, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 2792, column: 3)
!7078 = !DILocation(line: 2792, column: 42, scope: !7077)
!7079 = !DILocation(line: 2792, column: 3, scope: !7077)
!7080 = distinct !{!7080, !7075, !7081}
!7081 = !DILocation(line: 2793, column: 30, scope: !7073)
!7082 = !DILocation(line: 2794, column: 1, scope: !7067)
!7083 = distinct !DISubprogram(name: "print_insn_chain", scope: !3, file: !3, line: 2779, type: !7084, scopeLine: 2780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition | DISPFlagOptimized, unit: !2, retainedNodes: !7086)
!7084 = !DISubroutineType(types: !7085)
!7085 = !{null, !2193, !5879}
!7086 = !{!7087, !7088}
!7087 = !DILocalVariable(name: "file", arg: 1, scope: !7083, file: !3, line: 2779, type: !2193)
!7088 = !DILocalVariable(name: "c", arg: 2, scope: !7083, file: !3, line: 2779, type: !5879)
!7089 = !DILocation(line: 0, scope: !7083)
!7090 = !DILocation(line: 2781, column: 31, scope: !7083)
!7091 = !DILocation(line: 2781, column: 3, scope: !7083)
!7092 = !DILocation(line: 2782, column: 27, scope: !7083)
!7093 = !DILocation(line: 2782, column: 3, scope: !7083)
!7094 = !DILocation(line: 2783, column: 27, scope: !7083)
!7095 = !DILocation(line: 2783, column: 3, scope: !7083)
!7096 = !DILocation(line: 2784, column: 1, scope: !7083)
